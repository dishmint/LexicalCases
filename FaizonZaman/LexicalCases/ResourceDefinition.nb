Notebook[{

Cell[CellGroupData[{
Cell["FaizonZaman/LexicalCases", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->199157558,ExpressionUUID->"7e47b526-6c8d-4bdf-a411-74224bc9a67e"],

Cell["Extract lexical patterns from text", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->1461555280,ExpressionUUID->"9aa5979c-83e1-49fd-9867-78b5fafdbb07"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"d1f373e8-4e70-44b1-80a1-cfa815069ce7"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases", 
   "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"e78794cd-70f2-4353-8094-2c452aa4999a"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1240635904,ExpressionUUID->"ff3ed23f-d4d1-4fe9-b29f-26847f6e0062"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"85b6cd1d-54fe-440f-83fb-6c932cbafab6"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1675393764,ExpressionUUID->"143ed637-3360-4d28-b05e-74745a53a151"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"786c5259-55b0-4881-8941-720166e87526"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->537412084,ExpressionUUID->"d944fb2a-4448-4f05-97c5-245b7bb02ab0"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"854f6917-50bb-4728-b2b6-cfd2a7348686"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2116160153,ExpressionUUID->"cfe5c299-9c9b-412b-bbba-c35e650cafd4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "LexicalCases.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "LexicalCases.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1827013504,ExpressionUUID->"dc279030-06c1-4bb5-979f-1d3cdc9d9347"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"9de18a5d-23e9-425b-bcb3-038008e77837"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1894776922,ExpressionUUID->"29738c66-70c3-475b-9931-903e1f917071"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"b85da3ae-d402-4c54-be28-87a873ed5875"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->480726691,ExpressionUUID->"57efd970-2289-4e2a-83eb-6a9e0b223c97"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BoundToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "BoundToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "BoundToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->740015623,ExpressionUUID->"898b0af8-db01-4913-98e2-eb9b3b825501"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CountSummaryLowercase.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CountSummaryLowercase.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CountSummaryLowercase.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1364775984,ExpressionUUID->"9cc1d592-613a-4b22-9539-cc994e7b7589"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExpandPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ExpandPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ExpandPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->517129481,ExpressionUUID->"984200e1-c635-45aa-9376-1c79791f2967"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalCases.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalCases.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->528867758,ExpressionUUID->"20e66eb9-d745-44b8-9bb2-e775d1d787a4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalDispersionPlot.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalDispersionPlot.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalDispersionPlot.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->245593773,ExpressionUUID->"920f81b3-7ba5-472e-8a6c-680258c3f486"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalMap.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalMap.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalMap.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1024412750,ExpressionUUID->"9571508c-5e6d-4574-8340-b2a1e5a6f711"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->230973277,ExpressionUUID->"5a0fff45-887e-4a87-bb87-754a1b08b03f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1464916410,ExpressionUUID->"394d7695-6d1e-438e-823a-6d53d9cb0873"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalSummary.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalSummary.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalSummary.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2097573662,ExpressionUUID->"95c4d3e2-ff8f-41c9-9bc7-469a23624eb8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexigramCount.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexigramCount.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexigramCount.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->246441829,ExpressionUUID->"8baa2cbc-ada8-45de-96e9-367df5328acd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"OptionalToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "OptionalToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "OptionalToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->828988082,ExpressionUUID->"3df1c33e-3422-49f9-ab9b-8555fea7bf91"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sandwich.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "Sandwich.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "Sandwich.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2076276085,ExpressionUUID->"7b717798-5cc8-4fbd-890e-ebcffd348d0e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TextType.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "TextType.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "TextType.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1510380492,ExpressionUUID->"bf63bdec-d7a6-41d9-ac8b-dcc8fbad3226"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ToLexicalPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ToLexicalPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ToLexicalPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1708221504,ExpressionUUID->"1a904f62-ff37-490c-8a00-91f1e38f9860"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"WordToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "WordToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "WordToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->369940985,ExpressionUUID->"c11e215c-08fb-471d-9abe-59f4828253ca"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$LexicalCasesServices.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$LexicalCasesServices.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$LexicalCasesServices.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->632976830,ExpressionUUID->"11085278-e6e6-4638-95fa-f8d5b9b57e49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"f6ade6d6-52ef-466e-af53-766749175dba"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1955078219,ExpressionUUID->"37b87683-77f0-4b86-92f0-ede966fd4629"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCasesOverview.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "LexicalCasesOverview.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "LexicalCasesOverview.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->352343986,ExpressionUUID->"9f3ea894-b6c6-4389-bb30-551fe00aafaf"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"6fe5e14b-fec8-413f-8e66-ed8d23e575c0"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1232957923,ExpressionUUID->"6eeb3e77-8f14-4523-86ae-2b39896712dd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Abstractions.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Abstractions.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Abstractions.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1944259556,ExpressionUUID->"993086f6-a570-4125-ac5c-88713f415fcd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "LexicalCases.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "LexicalCases.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1254101958,ExpressionUUID->"86819a99-5cf9-4c78-b26b-5f997ad55498"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "LexicalPattern.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "LexicalPattern.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->139612801,ExpressionUUID->"02f86805-007e-403e-a422-23d20d818872"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Plots.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Plots.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Plots.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1420203883,ExpressionUUID->"1eebe389-3b87-468a-9df5-7448f565b6d0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Samples.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Samples.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Samples.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->85925176,ExpressionUUID->"d3b56522-a83d-4698-86c5-a2aea7e73160"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Utilities.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Utilities.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1035422248,ExpressionUUID->"47b397ef-8dc0-4130-8773-7c40d70cf419"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Validation.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Validation.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1281730495,ExpressionUUID->"419ad561-8be2-454d-b6d9-9959a01e0279"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->635966408,ExpressionUUID->"9bc2841d-3072-43d3-9b64-5d1c7d3fd045"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->49311844,ExpressionUUID->"53fe91c4-c937-4dc1-b38e-34b4d4c30d02"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tests\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"635f03e8-edc6-4507-b721-5c16f377bfbf"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->661308137,ExpressionUUID->"6eeca843-cffb-4a7f-b3a0-de4dcd19b2eb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Abstractions.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Abstractions.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Abstractions.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1056952604,ExpressionUUID->"ed5733fb-4b97-4c0f-b94e-e5429253a00b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "LexicalCases.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "LexicalCases.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1377985334,ExpressionUUID->"ef38a16f-9a4c-4601-ba51-f875f4c4f2a9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "LexicalStructure.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "LexicalStructure.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1335859290,ExpressionUUID->"16484ae3-9791-4f0b-b59f-b62e55971372"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Patterns.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Patterns.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Patterns.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1993041292,ExpressionUUID->"655b6ab6-5590-41d3-afea-2a21572d1628"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Utilities.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Utilities.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->595068738,ExpressionUUID->"e1c620c5-2094-42c3-95bf-119af4d595c5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Validation.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Validation.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->488935487,ExpressionUUID->"9afd1b1f-391f-46d4-9a65-efb33de58d45"]
}, Open  ]],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1266296587,ExpressionUUID->"913358c5-14e2-41ed-8afb-94805820777f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7ad9fe76-0c7e-4142-b6bf-b0a0d5102dfd"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"f0f82ee6-156b-486e-90c8-c4954b6c92e3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dfcff3d5-8d8e-4861-93e3-26a2199d5538"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"82c8f9f9-2153-478c-b409-0d05deaedabc"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"theory of evolution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12589928057553956`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of natural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05204033494515863],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {1.5, -39.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of the\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03258049298266305],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, 38.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of inheritance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022408302865904],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, 54.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of molecular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022408302865904],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, -62.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of transformation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {52.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of recapitulation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {2.5, 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of modernization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-0.5, -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of transmutation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-0.5, 79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of electromagnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-0.5, -88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of punctuated\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-84.5, 20.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of sociocultural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-0.5, 90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of pangenesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 101.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of associationism\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-0.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of discontinuous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {101.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of consciousness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-103.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biological\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02108149545937021],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, 113.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biodiversity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {102.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of continental\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-0.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of interpersonal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-106.5, 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biogeography\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {103.5, -58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of bureaucracy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-102.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gravitation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-97.5, 66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of alienation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {101.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of evolutionary\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-102.5, -68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of anticyclones\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {100.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of intelligent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {100.5, 71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of heredity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-0.5, 125.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of exploitation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-99.5, 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of neuronal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {96.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of distribution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-0.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of universal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-99.5, -82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of descent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[1, 0.75, 0]], {98.5, -85.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"theory of commodity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-96.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of organic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020196957188347686`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {92.5, 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of adaptation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-0.5, 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of knowledge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-97.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of envariance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-0.5, -138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of divergence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {97.5, -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Darwinism\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-95.5, 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of diffraction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {94.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of relativity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-89.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of diseases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {88.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of cultural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-90.5, 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of derivation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {90.5, 118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Darwinian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-0.5, 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of chemistry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {145.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of branching\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-0.5, -150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of education\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-88.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of genetics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {144.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of emotion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {85.5, -125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of species\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-85.5, 129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of sexual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02108149545937021],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {84.5, 130.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of economic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-0.5, 161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gradual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-84.5, -136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {83.5, -139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of emotions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-0.5, -162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of historical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-161.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of clinamen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {84.5, 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of business\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-85.5, 141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of society\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-81.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of human\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {80.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of mankind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-0.5, 173.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of common\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-0.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of higher\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-79.5, 155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of complex\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {82.5, 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of history\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-173.5, 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of value\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020196957188347686`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-78.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of creation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {79.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of humors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {79.5, 166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of geology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-0.5, -186.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Charles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-80.5, 166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Forms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-0.5, 185.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of social\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-178.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of general\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {183.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of memes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-185.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of cosmic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {189.5, 33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {76.5, -177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of George\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {76.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of mind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-189.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of honest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {181.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Gustaf\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {175.5, 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of fitness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-75.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of magic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {168.5, 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of linear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-184.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of island\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-74.5, -178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of group\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-176.5, -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of how\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-178.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Lewis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {175.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of race\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-161.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of body\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {185.5, -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Ernst\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-174.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of early\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {161.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-173.5, -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of 1809\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-0.5, 196.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of man\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-162.5, 112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of atoll\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {168.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of kin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-185.5, 43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of an\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {153.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of a\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-149.5, 126.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  ImageSize->{633.8671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-280., 276.}, {-195., 203.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8672490849354277`*^9, 3.867249101873516*^9}, 
   3.867249183387917*^9, 3.8672520845880423`*^9, 3.872268095919383*^9, 
   3.872268269840005*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"7d577cfb-6896-47b0-b322-096306ed5e39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "489ddd6a-0b93-4509-84fa-2829105e9cad"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"6d3cbf98-5787-46aa-ba92-4ba7bac67e08"],

Cell[TextData[{
 "Search text for lexical patterns. While similar to ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a6718430-fbc0-4e0e-a725-e72908d81de4"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6ecdecb1-4117-4b83-8bca-7a3c13fe0834"],
 " etc., content types can be used freely in a StringExpression (as opposed \
to expressing complex lexical patterns in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "707866ba-f851-474e-a517-402c00aad77a"],
 " wrapper). Files, search index objects, and Wikipedia queries are \
supported. Results are returned in a summary object which supports several \
subvalues. Consult the documentation for usage."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867249288040543*^9, 3.8672494722485037`*^9}, {
  3.867251889550839*^9, 3.867251893349916*^9}, {3.867251924252048*^9, 
  3.867252040200535*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"0513d90e-45e4-407d-8e87-889b4c0190e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7430aa47-9b6d-4ad0-98ab-d7af5f922754"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"12006bca-6dbc-460a-8a26-b12ec442cb0c"],

Cell[TextData[{
 "This functionality came about when I needed to find adjectives before \
certain phrases. I initially gathered article text from Wikipedia, then used ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "657c3d98-698d-4a9b-9a0a-9cdf6a9dfcf1"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f719ea67-ee0e-448c-8327-cc80f8dbd597"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "11e789b4-ecf5-45ac-b72f-0436b7eb8010"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "82f9a55b-d8ee-4a0a-b55e-b030463a8377"],
 " for example), but it turned out to be slow. So I implemented some lexical \
pattern objects for use in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox[
     StyleBox["StringExpression", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"], "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cd466345-9b99-4104-bd5d-d917d216bab5"],
 "'s. This way I can search for the string pattern with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "97dd67d1-d58f-448b-95ae-5a49e42e99c5"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867791235048098*^9}, {
   3.867791269135138*^9, 3.867791355006954*^9}, 3.867791480276322*^9, {
   3.8828185148804393`*^9, 3.882818727724704*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"066f6fd1-b550-4a7d-b4c5-903ab168d6cc"],

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e6d11956-aa6b-4e3d-9b37-db99af17ce1d"],
 " is used internally to extract examples of a content type from the source \
text. These examples then replace the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextType", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7ee4cb2d-8537-4346-9075-a1075a0756b5"],
 " in the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringExpression", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fe3a6864-281f-42a5-bb15-f81f8341cb02"],
 ". You can see the lexical pattern generated from a piece of text with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ExpandPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/ExpandPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "05553b1b-0ff8-454a-aba7-ff6547178a07"],
 ". Note that this means, for example, if you have ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["TextType", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox["\"\<Adjective\>\"", "TextContentsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "StringTypeLink",
      StripOnInput->False],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"ref/textcontent/Adjective",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "650d9146-21c1-462f-bed4-c004cba6c374"],
 " in your lexical pattern, the token will be replaced by all text snippets \
identified as adjectives in the source text."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, {
  3.867791371520297*^9, 3.867791424085564*^9}},
 CellTags->"DefaultContent",
 CellID->95094794,ExpressionUUID->"b691f1d8-83c9-4aef-8a84-6d37dc743602"],

Cell[TextData[{
 "I'd also like to say thanks to Swastik Banerjee for helping me improve ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SearchIndexObject", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/SearchIndexObject",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9ad6c6f4-bfab-4cd8-bf5f-83e60ee211c6"],
 " support!"
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, 
   3.867791366308352*^9, {3.86779144799393*^9, 3.867791450914543*^9}, 
   3.879713261083514*^9},
 CellTags->"DefaultContent",
 CellID->601398866,ExpressionUUID->"63301e25-efae-4d57-a6c4-9395a8ee4813"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "38404330-47ed-4f4a-8d2c-03ff5873c7c8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"1e6b1f47-e1e0-4a76-91f9-e61c67fceadb"],

Cell["FaizonZaman`LexicalCases`", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.91537554390294*^9, 3.915375549069252*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->310388821,ExpressionUUID->"5bd10f6f-0119-4f33-a950-ce18d87608ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4f6b8890-f89a-4078-a1af-db8ac9592265"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"a389a1c8-4b3d-48a7-8b5c-a854b299e046"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "MainGuidePageString" -> "Documentation/English/Guides/LexicalCases.nb", 
   "Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"de41ca4e-8d9a-478e-ac3b-1e6a581326ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c367b6d4-5a8a-418d-b116-32c121943307"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"aa306085-a169-4a3d-aad4-9f971c72a9fa"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{{3.91522334954283*^9, 3.915223351147139*^9}, {
  3.915491425748333*^9, 3.915491426774502*^9}},
 CellLabel->"In[2]:=",
 CellID->926712916,ExpressionUUID->"c66c6b20-67c9-4124-89b9-e9a2d883ad93"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "131a5004-07be-4173-97b5-0eab59552511"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->468286435,ExpressionUUID->"fcc31bf9-c68b-46d3-af7a-1743e523210d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->633295841,ExpressionUUID->"cf5cc426-5100-46c4-b0d1-d1710f1b6093"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->256310072,ExpressionUUID->"eb55145d-350c-418c-b293-88b0e494e9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{{3.882937778205875*^9, 3.882937778932868*^9}},
 CellLabel->"In[3]:=",
 CellID->1340259360,ExpressionUUID->"6fc9babd-7c71-4f1a-bee4-9a83f055a042"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tests", "=", 
     RowBox[{
      RowBox[{"PacletExtensionFiles", "[", 
       RowBox[{
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
            "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> 
             False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Symbol", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]},
           "IconizedObject"]],
         PacletResource`DefinitionNotebook`$PacletDirectory,
         SelectWithContents->True,
         Selectable->False], ",", "\"\<Resource\>\""}], "]"}], "//", 
      RowBox[{"Values", "/*", "Flatten"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"QuietEcho", "@", 
    RowBox[{"TestReport", "[", "tests", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{
  3.882937822011593*^9, {3.882937870592862*^9, 3.882937898936121*^9}, {
   3.915322483631161*^9, 3.915322484346751*^9}, {3.915334420271572*^9, 
   3.9153344242710943`*^9}, {3.915414414238249*^9, 3.915414415187216*^9}, {
   3.91598883821037*^9, 3.915988849604813*^9}, {3.915989031567638*^9, 
   3.915989032111862*^9}, {3.91598915160536*^9, 3.915989175970685*^9}},
 CellLabel->"In[1]:=",
 CellID->980444637,ExpressionUUID->"e69dc852-d732-4961-b281-adac06945d92"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"], 
                ImageSizeCache -> {12., {3., 9.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: LexicalStructure.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"98.59%\"", ShowStringCharacters -> False], 
                    0.9859154929577465, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["71", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             InsetBox[
              PaneBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"], 
                ImageSizeCache -> {12., {3., 9.}}], Alignment -> Center, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]], AspectRatio -> 1, Axes -> False, 
             Background -> GrayLevel[0.93], Frame -> True, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 1}, {0, 1}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: LexicalStructure.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"98.59%\"", ShowStringCharacters -> False], 
                    0.9859154929577465, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["71", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["70", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failure count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.5061280000000000002`5.112579252348153", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity"], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: LexicalStructure.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7685556410177040403 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431401517*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "45235144-fc36-4db6-aff6-0ddacdd36b0a", "TestID" -> 
         "LexicalStructureTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalStructure.wlt", "EvaluationID" -> 
         "dbcbd050-baf9-45c2-9da6-fc79dfc2a5a8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalStructure[
            StringExpression[
             Alternatives["computer", "computers"], 
             FaizonZaman`LexicalCases`TextType["Verb"]]]], "ExpectedOutput" -> 
         HoldForm[
           TextElement[{
             TextElement[{
               Alternatives[
                TextElement[{"computer"}, <|"GrammaticalUnit" -> "Text"|>], 
                
                TextElement[{"computers"}, <|
                 "GrammaticalUnit" -> "Text"|>]]}, <|
              "GrammaticalUnit" -> "Alternatives"|>], 
             TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TextType"|>]}, <|
            "GrammaticalUnit" -> "StringExpression"|>]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           TextElement[{
             TextElement[{
               Alternatives[
                TextElement[{"computer"}, <|"GrammaticalUnit" -> "Text"|>], 
                
                TextElement[{"computers"}, <|
                 "GrammaticalUnit" -> "Text"|>]]}, <|
              "GrammaticalUnit" -> "Alternatives"|>], 
             TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TextType"|>]}, <|
            "GrammaticalUnit" -> "StringExpression"|>]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000248`2.544966678658208, "CPUTimeUsed" -> 0.00025000000000030553`,
          "MemoryUsed" -> 5304, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4030137098562438503 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314029053*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0faa5367-424e-4bdf-bb78-6d1a94901857", "TestID" -> 
         "ShortStringTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "86717436-45b7-44f6-ae04-319e5c5aba0c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleSentence, 
            FaizonZaman`LexicalCases`$SampleStringExpression]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "best key lime pie", "Position" -> {{5, 21}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "best key lime pie", "Position" -> {{5, 21}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.301876`6.51259692270082, "CPUTimeUsed" -> 0.2509440000000005, 
         "MemoryUsed" -> 1380304, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7861482038177735396 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314029388*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "44da74fc-995f-42f3-ae13-45980db05936", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "1ec308f2-5318-432c-abd4-d50226bf849e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["great ", 
             FaizonZaman`LexicalCases`BoundToken["machine"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005409`3.8836319792740537, "CPUTimeUsed" -> 0.005410999999998722, 
         "MemoryUsed" -> 11736, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4800681156470128485 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314029642*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6fca0276-dbd1-4493-8dc8-7ce89c73fb4f", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "ca16a15d-455e-471e-9414-3c672d5f808f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["great ", 
             FaizonZaman`LexicalCases`BoundToken["machine"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004755`3.8276655191054245, "CPUTimeUsed" -> 0.004754000000001035, 
         "MemoryUsed" -> 7560, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3024010176576178643 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314029888*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a2b40a95-faf9-453c-b4bf-a9f2f4ae43d5", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "8f03fc30-8955-4fe9-b1f6-d5d2a581966f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["weak ", 
             FaizonZaman`LexicalCases`BoundToken["machines"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004935`3.8438021548376478, "CPUTimeUsed" -> 0.004944999999999311, 
         "MemoryUsed" -> 8080, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8938092569110696054 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314030126*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "58048c9d-d72d-4ad9-8d32-e1379a2522da", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "641f7801-0711-4c78-ab16-46da17d3583a", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["weak ", 
             FaizonZaman`LexicalCases`BoundToken[
              RegularExpression["\\w+"]]]]["Data"]], "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004995`3.849050490393993, "CPUTimeUsed" -> 0.00498900000000102, 
         "MemoryUsed" -> 8568, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8130736399524511107 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314030355*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7a25236b-51ef-4446-98f1-4b8b90ecd921", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "6160391f-7f8a-4236-8905-0d765f49f820", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases["He was number 1!", 
            StringExpression["number ", 
             FaizonZaman`LexicalCases`BoundToken[DigitCharacter]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "number 1", "Position" -> {{8, 15}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "number 1", "Position" -> {{8, 15}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004989`3.8485285017711734, "CPUTimeUsed" -> 0.004992999999999803, 
         "MemoryUsed" -> 7760, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1114530821040981575 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314030588*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a1d5326f-fba5-4cc8-9e3c-751c9f21ce2f", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test5", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "384db42d-062e-4e3d-83db-a05f4e9187f7", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression[
             Alternatives["great", "weak"], " ", 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["machine", "machines"]]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>, <|
            "Match" -> "weak machines", "Position" -> {{30, 42}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>, <|
            "Match" -> "weak machines", "Position" -> {{30, 42}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.007054`3.998950453163462, "CPUTimeUsed" -> 0.007047999999999277, 
         "MemoryUsed" -> 27816, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8025578900297429655 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314030869*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f49f40a9-4826-4ab9-bd8e-5c168d4c9904", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "0db2d885-bd11-44a8-af5f-47aef5180547", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[2], " screen"]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "a blank screen", "Position" -> {{144, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "with the screen", "Position" -> {{480, 494}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "a blank screen", "Position" -> {{144, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "with the screen", "Position" -> {{480, 494}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.006525`3.9650955138423125, "CPUTimeUsed" -> 0.00650900000000032, 
         "MemoryUsed" -> 16232, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5147947921462523656 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314031104*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "90c8a102-30a4-42a4-8883-7fac039ccf35", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "25d428a5-0227-488c-95bd-39dd1b0e04c9", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[2, 4], " screen"]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "sat with a blank screen", 
             "Position" -> {{135, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "would end with the screen", 
             "Position" -> {{470, 494}}|>}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "sat with a blank screen", 
             "Position" -> {{135, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "would end with the screen", 
             "Position" -> {{470, 494}}|>}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.007497`4.025402508678104, "CPUTimeUsed" -> 
         0.007499999999999396, "MemoryUsed" -> 13432, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 9048493336150455766 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314031351*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c45ae222-775c-454f-bb55-68d18a764b01", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "e5982a76-b986-4d9e-bb8b-030ef73d7b8b", "Input" -> HoldForm[Length[
             Composition[Join, Flatten][{
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[2], " screen"]]["Data"], 
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[3], " screen"]]["Data"], 
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[4], " screen"]][
               "Data"]}]] === RightComposition[DeleteDuplicates, Length][
             FaizonZaman`LexicalCases`LexicalCases[
             FaizonZaman`LexicalCases`$SampleParagraph, 
              StringExpression[
               FaizonZaman`LexicalCases`WordToken[2, 4], " screen"], Overlaps -> 
              True]["Data"]]], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.024188`4.534114957765896, "CPUTimeUsed" -> 0.024201999999999835`, 
         "MemoryUsed" -> 18072, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5191371944988204989 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314031621*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5b8fe9a2-b481-4585-99e7-515aff60ecaf", "TestID" -> 
         "LexicalCases-DocExamples-OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "99afa531-cf13-4ca9-95c6-a21f566d1bd2", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "this is a cool string. this is a string.", 
            StringExpression["this is a", 
             FaizonZaman`LexicalCases`OptionalToken["cool"], "string"]][
           "Data"]], "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "this is a cool string", "Position" -> {{1, 21}}|>, <|
            "Match" -> "this is a string", "Position" -> {{24, 39}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "this is a cool string", "Position" -> {{1, 21}}|>, <|
            "Match" -> "this is a string", "Position" -> {{24, 39}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00667`3.974640831748543, "CPUTimeUsed" -> 0.006672000000000011, 
         "MemoryUsed" -> 9720, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8887252948679760083 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314031896*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5a122ca9-0c6f-4e4c-8259-45c6ec8ea02c", "TestID" -> 
         "LexicalCases-DocExamples-Sandwich-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "4e56f1f6-a2b8-45d2-8248-90c5e13a42e8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`Sandwich[
             FaizonZaman`LexicalCases`WordToken[2, "KeepContractions"], 
             " he "]]["Data"]], "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "but here he sat with", "Position" -> {{123, 142}}|>, <|
            "Match" -> "understand why he couldn't even", 
             "Position" -> {{266, 296}}|>, <|
            "Match" -> "eight hours he was prepared", 
             "Position" -> {{404, 430}}|>}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "but here he sat with", "Position" -> {{123, 142}}|>, <|
            "Match" -> "understand why he couldn't even", 
             "Position" -> {{266, 296}}|>, <|
            "Match" -> "eight hours he was prepared", 
             "Position" -> {{404, 430}}|>}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.007907`4.048526736629496, "CPUTimeUsed" -> 
         0.007893999999999401, "MemoryUsed" -> 11848, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 1529584058354223588 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431403262*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5105ab84-5210-4c7f-bd63-ace7cec59ca5", "TestID" -> 
         "LexicalCases-DocExamples-Sandwich-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "da129886-7852-4a38-b2e4-424feeb1e92a", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "a nice car is good.", FaizonZaman`LexicalCases`Sandwich[
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]], 
              FaizonZaman`LexicalCases`BoundToken["car"]] :> $CellContext`w]],
          "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "a nice car is good.", StringExpression[
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]], 
              FaizonZaman`LexicalCases`BoundToken["car"], 
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]]] :> $CellContext`w]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "a nice car is good.", StringExpression[
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]], 
              FaizonZaman`LexicalCases`BoundToken["car"], 
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]]] :> $CellContext`w]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000449`2.8027613388353125, "CPUTimeUsed" -> 0.0004499999999998394, 
         "MemoryUsed" -> 3832, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4984013804998469719 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314032927*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b6c070c6-edb2-45de-96ce-4075738200a1", "TestID" -> 
         "LexicalCases-DocExamples-TextType-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "86ccb2b9-9877-4203-8a23-e0f65451ff6d", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, StringExpression[
              Pattern[$CellContext`adjective, 
               FaizonZaman`LexicalCases`TextType["Adjective"]], 
              " screen"] :> $CellContext`adjective]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         3.945114`6.746574555150715, "CPUTimeUsed" -> 3.560359, "MemoryUsed" -> 
         50104320, "IntermediateTestsTree" -> {}, "Outcome" -> "Success", 
         "FailureType" -> None|>], 420919153999356949 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314033176*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "476c76fb-8639-408e-a7c0-14616d3eb6ff", "TestID" -> 
         "LexicalCases-DocExamples-TextType-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/LexicalCases.wlt", "EvaluationID" -> 
         "79165559-3bcb-4fdc-84f0-0bd0e954d2cf", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, StringExpression[
              Pattern[$CellContext`adjectiveOrDeterminer, 
               FaizonZaman`LexicalCases`TextType[
                Alternatives["Adjective", "Determiner"]]], 
              " screen"] :> $CellContext`adjectiveOrDeterminer]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>, <|
            "Match" -> "the", "Position" -> {{485, 494}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>, <|
            "Match" -> "the", "Position" -> {{485, 494}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.03104`4.642436710418142, "CPUTimeUsed" -> 0.04463500000000131, 
         "MemoryUsed" -> 29384, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3131575079211341158 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314046606*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e0ec998e-d278-4aab-b815-0bf755e5b88c", "TestID" -> 
         "LexicalMapTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "6fe3f372-aa1d-4657-a963-ea60455b31f3", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[ToUpperCase, "This is cool", 
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Verb"]]]], "ExpectedOutput" -> 
         HoldForm["This IS COOL"], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm["This IS COOL"], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.006294`3.949441736409191, "CPUTimeUsed" -> 
         0.0052760000000002805`, "MemoryUsed" -> 6464, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3899097579042909358 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314046902*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c991cb85-076e-48d9-83e0-87fd5da0dbc3", "TestID" -> 
         "LexicalMapTest2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "22b14f77-e6a3-4390-8ad1-b7ade96fde12", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[
            RightComposition[StringReverse, ToUpperCase], "This is cool", 
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Verb"]]]], "ExpectedOutput" -> 
         HoldForm["This SI LOOC"], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm["This SI LOOC"], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.005671`3.904174645117993, "CPUTimeUsed" -> 
         0.004758999999999958, "MemoryUsed" -> 6296, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 7645114984217987239 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314047164*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "83a4d732-6892-4660-a03f-70c821dd900f", "TestID" -> 
         "LexicalMapTest3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "cb293576-3fcc-4dfb-a0c8-dd732a8884d5", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[
           "**" <> # <> "**"& , "This is cool", 
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Verb"]]]], "ExpectedOutput" -> 
         HoldForm["This **is** **cool**"], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm["This **is** **cool**"], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005638`3.901640069367573, "CPUTimeUsed" -> 0.004881999999998499, 
         "MemoryUsed" -> 6264, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7154140789036108228 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443140474043`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9e7b5420-740a-41e0-8502-8715030954fa", "TestID" -> 
         "LexicalMapTest4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "8a0ecb35-3519-4b7c-8b50-b32ddea059dc", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[
           "**" <> # <> "**"& , "This is cool", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Verb"]]]]], "ExpectedOutput" -> 
         HoldForm["This **is** **cool**"], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[
           StringReplace[
           "This is cool", FaizonZaman`LexicalCases`Private`iExpandPattern[
              StringExpression[
               FaizonZaman`LexicalCases`Private`LexicalPatternDelimiter[
               "Start"]]] :> ("**" <> # <> "**"& )[
             FaizonZaman`LexicalCases`Abstractions`Private`match$]]], 
         "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[StringExpression, "invld"], 
             FaizonZaman`LexicalCases`Private`LexicalPatternDelimiter[
             "Start"], FaizonZaman`LexicalCases`Private`iExpandPattern[
               StringExpression[
                FaizonZaman`LexicalCases`Private`LexicalPatternDelimiter[
                "Start"]]] :> ("**" <> # <> "**"& )[
              FaizonZaman`LexicalCases`Abstractions`Private`match$]]]}, 
         "AbsoluteTimeUsed" -> 0.006132`3.9381171440143317, "CPUTimeUsed" -> 
         0.005300000000000082, "MemoryUsed" -> 12280, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Failure", "FailureType" -> 
         "SameTestFailure"|>], 7913598332259077049 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314047679*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "14051207-1a1b-4a67-b6d9-275dbe44f22c", "TestID" -> 
         "LexigramCountTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "afcba493-52c5-4294-8a19-f08ac9a9e8a2", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TextType["Verb"], 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[3], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[3], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000185`2.4176867262350057, "CPUTimeUsed" -> 0.0001870000000003813, 
         "MemoryUsed" -> 4048, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7708797244040087080 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431404791*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4cc7d16a-b077-4633-b6ac-75a25cca9ab7", "TestID" -> 
         "LexigramCountTest2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "78a411bc-ff44-4598-a2e5-8392d8eb73f3", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TextType["Verb"], 
             FaizonZaman`LexicalCases`OptionalToken["away"], 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[
           Interval[{3, 4}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{3, 4}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000396`2.748210183757504, "CPUTimeUsed" -> 0.0003820000000001045, 
         "MemoryUsed" -> 4544, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1164083710425636169 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314048133*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "25b0aa01-8506-415a-b664-3ea2ed7a8101", "TestID" -> 
         "LexigramCountTest3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "0312d027-9d1b-46c2-868e-8d1a670fac98", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression[
             FaizonZaman`LexicalCases`TextType["Adjective"], "hello", 
             FaizonZaman`LexicalCases`OptionalToken[
              FaizonZaman`LexicalCases`TextType["Verb"]]]]], "ExpectedOutput" -> 
         HoldForm[
           Interval[{2, 3}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{2, 3}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000321`2.657020030236866, "CPUTimeUsed" -> 0.00032199999999882323`,
          "MemoryUsed" -> 3768, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5413727707911038671 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314048353*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "af5e2b7c-6412-4483-8bfe-889618aef051", "TestID" -> 
         "LexigramCountTest4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Abstractions.wlt", "EvaluationID" -> 
         "4cd37e60-4386-4f9d-a452-795d646f2dca", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression[
             FaizonZaman`LexicalCases`TextType["Adjective"], "hello", 
             FaizonZaman`LexicalCases`OptionalToken[
              StringExpression[
               FaizonZaman`LexicalCases`TextType["Verb"], 
               FaizonZaman`LexicalCases`OptionalToken["there"]]]]]], 
         "ExpectedOutput" -> HoldForm[
           Interval[{2, 4}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{2, 4}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000728`3.012646377145027, "CPUTimeUsed" -> 0.0007289999999997576, 
         "MemoryUsed" -> 3960, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5927727455564888487 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314064183*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4e8ea17f-58bf-4fb6-8afe-8cce5922d198", "TestID" -> 
         "LexicalPatternQTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "70cdc473-daa5-4dfd-a992-ce52a09750c3", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
           FaizonZaman`LexicalCases`$SampleStringExpression]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000115`2.2112128381856015, "CPUTimeUsed" -> 
         0.00011499999999919908`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8964930269372779658 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314064524*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0a1f3db9-6ba0-4663-93b2-309976ab1806", "TestID" -> 
         "LexicalPatternQ-UnvaluedSymbols-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "7b860e2e-1b20-49d5-ad74-d37322d0afb3", "Input" -> HoldForm[
           FailureQ[
            FaizonZaman`LexicalCases`LexicalPatternQ[
             StringExpression["Alice", $CellContext`xxx, 
              FaizonZaman`LexicalCases`TextType["Adverb"]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000135`2.2808487663269976, "CPUTimeUsed" -> 
         0.00013600000000124624`, "MemoryUsed" -> 4528, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3401026364944203631 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314064812*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c68e814a-4843-4db7-85bb-2b0b5987370f", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "0dd34778-4879-43d0-8376-23eb4b458a05", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression[
             Alternatives["great", "weak"], 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["machine", "machines"]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000317`2.6515742600497454, "CPUTimeUsed" -> 
         0.00031800000000004047`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3083875707780498840 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314065053*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dfb9c970-29c3-4ca5-8631-daff779f7725", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "a4bb4b89-347c-41a3-9f05-ab1cca476ef3", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["weak", 
             FaizonZaman`LexicalCases`BoundToken["machines"]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000202`2.4558663672786154, "CPUTimeUsed" -> 
         0.00019700000000177909`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 6784766275645218171 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314065281*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f023fc47-7eec-46ad-b55c-0fbee381ada7", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "e92fc749-7daa-4a26-872b-f109f79a4019", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["weak", 
             FaizonZaman`LexicalCases`BoundToken[
              RegularExpression["\\w+"]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000188`2.4246728470956738, "CPUTimeUsed" -> 0.0001879999999996329, 
         "MemoryUsed" -> 3520, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5998292571769979630 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314065505*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a04ef2e9-976a-4807-b227-7b2029484c6a", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "d8ade54f-fbb2-493a-880b-33aefd910746", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["number", 
             FaizonZaman`LexicalCases`BoundToken[DigitCharacter]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000189`2.4269768020052336, "CPUTimeUsed" -> 0.0001889999999988845, 
         "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 9074328961279578921 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314065718*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "e7073ee1-5f44-4a82-a63a-3be69e1f234a", "TestID" -> 
         "BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "141b3874-5573-4b42-9435-4d5f7f03f17c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00003`1.627636252551654, "CPUTimeUsed" -> 0.000030000000000640625`,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7367410816429183907 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314065928*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d60f9182-ef9d-44c4-8554-b7ce0c813842", "TestID" -> 
         "BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "c3a4f2a9-496b-4c02-8960-93373088406d", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000029`1.612912995730948, "CPUTimeUsed" -> 
         0.00002999999999886427, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3502420588312649253 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431406617*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "74d7522f-52a5-4957-86b3-6e18260586cd", "TestID" -> 
         "BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "e36924ef-7853-4b30-828e-b25b47eb8c5e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ActualMessages" -> {},
          "AbsoluteTimeUsed" -> 0.000029`1.612912995730948, "CPUTimeUsed" -> 
         0.00002999999999886427, "MemoryUsed" -> 3416, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 1991241408935789519 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314066419*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2115b36c-ff97-43b1-99c4-d8d69fd35930", "TestID" -> 
         "LexicalPatternQ-WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "7eb4d835-3e80-45fa-876c-8b26034e578e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["pattern", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000115`2.2112128381856038, "CPUTimeUsed" -> 
         0.00011599999999845068`, "MemoryUsed" -> 3464, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 6242170019668194958 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314066627*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ef758f91-11af-44d7-842e-2bdc30ec0cb7", "TestID" -> 
         "LexicalPatternQ-WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "08ebfafc-be52-4297-b4b7-0ba5c458cd50", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["number", 
             FaizonZaman`LexicalCases`WordToken[1, 2]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000113`2.2035934413154115, "CPUTimeUsed" -> 
         0.00011299999999891952`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 6468847166589108477 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443140668383`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3b68bfea-c43f-4e91-9b50-5c2064a474a4", "TestID" -> 
         "LexicalPatternQ-WordToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "8a5aa315-5502-493c-b30b-a10309818f84", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this", "is", 
             FaizonZaman`LexicalCases`WordToken[1, "KeepContractions"], 
             "place"]]], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000119`2.2260619592245225, "CPUTimeUsed" -> 
         0.00012099999999826139`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4815561650811786860 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314067088*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "028020b2-8941-45b5-b0fc-63b378cedc16", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "aaee4e27-41de-4690-8452-c6645e709a04", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this is a", 
             FaizonZaman`LexicalCases`OptionalToken[
              FaizonZaman`LexicalCases`TextType["Adjective"]], "string"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000188`2.4246728470956698, "CPUTimeUsed" -> 0.0001889999999988845, 
         "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4234150115604947444 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314067295*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4a593e20-c8bd-4c98-bc89-7df071a18289", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "dee661bc-2caf-4c6f-837b-7c35fdc5ffe4", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["cool", 
             FaizonZaman`LexicalCases`OptionalToken["crazy"], "computer"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000183`2.4129660875624213, "CPUTimeUsed" -> 
         0.00018400000000085015`, "MemoryUsed" -> 3520, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5265296278131694560 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314067511*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2331e8d5-d02d-47e2-a6b8-5e5504e8fd36", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "3a424938-a253-47c4-a76d-01bb71a9373f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this", 
             FaizonZaman`LexicalCases`OptionalToken[
              StringExpression[
               FaizonZaman`LexicalCases`WordToken[1], 
               FaizonZaman`LexicalCases`TextType["Adjective"]]], "place"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000198`2.4471801880935202, "CPUTimeUsed" -> 
         0.00019799999999925433`, "MemoryUsed" -> 3808, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 7904688774919135187 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314067758*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "2616504d-5c09-48de-8339-3bbab9fda43f", "TestID" -> 
         "LexicalPatternQ-Sandwich-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "810298d3-0276-43b8-800c-5567d2fe452a", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            FaizonZaman`LexicalCases`Sandwich[
             FaizonZaman`LexicalCases`WordToken[1], 
             FaizonZaman`LexicalCases`BoundToken["car"]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00019`2.4292685987848204, "CPUTimeUsed" -> 0.00019099999999916406`,
          "MemoryUsed" -> 3520, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4957025410510571385 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314068006*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ea89f3a0-2044-4eca-8238-32554826dd52", "TestID" -> 
         "LexicalPatternQ-TextType-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Validation.wlt", "EvaluationID" -> 
         "7a86d059-e7e3-402d-8a35-954f2568dcfe", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[StringExpression[
              Pattern[$CellContext`adjective, 
               FaizonZaman`LexicalCases`TextType["Adjective"]], 
              "sentence"] :> $CellContext`adjective]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000128`2.2577249674798603, "CPUTimeUsed" -> 0.0001270000000008764, 
         "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8814142525300343611 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314082087*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3c216e7b-30f4-46c6-bd4e-e1c9cae4af7f", "TestID" -> 
         "BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "a60eed09-1f63-4e28-842c-4580521dba4c",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000028`1.5976730291742103, "CPUTimeUsed" -> 
         0.000027999999998584713`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5893308243128133226 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314082351*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "550b1cfc-7597-4c55-9b13-47b83c5fe071", "TestID" -> 
         "BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "9e5ae05e-2d32-4bb5-ba15-db46bf80d077",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000035`1.6945830421822676, "CPUTimeUsed" -> 
         0.00003500000000045134, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3530809782505097966 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314082631*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "80e24247-ba14-4751-bb83-7b3f31081bbd", "TestID" -> 
         "WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "0c9d7f11-e063-446c-abcf-53aea6ef3969",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000028`1.5976730291742103, "CPUTimeUsed" -> 
         0.00002800000000036107, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 1764498300875358398 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314082856*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4c852104-3356-40da-9034-4a8d2c9714c9", "TestID" -> 
         "WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "ca8bc426-5fcf-4de6-998a-ef45b4ca1ed8",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000028`1.5976730291742114, "CPUTimeUsed" -> 
         0.00002899999999961267, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 2813910162527102281 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314083217*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4a2a0d5f-7996-4e3e-966a-2190101d85e6", "TestID" -> 
         "OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "464c4517-4b78-4cdc-a3aa-5fa54171dea0",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TextType["Adjective"]]], 
         "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TextType["Adjective"]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TextType["Adjective"]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.5818787619909789, "CPUTimeUsed" -> 
         0.000028000000002137426`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8919229707239188650 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314083521*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "99c47f5c-8ad0-44d4-92a9-ca82b4a153c7", "TestID" -> 
         "OptionalToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "b4cd1404-e2e8-4a8b-b407-397a2b73d9ac",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TextType["Adjective"]], "sentence"]]], 
         "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TextType["Adjective"]], "sentence"]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TextType["Adjective"]], "sentence"]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000029`1.612912995730948, "CPUTimeUsed" -> 0.00002800000000036107, 
         "MemoryUsed" -> 3432, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7118598719378182296 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314083824*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "4952b4bf-7606-4f76-9124-53201d1aabe8", "TestID" -> "TextType-Test1",
          "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "fb8ac572-27c2-4560-bde4-fab0b083578e",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`TextType["Adjective"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`TextType["Adjective"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`TextType["Adjective"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.581878761990981, "CPUTimeUsed" -> 
         0.000026999999999333113`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3293223888079263056 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443140840573`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6639b81f-920b-4192-b2a3-1f724226e812", "TestID" -> "TextType-Test2",
          "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "5e8fe470-9351-490d-b61d-6ee8cdb019ad",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`TextType[
            Alternatives["Adjective", "Noun"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`TextType[
            Alternatives["Adjective", "Noun"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`TextType[
            Alternatives["Adjective", "Noun"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000028`1.5976730291742125, "CPUTimeUsed" -> 
         0.000027999999998584713`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4472136886844643418 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431408433*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dac7356c-084c-4805-8ed8-fc590f6424ff", "TestID" -> "Sandwich-Test1",
          "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "c8fc1c0b-9ec2-49e8-9154-857a2936781a",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Sandwich[
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Noun"]], " computer "]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Noun"]], " computer ", 
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Noun"]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Noun"]], " computer ", 
            FaizonZaman`LexicalCases`TextType[
             Alternatives["Adjective", "Noun"]]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000028`1.5976730291742083, "CPUTimeUsed" -> 
         0.00002899999999961267, "MemoryUsed" -> 3480, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 1408841757030924272 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.92084431408456*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7fcc76c3-c0d0-4c8c-b196-dca9f5833f03", "TestID" -> "Sandwich-Test2",
          "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "639c5d26-e30e-43d5-abd3-0eb692bbfa04",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Sandwich[
            FaizonZaman`LexicalCases`OptionalToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]]], " computer "]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
            FaizonZaman`LexicalCases`OptionalToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]]], " computer ", 
            FaizonZaman`LexicalCases`OptionalToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[
            FaizonZaman`LexicalCases`OptionalToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]]], " computer ", 
            FaizonZaman`LexicalCases`OptionalToken[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]]]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000029`1.6129129957309458, "CPUTimeUsed" -> 
         0.000029000000001389026`, "MemoryUsed" -> 3488, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 420611664675017319 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443140848393`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "948aa68a-7062-48d5-b376-d9540230194f", "TestID" -> 
         "LexicalPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Patterns.wlt", "EvaluationID" -> "a20ad4e6-1b26-41c0-a8d6-8032c1f19c03",
          "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TextType["Verb"], 
             FaizonZaman`LexicalCases`TextType["Adverb"]]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TextType["Verb"], 
             FaizonZaman`LexicalCases`TextType["Adverb"]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TextType["Verb"], 
             FaizonZaman`LexicalCases`TextType["Adverb"]]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000037`1.7187167218989892, "CPUTimeUsed" -> 
         0.000036999999998954536`, "MemoryUsed" -> 3416, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5086873550551828086 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314102528*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b43d3b8a-6c55-4e86-8e21-a9ded8009332", "TestID" -> 
         "Utilities-ExtractHeads-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "5499d4e8-21a5-41f0-a0cd-c16eb8741757", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
            StringExpression[
             FaizonZaman`LexicalCases`TextType["Adverb"], 
             FaizonZaman`LexicalCases`TextType["Adjective"], 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["specie", "species"]]]]], "ExpectedOutput" -> 
         HoldForm[{
           FaizonZaman`LexicalCases`TextType, 
            FaizonZaman`LexicalCases`TextType, Alternatives, 
            FaizonZaman`LexicalCases`BoundToken, StringExpression}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           FaizonZaman`LexicalCases`TextType, 
            FaizonZaman`LexicalCases`TextType, Alternatives, 
            FaizonZaman`LexicalCases`BoundToken, StringExpression}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742442, "CPUTimeUsed" -> 
         0.000035999999999702936`, "MemoryUsed" -> 3504, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4378617175115180633 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314102816*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "090f18df-0948-46a9-ac12-ecd2e78a14cc", "TestID" -> 
         "Utilities-ExtractHeads-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "58009b10-9031-434f-a71c-4b06cb17cf17", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
            StringExpression[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Determiner"]], "screen"]]], 
         "ExpectedOutput" -> 
         HoldForm[{
           Alternatives, FaizonZaman`LexicalCases`TextType, 
            StringExpression}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           Alternatives, FaizonZaman`LexicalCases`TextType, 
            StringExpression}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000034`1.6819939148742489, "CPUTimeUsed" -> 0.00003400000000119974,
          "MemoryUsed" -> 3480, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3351019302204496577 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314103062*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "77d0734e-24ee-425e-991f-29a68c470156", "TestID" -> 
         "Utilities-ExtractHeads-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "8ee743d3-95c3-4ee3-b657-7bb2f1cf628f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
           FaizonZaman`LexicalCases`$SampleStringExpression]], 
         "ExpectedOutput" -> 
         HoldForm[{FaizonZaman`LexicalCases`TextType, StringExpression}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{FaizonZaman`LexicalCases`TextType, StringExpression}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000062`1.9429066873302483, "CPUTimeUsed" -> 0.0000620000000015608, 
         "MemoryUsed" -> 3528, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1876204100104185174 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443141033483`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1873ffdf-4fda-4e20-af7b-51e72b79a388", "TestID" -> 
         "Utilities-GetFileExtension-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "4bcbc1f6-26c9-4c8b-96d9-365d04b8239a", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`GetFileExtension[
            File[
             
             FileNameJoin[{$TopDirectory, "SystemFiles", "Components", 
               "TextSearch", "ExampleData", "Text", 
               "AliceInWonderland.txt"}]]]], "ExpectedOutput" -> 
         HoldForm["txt"], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm["txt"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000433`2.787002894185357, "CPUTimeUsed" -> 0.0004349999999995191, 
         "MemoryUsed" -> 24136, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 755193734122246454 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314103671*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "146bb60a-eaca-47e6-b470-0db3d489a78f", "TestID" -> 
         "Utilities-MatchTrim-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "0ca65af0-9978-4bb3-b1dc-459864877c4e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`MatchTrim[
           True, {<|"Match" -> " past", "Position" -> {{49, 53}}|>, <|
             "Match" -> " few", "Position" -> {{54, 57}}|>, <|
             "Match" -> " blank", 
              "Position" -> {{145, 150}, {180, 185}, {505, 510}}|>, <|
             "Match" -> " single", "Position" -> {{304, 310}}|>}]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "past", "Position" -> {{50, 53}}|>, <|
            "Match" -> "few", "Position" -> {{55, 57}}|>, <|
            "Match" -> "blank", 
             "Position" -> {{146, 150}, {181, 185}, {506, 510}}|>, <|
            "Match" -> "single", "Position" -> {{305, 310}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "past", "Position" -> {{50, 53}}|>, <|
            "Match" -> "few", "Position" -> {{55, 57}}|>, <|
            "Match" -> "blank", 
             "Position" -> {{146, 150}, {181, 185}, {506, 510}}|>, <|
            "Match" -> "single", "Position" -> {{305, 310}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000239`2.528912898780129, "CPUTimeUsed" -> 0.00023999999999979593`,
          "MemoryUsed" -> 5712, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1457727935771881197 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314103989*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d1455853-7eb8-43d5-9341-88b765e7a02b", "TestID" -> 
         "Utilities-OptionsJoin-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "3428fc20-56f5-4cda-ad40-e497bf980d94", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`OptionsJoin[
           FaizonZaman`LexicalCases`LexicalCases, 
            FaizonZaman`LexicalCases`LexicalDispersionPlot]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "Service" -> "Wikipedia", "StringTrim" -> True, IgnoreCase -> 
            False, Overlaps -> False, MaxItems -> 50, 
            FaizonZaman`LexicalCases`MaxCategories -> 5, Language -> 
            "English", AspectRatio -> GoldenRatio^(-1), ImageSize -> 
            Automatic, PlotRange -> All, PlotTheme -> Automatic, PlotLabel -> 
            Automatic, FaizonZaman`LexicalCases`HideMissing -> False, 
            FaizonZaman`LexicalCases`DataJoin -> False, 
            FaizonZaman`LexicalCases`DispersionPlotFunction -> Automatic}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "Service" -> "Wikipedia", "StringTrim" -> True, IgnoreCase -> 
            False, Overlaps -> False, MaxItems -> 50, 
            FaizonZaman`LexicalCases`MaxCategories -> 5, Language -> 
            "English", AspectRatio -> GoldenRatio^(-1), ImageSize -> 
            Automatic, PlotRange -> All, PlotTheme -> Automatic, PlotLabel -> 
            Automatic, FaizonZaman`LexicalCases`HideMissing -> False, 
            FaizonZaman`LexicalCases`DataJoin -> False, 
            FaizonZaman`LexicalCases`DispersionPlotFunction -> Automatic}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000072`2.00784749426326, "CPUTimeUsed" -> 0.00007300000000043383, 
         "MemoryUsed" -> 4160, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 115840799268084608 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443141042542`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9dd3685c-2957-4c49-aede-59c602e9dfa3", "TestID" -> 
         "Utilities-ReplaceEmptyListWithMissing-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "1474ddd5-8a2d-4305-be6d-d881aaf46dd8", "Input" -> HoldForm[
           
           FaizonZaman`LexicalCases`Utilities`ReplaceEmptyListWithMissing[{{}}\
]], "ExpectedOutput" -> HoldForm[{
            Missing["NoMatches"]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{
            Missing["NoMatches"]}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00004`1.752574989159956, "CPUTimeUsed" -> 
         0.000042000000000541604`, "MemoryUsed" -> 3448, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4343389078956019450 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314104513*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fa70ae67-e7ac-45c1-b719-0510f9522da3", "TestID" -> 
         "Utilities-SupportedFileQ-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "d02397ec-b199-4a39-a650-5e854bbdf4ae", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`SupportedFileQ[
            File[
             
             FileNameJoin[{$TopDirectory, "SystemFiles", "Components", 
               "TextSearch", "TextSearch.m"}]]]], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000225`2.502697515943354, "CPUTimeUsed" -> 0.0002250000000003638, 
         "MemoryUsed" -> 3984, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 2195857766609657617 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314104771*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a606a0a6-3d79-441b-903f-0933bde7f468", "TestID" -> 
         "Utilities-UnwrapAlternatives-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "91f361c3-c3db-4c3e-a492-81a964748ed4", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`UnwrapAlternatives[{
             Alternatives["A", "B"]}]], "ExpectedOutput" -> HoldForm[
           Alternatives["A", "B"]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Alternatives["A", "B"]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000032`1.6556649761518978, "CPUTimeUsed" -> 
         0.000031999999999143824`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8851993645451316615 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314105022*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9340adab-a523-47fe-b93e-53de01ab9125", "TestID" -> 
         "Utilities-WrapAlternatives-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "31943265-5288-4d36-af84-6b5f2616b728", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`WrapAlternatives[
            Alternatives["A", "B"]]], "ExpectedOutput" -> HoldForm[{
            Alternatives["A", "B"]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{
            Alternatives["A", "B"]}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000031`1.6418766916662648, "CPUTimeUsed" -> 
         0.000031999999999143824`, "MemoryUsed" -> 3448, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4718670792903384783 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314105267*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "57ec6b03-8895-4fa5-ace6-7e1850a88bc6", "TestID" -> 
         "Utilities-StopWordQ-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "7342b150-fdfd-4b23-ad7c-1bd686c00529", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`StopWordQ["the"]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.001954`3.441439557214746, "CPUTimeUsed" -> 0.001946999999999477, 
         "MemoryUsed" -> 5968, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 155638492946238193 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314105469*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3c189f83-a4b9-43d1-86a6-8ad34ae222e8", "TestID" -> 
         "Utilities-StopWordQ-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "146ec346-902f-45ed-80ff-288fb75b2c47", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`StopWordQ["math"]], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000038`1.730298594448804, "CPUTimeUsed" -> 0.00003899999999923409, 
         "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7803719756811549019 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443141057663`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "d065e639-7736-44e5-a53c-1b89670e4bec", "TestID" -> 
         "Utilities-ExpandPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "0bdbf5b6-4966-4f14-9c41-54bdaa715ab7", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`Sandwich[
             FaizonZaman`LexicalCases`TextType[
              Alternatives["Adjective", "Noun"]], " computer "]]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             StringExpression[WordBoundary, 
              Alternatives["past", "few", "blank", "single"], WordBoundary], 
             StringExpression[WordBoundary, 
              Alternatives[
              "words", "fingers", "weeks", "writer", "block", "screen", 
               "front", "day", "mind", "type", "word", "process", "hours", 
               "computer", "today", "blank"], WordBoundary]], " computer ", 
            Alternatives[
             StringExpression[WordBoundary, 
              Alternatives["past", "few", "blank", "single"], WordBoundary], 
             StringExpression[WordBoundary, 
              Alternatives[
              "words", "fingers", "weeks", "writer", "block", "screen", 
               "front", "day", "mind", "type", "word", "process", "hours", 
               "computer", "today", "blank"], WordBoundary]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             StringExpression[WordBoundary, 
              Alternatives["past", "few", "blank", "single"], WordBoundary], 
             StringExpression[WordBoundary, 
              Alternatives[
              "words", "fingers", "weeks", "writer", "block", "screen", 
               "front", "day", "mind", "type", "word", "process", "hours", 
               "computer", "today", "blank"], WordBoundary]], " computer ", 
            Alternatives[
             StringExpression[WordBoundary, 
              Alternatives["past", "few", "blank", "single"], WordBoundary], 
             StringExpression[WordBoundary, 
              Alternatives[
              "words", "fingers", "weeks", "writer", "block", "screen", 
               "front", "day", "mind", "type", "word", "process", "hours", 
               "computer", "today", "blank"], WordBoundary]]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.022764`4.50776357476828, "CPUTimeUsed" -> 0.017903000000000446`, 
         "MemoryUsed" -> 5512, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 681792775405956771 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314105981*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "30b0aa67-4fbd-4ddf-a9f2-8d6e6ccdf50e", "TestID" -> 
         "Utilities-ExpandPattern-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "c2db43b2-3260-40f8-aa94-5ee023126952", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern[
           "this is the best music ever.", 
            StringExpression[
             FaizonZaman`LexicalCases`TextType["Adjective"], " music"]]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[WordBoundary, 
            Alternatives["best"], WordBoundary, " music"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[WordBoundary, 
            Alternatives["best"], WordBoundary, " music"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005641`3.9018710975573834, "CPUTimeUsed" -> 0.004201000000000121, 
         "MemoryUsed" -> 4160, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3708435263720580525 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443141061993`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "267bbb23-dbf8-4506-868d-7f5caad9a74c", "TestID" -> 
         "Utilities-ExpandPattern-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "ed63dfce-4a77-45ce-9c41-7e019d59aeb3", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern["to be.", 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[1], 
             FaizonZaman`LexicalCases`TextType["Verb"]]]], "ExpectedOutput" -> 
         HoldForm[
           StringExpression[WordBoundary, 
            Repeated[WordCharacter], WordBoundary, " ", WordBoundary, 
            Alternatives["be"], WordBoundary]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[WordBoundary, 
            Repeated[WordCharacter], WordBoundary, " ", WordBoundary, 
            Alternatives["be"], WordBoundary]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00579`3.91319356155943, "CPUTimeUsed" -> 
         0.004998000000000502, "MemoryUsed" -> 4208, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5575315224500815926 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314106457*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "90b5b440-06c3-4e4e-96b3-bc5aa7d4e16c", "TestID" -> 
         "Utilities-LexicalPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "088afbde-83e8-44b2-b578-bb0bc3cd5fd9", "Input" -> HoldForm[
           StringCases[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TextType[
               Alternatives["Adjective", "Determiner"]], " screen"]]]], 
         "ExpectedOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.028387`4.603634495595992, "CPUTimeUsed" -> 0.059326000000000434`, 
         "MemoryUsed" -> 5080, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 564626621639682801 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.9208443141066732`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "61139ae4-c9b9-40f1-b45c-6b143a9f1d3c", "TestID" -> 
         "Utilities-LexicalPattern-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "04d7d3e9-0ebd-49ba-877a-fbd5a767e72a", "Input" -> HoldForm[
           StringCases[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TextType[
               Alternatives["Adjective", "Determiner"]], " screen"]]]], 
         "ExpectedOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.023146`4.514990946619006, "CPUTimeUsed" -> 0.024282999999998722`, 
         "MemoryUsed" -> 5048, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3989001708291379037 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314106894*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "1b8d6446-210b-431d-b8ed-e57e8305824e", "TestID" -> 
         "Utilities-LexicalPattern-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "e12d76e1-627d-4819-b4ac-20d9593548d0", "Input" -> HoldForm[
           StringPosition[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TextType["Determiner"], 
              FaizonZaman`LexicalCases`TextType["Adjective"], " screen ", 
              FaizonZaman`LexicalCases`TextType[
               Alternatives["Preposition", "Verb"]]]]]], "ExpectedOutput" -> 
         HoldForm[{{144, 160}, {176, 201}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[{{144, 160}, {176, 201}}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.020299`4.4579896414014035, "CPUTimeUsed" -> 0.02023999999999937, 
         "MemoryUsed" -> 8904, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5020200999265035080 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.920844314107103*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a3c7f382-ba67-4242-9736-d9d9f3cad1a8", "TestID" -> 
         "Utilities-LexicalPattern-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/\
Tests/Utilities.wlt", "EvaluationID" -> 
         "4a51ddc8-05b1-482c-b8ea-53b39f2b30b3", "Input" -> HoldForm[
           StringMatchQ["Alice walked quickly", 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression["Alice ", 
              FaizonZaman`LexicalCases`TextType["Verb"], 
              FaizonZaman`LexicalCases`TextType["Adverb"]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005099`3.8580000097994676, "CPUTimeUsed" -> 0.004405000000000214, 
         "MemoryUsed" -> 5976, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsSucceededKeys" -> CompressedData["
1:eJw1lUuOJEUMhmfBCeAE3MDvxwVGGokVR2CBxIrFcH/xRUW0qpSd6Yq0/T/s
/v2vf//8+/u3b99+/sLlj39+/vfjN266JjMrVLRbgo9/4vwV9ZadLAuffPGe
0hgTH863p2/d8yNSo0qqFrWJyU/cxUJO8sou5e24eWZ9ZC1rVaW2JOPG1aW9
fDctUvmxP3HuIl3GlBZ3NPvmH7HMnhWx7bCtvPHU6OVrGmVpXnn7XImJdffS
lODVqnd+gasbsQM8rnvzzzTvb0z1donM7V+J5YTkeIaZ58zlYQkq2GK5qyXl
j19P3GQpAV+7Duq46V39QJHTqHrA303jsyvb2fRr3PmLdx1SThHTXlrzm6fp
PnfczXLlKPniLUPfFkdZbmXk0VkBlIZNNICMuuczYMF4q48uDmi98SVoHR+v
wElMPxkLNsVqP69B/+v/iG4kDhjFLeX67DA+wKLFQxGJbj/VE0hhTfo0xVxf
dXcMmzQG2iW/y5Oxw43qar1Hf7vnsU7j5QGerY7vs48nPjTUGlejKcsn465a
KFxAMWmwwe3HDsEiuoWrUevhqih6bi2ALnWi+9lfYUYrKX1cPnX7DEPUlDMX
wI2OuDZPKwwEXvwO95Hv/NGbCt1x3OKpj2caaJwOtOTbGOzZf5TuMSizIR4I
+XgDz5mWAC4lsEU9HohirLGUlEPojUPvcb4fjyRm8714z8vg1DNDmMV4frrr
GhMnx4E6A/Dbv+rgQ1zvQBuOvLq29OA451gdFd84RrSpg7gmgt0QeuseRSb0
OMVZE2FtX2MExEIGhkbbn1zQXsM2AhSU2fB40/vZV5iHoeEHKb+yO8yiLcZl
1APXPhmhu4gownOd1I5P2SYtiGjPzOjzLStW0pmKY52GBNXtz/EzxgFQkNJK
lLzdgEAMthyfFeXjkWaKvUhRVbJ3Tz5xqbp+yuWxCSvr5qFYnRFlM5Awmp30
KYsFeSTMzmNB79fKlrPZGK2zn2PlrSQe+4x1ssVoqN/IsfQnHIMy0QyM4K3L
MXuKZQX+xCXKRqhPGia2jNFVlnYd7l+aPUuZGWJ+2Sl02k8q4yN7yOGfCsrJ
//RbLMg=
     "], "TestsFailedWrongResultsKeys" -> {7154140789036108228}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{
  3.915217131255471*^9, 3.915223423316843*^9, 3.915223807067596*^9, 
   3.915224280400477*^9, 3.9152245229183617`*^9, 3.91522473140483*^9, 
   3.915227060932069*^9, 3.915232544061518*^9, 3.915232746359155*^9, 
   3.915234403143548*^9, 3.915234529888905*^9, 3.915234731832155*^9, 
   3.915235036114087*^9, 3.915236468635243*^9, 3.915236607492506*^9, 
   3.915236913147826*^9, 3.915237235943968*^9, 3.915237474511105*^9, 
   3.915237678824603*^9, 3.915237783990218*^9, 3.9152415659145193`*^9, 
   3.91524164499333*^9, 3.9152417547540503`*^9, 3.915241828623279*^9, 
   3.915241996759042*^9, 3.91524258974199*^9, 3.915242637866022*^9, 
   3.915244632774193*^9, 3.915244987941425*^9, 3.915246184104547*^9, 
   3.915246368459784*^9, 3.915316529072913*^9, 3.9153165920591803`*^9, 
   3.9153190719040833`*^9, 3.915321921585931*^9, 3.915322088725594*^9, 
   3.915322475159468*^9, 3.915323844756925*^9, 3.915324356780695*^9, 
   3.91532569727697*^9, 3.915325931377699*^9, 3.915333430866786*^9, 
   3.915334414174007*^9, 3.915335503962533*^9, 3.915335791628475*^9, 
   3.915336438448731*^9, 3.915336495935656*^9, 3.915337153988495*^9, 
   3.915337202198267*^9, 3.9154069678646183`*^9, 3.91540726538559*^9, 
   3.9154074984007263`*^9, 3.915408097053218*^9, 3.9154082927625837`*^9, 
   3.9154084719406843`*^9, 3.9154094989840107`*^9, 3.915410685210462*^9, 
   3.9154117638929577`*^9, 3.91541249707123*^9, 3.915414008252395*^9, 
   3.91541442495371*^9, 3.9154155629163527`*^9, 3.9154733819680777`*^9, 
   3.915473993187195*^9, 3.915475571822549*^9, 3.915475669671786*^9, 
   3.9154897515890617`*^9, 3.915491611913517*^9, 3.915493134376525*^9, 
   3.915493279970874*^9, 3.915982159178525*^9, 3.915983514471959*^9, 
   3.915983573354049*^9, 3.915984991274476*^9, 3.915986865583518*^9, 
   3.915988766263148*^9, 3.915989023843706*^9, {3.915989167140481*^9, 
   3.915989182955406*^9}, 3.920833771667491*^9, 3.920844197629675*^9, 
   3.92084432066989*^9},
 CellLabel->"Out[1]=",
 CellID->1147928811,ExpressionUUID->"c5cee9b2-b94b-462b-af17-76525bb21ebc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"76a92072-a72b-4a37-a162-12d1635b0072"],

Cell["\<\
Search for verb phrases beginning with \"Alice\" in \"Alice in Wonderland\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251031141988*^9, 3.867251071471037*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"786f2166-a1a5-484a-8c41-7fb12e2f2581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alice", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867250923402269*^9, 3.867250945044845*^9}},
 CellLabel->"In[4]:=",
 CellID->222665312,ExpressionUUID->"f8385797-7cb8-48be-a17a-473d630f70fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "=", 
  RowBox[{"LexicalCases", "[", 
   RowBox[{"alice", ",", 
    RowBox[{"\"\<Alice \>\"", "~~", 
     RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}]}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867250886366906*^9, 3.867250907934865*^9}, {
   3.8672509485911818`*^9, 3.867250992716366*^9}, 3.915989465847641*^9},
 CellTags->"DefaultContent",
 CellLabel->"In[6]:=",
 CellID->593829399,ExpressionUUID->"4488b8e6-f913-4b73-ac5b-a381b9f08e31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FaizonZaman`LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "Alice had not", 
       "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
      "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
      "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
      "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
      "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
      "Match" -> "Alice was soon", "Position" -> {{18290, 18303}}|>, <|
      "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
      "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
      "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
      "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
      "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
      "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
      "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
      "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
      "Match" -> "Alice got up", 
       "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
      "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
      "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
      "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
    "Dataset" -> 
    Dataset[{<|
       "Match" -> "Alice had not", 
        "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
       "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
       "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
       "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
       "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
       "Match" -> "Alice was soon", "Position" -> {{18290, 18303}}|>, <|
       "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
       "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
       "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
       "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
       "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
       "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
       "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
       "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
       "Match" -> "Alice got up", 
        "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
       "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
       "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
       "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 18], <||>], 
    "Source" -> "Text", "SourceData" -> 
    "1:eJydfdtyI0mSnT5Bn5DkC7tlAE2XB5k1H8rYVexp7lRX1RY5UxqzNYMFgASQzbxgMhNEoz9\
RXyU/x90jIgHWaiVdplkkkBkXD78cP+5xtey+Pv3n//2f/tPjfP7h87dPxfOvD8XX+59/fnye//\
r540NxX1ersjiGoViW26ptq3ZbjF2xLcfitexPxVj15broNsVQjSP+uDwVu7KXfw6j/\
Kdri3FXFsvQvsyK0PKTu/CKD7bduLOnrbvb4nMr7+n6YjzihYN8aRfWxb4s9/L8qpVP8UFd95I/\
HwPry7CWB82K5WEsqpHfa7tiX63GQ18OeOiqa2W0Qxirrh3kafKxWXGN8Rx3Qb408OGHocT4At8yu5\
bfdYftbtQ1kM8fK/xm/P6T310XTx3HjnHJn4ZqXfaYpLwSo+6ObdFU8tof5O/Hsq4L+S8+v+\
oO9XpWbLAA8s91OBVNWJf80qYsa13soZblOHEdh/Gwr9Y/\
zmQC5YhP4Wv7ugyDjAyzaMILXhzkWdVwmq92QcZwxGtkJ+\
WHftzxO2PfHZY1vyKbyi087PkKmSYfoQOqhqoc+Lq2GA7rddnWMpLi264ay+\
JrWC5l5bFA8rX2pShPsjx9aItV3cmqqlDcFs/yv7o4vvtDp1Pryyb0LwEjqSAzQTaoldVYV2uTQXz+\
BfvrX2kOq12B/ZChj1zzE4RpVwZdDRvUoL+\
uxqGsN7KLn3fFWj5yVcQfHmULguyFrMvYdUUdxvLquvhZnszZZs8KsvHySTxQ5DDIK8c0BnmD/\
ELkctWFcb7vVi9ySLCQtXxYhDhQOvGLEY/dHfq+wtlpZzbDYQz9KL/\
hJLjvo4qEfG1TB5ETeciq74aBf6cgYaXiaWlLWRiZhnxHnlbKS4JsQtqasqKohIthziDKPh0ctfBSp\
mnx5OJ49Tz+fNTq0FednPnTjG/HVtvQsFybqhQ5CxscUZszNv33wzBye6sGS40h4s/\
7bi8q4IjR1qHfljbm+a6r5dgd2rWJt8x/W94Wj/JBiA+WoGvKVsbHbx/lR1tJf/MVJC5/\
nH5oGPtQ4WSLeqormWooxkPbyjHDag/yUApT3Kp1tYcWimKP180gh/\
E33AZ9t6ofmbSNjutJ2Q1LLOkwdvs91lEmAJGM+\
4V162S28Q8bETV8UGfHjS7LRgVkiUHzGKxFJ1CX3BYPVVQFVC5Y8/gZ7jFfgj+\
ZPumO9UllLGrcWsZ84pmSXZq5guK66bzl7TXFn9Phuf6l6odRJWGkUMtnGpeho4uoKsVGlX5U1/\
gtjt1azr8LRWhPVA93uv74cjpEmB4U6xAPPhVpy2WXHbBDIX85yZ96SGNdy29NbvfLLvTrgV+Aop/\
L0+vXcrgrqJxs021DhnCUiewHV4iq93cHakmRnn25HW6Lp12pGsGk+HfRQJu+a0S+Sh+kvcXXcx+\
GoVyLMOsC1GFZYozXn7/ef/rLQ/Hb/dff7j/ef3gQMyTrNHOdsBVjJ/tQDWG/\
78QqqvjbKpbNfjzd8fFQmxBCSjcsbC9nDMOQoVFym9CGrW7UXveBNjYbcLZSQ5IbGTc+fVt8oCys4/\
9eFd9oXHj8oU1VGa06PeqiH8p2/e4NC1DWgw6x48BMFXayuOJxyNfGUL+Yn2AH47a4/\
lC1YXcjb2kqUTnyimQRxm7e4nDPqNdtTHL8RKX/wK+pxGGGYbz9sbh+\
LHbdvqS84IliicpmKUOnmxEOK9htsadV/ULpK8McJ0NWAA+\
bFc2JZgSvO1bDrjh1BxU7CoNOF5LXwKjo7GQlx6S5MZx19yfm2G02ZyZWdn53aPZX/h8+\
lB5DkFlTBgNM3p4+mIj/i8rqWpZDvIFX2GwTad0WvK17xaFNrp2qK5gJMUqq7vmO3+\
WVIiPiD1Rt1Gcq7nYcD/vJOcYLeI7xBhnV+\
s61286cNdfcdSfTxSEQKYwDnDoTELtRji5ePuiOwmaeokqEGE7kaaJzlxjkIB+\
5hy7PjIOeCSw8DOj3bBPdCHUfqATlRzn8LVSQCLX80NOX4P7LR3XVj7tqeBEhlZF2RzoS8r2bwT0rE\
YAn14PqF5U7jKEyT4P6U19C+\
bTXYIEzJ0QnyxWEsudMYex1Y6YmhPuGT87kf48F3BwIWLXSU1DL42R3l/\
Dkevm7yFAdGlF3u9Busc7UYnh333WbuNoq3V2vG37T85W00Hy+\
jde0Lz5Sw8sQYdA1kpkmU7mkmyKfcReOWws9BB3PbxxUdVFw5DyoBJRq2GQUMztFNQRyCGsz0PxOU6\
3XcCKOXWueODbGTx01lEUzsFRhK06yLKNb9fNzJss1ig8xwk2dcdB00nHyulo07lactOEtL7eDsHJd\
xNOo2lOx7Wp5RfFSnvS0cT1EUDYwpIVMPJiWoiGT+\
KShvyJGolNVmClq3Qn7B3bgTk1GkNFcuc838sxCO3BT1M8VX4teAf74gv0yUzw0vo8zqDyxxuJDjaU\
aGmpUHDZRmi3/pq9ubotfuyOWdOZh31BKDLTWI6VSMrtcU9kPcSZHhCfRj5Wnuy1X/\
aGrlB0XqBLfDyyAeSObSjw/GVbVrnYw1LJqZp7VLcEq6JfSDmjAoctjynJibMtalQ+\
8cPluub4y8cUC2EN1CPLVjZ0FdfZrj12DrqlrvBmnSHPFXcAWBPXW1U9VK/\
7SwlCoU5HFESoD5kRAf8bwuBa9W0ucNhZbsdwyPRgjSrk4Mtwf86Vas/0u+\
dxCTBbKm8GQ6kX63rq0odHXqt5aU+KWPcVyI5tYmgrUD6y6ruZaYF8HVQkxzuXkZVQtX7+\
jqQ34Zo94O66nKINbqthrGb2HgaJ0cYLN1j7aA4fdgYrMnXnxpYaVbA9iO/\
W9Hz3Erjbyc4fTLat7pDqgChV1d+\
v2mcZiGVYvha2rnXhZmA2cBQau1C6cvZoRtWuQp07xBUhEfngUV8Cy9QcZn3ndB42592UnnnecQ5wB\
1QnwCZyhFCJE2V92/I8qmB+uVbWLy4J1r0/RMFIj2VHKl/NHE3gcjkyPt+\
XqxTWKvUFP3D7sYbzhrc7UraHa7uAmXn/4+vjpr8VvD+\
KyluEwVpsDQuW9qN2Rca56mRbj1WISRWZkhz+J4/d4Qyshy0MNiDHS+67WhtMgKnCogyYVcAEGvRA/\
eOjaxQ3WW6YqX83DGfVC5TdbmUbpyIIIAU7Guodo0MYFn6c991ofK0+riA+FuhFnwleW/\
qo44aIhzLuTx83otcJb7Gn6+\
0whUodnK7mQkS4u3xX9XzkcCDXWGowP9CMsDIe4EVIyBK7F538w3Ev0TNeP6q/+IV/f1OG1o/8q+\
lB8pzkghpkoXGAN8jARZfEd9xDuvoNrL2+lURrFFdUIeNfRcsl8OBz50I+\
qxTWEhKMuQ6qITlR4tfgJ/yX+3+tvUCtB8YLDQDBLPaEkhLfwwRv4X/Bk/\
ES8dZzlgEIWOjcBshQl9LF7VS18GMbjUxugUk5QJchqqdqi8gbWpd6Vo30TvxwPpPvDkz5Uf5aUrm2\
nwFhSWLkpMnUsj6E+PpkyFk+\
UsESQQ4oF943kJ91TaOgsy5ZgdLrO63IlDgEPkL43qntT8gFAxqrMzD4HucdYuMASm7l7KcfAlVryn\
VSn+JHJD8sb5nKWvLgIDFzoSoOtzh+f1P++G4ZqWQP4C6KxqvGn7AOGC/\
3zgHBgX6sqy1ebjlYMU9S27wh9DZzeqq6aJfY2c5NqCdX9Z9PnZwjEUAPn6c9niDVRmNu9aqIaVH70\
RWdqjLHc7iEqthky473CIEXS33dAVYgw3NCPB+osGmWlbq0FJ2GcnJAs+IUxYWS6C/2+\
PvHshPVrJU+BSgM4g7AP59A9x/ZAQBOHZCti1RPB3OJD/kwe5W3Xrfko6BM9Ddk5L+\
u1qMlNV8PW46Sb6QBaBuOkGIEc03qdrRQwMmhAnAKuMs4eZJ4hEwUZkwFcLH4adIn9U9GG3OvWPV92\
f+iBYfjCJUsAIbdVBcl8MwMfVQKJ+ztspv7YKryUdFfVcGbG7OH+\
mabsqJYz2TNT2tgyiUZDO8KGfSvhMNOKlXT9zp0WjKICmEpcjJDFtmeMCPcP4MFKHEA9DOaOa7j01p\
c49vStVQ8IMC0DDvZPWHrz/\
RFVcWhwt86Uh27io3ynvRHzFhC4cClUBw0mN4hkk89hq8oJhvYPKPb6lMnoDGpfY8zTuyL9eC3GpF4\
b9okYc+2RwtgRwEi+YKdpDw9VT1EjYwGIDPrpxy9VUwyHXpyNQa3mZoKOI71QubM+IPyALr/\
1dM1QUm3I1r/wuW+YNj1PJSXmtnh8nM+RKvvy+fPH4vMvxfPD/dcnOdxq5UqNBVb+L1lEHn87zD/\
4sIHDIQbIBo4BexbIsAx8Wieomtl91mFfhhc9tQ/ttpZh/\
khvSrzjm4YHgKHnYUyIB6UNKtItqr6QPtIR0eJf5GnzJSDhshyRIiG+\
kas2zUo8WkQtGyTLBpAGKGLHgAO6qStNPY8dk0hqkaCgxKLOCJgN7/\
LES4jRVqipjDeh1zXvYoqqOVGnaDgizxJ//V/gNcQYWdcrCtEw9gexS4zqhzHCGNNQWc6x+\
ATjbGLyTcfSGDMyk6XUqWfuxMBzQdOr6K/hFJcBJp0PT/fYnJL5xnG9Lb5k1tpAYfl/\
FI88R0iYtE4YWJewkoTMu6k8dxRos/BxUbB3CtNoCOhfwFvVAxHZEBEZdPYl8cInHp3MpBk+\
28F2RezEXYKOxnPN076VlUbiFQuPnUdSZ6xqw9ktlmdUsEfcmIFKOztKVIxUHAjBIryDLYxulSUsaL\
LlLVmQtA9wXxVg1V20kF98+DFg/0L0fwA5nhAZmEvBTKalJY5ueDSLEdH7C+\
yyL0dNlslwkFBZV0Sl+hKgvwVOCKYquuZHfvWlWs+3cBiZoMYuUUEGjfa4OpvQ+\
sgZbUqAYWCKHBH1mhUcIOynB4qQqZzigy8B1HTVxGToFR/34QBfeZjl/\
8DxvyoWR1iGBVcH7nl4JeIgUfTNK8zUfjRstzKE89tZzpTja4GmEr5TFUjRmTk8KRpB9k6MyWun1vJ\
R4zPms7GlVT+fXzOX50ldS5W+Vh3yVcDJkeLYm4a/\
WNEEgavoDi92HANsSzwngD9aiH0ABAoRQqrVTt62u43eWDrt/\
sTsRYRusDDytzbP9DnMGYN5PymW40Big6kEzUsDrvnnoYQQwiCpUwksoJuvw+mKsZBIp+wr+\
AL88xAfSTxbhn8YDkHOyOJbGBZEQ8z+0b19ZDzAmVB/UmbfMfXNHW7oq/t3ZoYN/\
AHXXN5bIaQXmbn5JkbA5FJMKDK/TfH47qa4F025gIW5kXdTD1Ek94c//\
6wZzA0xzOcIZnmmT9XMGF2FIUL1EzuPczlJgpshyjx/lZmbwdXBhXQwIIsGIG0GNmAhHhYWbgd/\
eY2n4m3vFKCwmHESwJqDYg6mqkVzvnWtOY2YGPaACRlTY2/\
ExPBp6r9eRKZqCcdjl0xTXCQNFamFgXLgH33YQw+ZJqd3w+fyIZYyleNqNBiKhGs3SLm/2X04F3U/\
eIQgqD5nl5n+\
PNog4JKGxSMY6rHblqrUrp8xmMUREhuKNvTwecVfCUQAcrc6qPtDp2GTgnpPEhPHL1ZIZli0p4FOHZ\
KLGCMVTzWVf4Ba1BKWuGdS+Rg9MrWjDkPslPeg2ly+\
LA4ZAOssFs5QgQkof44YUKp3noGI2urSk0hRjznOGhWpCJGkBYiPS0htQH++\
64cyGfKM2BTDVrGtwEavMc9Hw8zMQTUxHgzCMjSeH7k4weVg4dNMsZZOBF6D6rW6TNUldUPsYxjEzr\
h0QRlpUAiDz9yfyMb8aIAaHvtGjsQPP6JRuMdIdRICso0YypChcYPLv6ZvDmegj6ky+\
iLuslgk4u85Qr0nDATnceIh3qpnGtkL6pAwVlZogLOm9PMM56+\
MbgvOBTPCftKGoyhWmFJNW0WXRDGMn743L4M4OmVsNQhJ9A9cMd0fArMIE1KOXfP5FZUaaHHtCVjFj\
B78JTkuBiRKdxn0Pe+Kh4npEoGSYc27zVymO4/pPvqBHNI0Z6/\
nFeOqqQtXxge4myLrGZoiVrvhahJOuY2EPHM4rj8Xv3Wcxbqji/\
HiCB8X2zMhMlJsBSIUWfEzouOxapq0c3j1rLDHXqmTwp8zxgqk2UKKqpVQbhBficCgIdtNIn0hCsXE\
o6tuxDITCXijEbfiqTPgUPbrS9nvQFWp4KKXA+J5YgJwcWOIeL5zNF1rqAnw5GglQ/FLL/\
pvpzs4UwpHR5WAQX0TPVkFzQq/72Q6ZS/xy3ShVY/9JMv9b//jv/6Pf/vv//O/FQg7mwBlLI6omM+\
UhFbCGM70IBoBmtfpkjYOBCJdO0f25DZbXyJYwbV8TQ5EzgYcLXZICyxLj2lAoaX5qN3QTJPst4xfg\
9i9nNiuPQvdo4ELm151XqZ8QJ5IOjW0lajOmwh5D1zqSSDPHES1xk7x7K3COMhKSgyf/\
SKOYIwzp9sMAwrQCUlA8cSA0NB9jid3IY9fpOfErAcRrQZ7YLDV3gRHsycZ6qjv6SJRt5Wo8VqRIoT\
s7RZxn+ov8Czojo6XuTk5YXgvFlUGoryZ25iZkz/drJVxGOBnrIgkTUasD6L+\
gs7beTQKhcIA2Rg4srgMZvXkJ0khfVk8xrHWEMm239Uq6Tie2QHYZp6cOKsA/\
EQFSwRH8PYb7BumDyWUFABVUUPDqCOWCdl5lzW95ULPPFlxsZ0zBVFwEvqyWSbKn9muUmnT0AIywhp\
uyYD3LB4Xlo3naODq6WIMh+Xv5QrwzQEJjwYBbahFwQ3FQuS1XC+\
4vPN5K9J8mmkA9nqotyTOQlSvig+\
cZi3L2ZSJUtsicuDZlmlcP9pixInlrtl5CMpNpSdmvhnHyMxURqHG5Hoi2fN50B/ksLTrOUyG/\
H9ZmO3gLLK0/a3yesyh2mq4CXnb6QJHq+\
J8OBdKYi0vco6GGJzJxjHUkNftLBKb6gA7FfBKN4eaxwJHW4IlUwqMjF1q6MLbiv1ibmSSymRMYH/\
oGFOeUvgJq2fhpzoCRuxWRQIuUtN0GorlPgS/\
eFS6VmekC7Igh24zQh6MISsmUUejIeeHTtU9nVgO25Ihbwi+HlFwtGVPDGtOqdUuajVwQ3JcQN+\
nHpFGfYlbZbAPTyacHWWoRp9a3nDHg8A0XkJ+96E2ioiZxQm0EE+VwwsfRawPgyJf5h/\
uusT9bBUtH5GBwFyak/h0w9j1arBxvuUvmW097k6WJkacOKq+\
VRqeLI2cf8OJGKB5SIT99LiCe8aozSj4Oq2ViNjamavMxVfOXFXrMiQ/Lvd4q/\
HOsTUysIDovBiS9KEDghiKjz4dsdYPYVuXzvuDiyzhlHrpnrZd4SCD++oQSO1IS+JJQ40RbOvHk+\
5evrjAzB/n8/vi/f3f3v/taf71/v1Dcf/pQ3FffPz86S/F8/\
3HB5xrY42pTpFxEgCZw5ciTYIP56RBoJV9LWMOAUUm83laJq7aug/\
bLT60KamQDeLy5fOVrURRwjxBTPAepefp+BtdGHIb+0q520csl/\
LdyVBr5dTIZjIOUx9FPRrHSWaq6A491T2D6KODr+uEnnL+msdH9cihHqkVPdCHX8qhGOC5KY+\
W3tNDZJ6OCk+\
LDSOYnnKIk4jXibW0EFXoQRex5WiU8riJrg3cZK5yw3Ugg7PayFTv5ZAHA9cza3ZGVBcPYwAms1Fyf\
TiID9pXspNOKsIbTUF1CJOvnyqnm9Ncb5RgQRYUw3PFS67ECMpZXHjU81Iar+\
MkVhNerjrkJw3PI3atoL3rCC05IFgbD1r0s5iHIYkQpkk1mUe7rscZ/8vRa/aQgFZEs+\
qTIeO7UaN0eqdUHqs2AsQ8mLciegMrLLq6qukAJwg8alQFQ6+\
KmzcdcC774PANJGwD5gfwiJOpmL2JHtdK7G9DMhv3SD/\
iIYL5I2TtyEvXPDXMYThfkzxRkTFNT6xAJ+lsvw9A50xqkQPjAEHDfVgfDdr4retXodeD+\
CByx8TAb2W/qgL//gnFSYdGPLZwA9z3+m/cyLjsUF0RRJcomtmJ6/\
n8Bh4oeWVPY7UlWYYzD6MosbFaFaFf7ZYyQ002vscM++WhZwXEQY0HU+k4xfrmX/\
j7BaLsxbtsCFCot/HP1bhgXOUS0Zf7Gv6C+YDUE/VJfOdMCcTgkxH8jURewP9a+v+Pb/\
5F6xxUro0lDhdQ6WcqR7OzIcorjX/\
saf8AJ2Nr5T5d36iymsC5fO3anpItGV70LnervchAqZqqnpLCQ5BqSa/65LC0nGxZ2MvVVoOoe/\
qwhiN6L2+vLV/RAFZxsdcqwg1Q4UoPAcxkeyvPBV7rXqNbUpkUU45G0393rR5VK388AJayRE1Sk+\
o6DfvupVRX+1gSSDfs7Dw8aspaYhaxfCcPkLL4G2pQyy9O8KNhteqaO6xMNDmuQznZNLHOIBOXDbn/\
ErPY2Oj0MPUKqFnCl4TYYnXoQq5/F9lqk1chrmW5rpi6X3d77i+IYfB0IA+\
yQnImUO6wFk1EcX8igmN6ID9y6iEoWEDPLuImEE3LrDE3p/\
xPZqEMCuRBPDILYEGSP2QJsuqr6WynKyCy+\
KZQUMKxCSGfLlaKCiW52tgAWaBqSIuzTDrWzK14M9iOWAoZRBEcRIPNe/Epb/3li4rgc/and2eUtW+\
7i/EABvN3WjVi+Qf5S+YesswFwfK1lkwptYN8ElJsC7xo7irCAw2Nkqp+\
5U4ufVSPV9QlotMkr1pNCML+pGll05ShXlx/xqqNxw7qsi/\
1g4hHrq4TlV9hnf6gCS2vi1RsTv31utyQ/Xf+R1b15Dgk2b9h4PKYnrPIoHevXgtUIl6bnhgtkI+\
EMicj2yHaY/GexSu9kyaiezXLTpgz/Cc+x7MPodIRyPxtzdSBcHfcghQET/\
vQjp4LCcMLnYhrrRwFFjkgaqLOzFRjGkaiw4l6PxogpYKQsSEIaFmeyd2tGOZcLwiwLrv1aeEvVCFZ\
BDhGxDKYu9r31Z8lzYuPTwVyW71qSK4fkNHG0FKctAONMwMnZEVfFAYR0S8W4hsucr/\
24jCwQm2iWyOqKbZki1jurdDBORVny83ocmUlkdwwng9R5ZsDcoFHFOpcf+\
Ekrgr773VWaSKirkkD6gYtOLOkxLocmIxnZd4h5RwTQy0r590fXGbIGv5Dl6DZQEX/\
UIvVrWr1p1LiIlY1APWzEO1Hc6lUc8Gz9uB38L3Kzmn5R1ghbsfihfm+KldWgaJfUjPO1KwqO+\
U0koymioDju1MjTSdR0xEyKlAHzVWTlaTtNlRWXWONpuQJ1GST8sokwEpSZiSVVZxp8kjGPECYXFPs\
gkcGJGZkARycqnjqPW1BqM7kPp7H5MwzY0ZR6P0kirLaTgBTBHKl6ssmy8I0miv7B7zrvms8pcyPNq\
XCwBb5J4ftLWZfAgDwKUAA8/l7DuWDUdnDeq1JlsAisT0mqLorA5Jjec0yw48sNLz+\
DQmmarB6Lovmh0D0r7yISt5ybBDdV1vLFjxGG6fWIlT1LBUOnE3Sw2+tRMYhNvpXyCK/\
m8Gecr2kgjl5jgWHVjUW/EdPnZIhgRJasAGyTNho6fgzoAyeiRJqzJowm4LzHDm9tbPqfH8NfqqGn+\
ZzcdYPIPVxlTrPg82KZ32W7HfMwhloeGMw0bKT+YpzCnZVOP6kuCspb+\
LXlyuJvhVqv5WXKLtX4SNEo6JzxNBUof6p+\
FZmypgDlvimviMoaEhzzsJQFHHaJOOmePJNbqJc43QfRJpunhQL5WMVuARxZiaOs4xfBvI75i8v+/\
2w3rIkzntBIKdBndoXS5idnbzohnNYlv7p9E85Cze6jCuzwZ08B4t7Z98a+\
1Om1KlsZq5h1uLZOlF5re+61hMIx52mENTzdVYjMDnGJpBOKr71AgPz+plSUHf0HQOps3TO1IFnYg+\
RJnztaz2665wij3KynTwDHqzlK97ZcCvCM1ATiJ4NSiEc3XbtULbDW2fyrMPG0b4WtNTpCyP8HIAF9\
YMEVONVQhNFm2a+\
iyO5moDBywjdKaD9e0eNDbIyjblM8x8AixRMEJmyRhdpjTXLsgPDCQaNRMqqQURPnlUcd5nx68RhEO\
vYMzyw3A8W0gqkLe+\
jXuhZ4cdzZo5C3gQEK2goQpPK3cQ9AJ7dRGqP2qacWxnBHVWQEuSHPvfzVAdfYMIWYpEI0YMWTaI+\
dybGjgOyBTc5jBvTaUG5I0umQT63xWtQ3HTfl6MY5SE5kYjdbKSty2FEZehDw30vz9YS0RL4ErIgpS\
3sVfGpg9vHIJPG3vP3WU6d5O6bpiCvSLTuzZCiIuTictaWjDyRUN8gd6Y+EUyYaWpexmNCUXfH+\
bCvevEd19qkI+NbsXoup1+o2f53eZpdN4pPsY98jAuyZqxBFzdHvElog8e/Ky9bWxgVTw+\
fPjwVj58AMj8+P398KH5+/\
Pjxe7TNWaJR5nmHxMlxM5g471YaGbMtjptaORYK0JM9unNnlLNmojEjZcYGNc+7jII5+\
cfn1G5A1uqYfgPsOq8/Z0WUM/5FTss/aKfW2s4DsgCAsOxFOpUjZD+zUEj+\
OSW9JWJlk5jf71wNbQ9kteYtAibhni+aoxJOmNQT/R0GrG9xLEyZE84mlKSSuTtY5KV1v/\
rw5rz4XPw15ZbEKvn5PCNTZtwLzFTzk/\
CS2pWeJOTn8sRacm0ttakF9Q4bT9hYUxKXVltBKF6DlRTQpRb9AMH9e6w4wHeM5eo10M52gwlVRaZR\
ycwAEM3EG/\
rB4Ow3KL37tjU0byF7vDCYxYsCsC7viq8HxM5N6b4Ht492p0QvoKbMeMrZ3jBTf1X8KxQ/\
GUFAbX41Zmyj5V94IF2pRhT+\
OXFviPQ5FgySapl4nSq8S2Op0hCDANpZ4ApWznfpo3lxeYs9sg0wr85WmLQ7lTyjoQSvZl722MQ9Ae\
64s8x8X3+7Nc1yXZSy5uGV6qfTVhSR+\
l61MZCXgGH14mGJm6nDXhQZ4yT5pMrRBke6hlYeNGEG34ywJ3ERwAC+\
pRbheMY0o7xwhnk7Ia3m86LeKVP5tvjZHE6lzac4OXaQKCI3Gtz69clXsu+\
6xuH3MbXs0oYawFqtsIfFVvG4HzttNQCECRKl5QBohnB++rX4/S2SdZJFPW1RHmMHjwgXahUcV0+\
GO3NJMkI/q8umXR2sOlcZPSNopa3THkyFza2/AzYaGT+tA3NQgArP0IK62kMaw2nauGam+\
Kn2m6lG9q9BlDApBsuM7cwCgxltuMIykYe2LKPHaU0l8uJD+HVTQVj3h/\
bFMVqfbl6gGetm9qhToNBmlTOrsqoZf2URPJZpn9N7tXCcNAYd3rIXE21lIV5bgaWKFRw+\
DHX9FD97VqxY56v5jvncuvSwZOgG7hBXzIk3LN0PQyyd8T5uyqcbdtzWq0l1ivO0eSSyn1PtVyz+\
BE6JajSvuKFI1izbeSJteLh8ruHeVtsyoCZkEE94ZUuuLHXkV5oJa40nyA5QqQxaOwPimjatl996GJ\
sEi3VfJEiKgEm0p0g7tD/ZvFbOd1souo34dSF7tDJfmnSwj4ZdbdwJnOUGrAnbauWnRPGsI//\
L1MQBqanNBpQet92i2Y5sVMMSx1Smk2WtJ8U69MSxGLHxC1ulqbXTrC9gEFODV1Eh5nGWM+B+\
cevVnFxNZAZOs8Ktmop/\
p0rI25hQWzvzgW0jquRBepmLNzazNgZdH4uXtEbZyApRXjTGyvCGRA20KPE7fP9AOHigUmXhLfuHUX\
NMRuQHVbZA1Ajy75aOV8SJlLLb4ovIpUZ2+WTUhuaV4qrEvbkbe7+AZrJU9zeZVKu7bY+\
xyZr3tinrJcB+wpvqMirHyZQM/W/G8rINzX4EvPJaqqtR1QcgdWfu83lnx+\
dI3dl2OZNIy14dq9IjBhx8AUWjbhHJTVdn3Ni7jGxh9U1p+8BUxGIkCc7Wj6YoFeS6XeS2x+\
ZCe5AC3BVLxV7kbodiaNmM0SwrGQVPu5RzZecUAC/\
KzNbsb2yzchZXgSpavkTHzbq7BAntgqhG9nGBmlb3dab6O/HdVxJP14d1mYGUbm2tir/\
0eCcnIaHnw+qATmpzEbimLKy1onVEsoYzSG/dFp8AXOtpdG+WJ1npPF6/M59ff4EW5/\
9ooGK4j8GKmhczRTLtAKIr4uUL108HEs4R6MO0EpmQsHq79UiFTTFkLU74btd2vTq4+\
JgCAzSY9R46JqONIyg/OoA8w0hj6lMXL3eUACVhIDPjXbewBmevVIauJvGZapc9FtuspZmknmdM+\
DsIPs8pvAqoAM3ipTSCob2D00wo25FXZLhSYtuS+Gl4takgW2bDVwyWp2C/\
Jc8xdFapttqPN2Q7NbkZE3FtIU7jYirEOlDmsAcc8OFcfG+Nl6rFyZaogE6AWRQxOz/\
kmuNnv4yD5pbyHU1n15oGmTMh8eWC67SIPd2Ae6T+\
oZyKRwFYRnUvTnniwZN5Zob6g0FSYNfonFehH+\
fiuZZ1KmEctGZr48VPDXbfE3TEnb1fotdTYXxZRYjV6PyEUFHrJiJoKONZI7YvfhY1ZyIX/\
zif47dXqMERsdOfQcpwJxsuaejfzeffdt3NYIyO6OiZ+yJ//gRIDSC6eXJXxeIfYKozMz59/\
DNHzk7PA+jLoF6+xiYmbzw+gqNrOB+xCIl0qP7i09PKao0juI1Ry58pUqUNFoMozlHrkWnf5Z+\
2dZNqHn+LkgnlT+okZ01NWcLA+\
m1085AQyEBfH0ZedswxqhtHQc5phoZmxAHrUTfWT5bHvVZNsEV5Plf4WseSa1lTn0QhReO+\
51GVmWgGzKhibMXrblTUJlEF2zmPGcWUQ5Yn/\
gqzJc4F8QFRGSJXvXz1BP0ynyvxnNlCvBXSRJxlb83WOtP3H7OTk1oTsK3L8M+\
DJosi4dfac9DhYOcvvOmTO8kojXsRtXtLW7BkYyodDM6TkbEIL0TzBb95gPprSu9S9C9h9TKvWhY2I\
StMXuieJbbl4B8aXk7znqlkSKo5xOoMa/PzTnupc0FnRUa9aLrXJGAZMzv3iTIPhG0rr++\
LZXCeOlNWyHl7uzOqJ/hB+afk7ZHtdqYnfz6kUhf2lu08MXVYjol1xCS0A0kk2msDVfeyy+US3c+\
4dXKMtCbj3D3Tc5WAfjHRlaX8LPwCWccmbzCZ4XD8lkNJs5isji+\
OeL0nSOmtRIX7og41V74Op0m4Z26T4URMPnIakSUAcb5l+fojU++pCHmwZ88mhcMz4+cRkh2tZ/\
ICM1h4sYTMV2IYdiuJNVbDMVgbnrxfrw7dwBDrWvhWLxSVp1R/u676EtyCWwJqCHy95zP+ywy+\
BuHn3SLc6U8twC/AKCKJNFiRVAJWRyYPzsQmqqW8bXO1LRK8TQxec41Fme2K2G9bs6GxUwoUhXiF6+\
QMG8iYF1VMlX5WCh2rgcPG+H1y3kUpH8XS3io0n2vcx8waydH6Tsum1EQbZA/\
ANxMzgWcba61TVAOScMp7jvG8J7aM99VMDQF0i5tTkbUzuOw/9iiCtt/\
DGIk3oxXAShFBEQd74WUOeu8NV739rCKVGVUUhf9hfHfjNjf2p5T4ImvfMfoBynpEihSKq6EtvLc9o\
47LFpF5J3CfD98Q+9noEsUU+\
WQqKfwCde7QaPJoQqpx8ncjAkVQ03Gg1K7CmffWNWFX8o1sC2F1siyml/BezGTW+Iq9x8SP2I+\
dngK7yYJsFjwOBtSiCMMkI10TTaZ4zDq/kMKIOPWBpSVlvxddrgxqa0jit2+\
kdkqmDSsmeBp4uGjMZTVyCD8by2WpHgcYEXYePHANvPMDm00NkeZrbZoUPo/bgy7et8Xf5/P7D39/\
fP9Q/PL1828Fij2eH75+efz48f7rpFTgfZqFAr2qMjiG7DqFRn7WQYlfaqBBxr2tRUMewIKzizFi/\
eOuY2RIWkZO285e68bDuNqz1FftRDbAIyHH5C/\
MlEzxuzUc2itsIi4CquQwrUjaRn5Cmxd8v8eGintqTpqYITEHZXU41luNGSk4V5GhauQa8G/\
VK9OuFG9MVYYuP7dkSzwYH/VEzl690Tq+VYDT5VzVhTZaWmhsrHCRTv+M+\
rQstdzAG4Xo99RRlMM7nxtG3WmQsq5A26aiBr1N9xCtSyq7psD8Ra3b3iUn3k9URD41LYj8i+\
5VEUtJk15zFhc2REthQ8+ui6K+dRFP3xeNYRIL61HAG6wOnoGXgWqu0HKRnpS/\
cJoLDHkhSonMi8BLKIBPs1On90X2BuNKB3nvPBD10icvmHA/\
tGkGbVHS36kaRbnTMTLylzCZOCn1k4f8FZ3kyDUBBpcI7xcrdP1oiIYM5N1ULMw7iXwxhUG3WtZ4ce\
mNNoD93mseAaOp6oqqbPYf0BjJPzaa7FOX+EEMI/\
t41LwXAAlDmcAjy3gp9rfpvMSbAqz1TkD9H6gsohXa1FTvBWsaLUjsIYoiJofBPVaP3Hd+\
yk74MXhDexkhKbhvbAeL1+\
0YgidTrQ6QE2WB4mmzRIXVNExUfNcENuBJetmC1ox7D3j0bBA5axMF8vayoJZE+\
oX6dIvY1ZAq08vO8XnyWCDvZ0v6zLSgdWxNdb3HZFYrO9ZLcvQftSlv1rjSPjGtRT4/\
NoAWWb7fGyKj2LHolt7tutd+sKVuzrwd8yGCAvSjsVwm4dvs4p3Q/\
po4sg6C0dvgEezDsb7oQ2UuUaONM7PcWM40AW9fm+QztIvVb+pCWodI104GvH3n06jQRH+V6+\
yhKRIk0JA94LsxYubzQiSn0/3OGZ/FTlVZuaFKeUUu1MHuDXijd4wzhPX4D9rHwc26NXx0+\
okNVHt4euWM7wQRX9vIeMPAOLnDhjQBbVNSMk6PV9BUGS9/\
OHcG1fmKFQOORHmEeZyUdhPH1FiFTTYtlKKrqBc4BXbmBN879ibSoVXWoeZd6pw9jUDw6WrJFFQETO\
z5lP35TiMwtZ3G4NSMXkYuzwItksCCd2AT51TGQp8bpItd7OAzn1tuwLoxOiaXmjZ/p4nT0ugJmo+\
dtnLKA9Tz9lZ37Fq0O2vqGfs0MkjIkAUT7CV28VfvOpQnqYZOAbz6FFNVEVd0cMHiCXMXKVKeJFN5F\
aN0FyMc5HCqccJpz67jMfNJMhU2L/Uv3qRNupX/472EG+\
L0a3QaYfWOPnZCuLE8nYGascmy3zWzmzRdm9lFLQxIWhRzle12ZJ4I6X2/\
PyT5OABaIsClvSj0RAb0XdIQr9QWLZqI5RBPPAi40eJoHoxxz+AGLwh60MQgaNQQ+\
x2TPF3Wk5R94fSylYqa0U0zQkc16S5l3wFEImnB6dCtR+\
fipsFMVnrHhYIkLI7wmYoGi9fhQMCpx8RwrcQAxQbBr2pl7MIazYttUWQEsO3Pavtn2EbMJnJX1ijJ\
qXLqq1/lc9QMl8LFO9595NcErsWSqDNHh5NNN8QR8caa1bZEd2Uk6eo4lp13RPchLOV0VNqxMPVWTJ\
Hk0frYPOncJ71MvvAN1glD+9vHRbo6q5tcV9s2tMSc2IyhMbyZ0Qj82HRdRw8aKM+AyJCVlmQfQdH/\
5W8JTw9Wk6sDyypQFdBAcG3DU56lt5Cih15ZWXp0m2Nr1Jh/\
0jaG69iPRa0Rm2RYw1qDzXaeLKBK3W6H3BTq6GxUqYtg53eSdC9zJzj6aGdFq96KjCQ2gnQr+\
mjNdKyUQT7ICkj1XRLedJ1qYCfD6IOWnGK3NRFAkdXkm1W7xFcZB8L0b/\
QJZfjURA7dmkYyOJszbMtSa4pkOKLyt6npTbxxaHiRmf0Npc5J2li69oZ8kZ1v7TourhaASy/\
BfPaf2Fiv6utJfY5hAES06SkkpqL5+rZcLRPbeq8CTNIQXZettoh0hJR3qpy0yAgxR86GpSg4bsA+\
mYtJjfeFlNxld5bCV9fyUaYrWCUdb8iwAGcyUa35tgV7pz60fnlqguVJi6ZcTMFMCxruTEwt0LicjP\
qnRjay8rqNCkrqwoMjwqBmQRRiAaTlrF+M7MTxNqa/tRyK8jNh+9jJ1jrZQ/\
3iHFhz40vM3RuJWpmY8fxbtiSwGF/2iu6afjDqXCqcN2PWWaT30HSwkslJO7K4IhB0s+\
KTln1g2KALojdX5cn0nGkGzpPmjtrxWNlle/\
nFEZfiGNzvrNiawy7hY40gNWd0c62tmllNpyblfpLCMKEvTfrpMnKLiXpbSiMl+\
rL08GzCpEvXAmgkEhM6flcAAw5vBB3bN+bWkzcFmDFilOZNsTAHtrW1oC/\
2YR46pze0GQFEbxhzoDKSOjN43XktdGmtl/zYM/0Cbi4RIwX/swpLw+tTS/0wpnsCDHKfz+\
GasM5utKrTpXaRnRLpv09kjnQhJau26lSy0Du2wMgJzn7JgbHiD33ekxLAKNkwdaWOWMnrgM5bOSoz\
VXkza9a9UVFzBDycCwxywbW7Q6Ff1mDLHXj9YMoHVSxu9usEnMVk19xYMj9ujc4kJeEDQyOO8VwW2H\
ZzctvX3x/n8y+Pf2FvoS8PX748fGWJ3XmaVU8MtF6s6hjTyy8vOoa/32j/\
bawejwkymF4DlzFG8NAfUDdHBiybR6mX1bGpAyMXy+a/\
xjIuNLOQt6CLv8JHfSD3EQFwili1Wyy2HQ99aSWiqpHTsANg7Dvc52eh8sWwo9RoSBq9P3UTmYgwBx\
eNQjT0+0VGNf/FnqTpwyUudurWhxWVA2y25ltIJeqbWMGu1zw5DsGMv9c8d3b7XqZBlDEdOx+\
gDYaXNXjvNCuGQbWbfOy1sg5J0W3410Op3YH2CDFEt//zUI7WDfAXmVGcR1/\
uy8CaGPOLFJ6bvnTy1It3Tof09kutcQGLSJfM2dZJ81fssFVrgJMsR6LufEuXJVL1eBbpoN7UdGc0h\
mjLc9TnjQTRVnc/\
njhL446Kiunl4lQ6WQvdl1O8M5Q1PujYrp85p4my6qG0hKm71d7IwpSUV0bkXo5NxNzMdBfG0RmsQ7\
xqOE89dPn+GUCVxqM12WLS7ixvijPoX8fewFOypnreTpA18VWrtyq0etuiRs3x3iJS4/\
QSCrjf6co1hQO8ezVvDZOd60PXryvWIurTY39uHEfAJNryi4i9GI06kovEVf4zEu/\
f8B38pJHM6fVnAdVyO+i6lzIStmkIjSsHWaWDYLU36Nie7FkEmt2JXtx7AVH8TDEF/7P9u40U/\
nF32QgtgsgeWb11jaLV0aj64W9xLox3oVG0KqyXClBbm19qSi468MAGaFq8hxmRfa5t7iZn9+\
yMBIV757V2EoChqKftwEQuxHfVDOoyLE/6uBUyE6x687Y4nu+VZUBuZKz63tKuHL9o/3Uf7x+\
a5I3iPLrDPjtKmaR1dn/MvsS9VTo+oluHfYxbL5HANxxaDS9N0m7Rs7mdrA7/\
BL2zWgU2m61ru54oDFENYhUiJusP0xS3y3ONPKRmuFOrE8UUZWZ7HEndcr3E7dilxoO++\
rbhFlrJ3DQU1BEmhJYboXQdX+\
gxF5Kt7EIbbRfVIKDBPpVhq4mmyBud97z3vNfbqCIUrYWeBydvc4s3DOk+L4242F75vazpTsRh/\
j6MZx279BKOqP5ugOqetCWYNQq2xkvygvwxgzd45bxw1W681+aNb7I9pfFX+Y3zdMw/\
YgdPfglC9n8daOD7/\
E6e0WmF3IiYsHNxN7GOORE9HUYpJlKbRyUIpxlVZKWbqja1tTZhcfOQXGQjz0SkUmnkeMe86nERDV0\
3KiYjY8Z7zXLGGi//3oeW9fJhNHYVFKvRSDLLL/\
Nru4wiMbIYlc3osu5FymGbTQbn7SBrT5XTBtXsGFjkjHsNTJDXNdK9JnZj0M8HyiwGbURdjXYjpmUH\
F1rzv2D+TTEEgwlYEzptcjvj3d9ZqwLDL0lSFx9DL/0te7T+\
dl48hKaR8UAvKvu8YFG15f9wEiyTHdWK6SZ75ca7b8alMYDWVJX3ZDOUzLjusEa2WFP/\
KxVv0nubXceIN/\
YLSE474uMICIR4O4JuUKQVgsGAzOoY7wTXBIY2KR12gR67UQlNc3mpgHUfcD4OfW5cSVhpK68IMA9O\
IFxbw13rYaK9CTRRaBfKv9WG3xwaZxS+VNp7JXIt1J8Sz9KRGG3w3xz6tbrjWjjJ3+\
60499Tik1LTVnoHXm8WkzCk/NSZz2gWwmNRo3kkWo+3fq1Pjd9maBusBHcou+\
rbaxvP6easKyH8dLkpkxtqOY3sN4Wv1WaFZvAtr8rpro1jU8nADSA8/\
o5K5Z2V8gfrItvuzmLpJ6SS4faaXazZz1UnLTCTXKaE4jOozwhyqWcQGxpzC8RDQ/\
am3FaFbFyfFWMHg7yoG3TrXEOU22sFbOL/7hELZ0nv8qLqzxNkaWNiyIbr/jKEJFem/\
VFVnpFnFtrTCKrLEYLSphMe5BqkXBzU61BqjzGj3tuzKaO2JJIKrNJRLG1gPDE8jLWjj9rQll9BrN/\
cUOG4Nml+IYvhwEIvMaxJl8G/GamPFp/a5WS6ER+I2HGoRRV5L272Vf/sXU8N+\
WNIonHKCnH8OqTV792L0P1nq/XitCE4lcitDED/sZTs+\
douCfPyR7wGzp4ymNQcPJ33Dzht0K6Tr6LQRBj1CasvUecqyAnoEDhEtNsUCTMC6sjq0Q5Coz5YGy0\
7RO+zCIp3ro8zf/fyRqXN0bFxgO1M+GHzhb9u3q80OuvtL1PzkLxC5FzbyUy1Tgd6A/tO1laIF/\
yyoJb7ekDFQPJ9uN2NmI12969IVYjxs5urfXD3YiAM6Wc6q+\
NJa4UhSlD2v6RtukuutCdl3U6IOZIr8NnTr6J2FmOmHm2n/qEmuCtRHKODwM7Y4vu3+4/4EbL+\
Zf7r8//mPBlR2vOo7fGK+\
QTYnZJzkA7nV5yddIE469UttVn35kUl6GgxyMSL7LQN6kBmOmEZTkeS8MXxWVgAp30T1UEOsCc3EtA\
xDnMSuKJJQDeYtABFwe4V13fqg8I9F1sA/\
0DFPfpD9fqz62iF5F8PCgc5w7qJYExcoMH1o6nBZ5rj3k7K5ph82FMrpeLQ9/\
MVzv0QbDR2gURo09fV8JW16JrGBKCezwiR6IkbSxMU9DZOQJu7rGKoEkq1Qpsy9axwWNPjv58XQ4vz\
pvTa7WgS15ZZHBorSWm6DdEzAPyPN7yVUvV2TsmaoeYhiPrB5fhZRTX0RzWIlE98QRm8p2ibV00aVB\
zXCLXgdcPxucauksSWqm9yUyrqHNtr8UgvMlzEmVLKltj3O9x7JC3M5rwhDDMiR3t2qPAMCXCJkSzr\
Kw3g0wYmjVUI56GZTSv3XF1+ehi29m5ZGssy1giyFzBoOxp+o7oN/1oTeDiFYH88423LU/jwrtv7M/\
+Wfvq1c116jB49i131nLtqrLqt7QX++7Q5zwlXEEPzWCtVgAnOlAQdcT/\
pWWZ2VwDHfxyXHxcr1QCW8275caWpne6xsc3uhGrvTPGM/\
bl12CNjL0fkhp2CD5MzLvrXOXpaC47NBoL91OHsJ2NWStQxzMrS3myrncmKSr1ag/\
dwnHNlfBid6VdLjdf1BePs++cFGvvpLcsHUtAl4OmkXK+\
tcoiu1Y79dgq6KLZZoOZxEtTSWtj30GLTiaqorB7Lejv2wzZu/YZDm8yaSMndnYoz8JKajwZPnK+\
GoZAQZnd5oBlf86X+DutpYcuUozoelvvET2VOM3J8eHfF/C8F5dr743ZbWzaDFm/\
gUcu1Fn3u72uwS9UHW2bkt0kqb34oiccD8RGQT6ezkqBZTsLHh7kBLghYTSqnabVHpT7WZHdCm8xDA\
lHBGwYWJJrFsPEeM8pjKIa7DG25kosy72p7zj0GEXI9s73RDDu8/veHlN+UlyfBZ21Rbxl540+\
U3v0J0w9jfICNqvseox6l7kPvSRbXs6OxI/xhuxCa/\
jps554BcaVX0L9Zg7XO3hRnLNiPeUW6E0fBm+Htcp/\
hLirMQHpmnDUy1iuLu8ejWUk4RQtwrYzkB67Y1mKqo2tam6Lz9i1xl3Uaf1b5fSjli22tWFEfilKZJ\
akjmcif+HFQ5GLqyt1PQ5tzdRQQvuVDViui7PLqm+\
ttng3hQIjIeGcwvtDvKoEbIyg2Q314Jz3oD2cf0xuMjfUeqqQz4kMclaebWcrlo3HRjHDELbWHgTS1\
y7m88s1dH6nreU5N2A2IYhw27VGbr4s1wm/XCHzgAcD9B/ootvd8//6t4eHTzdPxfuvn+XH5+IvXz/\
/jffp2I0msllzeuZn3axk83v2UfQ2WhzOncFgQzlEEof28OJpZY+u6Ef3EWnH8/\
UB5BFpGxe0qECjp+D9v8nogd168oT6yOQnPVIwqFbGywzelmt6fnUGx4xH18Rr7nKE3m+M/\
o8i9awSy4YJ+eYSvEOD/lcNVZ6I4uaXLeo6pPsdnwGoyf+cX2ud6s/BkSAGLb4nS8mtRGpW/\
FbptdtMjSNIc0yBxk+5K8Wix6VtcUfjnVx7iq72T+tIhACsYrjQnXagqjZZ7Gxtwek1V6PmkY+\
x4VxwjI2Nr0UjyeYQIt3ktR9WSpONXgN5by3Ys70orkiM4S+q5VG2g0smzJRFEj/WeWb98iNZx/\
trRm6G3rWUxPXsuqBnn6H2jNAfY/v+CzlN9hB/UdskZxaIyaYOY6S6VEqPPSsajR04WNWW+\
pSmcnwTDUdz2J7UcbO4GZbLtgvcIWK4WBnDW4VejeOqPiyH1F+yym/\
CJq8ntndHvDr85PwkfR6c2BEP5Nke7MzKRwNW3ip100WY6woKaT043Wy0qvXG2+id2EtCG+\
ROLhgb9UogtfB8aHqHklVE94xD3ueHO4mcMMpcOjhmxV+1iEqmxuUxhlq6ISo6aKtu21Z/\
mhHJG7iazYjJHPz9ry0FelP8yjHM0uLyr/\
IDcqq9dXZDfXrVoKzvFeIggxX7UnVWe0113vk97hUUJUt7+\
25V8hJOnRuU818fPykFKWrq4vMvxa8P91+fn27TXXjnX+\
1Qnl2NeavrMd5fZd3QOJL8btkEsughp6ryDtkzLYettAFajuZXsc31xRrhNBJOVcYKA6imqqdo/\
m8n7YpZDbHyr3O09B9QA7+\
F30tcMHnZc3vfiUYukUP2mgiLXHNE3pUmsUm7vHhPd3ODTSSFUXmRbGRy/\
d7c7xw7ZDlMdxjLdX7uoCJiHTtrvF7F5aM+gBM/pg54t+\
yXPQVqlJHlBZpdG3mpfRf66YvoVgKWv4nFahsQ1tasx+\
Qzg1qlRLa293rdgvcIt8Yr037FfnEoaEGabHfFOaH3y0DQX/Yc78jb/1hKDlHkrwfcx83/\
zeIWP2HXT+wirdBfvLBXtkR7DOMOTy9ilFU8vzQHs1p2f+SrhM5woef9Q+\
k9aknlC39R309buIP1qO7v2ZaqxbUGglBEHN7MCu8BVJ9dYBMbMExTb4jJrZMPwisr92F6mVFSdjsF\
j+W2O6MZV28UBPrh3LLaVuflrSvU2k9blQ08w8pESvcvUpznxtsyhxbxR4SLec1chboHNQ8HtHSxPL\
Uj6cuAm06ps5Ef0DqJXbfNruxgtT8vnH5F04YADLPLu0+\
ZjTK68lorHTID6nXavBkzmtGp3ZrF4joCGP0qZtRxeL15PX+OjICE3niDEBJPDj227Z8H0eplHe/\
3VfiqsjbMG3jX8Ru7bN6ptNDqzMBLto64U6+\
Jn9nYdtidy4mqJLPVdLmFE4Rv5Sc6i9efcSuSkzbhV4kMy0iy31vvGLgsfEDXxvvFKEyKTlITrpHs1\
jJG3IyrrWB3Fj6asL9F7L3Ty6mULGYN0rKbsqgJxJ+\
BG2lt6EUCrlIBVXTFYsNtwjB6SX1RDquwzwvKPPJNMqydWYLNjBvPexJj6H3Oi9ldsJdkDi37nA676\
KtiFOyDTwSlRlqXeNybd8GdVfxnF5pZShinmgZE2W3oPdnzOpTEpjL/3i/\
3s3txFMvgBXB2VtRqm2TCNmY7xySD5cdwVXFbatsZ3HKi9F8+QIfmt8hxukRBDrUSolKlt0/\
ZasZjhxQK8Nmsz+\
KTW71wXCd8ZiMu9VTjhdIOMsSbKng1t90KR12XAFMg5Na7SBHzDSGGoSRoZxiTH0pVBP4vtc/\
tluWRegg5Art1U1Oe/uFLtNuvvhHztCprVqrCx+\
rHQ4v7RyHGphx1nKlqKcKXGVuQXkgigVj9k7FUXFlGHm6MWjLW4YSg6qGM9qjPO07EBHvGh0YmlYl8\
Z9LybgpEcxlTV5Nx6j5kPJY4NorWYeXl1Ti9RtzWWmXrKYPCIi4zL2vj2XZ0OtG7zB8HqyCFZ87t+\
cF9ExxYI9qgJVfX/qijs1HYe8WV26gRVnogJ+OdY+\
N5SGBnxpFOJAPtBlCHVONpHcPMmsbeG9rc4jYrQT5jJ2S3VUSNlnqsZY5GmnBEx9jQh0xCq/\
mKFXKqOiNQnsguReQ7N+zipdee935Btcya2LcdrJt0rFwLpaZ1Z6pqeXIN/WI+oreTzm5dj/\
OXMd88o/1C9wbdL2k2oIZ+MR2ERZy3G2T9b8ZqYM+p7Md8Woq39qx4t+CYmaInV+Ecc6TuaN/\
Rcu2pKbrRKJ7BrEq/9o58NpYJ4do+\
8cG8QSpignvclFqilSSq3XiLKnP04zTD9ha3cW3dYLUpEOptnSWz80oyl08vVI54lUYzl8tl9A0uGD\
MZKLVyQeKlQZmjxe6mbNYwnn3UXC1cnfScRqGWPe98F2dzo0UZsV2U+EkvZbrdbki3vVif6tspkGE+\
nYb8CsZNfO888d/Mkk8z6Ty1QZCNFbUcsnnpuNSouTIClmW9KP/IcB+Dtkt6w+\
efJadrWtSQswVFdDK6S9fbnW7IEMZK280mO3+VX7bNRvltR1+QyLbdB7fa4fBr68sp/\
1M7HnTxqo5oBrKbUbTemQfYuf/RXloiK4vhXcTuMmjJu9sr1SS1SzAyKG/\
19eZ3eolNhEOoKGCtzSBNgwpsuTrOTjhLt4qeLPvjo9NAJd74aT5OzO4maxfd+f9/h/\
hna0Whru7lfZ+zdBOqvmxGW78fI8CTjzwu5MzvmS94e/X6FI+\
hRzhahPn9MDdW99ijfTm8k7sZPU2Ju0joxVmRwzlxs5KB+Su5wOF05qnFjROfk22o/\
FrnWbpCjYET7zorQeTKAXde5UQr8ow74m6GRIq8ulYasrZWn963lPcZpbHXy30nG40StP81n3/\
79XPx9Pz54wNhr2eAXdo95q9eCqBLFaEm3YSBhVgpWER+\
ri0zUo2Il6iFdaxd84oXtJKUUMxa68defY12boWfNGStJrW9JIlPSHEOk1oIjRj1FtIMY/\
opA8hIQ0JYq0luwtuq8Hi/GsCCdC25ShHmRPiAbh+\
oWges8K5q7iwVa0kZLtDbl1L5TSv9QZwWaigsTuwXH9B/\
uNNSkT386cbuoImbwz5F9FtIj1NOgncNBUack7tSVSmzSFpGJJ/lbsW7bvxyMsJza+\
sKalcaan3r9TR2sFoBjtq64RBULje9BH0NmzCoTrULBw3voo/r6xKlSP2IslBmLrHbVys+\
tPi22k6rkHBvIdryvhEVq+6n83aEXc1qTn7QEFdvUkt9StNvKVI/\
Zo01TVxLf2lH2sK0JCLf3oxDdv1kfZS9fTS2xtrOBxSds7864+\
aV6Cx6bjlC91eyzT63haafL94km4vgDJmQJZDsIXaLVMlSHFNUHqTJLG0UqLkJGStTy2CFPzAsaCT+\
HJVgBiIzWkR3Em2Irr+8532wrNdvGtQXh9OdaohzDFrTfsSWuLAUwHsWcSlRwW/EsSb31+/\
dDmjFmYgxvMDZ2QqlLqr/T4tj/fKylNMv+VtMdidvjmLrdJtfExHUz7ToBkZu50c6Zq+\
XutjQWbws7uxgU+1PU4Z6YWS5Pp+4Ar4tyaPs5A3d/+465wqmrAK+\
lBg1KT2XfAneixbtkUjqjC5mxUsMknVwTgfuZMGnREa0lRCfDodvwfBoYTCmjNpgH4C/\
5gv2BtCvyvNJmVrx6+RFn/avHa65BLEplgxgun4FXqwWBa/\
EbuZ2Pq0DLfImeWnY6in27VSA5A7jI8dg2FWbMZaQxet6phXNjpodWusnZItrLqxmaFtVZOn+\
ZaDkLKDx5j3lKvoTLAlwuRlG3rlgVzqdyYrF6mGScDW17N27Ml5JunNT2QzaDyirmkh3VPUOBjwTER\
pEQQEFNjHyCwOzkXJQ56Ic0VO/\
VwlriJuWvGuLNnliRfBZQmkXkXQPsmOLTX5nQSSt7BdvnAKvU9p2l9J0Rk22QiEkouHcRVm/\
zbQNU65JDZy97fnsE1EppMgMFXIO2PSx75HWdLKTfNa2Iw7QgN5JAbd39o6ll9DXxv/\
5jxwm5md4JUP+Fx1edOJcR6QrMMe3fJZdl2OlORci30kNwggezcs/AFGV3lzC1is1gWEfGXx+5v+\
9zn3lylmRan1pLfTSC94E/IXL6bnmy/n94nh2bMkZ/\
cHkIsHNi1caUJBPZwETm5hc9J2ZxRfpTWzV4F3Kgb0ylgKIcS49slirt6TsNhU3aZ/\
BC2tGV77YHNQvjjXIuERLnEHc5NXa/\
ZaGFsSLFv0Ol5nvK9rRmNZBEygZjnnTfnHuzi9H5JhkDhIH3H98fP9w81Q8/\
P3xw8On9w9WIjgpMVSRR5mhAgwJpmPrsiJWO4zVftI5O7pyuEjRkH1fJvytKfWSNtXDSmNxb5cRA3v\
Oec/UYiGnZpHfEW38Ogki61A1jjqPhg2rfylb2LCt03P0elehZfNVZPQvra/\
spba6OR8ppNW7tmn0I0/Yl57tnM8X8o2FqjxvWaHmVUdSNvudWJYhmRptcj9mad7ULfolXSNGm+\
BY2buzs5QlopEcUOK23SV3liKImoHeI+VHa6HweBmSuIdfDzV73o6nOWsPF/\
ACcaUQanGVx6u1aeAY2PXK+Q2OPIELXtkldmGh14SnD5/ntT/J0bLycXxmmHwoGt/\
bdC1IvFKwm1yn9N2Jagflfaj9LmLgRRWg7hF3f/CYswCAJAG2kTDkSZZvXa3G5OW4mPJe9agsZ+\
cXVGdVJFwvV+GxOQ8ozP8e+eJSRWcFvlXqIsGzx7dVSHPuaXdiCSVaDymVFi0JHsd09zT7/9ZG/\
O4r3OHu2lFRfxKg5vOxiwk72c9fy9TeWcONvZb7On6n7vCa+KE2/cU+\
hdRWxgkgd3aHltYmbbDQQ0nroeX8Fx5EOp0IPGZZhT2GX/q9ntTqmqnjfXSqlvhZo0Bpd5NWm49s2+\
Q/l+3aqeEL2KuFOqPKMDFbM6x2Vbmhu4oO+iyPtb5A9jCKDZ+usCmgLzDZ6Ra95W5Emlq8/\
qcWa0OYdONpeD39ss1fLaRsVCJtpbPChHO5yV+\
xxpeHN4JWpt6HS78gWhdHIwb2H8nCdLZLSa3LYxgU5f1YkrxPnEpp++\
cuDG6W8nhAa418m6BiRrjqG25CrICRh1gjqqxr4Cbf3fOPn6t2tVVBKy41w8GOlSRHJO6kAU7sfqh9\
Ik8xUyVK57b4aDgKtAHbwVR2h0UVVQdECvUhbXf1hkZ7cqSSkeh8bl/Sc8IrGfH9p/Fg98+\
38g6kHb7DcILK4zU3FJ1YZzpM3kKIoqtNVMVObg/lxdiSUO3F5ahLv6btZtob9PZtDDg+\
JqYBzrwTtCtVPfmp06QQ7o60qyCQOdE2JZMLIXSukTe+7bP2cuy9wt5wy+\
yW5B9TuOGlI6yZm0KGV1m5xhmqCAavKVziOFVvuALaUdRkJdJrJM7GrHO8JSylKAFPNTNFwnFTaR+\
bgfqv2G3fghm/sROdXRU1iQmPKV1dX2/\
RMdqqzqbbEGsCQlzyAZey9omGtlUO3RIX9NArA86tjRPwgLz/\
rzaiZRzornJs4aXFEb4GzmD7hhTMYe8lMMibuuiksdwabVAL+a0bYG2XGljZD+RV2+W/\
xq6DOdcKNI3mTCrvrR5zhJznU3+zm052MYAzYkeSaWNXwbUpnMGW0lYFioLKP9nb3pg9dNpiUVaq/\
7HbjUgh1yxz1iUSkXOsENwZeSOujpKAUJHAKfslnnjt7f8B545dag==", "TotalMatchCount" -> 
    20, "LexicalStructure" -> TextElement[{
       TextElement[{"Alice "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.867250913373678*^9, 3.867251001476802*^9, 3.915337692891929*^9, {
   3.915989461722063*^9, 3.915989467597506*^9}},
 CellTags->"DefaultContent",
 CellLabel->"Out[6]=",
 CellID->793135052,ExpressionUUID->"443e70cd-a599-42df-b20b-6a142b35cf26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251005246372*^9, 3.86725101515628*^9}},
 CellLabel->"In[7]:=",
 CellID->1085443159,ExpressionUUID->"737ac56f-dd0c-425f-8e53-5f7e7017fbac"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
mD56/vz5ZMcMFq0miqVnqokT8BJijMi4T25M2uuCCIXSId+QOXI+RO3atX/6
6SdnOZvRxOrVqyuO15SprmAacWdNRIhEr6j69+8vEufOnUt3lSJHgUlN9PHx
odORj8Gl8XSQmXahzdChQ5HerFkzg9PpulqblStXUrY//PCDwekA7Ur1sEC/
8uTJg5RixYpp58OYn3dqvmxz5syhFO08geDgYDokv6tlTWTcDTPeJiAgQNvB
U5Gijpw4cUKRKFmy5Llz51Q2eJbpqK+vL6XoaiKis6pVqyLRw8Pjs88+gws6
ffo0DWSJ/NOyb2Ta63Lo0CE6RPNUAVyTmFOaLVu2Xbt26eZsRhM/+OADuui9
e/dSXce04M6auHPnTrqBfn5+IhGBHiV+/PHHsrFJTXz//ffpdONJpBSfFi5c
+JIGXFdxhK4GpzubBAu5oavrTtTBLd20adPw4cMhWEWLFiXLefPm0dGrV69S
yoABA7TnWtVEM2UTq3F1J5KVLVtWcYSQIoU1kXE3jL1NQkICfAu1ZHQ1Hz16
5MwyRR25ceMGQpvmzZuLhfZZsmSR5wPExsbSqGCrVq3E+IyuJiY7QkWafimD
YPbf//43/a3tq5sn7XURnllxDNlB4JKSkp4+fbpq1SoahUNcqbtFmxlNDAoK
oqmPnTp1Qncl4xfvu7Mm9uzZk25gtWrVXpGgRMT1srFJTaRFqfnz5ze+tFi7
6gz02QxOd6Y7Bw4c0NVEhF3e3t66FxLzr8RWGwjftFdMuyZqy0a3Gk+ibj4t
W7ZUHH1CsVqKNZFxN4y9zcKFC6nF4sE5fvy4QT7m38FB7/Co0gtKsHLlSkrv
3LkzpRw9elS40CNHjlAiFAcfaZUfcfbsWQgTvXyEr0NP+Pz585MmTSJ7sX4w
FaS9LqgCpXh5eV27dk0+RWzRpns/zWgiQCAg9gqIjo62UjkX4Laa+ODBAxoq
NODYsWPC3qQm1q5dW3HMrjG+OpmBN53w7rvvGpxuSRPFoGXWrFnbt2+Pj6Gh
oSEhISpN3Lt3L6X897//1V4xPTSRbkKBAgV082nbti2OoumKDiFrIuNumNRE
CISYRK2L1bmayI2WVjVu3DjZsQTY2JURDRo0UOUDVZJn6dAwl7NuqknSWJdk
x4gWFRiBocpYOC7dRZQmNRFHadoGa6LM1q1b6Z4MHz586d8RM/9Hjhwp7E1q
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
pldlnmdYExmGsR/sbRirsCYyDGNX2NswVmFNZBjGrrC3YazCmsgwjF1hb8NY
hTWRYRi7wt6GsQprIsMwdoW9DWMV1kSGYewKexvGKqyJDMPYFfY2jFVYExmG
sSvsbRirsCYyDGNX2NswVmFNZBjGrrC3YazCmsgwjF1hb8NYhTWRYRi7wt6G
sQprIsMwdoW9DWMV1kSGYewKexvGKqyJDMPYFfY2jFVYExmGsSuWvM2dO3dO
nDhx9OjRhw8fpmehmEwgOjoa3+y5c+eSkpKMLVkTGYaxK+a9zYQJE7Jnz644
CA4OFunXrl3bsmXLtGnTvv/++wsXLvz1118GmcTExOzYsQPGq1atCgsLMzaW
gTsNDQ3F/2aMo6KiQh3cunVLezQ2NnbNmjXTp0+fO3furl27dG1M4g51//XX
X0Od8PjxY4NsVXdp/Pjx9OVWqVJF/n61sCYyDGNXTHqbH3/8UZFAtIjEkJCQ
2rVrK3+nTJkySNfm8ODBg169eqmM69Spc/HiRYPr3rt3b9++fTgxW7ZssG/V
qlWKRY2LiytSpAjlD6mSDyEC+uijjygrQb58+RYsWJBitircp+45c+ZUnAC9
dpa59i59+umn4sSKFSs+ffrU2bmsiQzD2BWT3mbQoEFwlXDOu3fvRliBGGfx
4sWenp7kQvPnz9+iRYtSpUrRxzx58vz888/y6XCGdevWpaNZs2b18vLCKfSx
QIECCQkJuhfFWSr9wlVSLGq3bt2EvayJN2/ebNOmjShD/fr1K1WqJCy//vrr
FHMWuE/dExMTnQki2LRpk/m7hKAyMjJy5MiRlBgUFOTsXNZEhmHsiklv89pr
r8FPtm7dWqSsXr0aKaVLlz5w4ADFFE+ePJk8eTJ51D59+sin9+vXj9Lfeeed
u3fvIgWnwBXnzp17yZIlzi4aExNT4BlQEzOauHHjRlkUZE2cNGkSJU6cODE+
Pp4Sd+7cmStXLiQiaEI0l+J9cLe6w4wynzt37hUNf/75p9W7hFOyZMmCxO++
+85Z2VgTGYaxKya9TePGjeEne/bsKSeuW7fujz/+kFMQP1apUgWWiJtEIpwz
vYjs0aOH6iXanTt3TJazYsWKKWri9evXaTwQZlpvD9n6z3/+s3LlStVZYszQ
39/fZGGS3abuZ8+epcLv2bPHZG7GdwlArJE4f/58ZzmwJjIMY1dMepuGDRvC
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
9DZismX27NkrVKhAP6xgS5o2bYpqtmvX7nfD9332Y9GiRTTjlDo/2qX6AtZE
hmHsiklv8/Tp07ffflvM4ggODk7/omUOmzZt8vX1Td1a/ucaMQfJw8Pjq6++
MrBkTWQYxq5Y8jYBAQELFy6cO3eu+OkHxjYEBQX5+PgsXbo0PDzc2JI1kWEY
u8LehrEKayLDMHaFvQ1jFdZEhmHsCnsbxiqsiQzD2BX2NoxVWBMZhrEr7G0Y
q7AmMgxjV9jbMFZhTWQYxq6wt2GswprIMIxdYW/DWIU1kWEYu8LehrEKayLD
MHaFvQ1jlczSRIZhGIZxT1gTGYZhGIbgsVOGYewHexvGKqyJDMPYFfY2jFVY
ExmGsSvsbRirsCYyDGNX2NswVmFNZBjGrrC3YazCmsgwjF1hb8NYhTWRYRi7
wt6GsQprIsMwdoW9DWMV1kSGYewKexvGKqyJDMPYFfY2jFVYExmGsSvsbRir
sCYyDGNX2NswVmFNZBjGrrC3YazCmsgwjF1hb8NYhTWRYRi7wt6GsYptNPHo
0aP+/v4nT550ec4MwzynsCYyVrGNJlaoUEFRlFdffVVOXLFiRffu3ZctW+by
yzEM4/5Y8jZ37tw5ceIEetcPHz5Mz0IxOkRHR+POnzt3LikpKXNL8lxo4pMn
TyBtnR1cuHBB10ariWFhYcozwsPDU1FUhmGea8x7mwkTJmTPnp3cRXBwMCU+
ffrU39/f19d3ypQp6GD/8ssvuuf++uuvoU54/PixwUWjoqLI7NatW85yXr16
9dSpU1euXAkzlMdMXXRJv7rExMTs2LFj2rRpq1atgtf966+/dM3i4+O3bt0K
s507d2rrO378eLr5VapUEfc/U3guNPHgwYNC3XBLdW20mnjmzBk6JUeOHHFx
cakoKmMJtPk2DiIiIjK7LAzzf5j0Nj/++KMigWgRifi/YsWKyt+Bh7l69arq
9Jw5cypO2LJli7OLwikVKVKEzL7//nvV0Rs3bvTo0UOVm7e3d0JCguW7kG51
efDgQa9evVRmderUuXjxosryk08+yZIli7DJmjXrF198IRt8+umn4iiKmhb1
TyPPhSYOGDBA3K6XX35Z10Z37BS9l1GjRvELhYwBPUz6jvBHZpeFYf4Pk95m
0KBBaLfZsmXbvXs3QhhEOuvXrxfqULx48UaNGuXJk4c+VqpU6e7du+LcxMRE
ZyICNm3a5Oyi3bp1E2YqTYQioG9Jhxo2bDhkyJBWrVrRx5o1a1qVxXSqCySg
bt26QuO8vLzy589PHwsUKCAXcvTo0ZSO6zZp0iRXrlz0cdasWcIGQWhkZOTI
kSPpUFBQkKU6uhD318SkpKTChQvjLr333nsGLldXE5mM5PDhw6yJjFth0tu8
9tpraLetW7emjzdv3syXLx9JBpwzDQZCK998801q4XPnzhXnxsTEiMQrGv78
80/dK27cuFGWG5UmojNP6QivROLKlSspcfv27ebvQPrVpV+/fmT8zjvvkLBC
ylGR3LlzL1myRJidO3eOzBo0aHD//n26OgQUKR4eHtAROU9cgsLJ7777znwd
XYv7a+K+fftwi3CjoqKiqB8yadIkrVnqNBGdGXqxaxyqR0dHw+Fn/ABsbGws
rovWaGBz7969kydPBgQEGJsZgOqfOHHC2cMruHHjBq4SERHh7H3Btm3bWBMZ
t8Kkt2ncuDHabc+ePUUK3AJUIz4+Xjb7448/SF9atGghEs+ePUvNfs+ePSZL
df36dRo1RT66mkgv11544QXVK7xmzZohHWGjyQulX13gbej1a48ePVQO4c6d
O/JHCv0Qg1+7dk0kijElOVQkIKlInz9/vqU6uhD318S+ffviFtWvXx9/0wB7
lSpVtGa6mtioUaOCBQt27NhRa79p06aqVauKIe68efP27t0bfSrZBt+1r69v
qVKlRHeubNmy69evNyjtunXrCjrYu3evnL5//35KnzlzppyOjhOeDqRPmTJF
JEJ6OnfuXKJECXFdGKxYsUJ1rYsXL3bq1EnubdauXXvVqlUGxRP3BH1ONN2B
AweWLFmSzs2aNevw4cO1r9FxExYvXlymTBlxFTxKo0ePllv+smXL0AulR4wM
qLINGzY0LgzDpCsmvQ0aKtotXE2KljSGWbp0aZESGBhIzZ7eQpqha9euimOe
A8qmq4l4MJFYuHBh1YnkDJs3b27yQsakpS7QZTMdYDHKJ2JwQY0aNSh6VaXD
FSPdx8fHSlVciZtr4qNHjwoUKIBbNHXqVHxcu3YtfRGhoaEqS11N1E2E2+/e
vbuiB1RSmCUmJkJMxSH51bOsXypOnz5NNlANOX3UqFGUjh6pnC5e7ouOmRjT
0LJo0SJxIrp5sk6hSyn+lgcutNA9efvtt9G10F5CHqtJdrxDb9++vW5hkA+6
u2Q2ffp0XRsvLy+DkjBMemPS26CjiOY6ePDgFC3pDVr16tVFyq5du6i1a+er
6IJONdnPmDED3Vr6W6WJa9asofSffvpJTq9ZsyYS+/TpY+ZC6VoXKCnM2rRp
Y2wWFRVFGc6bN091SEw0haeV00kTVbFDRuLmmujn50f3jWYOQwg8PDzwEfdT
ZWleE3G3KU8EaGiKcOwRERHw6p6enhs2bBBmED4yQ6eOhiXRgNFDUxzjAJcv
X3ZWZoq86tSpIydSY1YcQ+hyhEUNI3v27Pfu3aMUUs8WLVps3LgRV7l169by
5ctRNiQiZ7Fy6vPPP6cMR4wYER0djWjuzJkz//rXv3BdVRvTvVGEt7f3tm3b
UK/58+ejUkjJnz+/PIg6YcIEoW4HDx5EyY8fP96uXTtKbNCgAY054wbiqHi/
gOD6oAMeRGUyF5PeBk8N2i0ePWMztP+sWbPCEk1dJK5atYqa/e7duydOnAjB
wlMDUaN3ZyrgbShuQmT65MmT8PBwXU2Mi4sjM/wvyo8/aFzr0KFDKdYoRdJS
FxSPzEQXGnIQFBQUExOjukpwcDBZws+oDqHrTodU09QLFSqERFw97XVMHW6u
ib1798b9KVGihBiyJlWCY1dZmtTECxcuUMSHO696AXfjxg3xN2QiR44cMHvj
jTdkm7t371LcajCk/8EHHyiOF6BiJDY2NlZxhHI0HCq/IqcOqjwYgra6b98+
VZ5jx46l9hMYGEgpCPTwEVqpeg9ovB4qWdLESZMmyS8CxBSmU6dOUUpYWBi9
Mihfvry8ngiXoDkJ9OyI9FmzZlEiSyHjJpj0NgULFkS7Va0O0OLj40MtHDIh
Er/88ktFD8jZzp07VTl06dIFh3LlynX+/Hl8dKaJAMJH3VSAs7777jt6BTlo
0CAzFU+RtNQFEQqlf/3112vXrqVRUKJ27dpybCsmCx0+fFhVgC1bttChn3/+
WU5H3Ko4XlO6pJqpwJ01ETERvaLq37+/SJw7dy7dSdWaU5OaKFqCPNtKC54O
MtMutBk6dCjSmzVr5uxcMTYiukZo8IpjnOHdd9+V9TQhIYGa/WeffWZ0I5KT
0cxUz46Y3mww2VsXuifa8otZbT/88AOlzJkzh1K0GwGJ7p/8rpY1kXE3zHib
gIAAardyB08Lwhl6Q+Hl5SXvtSJ0pEWLFuPGjRszZgxFnYpjQEl0YpOf+QHF
MZBCKQaaCBCmqbQJrswlC/fSWBfoNSWK4a88efKI1zew3LVrF1l+8803lHjm
zBlVGfz9/VV+kqCYomTJkmLoLINxZ01Ez4Rump+fn0hEoEeJH3/8sWxsUhPf
f/99Ot14EinFp+gdXdKA6yqO0NXZufHx8TQoMWzYMEqhtj116lR0qxTHilRK
37t3LxVG1VMicIehd8OHD4d+FS1alCzFsPyxY8dENxIVROxp8mFxNkEXUki5
iUlEYjWuaiIZUbZsWcURQooU1kTG3TD2NuiUwrdQSy5WrNijR4+cWeLhEmMj
2mEcPDIHDx6UjSdOnEjGrVq1osTY2FgaFUSKGJ9xpokoCb2JQFAADyAmwmXJ
kuXzzz+3eA9cXxfhmRXHkB3UDcIKy1WrVtEoXOXKlUlqRU87JCREdaH9+/fT
IdUc16CgIBoi7tSpE7orGb943501sWfPnnTTqlWr9ooEJZYrV042NqmJ9erV
UxxvzYwvTWYGeHp6Gpxev359KjZ9pPfRaDliBjINodOIKJq9aos/RGHe3t66
15WnY23dulVoJTXOBQsWpLikwpkmHjhwgPIRmki3umDBgrr5tGzZUnH0CZ88
eUIprImMu2HsbRYuXEgttnjx4sePHzfI56OPPiJL9JbNXBeevFatWnQKPZKd
O3emj0ePHhUu9MiRI5S4aNEifBTL52lACRpKo2GPHz9evHixeNgRzZm/A+lR
F1SBPiLMlFdYJEszZ+h+0ko6APeiynbdunV0SKsj6PmLffaio6NTX9VU4baa
+ODBA7HZgjMQKwl7k5pYu3ZtxTG7xvjqZAbedAIarcHpYp+i69ev07ar6D4l
Jiaif4inDx+XLl0KswYNGuBvPCzyuaJnhWCzffv2tM8hellaTUx2LHH19fWl
ji6BPFUrSlSY10S6CQUKFNDNp23btopjdpAQdNZExt0wqYktWrQQk6i1iBFF
9HWNJ7DJiLcbeBzEunVj8PAmS5tSiiFWIjIykp70vHnzpnqj7LTXJdkxhEUf
tSu/hKeC5OHjqVOn6KM8fZEQN//3vy/bT3YMq9K0DYU1UQJBEN2T4cOHL/07
Yub/yJEjhb1JTRTxl+54oMoMEZyz9enGiGU+27Zto/FSMWmZeoA9evS4f/8+
zaFF2xAnXrhwgUZE0fjxHIl08UzpLttBpLZ9+/by5cuTzcCBAw3KZl4Txb3S
HdinfOSJ3KyJjLth7G3Onz+PoIkWieOJ0H3YN2/eTK9CSpQooYqJjJk8eTI9
DtAF+fcIDKBV2GJCZlRUlCrP1atX06HUbX3mkrokO9Ys0xjp2LFjVZZi8QUt
uhczVLXzSGnHTpRHDDQR8HW0+VvVqlVnz56N4CgVNU0LbquJtIQQYcjt27dV
h/CNvPjiizhaqlQp0YxNauKIESPoO9IugZcR/aKAgACT9ZJBL45mB40bN+6d
d97BH+ItAM12RrT4P8+W6+J5EScuW7aMElVDDcaaSEC56L2DalRZhXlNFGsq
tdsUQPVozF+eHoYGTPbOttxnmAzGjLdZvny5M6HZtWsXDeLhcbb626y00NjT
05OmgsOP3dRw7NgxujR0EB9p7HTevHmUqI3jTpw4IewtFca1dUl+traxRo0a
qo6EGA0Wk0BoGzdYymY4i5yVvIsOQUO7efLkQVxsqZCuwj01ETEUzWJq166d
rsHgwYPpzuMroBSTmojGQCciEFP9Xkl8fLxYjiH2OKpZs6bBm3cDaKsKXJq+
evG2Ijo6mnKmaTzyJhLJkqzI04qSpXmwQhPRxZUDSYK2ikKbNyiYeU0Ubz+r
Vasmv6ZEe6bagbVr14p0hPCUiNA4xfvDMBmAGW8D6aHBmRkzZsjpeAZpXTBi
Imd945CQkFq1amknkAQGBlKnsV69egaX1p1jI0aZEBWq7MWs+6NHj4pE+IE5
c+bIXWstLq+L2FVAtfkq7bSjSEGumOovzyQUmwNo60ir7by9vQ2qk664pyaK
DXKdeVfx6vbDDz+kFJoVo/qREV3/36FDBzoXxv7+/ngioIb4iosVK9amTRvR
7aEFgIpjxQ26cxTgx8TETJ06FRmq4n0tYgCEREq2p44TodqSQsxPbtu27ZUr
V1CY0NBQWtMka2JCQkLlypXR65s8eTK1PWiWmOmNcw0KZl4TwVtvvUWJ9evX
R3cCtbhw4YLYBUjMQyPET3o1bNgQxUZfQqvaDJORmByVwtOk/P2lAzwMrVBW
HPtWoW3v3LlzhwStwkN3kYRm0qRJ0Bo4E8R63377rXgdpp3YKaOriXhw4IsU
R6yEdOGRtmzZQoOK6EiLvTvgCmjjFw8PD3ndh0x61CUpKYle1qCQkMUnDubP
n09js+gzC8u4uDiKT0uUKAEfguogHqc84Ri1cwJfeuklxTHCluK3lk64pyZS
GILOiXZjBALNhloC7jOJoBjow90WAqTr/2/evCmm0FBbksVL/GYxYlVaUE+g
qYi2oegNJ6qIiIgQxqpZNNBxcUg1BxtNnSbhEGLJT6VKlaicpInBwcFyYYoW
LSq2nkPzM96r0JIm3rt3T/wcjOpe4YlQ/b4zbrt4p6k4pqTiSTT/Hp9hXI5J
TaRVeL169aKPeAwNfkaQQEiV7PgtGJpVLh4Q+VcCx4wZY3xdZ2sxEKyJ312C
i2vatKmYR4cHXJ5bKFYKgwkTJmgvkX51gQTTZjuKYxcC8QtQRYoUUb2sRIwj
Fo6RaCoOj7p//35tgckBTp8+3fjWpR9uqIlwraQFkCQDM/GDm/T2Cn0P8dXT
HhHJz7p/2gFYyOLYsWPlea2enp4If1QS/ODBg5kzZ4rGScDtf/PNN2YGVMWG
ogsWLJDTxbiB4piYqjoL4aEs2dA7FBUloV6cGDvF/R86dCiteBLg0dbuF6HC
2T0RK5dVco+O3MSJE2kegmjM/fv31/0RN/QDqZsnLLVDMQyTYZjURNoDXEwm
x+Mmy4EuNEc02eFM8DiIDfAJ9DyNdwAg8LCT/ebNm1WHTp06hb60qhgdO3b8
7bffZLPHjx+LHYnl6EyQrnW5fPky9FrIHJXwd8080mTH9B7ZM6CTryuIgHr7
xnuqpCtuqImpJjo6GnIDcRQDC8YgEoTH3rFjBypivFz30qVLe/bsgdyofm8l
ncAVIes7d+5UtX8tKDaqgFofOnSIdj1NvyKFhYWhSHhUjeeB4+jZs2dxV1O0
ZJj0xqS3adKkiayJqSAxMTE0NNTPzw+u3tKUTmPgcBAVbt++HT1/g58SpgX+
rhpvtFoXFMzf3x8uSDVDQ0tERASy1c6nleHfimIYhkknTHob2telS5cu6V8i
13P79m3aCtVMZOrmQI4pkDReF5CusCYyDGNXTHqb/v37K469HI1DGDcETphe
4rds2TKzy+ICxHRWBJ6ZVQbWRIZh7IpJb7N9+3ZyxdmzZ69QoYKYkOD+NG3a
VHFMD/hd7y3ec8SiRYvEC0d0TjJ+qb6ANZFhGLti0ts8ffpUrL0CwcHB6V80
17Bp0yZfX9/0m0iQYYiNUj08PL766qtMLAlrIsMwdsWStwkICFi4cOHcuXON
fzSHSQ+CgoJ8fHyWLl0aHh6euSVhTWQYxq6wt2GswprIMIxdYW/DWIU1kWEY
u8LehrEKayLDMHaFvQ1jFdZEhmHsCnsbxiqsiQzD2BX2NoxVWBMZhrEr7G0Y
q7AmMgxjV9jbMFZhTWQYxq6wt2GswprIMIxdYW/DWCWzNJFhGIZh3BPWRIZh
GIYheOyUYRj7wd6GsQprIsMwdoW9DWMV1kSGYewKexvGKqyJDMPYFfY2jFVY
ExmGsSvsbRirsCYyDGNX2NswVmFNZBjGrrC3YazCmsgwjF1hb8NYhTWRYRi7
wt6GsQprIsMwdoW9DWMV1kSGYewKexvGKqyJDMPYFfY2jFVYExmGsSvsbRir
sCYyDGNX2NswVmFNZBjGrrC3YaxiG008evSov7//yZMnXZ7zP5DMvZmxsbH+
Du7cuZMpBWBsA2siYxXbaGKFChUURXn11VflxBUrVnTv3n3ZsmUuv5y90b2Z
GcZ3332nOIA0Z0oBGNtgydugD3bixAm0uocPH6ZnoRgdoqOjcefPnTuXlJSU
uSV5LjTxyZMnkLbODi5cuKBro3XjYWFhyjPCw8NTUdR/LKyJjD0w720mTJiQ
PXt2anjBwcFag8ePH4c6+O2337RHHz16dOzYsfnz5/v4+OCKCQkJxpeLiYnZ
sWPHtGnTVq1aBU/1119/6ZrFx8dv3boVZjt37rx165aZipghjXVBqUJTIjEx
0dnVo6KiyEau0fjx4+nmV6lSRff+ZxjPhSYePHhQqBuah66N1o2fOXOGTsmR
I0dcXFwqimon0IzbOIiIiEjRmDWRsQcmvc2PP/6oSCBa1NpMmTKFjlaqVElO
h758+umncDJyDlmzZh0+fDg689p8Hjx40KtXL+Xv1KlT5+LFiyrLTz75JEuW
LHKeX3zxhYXKOyeNdVmwYIGSEsuXL9e9NFxxkSJFyOb7778X6biuOLdixYpP
nz51SU1TwXOhiQMGDBC36+WXX9a10XXj6ImNGjWKXyiAX3/9lW4g/kjRmDWR
sQcmvc2gQYPQ3rJly7Z7924EL9qoLSQkBEe1OgI3WK9ePUqHflWvXr1hw4Yi
3uzatasqH9jXrVtXaI2Xl1f+/PnpY4ECBeSIbPTo0ZSeJ0+eJk2a5MqViz7O
mjUr9bfDRXUxo4mbNm3SvXq3bt2EjayJkOPIyMiRI0fSoaCgoDRWM9W4vyYm
JSUVLlwYd+m9994z8OqZ68bdn8OHD7MmMv80THqb1157De2tdevWukcfPXpU
q1Yt4cllHYGK1axZE4mDBw+Oj4+nxPDw8JdeeomMr1y5ImfVr18/Sn/nnXfu
3r2LFAREkIbcuXMvWbJEmJ07d47MGjRocP/+faRAqSGgSPHw8IDvtXwjXFoX
WF7R49SpU6TdzZo10w30Nm7cKOumrInEn3/+SaExnECq65hG3F8T9+3bR/2W
qKgo6lNNmjRJa5Y6N44vl17sGofq0dHR0JSMH4C1dF3UJTAwUPUMCrZt22ZV
E1u2bEkfHz58eOzYsfPnzzt76yHAE4deaHBwMNq2sSWyunTpEgp8+/Zt1SHW
RMZVmPQ2jRs3Rnvr2bOn7tHJkycrjrAOrl7RjDdevXp1586dqlPWrVtHbVie
4Idnk8KuHj16qB4l1RRrCpcQzV27dk0kiqGetISKrqqLLhBTmEEWdWd9XL9+
nUZNW7Ro4UwTAboHODR//nyLNXMZ7q+Jffv2xS2qX78+/kZbUhwvYbVmuprY
qFGjggULduzYUWuP0L5q1apiuD5v3ry9e/e+efOmbIN26+vrW6pUKdGxKVu2
7Pr16w1Ki/ZT0MHevXvl9P3791P6zJkz5XR0AtFOkD5lyhRL192xYwfOolux
a9cutHAxHlKuXDn5JTVaMlp+vnz56Cj+oJI0bNjQWS3oZqLzHBYW1qFDh5w5
c9K56JMMGzbs8ePHKns80dOmTatTp44YacFD165du9jYWG3mkPh3331XlAdf
ATrAqI4wcKaJo0aNopL7+Pg4KznDyJj0NngW0N7garSHTp48SU/WgAEDKMpT
6YguQUFB1IanT58uEocMGWKmXypGxrRxa40aNUwWQBcX1kULnlZyp87krGvX
ropjdge+EQNNhCvGoUx8xt1cExF3FChQALdo6tSp+Lh27Vq6maGhoSpLXU3U
TYRL7969u6IHVFKYJSYmQkzFIaELQNYvFadPnyab0aNHy+nw55SOHqmcLl7u
79mzx9J1hXCMHz9efhFPoK/1xx9/kCVasm5loUTOakH3TXV1Abp58mT1AwcO
QKd0L1GmTJkHDx7IOR88eFC8YVexYcMGVdVkTVy5ciUlQqN1py4wjBaT3gad
Z8UxZqhKh/+h4cTixYvHx8fT6xszOvL555+rnmtQunRppLRp08b43KioKDp3
3rx5qkNicqbBrE5nuLYuWl555RXY4H/dMTd06SmTGTNmXLx4kf420ERV7JCR
uLkm+vn50d375Zdf8BF+3sPDQ3EIgcrSvCbiblOecM74UhDRR0REQDg8PT2F
W06Wpmahe0MDkvgqmzdvrjjGNC5fvuyszCVLllQcE8nkRGqNiuN1gDxOQo0c
4dW9e/csXVcIh+J4Oz979uyQkJATJ05QjxegJZMlagclEi8yEIEedGDQWRWa
CLVF5/bnn3/G171ly5aiRYtSujyKEhMTAwlGS548efKRI0cSEhLOnTvXsmVL
slywYIGwRBherFgxSu/Zsye+07t37/r7+9erVw+3SzzmWk08fvw4zYWrVq0a
vYVhGDOY9DZofmhd6Liq0sVkyN27d+MjGm2KOoIOG7ruNGBSpUoVehuY7Bge
oaw++eQTSsEzhRAMj48qh+DgYLLctm2b6tCSJUvokJnZ4+lXFy0BAQGUue57
QPhYinzhnZBneHi4gSYWKlQIhyZOnGi1gq7CzTWxd+/euD8lSpQQw++kDnDa
KkuTmnjhwgWKfXDnVa/ebty4If6GDJETfuONN2QbOGSKW6EUzsr8wQcfkJqI
kdjY2FikvPDCC6gI/ti+fbswpg4qKmX1ukI4KlaseP78ebmCFDZ26dJFzmHW
rFlkb/59Yv78+X/44Qc5/cyZM5Q5HiX5hQh0Tb57yQ75o/ss94r/85//UBlU
QXRSUpL8VlGliWhpL774IvVhDLoiDKPFpLehgQ7VSgf02WikUYypGujItWvX
RowY0a1bt3LlylHrrVy5Mp4XOTdK//rrryE0NApK1K5d+6effhKWO3bsoPTD
hw+rroJ+KR1CN9X0PXB9XbTQyBv6zLrbHcAXKY73jOSpjDWxevXqiuOVq6UK
uhB31kTcXnrr1L9/f5E4d+5cup8UOQpMaqKPjw+djnwMLo2ng8y0i4aGDh2q
OCZWOTtXjBKIbh6+elKHd999V9Y1hFTUUD/77DOr1xXCgYhPZVm2bFnFMWNN
TkyFJupOWHr99dcpH913hTI4XX7ooKF58uRBCkJFgw5n8t818dGjR02aNFEc
oTT6oimWnGFkzHgbEeNQAEXA+ZBzxtMkhiYMdOTEiROKRMmSJc+dOycbHDp0
iA6JISM8Dugn09/wA7t27SLLb775hhK1MoTOp8q3mMHldVEBDSU/NmHCBO1R
8n6KY4SKUow1kWIKXFQMnWUw7qyJO3fupFvn5+cnEhEHUeLHH38sG5vUxPff
f59ON57MSfEp4v1LGnBdxRG6Ojs3Pj4+a9assBk2bBil9OnTR3G8EkUXUXFE
dpS+d+9eKozo9Zm/rhAOuYdJQA0VzUwkV2mieDt5/Phx1aHHjx8fO3YMnQ10
C6tVq0aPSd68eeloREQEnWgQYquqhtsiQss5c+akWGyGUWHsbdAphW+hPiS6
auiAiUNw74pjtAcyJBINdOTGjRsIbZo3b05jGnTuokWLhIHwZopjmAvZJiUl
PX36dNWqVTSigliMtjUTr85DQkJUV9m/fz8dMn61p8LldVGxcOFCMjt79qzq
EHrONBbaqlUrMbJkrIlBQUE0GNWpUyd0VzJ+8b47ayJ9a4rjLdIrEpSIuF42
NqmJtCg1f/78xpcWa1ed4enpaXB6/fr1qdj0kd6to0GK2dT0OmDs2LGKYyKo
2OLP/HUNNLFp06ZKummieKOxefNmkYi4DxGueNsokzt3brLBU0wpKc6yFlWj
sJrw9vZOsdgMo8LY2whnXrx4cbmPh0CJ5i28/fbbssejMcCXXnqJPuouTULi
jz/+SC8oAQSO0o8ePUopXl5e8gqLZGnmDJWBVp+BAwcOqDIXyyLM+970qIsK
GjhF71erX507d6ZzUX1x6SNHjlAidBYftTME5s2bJ2awR0dHm6ypq3BbTXzw
4AENtRmAqETYm9TE2rVrK443U8ZXJzPwphPgrg1OF6+zr1+/TtuuoiuYmJiI
NoanDx+XLl2a/CygQ7NJxXUzSxPF4DMeFkpBkxbDQSVLlsQDjocazYOeFKGJ
4i3J4sWLja8uTx+iHOgPeQYUw5jBpCa2aNECj6pIh3wYex5C9bZdBrnR5AEx
zxxPBJ2FwFBljHiQDkHy8PHUqVPOGrwo8O+ml+2nR11U0KxC7coRsfOAMaq3
PMmOIWKaPqGwJkps3bqV7snw4cOX/h0xfDdy5Ehhb1ITEW7Quca/Q0RmiOBS
XKWuS2BgIF1l27ZtNF4qpppQ7NOjRw/EVtR/QztPxXUzSxPptaYibWpB4/+K
YzKwvKe9ShPFSwr5WzOuGqhVqxYeSdpJo1ixYi7cBpn5J2Dsbc6fP//RRx9R
pwutXTx0//73v804c/mdjhZ6D4JnnOIgZE5jpGPHjlVZisUXNIQiZqhq517S
LpdZs2Y1vxwpPeoic/nyZcph3LhxqkPyrzAYQGvPBVBS2gynatWqs2fPVi3m
ygDcVhPJoyKC1u5zgtZFA92lSpUSzdikJo4YMYK+iBUrVhhcXWw2mLp5HZAG
mh2EdvLOO+8o0soI9BIVx1jN/zxbuIqWk4rrWtVEtC6yV81N0sWZJj5+/LhM
mTKKYw6tuPP0XeCiKmOVJt68eZNeEyBz7ap/3aqh/wl3kezYlIBS+vXrl2Lh
GUZgxtssX76cWpfYY/Phw4c39ejUqRPMypcvTx+pGTvrvoqNvsXUBdrptEaN
GqpTxFiiECbaxg2WshnOoogMUa35O5BOdRGIZ3Pt2rXaE+G9tZc+duwYnbJk
yRJ8VOkseimKYwJSZGSk+Wq6EPfURMRQNCOrXbt2uga0iRBAc6IUk5p48uRJ
OrFs2bKqoCM+Pl4sKDh79iyZ1axZU37zbh7atAGXpmYs3lZER0dTztT1Kl26
tHyW+eta1UTE12SPuDXFwtN9QxlUS4PF3r/vvfcepTx9+pQ6dXjeZcurV6+i
mydrYrL0ckG7GFn+zRpRNXkeID3CuvVlGGeY8TZo5DQfbMaMGcaW2nkp8Ccl
SpTQBlmxsbG0NwX8jEhcs2YNtWF5NVbys626APUAk6U3FPKaC6E+q1evlk9H
YDVnzhy5a22GNNZFICYY7N+/3+SljefY0Gq7TJw/4J6aKLaKdebAxWvoDz/8
kFJodorqR0Z0hbJDhw50Loz9/f3xREAN0VyLFSvWpk0b0VMS4/C1a9dGx4YG
K2JiYqZOnYoMUxy7EE1FcYyFyvbUCST69OmjOtHkda1qovi9rYYNG4aGhkJw
DeZXizX7eGR27NiRkJCArxsegwK9nDlzQvKEsdi9cPPmzcgWPY2VK1eKnW1k
TTx69CjNyFUcETQyQXVCQkIQSiNn0Sp097GJiIgg8a1cuXIqNvFg/pmYHJVC
o0LTGjhwoLGZVkdoP2203qFDh+7duxchDwIueBXxhl1eipuUlIS4THEEQZDF
Jw7mz59PD4X8wxMIx2iSCUQKUgWnhBiWXrHBmcibCePZpI1fPDw8AgMDzd+Z
NNZFMG3aNDqKcpq8tLEm0osS7UhshuGemkhBFr4d7SYPBHwvtQS0GRJBsXka
Wo4QDl1NRLQuprJQW5LFS+xei1iVFtQTEALx2hcY73qaLC09UP4+iwZAx8Uh
basweV2rmoh7Qs8jgY5xjhw5nIkL3TexgaoMbtc333wjG/v6+sqlpQcc/5Of
kTUx2TFOJe9EJ998sbOWs/1OIcqUnol7XDDPFyY1kaZW9urVy9hMqyOnT5/G
gybaMJq9/NTgQVaN9kC2aEcXxbGGXfwCFAIx1WRUxAUiK9GTxPOlCsfEpjeK
k+WB6VcXgn5mC8j9ZGOMNZFmIRrvrZquuKEmwnvTwCm+BQMz2g9cefaCDP0o
sTmn2NeF3LJ2ABayOHbsWHleq6enZ/fu3VUS/ODBg5kzZ4ofOCOgLBAFMwOq
ooHJ+5slS2MgimNiqvZEM9cVs7K1O1q0bt1a0dspHR058bMv9HxpF0ARdN+g
Xz4+PmKzbsURWeu+6Jw3b554bCFzjRs3RqkQNioaTUx2rLGSRV9xjMnILyOc
TTh/+PAh3VJ0oc0/gMw/GZOaSDsiGk8mT3620FissSIQqQ0bNky15S+eGjzC
ur8Oc/nyZfRaxfMCOnbs+LvePFI8QfIDC/3Sjk8ilGvfvj0ZaH+uMb3rkvxs
0iAwPxnmypUrdIq8nktAIYDxnirpihtqYqqJjo6G3EAcdfcX0oKIDKKwY8cO
VMRA4xCHXrp0ac+ePYcPHxY/K5YBpMd1k5KSzp49iyqfOnVKniNqALoooaGh
u3fvVvVjVdy5cwfl/PHHH03uR4rn4tChQz/88IOzoQCGSTsmvQ3tlZSiJhoA
B4I4a+/evX5+foiDUny4oD7+/v54BFKcSh0REYE8xatGXWg3Y1eNN1qti2vh
34piGIZJJ0x6G/pNYdUWwc8Lt2/fpjkw8py055TExEQKIY3XBaQrrIkMw9gV
k96mf//+imNPReNwzA2BE6Z5AuIXwJ9rxNRceRu6DIY1kWEYu2LS22zfvp1c
cfbs2StUqCD/0IybQxPq2rVr97vpnW3ck0WLFomXp+icZPxSfQFrIsMwdsWk
t3n69Km8B1pwcHD6F801bNq0ydfXN3XbbbkVYtNXDw+Pr776KhNLwprIMIxd
seRtAgICFi5cOHfuXOMfzWHSg6CgIB8fn6VLl4aHh2duSVgTGYaxK+xtGKuw
JjIMY1fY2zBWYU1kGMausLdhrMKayDCMXWFvw1iFNZFhGLvC3oaxCmsiwzB2
hb0NYxXWRIZh7Ap7G8YqrIkMw9gV9jaMVVgTGYaxK+xtGKuwJjIMY1fY2zBW
ySxNZBiGYRj3hDWRYRiGYQgeO2UYxn6wt2GswprIMIxdYW/DWIU1kWEYu8Le
hrEKayLDMHaFvQ1jFdZEhmHsCnsbxiqsiQzD2BX2NoxVWBMZhrEr7G0Yq7Am
MgxjV9jbMFZhTWQYxq6wt2GswprIMIxdYW/DWIU1kWEYu8LehrEKayLDMHaF
vQ1jFdZEhmHsCnsbxiqsiQzD2BX2NoxVWBMZhrEr7G0Yq9hGE48ePerv73/y
5EmX5/y8EBsb6+/gzp07mV0WhnELWBMZq9hGEytUqKAoyquvvionrlixonv3
7suWLXP55dyQ7777TnGA7kFml4Vh3AJL3gadyRMnTuDxefjwYXoWitEhOjoa
d/7cuXNJSUmZW5LnQhOfPHkCaevs4MKFC7o2Wk0MCwtTnhEeHp6Koj5fsCYy
jArz3mbChAnZs2enJyg4OFik37t374cffvDx8Zk9e/a+ffvi4+NTzCoqKirU
wa1bt3QNfv3119WrV0+dOnXlypUwe/r0qbOszFuawUxdcMVQJzx+/Fhrj0y2
bt06bdq0nTt3OquvGcvx48fTza9SpYp8/zOe50ITDx48KNQNt1TXRquJZ86c
oVNy5MgRFxeXiqKmGnz7bRxERERk2EVZExlGhUlv8+OPPyoSiBYpfcOGDSVL
lpQP5c6de9euXQZZwdUUKVKEjL///nvV0Rs3bvTo0UP5O97e3gkJCam2NInJ
uuTMmVNxwpYtW1TGn3zySZYsWYRB1qxZv/jiC92rp2j56aefiqMVK1ZMo/qn
hedCEwcMGCBu18svv6xrozt2umPHjlGjRmX8CwX0tai0+CPDLsqayDAqTHqb
QYMG4cHJli3b7t27EcL89ddfSPT394frRnrevHl79+79/vvvFy9enPz5ihUr
nGXVrVs34axUmgg/j34yHWrYsOGQIUNatWpFH2vWrCmLnXlLk5isS2JiojNB
BJs2bZLzHD16NKXnyZOnSZMmuXLloo+zZs1SXd2MJYLQyMjIkSNH0qGgoCCr
dXQV7q+JSUlJhQsXxl167733DIRGVxMzi8OHD7MmMkymY9LbvPbaa3hwWrdu
LSfWrl0biUWLFr1y5Qql/PHHH6+88goSa9WqpZvPxo0bZRFRaSK66JSOoEkk
rly5khK3b9+eCkuTmKxLTEwMXWLu3LlXNPz555/C8ty5c2TZoEGD+/fvIwV9
CS8vL6R4eHhAHVJhCXAJCifhzazW0VW4vybu27cPtwg3KioqKn/+/Ph70qRJ
WrPUaSJ6XPRi1zhUj46OhsyZH4Ddtm2bGU28ceNGQEBAREQE9UuNQd/g9OnT
x48fp3alJRM18dGjRyhYWFiYmYowTIZh0ts0btwYD07Pnj1FCp4yeGwkzpw5
U7ak9zhwR9evX1dlghQaNW3RooWuJtIrsxdeeEH1Yq5Zs2ZIRzCYCkszmK/L
2bNnqeR79uwxzpMCOkTW165dE4lifEwOAM1bErlz50b6/PnzLdXRhbi/Jvbt
2xe3qH79+vibBtirVKmiNdPVxEaNGhUsWLBjx45a+02bNlWtWlUMcdOQws2b
N2UbeHhfX99SpUqJjl/ZsmXXr19vUNply5ZVqlQpX758ZI8/Cjpo2LChnO3i
xYvLlCkjsoXZ6NGjna2hiIyMfOONN8Q4P8pcr149f39/lZkzTRw1ahSVwcfH
x1mx7927hz4kbMaMGaM6NGPGDDpddgJ169ZFyvLly/EQdejQQQyGoNMydOhQ
SKTBLWKYDMOkt8HjidYLVyNS4N+oSS9cuFC2vHr1KqUfOnRIlUnXrl0Vx+wF
XFFXEwcOHIjEwoULq04kF9e8efNUWJrBfF0CAwMpRbxR1UWM3akia1CjRg2k
wwdatRTAFSPdwFmlN26uifCuBQoUwC2aOnUqPq5du5a+stDQUJWlribqJqLr
1b17d0UPqKQwS0xMhJiKQ/Kr5ylTpjgr8PTp03Vz9vLyIoMHDx60b99e1wal
1XY+d+zYQY1Ey9y5c2VLXU0U4y1QridPnjgr9u3bt8lM2wWdOHEiHfpdGuWg
G4vOiaenp7Zg6CfzbHbGHTDpbdB5RrsdPHiwnFi+fHnF4czlQSQxBCQGIQl0
lSkdfciLFy/S3ypNXLNmDaX/9NNPcnrNmjWR2KdPn1RYmsRkXXbt2kUpkEuD
3KKioshs3rx5qkNi+ij8pyVLAbk7VUibkbi5Jvr5+dF9++WXX5IdY+A0CID7
qbI0r4m425RnkSJF0GghQxEREdAyuPcNGzYIMwgfmaH7R20GTR09NMUxDnD5
8mXdAiOrgwcP9uvXj85FmHnQgRhEnTBhAh2CSiIdseHx48fbtWtHiQ0aNJAb
LcpGXQLEhpMmTbp06RJu+5IlSyguQ+Lu3buFsVYTkTN6rUipVq3a3bt3De5z
6jSRGDRo0M8//4yjW7ZsQbBJif+QNaGMm2PS29SpUweNdtSoUXIinjhqzNAg
mtaCXmXbtm0VTaSG55SiIcSbsAkPD9fVxLi4ODLD/6JU+INGq+TA07ylSUzW
ZdWqVWQGx4IHH8bwVxBo1fua4OBgMoOqqi4E70SHaMq9eUtBoUKFkIirW62j
q3BzTezduzfuT4kSJcSLKlIl+GSVpUlNvHDhAkV8uPOqnt6NGzfE35A/UpM3
3nhDtoGykEgZD+nPmjWLvm7V+8SwsDBaA4Vum7xCB6ErveWn1qiqPmmrnI8Y
nHnllVdEokoT8QW9+OKLJP3OFFyQOk3Mnz+/6r3DmTNn6LGtVKkSv1tkMh2T
3qZgwYJotKrVAVAN8VSWLFly7ty5//nPf8h1nDt3Trbs0qUL0tFTPX/+PD46
00QAOUOPmo7iLDyz9AoSHctUW5rBZF2+/PJLRQ9I886dO4WZmAJ0+PBh1YXQ
MaZD6CdbshRUr14diT169EhFNV2CO2viw4cP6cVc//79RSK+TbqTFDkKTGqi
j48Pna4aeFSBp4PMII6qQ0OHDkV6s2bNDE53polz5syhdG0YJTpU4u0nAsYX
XngBKeXKldPu7QCxVt0HWRMfPXrUpEkT/A0JDggIMCgqkTpN1J3R9Prrr5N9
bGxsitdlmHTFjLfBA0ItVu6OEuhCi4X8AtV4JoSP0kXH1UATAYIvVYZ4jnTn
+Jm3NIOZughNbNGixbhx48aMGUMRtOIYHAsMDCSzb775hhLRB1Zdxd/fnw5R
YGjeUvDBBx8oDuG+d+9e6mqaRtxZE9EzoZvm5+cnEvHNUuLHH38sG5vUxPff
f59ON55ESgEaekeXNOC6iiN0NTjdmSb26tWL0nWn05QtW1ZxhJD0Edci45Ej
R2qNxYvCNWvWUIrQRPS7qBMIoMIG5RS4UBPFG9Xjx4+buTTDpB/G3iYhIQG+
hZ67YsWKqeaGBQUF0SI+9D87dOgg5uNVrlw5KiqKbNDxo7G+Vq1aiYERZ5qI
/OmtCrr6w4cPFyvokfPnn3+eOkuTmKkLsX79+oMHD4qPkGDhAVBHShTOJyQk
RHWh/fv30yEaQTJvKReVitepUyd0VzJ+8b47a2LPnj3pplWrVu0VCUpE9CQb
m9TEevXqKY5BP+NLk5kBnp6eBqc700QqfMGCBXXPatmypeLoj9FkGPRaKZMF
CxZojcXwqdjYR2jiu+++K8rp7e1tXFPChZooXhNod71gmAzG2NssXLiQ2ir0
QtWFO3v2LM0fQ7BGz+Nvv/3WuXNnISXUqRYpR48eFY7xyJEjlLho0SJ8FK/y
6cGEhtLYzuPHjxcvXixewSNGE1c3b2kGk3VxBlSpVq1aZExLFGl9HDhw4IDK
eN26dXSI1MG8pcy8efNESBsdHW2psmnHbTXxwYMHefLkMRamY8eOCXuTmkhr
V4sUKWJ8dTIDbzoBjdbgdGeaSNkWKFBA9yx65Y3GQCOlYihe9TKREM+dVhMJ
WuYD5IlDznChJorRafQDU7wuw6QrJjWxRYsWqinftB0NHIVqtvbkyZPplDlz
5ojV6MY0aNAgWdpqUvU4R0ZGUqCaN29eevDNW5rETF2McxAb0ZBDO3XqlDPf
Im4puQvzljL+/v40bUNhTZTYunUr3ZPhw4cv/TtidE4eVDSpiYib6FzjH1Qi
s3z58qVuoogzTRRX1x0qp9JWr16dPp44cYKMVaPEhFBAEY7Jmoh+HZ7xl156
SXEMChnvzZssaeKAAQNUh6xqIr1vBXiEjS/KMOmNsbc5f/78Rx99RL1HNGb5
YS9RooTy9xWLAnqsXnvtNflXBgygtdVi/EQ1VglWr15Nh2hDM/OWJjFTF+Mc
hHpC45Id02Lpo3Z2KO3DmTVrVtJf85YC9DRoXn3VqlVnz56N4Mh8TV2C22oi
LSFE0AR3rTqEpkszKkuVKiWasUlNHDFiBH1HBjsWJkv9IjMTVLTgq6TTVROB
Ro0aRenahf9QTxpFFxOuIGS08MTLy0s7qC6WWP7222+UIjSxZMmS9DSJ1Ub9
+vUzLvDjx49pO8QuXbqoDokdCM1oIvKhvQjQqnneKZPpmPE2y5cv1woNze4b
O3as1p56tjSjAN7ppoZjx45RhlA3fKSx03nz5lGiajlestT7hb0lS5OYrIsB
b775puJ4YST21aHN2WrUqCGb4ZGnV5+Iu0WieUsCvRTFsTNqZnWq3VMT79+/
T1Mu27Vrp2swePBgahtHjhyhFJOaePLkSTqxbNmyqugpPj5eLMcQexzVrFkz
FbuyIJil07/++ms5XexoVK1aNXnzQLQQ2gQDrF27VqS//fbblIj+oZwPakES
hq6U6GUJTZSnz3Xq1IkSVRPMtFBnEv/LwzKbN28WE8K1moibo3psFyxYQMbG
Y8sMkzGY8TZow9TIZ8yYIRJpC+6XX35Z1cLv3btHk1Vef/11ZxnqzrERW8So
nuVkaS49raIyb0kgsJozZw6CVmflMVmXkJCQWrVqaSfD/D/2zjw6imL74wOR
VVbZBVGQJSIIyqKACoI8JCAPUPChoMiPTUQFBBTERFkEk4eJgIoguyJrSCCy
CPEQCEvwQABBSICwhIQl7EjCan7fM/dwT9lbuoeETObdzx85mZrb1VXd1fdb
t7qqBuWh7nrDhg05kV+RqCspuBOulty+JUGr7WxOhMgJvFMTeStdjaYw/Or2
vffeoxSaFaP5kRFDoXzppZfoWBhHR0ejnUAN586dW758eTQejm5Yj+rXr4+O
H0lPSkpKUFAQMrTYEyZT+XGrJk2axMfHQ1V5EVCXLl3oq0aNGkHakE9iYiIH
fTyzi8AVppfjeGZDQ0PPnj2L3sKSJUto31eN0hnuY5OUlEQDETVr1tR3O1V4
cUf//v1Pnjy5Z8+ewMBAClTNNNHlXocYHh5++fJlfAuXQs9O4cKFNWs/BSFX
sDkqhacD7bZfv36cEhYWRi0cIRK/0jp16hRFTGDq1KlmuRlqIpwAPIzLHQEh
nf0MHmd6QqtUqUK7P9m3zHRPnaWNX/Co8loJDTbrgo46PbyjR4+OiYmBu0CE
+8MPP/CrPXhdzvP06dM0DQa9aPgxFBJRNlkiLFU7/PYtCRrOHTFihPntylm8
UxMpaIKDhQYZGqDZUEvAdSYR5GFJXG0WLENNPHfuHE+hobbE/+Me8W8WQ31o
xycCTYXbhsto8FMFBaDNlAgoWqFChUiS0Dd78sknDc+OQ/S/mIywUfO7Y/QP
EjVD9Gb7nUKqKN16awjNT8jxBfnoo4/of0NN1IMafffddxYnEoR7hk1NpFV4
PXr04BS4bl63hX4pAij0unlf344dO1q8GjBbi4EQjHuzcFzNmjWjOTMu90si
dcagfUte1wxGjhxpWB6bddmwYQPUVn2QVc+j3wkZkQsPIrFfgp/UT66zbwko
dB0zZozZ5c1pvFATISg0cApJsjDjH9ykd3boe/CWpLSbROad7p9+ABayOHz4
cHVeK5oKgjWNBKenp48bN44bJwHlgs/PckAVPSLq8HAD4EEJdI0gTzwvlL7t
06eP2c+ibd68uXHjxmoZUC/7c5vRpaxVqxY9TdbbGH7zzTe8fymeiObNm+/a
tYtnwek1EWF1SEgIb3jucofe+g0rBCG3sKmJtAe4ZsAfjujLL7+kqQtM2bJl
J0+ebPiL88zRo0fJePHixZqv8EBBg1Stcbm36eBZAU4tURLePxmhhFmRbNYF
jhGOSH2iXe5Nw/S7GRCooOrlatSoYTbb3L4lhR7We6rkKF6oiR6TnJwcGRkJ
cbS5ATUiQejU8uXLURELjUMceujQoZUrV8Lbp6Wl2S/PzZs39+7di/zRvPVz
p5Ht/v37IyIiDL/Vc+HCBVw3NCT7P1nlAQhjEWb+8ssv1vNySRNppBePGy4j
nhr1t2AEwRuw6W1o0yfDl+B4NtHHXrVqFR69I0eOZMsScrgRxHrh4eHoz1v/
QLBNS1rgn+V4o826ZGRkxMfHR0VFwczOQ52UlARj/SxZzyzlt6KEvIhX/YKz
IJhh09vQXqD6Sdd5AvSWaStUs2guDwE5pkDSel1AjiKaKHiAaKKQJ7Dpbfr0
6eNy7+VoJ9jxKuCEaepCixYtcrss2QD/SJb+92HvGaKJggeIJgp5ApveJjw8
nFxxgQIF0LZ5QoL306xZM5d7ykSqbjeYvMWUKVP4hSM6J/d+qT4jmih4gGii
kCew6W1u377Na69AXFxczhcte1i0aFFYWJgP7I/BPzHs5+f3zTff5GJJRBMF
D3jjjTdatWoVGBiY2wURBCsceZuYmJjJkycHBwfn6DQ2wZDY2NiQkJDvv/8+
ISEhd0simigIgq8i3kZwimiiIAi+ingbwSmiiYIg+CribQSniCYKguCriLcR
nCKaKAiCryLeRnCKaKIgCL6KeBvBKaKJgiD4KuJtBKeIJgqC4KuItxGcwpro
GR6fMbvrIQiCoEW8jeAU1kQPjhVNFATBmxFvIzgltzRREARBELwT0URBEARB
IGTsVBAE30O8jeAU0URBEHwV8TaCU0QTBUHwVcTbCE4RTRQEwVcRbyM4RTRR
EARfRbyN4BTRREEQfBXxNoJTRBMFQfBVxNsIThFNFATBVxFvIzhFNFEQBF9F
vI3gFNFEQRB8FfE2glNEEwVB8FXE2whOEU0UBMFXEW8jOEU0URAEX0W8jeAU
0URBEHwV8TaCU0QTBUHwVcTbCE7xGU3csmVLdHT0jh07sj1nD7j3hdm5cyfO
uGnTpnt2RkHwfkQTBaf4jCZWr17d5XI9//zzauLMmTO7du06ffr0bD+dB4XJ
UV544QWcsUKFCvfsjILg/TjyNhcvXty+fTs6tNeuXcvJQgm5QHJyMu7svn37
bt68aW2ZJzTx1q1bkLaObhITEw1t9DK0f/9+1x0SEhI8KKrHiCYKgjdg39uM
HDmyQIEC5C7i4uI036ampsbHx+OvdSYpKSnLly//7LPPZs+eDf/z999/Z3le
ODc40q+++urrr7/etWuXxSF//PHHnDlzgoKCZs2ahcLcvn07y8yPHz8e7+b8
+fNZGpuR63W/fPny2rVrJ0yYMHnyZHRabty4YWiG6xNvAg75+OOP6ebWqlVL
f39V8oQmrlu3jtUN19zQRi9De/bsoUMKFSp0+vRpD4rqMaKJguAN2PQ2cLku
BTheSr9y5crq1at79Ohx3333Ib1ly5ZmOaSnp8PM9U8aNGhw8OBBi/Oih1+1
alX1kNq1ayOi0ZidOXOmW7dumswDAgIgFhaZw+mVLVuWjH/88ccsL4IGL6n7
mjVrHnzwQdWsSpUqhtJTuHBhlwlLliz55JNP+OOjjz5q0aPIE5rYt29frs5j
jz1maGMoQ+i3DBky5N6/UBBNFARvwKa36d+/Px4fOP8VK1YgpKKABZERyQHz
3HPPGR4OyyeffJJs8ufP7+/vX7JkSfpYqlQpM+U6cOBApUqV2K3VrFmT/of3
UKUB3rtVq1b0VZMmTd555x3IE32sV6+ehSy+8sorXHKnmugldY+Ojs6XLx/S
CxYsCHfaqFEjKlWRIkVWrVqlZpiRkWEmiGDRokUIFY8cOTJ48GBKiY2NNau7
92vizZs3y5Qpg1q88cYbVB3EyHqzey9DFogmCoI3YNPbvPjii3h88BCpiSkp
KaXuAG9voQu9e/cm1/Taa69dunQp0y1kkKH7779/2rRpZift2rUrDoHPX7hw
IaV8++23lM/AgQPZDB17Svzoo484cdasWZQYHh5umDnyVEXBqSZ6Q92vXbtG
WlmuXDnWmri4uPLlyyOxRo0at27dUgtMhwcHBx/VcfXqVTLDPySy8+bNMyub
92si4ne6esePH6ceyOjRo/VmnskQujH04tV6cB5dlw0bNtgfgKXCtGjRglNw
iu3bt/OtMePkyZM4EW5ilqf466+/0NU5ePAg9WnpofZME22W7cyZMzExMUlJ
SXbeFAiCN2DT2zzzzDN4fLp3725m8Oijj5rpAp5WehHZrVs3zaNx8eJFswzx
NCH2wVEDBgxQ0ym4g6NLT0+nFHoRVrRoUc17tObNmyMdYaM+81OnTtGoKQrs
mSaq5Fbd4d+o8JBL1Yw7CT/99BMn7t27lxJXrlxpXR2INcxCQ0PNDLxfE99+
+21UAVEz/qdB9Vq1aunNDDXx6aefLl26dPv27fX2iKZr165NfQZQvHjxnj17
njt3TrXBXQ4LC6tcuTJ3t6pWrbpgwYIsy0yF+de//oWG0a9fPx4lQI9r0KBB
+nfE0JqOHTtWrFiRT4Riz5w50zDz3bt34xH28/MjS3Tkxo8fjzra1ES6Juhn
2iwbLsLUqVMfeughLluJEiWGDh1q0eYFwUuw6W2aNGmChg1XY2ZgoQtQJXou
DMevzIBPpqPw7KvpS5cu1agYHlJ8LFOmjCYHcozPPvusPvPOnTu73PMoUPcc
1cQcrTtHjogUVDN4JH9/f9c/X3Fu3LiRjPldsBlw9TALCQkxM/ByTbx+/Tp8
PqoQFBSEj/Pnz6eKx8fHaywNNdEwEW6fInc9UEk2y8jIIKEh1Be4gYGB1sWm
8z788MPUnDSoYyCgQ4cOhoUBU6ZM0eT8888/FylSxMzejiZS2V599VV0LbIs
Gzpsbdu2NTwX8kF3NMvTCUIuYtPboKPo0oUtKha6UKVKFXzVqlUrRwWjIUc4
N3UAMNM9s4VemSE8pJS5c+fSE/fbb7+plvXq1UNir169NDmj0072Y8eOPXjw
IP2fQ5qYo3UfOXKkyz1CqB+Yon4Czs4pkZGRVNNjx45Zn500cdy4cWYGXq6J
UVFRVNPff/8dH8+ePUvxETcYxr4m4mpQnmXLlkVTgWNPSkoaM2YMwnkoDptB
+MgMnS4azEQDQ6/M5X4Xf/jwYYti03mJgICAZcuW4Vj0juiOlyxZUh2oHDJk
CDW5hQsXItvz58/PmDGDxhYQxKlLpdBfohtKz++ePXtSUlIWL15crVo1p5po
s2zULAE6ZuvWrUNsuG3btjZt2lBi48aN7UwIF4Tcwqa3adCgAdoznkQzAzNd
OH36tKYzmZqaGhsbiwfT+ozt2rVzuSfJ6L+i8aI333yTT0ETKvCX64J/aIxr
/fr16rHwZmSMyBeKk5CQkHOamNN15zjx+PHjGjO4a5d7aIvHtWbPnk3GK1as
GDVqFLoK8F3oTvz111+aYx944AGYwcaseF6uiT179kT5caG4q0CqBMeusbSp
iYmJiRTx4cpoXtudOXOG/4dMFCpUCGa4farNpUuXKG41HMbXnNflfvWpdnJ4
mtCuXbs4EUKzevVqTQ7Dhw8ny40bN3IijZbobyjue926dZ1qYpZl279/P70s
gOaq65vQDun1JbXALM8oCLmFTW9TunRpNOYvv/zSzMBMF9BXpwcBDnz+/Pn0
GBL169fXRHYq+NZlssDh8ccfx1foeXIKhI9ngXbq1GnevHn0urB///6aY/Gt
yz0t88CBA/iYo5qY03XnJXiaCSTwljxWxrHJV1995TICPYSIiAj9Kbp162ZW
PG/WRIRIJUqUQPn79OnDicHBwVRZihwZm5oYEhJChyMfi1Pj6SAz/RKbgQMH
Ir158+YWh9N59TY8W+yXX36xOBygRWkaM/SrWLFiSClfvrx+Poz9eaf2yzZx
4kRK0W8EFBcXR18ZvqsVBC/BjreJiYnJsoNnpgtQKzqWRjIBHtKiRYvS/xCy
yMhIwwzxqMKgS5cu+q9oYowmjELgo/H2cGuaURr4CvoqLCyMUnJUE3O67ohz
a9eujY9+fn6ff/45XPHu3btpQI8vAu+fyZqIHEaMGPHhhx9S7E8lUSOLt956
y+Uegrty5Yph8bxZE6HvVKmoqChORKBHicOGDVONbWoionI63HoSKcWn6GMc
0oHzutyhq8XhZpNgITd0dsOJOqmpqYsWLRo0aBAEq1y5cmQ5adIk+vbYsWOU
0rdvX/2xTjXRTtl4Ha7hdBpab4sQMsszCkJuYe1tLl++DN9CLRldzevXr5tZ
mukC+yiXe/AqOjr65s2bkKrZs2fTeFTNmjUNNxOjk3bs2FH/FU2CbdiwIX1E
qegFHAIEOAeeFJcvX77x48fzUSdPnqRRQcRfPP6To5p4D+qOUJGmiaogqP/P
f/5D/6sxCxwX7PkjSjJq1CgyU2PS2NhYGnZ++eWX0R3Sv/3xZk3s3r071ahO
nTpPKVDiww8/rBrb1ERcbZf7rZn1qcnMAvRVLA43051ff/3VUBMRdgUEBBie
iOdH8VYbCN/0Z7x7TdSXjS41WqBhPi1atHC5+2CaF+WC4D1Ye5vJkydTm8eD
s23bNot8zHRhy5YtlIO/v/+JEyfUr3gzMcOcaVZPs2bN9F/RorwOHTrQx9df
f93lftdDI2M3btyYOnUq95kRH5EZJIZSUKTUO2zatIkSp0yZgo+0ftApuVj3
TPcii27dutFLUvh8RAQHDhwYPXo05Z+WlmZRcujdE088QZbq2BoCDd7HT79z
jtdqYnp6Og0VWrB161a2t6mJNJRdtmxZ67OTGd0dQ9BQLQ53pIk8aJk/f/62
bdvSZoY7d+7UaOKqVaso5b///a/+jDmhiXQRSpUqZZhP69at8S2aVpZ76gpC
bmFTE+HwrSdRm+kChIZyQHCk+YofYXUZHUMv/tSJ7gyFe/369ctUNqjk4VDi
yJEjFG0VL14cD+C+ffusXSXRuHFjizp6W91VEPmqs2VouM+su64ydOhQKom6
WgQhLU0LceUpTeS1KoMGDfr+n9CkIzB48GC2t6mJHI5ZL68jsxIlSni2Pt2+
7iQmJtLbc7RwNGy25EbOmshPh2bQmMgJTeRrZTjwTvk8/vjjWZ5REHILa2+D
iOP999+n0Tk8ERYPu5ku4BAaJxw+fLjmq+PHj9PjY7g8nFb2FSpUSPNwIeCi
o2j12bRp0+ijfu7lnDlz6KvY2Fj19w4soFXeTsmtuptx69Yt6g+gW55l4T/9
9FPKk6cOwrXSFB2I8oQJE3hvBMZrNZGWECIMuXDhguYr3AvaFbZy5crcjG1q
4gcffECXyGxFPMG9C82qUpvY153p06dTCr5SLfWaiPZDKU8++aT+jDmhibRI
xGX09hOdLhqTt5i+JQi5jh1vM2PGDBYXMxuLNXq022fdunU1ksrjlup0CIb3
XkPnX03/7rvvKB2xTKZ7lI8+ZmRkaHLYvn07fUVbqMFPntOxdetWtsHH7B07
zem6m7FkyRI7Ppyg1d8FCxbkVRvoBbnc04EQaxse4p2aiDCZ5i+pE5JVBgwY
QJeFf0XXpibu2LGDDkRPQ/P7KWlpabwcg3cKqlevnsWbdzPs6w46KoaNhye+
qvst8Ewqzf63uBE0Nzt7NRHCRyl16tRRR+PR/mmjDDB//vwszygIuYUdbwO5
obGasWPHmtlY6AKvqddsPcorp/QhXqZ7Uj2NE7Zt25YF5ebNm7SjTrVq1SiR
t2dBVKjJgWfgb9myxazYhnNs0N+eOHEiQkuzo7yk7mSpLlsDcNr0ivDhhx9m
mdu5cycS8VdzIlw96rrzpJ3MO6v5AgICzOrrnZrIHQnNTncMbYIK3nvvPUqh
WTGaHwEx9P8vvfQSHQtjdEjwREANcXPLly/fqlUrvh2vvvoqmdWvXx/dLZpJ
kpKSgrgeGVpPLLGvOygApbRu3fro0aM4e3x8PI236zWRJ3qhw4ACo2d44sSJ
qVOn8vzn7NVE0KVLF0ps1KgRuhOodWJiIu8CZPHzMYLgDdgclaKpHZrXWNu2
bdt8B9rgER6DUzjmgjOnTTMQekAabrkJDQ2lrbPRezQ7KY9Zffjhh5cvX8bj
3KdPH0phdUaHnLa8RubQNfZOiJVoALBKlSoWv4Cs10SciPb98PPzU1coaPCG
uqOycDXoriBAOHXqFKqJAtOubgBBJeeGTrvLvdXY6NGjY2Ji4NJRwh9++IFf
GqoLwB955BGkjBgxwqxs3qmJFIZA4s22REBToTtbsWJFEkEe6FO3DDL0/+fO
neMpNNQ2+P8SJUrwbxYjVqX5UQQuOF9hl8liCsa+7uBG02odFjv6p0aNGlQw
zb58L7/8sssIGmDPdk28cuUK/xCM5lrhWTD7fWdB8BJsaiKNwPTo0UNNtJ7j
p051g6+miZEu93p5XlFetmxZzYRMFWhBs2bNOEPeexmddlXmEP7wry/B3eEQ
/tnBAgUKqPMM9eg1kVcWg5EjR5od6A11P3bsmOobVecDSVWn9m3YsIF2mWNL
ztDlll311JTnmDFjzMrmhZoIRSNpgCRZmPGPbNIU5djYWN6SlPZwyLzT/dMP
wEIWhw8frt73ggULok+ikeD09PRx48ZxgySgBeiiWA+omp2XVweruoPwUNXo
cuXKoWw4NXV+NJqIDgACVZZOl/tN8cqVK2fOnOlyK6NFqTwoW6b711VGjRql
rhLCdUanzvr3TAXBG7CpiTRqp5lMrnnwNWgezMOHD8PJU3xEtG/fPsvfpsdD
9O9//5u2zHK5u8Qogz7u27VrV8eOHVU/T/n/+eef1vnDt5Dx4sWLKeXGjRu8
g7FFHOcldT958iQqzjYud1xs+DNPcOlwSrTHC4P+v34fBgptLPZs8UJN9Jjk
5OTIyEiIo8VgggoiQfTBli9fjopYaBxk6NChQ9Ad9Easl8N4DE4BHY+IiMiy
kRPoNuzZsweVteiJZS8o4f79+1FCPJ6y+ELIK9j0Nk2bNtVrogfAz0dHR69f
v14zV8GajIyMjW6se9pwPogKw8PDEQXcZY+UNgGwGD/0gJyrO75CeAsPnOVO
qsgtPj4+KipqzZo1Zr7RB34rShAEwTNsehvav7dTp045X6Lc58KFCzQl739w
s2KIJoWQFnNWRRMFQfBVbHobmuBRpkwZw3mSvgScNs2KUX/x/H8HnihrsdxD
NFEQBF/FprcJDw8nV1mgQIHq1avzhATfg2a2tGnTJsv3fT7GlClTaMYpdX70
S/UZ0URBEHwVm97m9u3bvPYKxMXF5XzRcodFixaFhYV5tj1Xnoa3YPXz8/vm
m28sLEUTBUHwVRx5m5iYmMmTJwcHB1v/aI6QF4mNjQ0JCfn+++8TEhKsLUUT
BUHwVcTbCE4RTRQEwVcRbyM4RTRREARfRbyN4BTRREEQfBXxNoJTRBMFQfBV
xNsIThFNFATBVxFvIzhFNFEQBF9FvI3gFNFEQRB8FfE2glNEEwVB8FXE2whO
EU0UBMFXEW8jOCW3NFEQBEEQvBPRREEQBEEgZOxUEATfQ7yN4BTRREEQfBXx
NoJTRBMFQfBVxNsIThFNFATBVxFvIzhFNFEQBF9FvI3gFNFEQRB8FfE2glNE
EwVB8FXE2whOEU0UBMFXEW8jOEU0URAEX0W8jeAU0URBEHwV8TaCU0QTBUHw
VcTbCE4RTRQEwVcRbyM4RTRREARfRbyN4BTRREEQfBXxNoJTRBMFQfBVxNsI
TvEZTdyyZUt0dPSOHTuyPWdBEPIooomCU3xGE6tXr+5yuZ5//nk1cebMmV27
dp0+fXq2n04QBO/Hkbe5ePHi9u3b0bu+du1aThZKyAWSk5NxZ/ft23fz5k1r
yzyhibdu3YK0dXSTmJhoaKPXxP3797vukJCQ4EFRBUHI09j3NiNHjixQoAC5
i7i4OM23qamp8fHx+GuRwx9//DFnzpygoKBZs2bB+Pbt21meFDbR0dFhYWGB
gYHowP/+++9mlpcvX167du2ECRMmT54M4b5x44ZFtmlpaUuXLv3ss88iIiLO
nz+fZTGsyaG6gxMnTixZsgTl/PHHH+HY//77bzNLmzW6fv361q1bQ0NDQ0JC
cN9x0firjz/+mG5urVq19PdXJU9o4rp161jdcFkMbfSauGfPHjqkUKFCp0+f
9qCogiDkaWx6G8iNSwGiQ+lXrlxZvXp1jx497rvvPqS3bNnS8PAzZ85069bN
9U8CAgJUn6wHZ3n00Uc1R8GDHTt2TGO5Zs2aBx98UDWrUqWKmfv96KOP8uXL
x5b58+f/8ssvs7wCenK07jt37qxfv77mqIceegjpntUInYRPPvkErl7NEJaD
Bg1CSAUDfMvpuOwWqp0nNLFv375cnccee8zQxnDsdPny5UOGDJEXCoLwv4lN
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
CAOzpUa4pzSFQzPbH+EJTQtx5SlNRDhDZUZI/v0/oQlXrn8O2dnURI6/1Mmf
esgMEZzFtrQWbNy4kc6ybNkyGi9t1aoVfUU9K/T60LzpzTLuLx+YmJhIY5to
VOpIOO/nYLis5tatW+Hh4dWqVSObfv362Smk4VE8IK8ZmibmzZtH3y5ZssSp
MSGaKNxLrL0Noi0EaDQyiTZp8bCb6QJPgNTPC6XdWlyW24iBxYsX06sWeG91
Zbo1eHhJd1q3bk0pp0+fptPpZ1TS3pg4i7rpjX1yru4aDh8+TEcNHz48M5tq
RG/B4Gl5uzz4UpqeVLt27QkTJlBMquK1mkhLCBHhXrhwQfMVmi4NF1euXJmb
sU1N/OCDD+g665fAq/BclJiYGJv1UkHviGYHjRgx4rXXXsM/PLo+e/Zsl3us
hocWEUjygdOnT6dEzXCBtSYSV65cofF8zaiyNZqjzp8/T0rt7++vH2nndZ1/
/vmnU2NCNFG4l9jxNjNmzMjSgZvpwqRJk+hYfXzHPUaL9cKRkZE0iAd34ei3
X3niperHaBV/3bp1VUt4SHrALSbJWJPtdTfre/D8BJ6FaL9GZnn26NGD8uTX
lDRMXaxYMcSzhod4pyYihqIpWG3atDE0GDBgANV006ZNlGJTE9Hw6ED0sjS/
OZKWlsbLMfbu3Utm9erVs3jzbkHnzp3p1HT7+G0FQnXKmTowvOSWQL+FvlWn
FWUq82BZE9HF1U+pQiOh58usVHaOovUaAJ091QyXjjq06F9x98yRcaZoonBv
seNt4NJpcGbs2LFmNma6wCNCmvafqcyQ37Jli2GeeMZp+mjhwoUt+t7Xrl3T
LFCC43riiSeoH6uuouJJ9eqcPciupoTwABMnTlS74tZke927devWpUsX/Q7h
/MqJX//ZrBG8DaJsjc/MdC+Co4Uh8PacSKv5AgICzOrrnZq4cOFCqrVmlz+G
X7++9957lEKzYjQ/AmLogV966SU6FsbR0dF4IqCGc+fOLV++fKtWrbi/wd6+
fv36W7duJceekpISFBSEDLOM2XlggeRGtafOD6HZ6oHnGLdu3fro0aMoTHx8
fKdOndieNBHNqWbNmuhhfvrppzRwcfXqVVrx4VKGUzTYPAq3lR5VOIrQ0NCz
Z8+ii4J+KW026/rnnhWOjM3uSKZoopAz2ByVon22NS8d0I/dfAfa4BEeg1No
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
oomCkGnb2/Tv3x/ND759xYoVCED+/vvvBQsWFC5cmJ6LChUqPP3008WKFaOP
NWrUuHTpEh147ty5Vq1asQdu1KgRvmVn9e2331qc9KOPPjLTBfZyjvKHn2fj
Jk2avPPOOy1btqSP9erVsy+LXlJ3Pa+88gqbqZqYmprasGFDSs+XLx9UFdXn
qL9z586ZbtE8cuTI4MGDKTE2NtbsLN6vieiKlClTBrV44403qDp//PGH3kyc
qopooiBk2vY2L774IprfCy+8QB/h7RHskATAeUIikQit7NChAz0pwcHBZDl6
9GhKGTVqVFpaGiVGREQUKVIEiQhq0tPTzU5KXf0HH3zwqI6UlBQP8kcIQMZQ
HE6cNWsWJYaHh9u5Yt5Tdw0LFy5UpVPVRMg9RB+JAwYM4JIkJCQ88sgjZIxs
KfHq1asQTaTMmzfPrGzer4mrV68m9T9+/HjJkiXxP+6F3swzp4qLSS9erYfc
k5OTN2zY4NkArJ1TQPd37969bdu2v/76y4NT6Mnyahw8eHDz5s1XrlzB/2j5
HmjimTNnIKZJSUn01NgBF2H79u1olh4UWBA8wKa3eeaZZ9D8unfvzil4ZqEC
7GCJs2fPkl4899xzlHLr1q3/+7//g+5oMuSRuujoaLOTvvrqqzBAgGNRMEf5
0yuzokWLIiZSjZs3b450hI0WJ1LxkrqrnDp1ikZNcXa9JoJjx45BjjVH/fTT
T2SsTrO8//77kRIaGmp2Lu/XxLfffhtVQGCO/2movFatWnozQ6eKqL906dLt
27fX2y9atKh27drUZwDFixfv2bMn+kiqDbx9WFhY5cqVuXNStWrVBQsW2Cy5
nVMgnG/Xrh2PVMAY7UTflj777LPSbjQNFY2f0ocMGZLl1ch0N2P0KHhMPn/+
/M8+++z8+fPtayKuydSpUx966CG+JnhShg4devHiRY0lXXw8MviqX79+lSpV
4pMOGjRI89hqCrxnzx6ql2H/Jyoqir7VPwWCoGLT2zRp0gTND64mS0sajaxS
pYq1GbrQ1Np/+OEHMxsaeAwICMjypDbzx1OGlDJlymiMyYXiSffgRCq5WPfO
nTu73DNDcDcNNdEQ7u2PGTOGE+GHkRISEmJ2lJdr4vXr10uVKoUqBAUF4SN7
7/j4eI2loQoYJsIbd+3a1WUEJIzNMjIyIKb8FcsWCAwMtC62zVMsX76cbpAe
HqAgPvjgA0rXxKo4EaXjcciy4pcuXWrRooXh6YgsNTE9Pb1t27aGx+KM6Mvp
y4AOIfowent1eEdfYMTUNO7x4IMP6uPrt956C18VKVLE6cwB4X8Nm94G/TeX
e+QtS8snn3zSZTkPhIiMjKR2vmTJEuus7Aixzfznzp1Lib/99ptqTOOKvXr1
8uBE+gLf+7ojDKEMx44de/DgQfrfjiaOHz+ejFeuXMmJ5HLHjRtndpSXayIi
AqoUzQRG/O7n54ePH3/8scbSvibialCeCJdwYeHJk5KS0JEoWLDgzz//zGYQ
PjJDF4WGo3E70Ndyud/FHz582KLYdk6BRJJ7xIaIhg4dOpSamjpt2jQajUfi
ihUrOMNs0cRhw4aRMSLfZcuWIasdO3YMHDiQI9ksNXHkyJFk6e/vv27dOgSA
27Zta9OmDSU2btxY1S8qA4EOIc6ICxgaGkqz1EqWLKkOouoLzNdw7dq1mioj
QiS1tS6tINj0Ng0aNECL0gy26EGDz58/Pyx79+5tbfnhhx9S67VYWfDwww+T
Lnz99dfvvPMOFBk9YZtO1TB/PNE09QJ/udb4hx7w9evX28nZjNyqO/wkVQqx
/K1btxISEuxoIiwRQNE0G/TJ1XdSDzzwgMv9DtTsWC/XxJ49e6L8FStW5JdW
pEpwoRpLm5qYmJhIER+uDL94Jc6cOcP/w3vTtN527dqpNgi1SMgsBudtnoKq
BsLCwlQbHhx46qmnOPHuNRGlgiIjsVy5cpr9aubMmWNHE/fv309trFq1auri
IJSBpigAVcdZE6H46jtHniu1a9cuiwKjh0DqCXu1GL/++isdDpG1KK0gZNr2
NtTL+vLLL63NQkJCqO0hIrMwg5d48MEH6UmxMKPXc3o6duxoPa/AIn8IH6+M
6NSp07x58+hFSf/+/a2rliW5VXfUwuUeFDpw4ECme+aMhSbCs8FVvvLKK6S5
oGbNmnv27FFtEOcivVu3bmZl82ZNvHbtGl26Pn36cCK6E1RZzRpSm5rId1Yz
OKkBTweZQRw1XyGwQnrz5s3NjrVzCsRTRYsWhQ3unX5fBQixpo53r4lcKv1A
us15p7ykSL8vUFxcHH2lvrqlMugvFE+E++WXXywKnHnnJQIulDpGStPm0TBk
sxEhS+x4G27/ao9OT1JSEj2z/v7+1nuhIOqx8NsMOTf0nBEuBQUF9ejRg1/Q
/Otf//I4/169emmEBo+VZ8v2mdyqOzKhRA4crDVx+/btasUrVaq0b98+jQ29
ecFXNMNQjzdrYkREBFUtKiqKExHvUOKwYcNUY5ua+OabbxqKiwYK4hCzH9JB
I5AIXc2OtXMK5EM2gwcP1n/LqsFdsrvXRHrPDvRTnW1qItotmemn04CqVau6
/tk5NJvnAymkfNTZSobGNOUYzJ49m1LwaFeoUAEpaNgWRRUEwtrboK8F30JN
t3z58tevXzezRMPjwRA0S4szbtiwgcYqn3nmGesp2QhqvvrqqwsXLnAKnBvP
XkM+TvNH+Xv37u1y9xgHDRrEs9pgP378eIuSWJNbdT958iSNc7Zs2ZJzs9ZE
2rLg2WefpViV6j5lyhTVJjY2lgr58ssvw/XpewverIndu3enetWpU+cpBUpE
hKUa29REWtpZsmRJ61PzClAzChYsaH2s9SnQI6V8DDd84OFT3rTn7jWxadOm
LvdMIf3pbGoiXfnSpUsbfkuzd+677z7aNcKwDAQPfmapiTzThheOcVE1LxkF
wRBrbzN58mRqTuhobdu2zSKf999/nyzRW7Ywg2Onl1/333+/ZsjOJkuWLKET
DR8+3Gn+r7/+ussdfNH4EpzD1KlTy5UrRxlCgzwoT2bu1b1jx470ccuWLal3
2LRpEyVC6fCRNxDQAA2Fi6DXxECzYGTSpEm8oj85OVlzrNdqYnp6Om+eYMbW
rVvZ3qYm1q9f3+We+mJ9djIDHUxA87M+1voUvLpW8zKR4PuejZpIs81xSfWn
s6mJVK9SpUoZftu6dWt8i5bGQyt3r4mZd2baoF9Hm0rRdcBjzsorCBbY1MTn
nntOM2taBWpCZo0aNcrIyDAzQ5DC+6FZTLm0Bk6ecnjllVcc5c9bWWpcypEj
RygQLl68eJbbX+vJrbrv27fP2vkTjRs3tsgQ97RixYoud9yqpkdHR9O0EFee
0sSlS5dSmQcNGvT9PxkzZgx9pQ482tTEgIAAOtZwAFBjVqJECfsL0h2dgse9
NSPAxLx58zStizVRM/JpXxO7dOlClvrX9zY1ketlOA5PZ1TnaWeLJvJMG3o5
W61aNfz/7rvvWpRTEBhrb3PgwAEEQbSIG23P8GFfvHgxzbeEd7X4MTU8VrSg
A3z66aceF/j69es0tb5Tp06O8p82bRp9q5/tyZPoLDY0MyQX667+goMFtG7d
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
prCwMI7rQdWqVRcsWGCz5HZOgXC+Xbt2PFIB44YNG0ZHR2uy+uyzz0q70TRU
PCaUPmTIkCyvRqa7P4YeBY+058+f/9lnn50/f75NTaTriT4qGny/fv0qVarE
+QwaNEj/7hsXcOrUqQ899BBfQDxWQ4cOVZ+X6dOno8tHjxsZUI2aNGliXRhB
yBKb3gaNDW0PriZLSxq3RIzDKVClbOzOUcRasGBBDoLwoCGlTJkyGktyjHh+
6SOPp3G0y9StW5cCq7ss2z2uO6SQMj958qRqBq9CwS/Ko8+kc+fOLvccEtx3
Q02EH0ZiSEiIWTG8XBOvX79eqlQpVCEoKAgf2XvHx8drLA1VwDARrrtr164u
IyBhbJaRkQEx5a9YtkBgYKB1sW2eAh0eukF6NAMUH3zwAaVrYlWciNLx4GRZ
8UuXLrVo0cLwdESWmkjZvvrqq9Sj06CO7WS637y3bdvW8ETIB905MhszZoyh
DZq9dWEEIUtseht09tDkBgwYkKUlvTt7/PHHOQUagZRWrVrdTTkJ9BWpv4qO
MSfOnTuXnojffvtNNa5Xr55LGWk8fvw4mU2aNEmTLU+5hE+7m+Ld47qPHDnS
5Q4T9INL1E9Q1ZlAwEI1HTt27MGDB+l/Q00cN26cWUm8XBOjoqKoXjQTGOG2
n58fPuIuayztayKuBuWJW4DLBeeclJQEz4z+yc8//8xmED4yQ8fj6NGjme7x
RvTKXO7RicOHD1sU284pkEhyj5uO2O3QoUOpqanTpk2j1+JIXLFiBWeYLZo4
bNgwMkbku2zZMmS1Y8eOgQMHciRrUxOJgIAAZIJrEhoaSi++S5YsqQ6iUpMm
dVu3bh3a/LZt29q0aUOJjRs3psFkXBl8y28lEJivcyODqMLdY9PbNGjQAG1P
M9iiB204f/78sERzpRQ8RNRuuUOIpzg2NjYlJcVpUY8cOcJPx4wZMzgdp6AA
EH+5LviHHtv169dTSlxcHB2Lp1KTM7wKfXU3k7rvfd05ToTca+ypI43yqGNT
8Kh0oRD1I9JMSEgw1MQHHngAiaNGjTIrjJdrYs+ePVH+ihUrcleBVAnOWWNp
UxMTExMp4sOVIaVjzpw5w//D1SP6hlm7du1UG4RaJGTqML4Gm6egqpEKqDYc
8j/11FOcePeaiFLRXK9y5cpp9quhV96ONBEirnbeePrTrl27KGX//v30oqFa
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
gK4p2r++wwileu6552x/VQ19LaXOEtO604oQX3jURFmVrRaT48XXjbYt+jrG
ysD6EKiVkiEjcCSF+zpPuGN6r1vo2rWrdf9Cbm5ujx49TEVC+mq9gc7s2bP1
9+iWW27Rl3GeP39enUJs68dFVN2Li4tRceW0GgG/2OVnnnT27dsnl+CG6OHi
2rgcqOLUZqyuonIS3Udxg+J9f6JfoBrJycmQAzWY4A48QVhddEsg9O7bdXft
2rVw4UL4WaafpQhXFidOnMA9QdN1P0ngq6++2rNnT0pKyqZNm4IuiHW5G8eO
HUtLS8O/QnyUHsEN3LZtW1JSEl5t994d/rtlyxbcrqAxCfGCR2sjgzAuG6w8
gs5eenr6ihUrTAsJXEAnefXq1fPmzVu7dq3pR3NMwPjAK5w/fz68ANtepQ4M
RWpqqpP/IocAuIwfVoHqqzssJ9xbWOAqnKRqJZTfisL91F3FsDiJ7jkSQkgY
8Wht5JyWnj17Vn+Jah/0wOW4VPez7KKSiooKcR5dNgW4tBk4EcpVDJeT6J4j
IYSEEY/WRpZeN27cOPQ+f4QDv0Ym7rt27VrbZakF1EJZ62/UKtzbjHIV4bSG
xUkMmiMhhIQLj9ZGLYasX79+69at9Sn4KKNz585GYElAFc60qdOMHj1aTbOi
82Pdqq9wbzPiKspx32FxEoPmSAgh4cKjtbl48aLaewWysrKqv2i1Q2JiYnx8
fBWO56rrqCNY69WrN3bsWJeYQduMuIrhchK95EgIIWHBl7XJyMgYNWpUXFxc
FX7uh0Q4mZmZw4YNS0hIKCgocI8ZtM2Iq5idnR2uNYrUREJIzUBrQ/zipc3A
Q7QeHl6tORJCSOjQ2hC/1HybYSslhNQMtDbEL9REQki0QmtD/EJNJIREK7Q2
xC/UREJItEJrQ/xCTSSERCu0NsQv1ERCSLRCa0P8Qk0khEQrtDbEL9REQki0
QmtD/FJbmkgIIYREJtREQgghRKh5TazJHAkhlye0NsQv1ERCSLRCa0P8Qk0k
hEQrtDbEL9REQki0QmtD/EJNJIREK7Q2xC/UREJItEJrQ/xCTSSERCu0NsQv
1ERCSLRCa0P8Qk0khEQrtDbEL9REQki0QmtD/EJNJIREK7Q2xC/UREJItEJr
Q/xCTSSERCu0NsQv1ERCSLRCa0P8Qk0khEQrtDbEL1GjiWvXrk1PT9+4cWPY
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
QgghhBBCCCGEEEIIIYQQQqqb/wPjCMYS
    "], {{0, 366.}, {302., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{302., 366.},
  PlotRange->{{0, 302.}, {0, 366.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.867251009916374*^9, 3.8672510155337677`*^9}, 
   3.915337696125381*^9, 3.915989469042534*^9},
 CellLabel->"Out[7]=",
 CellID->1104492562,ExpressionUUID->"ea4a4cbe-7fd0-4f37-a712-954be326b71c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251023389432*^9, 3.867251025207808*^9}},
 CellLabel->"In[8]:=",
 CellID->186843028,ExpressionUUID->"42018ff3-a66e-4f3d-86c3-55a7c8ae4031"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQmcT9X//z9EVLInJSSKpOSbVtlStqj4UmmX3VeIb5YWWcYSQvYMyjKM
NYy1wdcydsYQDTPMDGJCMYboV5b/6/95P5zH7d7Pcj/bfGbufT0fDx4z55x7
7vuce9+v8z7nnnun3IfdmrfP7XA4eubHf81b967bo0frvv8ujF9adu3ZqUPX
dm0bdf1vuw7tejzz4S1I3I1/mbkcjv//8w1CCCGEEEIIIYQQQgghhJjmf4QQ
QgghhJBsTCYhxAbQ360NVZ0Qu0F/tzZUdULsBv3d2lDVCbEb9HdrQ1UnxG7Q
360NVZ0Qu0F/tzZUdULsBv3d2lDVCbEb9HdrQ1UnxG7Q360NVZ0Qu0F/tzZU
dULsBv3d2lDVCbEb9HdrQ1UnxG7Q360NVZ0Qu0F/tzZUdULsBv3d2lDVCbEb
9HdrQ1UnxG7Q362NVVU9OTk5xsmxY8fCbQsh2Qvr+TvRYlVV//bbbx1Oli9f
Hm5bCMle+O3v586dC7oxYScjI+PChQvhtiKY+KrqgwcPbuxk/Pjx7srs27ev
8U2CZ6lvUNUJcYdPqn7mzJmRI0e2atWqYsWKuXLlypcvX506dSIjI5EeUiND
CpQcEvHhhx8+8cQT+fPnz5s3b7ly5dq2bbt79+5wmxYEfFX1119/XdSyfPny
7sr07dvXcRO/DYuIiKhVqxaq8u9wqjoh7jDv7zt37qxcubLDFVWrVk1MTAy1
qX7gVToOHjz43HPPuWzUbbfd5iFezSn4repg3bp1LstA8ANX9VdeeQWH43//
DqeqE+IOk/4+d+5cxLHiR2XKlHnrrbeGDBnSsWNHBO2SGMbJuAc8SwcEoWDB
gmJ/8eLFX3311f79+3/66acNGjRQjXWnbDmFQFS9Xbt2xgLr16/Xjn1+G/b8
889T1QkJBWb8PT09vWTJkuJE77zzztmzZ1XW+fPnu3XrBp1PSkoKsaX+4EE6
0Ir7779fGtWoUaPjx49rc7dt21ahQoVevXpllaWhwj9Vl8GuaNGiv//+u65A
hw4dVAEPqp6cnLxy5coDBw64KyDzPq+qfvLkydjYWMwTMzIytOlK1VesWKFK
rl692sMZFZhXwrajR496KHPq1KlNmzatWrXKTIWEZCvM+Psnn3wiHgSPdlnA
3ZNTpG/duhXhLsaFQA11A/wd9v/6668ucz1IxxdffCGNevPNN10+IfX6OHjP
nj3w+tTUVGNWSkoKsvbv3x+iZ6+HDh1as2bNiRMnvJb0T9VfeOGFwoUL44d5
8+Zpc9EnmNQgvUWLFi5VHa3GrK1EiRIqmEc9uoWsRx555J577smVKxdy8+TJ
U/gmUVFR2mLff//9gw8+qOopUKAArlRaWprkKlWH5mMi+fTTT99yyy2SUrp0
aUwojE3DtRg2bBhOreq87777pk2bpiu2d+9ejPLa+UiVKlUmTpxopvcIyQ54
9Xf4kSxH3HHHHS4VzCU//fTTSy+9lC9fPuUajz/+eExMjK4YIqJixYrBoz/6
6CNd1ueffy7OfuTIEZVYvXp1pEyYMAGC9sEHH9x9991SOSSiffv22sDSs3Tg
8Ntvvx1ZsBAKabJRcvZJkyZhYgIZUUs3qgB0Y+TIkaVKlVKtvvPOO7t06aKT
X19b/d133yHlgQcegKj2799fTTFApUqVIGsebPZP1WvUqIHuxQ/NmjXT5i5c
uNDhXIIbMGCAUdUbNmzocMOIESNUMbkoRtBMKYDr+Nprr7ksA52XMkrV69at
ayyGi6u7V8+cOdOgQQNVQHtn9u7dWxXDUdrLd9ttt6mfx4wZY6YDCQk7Xv0d
0Zfc1UYJcsecOXMQWbn0yoEDB2pLHj9+XNLbtGmjq6Rnz56SpV3bEUF79dVX
K1SoYKy8e/fuqqRn6fjxxx/l144dO5pslDp7r169nnjiCVUhtEJyT58+Xa9e
PZcnxYFalfa11UrBHn30UWPlt956Kzrcnc3+qXq1atXkumNA/+WXX1Ruy5Yt
kYi5m9oGoz32P//5D1KeffZZdPK+ffuOHTs2bty4vHnzIhHjr1q4W7Zs2dKl
SyW0Rhi89CZqwqWmUUWLFo2MjETXYdbz2Wefoarp06fr+gQUKlQIg93mzZvR
RnVp+vXrp7UN0i3pTZo0kUUVxOTPPPMMUmAJrJViOEqKderUKTExEcP0tm3b
MPtAz+fojV7EVnj192+++Ubu85kzZ5qpED4IL5ND4P4JCQkQKMQ56vljdHS0
Kuyfqgv169efPXs2fHPo0KEiEQULFlTK4Fk6xo8frxV5k2jP/uSTTy5evHj1
6tUQE8nt0aOHZCGexIkQn69bt05Fkv/617/UyrDfqu5wxsmTJ0+G4OC8b7/9
tiSWLl3a3XqRf6qOKQAErWzZsvgZMyPJSk9PlwnOnj17MIAaVR1NXrRoka7C
bt26SUn0lTZd1N64OBYfHy+BdJEiRXRr2ikpKcY+KVeunHYPKg6X9Jdfflkl
4ibB2IdEzB+1FWLAkntVXQgEDPgVtunW9IzPFwjJtnj19y5duoibbNq0yUyF
b775ppQfNmyYNn3FihWSXrVqVZXot6pjvNAuWaudG1u2bNFW4k46MO+Q8hs3
bjTTKN3Zn376aV3kBmHJkycPsqCE2nfYoQZ16tTRDWd+q3rTpk11izlqpWLK
lCkubfZP1R966CH83KdPH/xcs2ZNycIpZDjL1Gi11wqXL18uJRF1a9PdXZpB
gwZJed20TofqEwyguqz77rtPhlGVgqqkMORdV7ht27ZyQeVXdbd///33XptG
SPbEq783b95c7nNtpOQOhKOyFOkyekSkJFVt2LBBUvxTdeWDCsSTUnjBggXa
dHfSoRql2wjRrFmzB/+JdkFYzp4rV66dO3fqKlTrzGPHjtVlqa2Aaq3Gb1U3
7uKLjY2VrNatW2e6IhBVxzxL2isvI8jlGzVqVKY3VYfxUMX27dvjShUrVkxK
Dh48WFvG3aVp1aqVy0ujw0OfQM+RXqFCBZUikUbRokUTDHTt2hVZJUqUkJJr
165VT12fe+65qKgo3d4bQrI/Xv393XfflZt8165dXmsTHQCdO3c25irtnTx5
sqT4p+pwN11hiLkU1m1pcCcd7hpVvXp1xz/p1KmT7uzGMQW88cYbUt7lvhSJ
HhHG+9dqDwoGzREVevHFF43nzQxM1YGsPCPWTU1NxYnQn7ILxZ2qYwirX7++
wxUIwrUl3V2axx9/3OFcTPNsp4c+kQfZWlWXOj0AY1ThWbNmqZHI4Xwm8tVX
X7nbZEVINsSrv3/++edye+vCYJdER0dLYTiCMVctwqiXPYOl6kuWLJHCJlXd
XaNQz6ibyPNWo6obzw6qVq3qcO7ic9ktNWrUcDifyp0/f96PVnt+40a2EVaq
VMnlqQNU9XHjxuHXRx55RB6vNG3aVNJdqroatdF19erVw69xcXGbN2/2SdWr
VKnicMbVnu30SdWlTtDQDS1bttTWAA0fNmyYjMUC4n+1qZKQbI5Xf586darc
2BEREV5rmzNnjhTWLaoLa9asySaqrhqlkxot9957r3lVF90oVKiQy6pq167t
cG6wlFWp4Kr6HXfc4bi53G0kQFXH1EMec8sm0rlz50q6UdXj4+Nl1gAx1K5Q
4WefVF2F+p534/uk6lLnnXfe6dPrAxiCo6Ki5JEx+OCDD8wfS0gY8ervu3bt
kru6XLlyEmp6rk0Kd+3a1ZirPFFtp1H69v777+sKh1TVd+/eLeXLlCnjbnuD
T6qutOjUqVPGXDlQhdO+ttqDgqWkpEjWW2+95bIVAao6+Pe//y2n0L5qalT1
sWPHSgquhbZCd6oum1LUswYFOlzKe/4Ij0+qrp6Brlq1ynsX/BNcUBnRSpcu
7euxhIQFM/7+4osvilO422ihNoQcO3Ysd+7cDufuPuNjJrVhQ61mQyVkoUO7
D03o3Llz4KruTjoyNa/MGJ9vCj6pumzVNhoAtm/fLlnqjR5fW+1BwUaPHi1Z
/fv3d9mKwFV90aJFcor27durRKOqwwBJmT9/vrZCtf9Ep+oilXfddZfOgE2b
Nkl5xPy6v4iRmpqqHtn7pOo7duyQwpUrV/7tt988NB/DvfFR+LPPPutwhvoe
DiQk+2DG39WLSAUKFDCurq9fv/6ee+5RqiI7fsGkSZO0xeCtImUQfG3ML8vC
+F+7Z2bGjBlqK0Igqu5OOjI1LyLlz58fEmEsIMeaVHUl3RUrVtQ+WcOUv0mT
JsYx0adWKwWbOnWq9qQnTpzAXAPpGEndPcsOXNVxsaQrtDUYVT0mJkZSateu
feDAATQ8Li4Ow5bjJjpVVy/nyrPIn3/+Wb0NqqIITA9RLWIGZE2ePLl48eK1
atWSVRSfVD1Tc1tWqVJl7dq1cgcePny4T58+uKDy68mTJ8uXL58nT55evXrB
nkznAntkZKRql5kOJCTsmPT3Nm3ayL0NZe7YsWN0dPS+ffsWLlzYvXt3iYeR
LpuBN27cKOseEKihQ4fCH9PT02fOnKm+B6VzQ7XdsXXr1snJydu2bevdu7cE
/IGrugfpyNTsWgctW7aE6kIb0YqoqCi1GcakqoOmTZvKIdWqVcMQBqGIj49X
05Pnn3/e71YrBUMnt23bds+ePQg4MSo9/PDDkm5cn1cEruqZzs/O4KTaFKOq
nz17FqOnsl+9a//AAw9Iu3Sqrl4Ek1sF/0NgJSstLU0933Q4xyz1MwJm9Gqm
76qOm1C7wSlfvnzqXTl12yA+0SYWK1ZMfVgAUm+yAwkJO+b9XS0OGClcuDAU
XpWU11UU2pf3e/bsqav2hx9+MFYI51VvLwai6h6kQ1AfLnMJFAlxndezC6dO
nXrsscfUsVotKlu2rGiRf63WvltqBALo4fs8vqq6bBd/9NFHPRcTVceArk1E
iK5VY6giip0+fVo+16xTdUxS1LKV0Lx5c5ULYcex8iBYQKiAIRLRtRRQz7sx
uulsq1mzpsOg6pnOTzp88cUXKrpQl2b06NFqWQbdjnGzSJEi2jLojZUrV5rp
PUKyA+b9HcybN69hw4ZavSpatGjjxo0TEhJ0JeFr8jKIAnNb3XM0xddffy3h
vYghYq0tW7YgfDXqm/y9hrp16+pqUGtEOlX3LB3CihUrkKgMEDD3//jjj6ED
2pLuzq7AdADDlrxWLyDYe++99zC1D6TVStXHjRsn3xYWIKrvv/++5++T+Krq
AZKRkbF79+65c+eaebsh07lUHhMTs3jxYpfvuCHA3rx585w5czAB9Lwe7pOF
uF1xJ0Oo3Y2GOBfOi1YsW7ZMvgYTlFMTkjX44e8QHEx7o6KidPGnkePHj0Mz
4bOe3xPMdAa6sbGxCxYsMPN1WV/xLB2qDEYiNApmuNzHYh6lbFBpz5/zNdlq
peoSMaIVmBlhEmFG6LJY1QkhYYf+nv0J5O/+UNUJsRv09+wPVZ0QYh76e/aH
qk4IMQ/9PftDVSeEmIf+nv1ZsmRJrVq1ateubdxr5BWqOiF2g/5ubajqhNgN
+ru1oaoTYjfo79aGqk6I3aC/WxuqOiF2g/5ubajqhNgN+ru1oaoTYjfo79aG
qk6I3aC/WxuqOiF2g/5ubajqhNgN+ru1+R8hhBBCCCEk23ODEGID6O/WhqpO
iN2gv1sbqjohdoP+bm2o6oTYDfq7taGqE2I36O/WhqpOiN2gv1sbqjohdoP+
bm2o6oTYDfq7taGqE2I36O/WhqpOiN2gv1sbqjohdoP+bm2o6oTYDfq7taGq
E2I36O/WhqpOiN2gv1sbqjohdoP+bm3Coupbt25dt27dnj17suyMHsh6Y+Lj
43HGzZs3Z9kZw062uuKEqm5t/Fb1jIyMnTt3wlv//PNPX0/6wAMPOByOWrVq
aROnTZvWsmXLKVOm+FpbgLg0JqTUrVsXZ7z77ruz7IxhJ1tdcaty4sQJ+OPB
gwf//vtvzyWp6tbGP1Xv27dv3rx5HU527Nihzbp69Spc9RUnSUlJLg83+nhi
YqLjJocPH/arKX5CVQ+QHHfFrUqfPn2kPx966CGdV+ow6e/Xrl3DDGvMmDH9
+vXDELxr166g2UpCiR+qvmbNGocGROza3NjYWJXVv39/lzUYfXz//v1ySL58
+U6fPu1va/zBnqp+9uzZF5ykpKQEWFWOu+IhIohd6h+fffaZuhDly5eHJrsr
acbf4deoxPFPcAWPHTsWZLtJsPFD1Tt06IDrmydPnmXLlp07d+769eva3Hbt
2ql74OGHH3ZZg0sh/eGHHz7++OOsnxjaU9V/+uknuUb4IcCqctwVDxFB7FL/
+Ouvv1JTU7t37y5mxMXFuSvp1d/nzJmTP39+qQc36tNPP12gQAH5tUKFChcu
XAi+9SR4+KHqL774Ii4upMmY9ffffxcrVgy5b7/9toc7POuF1AP2VPUNGzYE
RYJy4hUPEcHq0gD5448/cuXKBTNmzpzproxnf//9998LFiwoAo6hQcI2xG9N
mjSRBg4fPjwUlpNg4YeqP/PMM7iyrVq1MmatWrUKWbipjh8/XqhQIfz8+eef
G4v55+OZmZnyMMjD1PKG85kR/Mv8pF6MqV27tkrBKTD9hHd4PjA9PR0nSktL
83qKS5cuwTuSk5PFQWRY9E/VTdp25syZjRs3pqSk6GZSikWLFgVFgnLiFVdk
ZGRsdfLbb795LZxlXeqV//u//9u+fXtiYqI7S+644w6YMXr0aHc1ePV39Ak0
/OzZs9pE9JKofc2aNf0ynGQRfqj6U089hSvbunVrYxYSkVW9enX8/Prrrzuc
D26MxVz6OGZ5RYoUefnll43l582bV7FiRYlAwJ133vnuu+8iotCWwR0+ZsyY
UqVKqdWAMmXKYCLptTliTP369eHj7du3v+eee+Tw3Llzd+nSBbNaXXm49iuv
vFKyZEl1Ipg9bdo0l5Xv27cPg+Att9wiJQsXLjx48GC00aSqS59Mnz7dpG3o
hPHjx5cuXVrZBjfs0aMHDldlpkyZghhM3FMKFHGCy+rVHiM58YrfcG4uff75
59WB6M8iGlq2bKk9S9C79OLFi3fddRcK9OzZU5c1aNAgOfbXX39VidWqVUNK
ZGTkgQMHGjZseNttt8mJMIx27twZIq+rBN2F3BEjRrhrvt97YOrUqYOa77vv
Pj+OJVmGH6oOZ8SV7dixoy4ddxdUC1lffvklfp01a5bce3v37tWVdOnjLhMh
XHAxhyvg9arYlStXRCoFtSQI+vXr57k5ct6yZcsanw2B3r17awurSaiRcePG
6WqeO3euckAjZlRdbGvRogWk0qttly9fbtCggctzoR6lEgMHDnRZplKlSl7t
0ZFDr/iWLVvy5MnjcE4x0LHQKN2JGjVqFNIuPX/+vBTo1KmTLuvTTz+VrFOn
Tuk6CqbeeuutxrMgctbtLhZVj4iIcNcDfqs6xhfU/Mgjj/hxLMky/FD1xx9/
HFf2448/1qUvX75cbjPZAYX5msSoffr00ZU07+O4M6XO4sWLz549G36EKTCc
CLc3NFMVgyNLsWbNmsmSSHJysgRj8N+jR496aI6cV2jcuDHm0TgWs1dxfIRD
2uUOtFr8KDo6GtWeO3cOEZT4GgJprXOlp6eLczmcI+D+/ftPnjw5f/78cuXK
SaJ5VTdpW9++fZWYxMbGIpjEPP2ll16SxCeffFLWMdCByP3www8lHeFurBM/
1g1y4hW/evUqRnCHM/7fsGGDJE6YMEFq++yzzw4dOnTixImQdql/qi506NAB
oxJyFyxYgIBfEnV7/osWLYpEVOWuE/xTdTQfkxrUjJb6eizJSvxQdUwGcWW/
+uorXTrmyEgvWbKkWu4TL8M9qStp0seTkpIkBsNdqlu+PnPmjPoZ7pwvXz6H
JsQSLly4IJGk0XeM53U4F4S1C5Xq8V9CQoJKxI29atUqXQ2ffPKJlNy0aZNK
lKUJo3NdunSpSpUqvqq6V9sSExPlDQKMGhhrVEmEvrKMD5YtW6bShwwZIomB
LALnxCuudlQOHjxYmy6zMEQsKiV0XeqfqmMQj4mJ0bVFFqkqVKigvT0QSyPx
9ddfd2eAf6o+YsQIsW3GjBm+HkuyEl9VfePGjcb7GSBMlXXFtm3bqsThw4dL
Yd37CyZ9XN1Fnp+5Y3yRYnB2XVbnzp2RXqNGDQ+Hy3mNZaZPny7VrlixwsPh
YP369VISsaWkwMVkJ1iJEiWMTzbN74Exb9uwYcNchm1gx44dkqVdwQ5c1XPo
FZ85c6Ycq7vhpUMg4+rFzNB1qX+q7vJZc/369aU85oYq8f3333c4J48XL150
aYAfqo75yO233+5wTlu8vrtKwot5Vc/MzMSMu0yZMiJWumc0S5YskbsLZVQi
Qi9J/O9//6stbNLH33vvPTnc8/YGiRiLFSt2xADO63AGkx4Od+cyEEw5u8sH
cHC6efPmdenSBQKiJsJff/215B47dkxS2rVrZzzWV1U3Y9s777wjKdqneAq5
aog5VUrgqp5Dr7gaghcuXKhN79mzp9SpUkLXpUFUdbWkv337dpUYFxcnMXzT
pk0Rhhl3EPmq6qhBTU+Mc1WS3TCv6mPHjpXLCjnS3kJCq1atJLdy5cr/0iCJ
ZcuW1RY26eNPPPGEwznx9GyYFPPArbfe6uFwdy7z448/ulR1xGmNGzd2eSK1
60C9fot4z3jGwFXdaJt0dZEiRVzWU7t2bYdzwfnq1auSEriq59ArjqmTrKvU
qVNHJUJmcTmQ+NJLL6nE0HVpEFV98uTJUn7BggXadAQY6pse6jGBwldV79q1
q1SF8dT8USRc+KHqNWvW1G67uuHcKqBePXPHtm3bVHmTPl61alWH86mZZ8Ok
GGjihrfeesvD4T6pulr6yJ07d4MGDfDr3r174+PjJVGp+sqVKyVl5MiRxjOG
QtWlEwoXLuyynnr16jn+ubwQoKrn6Cvev39/ObxRo0YxMTHR0dEPP/ywXFNE
trqzhKJLg6jqas1q9erV2vR169bJIwZHwKo+atQoqad69epXrlwxeRQJI+ZV
/dChQxiy5QUH3GDapzOYzMp179Kly7f/RM0Qu3fvrsqb9HEVErucAuuKFSxY
0N1LGZ4xr5xJSUmy+QSz74MHD6qS+Fmn6uqRnG4hQgiFqqu+crmUKvVoN6QF
qOo5+oqji9TecgUGKcS9xrOEokuVqhsX6HxVdXmOAFJTU1UibkjZUluxYsWh
Q4diCNYdZV7V58+fL/teSpYs+csvv5g5hIQdX5+WRkZGyl2k/cqEbDBG3ILb
VVcefnfvvfcit1SpUsoHTfp4t27d5Fzu3vERevToIcW0gZZ5zCvnlClTJAVZ
2pJGVYcOSEq1atWMZwyFqsuWS4erpwAQGVll1W6KgLNLef8+xJejr7gsmNep
UyciIgJ90qZNG4SjRskKXZf+9ddfIpWvvfaaLkt9xcWMqqMeeT0KGq4d4GTB
BOOUVuq1mPT3pUuXyjIOBkF+Gz8H4auqYwom8eqgQYMk5dKlS/JwXLsmqaVj
x45yo6q/E2HSx3EjyYGIjbVby244v4+ntrodOHBAij366KPG9+y8Yl45ldtq
nw/e0GzJ0L7NJ7v6wcqVK7WFd+/eXbx48aCruvq0VOXKlbW7buDszZo1k6xZ
s2apdATVkjhx4kTjeTFODRs2LDEx0aVVOfqKI3AV471ubQpul+qQd5Pxv3Y/
CQJjcS6Xqo7G6hZAvvnmGymsW3GS/aWYa7g7uxl/x00uL2Lkz5/fv9GThAtf
VR08+OCDuNbt27eXX6Ojoz3fzPKpEPDRRx9Jijzt0n0s1KXjN2zYUI5F4XXr
1uGuhnfPmDGjRIkSL7zwgopPWrRoIcWqVq26bds2eYB18uTJL7/8EhWq51ku
Ma+cMEBS6tWrl5aWhrPv3bsX4ZbjJlpVV1tEoCEwGDEtosHx48eLpARd1UHz
5s0lsXr16pBHtDopKUm9p6l9OHhD8/ncp556Cq2ANqo1pczMTHl/6pZbbtHu
wFfk6CuO1smrUq+88gpCWYjqdScuCwerS400atRICnfo0CE9PX3//v39+vVT
X5ZwqeoO5770xYsXownIRVgl8wWorm5v//3334/0Xr16uTu7V3/HFZQ3AhzO
d3XRNNzPP2hYv369h8NJePFD1SUKxTRWfpW4BTcYfMpledzeohKITMSp1dy2
cOHCygFd+vjvv/+uHo2JzqifMStUf6MB0aN8x0DAfa4eFTncbE1UmFfOP//8
U3ZKKLlWviaG6b680bRpU4crZFNc0FX94sWL8kK3sa/KlSun+3sW6Hb1lqvD
uZcDXiyhoNqMDfr27Wu0Kqdfce2nBrQ1YBxp0qSJdqkhWF1qRPdHClQDe/fu
LT+7e7dUB0yaNGmSrnK5SwcOHOiuBzz7O+5z7RcYXPLYY4956GESXvxQdfm6
l0z6cCeLuMHFPBwi331y3FxyjIuLU7fNoUOHpIxMAYyTerj5J598ot1xgYkh
4iWdpGBmHRERIZ8N1Loe7nnPk3R351XvW2klAkGRVnPuuusu2IZTY5LuMKg6
BA2hoxJ/h/PpVUxMzLRp0xxObfdglR+23XBu2/v000/libaAfm7bti2iO2Pl
kC8J6lTJ+Pj4G87VWvXxEwi47igLXPHZs2d70KvcuXNrP00QlC51yYQJE9R3
XSDONWrUSEhIUM/ZjaqOqQpuMO1zXgxD6qMHWmSA8/Aml2d/R8eq76q548kn
n3R3OAk7fqj6s88+6zAs5fnKiRMnli5dCmc3+WdPEZvBQTD12717twefhZAe
OXIEyom7Xfcd0WCBU0CXMCH9+eefzZSHDMJV0dgs20IACxMTE2EhVMLza4DI
PXDgAHrVWFK+auJhFu8r2eSKb968GboN1YqMjDx48OC2bdu2bt2KxOnTp6vv
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
CCGEEEIIIYRkBf8P0csjNg==
    "], {{0, 102.}, {249., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{249., 102.},
  PlotRange->{{0, 249.}, {0, 102.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251025602577*^9, 3.915337706687479*^9, 
  3.9159894726638937`*^9},
 CellLabel->"Out[8]=",
 CellID->274011390,ExpressionUUID->"dc57408c-f4c7-4eda-a126-62556219fad2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"cebb1ec7-2d16-42f8-aba6-3820d0a10891"],

Cell["\<\
Search for a lexical pattern in Wikipedia articles containing \"darwin\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251098096149*^9, 3.867251107978134*^9}, {
  3.867251186252664*^9, 3.867251196349597*^9}},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"3e693496-5bf7-4057-87fe-11795dc2ea2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"darwin", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<darwin\>\""}], ",", 
     RowBox[{
      RowBox[{"BoundToken", "[", "\"\<theory of\>\"", "]"}], "~~", 
      "\"\< \>\"", "~~", 
      RowBox[{"WordToken", "[", "1", "]"}]}], ",", 
     RowBox[{"MaxItems", "->", "1000"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251109517704*^9, 3.8672512099533*^9}, {
  3.915985309682274*^9, 3.9159853249693527`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[9]:=",
 CellID->978490832,ExpressionUUID->"662d8154-fa39-4a14-aa92-9b98569039f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"darwin", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251315746311*^9, 3.8672513188938837`*^9}},
 CellLabel->"In[10]:=",
 CellID->2047610439,ExpressionUUID->"1288863a-2f6b-422e-96af-8a84979eb93c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xl4Def7P/BjCbHFvn3UEoTY9zWUINROlWpLUYqqKlr7Ultr/8QSaim1
1JpGIqKWiK8lghBExR5BrAmyCCFEfvfv3Jfnms/MWScnOYz36w9XzjPPmfPM
zInrfmdmnnH+5sdPB2fV6XQ/OdI/nw4Y5z569IAJPQrQi54jfvpuyIhvB7Uf
8fO3Q74d3fibbNT4Gf0zKLtO9/9/TgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAsJH/AwAAAAAAAAAAAAAAALBYIgAAAAAAWAxVtLYhKwEAAAAAqIMqWtuQ
lQAAAAAA1EEVrW3ISgAAAAAA6qCK1jZkJQAAAAAAdVBFaxuyEgAAAACAOqii
tQ1ZCQAAAABAHVTR2oasBAAAAACgDqpobUNWAgAAAABQB1W0tiErAQAAAACo
gypa25CVAAAAAADUQRWtbchKAAAAAADqoIrWNmQlAAAAAAB1UEVrG7ISAAAA
AIA6qKK1DVkJAAAAAEAdVNHahqwEAAAAAKAOqmhtQ1YCAAAAAFAHVbS2aTUr
Xbt2bZferVu37D0WAAAAANAm7VXRIKXVrLRy5UqdXkBAgL3HAgAAAADapLqK
fvLkic0HY3fx8fEJCQn2HoUtWZuVfv311w56Xl5exvqEh4d3eMt2I7UOshIA
AAAAZDSrslJMTMyCBQu++OKLypUrZ8mSJWfOnC1btly9ejW1Z+ggMxTlIyq8
v/nmm3r16jk6Ojo4ODg7Ow8aNOj06dP2HpoNWJuVevXqxRmkQoUKxvpMmDBB
95bqgc2aNevjjz+mVal7O7ISAAAAAGQ0y6vo0NDQqlWr6gypVavWpUuXMnqo
KpgtyCMiIpo2bWpwo3LlymXi3Mr7QnVWIkFBQQb7UIxKf1bq0qULvZ3+Vfd2
ZCUAAAAAyGgWVtFbtmxxdHTk6rRMmTJffvnlb7/9NnTo0MqVK3OjHS/HMsF0
QU5ltpOTE4+/SJEiXbt2nTZt2sSJE9u1ayc21lheeF+kJyt9++23yg4HDx6U
JkrVA2vWrBmyEgAAAAC8yyypou/fv1+iRAkuTfv06RMbGysWxcXF/fjjj5Se
rl69msEjVcNEQU5bUa5cOd6o9u3b3759W7r0+PHjFStWHDt2bGaNNKOoy0oc
IQsVKvT48WNZhyFDhogOJrLStWvX/vnnnwsXLhjrwOcozWalu3fvBgYGhoaG
xsfHS9tFVtq9e7fouXfvXhOfKFy6dInGFhkZaaLPvXv3jhw5smfPHktWCAAA
AACaZEkVPWbMGK5LqU422MHYPA/UHhISEhQURGkrvQM1gqpoGv+DBw8MLjVR
kE+ZMoU3qnfv3gbnczA7eUVYWBjV0lFRUcpFN27coEXnz5/PoJkiLl++vG/f
vujoaLM91WWlVq1aFShQgH7Ytm2bdCntkyJFilD7Z599ZjAr0VZ36NChWLFi
4sQTrUd2KWO1atVKliyZJUsWWpo9e/YCb23atEnabd26dS4uLmI9efPmpSN1
8+ZNXiqyEiWpLVu2NGrUKFu2bNxSunTpgwcPKjeNjsWcOXPoo8U6P/roozVr
1si6nT17lrKz9NxZ9erVly9fbsneAwAAAAAtMVtFU3XKF6TlyZPHYC4w6N9/
//Xw8MiZM6coOGvXrr1r1y5Zt3v37hUuXJjq5B9++EG2aPLkyVxCX79+XTTW
r1+fWpYtW0YxoX///sWLF+eVU+E9ePBg6UkQ0wU5vT137ty0iEZIucPCjeJP
//33369evUrFubh4T3SganzBggWlSpUSW50vX77hw4fLQo21W/3nn39SS/ny
5SmqTJs2TZwOI66urhQWTIxZXVZyc3Oj3Us/dO/eXbr077//1ukvwpw+fboy
K33yySc6I+bPny+68UFRos3kDnQcu3XrZrAPpSfuI7KSu7u7shsdXNl3NSYm
pl27dqKD9Js5btw40Y3eJT18uXLlEj8vWrTIkh0IAAAAAJphtores2cP14rK
wt6YzZs3582b12CtO2PGDGnP27dvc/vAgQNlK/npp594kfTqPo4JXbt2rVix
onLlI0eOFD1NF+T79+/nl0OHDrVwo8Snjx07tl69emKFVIHz0ocPH7Zu3drg
h9IbpdnH2q0WuaBGjRrKlefIkYN2uLExq8tKderU4eNOMfnOnTtiac+ePalx
zJgxYio86Xu///57amnSpAnt5PDw8Fu3bi1dutTBwYEaKdWKSzf9/f137tzJ
p4GqV6++8y1xclCc8itUqNDq1atp150/f37SpEm0qrVr18r2CcmfPz9FyKNH
j9I2ikMzdepU6dgoEHF7p06d+LK6s2fPNm7cmFpoJDRa7kbv4m7ffffdpUuX
KPweP368Q4cOtOff68keAQAAAEAFs1X04sWLuXrcsGGDJSukypZqV34LFdXn
zp2jsn/RokVitoStW7eKzuqyEmvbtu1ff/1FFe/s2bO58HZychL1tumC3MvL
SxqdLCT99AYNGuzYsWPv3r1UovPS0aNH8yIXFxf6oOjo6KCgIHHWo27duuKO
G9VZSac/p7NixQoq4+lzv/rqK24sXbq0sSsG1WUlV1dXiglly5aln5ctW8aL
7t+/zyfjwsLCKJYqsxJtso+Pj2yFP/74I/ekfSVt5wylvDzyzJkzfNKnYMGC
snuFbty4odwnzs7O0tnd6e3c3rFjR9FIXxJKlNTo4eEhXSHFQP6uigNBMZxe
0thkV3Uq79sCAAAAAM0zW0UPHz6ci88jR45YssLevXtz/zlz5kjbd+/eze21
atUSjaqzEqUw6a1AYva2Y8eOSVdirCD/4YcfuP/hw4ct2SjZpzdq1Eh2loHK
9ezZs9Miyhe3bt0S7VRjt2zZUhYSVWelzp07yy7nE9eqrVq1yuCY1WWlSpUq
0c/jx4+nn5s3b86L6CM4JCZKEpDZFQYEBHDP1atXS9uNHZqZM2dyf9kpSBmx
TyiWyhZ99NFHHE5FC62KO1NoknUeNGgQH1B+Kb7t69atM7tpAAAAAKBtZqvo
Tz/9lKtH6V/1jYmPj+dbPAye6fDw8OBVHTp0iFvUZSVR2QrLli3jzt7e3tJ2
YwW52CjZZGjdu3d3+V/SG23407NkyRIaGipbobh/Z8mSJbJFYpJtcbWe6qyk
nB87MDCQFw0YMCDRkPRkpXPnzvH28sOz+PD997//TTSXlWjwlDUGDx5MR6pw
4cLc89dff5X2MXZovvjiC4OHRsbEPqGURO0VK1YULZzfCxUqdE5hxIgRtKhY
sWLc88CBA2KOiKZNm27atEk2/x4AAAAAfDjMVtF9+/bl0vHUqVNm18bVNRk2
bJhyqUg0K1as4BZ1WYmKWFlnikjcWTatmbGC3NhG1a9fX/e/vvvuO9mnK5Ma
+fzzz7m/wbnp+ExH2bJl1W21iVxAlTzX9m3atFF+bmL6shLhO3pmzJgRFRVF
H0T7k2eiM5aVKBi2bdtWZ8jMmTOlPY0dmtq1a+v0l1OaHqeJfcLTbkizEq/T
BBqM6Lxx40aR73T6e83mzp1rbKJFAAAAANAws1X05MmTuWiUnbIxaOvWrdyZ
ykvlUnEZ3oQJE7jFVlnJz8+PO1uYlYxtFK3nv2/x7BDKrKT8dFKrVi2dfn5s
g7vFzc1Np59DIC4uTsVWm37uKk/Q7erqavCj05mVli5dSi+rVavGt6117tyZ
2w1mJZGFade1bt2aXgYHBx89etSqrFS9enWd/hyQ6XFalZV4neQTI3r27Cld
AyWjOXPmcMJldevWFdOVAwAAAMAHwmwV/ccff3C5OGvWLLNr27x5M3eW3azE
9u3b945kJbFRsgJe6j//+Y/lWYmr8fz58xtcVYsWLXT6qcv5ukTbZqU8efLo
3t5GpJTOrBQdHc2TcvD07Fu2bOF2ZVY6c+YMn+GiiCG9RpF+tioridNSpp8e
ZVVW4nXmy5fPqsddUbDdtGkTT3BB+vfvb/l7AQAAAEADzFbRp06d4lrR2dmZ
T4uYXht3HjFihHKpqG/FlHoiNfTr10/WOUOz0unTp7l/mTJljE1xZlVWEhX+
vXv3lEv5jeLUj7VbbSIX3Lhxgxd9+eWXBrcinVmJ9OjRgz+iUKFCYl8ps9KS
JUu4hY6FdIXGshJPTCfu4RJoh3N/2RNsZazKSmLGhj179pjfBf+LDijnxNKl
S1v7XgAAAAB4r1lSRbdp04ZLTWOTrYlJ4W7dupU1a1adft5s5U3xYtI2cZcQ
1d58qZt0hmc2bNiw9GclYwV5ouTBqcrZGJhVWYkfLaQcADlx4gQvEs91tXar
TeQCT09PXjRt2jSDW5H+rOTj48MfMXjwYNGozEo0AG7Zvn27dIViDjpZVuIA
UrRoUdkAjhw5wv0/+ugj6YyCifoHxYoJRqzKSidPnuTOVatWffTokYnNpxCt
nLijSZMmOv1pKRNvBAAAAADtsaSKFo+jzZs3r/KupYMHD5YsWVLU6vyEGvL7
779Lu1ENzAGBYpT0/BTfbkP/SufNW79+vZiOLD1ZyVhBnih5HK2joyMV3soO
/F4Ls5IIRJUrV5bOA5CQkNCpUydl0rRqq0Uu+OOPP6QfGh0dXaZMGWqnfGps
5o30ZyU6WLwrpGtQZqVdu3ZxS4sWLS5cuEAbHhwcTGFQ95YsK3Gi0elvbaM9
dvHiRYpCvEhkc2dnZ1otJXFatGLFiiJFinz88cd8HZ1VWSlR8rWsXr36gQMH
+Bt45cqV8ePH0wHll3fv3q1QoUL27NnHjh1L40nU37i0evVqsV2W7EAAAAAA
0AwLq+iBAwdyxUh5Z+jQoVu3bg0PD//7779HjhzJ526onR9ec/jwYb7yjcr+
2bNnU5V7//79DRs2ODk5GSxuxUTiAwYMuHbt2vHjx8eNG8cnp9KflUwU5ImS
pyyRnj17UpahxEFbsWnTJjEhnoVZiXTu3JnfUqdOHQqGVH6fOXNGnEpr1qyZ
6q0WuYB28qBBg8LCwh49ekRZr0qVKtyuvO9JSH9WIpcvX6YPlbYos1JsbCxl
UjF+njqelC9fnrdLlpXE44D5q0L/UmzhRTdv3hSzMej0SVD8nC9fPtqridZn
JfoSSic5zJkzp3hisvjaUOqXNhYuXJifiqvT32tm4Q4EAAAAAM2wvIoWl4cp
FShQgHKT6MkPLRX4dBL76aefZKv19fVVrpBKYkph/HN6spKJgpyNGTPG2Ebp
9HX+gQMHzH46u3fvXs2aNcV7pRV+2bJlucJXt9UiFxhEsUIaAGWszUr8eKMa
NWqY7sZZiWKytPHChQvSjENZg7o9fPiwcuXKOkVWevLkibhwkX366adiKcUl
ei9PW8EogFPwvHLlCncQs3NQZpSNrXnz5jpFViI0kilTpojMLg6Np6enuDCP
djul0YIFC0r70N74559/LNl7AAAAAKAlllfRZNu2bZ988ok0BRQqVKhDhw7n
zp2T9aQKlh8JKlSoUEF217+wcOFCPhXFEaNRo0bHjh07fvy4MjXQSqjF3d1d
tgZxlaAsK5kuyNnu3bupUQyAOTs7jxo1iqpraU9jny48ePCAwmDu3LnFenLm
zPn111/fvXs3PVststLSpUubNWsmVk5RpV+/fuJmMYOszUrpFB8ff/r06S1b
tljyNK5E/S1Iu3bt2rFjh8EnHd+/f//o0aObN28+fPiw6fuMrBohfV3pm0zx
x1jGpM+iz6Wt8Pf3v3TpklWz5wEAAACAZqiooqmMDwgI2LRpk+xcidLt27cp
iVAlHBkZabrnvXv3AgMDvb29Tc8UrY7pglz0oXxHG0XDMDiXneVEXqDsI70d
ScnCrRZZic9u0Fb8/fffBw4csCQ+ZHJWAgAAAADQDFTR7z7Tz1cyDVkJAAAA
AEAdVNHvPmQlAAAAAIDMhyr63YesBAAAAACQ+VBFv/uQlQAAAAAAMh+q6Hef
n5/fxx9/3KJFC+V8g2YhKwEAAAAAqIMqWtuQlQAAAAAA1EEVrW3ISgAAAAAA
6qCK1jZkJQAAAAAAdVBFaxuyEgAAAACAOqiitQ1ZCQAAAABAHVTR2oasBAAA
AACgDqpobUNWAgAAAABQB1W0tiErAQAAAACogypa25CVAAAAAADUQRWtbf8H
AAAAAAAAAAAAAAAAYKU0AAAAAACwGKpobUNWAgAAAABQB1W0tiErAQAAAACo
gypa25CVAAAAAADUQRWtbchKAAAAAADqoIrWNmQlAAAAAAB1UEVrG7ISAAAA
AIA6qKK1DVkJAAAAAEAdVNHahqwEAAAAAKAOqmhtQ1YCAAAAAFAHVbS2ISsB
AAAAAKiDKlrbkJUAAAAAANRBFa1tyEoAAAAAAOqgitY2ZCUAAAAAAHVQRWsb
shIAAAAAgDqoorUtE7JSSEhIUFBQWFhYBq3//RIZGenl5fXDDz9MmjRp+/bt
r1+/tveIDMAhAwAAALAEspK2qc5K8fHxoaGhVFS/ePHCdM/y5cvrdLqPP/5Y
/Si1wsfHJ0+ePLq3HB0dk5OT7T0oAzL0kFFaHDZs2KBBg27evJkR65eJjo6m
b2lERMSrV68y4eMAAADgg4KspG3qstKECRMcHBy44D958qTpzshKLCkpqVix
YrzTKlas2KRJkx49eth7UIZl6CHr3bs374QvvvgiI9YvM378eP64SpUqmf2u
AgAAAFjFwio6NTU1KCho0aJFU6dOXbNmzalTp0z3v3v3rq+v77Rp0/78889L
ly69efNGLIqNjT1rzrv51/j3kYqstG/fPp1EaGhomv6otdK7ceOGrD+yEgsI
COA91r9/f/p9sfdwTLHJIVuwYAF9H+h3XNZOCZH3w6hRo9KzfgtNmjRJfFcr
VKjwju95AAAAeL9YUkVTtUxFiO5/UaF169YtZefnz5/36dNH1rl27drXrl3j
DosXL9aZs3r1aptv6YdJRVYaMmQIHYLs2bP7+/s/efKEc+6///7Lh4Z+kPVH
VmJeXl68i3x8fOw9FjNscsg4EynPnd2/f/+XX36ZP38+fXnSs34LpaSkREVF
jRw5knd+cHBwJnwoAAAAfCDMVtGbN292dHTkOqR48eKNGjXKmzevuNAoISFB
2vnevXt16tThpVmzZnV1dc2fPz+/LFCgQGJiYpplWWnbtm0ZutUfDhVZqU2b
NnQI3N3dpY2HDh1CVjLtt99+4110+fJle4/FDJscspYtWxrMSnbx7NmzLFmy
0Hg2bNhg77EAAACAdpiuoh8/fuzk5MSxKDg4mE8xPHnypFOnTlwWzps3T9r/
m2++4fbPP/+cY1Rqaupff/2VJ0+eFStWcB9KTDcNOXfuXK5cuei9bm5uuJDG
VlRkpcaNG+sUN5v4+PiYzkotWrQQLREREaGhoVS+mv6gFy9eULezZ8+avSuf
OoSHh584cSIpKcmSTaDv2LFjx2ioNrzfPyYm5vDhwzdu3JBeUColstLVq1et
WnN0dDRF0YcPH9pimBbtK5tkpRo1aqjLStYeTWb2S8Wzanh6elo7HgAAAABj
zFbRISEhlIxiY2OljY8ePeIM1bx5c9FIeYcnBOjVq5esnoyPjzc7kqFDh9J7
KS5ZW2qCCSqyUsOGDelADBgwgF+uWrWKkjIfbkI/FNSjbtyBC++2bdvSUR48
eHDJkiXFicXhw4enpKQoP4ISh4eHR44cObino6Njt27dZN8xFhUV1b59e3Fm
M0uWLPXq1QsKCpJ18/X1pSFVqVKFfl62bJk49dmgQQNqL1asmMHrwejbS0sp
G5rYG/RN9vLyKl26tDjpSXtg9OjR0q80jcfFxUXMgCd2kekpBGnNixYtKlWq
lFhzmTJlNm/ezEvPnTvHK1HeEJSmj6681M/Pz9p9lWYoKz19+rRo0aK0wp9+
+knWeebMmfxZDx484JaaNWvSsOn40kroV77gWzt27Eh7eyzI0aNHZauyfISN
GjWiNaxdu9byL1W+fPmow/z585WLAAAAANRRPQ8eX4Hz0UcfiZbvvvvO2KkH
syiR8SU0+LOwbanISlSm0oGg6MovZ8yYYfA6SVdXV+7AhXfZsmWVN7WRcePG
yda/a9cukbyyZ8+eLVs2/pnyiOwOOKq6uQBWkp3Q3LBhAzVS+PL29uYvEps8
eTL/IE5rCpTXeNGkSZOM7Yrnz5+3a9fO4ABoq0V2ECfdZExkpeTk5I4dO4qe
Ij6QqVOnpulPvvCsepTClG//7LPPaFHu3Lkp41i7r9IMZaW4uDjuTL/Fss4T
J07kRffu3eMWTklKW7duFceCHDx4ULoeFSOkzaxUqZKyv/JLlfY2K82aNcvY
PgcAAACwluqsxPclVatWTbRQbqKWVq1aqVhb3bp16b30L66+sy0VWal27do6
ySRmlCkCAwPF1ZWLFi0K1BOJmMta1qFDBwoO165do8xLOYha8ufPL71uKjY2
tlChQtRO/27ZsoXSBOURCjI5c+akRvoU0ZOSSIECBXT6sw8Uea5fv061OvXk
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
EiV0+r+ESO8r3L59O38flFmJzwgXL15cNhiDx8ImI0wzmZX46VQdOnRIAwAA
ALARS6poyjj8l21HR0cTfwnnS5vIjh07pO0DBgzg9tu3b8vesmLFCl60d+9e
tVsApliblYiLiwsdESrLpY2BgYF8pBo2bHj27Fmq8CMiIniRVWUt1cb8XaIK
fPr06Y8fP6ZGWhutv3Xr1lu2bBE9T58+LXp6eno+evQoKSnJ29ub7zySleKW
ZCUxw4NOP3lCXFyc2V3x6aefcv/69evTyKmYpxwk4l7Lli2lnS3PSmmS7FCr
Vq3jx49zTLh79+4vv/xCe1KaGsjff/8thk3/zp49W7Y2q/ZV2tvJJSpUqCA9
yyPm7h4yZMj9+/fPnz8/depUPh9kMCvxjVQ6/YwNlCXptzs2NjbNyLGwdoQq
slK5cuV0OEMNAAAANmW2it6zZw9fbEOodqKa1s/Pz1dCFDmvXr1ydnbW6S+D
obj0Wo/qIv67cffu3ZUrnzZtGq/Z2LkqSCcVWal27dp0RPr06SNtpEPJB5dR
xUvfCr5nzdqydtu2bfyVYEWLFhVnLipVqiTtuXHjRr7UjYl3UaPs8ayWZCUx
wwPp2rWrJbvi6dOnfLaUSYMD7Q1ZJrIqK1FS4JnMmaOjo5iUQLnHXrx4IZbS
tt+8eVO5Qsv3VZrk8kJarchl+/bt0yk4OTmNGzeOf5ZlpTVr1ki/D/QvBb00
48fCqhGqyErFixfX6a9UNL7XAQAAAKxjuoqmIo3vQjKhZs2aov+RI0cKFy7M
7bn0+OciRYoob3EiQ4YM4Q63bt3KiK0DFVmpYcOGdESkU7ExyrP8p3tR3p85
cybt7XkoDw8PWX/xWFtlWRsaGkplsPRb5ODg0Lt3b+W88ceOHWvQoIG0J32c
8iFKmzZt4qXU38SmDR06lLtt3brVwr1BCYsqeZ7yQmz4oEGDEhMTZT1FVrLw
y/z8+fNZs2aJ+MYogv3+++/KC/PoE7lDs2bNjK3Qwn2Vpn8Ukfi9vnz5smhf
tmwZn/3R6YOhm5vbuXPnzp8/zy2yrPTq1SuRudjnn3+eZvJYWD5CFV8qjpPz
5s0ztn8AAAAArGW6iqZyTvqnYIOo+JG+JTIysmnTptITBx07dpRVWQIV5NwH
k1ZlEBVZqUmTJjpDWSlNXx5TnPH19aUS2uDTsqySkJAQEhLi5+cXERGRkpJi
omdcXByNf+/evQ8fPkzPJ/bv3582jYKP9P4jS6Smpl66dImGapMNl635+vXr
u3btOnToEF/Dlk4W7qvo6OidO3dSaHrx4oW0/enTp3RQdu/ebfAJvEo05qCg
IPq4mJgY247QWpxnlRPIAAAAAKhmVRVtucTERKqgDhw48OTJE5uvHCynIivx
s4aV86G9765du8YnTfgpS6AlycnJ/FcXs1N2AAAAAFgug7ISvCNUZCW+3Ktw
4cLKuTjeX2/evOnSpQuX0+Hh4fYeDtiYmFgmKCjI3mMBAAAA7UBW0jYVWWnH
jh1cdjo4OJQvX156P8v7aOHChXPmzBG3R1EStPeIwJaWLl0qbqOjgI+reQEA
AMCGkJW0TUVWSk1NFTNak5MnT2bkADNWXFyc9Na5Zs2aJSUl2XtQYEvjx48X
k1EsW7bM3sMBAAAATUFW0jYVWYkdPnx4yZIl8+bNs+0N+JksMjKyU6dO1apV
69q1K22O7LlFoAHBwcHz589fuXLllStX7D0WAAAA0BpkJW1TnZUAAAAAAD5w
qKK1DVkJAAAAAEAdVNHahqwEAAAAAKAOqmhtQ1YCAAAAAFAHVbS2ISsBAAAA
AKiDKlrbkJUAAAAAANRBFa1tyEoAAAAAAOqgitY2ZCUAAAAAAHVQRWsbshIA
AAAAgDqoorUNWQkAAAAAQB1U0dr2fwAAAAAAAAAAAAAAAABWsvc5LgAAAACA
9wmqaG1DVgIAAAAAUAdVtLYhKwEAAAAAqIMqWtuQlQAAAAAA1EEVrW3ISgAA
AAAA6qCK1jZkJQAAAAAAdVBFaxuyEgAAAACAOqiitQ1ZCQAAAABAHVTR2oas
BAAAAACgDqpobUNWAgAAAABQB1W0tiErAQAAAACogypa25CVAAAAAADUQRWt
bchKAAAAAADqoIrWNmQlAAAAAAB1UEVrG7ISAAAAAIA6qKK1LROyUkhISFBQ
UFhYWAat//0SGRnp5eX1ww8/TJo0afv27a9fv7b3iOwMXw8AAAB4fyEraZvq
rBQfHx8aGkqF7osXL0z3LF++vE6n+/jjj9WPUit8fHzy5Mmje8vR0TE5Odne
g7Iz5dcjOjqavlcRERGvXr2y48AAAAAAzEJW0jZ1WWnChAkODg5c8J88edJ0
Z2QllpSUVKxYMd5pFStWbNKkSY8ePew9KPtTfj3Gjx/Pe6lSpUpmv10AAAAA
dmR5Ff306dPdu3fPnz9/9uzZe/bsiY2NNdjt5cuXx48f9/T0pJ605sTERFsO
F6ykIivt27dPJxEaGkqNdLhb6d24cUPWH1mJBQQE8B7r379/amqqvYaxYMEC
OkzTpk2z1wBklF+PSZMmiW9XhQoV7LivAAAAAEyzsIresmVLyZIlpSV0njx5
du7cKe2TkpJCVVDOnDml3bJmzTp8+HDctWEvKrLSkCFD6MBlz57d39//yZMn
b968ocZ///2XDyj9IOuPrMS8vLx4F/n4+NhxGD169KAxvDuntJRfD/qPIioq
auTIkby7goOD7Tg8AAAAABMsqaKDgoIo8lBVky9fvr59+3799dfFixfnHLRm
zRruc+/evXr16nHxkyVLlmrVqjVs2FBcx9W9e/cM3xIwREVWatOmDR0yd3d3
aeOhQ4eQlUz77bffeBddvnzZjsNo2bLlO56V2LNnz+g/Clq0YcMGuwwMAAAA
wCxLquhatWpRSVO0aNGbN29yy6NHj+rWrUuNNWvW5JbExMQaNWpQy9ChQ8Xl
eVeuXClXrhwXkOK9kJlUZKXGjRvT8friiy+kjT4+PqazUosWLURLREREaGgo
FcOmP+jFixfU7ezZs2bv8acO4eHhJ06cSEpKsmQT6Nt47NgxGqoNZw+IiYk5
fPjwjRs3+ESbkshKV69eVbF+C3fa/fv3Kbea+G3iX0ObZyX6XabNN3jlrekh
mYjSPA+Gp6enbYcKAAAAYCtmq2iqTrNly0YlzaxZs6TtgYGBfArpwYMH3HLr
1i0/Pz/Z2zdt2sQF5KpVq2w6cLCIiqzUsGFDOl4DBgzgl3TgKlas6OTkxMeR
fiioR924AxfDbdu2jY+PHzx4sLhWky+/TElJUX4EJQ4PD48cOXJwT0dHx27d
uhmsw6Oiotq3b08dxCnLevXqBQUFybr5+vrSkKpUqUI/L1u2LG/evNy/QYMG
1F6sWLEnT54oV968eXNaStnQxN6gZOTl5VW6dGlxWSntgdGjR9PGij40HhcX
FzEDnthFJqYQbNSoEXVYu3athTuNckqXLl1KlCghhkFvF2d1Wc2aNUuVKsWn
gB0cHAq+tWPHjjT9/YZFixallz/99JNs5TNnzuSe4ndZjHDdunX37t1zc3Pj
D6U9adWQ0kxmpXz58tGi+fPnG9tLAAAAAPZltoqmSokLoSVLlkjbKRlx+4ED
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
JvLjhNKTlWhncucyZcpI50VP01+pKJ3Zu2TJkjr9vWzKbSlRooROP52C9DzR
9u3b+YskzUoUe/mUTZ06daRruHXrFh1NZVYy9qEXLlzgNdMOlE1CIiOe70bb
Lh0e/Txo0CCDWYn3aocOHUysFgAAAD4QNsxKVPXxTRykS5cuyqmeIfNZm5WI
i4uLrPwmgYGBfGQbNmx49uxZKlAjIiJ4kVVZiYpzvrCKCunp06c/fvyYGmlt
tH768vDDT9np06dFT09Pz0ePHiUlJXl7e/OdR7IsYElWEjM86PT3/sfFxZnd
FeIKrvr169PIKZpRDhJxr2XLltLOKrKSTj9L9o4dOyj4UKCgfMqnqxwdHaVP
OxJTlFMeCQoKohTz999/86R26cxK5JNPPuH+9KtNK6ffYlr/+vXrixUr1qpV
K/HnDjc3N+5GaY6S4+3bt6kbLxJTuA8ZMuT+/fvnz5+fOnUqnxaUZSVC/3Vw
I4UpOu4U0Oi48CO9lFnJxIeKKF2rVq3jx49zar579+4vv/xCX0URomn8lMu4
J20phawXL14cPXpUPFBYmZXKlStHjWPHjjV7EAEAAEDzLKmiT5w4ceytUqVK
cVklWhISEqgPVSDt2rXj2qNQoUJUJwcEBPj+L0seswK2pSIr1a5dmw5inz59
pI1UfDo7O4vykvJLzpw5+ZyIVVmJbNu2jU8MsaJFi4oTELIyfuPGjZwdmHgX
NU6cOFHa05KsJGZ4IF27drVkVzx9+lRU2jr9LU7iZ9obskykLisp0acoZxvg
+dxkKMrxZH3pyUoUV8VUCbJtdHJyEtuyZs0a6dGnfymV8KJ9+/Ypx0bvHTdu
HP8s/cVftGiR6EORkI8p/csJXZaVTHyo9FpfXpWYjUH3v1+5Q4cO5c2bVzlC
zkQ6RVYqXrw4Nc6YMcPsQQQAAADNs6SKNlhpCHyf/rRp00z0YTt27MiMTQIJ
FVmJpw6TXgPGwsLCRHnJ1emZM2fS3p6H8vDwkPUX94MoL7cLDQ3lZ48KDg4O
vXv3vnDhgqwnhXHpCRSdfg495UOUNm3axEupv4lNEw/82rp1q4V7gxIW5TKe
8kJs+KBBgxITE2U9RVa6deuW2dVyVmrVqtX8+fP5mkBWoUIFqu2V/aOjo/ka
QlaiRIkJEyakpqbymS9pVjKxK3imdFlWStPHpTFjxkh/zXPkyNGzZ0/pVBKv
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
Pu1iLq9du/ZPP/1Eo4UGKuX1tHAaV1xH+2BjXPnTTz9V2XEAAABwX0GuZGw6
cqUHH3yQdtxXX30lLRQ341i7X8lkPokjvZfntdde4/Jjx46JwlGjRpnM14nJ
Ugk+e1WhQgUxHf3rr78usjPZFnF5hw4dRKGItCmH2rp1q7T++PHj+SXKDqTl
Tz75JBW2bdvWWj8kJCTwQ6aaNGkivYQvPz+fp78g0nzNrvuVVHIl+ohJZ4eg
pfF5liFDhiiXoKXbacM5O+jfv790CZRIcjb6zjvvKBfbrVs35YN0LU4owbmP
xfuVKLvcuXOnrPDjjz/mVVAWpm/zqZBPjVF2I7uh6dq1a+J37YON+fr6UvnL
L7+s3BAAAAC4PyFXMjZ7c6W9e/cqs4BiDbkShday8u+//57fsmPHDi6hkJ5v
6qF4XlaZQlyuHBYWRn8WFhby9CCNGjVS3oxPMT9XPnz4MJeISHvYsGGyynFx
cfzSjBkzROHly5c5AqftstYVCxYs4DeuXLlS9lJUVBS/JL3hyFG5EveAVMOG
DU3m01jKJWjpdkp7LWaLxfcSSelCeLGUX8THx2tpdrFqrmTRn3/+ye356aef
RKFdmx8QEMCVZZdiSmkfbMIbb7xhMp/wunXrlsZtAQAAAGNDrmRs2nOlrKys
7du3c1zq7e2dl5cnfdVmrqScvJpidX6LmEAgKSmJS2bPnn1WgU/i8I1F9CfX
nDhxorKpIh1Yu3Ytl4hI+/fff1fW5zuwGjduLM6/iGchJScnW+uQESNGcB3p
NA4Cd1STJk2UXVTCXIlSCVllShOonOc9UFkCU3Y7n6GrVauWss8/+ugjeqle
vXqyxT755JMam12sLVe6cuXKhg0bJkyYQHlZnTp1uIWLFy/Wt/n/+te/uLLK
bH7aB5sQERHBGfRzzz23d+9ePJQWAAAAkCsZm/ZcaenSpbzL6tate+jQIdmr
OnIlSltkQfu2bdtMtvCJntDQUP7z66+/trhR/OqsWbO4RCXSLpbkVhQAc0nv
3r1Nlm5ikurQoYPJPGmbxVd79uxpMt/sU1BQIOsih+dKfLmgxlxJ2e0dO3ZU
73NKdmwuVuVV9VwpKipqwIABFtcrnXHOrs3nLapRo4bFNTLtg02K0jdOo0hK
SorK8gEAAOB+gFzJ2HTkSrRzxQxvgkNypZCQEC5p3rz5QCsoxJXWlN2sxPbv
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
wj179iBXUvfll19yFyUmJtqsXMqdVsq5Uumw1oe3b98uV64cvURb7ZKGAQAA
gGHYjKK///57jrLefvttzozo5+jRo7lwzZo1pdRQ0EVHrtSlSxflrTHBwcHq
uRIl1KIkPj4+OjqaQlb1FeXm5lK12NhYmxk3VYiLizt06FB2draWTcjKyjpw
4AA11YG5/LVr1/bu3Xvu3Dk+0aYkcqXTp0/bXJqs06grDh48SEmWtYWXsG02
cyXtPVxYWHjmzBlazokTJ/Rd5EaNPHv27L59+zIyMlSq5eXlHT16NCoqytpA
Usk3eYaNwMBAHc0DAAAAEGxG0XyW4eGHH5bNh9a+fXsqb9WqFW4KcGc6cqXO
nTvTnn3zzTf5z5UrV/r4+FSvXp2DbfrlQTOqxhU4ZH366aczMzPHjBlTv359
rlm+fPkJEybk5+crV0FRvb+/f6VKlbiml5fXkCFD0tLSlDWTk5P79+9PFbhm
uXLlOnbsGB4eLqsWEhJCTWrdujX9vmzZsqpVq3L9Tp06Ubm3t7fFq9d69OhB
r1JuqNIbFNgHBQXR+BdXn1IPTJ48mTZW1KH2NG/eXMyAJ7pIZQpB7jT6cCUk
JDzzzDNiA2vUqPHuu+/KOo23juzfv9/etjGVXEljDxebE7p58+ZVq1ZNrK5y
5coPShw5coRrPvHEE/Tns88+K1vC1atXhw8fLsYSrYu+QGjrpHWo8bNmzaKv
FzG7CA0kGi2pqakW+9BirsSNDAgIUL4EAAAAoJ3NKJqn9ho7dqys/JdffuFI
Zs+ePU5sH5SMjlyJAl3arePGjeM/58yZY7KEolyuwCFro0aNmjVrpqw2ZcoU
2fK3bdsmouWKFStWqFCBf6eY/8KFC9KaFEVLI3OphQsXSmtyLkDJ16ZNm/j6
K/bZZ5/xL999952sGZSv8UvTp0+31hV37tzp16+fxQbQVv/9999cTZx0k7GZ
K5nMeaLyjZTESd9rMdPR2DaVJdjVw5SXUe7DL1FC17ZtW09PT9lbDh06JN06
WRYTFhZWu3Zti+v69ddfuc7vv/9OSZbFOjQ8aJOVfaiSK1FmZ63/AQAAALRQ
j6Lz8vI4UJk5c6bspStXrvBL//M//+PUFkJJ6MiV+IyhmHKNcgqKct966y3e
3UuWLAkzExfjibCfDBgwgBKHM2fOBAYGUh7EcbX0Gqq0tLSHHnqIyuknRciU
EVAATIkMB960FlGTov2aNWuazGcfKOU5e/YsDTmq+cADD3BhaGioqCxyAQ8P
D8o+KEg+fPjwli1bbt68SQ2g8q5du8o2c9GiRfyWEydOWOuKadOmcR1KDGmT
MzMzKR3w9/fnwk6dOvFJ1atXr0q7aPny5fRnZGSkSieLTqMNeeeddw4cOEBb
R4lenTp1uFz6cCKLmY7Gtqkswa4epo85L2HYsGG8Qy9evPjYY49RSa1atY4d
O5aYmCgeJqXMYm7cuCEmVH/11Vdp79CuCQ8P79ixI4038cbLly9XqVKFMp0Z
M2bs378/KysrPj5e3C/59ddfK/vQYq7EY+zTTz9V2QUAAAAANmk8ryQNYhml
URxTUVTjxPZByejIlfgf+1999ZW0UNyMY+1+JZP5JI70fpnXXnuNyymQFoWj
Ro0yma+qkqUSfPaqQoUKYjr6119/XWRnsi3i8g4dOohCkQtQhL9161Zp/fHj
x/NLlMFJy5988kkqbNu2rbV+SEhI4MvAmjRpIr2ELz8/ny9MJdJsQsf9SpTH
7dixQ1p+/PhxPi/m4+MjOlOZ6djbNou5kl09/MILL5jMGe6tW7dE4ZEjR7gm
paXKrZNmMbzfyeTJk6U17969K7triRKoa9euSUsoz+Kzb3369FFfi+Dr60sv
vfzyy8qXAAAAALSzGUV369bNZL4PgiIWUZiTk9O/f38OfijicnorQS97c6W9
e/cqI+1iDbkSjRNZuZgVRKQDFPzzTT2URskqU3jMlcPCworNEwhUrlzZZL60
Tzk/gxh7hw8f5hKRCwwbNkxWOS4ujl+SJvWXL1/mlIS2y1pXLFiwgN8oPcXD
oqKi+CXpLTk6ciWLcf7TTz/NyxF36CgzHXvbplyCvT2snMGj2LxD+YTg7Nmz
VbaOqvEdZN7e3hpn55ChRXH+qLIWqTfeeINeql+/vjSzAwAAALCXzSh63bp1
HDU9+uijFGhdunTpt99+6969u+me5557rrQaC3bTnitlZWVt3769YcOGHNPm
5eVJX7WZKylDVkqR+C2//PILlyQlJXEJhdZnFfhECd9YRH9yzYkTJyqbKrKw
tWvXconIBX7//Xdlfb4Dq3HjxuJMjXgWUnJysrUOGTFiBNdRTpVAuKOaNGmi
7KIS5kriBjFx+48y07G3bcol2NvDnK088sgj0mo0ZjjlXLp0qcrWiVvD3nnn
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
G3IlAAAAAAB9EEUbWynkSpGRkeHh4TExMU5aftmSlJQUFBT03nvvTZ8+fePG
jQUFBa5uETgXxr+U245/N9xNbtgkwZ3bVvpKOKozMjLCzS5duuSkFgKAUyFX
MjbduVJmZmZ0dDQdMXNzc9VrNm3a1GQyPfXUU/pbaRTBwcFVqlQx3ePl5ZWT
k+PqRt1HVq9ePXTo0JUrV5bmSjH+BXce/264m9ywSYI7t62UlXxU7927l9/7
7bffOqmRbiglJYXih/j4+Lt377q6LQAlhVzJ2PTlStOmTfPw8OCv96ioKPXK
OKqy7Oxsb29v7jQfH5+uXbu++OKLrm7UfSQhIUHEM6dOnSq19WL8Mzcf/264
m9ywSYI7t600OWRU35+50tSpU3mrW7RoYTOKAHBzNqPo48ePx6pKTk4upbaC
/XTkSrt37zZJREdHU2FaWlofs3Pnzsnq46jKtm/fzj02cuTIwsJCVzfnvkPf
VNz/np6eV69edezCMf5tcvPx74a7yeVNwqi2ySGj2vC5ksWBNH36dBFFNGvW
zA2/EwC0sxlFP/jggyZVDRo0KK3Ggt105Epjx46l3VqxYsXQ0ND09PSioiIq
/Ouvv3h30y+y+jiqsqCgIO6i4OBgV7flPhUSEjJp0iRnnCjH+LfJzce/G+4m
lzcJo9omh4xqw+dKFgdSfn5+cnLyxIkT+aWIiAgXthCghEqeK7Vu3bq0Ggt2
05Er+fn50W7t3bu3tHDPnj04qqr78ssvuYsSExNd3RZwMIx/m9x8/LvhbnJ5
kzCqbXLIqDZ8rqQykG7fvl2uXDl66ccff3RJ2wAcwmYUffHixfOWjB8/nj8d
u3btKq3Ggt105EpdunSh3frqq69KC4ODg9WPqj179hQl8fHx0dHR9CWpvqLc
3FyqFhsba/PeT6oQFxd36NCh7OxsLZuQlZV14MABaqoD7yq9du0aHfLOnTvH
J9qUxFH19OnT9i48Ly+Pti4hIcHawqU1jx49GhUVZbN7GXXFvn376AOrXi0z
MzPS7Pr16zaXmZKSQgdH7de5OXA83Lp1KyYmhnaEzS1y1BsZxr9Tx39+fj6N
vdTUVOVLtBU04GnYl7B5NoN/7buDupdvWi/hZUU2m2TXh13HTseodt6oPnPm
DLWWvnbo94iICPVcybFffVrGp/bdJJapchxRGUiEZ8YIDAzUsiIA96Rvbgf6
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
alSx+RZXnv+HNlmlQ9q1a2cy39lq8dW+ffua/vtCNUflSuKCCvHksps3b7Zt
25YL69evP3Xq1J07d1LQxRMf6c6VCHUg1+/fvz/1/Pr161u3bm0yX9MuIhDR
FSbzXSQWDR8+3OamlWQ8MNqPNB74f7+sU6dO0hlxra3a5httwviXcdL4154r
2ds85Rq17w5eV+3atdU3yiG5kkM+7BphVMuUZFTzvAdVq1ZVvqTMlRz71adl
fNq1RofnSuHh4Xxnqwm5EpRNduVKK1as4NEujaPAnWnPlRITE99//32+pJkO
kbKJOxxyVI2OjuaSRYsWqTdG1Pzoo4+Ur4pvcnHmxWbY8O677/IhMi8vb+3a
tSbzrazKlFBqwIABvEyLV1nzVvv6+ooSR+VK4rZlcSWJuDCJAifpdf4lz5Vo
08QUsgId7mWT8XJXUE0t07k4YzxIURS9efNm8eSdMWPG2Fy1zTfahPFvcasd
Pv6150r2Nk+5Ru27Q6zL4oVbgsiV3n77bdlL2nMlh3zYNcKotrjV+kb1Cy+8
wDWVj9ZV5kqO/erTMj7tWqNjc6X4+Hie57Bly5bz58+XznsPUFbYlSvxbQvl
y5fHPXplhb1zO6xatYq/9CIiIqTl9BXH5cqHd2g/qqanp/O//nr37q3eDFGz
VatWysubxYMkTp48ySU2j6riXuDQ0FB+u5+fn3obJk2aJGu/QEcEvgBbOreP
Q2LF/Px8fpoGHVxEYvKPf/yDSuggJatc8lyJr97v1avXvHnzaFtGjRr173//
WzaJU7Hk/mIt/yRxxnhQoq8gfj5mo0aNbK7a5httwviXct74154r2ds85Rq1
744PPviA17V69WqVavThpYOjSTFLGJk4cSIvwWau5JAPu0YY1VIlHNViwnDl
s1SUuZJjv/q0jE+71mjvcURlIJH333/fZP4XnMp9ZABuzq5c6bHHHjMpHnIB
7szeXCknJ4fvJJ07d660XJxSVD4UXvtRtVhyQFQeqmR4rlRCYZK0PCYmhgOS
li1bioBKS9jQpUsXk/lWOz6Toh72FJsPnbzMNm3aSC8OpxRGPAhm3bp1olxH
rNi2bVvZU36+/vprXoi4qo2CCv6nHH36pDUvXLhAPaA9fFIe4+7cucPTUokp
rawRs19Sg2WTfljbNMeOh8TExPj4eFlhjx49TOazXSqr1vJGqrBgwYKEhASV
BmD8i3IHjv+S5Er2Ns/iGjXuDupzrtawYUPpRNPF5ku/pNMy16tXz2Se6kR6
Smjjxo3i9nz1XMlRH/ZijGornDeqxXMn6ZtWuvfpdzGqpXOGO/CrT+P41L6b
7M2VVAYS4cfwDRgwQH2lAO7MrlyJDwT07eTMFoEj2ZsrkebNm5sUVyiFhYXx
l2Hnzp1jY2MpYBZf4HYdVelbnR9CQcHD7Nmz+YprWhotv2/fvuKpeeTIkSOi
ZmBg4PXr17Ozszdt2iSewCL9GtdyVBX3ApvMcxFomchRXFbx+OOPU8vpIE5H
THHEkU6JUKz3+TI+Pj6bN2/OysqiIIryU/7HppeXl/QxGXxkJBR0UV/R0ZC2
hR+DpT18Uh7jaKX8n8ZBgwYlJyfTMb3IzGKDRZDTrl27gwcPcjxz+fLlmTNn
0q6XRrYOHw/UThqTHh4eM2bMuHjxYrH56v2ffvqJl0bVrK1ayxupDj9Wnrpi
37591vYXxr8zxn9JciV7m8f3vzdr1kx6RkP77hCTmdMSwsPDc3JyKApdu3at
t7d3nz59xKdGTHw9duzY1NTU48ePf/755/wpY9JcyWKTHPJhx6hW4aRRTWOA
/5lMaLScOHEiNzd3//794im3pv/OlRz71adlfGrfTfbmSioDiTRu3Jhe+uST
T2zuGgC3pT2Kpu9z/s5/7rnnnNwocBgduVL79u1pL48YMUJaSAcUcZk0f9l6
enryORG7jqpkw4YN/C9EVqdOHfFPV9k38Lp168QTz03miz/5FyqUPQRcy1FV
3AtMBg8erKUrbt26JQ5/HHiI36k3ZEdPfbmSEq1FekglS5YsEa9SGsX9QD85
qy3JNXjPPvussgG0CjrgDhw4kI6toiaFNDxJr6gj7tWV7WKHj4eoqCjpuqgC
P3jRZL4LOzo62tqqtbxRPFSFTJs2zdr+wvg3OWH8lzBXsqt54uIrGhLShWvc
HRRYihlOZOuqXr26WNfu3btNClRhypQp/Ls0V7LYJId82DGqVThvVNPgrFq1
qnIAcLJg+u9cSUunaf/q0zg+Ne4me48jKgOJ8MSqc+bMsdmBAG5LexSdmprK
H4Q333zTyY0Ch9GRK/F8PtKZzRhFzuI732Q+jh89erT43nko6RTTTFykrTzj
T1/y/GhFgb75hw0bduLECVnNAwcO8AMdBFqd8nEbP//8M79K9VU2bdy4cVxt
/fr1GnuDjsV0BOcpL8SGU0SXlZUlqymOqhcuXLC5WA5F+vTpExAQIJ1dgZIU
aTQoLF68WBzj6DjYpUsX2tKNGzea/jt8UukHnlBXdowT/6K0iNYo/WfjnTt3
5s2bJyITRodICgCkF+Y5YzxQhDl+/PiHHnpIWoeSellfKVdt8435+fn9+vXj
8ueff97CrroH419seMnHv7VO41yJekN2Pwv1IS9ctse1Ny8iIkLEmYmJidKX
NO4OCkc//vhjaTBcqVKloUOHyp6ns2zZMv7vvcn8Ue3WrduxY8eOHz/OJdJc
yVqTSv5hx6hW56RRTU6ePMn/bGSVK1d+4403MjMz+S7U77//XlbfUV99xZrH
p5bdZO9xpNj6QCKc7qk/xxnAzWmPok+fPs2fApxLLUN05Er8nAhlrlRsvvSa
vlFDQkLo6K988Lq9bt68GRkZuWXLlvj4eDq4q9TMyMig9u/atUv9WZA2jRw5
kuMNex+vQ5FbQkICNdUhG158L1fi6z0KCgrosBIaGqqcVEGKDrh0fNy9ezf1
W8kbUGyepJdCsnLlyq1atYp2wcGDB2l3UCEd0F977TX+sCsvMqeuOHv27LZt
26gxaWlpDmkJszkeKCOjjtq6desff/yRkpKiZVI+jW986623tHyzYfw7avw7
lsbm0a6nMUAZSm5urvJVjbsjOzubxhKNgSNHjli7d+/WrVu0qB07dqjPm6fS
JId82DGq1TlvVF+/fp32He1W9R4QHPjVp2V8almjDtYGEuekgYGBDlkLgEvY
FUVDmaMjV/Lz8zNZmsqprDtz5gz/v5efx+FaWmZsczbe0RafK03pW7NmzUzm
u9RLv2GljGK22rVrm8yzabm6LU7kVuMfnA2jGtxBTk4O/9vN5rQbAO4MuZKx
6ciV+DKYWrVq8c2kxlBUVDRo0CD+0o6Li3N1c9wiV+KZtUaOHKl8SUxLq/EW
gLLryJEjfKV9z549Xd0WJ3K38Q9OhVENboKfe0XCw8Nd3RYA/ZArGZuOXGnz
5s3iMmYK6WXX9pc5ixcvXrBggbhCmzJBV7fof7lDrvTyyy9TGzw9PX/66Sfp
3e7Hjh3jG3jLly8vfXa8IfGW+vv7S28kMRL3HP/gVBjV4HLffPONuIOpVq1a
eAQtlGnIlYxNR65UWFgoJogmUVFRzmygc2VkZEin/enevbvyoeou4Q65UnR0
tJiooV69en369Onfv3+rVq24hPpt2bJlLmxe6diwYcOSJUu03/pUtrjt+Aen
wqgGl5s6dSrvoAoVKtwPhxIwNuRKxqYjV2J79+5dunTpwoULS3jjrWslJSUN
HDjQ19d38ODBtDmyiYhd6LXXXqPc5PPPP3dtM44fP/7KK694enqaJKpXrz5q
1KhTp065tm1Qcm47/gF0w6guEyIiIgICAlasWIFDCRgAciVj050rwf3jzp07
p0+fpuw4KirKsVPbAQAAAJRpiKKNDbkSAAAAAIA+iKKNDbkSAAAAAIA+iKKN
DbkSAAAAAIA+iKKNDbkSAAAAAIA+iKKNDbkSAAAAAIA+iKKNDbkSAAAAAIA+
iKKNDbkSAAAAAIA+iKKNDbkSAAAAAIA+iKKNDbkSAAAAAIA+iKKN7T8AAAAA
AAAAAAAAAAAAdnL1OS4AAAAAgLIEUbSxIVcCAAAAANAHUbSxIVcCAAAAANAH
UbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSxIVcCAAAA
ANAHUbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSxIVcC
AAAAANAHUbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSxIVcCAAAAANAHUbSx
IVcCAAAAANAHUbSxlUKuFBkZGR4eHhMT46Tlly1JSUlBQUHvvffe9OnTN27c
WFBQ4OoWlVWpqanhZunp6a5ui+vhUyaFT1lpwtiT0jj2yminHT16lJq9f/9+
VzdEkzLayU7iwm/FMrEjShhRIFcyNt25UmZmZnR0NH0EcnNz1Ws2bdrUZDI9
9dRT+ltpFMHBwVWqVDHd4+XllZOT4+pGOdHq1auHDh26cuVKZyz8xx9/5G78
888/Hb5wOqyMHz9+9OjR58+fd/jCnQGfMuF++5QxF45YjD1B+9gro53Wu3dv
anbdunWlhU79ni+JMtrJzuDab8UysSMsRhQpKSkU5cbHx9+9e1f97ciVjE1f
rjRt2jQPDw8eV1FRUeqVy8THpBRkZ2d7e3tzp/n4+HTt2vXFF190daOcKCEh
QXwznzp1yuHLd2quNGzYMF74q6++6vCFOwM+Zex++5QJLhyxGHvMrrFXRjtN
mSs5+3u+JMpoJzucy78Vy8SOsBhRTJ06lQtbtGihHuvaFUXn5eVFR0cHBQV9
+eWXYWFhN2/eLEnLoRToyJV2795tkqA9ToVpaWl9zM6dOyerXyY+JqVg+/bt
3GMjR44sLCx0dXOc7vjx47y9np6eV69eFeUqQ8UuJc+VVFpChxJe+KRJk0rS
SMfCp8ym++1TJjh7xGLs2WTX2CujnabMlZz9PW8TRqZNLv9WtLgjSm2EaGQx
opg+fbqIdZs1a6bSe9qj6PDw8Nq1a0uj6IoVKy5YsKCoqKjkWwFOoiNXGjt2
LO/c0NDQ9PR03r9//fUX73T6RVYf31csKCiIuyg4ONjVbSklISEhFLnJhpbK
ULFLyXMllZakpqbOnDkzICDArW6GwqfMpvvwU8acPWIx9myya+yV0U6zeA2e
U7/nbcLItMnl34oWd0SpjRCNLEYU+fn5ycnJEydO5JciIiKsvV1jFE37okKF
Cry0hx56qEWLFuXKleM/586d65ANAWfQkSv5+fnRbqXvTGnhnj178H2l7ssv
v+QuSkxMdHVbXEllqNil5LmSo1pSavApswmfMifB2LPJrrFXRjvNYq5kUal9
u2Jk2uTyb0WLO8Ldjr8qEcXt27c5o6E61t6uJYo+d+5cxYoVaTk1a9bcvXs3
F6ampvr7+7dp08at/jELMjpypS5dupgUV8UHBwerf1/17NlTlMTHx0dHR9Pw
U19Rbm4uVYuNjbV5Vx1ViIuLO3ToUHZ2tpZNyMrKOnDgADXV5pK1u3bt2t69
e+mzYO1Eqvi+On36tL0LP3XqFC08LS1NVq69i6hVZ8+e3bdvX0ZGhko1+tjS
N5j228MvXbq0f//+zMxMjfWLVYeKXWzmSnl5eUePHo2KirI20krSEnuHXLF5
1FH/l+TWe3zKnPcps7lkGYsfycLCwjNnztCAPHHihJZrXez9uGncpxZp/Aaw
BmPPsWNPd6elpKTQmJFe7aai5AcO6vCIiAga1bzV/J9SLbmSo77nS7IijEym
+1uRWsszG5Twyj2LuZKTRohKD6uHBOoRBc+MERgYaG29WqLot99+mxZSoUIF
GjPScupearb6e8G1dORKnTt3pt395ptv8p8rV6708fGpXr06DzP65UEzqsYV
+GPy9NNPU0Q9ZsyY+vXrc83y5ctPmDAhPz9fuQr61FOiXalSJa7p5eU1ZMgQ
5Rc+SU5O7t+/P1XgmpT7d+zYMTw8XFYtJCSEmtS6dWv6fdmyZVWrVuX6nTp1
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
V6KKDPPy8h5++GGHt1xJ1RqqDkOfwqkKbaly+YYNG7i80bna0DPFct97JhXg
cyWNZqr7KJVnVR9zJVWtrIoEtC3MJEMC/VypcePG9NIbb7yhfYl5jaL5p+Fa
tWpRVv7mm2+KXzApZe7Tp4/yFy4og4zmSlu2bNEeiU6J8YqGbtXyH3/8kd+y
evVqXkKjGV9YqxpFna7jlAvHxsY6XbfC3XzzzQ7NDxmMzilcmH+EdSqOgu7d
u6sK79u3j18aNGiQWJiZmckBLW2Xp6YIDQ3lN2qfV75z505+SVz84DR1JqVx
OzU1VblcvomoJF+4S8em/PwDAg0XvLZ58+aJhTqDCZ1f+KWPPvpItRWlnCu5
RXVwuB7DJ1kT7cpNdzneHUr33nuvw/XVn9dqq+AoU/LxKDO6Zk+HpHhJeQu5
09XOHOKGhITo18Tp4XCT36dOdz3WxxFABX1PyaoRXqbRwsLCeIkqonbeCLaV
K7H2xKG9Bd7tPHhGx/lu3bo5XDf0Ka+142eRUADp9VYaFfRMJR97Znh4OJdU
XUmoUjZzJW0L69CGBPoRBV8gWqdOHeUXYkpeo2j+IZg6j/h99o477nDc0LJl
yz/UAwGDjnyuRMPaqlWrOMyjUfTatWvKV72OV9p5O2mY4reIG1QzMjJ4CUUX
xzT4ixS+uJf+5JKff/65tqpiJJwzZw4vEUfBhg0btOX5Dqz7779ffPUknkdw
4sQJTw3So0cPLuN2FjhuKDootE0kfyZt1aqVarl8E4lrnpXfOuo7e/ZsVFTU
J598QicXcRSPGTNGFNAZTOgw528LX3jhBdVWBCRXords376dBvyuXbs2atSI
63brrbdK1kS7ctNdTls9ypIcrueAa9ejD0eZii9HmdE1ezoknTdOuw8//LBy
IQ2YHPOMGzfObQW8Hm7y+9Tprr+ZGAF0oO+pWDLCyzQa/4pRo0YNbYv169eP
XrrzzjtVq/XlxHHq1Cku2bt3b221LcmV1q5dyy/NmjWLl9Dpg9ZJSygi9dp0
KuiZKr70zH/+859cUn+ixbKZK7ltYeV79UMC/YgiPj6ex/OXXnppy5Yt2rzG
axStvMv766+/PnPmjNM14QMfU8o+A2WQfK5EZ3zeoTSmifuUBRPjlfjNXYxX
MTExDm/4y5bo6Gj+U3m5qXKj+NWhQ4fyEv2jQIxvdAjwEu692guJlR5//HGH
awIrt6/yBbF0PBYVFamayJczqXwTiZI6s1wKO3fu7Ny5s9u1KSd+0W9Gnter
cePG+lvh71wpLy8vLCxM+Y2NULVqVcmaaFduYZfjSyxKJ1fCUWbVmnWe1fLt
t9/yhypHUVGThIQEVXnJw01+nzrdNb6hEcAr9D0VP43w2kZr1qyZfotVqlTJ
62rlW379+vX8Z2hoqLbaluRKYoYH8ZRGcb2K6iYmGeiZKr70TO5st912m36x
spkrebrCRDIk8LqeMWPGiJn0KMdRveo1in7++ef5vREREcrl58+f59sDld8z
Q1ljIldq06aNaoYop0Xj1fLly3lJ/fr1u3hAY5qypOqCYbZt2zZD49Xvv//O
d1l+8MEHTlfX5QlwPH0hzJo2bepw3bbv9tXnnnvO4brZUPxMb8mZ1EQTTZgw
Qf+zxHBdvnz5Tp060Z979uxJSUnhhfK5El+5oZzmtPRHyMuXLzdp0oSX16lT
p3///mvXrj179izfTuVLrmRhlwtsroSjzNyadXKlrKws/qKgWrVqlJhQm3/5
5Zd0NNGSjh07qh56In+4+ZgryY8AMtD3VPw0wmsbjatBPLXY22+/7XW18i2/
Zs0aLqmK6JgluZLzxgQC5cqV4/nleOSnaFaE9/LQM1V8HxVr1qypXyyIciX5
kMBrrhQXF8d3CDpM5UpUZ4drqn/tSy+//DL3PZ23Q2DJ50ppaWmffvopX9NL
fV4VAFgyXiUlJemM0kqiZL9+/bSvij6/ZMkS1RJPR8G//vUvHnyuXbs2Z84c
h+teTm1KqCS+GXZ7/SpvtfJHFkvOpCaayO2lAgJVhn+MpkNYeYk7/Z/fLpkr
iYu6lRdRmB4hMzMzlcvlR0i+qNjhmqlbeTG577mShV0usLkSjjJza9bJlUhI
SIhDo02bNqpHeBg63HzMlSRHAEnoe2632vIRXttoXA1Kw2Wekuz7iWP//v06
LW9VriRmeOD7YvgODtpHXjdQCz3T7Vb7OCrqP1/e0JnaGYhIQJAPCfTXQ0M0
z3PYsGHDUaNGaadi8BpF8/aWK1dOu9d4SkCvP+dBABmd22H69OncneLj45XL
qfPwcnFLoyA/XuXk5PCXKuKneU9ESX5kg+pVMSfboUOHeInX8UrcZRkdHc1v
79Chg34deO5fx/9GLIyOfb60VTlriiVnUvkmunDhAteBVuX2oXts2rRpXCvV
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
37t3r/aR1kZdvnw5MTFxxYoVqamp+vcmX7x4kepPIYH+A9S86tmzJx8+2ueV
66ND+PDhw1RVSzZcnnwTUYS2cePG1atXqyaWYVR/GsFoPcq7GLRErrR582an
a+67NWvWbN++3etV9Fo6XYWiyuPHj0dHR+/bt09/6id6Iw3CVJK2Trn80qVL
VMP169dT+/hSEx1WdTklngxH51d+hqPM8qPMxzVzRNesWTM6iHbt2pXoQsfa
qFGj7rnnHj5kKAZTfpzM4WYt/REAfU9foEZ4bTWOHTtGOQuNb6of8Q2RbPmi
oqL9+/evXLmSn5tpgn6HoT7JR0dISIinNaBn6vNfz8zLy6PMhZp09+7dbk/x
8mdqpyv3oY5E52vxIzuzJBLwSjIk8BRREM5JdZ5VZyiKps05cuQIdzDtDCFQ
BpnIlTp06EB9pmvXrv6sVwCkp6fzRcj8pAPQkrmcAMyhcy7fN00DdaDr4kf2
O8ro3MoHhep2DDZ79mx+dcqUKaVfN0noexAQ7733Hn/V72luMfRMKAsKCgp4
GNeZdsNQFA1Bx0Su1KtXL+ozNWrU+OWXX/xZtVJFab6YM2rfvn2Brk4ZhVzJ
T3bv3s1Xbrdt2zbQdfEjWx5lCxcu5C1y+0iUiIgIflV7O0YZgb4HAbFr1y6+
MsrT9XXomVBG8HOvSFxcnKcyyJXszUSutGzZMu42FStWfOCBB5RXnwajMWPG
hIaGikuUKRMMdI3KLuRKfsKzPXTs2PHs2bOBrotf2PgoO3ToEG9Uhw4dlJcq
5efnjx07lu8Nf/LJJ328hsR/0PegNFE6MGzYsH79+vHtMFWrVj1y5IjbkuiZ
EHDjx48Xd1TVqFFD+whaAbmSvZnIlYqLi8UUpmTnzp3+rKB/Xbx4UTnvzdNP
P52XlxfoSpVdyJX8JCoqKjIyssyG0z6y/VH29ttv86bRZj7xxBNdunShME/c
hv/www9nZ2cHuo4eoe9BaRKP1nW47uXXmcoAPRMCrn///ryDKlSoMHHiRJ2S
yJXszUSuxLZs2TJu3LjRo0dbeG976cvIyKDApnHjxq+88gptjvJBFaC1YcOG
9u3bP/fcc8eOHQt0XSBo2P4oKy4ujoiIaNCggUOBAqFHHnlk1qxZ+veGg1/Z
vu8FnbCwsBYuffr00U4u98eBnhkU4uPjw8PDp06d6unXTwG5kr2ZzpUAAEDp
119/TU5O3rRp09GjR01MDgkAAMEIUbS9IVcCAAAAADAHUbS9IVcCAAAAADAH
UbS9IVcCAAAAADAHUbS9IVcCAAAAADAHUbS9IVcCAAAAADAHUbS9IVcCAAAA
ADAHUbS9IVcCAAAAADAHUbS9IVcCAAAAADAHUbS9IVcCAAAAADAHUbS9/R8A
AAAAAAAAAAAAAACAQYH+jQsAAAAAIJggirY35EoAAAAAAOYgirY35EoAAAAA
AOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYgirY35EoA
AAAAAOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYgirY3
5EoAAAAAAOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYgirY35EoAAAAAAOYg
irY35EoAAAAAAOYgira3UsiVEhMT4+LikpOT/bT+4JKRkTFhwoR///vfAwcO
XLx4cVFRUaBrZE/odUrodRbKysqKc8nJyQl0XQAAIPCQK9mb6Vzp0qVLSUlJ
FJFevXpVv+QDDzzgcDieeeYZ87W0i6VLl1atWtVxQ5UqVQoKCgJdKTMo9u7b
t2+vXr1OnjwZ6Lq4h14n2KbXlRE//fQTt+SmTZt4yenTp2kkTE1NvX79emDr
BgAApQ+5kr2Zy5UGDBhQsWJFDhh27typXxhRK8vLy6tVqxY32oMPPvjUU0/9
/e9/D3SlTOrevTtvyFtvvRXouriHXsfs1OvKCG2u1L9/f17SoEEDr+MhAADY
jEwUff78+T0e/PLLL6VSTTDJRK60fv16h0JSUpLT1Qfauxw/flxVHlErW7Vq
FbdYz549i4uLA10dn1C8zdvyn//8J4DVQK/zyk69rozQ5koDBw4U42G9evXQ
zgAAfygyUXRoaKjDg8aNG5dKNcEkE7nSRx99RHv2pptuio6OzsnJKSkpoYUH
DhzgPU7/UZVH1MomTJjATbR06dJA18VXWVlZQ4YMCQ8PD+wtG+h1Xtmp15UR
2lypsLDwxIkTn3/+OS+Pj48PbA0BAKA0yUTR33zzjadc6a9//WupVBNMMpEr
dejQgfbss88+q1y4efNmRK36Ro4cyU2UlpYW6LrYBHqdV+h1ltPmSuz3338v
V64cLacCgaobAACUPpkounfv3nSCuOuuu05qZGZmlko1wSQTuVLLli0dmhtV
li5dqh+1tm3bVixJTU1NSkqi0EL/g65evUrF9uzZ4/WOaSqwb9++HTt25OXl
yWzClStXEhISqKoW3ov922+/bdmy5fjx4/xDm5aIWo8ePSq5ztzc3OTkZFqt
zBQKZ86c2bZt26VLl7yWPH36NGUZ586d81qSGopvWjd6WZHMvqOGou2ijrd7
925zsw2g1/mj1ylJNpp8jzLqyJEjtIHnz5/XvuR127UkN+fatWspKSk7d+50
W9JTrkR4Do2xY8dK1gcAAGxAJop+7bXX6ATRrFmzUqkRWMlErtSiRQva3e+9
9x7/OW3atAcffLBatWocP9B//uxCxbgAR63PP/88hfEffvhhnTp1uGT58uU/
+eSTwsJC7UdQ/NOxY8dKlSpxySpVqnTt2tVtvHTixIkXX3yRCnDJcuXKUT+M
i4tTFVu+fDlViX/lnDhx4i233MLlmzdvTstr1arl9lqyNm3a0KuUG+q0BsVp
EyZMuOeee8RvqdQCX3zxhTJnofrUr19fzEUmmkhnCsH09PSXXnpJ+RNt06ZN
Z82aJQosWrSI1kAtT4H3qFGjuJG5BRo3bkwJjtuqRkZG3n333WKd995774IF
C9xWICoqqmHDhvw9Obn11lvfeeedCxcuKNuTUHameqPMvqOa0F644447RE1o
j/zzn/+kkFunqZXQ6/zR65588kkq8OOPP0o2mkyPonyfdjSt9ssvv1S9ffjw
4VylX3/9VVWH2bNnnz17tnXr1rxaaitD225uc6jY0KFDH330UTFxDZWkLpGV
laUsppMr0WFCy8PDwz21MAAA2I9MFN2+fXs6QXTu3LlUagRWMpErUQRCu7tP
nz7857BhwxzuPPTQQ1yAo9b77ruvXr162mLffPONav0xMTEiBr7pppsqVKjA
/6fo6NSpU8qSFItycKI1evRoZUkObygMXrJkiYj/yX//+1/+z5QpU1TVoMiZ
Xxo4cKCnpsjPz+/UqZPbCtBWiwhQ/Pyh4ilqzc7OVoaCN998s/i/qKcI2Ci0
0665cuXK1DjKdRYUFPztb38TBUScTwYPHqwsSTHk66+/7rbClD2pPl0VLkru
u7CwMLHOP/3pT2KP3HXXXZK/EaDXua2AL71ONNprr73WoEEDr40m2aMuXrzI
Cz/++GPVx3377bf8EqVFqjoMGjSIv5Nh9EGGtt3E5mzYsIESK7drpj5AnytK
es2VRowY4amFAQDAfmSi6Mcee8yh+KEBgoiJXImDczEBGkV3sbGx77//PscP
kZGRsS7isijxk4fDlVBTCJeenj527FiKSGnJbbfdprzQ5fz589WrV6fl9O/C
hQsprqMohUJKCv5pIX2KKElx0e233+5wfatPweexY8co4qKSFHvzwujoaFFY
hDcVK1akoI6CmV27dq1YseLy5ctUAVr+1FNPqTYzIiKC33Lw4EFPTTFgwAAu
QyE6bfKlS5d27NjRsWNHXti8eXO+dO3cuXPKJpo0aRL96fanH/bdd99xyc8+
++z06dOUPuzfv/+VV16hlhfXqoktIvfff/+cOXOoZEpKSs+ePXkhpQnKa70o
fOXl3bp14yv6aC88/fTTDldqkJGRIUpS43DJmjVrzps3j9qZdjHlJhTz0x5R
fboyXJTcd1Qr3kd33333xo0b6U9qt2nTptHHifV7hV5nea8z2miSPcpcrsRa
tmy5bt26rVu3Usc2tO0mNiczM7Nq1aqU7FCatm3btitXrqSmprZt25bf/sMP
P2h3qzZX4l5E26XTyAAAYDMyUTRFZQ5XrkQnFDoh9unTZ/To0bt37y6VCoJP
TORK/O1rWFiYcqG4LcLTnSMO19fpyl8N/vGPf/DyvXv3ioUffPCBw3Xpiyqo
498RKlSoIMKqd955R8TJqi3i5Y8//rhYKMIbimZXrlypLN+3b19+ieIo5fJW
rVrRwiZNmnhqh8OHD/O1OnXr1lVeTFVYWMjTXxBl5Cx/5whf1Eq5iep2CeVV
Q2KLXn31VdXVR+JXoblz5/IS2jQO+1988UVlSQraOfIXcSzVjX8goKhPdZPU
b7/9pv10Zbgoue8oC+D3qn46cXtdnD70OrHc917nNNJo8j3KdK7UunVr1V1s
RrfdUB9wuq5aVHZycuHCBT4c2rdvLxbq5EqNGzem5W+88YYTAAD+MGSiaHHt
isrLL78sedczBIrRXGnLli3amMQpEbVS5KNa/uOPP/JbVq9ezUsonuHbKyiY
URWmGIYLx8bG0p/FxcV8ZZrq1xNG8RsX3rVrFy8R4U337t1Vhfft28cvDRo0
SCzMzMzki6Zouzw1hZgqf9q0aaqXdu7cyS+Ja4ecRqLWL774gktGRUV5KqMT
sFHAzy999NFHvERc86aKzJ03gnaxd8LDw7mk6nIyr58uv+8oeOYr3Fq2bCkz
E4UO9DolH3ud00ijyfcoc7kS5a2pqak+brv85uh45plnHK7H+IolOofeu+++
S8vr1KmTm5vrdc0AAGAP8rlS9erV33vvvSFDhvTo0UNcu/7888+XSjXBJPlc
6cqVK6tWrbr33nsdrlutr127pnzVa9Sqnb2ZAhV+i7gZPCMjg5eEhIQc0+Cv
lPkWD/qTS37++efaqopYaM6cObxEhDcbNmzQluc7sO6//37x5bN4Ks2JEyc8
NQj1cy7jNuDnhqpbt662ibxGrdu3b+fLhLjdli1bpp2GTidgo8L89hdeeIGX
8K8hNWrU0LZqv3796KU777yTS/7zn//k1erPaab9dPl9R7p06cKF//znP3/9
9demn1iNXqfiS69zGmk0+R5lLldq1aqV79suvzlKhYWFdACOHj26a9eujRo1
4kPp1ltvFQV0Dr34+HjOdl966aUtW7bgobQAAH8EMlH0mTNnvv/+ezoniiV0
XhY3p2/evNm/VQQfyOdK48aN4x1au3btHTt2qF41EbVSAKmKWGJiYhze8Ffu
0dHR/KfyPgLlRvGrQ4cO5SU64Y1TEeVSeMNLnn32WYe720mUHn/8cYcr2nf7
Kt/pQIFWUVGRqolkotaff/5ZOU0ctSFtqfKSPP0tokjVoXgSdLNmzfRbtVKl
SsqSt912m371tJ8uv++crrnRlLP8USt1797dxFW76HUqPvY6+UaT71HmciW3
D8Yyuu3ym8Py8vLCwsKUx51QtWpVUUx/t44ZM0ZMoyc/ryMAAAQvQ3eyKC1Z
soTPF1999ZXVlQLLmMiV2rRpo5pvymlR1Lp8+XJeUr9+/S4eUGSrLKm6bYRt
27bNUNRKOQjfa//BBx84XXf680VitMk6DdK0aVMqc/vtt7t99bnnnnO4buoX
F2sZfdIN1Yq2jr8tZ82bNxezdutvEU9PLead5qoST6369ttvK0vWrFlTv27a
T5ffd0JycvJrr70mZpyj/ygnRZeBXqfiY6+TbzT5HmVhrmR02w3lSpcvX27S
pAkvr1OnTv/+/deuXUsV47v/5HOluLg4vmPLgVwJAOCPwXSuRKcePl/8/e9/
t7pSYBn5XCktLe3TTz/lOzso/FDN7WxJ1JqUlMRLIiIi9CsjSvbr10/7qghm
KGFXLXEb3pB//etfHIZdu3Ztzpw5HLprU0Klzp078zrd3pvAWy1+2XGafSpo
UVHRsmXL6taty+/98MMPvW6RuMvm3XffVVa1WrVqXmfkFhulfyeR9tPl953K
qVOnKIrmK5foX0NPr0avc7vVpnudfKPJ9yiRK/Xu3Vv1ktFcyei2G8qV+FYj
QlmS8mY0Q7lSamoqz4jYsGHDUaNGKWcaBwAAuzKdK9HZn78m7dq1q9WVAssY
ndth+vTpHCfEx8crl1NgwMvFje2CfMSSk5PDfebZZ5/Vr4Yo+dBDD2lvChAT
wR06dIiXeI1axb320dHR/PYOHTro1+E///mPNuJiFLpz8K+cEctcrsQoOOQn
ad53331et2jy5Mn8Eu0UXiImixCXe3ny2WefccmZM2fqFNN+uvy+c0vMlW3o
pyX0OiXfe518o8n3qMLCwvLly7s9EXz++ee8Eslcyei2G8qV7rrrLoe7+6QM
5Uqffvqpw/VgZZ07zgAAwGZM50q7d+/mE4q4IgXKIKO5UkFBAd/sPHz4cOXy
qVOn8u6eNGmS6i2GIhYRcLq97VqJJ9Yms2fPVi5PTk7m2Kxhw4bizgWvUStp
2bKlw/XkSp6rRD9ZcLrCM15no0aNlHcSlZSUdOvWjV8Ss3Y7jUStaWlp2knA
2rRp43B9k6/aovnz5yuLXbp06f7773e4fqEQQbuYprtJkyaqSTlUqPW45L33
3qucltnpukhMzKjstj3l9x2lBqp55OLi4vi933//PS+hFggNDT18+LDOetDr
xHLfe53TSKPJ9yjnjbvn6F/lTl+8eLGYwEQyVzK67fKbQ5kv/x702GOPKUue
OnWKdqhDOlfix0vhsewAAH8oXqPot99+u1+/ftoZdMXzAVU3KUCZYjRXIvXr
13coLgZjsbGxvLtbtGixZ88eCp9EtG8oaqWYs1KlSg7XPdohISF8ew6tjdb/
3HPPKZ9VSsm4KDl27Njs7Oy8vLwlS5bwPSCqSEYmahX32jtcd6Yr5yrx5NVX
X+XyTzzxBNWcgmSKSEXg3a5dO2Vhyaj1ypUr1MIVK1YcNGgQTxBHYeG8efP4
vdQIqi2iEL1v375HjhyhVkpISHj44Yd5uer2EBHkN23adPv27RzPZ2ZmDhky
hHaNCO/JCy+8wCXr1atHKQxlx5QlzZkzp1atWu3bt+drrty2p+S+mzJlCpV5
9NFHeeVO13Nz+GYTsm3bNm6EW2+91eHK+LZu3eqprdDrrOp1zFCjyfcoMZv6
Rx99lJWVtX///sGDB4v71BzSuZLRbTe0OfxdBKEkjnZ9Tk4O7Rp+lpzjf3Ml
MRmImPBQ4K8pvv76a89tDAAAdqMfRdNphc8arVq1mjt37okTJyiUonBFXFje
unVr5UkTyhoTuRJFubRne/TooVxIe1ncU8ORZOXKlTkSNjobVVRUFH9Fz+64
4w7x/XODBg2UJanL8YU3TLyLFn777bfKkjJRq7jXnrzyyisyTZGbm/vYY4+J
CijDP2oNVXQqGbXu3LlT3BvOmy9m4KcEKikpSbVFblH4SgmOcrUU0vMk1YzW
qfwU5S6gTEHcua/aqGrVqnHlPbWnzL57++23RQHaIr62kHXr1k00glg4YMAA
T22FXuewqNcxQ40m36PWr1/v0KC+9M033/D/5XMlQ9tuaHMiIyOV28K7lf7l
r4aUuRKlUeJV1SO5a9euTcuHDRum384AAGAn+lF0fn7+hx9+qDwDiulSHa7Z
tI4fP16KlQXDTORKLVq0oJ0r5rkSkpOT+WtVEW+kpKQ4b/wO1bFjR1V58Vhb
7YVPlBHwIyCV/ap79+4HDx5UlUxISGjevLmyJH2c9nE28+fP51epvM6m9enT
h4stWrRIsjUo1qUImae8EBveq1evK1euqEqKqPXUqVP666TQsW/fvtWrV1du
F6Woyun3RRw+ffr0du3aiWKULPTu3ZvzBRU6WkeMGCEicxFhTp48WXUZFaVL
X331FU+mxypVqvT666+LiRd02lNm31HztmrVSlmGqv3111+Le/YLCws7derE
L4kEyi30Oqt6ndN4o8n3qIkTJ/LvcQ5XgtO6deu9e/fu37+flyhzJU91MLHt
RjdnzJgxIvOlSrZs2ZJ2HH8fqMyVnIoHhKmeMszZov5znAEAwGZkouilS5fy
ky8EOtHQySs7O7tU6gjmmciVnnrqKYe7XIlcv36dAsvly5dTIKS9LNOoy5cv
JyYmrlixIjU1lYJnnZIXL16k+q9bt07/Cape9ezZk+Mi5d0QMoqLiw8fPkxV
tWTDGUWbFPavXLly48aNp0+fVk04JnIlTqB+++23NWvWbN++3evNI1TVY8eO
xcTE0BtVvz2p5OXlUQVob+7evdvralVk9t2ZM2dor3Fvcdvg77//vkPiiib0
Ogt7nQmSPYoSYWrY1atX60+xKP+h/th2qhttxfr166kb6BSjT4yPj4+Ojj55
8qRyOWdwY8eOtao+AABQ9slH0RTObd26lfKm5ORkt19rQxlkIlfq0KGDw47T
G6anp/NX3/y8mzJO5vquoEaZSM2aNR2uOeICXRc/Cq5eBzrorMeHpNcJOgAA
wE5Mz4MHQcFErtSrVy+KB2rUqMEzD9hDSUnJyy+/zKHOvn37Al0d7+ydK+3e
vZtvRGrbtm2g6+JHQdfrQAc/IYvExcUFui4AAFB6kCvZm4lcadmyZRwSVKxY
8YEHHkhLS/NnBf1uzJgxoaGh4kYVygQDXSMp9s6V+G6mjh07Ku9ksZMg7XXg
1vjx48VNczVq1MAjaAEA/lCQK9mbiVypuLhYTBdMdu7c6c8K+tfFixeVs589
/fTTeXl5ga6UFHvnSlFRUZGRkapbtGwjeHsduNW/f39xo+7EiRMDXR0AAChV
yJXszUSuxLZs2TJu3LjRo0f7eGN7YGVkZHTp0qVx48avvPIKbU4QzW+/YcOG
9u3bP/fcc8eOHQt0XcCY4O114FZ8fHx4ePjUqVOPHDkS6LoAAEBpQ65kb6Zz
JQAAAACAPzhE0faGXAkAAAAAwBxE0faGXAkAAAAAwBxE0faGXAkAAAAAwBxE
0faGXAkAAAAAwBxE0faGXAkAAAAAwBxE0faGXAkAAAAAwBxE0faGXAkAAAAA
wBxE0faGXAkAAAAAwBxE0faGXAkAAAAAwBxE0fb2fwAAAAAAAAAAAAAAAAAG
Bfo3LgAAAACAYIIo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAA
mIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEA
AAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6Q
KwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo2t6QKwEAAAAAmIMo
2t5KIVdKTEyMi4tLTk720/qDS0ZGxoQJE/79738PHDhw8eLFRUVFga5R0PNT
B0O/VbJxv83KyopzycnJsXC16D9KPvafixcv8j46c+aMn2poJ+h7SpaPXWhe
0EKuZG+mc6VLly4lJSXRoHH16lX9kg888IDD4XjmmWfM19Iuli5dWrVqVccN
VapUKSgoKOU60Imjb9++vXr1OnnyZCl/tJ/4qYOh3wplod/q8LFL//TTT7xd
mzZtsrBW6D+C7/1ny5Yt/N7JkyeLhfYbyqyCvif4Y+xy27wzZ858/fXXp02b
5uPKS1Op1fn06dMUK6ampl6/ft3fnxUoyJXszVyuNGDAgIoVK/Lgs3PnTv3C
GLdZXl5erVq1uNEefPDBp5566u9//3vpV6N79+5ch7feeqv0P90fkCv5VRnp
tzp87NLIlfzKkv7jNley31BmFfQ95qexS9u8hw8fFunYkSNHfP+IUlCade7f
vz9/UIMGDbxGjEHKRK5UWFi4x+XQoUP+qRRYxkSutH79eodCUlISLTx//nx7
l+PHj6vKY9xmq1at4hbr2bNncXFxoKpBJwuuxn/+859A1cFavnQw9Fuvyki/
1eFjl/YlV0L/8cqS/uM2V7LfUGYI+p5Xfhq7tM27f/9+/qDKlSufO3fOqg+y
REREBHWSoUOHqpaXZp0HDhwoIsZ69eqVzfOIj0zkSoMHDxaJvH8qBZYxkSt9
9NFHtHNvuumm6OjonJyckpISWnjgwAHe6fQfVXmM22zChAncREuXLg1gNbKy
soYMGRIeHm7t3RkB5EsHQ7/1qoz0Wx0+dmlfciX0H68s6T9ucyX7DWWGoO95
5aexy23zLl++nHL2MngVFn+l4PYHtVKrc2Fh4YkTJz7//HPeHfHx8f7+xNJn
NFdKSUmhKBq5UrAwkSt16NCBdu6zzz6rXLh582aM2/pGjhzJTZSWlhboutiK
Lx0M/dYr2/dbX3Il9B+vLOk/bnOlPzj0Pa/8NHYFV/O2a9fOU65Uyn7//fdy
5cpRZWjIDXRdrGcoir527dojjzwifmtDrlT2mciVWrZs6dBcIr506VL9cbtt
27ZiSWpqalJSEh04+h909epVKrZnzx6v9wNSgX379u3YsSMvL09mE65cuZKQ
kEBVtfBOw99++41O6MePH+cf2rTEuH306FGrPtQTyRb2hfzeIUeOHKHGOX/+
vHJhbm5ucnIyLde/NZtGlZSUlJ07d3raHF/OXOi3/ui3knvW0OZT9Y4dO7Z1
69aLFy9KVkPQ70K+5EroP/4b99LT06m21Jfo//Hx8YZyJcke6HTddU5Jh8w1
SFlZWVRSf4X++FxP0Pf81/f097W5M47RPS65y7yeH5s0aWI6V/Lawlr61eZ5
NsaOHWuiMmWcoSh60KBB1A7ly5dv3bo1cqWgYCJXatGiBe3c9957j/+cNm0a
7ehq1arxoET/+bMLFeMCPLA8//zzly5d+vDDD+vUqcMlqZ988sknhYWF2o+g
Y7Njx46VKlXiklWqVOnatasq0mYnTpx48cUXqQCXLFeuXLNmzeLi4lTFli9f
TlX661//Sv+fOHHiLbfcwuWbN29Oy2vVquX2Ko42bdrQq5Qb6rQGjSETJky4
5557xFcE1AJffPEFbawoQ/WpX7++mI1HNJGnKQTphHvHHXdQgS+//FL10vDh
w/m9v/76q1j45JNP0pIff/xRpoW5Kci2bdvoT8p5uQXoXKatCbfPU089pVwo
s3e4SrNnzz579iyPBoQ+hV+lKOill15yKDRt2nTWrFnKNdC2DB069NFHHxWz
iNDm0OfSWUxVSXNnLvRby/utU27Pym8+o+ji7bffFnuKCj/00EPUMqpWEl1a
kOxC5nIl9B9/9B9SVFT03//+t2bNmqK5nn766blz5/KfylzJ7X6X7IFU/8jI
yLvvvlsUu/feexcsWKCtD8WKL7/88p133ilK0ifOnDlTVczyz9WBvuenvie5
r92ecfiU97e//U1bW5k9bugk7pQb3B555BH6XFpOr1KxP9+wbNkyr3X22sLm
qn3rrbfSq+Hh4drGD3byUXRycjJffde7d+/333/fgVwpGJjIlejooJ3bp08f
/nPYsGEOdyie4QI8sNx333316tXTFvvmm29U64+JiRFnAepRFSpU4P/TkXvq
1CllSRqN+dDTGj16tLIkh0N0IliyZAn/CszopMz/mTJliqoadO7glwYOHOip
KfLz8zt16uS2ArTVIp0RXwCqeBq3L168yAU+/vhj1Uvffvstv0Q5iFjILfza
a681aNDAawurIsNx48bxn/PmzVN91sGDB/mlQYMGiYWSe4erRG/kzJrxmJyd
na0chG+++Wbxf7EXNmzYQCOw20aj91KzK+tpLldCv3VbAV/6rcyeNbT5JDY2
VoTNKgsXLlS2kuN/kx35LmQuV0L/cVsBX/oPuXz5ctu2bd2+iylzJe2Ok+yB
BQUFNBaJl0TYTwYPHqysT5cuXTzVZPz48aKY5Z+rD33PbQV87HuS+9rp4Yzj
dqH8Hjd0Epcc3DhL0lq0aJFOnSVb2ES1nTdypREjRnjaC8FLMoq+du0a/9JX
u3bt8+fP/+Mf/3AgVwoGJnKlRx991KGYeojGN4pnODsmkZGRsS7iwgA+mljn
zp1pEEtPTx87dixn1rfddpvy51rqPNWrV6fl9C/FQjSy0ZFLg2rlypVpIX2K
KEnH7O233+5wfa9Fw++xY8cofaCSf/rTn3hhdHS0KCzOqhUrVqTxig7VXbt2
rVixgk7NVAFarvrpxOmaPYbfQimDp6YYMGAAl6GTFG3ypUuXduzY0bFjR17Y
vHlznu/l3LlzyiaaNGkS/ZmYmOhpteZyJckWVgUYv/32Gxd75ZVXVJ81ZMgQ
Lnn48GGje0dZpZYtW65bt27r1q0pKSn00nfffcfLP/vss9OnT5eUlOzfv58+
nfqVePJFZmZm1apVaVylbGvbtm1XrlxJTU0VQdQPP/ygrKe5XAn91vJ+K7Nn
DW3+hQsXxJS/b731Fm07bXhcXFyzZs2U63Sb7Mh3IXO5EvqP5f2H9OvXjwvf
fffd1GK0huTk5L59+4pgWz9XkumBTsX0U926dePrrGjXPP300w5XppCRkSFK
0mmOFrZp04bCS1qek5Mzffp0/vGlTp06IvC2/HP1oe/5o+9J7munkVxJfo8b
2mWSg9vGjRtpq3kNTZs2jb1BrMptnSVb2ES1Cfc0CmN0dkSQkoyixZSAfLDQ
ec2BXCkYmMiV+AuNsLAw5UJxYbCna6cdri+UlFe9ckJN9u7dKxZ+8MEHDtcP
uKphjb9Jq1ChgsgR3nnnHXGmUG0RL3/88cfFQjFu03i+cuVKZXk6EfNLdIwr
l7dq1YoWNmnSxFM7UAbBP3/XrVtXeTlBYWEhT38hDgdVE3m9dtp0riTTwtoA
g7/4ojOj6jK8Ro0aqZpRfu+IKrVu3Vr17L/XXnvN4fq+UTWKqn6vp5CY8jjl
Eoqc+Xu59u3bK5f7cr8S+q1Y7nu/ldmzhjafW5V88cUXysLXr19X3rXkKdmR
7EK+3K+E/iOW+95/qACHpnfccceZM2eUL82ePZtXop8ryfRA2l7OAl588UVl
GYrhORFQjroUKK5du1ZVz6+++oo/d+vWrX76XBnoe2K5733PKb2vndK5kqE9
bmiXOY2cH/mYcnu/ktsHRRlqYaPVbty4MS184403tJUJdjJR9K5duziLFPew
IFcKFkZzJTEfkfJ4cUqM2xQzq5b/+OOP/JbVq1fzEjrW+AJjOtBUhWlY4MKx
sbH0Z3FxMV/ncN9992nvFaWhiQtTz+QlYtzu3r27qvC+ffv4JeWVZpmZmfxN
Jm2Xp6YIDQ3lN2ofe71z505+SXklsL9zJZkWdroLMBYuXMhLlJfhiQvwxowZ
w0vk946oEp1/U1NTVYUp7uXCUVFR+u2gRaO6dmDxa66Efivfb73uWUObT63K
9zjUqlVL//5xQ8mOtgv5NVdC/5HvP+Hh4VxSezuD23nwtDtOZmwJCwvjMqpA
3XkjhtfuMhX6OF6DGDBL53NV0PeUfOx7nmj3tVM6VzK0xw2dxD1xe340lCsZ
bWGj1X733Xcdrt/peM4WO/EaRV+9epVTxXvvvZfyZV6IXClYyOdKV65cWbVq
Fe1lhyt6uXbtmvJVr+O2NpSlg4jfIu5zzMjI4CUhISHHNPjrDr7Imf7kkp9/
/rm2quI4nTNnDi8R4/aGDRu05fkOrPvvv198MSKey3DixAlPDdKjRw8uo73h
kXBD1a1bV9tEfsqVZFrY6S7A+P333/kqYuVleHwBHiU7dArjJfJ7R1SpVatW
2q3bvn27eKwA1XnZsmU6T6YrLCyk8qNHj+7atWujRo34jVRbZRm/5krot/L9
1uueNbT54uYFr9+36yc7XruQX3Ml9B/5/vPee+9xSTHmCJK5kszYwj+O1KhR
Q9vUfAXgnXfeqa0bjbeUB33yyScUFt5xxx38EeJ7JP99rg70PRVf+p6S/r52
SudKhva4oZO4IHN+NJQrGW1ho9WOj4/njPill16ig9pOD6X1GkXzxY20+cqJ
UJArBQv5XElMAlC7du0dO3aoXjUxbtMQqjqaYmJiHN7wl07R0dH8p+rWFbFR
/Kp4VrV+OCTGeTp4ecmzzz7rcHdBtdLjjz/ucM2T4/ZVvniYxq6ioiJVE5Va
rqRtYaeHpuBve5SX4fEFeMpf8+X3jk6V2M8//yzOQQ7XHaO0H1WXr+Tl5YWF
hSmLCVWrVlWWLOVcCf1Wh/6eNbT5olW9TjDrqZUku1Ap50roP57Q5zpc979r
X5LMlZwSY0uzZs30m5piS+VH79y5s3Pnzm5LKn//svxzvULfU/Fx7HJK72vJ
XMnQHjd0EncaOT8aypWMtrDRahPKOsXcfadPn3b7QcFIP4pOSkriKVNee+21
swqU5DpcXxrwn/Jzs0MpM5ErtWnTRjUXitOicXv58uW8pH79+l08oLFdWVJ1
4TTbtm2boXGbzmh8t+kHH3zgdN3ryr2aNlmnQZo2bUplbr/9drevPvfccw7X
ba3icoWynCvFxsbyQr7SIDU1lf+cMWOGKCO/d3SqJFCb077j76lY8+bNL1y4
wK9evnyZ54pxuH6v79+//9q1a2mTX3/9de25IOC5Evqtqlae9qyhzReFJ0yY
oP+JbltJvgsFPFdC/2E8Z+Ytt9yifUk+V3J6G1u4/sRTU7/99ttiVSKkL1++
fKdOnejPPXv2pKSk8ELVtYIWfq4M9D0VH8cu+X0tmSsZ2uOGTuKGzo+GciWj
LWwiV4qLi+PbtRx/pFyJb2n0SuZKSwgI+VwpLS3t008/5Wub6dBQ5b+WjNuU
evOSiIgI/cqIkv369dO+KkbpJUuWqJZ4Cof+9a9/8RBx7dq1OXPmOFz3tGpT
QiXxBZTbK295qxs3biyWmMiVevfurXrJT7lScXHxXXfdRQtfffVV+nPEiBEO
189Myh/i5feOTpVUioqKli1bVrduXV7zhx9+yMv5dy5CZwHltfFlM1dCv9Vy
u2cNbb4o7PaaH7dv1P5UKtOFAp4rof8wGny4pPb2NEO5EvM0tnD9q1Wr5vUr
XKowX9RE6Y/yvkvxVZLbx8T4/rmS0PfcbrW5vmdoX0vmSob2uKGTuKHzo6Fc
yWgLG82VqD151sSGDRuOGjVK9fiPoKYfRXfv3t0hYdWqVaVYZTDA6NwO06dP
530aHx+vXE7dnpeLWzsF+aMpJyeHv1x69tln9ashSj700EPaS155xCCHDh3i
JV7HbXG3aXR0NL+9Q4cO+nXgKUa1owGhkxdflKuc70V+3C4sLOQnI3Tt2lX1
EsWNvBJrcyXy5Zdf8jBbUFDQvHlzx428SZDfOzpVcouGZX6G3X333cdLOHHT
3u5kea6EfqvkY7/VUu1ZQ5t/4cIFrgztCLdPzxTctpJ8F/IlV0L/UfKx/4gJ
w1esWKF6yUSuxLRji5iHQVz95cm0adO4pOqOG/1cyffPlYS+p+Rj3zO0ryVz
JUN73NBJ3ND5kefi0z5w1u2HGm1ho7nSp59+6nD9dqxzV1qQ0o+ir169esEd
foB13bp1+U/9Mx0EkNFciQJp/vpl+PDhyuVTp07lQ2PSpEmqtxg6msSQ6/VR
5uI3zdmzZyuXJycnc6LRsGFDcVWtzFm1ZcuWDtfVpPxUPu3TulVo6OB1NmrU
SHldeklJSbdu3filuXPniuWGYk5+dDj9q/zWaPHixeIOYstzpT179vByikZ4
SPz5559VK5TfOzr5S1pamnZyvDZt2jhcX8E5XT9y8VdPjz32mLLMqVOnaJ9q
zwWePos+JTQ0VDwcyi30W7Hc937rdc8a3fyXX36ZCytvrGYiJHO6ayVDXchT
I6P/uOW//rNy5UouSUGgctyj//fq1UuMTmK5dutkeqCY4bNJkyaqGYpURDKi
+rJXzG8m4mdrP9eJvueB//qe/L52SudKhva4/C4zen7knL127doyH2q0hY3m
Svxsqc6dO+u3RjCSj6KVMLdDsDCaK5H69es7FJcWMHHDS4sWLSjqppFBnDsM
HU006vJPxpQUhISE8MXetDZa/3PPPbdw4UJRcvfu3aLk2LFjs7Oz8/LylixZ
wldBq4ZomXFbXK7scN10qXyAiyfiopEnnniCak6nCRqTxamnXbt2ysKGciUx
BetHH32UlZW1f//+wYMHi8epO/yQK5GHH37Y4br0zuF6ipzquUhOI3vHU5Wu
XLlC/adixYqDBg365ZdfnK4L1+fNm8dVopVwMQ4zCKWHtP6cnBzaO+JJ5apz
Ad9CW69ePeW3nfRBPLkfNZry0Rgq6LdW9VvJPWto8xMTE8Wj57/++msKBqiq
KSkpb775JqXzYshy20ryXUjc3i6m8HKi/+jy07hH8RiFf1z4hRdeoFDz6tWr
27ZtE8/BdOjmSpI90KmI+Zs2bbp9+3YO7zMzM4cMGUL7S0T7cXFx4r0nT56k
6tEu5nuxGcfPln8u+p4OP/U9yX3N3J5x3La55B739Hanh11m6PzYunVrXs6T
jVAXPX/+vM6HGmpho7nS/fff73AN5m73QlBDrmRvJnKlRx99lHZujx49lAvp
gBJXaPNYSiE3B9tGj6aoqCgRIDlczyUUP6Y0aNBAWXLu3Lniee4O1y2Z/B9a
qHowtMy4Le42dfzv7Nk6cnNzxcnd4Tq1if9Ta6jGZ0O50vr16x0a1apV++ab
b/j//siVxLMVHIpnpalI7h1PVdq5c6e4r5Pfzo/Pc7juGE1KSuJikZGRogwV
4E+kfzlPV50LxGUDtGZx9hEPgyADBgzw1M7otw6L+q3knjW0+U7XRb/Kwsqq
9unTR6eV5LsQRRriVfGIbfQfHf4b9zZv3swP1VLhEMuhmyvJ90CK8HnOatE9
lG8U+4Uytdq1a4vl/HQhhyuw4U3m+Nnyz0Xf0+Gnvie5r5nbM47bNpfc457e
7vSwywydH2fOnKnsJPQvZWo6H2qohY32NG7kYcOGedoRwQu5kr2ZyJV4tiLt
pD3JycnijMaHcEpKivPG71AdO3ZUlReXoGt/+qfzCz9VTaCTTvfu3Q8ePKgq
mZCQwDfXCPRx2gc6zJ8/n1+l8jqbRtEXF1u0aJFka9BoT+cInvJCbHivXr3E
5NuCGLdPnTols+aJEyfyl3g8XrVu3Xrv3r379+/nJcpcyVAL6zTFL7/8Is6D
Gzdu9FQxmb3jqUpO19Mr+vbtW716deUaKAGnMElZbMyYMeJETJvfsmVLqvDi
xYsdmnNBfHy8CE7S0tJ4YWFhYadOnXhht27dPG2LE/3Wun4ruWed0pvP1q1b
p4w3HK77r5XXgXhqJfku1KVLFy4mnpuJ/qPPf+PeoUOH+Os4RlHru+++e+nS
pXvuuYf+/PHHH3W2Tr4H5ufnjxgxQgTqjEJBysWUl0udPHlSzGbmcCURX331
Fb2XH6kg4mdrPxd9T5+f+p7kvnZ6OON4anPJnmZ0l8kPbtevXxfJHXvzzTf1
P1S+hY1Wm1PF0aNHO23HXK7Us2dPh+uKRz/UCKxkIlfip2C4neCUjkoaWpcv
X05RvfbR3kZdvnw5MTFxxYoVqamp+re8Xbx4kepPMdW5c+d8+UTutzREqJ71
41VxcfHhw4epqpZsuJCbm0stsHr1arcPhgss+b3jFp0m6LS+cuVKSspOnz7t
dqYg2moKNtavXy8ecu0JrYFWRaewq1evKpe///77Dolf/NFvLey3MnuWGdp8
imRohXQsaB9UqkOyC9G2U+eJjo6mT1EuR//R56dxj2RnZ9Neo53ip7GFUf2P
HTsWExNDnURcmKQtQ/EwbaPyFrlS+Fz0PX3+6Hvy+9rTGUdnzV73uFHy50en
a1b2uLg42l+//fab5Pr90cKcf3l9ZF4wMpcrQbAwkSt16NDB4W6KtmCXnp7O
v+PwEx8g2NHZvGbNmg7XPEuBrosfod/6CfoPBAr6HthPQUEB/9jkdRKPYIRc
yd5M5Eo8JVGNGjX4PlZ7KCkpEZNu7du3L9DVAV/t3r2bL+Zv27ZtoOviR+i3
foL+A4GCvge2xE/RInFxcYGui/WQK9mbiVxp2bJl3OErVqz4wAMPiOt1g9SY
MWNCQ0PFpdqUCQa6RmCBVq1a8XXUyhu77AT91q/QfyBQ0PfAZsaPHy9urKtR
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
lkydOvXChQsHDx48ceKEodvloqKi6O3Dhg07d+6cH+oLAAAAAHYjGUWvXLmy
YsWKlChVq1YtOTnZ//UCa/iSK+Xl5XGutGbNGpnynjIXynG0M9rpv8XpLlfK
zc1VTewwceJE+UsEx48fT2+ZMWOGZHkAAAAA+IOTiaJXrVpVqVIlSpSqVKmy
ZcuWUqkXWMOXXImMHj2a8ouoqCj9YgUFBZMnTx4+fPjmzZtVLx07diwsLCwi
IuLkyZOql2JjY0NCQqZPn+72Gj9trkSfMmXKlDlz5hw8eHDHjh30fyrw3Xff
Sf66NHLkSCofHR0tUxgAAAAAwGsUvXbt2sqVK/NtSoMHD6b4dsWKFcsVNm3a
VFqVBcN8zJXGjh1L+cX8+fP1i+3du5d/6AkNDVW9xE81IsuWLVMuLyoqGjZs
GL905MgR7Trd3q+kVFJSQnkWlaF0TGZb+OPWrVsnUxgAAAAAQD+Kvnr1apUq
VRy6HnnkkVKsLxjjY640btw4yi/mzZunXyw7O5uzntmzZ6teSkxM5Jd27Nih
emnGjBm0PCQkxO3DYb3mSmTr1q1UZsOGDRKb8v+nIt+4caNMYQAAAAAA/Sg6
Pz+/XLly+rlS8+bNS7G+YIyPuRLf4+M1VyI5OTmHDx92ezncyZMnT506pV1e
WFiYmpp66dIltyuUyZXWr19PZWSuC+V5IQh+BgUAAAAASaajaAgKPuZKU6dO
pfxi5syZVtfLO22utHz5ckqLSkpK+E9KskJDQyWvwbt8+TLnSomJif6qMQAA
AADYC3Ile/MxVxLzbB8/ftzTXHbW2rVr1yKXiIgI+uhJkybR/9etW5eXlxce
Hk5Lxo0bFx0dvXr1ak6U5s6d63WdRUVFGzZs4Fzp0KFDpbAVAAAAAGADyJXs
zcdcKSUlRUzQHRIS8ssvv1hdQTVKgoZqjBkzxumaw/znn38OCwsT9YmJifH6
TOT169dTSX7Ld999l5+f7+9NAAAAAAB7QK5kbz7mSkVFRXPnzhU5S3p6utUV
NCMnJ+fs2bNuZxrXonxK1H/r1q3+rhsAAAAA2AZyJXvzMVdiGRkZO3bsiI+P
v3LlinVVKyUnTpxISEjYtWvXuXPnAl0XAAAAAAgmyJXszZJcCQAAAADgDwhR
tL0hVwIAAAAAMAdRtL0hVwIAAAAAMAdRtL0hVwIAAAAAMAdRtL0hVwIAAAAA
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
AAAAAACy718APxND
    "], {{0, 426.}, {562., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{562., 426.},
  PlotRange->{{0, 562.}, {0, 426.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251319498002*^9, 3.915337991548825*^9, 
  3.915489946858872*^9, 3.915985463202304*^9, 3.915989624316309*^9},
 CellLabel->"Out[10]=",
 CellID->130703036,ExpressionUUID->"c9521466-ec45-481b-8a84-db0a6222226e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "2d86eeef-c858-41a5-9b89-4c020f3de5c8"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"ab97169d-6074-40b1-bf1e-caa009ced4a3"],

Cell["Search over index objects:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251366246792*^9, 3.86725137353743*^9}},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"201c53ad-32db-45a9-ae55-03c97f5b87c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", " ", "=", " ", 
  RowBox[{
  "CreateSearchIndex", "[", "\"\<ExampleData/Text\>\"", "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251470251603*^9, 3.867251482656488*^9}, {
  3.872267862223223*^9, 3.872267862612677*^9}},
 CellLabel->"In[11]:=",
 CellID->1994573855,ExpressionUUID->"e0798fd0-1353-4ef7-893a-47d1d4e27125"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3RuJyJGp6+bFF18Ub99GJocNG0a2kEdDQxOGlCmdHj16pKenUzg8Z8qUKTDA
xo0by5MlnZIoNJHJycnixTTkkyi7CLl48aKcglOJ//7777RoyTPPPHPgwIG/
tCmuaPhq1KhBxVEMDXVL699Wrlx56dKlQo3+/PPPn3/+uUmTJsqycrm5uUjB
oq0qJjrNgoKCKHH9kDOxIF7//v1x6FGx27dvf+655yhQWSVYrIeGrcgwkZ+I
iAh64IiKMpgm8JcjQ3O2pM6eA8SdO3dQ83T3Ia8ZcvbsWeM3a7ChsaExDMM4
i8t9aHPnzpXXhIc7iYmcFm38mPKKw5s3bzZr1oy+LVSoEKQCcejNQdRAywtx
CCsoVqzYSy+9JBr96tWrk0LkxdD+0lRHvNGAmnVyQgJSJL/23SmJEvMK7dG0
aVM5BWc76L755huRVPny5cUbfqla9O8UWLZsmXhJAY6Xr69vvXr1xMTYcePG
yZH79u1r0R5GHzlyRATCdmhFXBzf4/cvogJ/fuWVV/RlxPENDAxUckIlJWW1
aC+SEK+NwMkzb948fQ3IGBuasyX9y8lzQDBr1iyRZ5xy2AVsDR9xl2GQ+Qdj
aOIpp/w2ATY0q/aCyJSUFJy9Z86ccfhKxwcGcrJixYrFixebP/r5zoYNG1at
WiXWPylQXLt2bd++fbj9eWB7RBvkkTMkOjp68ODBOBB5TCctLQ01hguXQRx8
Gxsbixt8VG/eU3tIwQ17TEwMmgCDF6rmhdzc3MTExKioKOwoj0nlZRzauXPn
Pv74Y6FPxFNPPTVlyhSbb6BGW79w4UJaFV/w+OOPQwzEiwNEzLFjx8oGCKMb
PXo0Ck6Kop+FR2O0zM9uuHXrFhKR3y0Fr0Cbu2jRIiUmTXzo0qWLPhG9RImX
a9tDeXuCU4kTCxYskLONgq9bt27z5s34++WXX9angzb3vffek/25cOHC8N6w
sDC5mwgKQd/qX6qVmZlJfUfe3t7KM0ockU8//RS6Jeqwfv36v/76qz4bVFJ4
VGhoaMWKFUVmnn/++b179+rjKzg0NPMlFZg/B2Qgk8IziSeeeOLrr7822OQh
MrTU1NQI55Ev41u2bLEZB1d7ilA2OBqSlvf/zFQXDjFqCXd8AfeAq+MIOnwj
dv6CnwluZ5SjfOrUKcqSqJkHD37syACu5OY3sVmW/GX27Nm4rNHzAoAbeVxk
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
T9l6z9DkWahXrlzp1asXTZaUZ0GGhoaKioIvvfTSS2ZWFSbvklfzsAcNWtPP
GaElWeT17mCnstULINW0OwKHAKomP/fE4YBKlStXTnR5yeCGwiLNz7UJze2V
DS0jI6Nu3bqkglZp/qkAB7pmzZoQOdH/rEAdcfYWsy04sKExjGdhQyuYpKen
09qkxkD50tLS8uVllwI06JC9/E0TbS7aSnslytVwNk2oyLFjx1avXu2U2gng
Y4pN2dwFZNvhgmA4WImJiQaTB9GmwyXsvW8rj6Dqjh8/riy57wI5OTmwZf1x
h7/BM40X05PBQSlevLjN4fFOgWqHVuH4Oiwa7gLWrFmjvHJUgMD8PZnzCE4D
3FD4+PjYG3JQcGBDYxjPwobGMEz+MmXKFIut8VcMGDp0KAwW0uvpjDiGDY1h
PAsbGsMw+c7kyZMrVqwoXpLFEEFBQV5eXvKyvQUZNjSG8SxsaAzDuIOtW7dW
r17dqZdG/b0JDw9v2rSp8SrHBQo2NIbxLGxoDMO4CfOj1x4Fbml4OhdOwIbG
MJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbR
w4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1h
GIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6FDY1hGIbRw4bGMJ6F
foO3b9/29MWAYRiGKSigUWBDYxjPcu3aNfwGb9686enrAcMwDFNQQKOApgEN
hKfbKIZ5dBE/Q09fDxiGYZiCgrh593QbxTCPLnfv3qWu7OzsbE9fEhiGYRjP
g+aA2gU0EJ5uoxjmkcZ6b0Qobppwx8Rj0hiGYR5BcPFHE0C9ZzSDzNOtE8Mw
/1/SGIZhGIb1jGEKDnfv3pXvnhiGYZhHDXqSwg83GYZhGIZh/jb8H9f5O18=

    "], {{0, 59.}, {411., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{411., 59.},
  PlotRange->{{0, 411.}, {0, 59.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251483594005*^9, 3.872267868883519*^9, 
  3.879868719351593*^9, 3.879874131117103*^9, 3.915338010784877*^9, 
  3.915489958236157*^9, 3.915985476443064*^9, 3.915989807302819*^9},
 CellLabel->"Out[11]=",
 CellID->882837615,ExpressionUUID->"c4653e80-381d-4cf6-9db8-c09aabcb0dcb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"indexResults", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"index", "->", "All"}], ",", " ", 
     RowBox[{
      RowBox[{"WordToken", "[", "1", "]"}], "~~", 
      RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.867251499863676*^9, {3.872267873063178*^9, 3.872267888482976*^9}},
 CellLabel->"In[12]:=",
 CellID->620380776,ExpressionUUID->"22d3a9aa-fdef-4b28-b50a-c56331f58832"],

Cell[TextData[{
 "Visualize the results in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["WordCloud", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/WordCloud",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2c60a7cc-e37c-412a-8ce9-8f95687aae28"],
 ":"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.872267978586767*^9, 3.872267986970823*^9}, 
   3.872268799898808*^9, 3.872268927002496*^9},
 CellID->149245661,ExpressionUUID->"ed55cf9b-2347-455e-8931-2c5d198a668e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"indexResults", "[", "\"\<WordCloud\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872267962036769*^9, 3.872267973205229*^9}},
 CellLabel->"In[13]:=",
 CellID->1313440369,ExpressionUUID->"35f493ed-fbc5-4dab-ae05-b5f741728db7"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"to be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1882580696140018],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"It is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1977401129943503],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {6.5, 39.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"have been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09403026352178895],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-4.5, -33.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"I have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12247639366283433`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, -64.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"we have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09403026352178895],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, 79.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Which have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07684405989490735],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-4.5, -93.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"which are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08039982616253802],
     FontColor->RGBColor[1, 0.75, 0]], {-6.5, 106.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"we may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07684405989490735],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-85.5, 38.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"we can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09225238038797362],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -112.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"the ground\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05787997313421042],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {14.5, 128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08514084785271225],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-97.5, -111.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"they are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06084311169056932],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {95.5, 22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"closely allied\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04306428035241595],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-82.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I believe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0667693888032871],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {98.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"same genus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04543479119750306],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {92.5, -51.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the present\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044249535774959506`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-105.5, -4.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06736201651455889],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-91.5, -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07091778278218956],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {106.5, 0.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"species have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038915886373513495`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {104.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the rest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058472600845482205`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-106.5, 13.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041286397218600605`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {87.5, 60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it would\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05373157915530796],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {87.5, -69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"The Latian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047805302042590175`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-96.5, 72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"He said\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05965785626802576],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-108.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"species are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04010114179605705],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {92.5, 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the forms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04543479119750306],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {88.5, 91.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the fight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041286397218600605`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {86.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I think\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05906522855675398],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-100.5, -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"in regard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03950851408478527],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-91.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"This is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05965785626802576],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-0.5, -137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of many\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04069376950732883],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {77.5, 108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to believe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042471652641144164`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {79.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"their own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04543479119750306],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-76.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cannot be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041286397218600605`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {60.5, -130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the land\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04662004662004662],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-58.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the many\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03536012010588282],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-114.5, -38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04484216348623128],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-97.5, 104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the view\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04484216348623128],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-62.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"We shall\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042471652641144164`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {89.5, 121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it has\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05669471771166686],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {116.5, -130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"species has\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029433842993165028`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {87.5, 136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"generally be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02824858757062147],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-115.5, -129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Which is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04306428035241595],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-119.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"be given\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035952747817154594`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {3.5, 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03950851408478527],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {53.5, 147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Selection will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030619098415708583`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {60.5, -145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to show\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04069376950732883],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {129.5, 104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the place\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0329896092607957],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {132.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we should\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035952747817154594`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-48.5, 150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of Heav\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04069376950732883],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-89.5, -148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030026470704436807`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {134.5, -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03417486468333926],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-132.5, 118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"would be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654537552842638],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-104.5, 150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"may be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03536012010588282],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {134.5, -82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his head\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037730630950969936`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {106.5, 148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"and have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035952747817154594`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {118.5, -147.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to find\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044249535774959506`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {140.5, 55.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we know\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035952747817154594`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-24.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"The pow\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030026470704436807`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {141.5, -65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"this view\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03713800323969815],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {4.5, 159.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.052546323732764404`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-145.5, 52.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"She said\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03713800323969815],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {25.5, -159.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I am\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05610209000039509],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-147.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"which has\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03417486468333926],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {56.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"We must\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03536012010588282],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {74.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"No doubt\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033582236972067483`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {141.5, 117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"In many\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030026470704436807`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-129.5, -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"To give\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03417486468333926],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-147.5, -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654537552842638],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-142.5, 87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042471652641144164`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {143.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"He spoke\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02824858757062147],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-138.5, 100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03713800323969815],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {138.5, 130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the shore\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.033582236972067483`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {107.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it was\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041286397218600605`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-133.5, -141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"And are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03476749239461104],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-116.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"from afar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03180435383825214],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-128.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the cause\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030026470704436807`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {121.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"has been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032396981549523925`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-153.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"not been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032396981549523925`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {149.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"To see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037730630950969936`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {153.5, 12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029433842993165028`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {154.5, -41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"It seems\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0329896092607957],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-22.5, -164.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"she was\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031211726126980362`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {154.5, 24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"not be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03713800323969815],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {151.5, -15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"T is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054324206866579745`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-156.5, 10.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03950851408478527],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-158.5, -19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"she had\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030619098415708583`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-154.5, 66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a state\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03417486468333926],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {151.5, -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030619098415708583`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-85.5, -93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"That is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03417486468333926],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-158.5, -35.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"will be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031211726126980362`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-160.5, -4.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"its own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029433842993165028`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {157.5, 36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I could\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028841215281893248`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {158.5, -28.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"can be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.030026470704436807`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-37.5, 163.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654537552842638],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-61.5, -162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I shall\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.029433842993165028`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-67.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I was\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0329896092607957],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-162.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I do\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04010114179605705],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-161.5, -96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03476749239461104],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {0.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"as is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02824858757062147],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-0.5, 57.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-178., 176.}, {-172., 169.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.872267964127241*^9, 3.872267991215858*^9}, 
   3.879874223247648*^9, 3.915338174218568*^9, 3.915985535655867*^9, 
   3.91598987980453*^9},
 CellLabel->"Out[13]=",
 CellID->21138626,ExpressionUUID->"23460b5c-f1e2-42a0-a0f7-70bfd97b6025"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"573c4d71-47dc-41be-baaa-04586df828ef"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4d166ce9-cf1e-4730-b84f-ea24b6772d56"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"bdd133fd-dc09-4661-bbe2-f50150e9e279"],

Cell["Faizon Zaman", "Text",
 TaggingRules->{},
 CellID->1083795939,ExpressionUUID->"f6cc3633-8b44-4a7c-a468-88bce75b74a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3ab920b3-f48f-4f31-8f15-25c315022075"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"5a89d02b-604d-4fdf-b83d-4419983a2364"],

Cell["https://github.com/dishmint/LexicalCases", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.867247575944808*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"2cddba57-5039-4f7e-8017-92a653112114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aa645ab7-61f8-45fe-99ed-9ff29663f0d2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"b302d505-4b47-485e-9172-8cb3744a90d2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"a730aa4a-685f-49a8-8083-50fa89e3484d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "35e81700-1c8c-47b5-af70-7542bc824def"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"944b5222-1a84-4c26-9ffb-d2b6b5091c3b"],

Cell["lexical cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250789127003*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"75b6969f-d76e-4166-86a3-f5a342eb47e8"],

Cell["string cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250792465765*^9}},
 CellID->1995096266,ExpressionUUID->"cda2b2c4-6411-4453-b5d6-c412f1f7c6ec"],

Cell["string search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250796416108*^9}},
 CellID->969775666,ExpressionUUID->"31fd8248-3c4e-40d9-a223-aea58dfbbac1"],

Cell["text search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250800083678*^9}, {
  3.867251745601468*^9, 3.867251745603298*^9}},
 CellID->1657720019,ExpressionUUID->"64c1cb14-4bb4-4c6f-8e5b-ffb60f40ddb1"],

Cell["text cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250800083678*^9}, {
  3.86725174684802*^9, 3.86725175043145*^9}},
 CellID->925073988,ExpressionUUID->"de5b44d9-8417-43c7-86be-4044f3fcae03"],

Cell["search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.8672508030060787`*^9}},
 CellID->1547162085,ExpressionUUID->"c806bf9c-0bd2-4fd6-bf65-3df58a4a44d4"],

Cell["text analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250810710026*^9}},
 CellID->1260957434,ExpressionUUID->"ed5c1322-57a2-4d9a-85b0-3e95db0843b4"],

Cell["text pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.8672508168203382`*^9}},
 CellID->1239550090,ExpressionUUID->"6970b472-aa2d-48bd-af9d-af0de36e751a"],

Cell["text pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250823230261*^9}},
 CellID->882324921,ExpressionUUID->"65b93f71-5613-4dfc-b7f6-82e132eba4cd"],

Cell["pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.86725176190212*^9, 3.86725176190336*^9}},
 CellID->1516644615,ExpressionUUID->"374fd611-4aad-4cfc-91e5-bbc00cd1852e"],

Cell["lexical pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251766301625*^9}},
 CellID->629062074,ExpressionUUID->"6a571711-9aaa-4aff-8664-1e5933891810"],

Cell["lexical patterns", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801334418*^9, 
  3.867251801335786*^9}},
 CellID->2113172454,ExpressionUUID->"1c00e6a6-2982-4c78-90ac-5e95c965f8c7"],

Cell["linguistics", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.86725180333738*^9}},
 CellID->1094251332,ExpressionUUID->"b916d629-7ac3-4814-8072-82b9f879e97d"],

Cell["text mining", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210309921728*^9, 3.872210309924004*^9}},
 CellID->2136157625,ExpressionUUID->"15cbcb0a-52d6-4582-bf9d-c82b657ab70a"],

Cell["lexical dispersion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210311194353*^9, 3.872210314498335*^9}},
 CellID->2086878829,ExpressionUUID->"29940b9f-61a6-4bef-bf1b-1f18e31f21e3"],

Cell["text dispersion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210311194353*^9, 3.87221031711361*^9}},
 CellID->1074669460,ExpressionUUID->"810f966a-107f-4f95-9754-b55ae84e25a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d47fd2bd-cc48-4a2b-8fe6-167578c7d52e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"8961b87c-6f2a-4f77-a071-a74db57d45a9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Data Manipulation & Analysis", {
            False, "Data Manipulation & Analysis"}], "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Visualization & Graphics", {False, "Visualization & Graphics"}], 
           "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Knowledge Representation & Natural Language", {
            False, "Knowledge Representation & Natural Language"}], "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Strings & Text", {False, "Strings & Text"}], "\" \"", 
           
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdkD1Pw0AMhpeE0oI6MzBkYkH9EVEQKKK0VV2xm9SkJy6+09kWhF/PAaoQXd8P+\
9FbzxZQgo6e4GxtGk0XMGkO1L3R/rWQYulE4foOFasnZBfNo7rA1U1VM/\
pRnMDVsxND7z6PzkPCeHCdwO0jh3dP+56qLcVEQqzH0ArVEvpqidwb9gRz0OS4l+\
zt6CNjlK3SIDKtTcOQa90CzjcpREo6wqxBpT4kR5KB1/H76v/spAnehhNx3rJSyii/HDCteQR7Ecr/\
LhqTHGw5jyDlPXqhP/EHpVgFztrlliRY6mg3xjzbBjtP+gUpJ3Si"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->727039701,ExpressionUUID->"d588e2b6-eb66-4f87-a3ac-e616c672e461"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7394acc8-7ad2-4e75-80bc-592b689b02fb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"13125726-24fe-4902-b8ee-f632fc1a3eb3"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"71b0c1a4-dd7e-4439-adad-cce22eda8c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9789bb3f-d1a4-45bf-930d-70b54d1389cb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"3fa65a98-3217-4e8d-95e6-211612003daf"],

Cell["Source, reference or citation", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"687fe21d-7ac8-4c4a-a634-8fcdabb117fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e2f53aca-5f66-4466-a168-c608e9b03421"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"1ff55bb7-c3c4-4264-a40e-fc79f2ed690d"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"3203ec5a-ebf4-4aee-8ee4-0c4b2b5415fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6fcb10b2-ede1-4438-9008-11434c710a45"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"47c5af80-d808-4288-a0d4-501a547634a7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "06004c09-85c2-4c88-ba47-4d80caab5d12"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"0a561a65-d463-47ac-8220-4d58a6800659"],

Cell["13.3+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.882818799151093*^9, 3.882818814903826*^9}},
 CellID->402052919,ExpressionUUID->"97e46064-b1f8-46db-b6b2-4c245587e769"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d563fd9f-51bd-47b3-9a72-c497faae53dc"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"1aeac77b-3406-4234-be3d-de08bcf594a2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->174303277,ExpressionUUID->"535fc4ff-5911-41bd-b4d5-253770bf228b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "59981230-44e2-4574-984a-83fa66b34aaf"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"bc39759a-d37b-45b7-83f3-947e00b337ae"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlbYWym4fsXc+gqJOYppWVE/aMwRXRA1JFDuV+PsFtYR2Tz4+\
jo99nOIphzXwqBCSvWfrOYe07FGcsDumtPqSxJACEkmj4fUX2925Ub7hKd1sGxb9p2khAeGkZUjCg6\
KuIAPfntBpVAGKHjuvsAuTKsaBZt3jA60OobDozyBWou4lRv5Of4ax+m/N+\
3TRvu56jTfa88I3MFYXzxHlsKmdseh4hPfSDDbMaaWSPC5Td/\
osndED6unAeztxRFnh2QzhgZiubpQfNJWPObxVmtFZh3xxkBV6DDYJQ/Nz6Sk0VTr8Fa0/\
GkW4kNN5afVtdOBeDkjGO4E/ow1u60Yo5D9Skaw8"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->347482031,ExpressionUUID->"8a93fd62-e2c4-491e-b42f-f042087c43d1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c24bfe51-795c-40bb-9932-37a88c8559ba"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"6d742ac0-250d-4228-acd0-2bebcd868671"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj9FqAjEQRVV2a21LH3zzzR/IR9iAsFCqOP5AzM7S0GwmZGYe9u+\
bRcHHuZzDvXN4M9CCTBHh5aSSVQys7S/6P+\
yHBTffgWvSdoIjD8v7Pay4uWg1tqA5UxHs9yHtfSTtubkWRQOv50IZi0ywszRmJ+\
EWYpDJztBDq02nLIES8+agQmOl/FxPUcfEdmngs0uCJRcUN4Ow/\
iKK6JKBd6tclS7VydweXWR8hvNabn4o1ezjgkxaPF6nXJ88Ox9R/gH0QlZ0"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1122458824,ExpressionUUID->"24a98d89-7b5d-4ab3-aafc-85c16b10fe83"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2f0cf05e-cfb0-41e0-b06e-a3ac7316de0e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"5ced32a4-7a0a-42e8-a947-3ff812c292dc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Notebooks", {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAQRGnjNHUbSi+95wf8EUYQMC2JyfYHZGVNRWSt0O4e/\
PeVKSQtve3OvDnMtE8NrEHmgPBwVEkqDWzMF7oLnsc7rj48C9QHEhyILlzgTnDicfVjjfdcnbSEb8i\
v8+q+9jbbEDDs3jFHDPxfubJbE0jPu9Y5ZP77NfDYZ0qYZYY3Q1Oy4gcfvMx7tKIZC7E5JvEUmetWh\
aZCuKURBZ0im1UDL10UzCmj2AWEuo0z6MBYmj8b5RLqYtmB13sbGG/i0purA8WibU/\
IpNnh55zKcr11AeUb42dz5g=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->1669099720,ExpressionUUID->"2cbd7b9b-439c-442d-b928-2f28a3b7bf7d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "27334686-102d-4339-a9c1-548ea173ed6b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"ecbc873a-ee4b-4060-a4b8-f788a9f9d2e0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0+VN7AQ6cLMSR8ABcqmbbwkotreK8gLs7m1j1elb+\
abpceQhehkeAl0AcEc/A2Mlu0qpI+GJ7PD/fzHzj4+GE97irFfC9S+\
8q7yZ8P1lCdgN58cR2z6UlSS91UNri6fpedGx35hXQ/dkMV+EaxHx0jplQrJAKgm5/\
JlZTvKNzx47mUFZKOCBB0d3ovziRNlNovQEbTc+iZc92E1CKPOyT9olwotiz/TMjymjdWT/\
zL51kiWiBuaW0DCsnUTNZsBq9YZXIFDiWSwOZUzXLESwTumZYkD6wApXCldQLlnsTNoUiDzsaptGUl\
Ia3YgHvhz+/\
fmOJAYJu37IcyCt5Iq0Sc1lIOqtt0lE5LSs0zrKcgLPCYHlPI6RIYMGIgNcyA6EqOXPYxN1Al9o6oV\
RUI+R5i1AYYHCXQUVm7/j4Ag2kusA53LWNscOpyG4WBr3OqYyDD0bU53ALyhRx/\
TlqNcexrhfCLChg8nzrIcojMe57+PE9rN9bDwezEIaQzQift0mvfRmkJZWQy8/QUIRc7XEqBuQbP7+\
O7ODYOywpz+wfyQxOQtXFNR27c+OhfegHHszFoiUmf8Op3VSwxs/jBGvsR8F+k3qLcLMn02Tang+\
TQwox/ogqT5B4TByg2Tg4vRXKxwZFQr5KlMxuiFqBHNQkSQBMGd/\
561QrqaHBdVmBBjP1zqFuJoMPtxAnvH9lAktczUc7SdBsXkai22aI/\
isZ6oRegpHEmJ1jm17vgXBd3NNcroveOxPKwmPtePDS9oO/3MW8m9Z+\
gsqX2u50fcIPUu3AVIa8xmINjnXN/bUF+nlGibekmGr6mTbxtsLwKdnuJ9QkG8/A0uRnMK8r+\
suu4hT9BTvOvf8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->2127596926,ExpressionUUID->"8d80ebe5-ae7b-494d-8b6d-0a305224c42e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQBpq0SRO1Fy70ZHHiQF6AS5VsWojU0ioO4ux6ZxMTZ7147KbLibdAnHgRHg\
FeouKIeAbGTnabRlRiD4k9nvnm75vp7/d4k7tSA9+98K7wrsf3khnIOaTZI2ycKSRJc+\
Rggdnj1T17go2x10D3nbFZhmsQ88P3RmdWLJiQ0vjc0XtrLJYDcwNISp0JLAotHJAga6xtng0VSm3Q\
W8C1eX9t3cRGAloTyh5ZDIUT2S62TkkjIjxZPfNvO8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLl\
lqAJnIS2Yy0geWGa3NUuXTV/u3X76zMXz0pIovmcfwaywjQ2PTlZHKM2MXInqwEFJJmTNB195+/\
oqsyn80jGij3IEV0iFbKjeL/mrVRBufVoUKfrZqFwESC+SD4kiBsqDISW9hUpUpOt+\
DkxHOXH2gNHHTNpjADUgfziutFAptSgod5QxS6iMlIXC+\
MnuHtZ60kCpH3snJtZJQCTajXYui6bmYQ12Dvi5mgkmhNfLuubEwotpN4KYmD+\
4PhJxPLSWbUovbr60oz+AatM3i9+e41uzGnp8LO1U5Jk/vEKI8kvc+\
ws8f4ft9h3AwDm6ozWORKo9Js35pjxZiClx9gorGBLXLKXBI1zi/jrHd986ExssHkmkPQ4fEFR0bE+\
uhfmgFjk7EtB4e/oJTj4hBFc7DA1BhdALGOv06yvV/\
MkgG9fkwOSQ33TdGp4mhWSPO0AwfnFwL7SNr48AcJVrJOVE/\
kMnCJqv581GuVQ5VbBcF5GAH3jmTV9PLD+6H2eOtS2sKsK7knY1kaI9cxGHEatj/\
KyHqSD4Dq2i2No51is0t4arIJ0TCWPzmqdAI/\
2rL1kvdF360GfN2anuJ0X6R4wYDevwgDnZhCTkWrd3PS+\
6vEMigk3gkxVFOm3Tt804Ylig23pqcZN0xIG0oCZOyoN17GRfVX7KLBoc="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->771329085,ExpressionUUID->"d873cb89-4cce-409d-802e-37473ba74799"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["ExternalServices", {False, "ExternalServices"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVF1u00AQpiVpkyZqQeIJeFjxBKi9AC9Vs20hUkurbC6w2ONklfWu2dltay7CXRBHgE\
sgHhFnYLyx3RAKwg/2en6++flm9mjnQHSFLzWIrYvgi+\
APxDafQ7KANNvAzplCLx6c3HhwRmoB7kolgOQz9pBjY5FtYmcSNND//\
Ym9rn6j48PGkWHtSRa9ibwe2Rs6b+\
JgCnmhpQcSZJ3a68mxwkRbDA5wPXLWxQ4HrQlnm3yOpZfZFvZOncwjxuZSLT5t8Lm1CMzPFTJbeGUN\
UxkrbXCskIkGz1LlIPG6ZKkFZNKUzGZkDyyzWttrZWavdr59/MzO5YL0Dt4HQI/MWwbrZbHnc++\
LfZZVL8T5PgOfvIje3AHVRzk4FpC+\
tQtLrDEUnvKKZgJMyiCXSqMYnlsHY5PZKQVqeos7I5ksZs4GUzHTf+1keQZXoF0Wn5+\
HreUwtuNcupkyyB/dIkR5ZPt3hK9fqufHLcLupApDHZjIVAXk3VbTH+\
dyBkJ9gIZlgtoSidSQ1jjfD7F/FLzNpVfJX4rpHwNRIN/\
RsTN1AVpFr6JvKmftbImXYtmmBudf09GgDCqUugFtnvWXj/ioPe/\
xPQo0fGN1yi2NInjI7uHuyZXUQVZR4zQ95lolC5oLx3LKgilKw+\
VRL56NjVYGmuwuCjDgRsF7a5rhvmuBepfOFuB8KQYrBdHyXcRZxWYb/\
qskYsXMwSkP6cqxLbK7Jlw2+\
iRVSwK6p1Ij3EXNmqblRjxdzfnP4ra51SE3uDIHB2J3bMiucIQdG9c/\
MqUI7xDoyhnwgGQ4NnQB1VFvhdVNg5231pBsOAGkFU5gWhZ0ZV3GTf4F7Wq3wQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->1516638303,ExpressionUUID->"e30a0c55-65ce-4f09-9e8e-5ef67961162f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQJlk7sZPIQShIwKlBgDistbc97AErnsS7lhxiuSMixGHpzNTYjXu6R109yc\
4+BhceAIkLB16AE2d4AK6IGz/PQHXbM5lEu4JDDntYX9zTXfNV1ffVVNfhTp+3uSsV8K3TwuWF6/\
PtaAHxEpL0DWxNJNJOe+wgw3Rj9ZxuYmtWKKDnezNz5R/9Nv/\
o3KjUioxNhJ4XYg4MS6QXWWx0KueFFU7SagM7M3E1NM8A6dXdM8hyJRzQRtpaI7EjibEyWFjA8wkPK\
NENkDa2IlCKwLbpxSPhRLqFnRF5D0Cb9XHnDJ65cL69Bv9xI1oYg8DcQiIzucdjMmWlKSzLRazAsUR\
aiJ0qWWIAmdAlMynZA0uNUuZK6vmjnd+//\
YlFFih0ZDlYJGzQjikTC8UwXkBCHCXMCVxiMD4xiUwlWZ9PKmaMZaAvpTU68+\
8iOEfYt8w977eTvYedoNoq2a0zMV/\
x1x0Wzhm9eqhNePvDqXAL3uNldmEUziCdSL2shMQDvjBX3FnyHS2EFbGjfLB1ZguobXZGRruRyKQq+\
T4nrmJgXGhkU2tqo+5QIASvPtijUpN9TMHujY6nVl4SV1+\
NUzraiwprKePPhSqAd09MgXB6CbaupdaN+Lred2SUsT7x2eNhWNvnD3/49PzLPwf2E/H930+/+\
G1g3/mYt7/75udBVaq3cHZW7HgG+\
ZsrqR9ZSB8EdmqrHpWal3IqksSr0R4JhT6ht0Kch3kOxJGOgVjnHe/gidDJnZHJN+/\
fheTdo1DDxpavZW/IftCQvWbolZH+\
6X3fElDSqbChC4w1OqEUNSGKyLcqai6rFNCbJpCDTkDH1ChudCQ6k1luLJlpo/\
t5caFkfBd11ZsBhqhPL74m9l4XV6O43m0U102aXpkKG/\
jb2AewumPEkmplRPePO9YJy8KVE4crFtflRw58zS0oCkW++N6JsTDWqfEXa4MFES/\
n1hQU6wZ2H1tRTuASlE3D759BbbkXLukTYedSY3TQiNrvVzo3EH79xf/+\
ukbozbwbYmAmEllg1L7WdJzR2MHlc6hEJ6gtThcyJGucPwbYPSycySjJ+CXJdI+AVBQXtLzJbMd/\
OyRMPQrxB5zEJbYqnP8cXCqoXQ+\
1ZqEOdv0fDaNhvd6P9n1xPzEqiQyNSuCABrPe8SWVeYD0QPy9iD7vJY0nlkS0wCTFYrNwzj8YayU1V\
CGeUscAu6raavjib78w2j7vUM3QcONKvttIjWbE0zA3YTWy/a+8SB+\
9ACsdJI1lnWn71uaK8mNqe0GK9ZfyApFundQq8febMb8kw2367otMY6Ms+\
rwX6j635CBQ2D3UJS8uaD7r892oQDIcaxqW166vN/2cjK3PjKa9vaoFnJU5jdfT0Bv+BeV+FzU="},
 
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->1656552278,ExpressionUUID->"f699c6da-ef40-4156-9eac-bad7c74bad9c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
TSa9cCoXwY1DeIVO4v6QmZR0osz0imKvEk1lyaOV2pon4OHgLTgyPANrJ3ZCCgy+\
eLUrffvzfdLoZMib3OcaeGsWfBb8kLejNcT3kMgX2JgqJE9z4iFFebRZy2NszIMGWr+\
c28diWbj5mzurpRMpmwqzCmIFbBmU9kNlGObp0uoCoTMXj2P7BEjHegtIMy08kEM2tihnFwpjbTE4w\
Lspz5FS8+3xJjYi0Jpg2nTkQnghW9i5opwlxPEmzL8cRWtrEZhfK2Q288oapiTLbXAsE7EGzxLlIPY\
6Z6lNlFSALAGpjCr20hn5rHaGIV4zgQRaQFNgU9snZh2zfg2OfB6cEZrFlqwnj+95/\
8Y6mBhpF7SuBocnYxHfr5wNJqFeutdO5FN4AO1k+f08r3f2y+ZuhFspg9GrHULpL4n7HeHb1+\
L7sUMYzIs0yqzmIlEBo2Yd6U5SIomrz1BRSFAtHgsNyRbn+zl2R8HbVHgV/\
6WZ7gXQQMWSzMbCBagDnYKMhVjVwuHvOM2cBlzh/IPqCqRXgGz7r8vc/qNxNK7t0+iU8vQ/\
WJ1ElmQFHkjAg8sHoYMokpbSOIu0iu+ZJM5SKoIoIzMt4/\
ztxGhloCpuloEBNw7eW1MJlZ8e1DnknVtnM3A+5729dugWzUrdYSXs/+\
qIODGkJOUh2TPrHpsHzs2YLxO1GX/zSmiEPxFzEKmZ4a/\
3a37WWzuyOqQG90Qw5INJIfPMEXQ5tu7I5DwsEeih6EUBaePE0EOyTbpzFm8INj5aQ77+\
HJBuYwyLPKOn57a8lL8AfK6hNQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->1696136638,ExpressionUUID->"66f216db-98b2-4f59-92d2-9dfd49b6d6b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpkiZqJeCEBLI4k75ClWxaiNSSKo7E2V3PJla89uKxmy7vw9vAW3BEPA\
Ozm91NKAWxlx3PeL75+\
zyj4yFvc59r4Eez4LPgh7wTrSBeg0yeYOtKIWnaUw8pJgfbc3KIrXnQQOenc7spjoWaP78RsQbPJGR\
gJJhYQeHTnYvN2N6TfIj9BaSZFh5IkbQqv1cThbG2GBzgFmKyj9DGVgRaE1KHvCbCi+\
QIu5dOpCXK4dbMvxxEK2sRmF8pZDbzyhqmEpbb4FhWZaYcxF7nTBn0Qmu651jIJCWETJicCSlV4Sh0\
5YJnbJsSEq7wTDgg51gHCZJtlF+\
RGthHqxPKh2GO1CgmLTPWMwefAgVkguLWBZ7xwbV1MDWJXcB900o8Hot4vXQ2GEmF9t45kV/\
BHWiXlN/P8+bmoKz8WrglFRG92CGU+nKUvyN8+1p8P3YIJ/\
MijDLLuZAqYNRuLL1pKpbA1Weoh0pQRzwWGmSF8/\
0ce6PgbSq8iv9STG8C1DFxS2Jr4QI0hm4xqYVYNlTibzkNhBpe4/\
ybCjVOv8CpWtBkWv2jcTRu5NPolEIN3lstI0vMAw/\
E6pOLO6GDKOKW1HkZaRWvWUJkSG05YBLT0s7fTI1WBur8ZpQNuHHw3pqay/zZn6kOeffG2Qycz3l/\
ryh6XbOSmljT/7+KosmYFTjlQe6JTZntB8ptsy+Iy+\
UQ2pdCIzw2ngeWZj789X7Oj5XXiawOqcE9Ngz5ydR4cJkj9LJ5vZHJebhFoB3SjwLSxamhHVPF3SmL\
9YKtD9aQbjAHpDcbwyLPaCttg/8CfOuqyQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->1270544588,ExpressionUUID->"645240f6-f284-486e-a833-21a35b9bfda0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCMgIXgd0cXARJQaRL4SKEeBJtAlIocIgEQYpkdTdHLri3e9jZk3\
x+DDd+AANu8gqpXNsP4DZw559nyOwd70QxP0gRNtydmZ355pufO9ofQBtcoRB2p7nLcjeAvXCJ0Qrj\
5DNqnUpiSXviMKVkp7ont6g1yxXy/\
fbMXPmrF8OdKQSR0Ylc5FY4yacd6szE1cg8QWKrgzmmmRIOWZC01o/\
uHUuKlKHcIk0hvPG8Ta0QlWI3e/\
zkWDiR7FJnbEVaurjVqDtzfOJKfY3FhUtjCAO3lBSYzLsLZBIUJrdBJiKFLoilxcipIogNUiB0EZiE\
7TFIjFLmSurFw/0/nv8enJlYJpJNOD1C51hBlUKs1g9zjsSPPUHbgG9Tp6S3Arw7F4sq++\
4od87o6tKYwB0oiLkOLcaonRQK+lCkF0bRDJNTqVc1+\
XQXluYKnGU44VJYETm0RK25zbGx2R8b7cYilaqAQ+DcIwxAaArOrWmMuiNBWALwuI8LzfYR4+\
6NT86tvOR6/TpJWNULc2sZ1A9C5QjdM8NZTy/RNpy3buDr+tihUcZ6DmaPRuXZPv32t+9+/\
Pn90H4lXn785ae3Q/vFl9B+8ezVsG6vLT/7FVGeTLhfle6hxeSbbaKaB31uIseycxHHvlbtsVDkc/\
u8hHyUZch06Qi5FtDxsR4LHf9vvELvzFic6MT4ptxIQ0SrhTU5h9qh7iMrilO8RGWT8vdp2Fj2ygY/\
E3YhNYV3N4J6eV2oDQ9vXvvfh2sP/ZkPwwnMRCxzCtvXRZmkYoEgn2JdNXa1C5FQGK/\
9vBtS9yh3JuUZjP4hme4xchnEBR9vEtPx7c+8NrsCvgYeMp6+2s+/jHvt5MA7WeffwFz/\
h6Nw1JwPw0Pfl4+\
NikPDqwUd8s7qn1xyh5YuvSO4FyoZrXiqbZAyiEAyCpuWengw0UpqrMFNM9Roq4arlxUcbuEcQIfLn\
KF1BRxspMOLc1ouGqqX23/KiGuil2ilw3jj2OTY3hJWNJ/EsqJ/3dx/U5gtTVMZuL+J+S+\
57fGY5qmmjSYYQH/\
CE2Uzy65L2rpHuoD8grfhAA7CnNhwovnbsQ56LfSfDWp9bzTLejOkclTmRcZfm/NylP8EK/RQTg==\
"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->1612988395,ExpressionUUID->"9ee42fa7-e3e3-41c3-bef0-fe5a7d34c432"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[
           "LocalSystemInteractions", {False, "LocalSystemInteractions"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVU1vKzUUpa9Jm7RRitCT+NpYDwmxoEJsWLwFUTNN+iKlr9E4BSEW4MzcSax47JGvJ+\
m8JUuWbPgBSGz4C6xYww9gi9jx8Ru4nkmmaUWfWJBNPPb18bnnHl+\
fHZ3yJneFAn5wlbssd6f8MFhAtIQ42cPGWKLjr49NJBQv0EE60g6siJw0GmnriKZwG5g8wkaYK6Dv/\
dCs/We5/81yP8MSgMkdBIpshWLdNzeAFH48hTRTwgFNJI3N7ifnEiNlMLeADxBJmtgIQCmCO6St58K\
J5ABbQyvSEupRvdyawo0r1/c38F/\
vBQtjEJhbSGQm84BMJqwwuWWZiBQ4FksLkVMFiw0gE7pgJqF4YIlRyqylnj89+\
u3bH9ngBqLcUQhf0HHMWBZeP2eRSVOhYyxDrpGWiQNYTZLASqhcOGORraRgXsj7eexjq6xPlcfBVMw\
rcdr93Dmjq486hL862GAPKmjgXV6kM6MwhGQs9XJbJHzMF2bNnSX2wUJ4KcEiNqY2hzrmaGi0G4pUq\
oKfcFIkAsaFRjaxpg5q9wVCScDzPi80xUfEuzMcTKxcEYcvRwktdYLcWtDuEyIGvH1pcoSrFdjaJ40\
7/Nr+7MAoY70G4UW/HNsXH/3w8aef/9Gz74nv//\
ris1979o13efO7b37q1X69i3NUCeXF5G9XBX1qIfngvlD1hm5ABxPPiYhjEgebQ6HQ5/\
ZaSfksy4Dk0hFQLXjLn/WMyvu/6cq/2iudsjU4srV0i1vPKDmzwkqo/\
BSCiNE7bW2ld54zDJ0FkZaTaOgiuypyLHIdLSgkI1JKgWJLAgSF7zPMZ5ux33QxuUbeuTQWRjox/\
sLsaCmi5dyaXPvu0L6wohjDCpRNyt/fvTqyU16+S2HnUmPweCdzP791yw7CLz/735+\
3CN3QH0MqhiKWOQbNW2eMUjEHLl/A1joEdcCpNUC8wfm9h+2z3JlUOBk9kEz7HMgLYkbDu9Vp+\
TtIxa0bG/+QQ9lptjj/oSVtwY492EaHmu7mP+gH/Xp8Epz4S/\
LMqDgw1AaBLPkKdjf2JEwPxN8KlIyW1HgsS4kMdVMapuU6fzLSSmrYkrzKQIOt3L9trC/\
p5S3yXgbWFfx4Jz16Dq6yKqPG3S7/0syoRnoB3pLxzrDOtXlvspJ9EMuqHJsb9y+FurdSV4q/\
s8v5wRwPqYfkqcYdc5zybhmTWTqilLF9pguezxDoLTwOcqTAkaaXcXP47aR/+\
7Dx3Gia64SA5T2eFhm9pZOyz/wDaCmntg=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->1809878684,ExpressionUUID->"cf22e92b-d31c-4880-b9c9-a83d8aa1348d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUhpH0Z606kLjiBov78gpTm24j0kanuC/gxietVceO/NMuPCO8BZeIZ+\
AkTdIyQMI3OT4/3/n7nNnllIbUlRJob+ld4d2U9qMtpDvg2Qsb3AuLmjB2kNvs5fGeXdgg8RLw/\
irRh+paqWm4dFswqB0k7DDXT2DRNFpBXkjmABVZ0Hi+\
XgibSm29AXsMCm0QgZQY3EfHBXMs69nBrWF5HXhxNFM745wwzoUTWjFJHDw5wixRABw4EYowlA8kRW\
eyBqkPxGnCdepzUOipyvNofqqCuC1DuwGitCMSi0Q4ttZ7+EjHD9pArDK9wmxt8/\
ZyztLdxmivOFY9vDOsvIc9SJPV5+\
d15zmu23hgZiOUjd6eEGp9PfzfEb59rc6PE8IkqdIItUkYF95GYWcZxjnbABVfoF0DQvVoyiTwBuf7\
tR3OvNM5cyL9RzPDBUhwbI1isDIeOsOgGvuKbbrl0/cU0mp+Lc4fq2xDR1Vo03VXXPON5tG8k6+\
iK0Qff9KSRxrJAg6QepObPZOeVanq1b+\
LpEh3JNOG5Jgad41iXtvph1hJoaAtaVmAAjP3zmnV0q9h55QOHo0uwLiSjs5KR9YviwrLtiT9rz5w/\
gpRBbLlTOw6C58pjyO9QQLWow5vmbTwtyU8s3RboG/Oa2466kda+\
lzZszVP6SRWDkxhELAe0XCmSurXFvA5jyJv0TFW+NybVCdl9dJt8Fkr1I0TsNqbFFZlgT+\
IR5Zigb8A9Fp9HQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->1672665880,ExpressionUUID->"ed69b425-a188-4b99-870e-6f5b9e217e02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "02966ea7-f762-4e5a-b2e1-1a4eb22a6dbb"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"25ad1df8-02e1-4619-aeff-7e38634a4f16"],

Cell[TextData[{
 "I'm a Lexical Programmer at Wolfram|Alpha and began developing this \
functionality for a particular work task. I needed to look at adjectives that \
precede certain phrases, so I gathered article text from Wikipedia of \
relevant domains, then searched for the desired lexical sequences. I \
initially tried using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bf81e2c5-f424-4833-bfca-6f01b8362391"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dc40c040-0872-49de-be03-e1737ca85c6d"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5a9d191e-4c22-44a3-a15f-58b85b33e4dc"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8b8828ba-e293-4beb-90ea-f0109e62ebe4"],
 " for example), but it was slow. So I designed some lexical tokens I could \
use in a StringExpression to perform lexical searches with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c429e007-263f-4c25-8d44-f1698eec65ed"],
 ".\n\nAlso, thanks to Swastik Banerjee for helping improve SearchIndexObject \
support."
}], "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250094577227*^9, 3.867250207482535*^9}, {
   3.867778469328055*^9, 3.86777850437639*^9}, {3.8677785407651854`*^9, 
   3.86777856696503*^9}, 3.88293650496817*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"d7bc51f5-c590-4090-890d-16843d8efdea"],

Cell[BoxData[
 TagBox[
  FrameBox[
   TagBox[GridBox[{
      {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[ToBoxes[
             ResourceSystemClient`Private`$submitProgressContent, 
              StandardForm],
             ImageSizeCache->{249., {3., 9.}}],
            StripOnInput->False,
            FontFamily->"Roboto",
            FontSize->10,
            FontColor->RGBColor[0.5, 0.5, 0.5]]}
         },
         AutoDelete->False,
         FrameStyle->Directive[1, 
           RGBColor[0, 0, 0, 0]],
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
         GridBoxBackground->{"Columns" -> {{None}}},
         GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxItemSize->{"Columns" -> {{24}}, "Rows" -> {{All}}},
         GridBoxSpacings->{"Columns" -> {0, {0}, 0}, "Rows" -> {0.6, 0.6}}],
        "Grid"]}
     },
     AutoDelete->False,
     FrameStyle->Directive[
       RGBColor[1, 0, 0], 
       Dashing[{0, Small}]],
     GridBoxAlignment->{"Rows" -> {{Top}}},
     GridBoxFrame->{"Columns" -> None, "Rows" -> None},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{0.3}}}],
    "Grid"],
   Background->RGBColor[0.9529411764705882, 0.9803921568627451, 1.],
   FrameMargins->{{5, 5}, {1, 2}},
   FrameStyle->Directive[1, 
     RGBColor[0.788235294117647, 0.8509803921568627, 0.8980392156862745]],
   RoundingRadius->3,
   StripOnInput->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 TaggingRules->{},
 CellChangeTimes->{3.882976156084852*^9},
 CellLabel->"During evaluation of In[8]:=",
 CellID->877671757,ExpressionUUID->"50d98849-fce7-4930-b5e9-b31ac965966d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1013, 799},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915223365801125`16.345331533016925*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915223365801125`16.345331533016925*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915223365801125`16.345331533016925*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.915223365801125`16.345331533016925*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Notebook converted to template version 2023.03.03\"", 
           LineBreakWithin -> Automatic, LineIndent -> 0, StripOnInput -> 
           False], ItemSize -> Fit, StripOnInput -> False], "\"\"", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "0d34085b-c1de-409e-8d59-b5193e094709"]]]]]], Appearance -> 
           None, BoxID -> "0d34085b-c1de-409e-8d59-b5193e094709", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915989892115103`16.345416551299145*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915989892115103`16.345416551299145*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.915989892115103`16.345416551299145*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.915989892115103`16.345416551299145*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 1 suggestion\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "a51e6648-2508-4a9c-ab45-1ecdef87aeb3"]]]]]], Appearance -> 
           None, BoxID -> "a51e6648-2508-4a9c-ab45-1ecdef87aeb3", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.91598991729035`16.345416554091155*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "779fce3e-bb5b-4df3-8a52-280f2011baf7"]]]]]], Appearance -> 
                   None, BoxID -> "779fce3e-bb5b-4df3-8a52-280f2011baf7", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.91598991729035`16.345416554091155*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "779fce3e-bb5b-4df3-8a52-280f2011baf7"]]]]]], Appearance -> 
                   None, BoxID -> "779fce3e-bb5b-4df3-8a52-280f2011baf7", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.400603`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.400603`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/Abstractions.wl"], "Hash" -> 
                    "c0d86322add3de77283d7694b33592f37990a9b6b1317e0bee7d0f9cd\
0f3a951"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "8eb8ab72b7c4d098f48a7c55577a9d84a6fd5afd36c7b24719d8ee4fe\
5364064"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "aa54125b6a6267e12a1a9d8b6ddcf50b48410a7ceffb377e315445069\
d0a341c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c0d86322add3de77283d7694b33592f37990a9b6b1317e0bee7d0f9cd\
0f3a951", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8eb8ab72b7c4d098f48a7c55577a9d84a6fd5afd36c7b24719d8ee4fe\
5364064", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "aa54125b6a6267e12a1a9d8b6ddcf50b48410a7ceffb377e315445069\
d0a341c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["29 total \:203a ", ""], 
                    Style[
                    Superscript["29 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002052`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002052`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfc1zHEl2H0F8EeD3kDPaHWssCIYcsrwg6yvrY2MtEmwSQ1r8w\
LAwM7JWimVWfgBlNrpaVdUgMQ5HyBEK3xQKe32xQgf9Ab47QhdH2FdHOHySjvbuweGL9+SwI3wY/\
7Kquruqu0F2dXM4bAB9QKOrsvK9zPfe772XmZUp55ILz+\
mre9FrkcjF5PqjViridixSmoZRC5flXLL0PFIF5EKy8DhMUnk+Wdqle7jiL/sdxkSS+\
Bf9zsEBjY8eCsr9uZ/K+eTa/aMWPQjZk4h3mkI9fr73+\
Lwv0uTK7lFbJCJ9EbVFa2MjWdymzUR0797s3hUHgeA+2BEbG/7ic9R/\
hDIXd8VBu4mLOYd5xfPJ1R3aEr5oCpZGcZXmwnOw0SWymCx/Hoe8+\
nD3e1lVom4tJSv3Omna7YbVokV5vZ9uP9iJw0Ow8GI7jlrpgxZ/LpKoEzPhr2w/uBemB7Sd+\
NeKjsFDz9BOESvmFSv3RZMeCZ5cyUlsd1pM9fhxvbOwG3dErxmrW+22oDFtofMXnkat/\
p2VezQRfnrUFPLcQNtXHhzSZoeiZ5KVrU4aHUDErHd36YlI9yPur+\
7EAn2bhoelSrea4V7rQLTSbocmSw2hNKX73S/66IDuCT/\
8RqDHlose6z1Vobu4Gx6IJD6XfS7d7V3Bg5canThGxV+BYeFf3kb/\
Nmj7oQj39hULizvRK9CcS25uBUnU7KSiXD65/ITutUIZskyHG99C3Be2Y3qQCXU+uZB1j1LfxfVf/\
OXP11Hhyv0whs6oNuP+88/vNaJmFMe/ln3+5k58I/v88k78+9nnb+80fthr8SU/\
jcP2s9ajVruT9rU4v3mlAdbB2A7lPGztDd5ezdjK+BmQ46XszhMa74WtpKzG6rtxrnFu8P/\
jeVnqK3u3nrned9e25wdte9DIikf9q+s7lDVFuhWzffTXur+w/\
uO1dX8V9dwXknaaqf9xofOPUnGw1WpFOZb487/6s78qYccfr9/+MoEG3ZY0/\
CZqfUMPaOv2fXEomlD5+PZj8RoCbDagzsnt7azIH2RFKjeCTtjk5ds/+1n5/qZ+\
i9zSbrUzjtd7KKUYm6YPLq7volFNpa0Ttx/UKnUX4OqvkFuWptma+cKfX0/W/eVEsKjFE39l3c//W/\
cvfNGhrTRMj/qK5B+1Uvp6O4oPknlAbrWp3VLXCj0YMuduCX8Zit85aCWl3sktd+\
GxkP1iC2jtcJkRqLKqLgHqRCoGdf9qwYziMMOLsXkZpjM+\
Q12qPnRCGeTYVBvn6xMrgfHCABjf9PejV8paW3uNfSA5U2A62EUXn3bg/\
WKgwMuhe1fgfYArgK0wUSg335dyVnWmDzmyDD76HavB/G7U/\
nAV4JqSSTNsiZ0oCQuPmwt4rjHXK5W72+8lTGg0o2TiMGHQv5zFCWdxwgRxwtJZnHAa44QpmvrJ+\
j3VxbnMcyuJ4qPJWz2UdfoL2yFwHrnl6OzP5+9BT9b9S4qLrXivo1DOn/ujd9aB1wp7eUIBSSJJJ++\
6xZLqdP9bGpGPr1Tz8U3lSvyjBHW/\
eAoGBFdo8AJcvQRSd53YRpKn4lsfbfoXH7XgQWnzPk3p1tymv6j6JpGf5fVund/\
MZaZ6JZPdJ78n4pZo3gYYpyriAe/JrVdNFHtIk33/\
LtO4a5uGAQw0uXAcwzW5Y3tWYJrEM6TpeJ5GvcAOdFN3hBYI4XBNegx/TOoR/\
XiKZRmWKboicGngGIHDLK55rrRc6jBCiONQj7sWtSUnVHLTZk5gWI6Oi0JYUhDTtjTbGqb4gyrFHZr\
C67XKNHlgSO4ZprQ1Sws81R7mOVpgGqZnuS7VbEqIp4GW4TLb8ww9CFxHcssjgaNpxjDNqwXNnWaUV\
ppn2ngErdM1jehcWK7gzHUlp4TpFvqVOQYzDBIYGhEOk67FGeUasbXAJcyS5jCp6wUpn0KDq33pGZZ\
m6pqUzBWuw3VLEJdrPPBcl7tUWJpONOJoXFDd9aRlGwF1HeoI15LSZYINE7tREPsyDZtQtCo5A/\
xSU3AuPdd2uHBNYhlSMMchFiWSBIQGJHA1xybccSxX0zXONDewNW4JcxS5mwU5BAchzyyr0jzLkoZm\
mhY1OcThOsxDKwLPMDzp2dwhjDjcNQ3XBRXuBh5kq1OhuUISYuj2ML1Pd2FlSVdT4JE7LO3EAkTTvk\
kIAUUkmm5pDhHUQecSqWmBlEK30G7pSd2lhEKHbOGYGqWGLmA/\
GjU4OiUYYRIVql2L6FM0bLSCMWZQZliScUvX0CSI1oVCSj3QPeZChtRiHGZjuSywDUMQyhw30KkcoZ\
43c4qVbu3T04VjSItKapmEm0QQw1ayFJbHKKzQNaijSc2F/\
YEZm6E7bJigNHSIHwIZYfQf5fQK06u2jqIdtglb45oloQm67kBvPM0wLSE9YUppWWbgmpS7jOuEQcV\
MV6M20ylnjhghxRs5tbKO9smZLveAYUzqhmHolm07OhFS9wKwYMtAQmmoQRxqmK5jWcRgLLDQ+\
7bULMcU3ojG/eh+xDLfk/Xk7QetvWaY7N/+\
vBNyMSDVVtDjw7E5cXTmGZowbMo9MERNpqTnmR4kTQxPIYEDS7FtPQB/ROhAOQ/25TFtRLN/\
PJqP50IKBNhM7MBnJLf9o4Mgaia370WdFt+\
NXopWhSvNkTY029agWBLfum7CgimjRhAQLoCHlAToJqETAl13AweqbTPXFKZDzBHw9KAWVw1wlRYu9\
bHKFBj6rcygYQCo0TEB0QNNaB43pW6iHwU3FLbZtqlzzyISctOVF9IDKIxmavgB4OUjrO8f1WLwwes\
2bfGuDykxBhiQXHGAnvIsQzhC16UHndal4WjMgPcIAEPEEgKWHJgc3ZqZLRRRuGKEXv2kFmPH6ZnQG\
bwlBcjDVrhumI5lOEwDzUCanLgGD3QUMUxqQeECG9hmOEARmDNErzvTSrTg636YIORTwyLKJVZUznB\
sR/MsHQofAHJ0i1rc1S0uXZ26wiEQuOfAE7vKJ8KvcEQbjuFxXZoBIHdaQygYfELbZa4oJeCIoD9sw\
4YsDaqr8COwOWeSaMAEoDACEyFlYDqOMHUCtNBsSJyalj7Cl/\
3uJFyNUDR0ErEDYeiuawB3zUAXFkBCwJnCG0jYhK6DX3x5YF1QeFa4YfDrCekgnBjm7O4knPWdY4k3\
GBoV0oawNAKkMEzDNriNuAAwFwhbwo8ELEDMYcF8EUTBkxCUJrgkAPojQG2iXisApMwZsb1AuFJXIZ\
sLN02A8rpuwEW63DRND04UISATATyMpQNFlNEE0hWwFs2y3Wlx41lblULiOYi4FrRap5qr4lmOuAt+\
QBPcgus2HWbqiOA8BKRcBy+mwTSE3UquFkGMLQM3GKH+\
bi3GfMDZq5DtV1SMSAGE0hFkI77hgQmXy3TIC31EEPPbCDw0TuGWENh5ABJdqvjcxTXOET9Oy9OueJ\
2q1KfMkwsvBFzSmCVcTzBPIikB6CP6Bi82sjENFmAGgQVvThGuGHAFlqsj1LR0Cv86rdrvRsebpEaJ\
Bs9tmwQZA+IVEwEGjNCAUSJ9gUtQgSqC94AygIRnwYsa0oOxuIQ6nsOHefNq8fZ1FA+\
7ckRUiAahUJphoX+\
ki0xNhyPSEUYZCj8dUxIDioVgyiGBCnpMDhFbpkA2REc4pHrAv1H2SL6ID0NW9UyGQiPAE0VYaemuI\
ZHrWUg/kI05JtDNhIYFCD4NYSLtky6YQ6rpmVACGxHSCM/\
kjGZwt5NGMZLiqpN8dqh4Eq8qvsgkCH88BOuCImZwPHgiwgk3EMAT/\
IPgy4SX17mN1ElKAl9gAiyEZ9qA4sDa9K9sNZvRqwdqhjwbNcxGrTf9S0Ve7u/Tthop/\
HulzL5I530WtcULNVsv4qzY1vxmd6wimUe12R+0de24Z39PHN0H8h2pYfMRj+\
addcwt1f7GnFxIfuO42h+HB2EqOBg4lvl8cqDbxt96A5/56HBWcC75zeMKbqXRQVYonstGmh/\
ffYcMjlXTsX39PHqVC6mkhG9vR+MnhaqN1+qs0X/yL+6i9LV8AE/wRy0ZQpeUkM/\
3Bud7gmzcHF22PxOkCs0dU6iYdugPIykW1cKREqtbSRIxPH+\
1fA0cJ0v51Bl4ul669VU26jhwMY8deuNsufHm/dKfDh8i0O3m4yg3PoNu+\
wtPREq3zm36KxDRLo33RNq4CQPMRV9cWN30F89M8cwUZ8AUF2bRBhEj7febcF0lf9mcKUSVZfiq0M3\
e1VwV8huQ4SU1eF0ueVVdGCi04kdxqsgkfTpX1LViOjBqlW88DDkXLTVGnyDPSxaedprNTX/\
1yzanqVBNacwl2niD7VEnbXfSR/c3Nrqj9D8a78E2mMVD56pD/GM+\
fLgTJRsb2Wx4ncf2J3tsDxfB6nxyuTJDUZrLzGrTx6oNoSFgNL+nZmHui3YzOpKLyWI+\
172cLGS3Phmazl/IJnDwrab18b3an2BRE79Pok4iIkRxauL385i290OWDE+\
d92a1G0tvWHEAxnxEhoLHZvb5T/+\
hUmvfJFZw7eixmsMqSv7yjpou34maR3uop7SopPjOZ7wzhLjwnOZZYOPb7Hc+\
ad749s2lxqlojKfHovXuKhqvadOKCBfH08INv4n8Qy3byVYf3BrroWYEeg+\
jJp8AHIYce7IAZ5v4F7qhQZ4a+\
IuZGo9ahDG4ckBlOcCtUStALmVPHbfkYDFfiZT9v9BY7M883wP7e7EaCK4qtsw+/+\
vOm1aRZMuOkgtdKb3VXC89OMTjD2mLN7M1J1ezdvcXw1QsuvDj5wuM6P0suMkWlahlHpUlH//\
6X6nPf70T69nnv9+J/0n2+Z93/AuPw9ZLRXtgDU/P/V3KSDegIy/hjxRenn8k0SnOWHJn+\
4K9zJZpqynUQ3jwmlO38rxcGlPHOpnPylZf1yRSz1HV80z1HFJNP1TbXL8fA+\
8G9TOFSkXgV6RHecpzhkxvQqYiRO4iUzdiPkOmM2T6cJGpGFOYLWTKxmRPODKNlerUQ6hizVcPonq/\
zzDqDKM+FIzqL8ucR0JU6OiHjVAjWc6GmQtwyhdtj49OvaHUDxqkzr8RnN6ykPRDluf8MSpY/\
C5GRLNBw7qSbfzkXYv0wuArOSMJHC+o6ZfyzrIos0hiMlH2Rv6/\
B4l2Y6LLfpu2tuPoYCuIDuta5MCy0tkT4/mTapHTLnWfZVGeRos89kWE2RPk/\
Em1yWlfBZllUZ5Gmxx8UWf25LdwUk1x2lelZlmUp9EUh19kmz0JLp5UY5z2VcJZFuVpNMZRL3rOngy\
XTqo5Tvuq7SyL8jSa48gXoWdPiMsn1R6nfRV9lkV5Gu3xDRsFzJ4oL5xUq5x2q4ZZFuVptMpjNtKYP\
TGunFSLnHYrk1kW5Wm0yJEbzcyeEFdPqj1Ou9XPLIvyNNrjR8MbMc2eCC+\
eVGucdiusWRblabTGURuVzZ4ML51Uc5x2q7hZFuVpNMdaG/\
nNnnAvn1Q7nXYrxVkW5Wm00yk2upw9UV85sVY75VajsyzK02i172Yj2NmT+\
tWTasDTbsU7y6I8jQY83UbJsyftayfVcKfdqnqWRXkaDXeqjcRnT9jXT6rdTruV+yyL8jTa7bvZaH/\
2pP7RSTXgaY86mGVRnkYDnuIgitkT9Y2TarXTHgUyy6I8jVY75UEtsyfumyfVcqc9KmeWRXmyLHehE\
PT5d7FDGn5c9DsqSmZx2E79y4a3lqpTYdd+8Sd/vearM3mLvanfXvBsT7WzPdXGMPD3Agmj91Q7/\
yGj2Og91d4EW5MhT+ls9YFHKga7k33+253hfxoXenVdzA4Gf50+Ea2OXOzXon5nAPeZvx+\
9WtPXnkSxWHuOf2m6trsfJmvZJmxo6+X8bb4HrwXrpArcxpMO5f+\
0k6TZiRhJ9zzwM4t7Z8roL0BW6gj7C9udFisci1FXMveOlFL7zShVZ7/\
I8mEfPQ26rFTlwSFtdmgaxVX311ejv5upEempUXKmR6dVjxZr6lGygnAiOzknHqFS+\
tq2eCXiM2g6zSr17TTQ9BsFNPX06AybTq0i/b+6itSLycbaezYreuyGtn/45//xf//2H/7qTnKpmy+\
qGkaFfaWDeYajuLlkuTjpCPc/akQHbUXqwet2LBI1lZK443U069e5G4d7e4DfpWTx6/\
2QqTMClr9sJfRAfDFmh280aZI+K0T3XqLx/tlJi37G6MTNTn4yfhMbw0+TiZ7Od4cfLUFZnFk1HV+\
Tq0FBfrKGKYHcg2Bf9vKletXtNaOANn0WR80mgKlnbt8h9CkaX4fpvlypcjymEqP96nC3jTHLb3Qf6\
JIZz8K6T6nCG3WssvtQPXJh8lhQmW8WvpH8uB65R6WH65Hdz57Jj8DLDq3bykadlp7QlO3XAqNSsy9\
tNdV4NwD9sLIJevW8hrGdS5nHL+oKvfbQVt57t8dze81mv+\
tqPvKBtaR1VLsl3UfeV0vMsZ5Kyuc8qqHw8XCZ5UeOVg6JrIsvczUbVj6osvazgwda1sLQfXoo1MGZ\
Kq6cfxqlWdBHw2YnFl+MPY7MUUEi0uI4YFXdhIIdLxgJk+7peD2u4fq2YyHqK2B23J6aT/\
jHUdjqTZfMZ8Po+PssLihM2J21ja5+\
FyTLoLOvznMt5V7okNX8rFXVLn8xy8TkhX6Uufjgjzu0OYkHzMdd8/mPySsp+YJ5/DtdZRVv4i/\
lv4pTgM4NZ5lq0sKuMWlROhf2LMn8Hqcu6oaF/lIsDooZ/\
bcOWyiDX5jG4Mf1lkrWDw7a6dF37S0nQNM87Ksd80wSYo4FWygrzmDrDLZOF2zNU87rjt7n8JVZb33\
gqpfkVZR4KMmrKnX/HOMJkt+aMVQ/BVuohHGlIbVJEgd/ZSthosUHoMpfUGH3aCsdj+\
FiRQRqOTPP78/YStJ9u8mVfNa70KzV+\
2Kkal16Lg5FnIi1MxU7CSpWFvP71rFk4WmUrYTra9cS6jvTq9nXq0K042tUOWLoTuKMWpn0aSNqH62\
hl0KlQmtptNZohu0gojEfVpq5MWPSNGp04li00m69Y2oOAy+K/LhJXO3wp9zyT7KWq+\
tvafW4I9a9Vk8wKPbOO2ikIlQEvwPdEn3Jh621p+LVWkM0R8zVTy748STEQDXj5/\
1IPm96Jvo3Nvu9SP6d91Dfq/Qmy9Vi5G16EDaP/Kt+1IkZwg3aStZ24qi/\
FFsVUkuxG1eqD34twr39NFncadKw1S9+PzwM1Rm31Un+1e0Y/iufYK/My//f/6M+/6N/\
0OwFv02ZUtDe8sxzjdL66d5SgHwJwKgJ/\
PmBCfzvoplXH4ctcS8W9KWauwxbxRrU0YsGzg2uKHjaOQhErFbPJoMPXlHDtEpmWVtKt7PB8fF0KMw\
H4b/oTXOX1iyMp7mJSDvtr0LxKhtzquWw4U5Gz6rnq9KzbK5eM7LsNOKdypLcGt2RHrTV5Y1keUNNa\
2RL5+s93h3OH8+fF1Mhk8yBzL9pRUK91haxY2kup2Z7x1yHBXyDuef35NzY4WP+mLpzFj6+u/\
CxpkaXjXIyTclVrVDQ+gpT14IXnnYypzIJGOZI+p0uZRk2uUlsKPm49BC8YZyI4sal0o2H/g9+\
WyHNWitaa0atPRGvKcCAZ/\
wHk1CtvlyUXNmNqXqfqHh58T0tBKqwcKNwWjn0f4WARiQlV1pjgnsjjdr3aJyR6LnCuTFd4QF9KbLg\
haMKVPD3S08VRX3E3+KF3wm6HjOAzOo5zbNXqL5P3Hyb9s/V0/\
5CprVQcSOIUgTqXTUtXitcSpZy3asGccvPRbtJmRgz/TrIXnHsvQW5sTG4xlWe/2Bf/Cog/\
5xa10hbL7PJu8prkB/wO2sQVHf//\
N8Ze154o9fW8vPjMdvuTcmMqmOS6ZdePUsjI1Okco9aLBZZQjb1mte6c+F1OrXWQsjKGsbafV+\
QmmLZ5kSiqt/C97pkfNzUU/nbrOtjxFB1RDzmGudu/Q+audYOYn+\
ON3PJkhqHEHFjdRBweiZxfJljHcikeD1iGGVg6LfytmtpwORS9sTw9dJAyvxu1B85HH7ZvzSE1Lg6Y\
rxk3EHAUa26Xvi0r2Pabov4XvRaLf8oLua/lncj/IPQbyX55H6eWb8ovrMxllbaON/\
lyl8oll4uZEpa110XdRTBdq06ililW8diFqH1Kqm9ErLg5Cu1Br8mJ4e9VfV5HQ8nqGO/WsfSbhY/\
92qpH3Xn9azc68Y4vaomCo7y2i6U4GvhvS3kuATJtjiN+\
XYUH4ybNX03kXpP5zLcn9QIz3W3wCjvklFtVbGoN/\
yme7vGQt3qW0OrjVjg6pdfQmr10r2hUd65gVvHj8hWyFxTM6mHgn9F45AGeK6HzfV1Yek+\
wvDoqMfCtftC0k4z7THpd0vMJT/oYle21wYCqLQLYnN9dPdFU7A0Y2tgWPjCAx6OvPFR/\
oxqcwGHSbF87GKxKXa2qK6/fcLS8+iVQtb+KPnSLt3LsfbirjhAYpGK/Ge+\
v8jfWa9sc3SvEzb5c5Ggncm6v7D+47V1fxV1Fm33Py6RLW2xM/+rP/urEq0hPvy5fyYXk+\
u93slpVUouDHLsL/sdhiwo6bVVxUL+3E9R6bWKOpXa01XfK1lsB4Egd4cdDAy03+zeFQcB7LlYZr/\
4HPUfDXbUXG/+9KraciYXSBRXaebSKogsJstKt6oPd7+XVSXq1hLUvQPcK7qh6hY/3X7QVcntGIJ/\
0FJCySY3/JXtB/fC9IC2E/9a0TF46BnamW9pUzHunETpJc+\
RvdOdSSgUtb9fzkAYUjLQIdt94zueS09Euh9xf3UnFuhbtZBsRKzSQ9SlhlCa0v0eFb5UXtUcjGRUi\
r0bHogk38Lo3KW7vStqnK2Yt8tQyL+c7dlD2w+zmSBVbkftM49yN7eCJGp2UlEun1x+\
QvdaoQxZpsONbyHuC1kUlqv7hax7lPourv/iL3++jgpXisUah6KyycivZZ+/uRPfyD6/vBP/\
fvb52zuNH/YDPLVYtv2s9agFWBqaTSowYYdytfRk8PYbwsly2FhW4/\
KM3NDs3EhelvrKfr6HQhOj0cr6Exg8ZDwx9vibVUBbCxSirTFkt00B1F9LclCRyAOObq2/\
Mxy9uL6rdoRSOjY5bs5X617o9op2S9MMjRgv/Pl1wPJyIpBm8wTd5ef/rfsXvujQVhqmfX+16h+\
hD16rSCaZB1BWm9rzaoX0hoywF4ktF8uWS71Teku7H4oWb5RXy4zAglV1CQAFaQxq7NWCmcH9wd7Oy\
zCd8RnqUh2cmn4r1XJqMi6xN7yKflNNDueL4xv7VO3YpSbaB6ee3zS7DJ8BNADYhGr8Jt8DKZdyVnW\
mD4Mzz+9FDSpJ6AenANe6Gw10F7D04G+uFL/lTvJ7ce6NZpRM7NwHvcKZdz/\
z7hN494tn3n12vPsUTb2+/oS+Dg86B2oPvuka3KferXz+V3/6c/Xn37wzdq+\
t78SRErng2aaBHza3H63na5TyLRnV2VaTm8Kc9g7Z2hHwPuqkLZiP4IK/cy2//\
KjFYaHxQdhSU9zz678FTW8XVFe69Nf9q11Nhy9OZfj6u1f4jwc06MMRyyfrfg/\
OPjDWbqz7L0MEEh9al/36+i78nki/jpoSXvCr/AiMPGaenMFF3bxlvnhnTC6Cyb3Jubk5Yshu/\
Sy7O8vuzrK7+tldP9MYTJxG5CWl6v1Lhb2plK85mJq9abrDn/sjFO8Nbn80bMxbq5v+Si/gROFe+\
Bf/6cN/+es//S8v7vjLRWy46V8diNe2zm36V6ouTV26Nhh5NNTFQb9fJpYM+\
OzlovCmf2OEx1TV3Rzlr9SN60PeQl29WqQDXYz0/2GN4H7T//R4qI//4t+qz+/\
cLYUP73L2Ze6ffyjO4PL6DmXonjMvcOYFzrzAzHqBiyUr3lrc9C/nv7dith8eCj+6/\
WUCRbktafhN1PqGHtDW7fvqDSswGVeOary9nRX5g6xI5UaGpuXbP/tZ+f6mfovc0m61M7rH+p///\
O9/9985f/Hx3ZL/uZkxnfObj4VFcbYxbHaKTPAeOIe7y6g/oa1Qinwktph/35rbLE4TkJ/\
lHb91fjM/4KbH4if5+3+3t4Ikzc7JUG8wvmpuFoen3GUad23TMCjnJheOY7gmd2zPCkyTeIY0Hc/\
TqBfYgW7qjtACIRyuSU+ddWxSj+\
jHU6ycsVmi6IrApYFjBA6zuOa50nKpwwghjqOOnLKoLTmhkps2cwLDcnRcFMKSgpi2pdnWMMUfVCl2\
jykq0eSBIblnmNLWLC3wVHuY52iBaZie5bpUsykhngZahstszzP0IHAdyS2PBI6mGcM0rxY01QGEle\
aZNh5B63RNIzoXlis4c13JKWG6hX5ljsEMgwTq9DuHSdfijHKN2FrgEmZJc5jU9YKUT1WsUCHmGZZm\
6pqUzBWuw3VLqFOpeeC5LnepsDSdaMTRuKC660nLNgLqOtQRriWlywQbJnajIPZlGjYBJVVyBvilpu\
Bceq7tcOGaxDKkYI5DLEokCQgNSOBqjk2441iupmucaW5ga9wS5ihyNwtywI+\
QZzFApXmWJQ3NNC1qcojDdZiHVgSeYXjSs7lDGHG4axquCyrcDTzIVqdCc4UkxNDtYXqf7sKEegdaw\
Vd1WNqJBYimfZMQAopINN3SHCKog84lUtMCKYVuod3Sk7pLCYUO2cIxNUoNXcB+\
NGpwdEowwiQqVLsW0ado2GgFY8ygzLAk45auoUkQrQuFlHqge9nRxNRiHGZjuSywDUMQyhw30KkcoZ\
43c4qVbu3T04VjSItKapmEm0QQw1ayFJbHKKzQNaijSc2F/\
YEZm6E7bJigNHSIHwIZYfQf5fR6a77L1CjaYZuwNa5ZEpqg6w70xtMM0xLSE6aUlmUGrkm5y7hOGFT\
MdDVqM51y5ogRUryRUyvraJ+\
c6XIPGMakbhiGbtm2oxMhdS8AC7YMJJSGGsShhuk6lkUMxgILvW9LzXJM4Y1o3I9GH5b2eSfkYugs4\
R4fjs2JozPP0IRhU+\
6BIWoyJT3P9CBpYngKCRxYim3rAfgjQgfKebAvj2kjml3vqMV7asH7bvRStCpcaY60odm2BsWS+\
FbH5gpGGTWCgHABPKQkQDcJnRDouhs4UG2buaYwHWKOgKd6J7hm+VERVzxWs1UM/\
VZm0DAA1OiYgOiBJjSPm1I30Y+\
CGwrbbNvUuWcRCbnpygvpARRGMzX8APDyEdY33ZnuPcamPVF8mLGpzqzu8TXticnTSvS4M3n7Kjfli\
bDTGkLlzNE+\
Kk154uUwV1Oeqdi3gClP9Bvm7O4knPWdY4k3GBoV0oawNAKkMEzDNriNuAAwFwhbwo8ELEDMYcF8EU\
TBkxCUJrgkAPojQG2iXisApMwZsb1AuFJXIZsLN02A8rpuwEW63DRND04UISATATyMpQNFlNEE0hWw\
Fs2y3Wlx41lblUJWMYi4FrRap5qr4lmOuAt+QBPcgus2HWbqiOA8BKRcBy+\
mwTSE3UquFkGMLQM3GKH+\
bi3GfMDZq5DtV1SMSAGE0hFkI77hgQmXy3TIC31EEPPbCDw0TuGWENh5ABJdqvjcxTXOET9Oy9OueJ\
2qVLTMkwsvBFzSmCVcTzBPIikB6CP6Bi+2kFSDBZhBYMGbU4QrBlyB5eoINS2dwr9Oq/\
a70fEmqVGiwXPbJkHGgHjFRIABIzRglEhf4BJUoIrgPaAMIOFZ8KKG9GAsLqGO5/\
Bh3rxavH0dxcOuHBEVokEolGZY6B/pIlPT4Yh0hFGGwk/\
HlMSAYiGYckiggh6TQ8SWKZAN0REOqR7wb5Q9ki/\
iw5BVPZOh0AjwRBFWWrprSOR6FtIPZGOOCXQzoWEBgk9DmEj7pAvmkGp6JpTARoQ0wjM5oxnc7SAtD\
+mAk3x2qHgSryq+yCQIfzwE64IiZnA8eCLCCTcQwBP8g+\
DLhJfXuY3USUoCX2ACLIRn2oDiwFLLs0uL7beSJFLvY18tX0ujg2QpHwaT55PrpVtfZeMHAxdznO0N\
mRbn0yp2e4NHIwh0++U4yo3PGnNqZPyHx66A7w0snY3Xz/R4/f8HZdCrPw=="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.91598991729035`16.345416554091155*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"]],
              LineBreakWithin -> Automatic, LineIndent -> 0], ItemSize -> 
            Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "779fce3e-bb5b-4df3-8a52-280f2011baf7"]]]]]], Appearance -> 
             None, BoxID -> "779fce3e-bb5b-4df3-8a52-280f2011baf7"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.400603`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"5.400603`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/Abstractions.wl"], "Hash" -> 
                    "c0d86322add3de77283d7694b33592f37990a9b6b1317e0bee7d0f9cd\
0f3a951"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "8eb8ab72b7c4d098f48a7c55577a9d84a6fd5afd36c7b24719d8ee4fe\
5364064"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "aa54125b6a6267e12a1a9d8b6ddcf50b48410a7ceffb377e315445069\
d0a341c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c0d86322add3de77283d7694b33592f37990a9b6b1317e0bee7d0f9cd\
0f3a951", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8eb8ab72b7c4d098f48a7c55577a9d84a6fd5afd36c7b24719d8ee4fe\
5364064", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "aa54125b6a6267e12a1a9d8b6ddcf50b48410a7ceffb377e315445069\
d0a341c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["29 total \:203a ", ""], 
                    Style[
                    Superscript["29 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002052`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.002052`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    "Indeterminate", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfc1zHEl2H0F8EeD3kDPaHWssCIYcsrwg6yvrY2MtEmwSQ1r8wLA\
wM7JWimVWfgBlNrpaVdUgMQ5HyBEK3xQKe32xQgf9Ab47QhdH2FdHOHySjvbuweGL9+SwI3wY/\
7Kquruqu0F2dXM4bAB9QKOrsvK9zPfe772XmZUp55ILz+\
mre9FrkcjF5PqjViridixSmoZRC5flXLL0PFIF5EKy8DhMUnk+Wdqle7jiL/sdxkSS+\
Bf9zsEBjY8eCsr9uZ/K+eTa/aMWPQjZk4h3mkI9fr73+\
Lwv0uTK7lFbJCJ9EbVFa2MjWdymzUR0797s3hUHgeA+2BEbG/7ic9R/\
hDIXd8VBu4mLOYd5xfPJ1R3aEr5oCpZGcZXmwnOw0SWymCx/Hoe8+\
nD3e1lVom4tJSv3Omna7YbVokV5vZ9uP9iJw0Ow8GI7jlrpgxZ/LpKoEzPhr2w/uBemB7Sd+\
NeKjsFDz9BOESvmFSv3RZMeCZ5cyUlsd1pM9fhxvbOwG3dErxmrW+22oDFtofMXnkat/\
p2VezQRfnrUFPLcQNtXHhzSZoeiZ5KVrU4aHUDErHd36YlI9yPur+\
7EAn2bhoelSrea4V7rQLTSbocmSw2hNKX73S/66IDuCT/\
8RqDHlose6z1Vobu4Gx6IJD6XfS7d7V3Bg5canThGxV+BYeFf3kb/\
Nmj7oQj39hULizvRK9CcS25uBUnU7KSiXD65/ITutUIZskyHG99C3Be2Y3qQCXU+uZB1j1LfxfVf/\
OXP11Hhyv0whs6oNuP+88/vNaJmFMe/ln3+5k58I/v88k78+9nnb+80fthr8SU/\
jcP2s9ajVruT9rU4v3mlAdbB2A7lPGztDd5ezdjK+BmQ46XszhMa74WtpKzG6rtxrnFu8P/\
jeVnqK3u3nrned9e25wdte9DIikf9q+s7lDVFuhWzffTXur+w/\
uO1dX8V9dwXknaaqf9xofOPUnGw1WpFOZb487/6s78qYccfr9/+MoEG3ZY0/\
CZqfUMPaOv2fXEomlD5+PZj8RoCbDagzsnt7azIH2RFKjeCTtjk5ds/+1n5/qZ+\
i9zSbrUzjtd7KKUYm6YPLq7volFNpa0Ttx/UKnUX4OqvkFuWptma+cKfX0/W/eVEsKjFE39l3c//W/\
cvfNGhrTRMj/qK5B+1Uvp6O4oPknlAbrWp3VLXCj0YMuduCX8Zit85aCWl3sktd+\
GxkP1iC2jtcJkRqLKqLgHqRCoGdf9qwYziMMOLsXkZpjM+\
Q12qPnRCGeTYVBvn6xMrgfHCABjf9PejV8paW3uNfSA5U2A62EUXn3bg/\
WKgwMuhe1fgfYArgK0wUSg335dyVnWmDzmyDD76HavB/G7U/\
nAV4JqSSTNsiZ0oCQuPmwt4rjHXK5W72+8lTGg0o2TiMGHQv5zFCWdxwgRxwtJZnHAa44QpmvrJ+\
j3VxbnMcyuJ4qPJWz2UdfoL2yFwHrnl6OzP5+9BT9b9S4qLrXivo1DOn/ujd9aB1wp7eUIBSSJJJ++\
6xZLqdP9bGpGPr1Tz8U3lSvyjBHW/\
eAoGBFdo8AJcvQRSd53YRpKn4lsfbfoXH7XgQWnzPk3p1tymv6j6JpGf5fVund/\
MZaZ6JZPdJ78n4pZo3gYYpyriAe/JrVdNFHtIk33/\
LtO4a5uGAQw0uXAcwzW5Y3tWYJrEM6TpeJ5GvcAOdFN3hBYI4XBNegx/TOoR/\
XiKZRmWKboicGngGIHDLK55rrRc6jBCiONQj7sWtSUnVHLTZk5gWI6Oi0JYUhDTtjTbGqb4gyrFHZr\
C67XKNHlgSO4ZprQ1Sws81R7mOVpgGqZnuS7VbEqIp4GW4TLb8ww9CFxHcssjgaNpxjDNqwXNnWaUV\
ppn2ngErdM1jehcWK7gzHUlp4TpFvqVOQYzDBIYGhEOk67FGeUasbXAJcyS5jCp6wUpn0KDq33pGZZ\
m6pqUzBWuw3VLEJdrPPBcl7tUWJpONOJoXFDd9aRlGwF1HeoI15LSZYINE7tREPsyDZtQtCo5A/\
xSU3AuPdd2uHBNYhlSMMchFiWSBIQGJHA1xybccSxX0zXONDewNW4JcxS5mwU5BAchzyyr0jzLkoZm\
mhY1OcThOsxDKwLPMDzp2dwhjDjcNQ3XBRXuBh5kq1OhuUISYuj2ML1Pd2FlSVdT4JE7LO3EAkTTvk\
kIAUUkmm5pDhHUQecSqWmBlEK30G7pSd2lhEKHbOGYGqWGLmA/\
GjU4OiUYYRIVql2L6FM0bLSCMWZQZliScUvX0CSI1oVCSj3QPeZChtRiHGZjuSywDUMQyhw30KkcoZ\
43c4qVbu3T04VjSItKapmEm0QQw1ayFJbHKKzQNaijSc2F/\
YEZm6E7bJigNHSIHwIZYfQf5fQK06u2jqIdtglb45oloQm67kBvPM0wLSE9YUppWWbgmpS7jOuEQcV\
MV6M20ylnjhghxRs5tbKO9smZLveAYUzqhmHolm07OhFS9wKwYMtAQmmoQRxqmK5jWcRgLLDQ+\
7bULMcU3ojG/eh+xDLfk/Xk7QetvWaY7N/+\
vBNyMSDVVtDjw7E5cXTmGZowbMo9MERNpqTnmR4kTQxPIYEDS7FtPQB/ROhAOQ/25TFtRLN/\
PJqP50IKBNhM7MBnJLf9o4Mgaia370WdFt+\
NXopWhSvNkTY029agWBLfum7CgimjRhAQLoCHlAToJqETAl13AweqbTPXFKZDzBHw9KAWVw1wlRYu9\
bHKFBj6rcygYQCo0TEB0QNNaB43pW6iHwU3FLbZtqlzzyISctOVF9IDKIxmavgB4OUjrO8f1WLwwes\
2bfGuDykxBhiQXHGAnvIsQzhC16UHndal4WjMgPcIAEPEEgKWHJgc3ZqZLRRRuGKEXv2kFmPH6ZnQG\
bwlBcjDVrhumI5lOEwDzUCanLgGD3QUMUxqQeECG9hmOEARmDNErzvTSrTg636YIORTwyLKJVZUznB\
sR/MsHQofAHJ0i1rc1S0uXZ26wiEQuOfAE7vKJ8KvcEQbjuFxXZoBIHdaQygYfELbZa4oJeCIoD9sw\
4YsDaqr8COwOWeSaMAEoDACEyFlYDqOMHUCtNBsSJyalj7Cl/\
3uJFyNUDR0ErEDYeiuawB3zUAXFkBCwJnCG0jYhK6DX3x5YF1QeFa4YfDrCekgnBjm7O4knPWdY4k3\
GBoV0oawNAKkMEzDNriNuAAwFwhbwo8ELEDMYcF8EUTBkxCUJrgkAPojQG2iXisApMwZsb1AuFJXIZ\
sLN02A8rpuwEW63DRND04UISATATyMpQNFlNEE0hWwFs2y3Wlx41lblULiOYi4FrRap5qr4lmOuAt+\
QBPcgus2HWbqiOA8BKRcBy+mwTSE3UquFkGMLQM3GKH+\
bi3GfMDZq5DtV1SMSAGE0hFkI77hgQmXy3TIC31EEPPbCDw0TuGWENh5ABJdqvjcxTXOET9Oy9OueJ\
2q1KfMkwsvBFzSmCVcTzBPIikB6CP6Bi82sjENFmAGgQVvThGuGHAFlqsj1LR0Cv86rdrvRsebpEaJ\
Bs9tmwQZA+IVEwEGjNCAUSJ9gUtQgSqC94AygIRnwYsa0oOxuIQ6nsOHefNq8fZ1FA+\
7ckRUiAahUJphoX+\
ki0xNhyPSEUYZCj8dUxIDioVgyiGBCnpMDhFbpkA2REc4pHrAv1H2SL6ID0NW9UyGQiPAE0VYaemuI\
ZHrWUg/kI05JtDNhIYFCD4NYSLtky6YQ6rpmVACGxHSCM/\
kjGZwt5NGMZLiqpN8dqh4Eq8qvsgkCH88BOuCImZwPHgiwgk3EMAT/\
IPgy4SX17mN1ElKAl9gAiyEZ9qA4sDa9K9sNZvRqwdqhjwbNcxGrTf9S0Ve7u/Tthop/\
HulzL5I530WtcULNVsv4qzY1vxmd6wimUe12R+0de24Z39PHN0H8h2pYfMRj+\
addcwt1f7GnFxIfuO42h+HB2EqOBg4lvl8cqDbxt96A5/56HBWcC75zeMKbqXRQVYonstGmh/\
ffYcMjlXTsX39PHqVC6mkhG9vR+MnhaqN1+qs0X/yL+6i9LV8AE/wRy0ZQpeUkM/\
3Bud7gmzcHF22PxOkCs0dU6iYdugPIykW1cKREqtbSRIxPH+\
1fA0cJ0v51Bl4ul669VU26jhwMY8deuNsufHm/dKfDh8i0O3m4yg3PoNu+\
wtPREq3zm36KxDRLo33RNq4CQPMRV9cWN30F89M8cwUZ8AUF2bRBhEj7febcF0lf9mcKUSVZfiq0M3\
e1VwV8huQ4SU1eF0ueVVdGCi04kdxqsgkfTpX1LViOjBqlW88DDkXLTVGnyDPSxaedprNTX/\
1yzanqVBNacwl2niD7VEnbXfSR/c3Nrqj9D8a78E2mMVD56pD/GM+\
fLgTJRsb2Wx4ncf2J3tsDxfB6nxyuTJDUZrLzGrTx6oNoSFgNL+nZmHui3YzOpKLyWI+\
172cLGS3Phmazl/IJnDwrab18b3an2BRE79Pok4iIkRxauL385i290OWDE+\
d92a1G0tvWHEAxnxEhoLHZvb5T/+\
hUmvfJFZw7eixmsMqSv7yjpou34maR3uop7SopPjOZ7wzhLjwnOZZYOPb7Hc+\
ad749s2lxqlojKfHovXuKhqvadOKCBfH08INv4n8Qy3byVYf3BrroWYEeg+\
jJp8AHIYce7IAZ5v4F7qhQZ4a+\
IuZGo9ahDG4ckBlOcCtUStALmVPHbfkYDFfiZT9v9BY7M883wP7e7EaCK4qtsw+/+\
vOm1aRZMuOkgtdKb3VXC89OMTjD2mLN7M1J1ezdvcXw1QsuvDj5wuM6P0suMkWlahlHpUlH//\
6X6nPf70T69nnv9+J/0n2+Z93/AuPw9ZLRXtgDU/P/V3KSDegIy/hjxRenn8k0SnOWHJn+\
4K9zJZpqynUQ3jwmlO38rxcGlPHOpnPylZf1yRSz1HV80z1HFJNP1TbXL8fA+\
8G9TOFSkXgV6RHecpzhkxvQqYiRO4iUzdiPkOmM2T6cJGpGFOYLWTKxmRPODKNlerUQ6hizVcPonq/\
zzDqDKM+FIzqL8ucR0JU6OiHjVAjWc6GmQtwyhdtj49OvaHUDxqkzr8RnN6ykPRDluf8MSpY/\
C5GRLNBw7qSbfzkXYv0wuArOSMJHC+o6ZfyzrIos0hiMlH2Rv6/\
B4l2Y6LLfpu2tuPoYCuIDuta5MCy0tkT4/mTapHTLnWfZVGeRos89kWE2RPk/\
Em1yWlfBZllUZ5Gmxx8UWf25LdwUk1x2lelZlmUp9EUh19kmz0JLp5UY5z2VcJZFuVpNMZRL3rOngy\
XTqo5Tvuq7SyL8jSa48gXoWdPiMsn1R6nfRV9lkV5Gu3xDRsFzJ4oL5xUq5x2q4ZZFuVptMpjNtKYP\
TGunFSLnHYrk1kW5Wm0yJEbzcyeEFdPqj1Ou9XPLIvyNNrjR8MbMc2eCC+\
eVGucdiusWRblabTGURuVzZ4ML51Uc5x2q7hZFuVpNMdaG/\
nNnnAvn1Q7nXYrxVkW5Wm00yk2upw9UV85sVY75VajsyzK02i172Yj2NmT+\
tWTasDTbsU7y6I8jQY83UbJsyftayfVcKfdqnqWRXkaDXeqjcRnT9jXT6rdTruV+yyL8jTa7bvZaH/\
2pP7RSTXgaY86mGVRnkYDnuIgitkT9Y2TarXTHgUyy6I8jVY75UEtsyfumyfVcqc9KmeWRXmyLHehE\
PT5d7FDGn5c9DsqSmZx2E79y4a3lqpTYdd+8Sd/vearM3mLvanfXvBsT7WzPdXGMPD3Agmj91Q7/\
yGj2Og91d4EW5MhT+ls9YFHKga7k33+253hfxoXenVdzA4Gf50+Ea2OXOzXon5nAPeZvx+\
9WtPXnkSxWHuOf2m6trsfJmvZJmxo6+X8bb4HrwXrpArcxpMO5f+\
0k6TZiRhJ9zzwM4t7Z8roL0BW6gj7C9udFisci1FXMveOlFL7zShVZ7/\
I8mEfPQ26rFTlwSFtdmgaxVX311ejv5upEempUXKmR6dVjxZr6lGygnAiOzknHqFS+\
tq2eCXiM2g6zSr17TTQ9BsFNPX06AybTq0i/b+6itSLycbaezYreuyGtn/45//xf//2H/7qTnKpmy+\
qGkaFfaWDeYajuLlkuTjpCPc/akQHbUXqwet2LBI1lZK443U069e5G4d7e4DfpWTx6/\
2QqTMClr9sJfRAfDFmh280aZI+K0T3XqLx/tlJi37G6MTNTn4yfhMbw0+TiZ7Od4cfLUFZnFk1HV+\
Tq0FBfrKGKYHcg2Bf9vKletXtNaOANn0WR80mgKlnbt8h9CkaX4fpvlypcjymEqP96nC3jTHLb3Qf6\
JIZz8K6T6nCG3WssvtQPXJh8lhQmW8WvpH8uB65R6WH65Hdz57Jj8DLDq3bykadlp7QlO3XAqNSsy9\
tNdV4NwD9sLIJevW8hrGdS5nHL+oKvfbQVt57t8dze81mv+\
tqPvKBtaR1VLsl3UfeV0vMsZ5Kyuc8qqHw8XCZ5UeOVg6JrIsvczUbVj6osvazgwda1sLQfXoo1MGZ\
Kq6cfxqlWdBHw2YnFl+MPY7MUUEi0uI4YFXdhIIdLxgJk+7peD2u4fq2YyHqK2B23J6aT/\
jHUdjqTZfMZ8Po+PssLihM2J21ja5+\
FyTLoLOvznMt5V7okNX8rFXVLn8xy8TkhX6Uufjgjzu0OYkHzMdd8/mPySsp+YJ5/DtdZRVv4i/\
lv4pTgM4NZ5lq0sKuMWlROhf2LMn8Hqcu6oaF/lIsDooZ/\
bcOWyiDX5jG4Mf1lkrWDw7a6dF37S0nQNM87Ksd80wSYo4FWygrzmDrDLZOF2zNU87rjt7n8JVZb33\
gqpfkVZR4KMmrKnX/HOMJkt+aMVQ/BVuohHGlIbVJEgd/ZSthosUHoMpfUGH3aCsdj+\
FiRQRqOTPP78/YStJ9u8mVfNa70KzV+\
2Kkal16Lg5FnIi1MxU7CSpWFvP71rFk4WmUrYTra9cS6jvTq9nXq0K042tUOWLoTuKMWpn0aSNqH62\
hl0KlQmtptNZohu0gojEfVpq5MWPSNGp04li00m69Y2oOAy+K/LhJXO3wp9zyT7KWq+\
tvafW4I9a9Vk8wKPbOO2ikIlQEvwPdEn3Jh621p+LVWkM0R8zVTy748STEQDXj5/\
1IPm96Jvo3Nvu9SP6d91Dfq/Qmy9Vi5G16EDaP/Kt+1IkZwg3aStZ24qi/\
FFsVUkuxG1eqD34twr39NFncadKw1S9+PzwM1Rm31Un+1e0Y/iufYK/My//f/6M+/6N/\
0OwFv02ZUtDe8sxzjdL66d5SgHwJwKgJ/\
PmBCfzvoplXH4ctcS8W9KWauwxbxRrU0YsGzg2uKHjaOQhErFbPJoMPXlHDtEpmWVtKt7PB8fF0KMw\
H4b/oTXOX1iyMp7mJSDvtr0LxKhtzquWw4U5Gz6rnq9KzbK5eM7LsNOKdypLcGt2RHrTV5Y1keUNNa\
2RL5+s93h3OH8+fF1Mhk8yBzL9pRUK91haxY2kup2Z7x1yHBXyDuef35NzY4WP+mLpzFj6+u/\
CxpkaXjXIyTclVrVDQ+gpT14IXnnYypzIJGOZI+p0uZRk2uUlsKPm49BC8YZyI4sal0o2H/g9+\
WyHNWitaa0atPRGvKcCAZ/\
wHk1CtvlyUXNmNqXqfqHh58T0tBKqwcKNwWjn0f4WARiQlV1pjgnsjjdr3aJyR6LnCuTFd4QF9KbLg\
haMKVPD3S08VRX3E3+KF3wm6HjOAzOo5zbNXqL5P3Hyb9s/V0/\
5CprVQcSOIUgTqXTUtXitcSpZy3asGccvPRbtJmRgz/TrIXnHsvQW5sTG4xlWe/2Bf/Cog/\
5xa10hbL7PJu8prkB/wO2sQVHf//\
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\
TqBfYgW7qjtACIRyuSU+ddWxSj+\
jHU6ycsVmi6IrApYFjBA6zuOa50nKpwwghjqOOnLKoLTmhkps2cwLDcnRcFMKSgpi2pdnWMMUfVCl2\
jykq0eSBIblnmNLWLC3wVHuY52iBaZie5bpUsykhngZahstszzP0IHAdyS2PBI6mGcM0rxY01QGEle\
aZNh5B63RNIzoXlis4c13JKWG6hX5ljsEMgwTq9DuHSdfijHKN2FrgEmZJc5jU9YKUT1WsUCHmGZZm\
6pqUzBWuw3VLqFOpeeC5LnepsDSdaMTRuKC660nLNgLqOtQRriWlywQbJnajIPZlGjYBJVVyBvilpu\
Bceq7tcOGaxDKkYI5DLEokCQgNSOBqjk2441iupmucaW5ga9wS5ihyNwtywI+\
QZzFApXmWJQ3NNC1qcojDdZiHVgSeYXjSs7lDGHG4axquCyrcDTzIVqdCc4UkxNDtYXqf7sKEegdaw\
Vd1WNqJBYimfZMQAopINN3SHCKog84lUtMCKYVuod3Sk7pLCYUO2cIxNUoNXcB+\
NGpwdEowwiQqVLsW0ado2GgFY8ygzLAk45auoUkQrQuFlHqge9nRxNRiHGZjuSywDUMQyhw30KkcoZ\
43c4qVbu3T04VjSItKapmEm0QQw1ayFJbHKKzQNaijSc2F/\
YEZm6E7bJigNHSIHwIZYfQf5fR6a77L1CjaYZuwNa5ZEpqg6w70xtMM0xLSE6aUlmUGrkm5y7hOGFT\
MdDVqM51y5ogRUryRUyvraJ+\
c6XIPGMakbhiGbtm2oxMhdS8AC7YMJJSGGsShhuk6lkUMxgILvW9LzXJM4Y1o3I9GH5b2eSfkYugs4\
R4fjs2JozPP0IRhU+\
6BIWoyJT3P9CBpYngKCRxYim3rAfgjQgfKebAvj2kjml3vqMV7asH7bvRStCpcaY60odm2BsWS+\
FbH5gpGGTWCgHABPKQkQDcJnRDouhs4UG2buaYwHWKOgKd6J7hm+VERVzxWs1UM/\
VZm0DAA1OiYgOiBJjSPm1I30Y+\
CGwrbbNvUuWcRCbnpygvpARRGMzX8APDyEdY33ZnuPcamPVF8mLGpzqzu8TXticnTSvS4M3n7Kjfli\
bDTGkLlzNE+\
Kk154uUwV1Oeqdi3gClP9Bvm7O4knPWdY4k3GBoV0oawNAKkMEzDNriNuAAwFwhbwo8ELEDMYcF8EU\
TBkxCUJrgkAPojQG2iXisApMwZsb1AuFJXIZsLN02A8rpuwEW63DRND04UISATATyMpQNFlNEE0hWw\
Fs2y3Wlx41lblUJWMYi4FrRap5qr4lmOuAt+QBPcgus2HWbqiOA8BKRcBy+\
mwTSE3UquFkGMLQM3GKH+\
bi3GfMDZq5DtV1SMSAGE0hFkI77hgQmXy3TIC31EEPPbCDw0TuGWENh5ABJdqvjcxTXOET9Oy9OueJ\
2qVLTMkwsvBFzSmCVcTzBPIikB6CP6Bi+2kFSDBZhBYMGbU4QrBlyB5eoINS2dwr9Oq/\
a70fEmqVGiwXPbJkHGgHjFRIABIzRglEhf4BJUoIrgPaAMIOFZ8KKG9GAsLqGO5/\
Bh3rxavH0dxcOuHBEVokEolGZY6B/pIlPT4Yh0hFGGwk/\
HlMSAYiGYckiggh6TQ8SWKZAN0REOqR7wb5Q9ki/\
iw5BVPZOh0AjwRBFWWrprSOR6FtIPZGOOCXQzoWEBgk9DmEj7pAvmkGp6JpTARoQ0wjM5oxnc7SAtD\
+mAk3x2qHgSryq+yCQIfzwE64IiZnA8eCLCCTcQwBP8g+\
DLhJfXuY3USUoCX2ACLIRn2oDiwFLLs0uL7beSJFLvY18tX0ujg2QpHwaT55PrpVtfZeMHAxdznO0N\
mRbn0yp2e4NHIwh0++U4yo3PGnNqZPyHx66A7w0snY3Xz/R4/f8HZdCrPw=="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920833822852517`16.345953425097616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920833822852517`16.345953425097616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920833822852517`16.345953425097616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.920833822852517`16.345953425097616*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 3 suggestions\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "79df3b1b-9f13-4f0a-9a7b-e3dd3e57a653"]]]]]], Appearance -> 
           None, BoxID -> "79df3b1b-9f13-4f0a-9a7b-e3dd3e57a653", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.92083385429597`16.345953428580476*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "796d0093-edd9-4bcc-aeba-c3095cfc4f98"]]]]]], Appearance -> 
                   None, BoxID -> "796d0093-edd9-4bcc-aeba-c3095cfc4f98", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.92083385429597`16.345953428580476*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "796d0093-edd9-4bcc-aeba-c3095cfc4f98"]]]]]], Appearance -> 
                   None, BoxID -> "796d0093-edd9-4bcc-aeba-c3095cfc4f98", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.360577`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.360577`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/Abstractions.wl"], "Hash" -> 
                    "1f1b1909bae68ac16e25844b1109c27c110d5bc9c40680dbc8bc95182\
99dd6b5"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1f1b1909bae68ac16e25844b1109c27c110d5bc9c40680dbc8bc95182\
99dd6b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["29 total \:203a ", ""], 
                    Style[
                    Superscript["29 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.811399`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.811399`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexicalMap.nb\""}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexicalMap.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfdtvHMeanyjeRN1l6XiPnTjLTLjBZmNKXX1vw7sSNSJtZSWbV\
tP2XnFcXRdyouH0bHcPJTo4yAY4QF52kcvZlwQbYBEg/0OQlwDJX5Cn3cfknIcgL/\
FTkAQbwPlVd89M98xQnp6hZQ0588DhdFfX99V3+\
X1fXbpKLsSXntEXD8OXIpbL8a3HrURE7UgkNGmELVyWC/\
HKs1AVkEvx0pNGnMiL8coe3ccVf9XvMCbi2L/idw4PaXT8saDcX/h9uRjffHTcoocN9jTknaZQj1/\
sPb7oiyS+vnfcFrFIvgrborWxES/v0GYsunfvdO+Kw0BwH+yIjQ1/+RnqP0aZK3visN3ExYzDrOLF+\
MYubQlfNAVLwqhMc+\
kZ2OgSWY5XP4oavPxw93tVVaJurcRrDztJ0hXD5bxFWb3v7mzvRo0jsPDVThS2ku0WfybisBMx4a/\
tbD9sJIe0Hfs3c8HgoU/RThEp5hUrj0STHgseX89I7HRaTEn8JOks7UUd0WvG5a12W9CItiD8pU/\
CVv/O2kMaCz85bgp5YaDta9tHtNmhkEy8ttVJwkOomPXurjwVyUHI/cu7kYBsk8ZRodKtZmO/\
dShaSVeg8UpdKEvpfveLPj6k+8JvfC0gsdVcYr2nSnSX9xqHIo4upJ+\
rD3pX8ODVeieKUPEXYFj413Yg3zptfywa+weKheXd8AVoLsR3toI4bHYSUSwfX3tK91sN2WCpDde/\
hbov7UT0MFXqYnwpFY8y3+XaL/785zVUuPaoEcFmVJtx/9lHD+thM4yiX0k/f3k/up1+fnk/+\
p3081f36+/0WnzVT6JG+9PW41a7k/StOLt5vQ7Wwdgu5bzR2h+8fTllK+\
VnQI9X0ztPabTfaMVFM1bf9Qv1C4P/n8zLSt/Yu/Us9L67vr046NuDTpY/6t+o7VLWFMlWxA4gr5q/\
VPtgveZfRj2PhKSdZuL/KLf5x4k43Gq1wgxL/MVv/vQvCtjxR7V7n8ewoHuSNr4OW1/\
TQ9q690gciSZMPrr3RLyEApt1mHN8byct8ntpkdKNoNNo8uLtn/ykeH+\
T3LXuanfbKce1HkopxqaRwZXaHhrVVNY6cftBrVR3Dq7+mnfXsDXLcb7yF2txzV+\
NBQtbPPbXan72X82/9FmHtpJGctw3JP+4ldCXO2F0GC8CcstN7Za6mdvBkDt3S/\
irMPzOYSsuSCfz3KUnQvaLLaG1w2VGoMpldQlQJxIxaPs3cmYUhylejM3LMJ3xGepS9WETyiHHplq/\
WJ1YAYyXBsD4jn8QvlDe2tqvHwDJmQLTQRFd+aSD6BcBBZ4P3buO6ANcAWw1YoVyi30tp1Wn9pAhy+\
Cj37MZLO6F7TfXAG4qnTQbLbEbxo084mYKXqgv9Epl4fYHSRPqzTCeOE0YjC/\
zPGGeJ0yQJ6zM84TzmCdM0dS3aw+ViDOdZ14SRseTt3qo1+kv7TSA8+hbju79+\
fw12EnNv6q42Ir2Owrl/IU/PDUB3sz95SkFJIk4mVx0ywXT6f63MqI/vlbuj2+qUOIfx6j7q0/\
AgOAKDb4CV8+B1N0gthFnXfGttzb9K49biKC0+YgmdGth019Wsonle1m9Wxc3M50pqaS6e/\
u3RdQSzXsA40RlPOA9vvuiiWIf0/jAf0AkCYineQEVtksZsYVuuaYZEKJ5THcYvrkVMI+\
Zmu1qPGAufljE1T2PczuwTqZY1GGRoulQplGP2NSxGLV4oLs6pZrUPWZQ1wh0Qk38b8sgCAzTJER6L\
DCkRkzJHEOKYYo/\
LlPcpQmiXqtIE0Qk93RD2pqpBZ4X2GiFowWGbnim61LNppblaQ7xdJfZnqeTIHAdyU3PChxN04dp3s\
hp7jbDpNQ8w8Yjjh4QTbMIF6YrOHNdyanFiOmZAXN0putWoGuWcJh0Tc4o1yxbC1yLmdIYJnUrJ+\
VTWHBZlp5uagbRpGSucB1OTGG5HFryXJe7VJgasQBXGheUuJ40bT2grkMd4ZpSukywYWK3c2KfJ40m\
DK1MTge/1BCcS8+\
1HS5cwzJ1KZjjWCa1pBVYNLACV3NsizuO6WowHqa5ga1xUxijyN3JySE5aPDUs0rNM02pa4ZhUoNDH\
a7DPLQi8HTdk57NYT+Ww11Dd11Q4W7gQbeECs0V0rJ0Yg/\
Te3cPXhZ3LQURucOSTiRANOlRZUJQj1swOM2xBHUgXEtqWiClICbaLT1JXGpR2JAtHEOjVCcCOYRGd\
Q6hBCNcokS16xF9irqNVjDGdMp0WDk3iYYmQbUuDDJ1UOZCh9RkXA8gVxbYui4syhw3IFSOMM87GcW\
SWPv0iHB0aVJJTcPihiUs3Va6FKbHqONQ+KOjSc1lTgBmbAZx2K4QUidQPxRChum9ldHLXa/\
cOop22AZ8jWumhCUQ4sBuPE03TCE9YUhpmkbgGpS7jBOLwcQMV6M2I5QzR4zQ4u2MWtFG++\
QMl3sGh2sRXdeJadsOsYQkXgAWACoSRkN1y6G64TqmaemMBSakb0vNdAzhjWjc+\
49ClsaeVJL3tlv7zUZ8cO+jToOLAa22gh4fjs0thzBP14RuU+6BIWowpT3P8KBpS/\
cUEjjwFNsmAfizBJHC8uBfHtNGNPuD0Xw8E1IgwWZiFzEjvucfHwZhM773MOy0+\
F74XLRKXGmOtGHZtgbDkvgmBJjKKKN6EFhcAA+\
pFUBMglgWbN0NHJi2zVxDGI5ljICn7Upc1cFVkofUJ6qnwCC3IoO6DqCGYAKLBJrQPG5IYkCOgusK2\
2zbINwzLQm9EcY1eAcMRjM0/ADw8hHe95uVGNx+\
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\
cPTVumlwVdyRhI4WVHTL+WdZVWmmcRkquyN/\
P8AGu3mRNf8Nm3tROHhVhAeVfXIgWWls6fGi2fVI6dd6j7LqjyPHnniiwizp8jFs+\
qT074KMsuqPI8+Ofiizuzpb+\
msuuK0r0rNsirPoysOv8g2expcPqvOOO2rhLOsyvPojKNe9Jw9Ha6cVXec9lXbWVbleXTHkS9Cz54S\
V8+qP077Kvosq/I8+uMrNgqYPVVeOqteOe1WDbOsyvPolSdspDF7alw7qx457VYms6zK8+\
iRIzeamT0lXj6r/jjtVj+zrMrz6I9vDW/\
ENHsqvHJWvXHarbBmWZXn0RtHbVQ2ezq8elbdcdqt4mZZlefRHStt5Dd7yr12Vv102q0UZ1mV59FPp\
9jocvZUff3Meu2UW43OsirPo9eezkaws6f1G2fVgafdineWVXkeHXi6jZJnT9s3z6rjTrtV9Syr8jw\
67lQbic+esm+dVb+ddiv3WVblefTb09lof/a0/\
tZZdeBpjzqYZVWeRwee4iCK2VP17bPqtdMeBTLLqjyPXjvlQS2zp+\
47Z9ZzpzwqZ5ZVebY8dylX9MXT2CENP674HZUls6jRTvxrureeqFNh13/xx/\
9h3Vdn8uZ7U393wfmeavM91cZw8NcCCaP3VLv4JqPY6D3VXgVbkyFP4Wz1gUdKDrubfv7r/eF/\
6pd6dV1JDwZ/mTwVrY5c7teifqcA955/EL5YJ+tPw0isP8O/NFnfO2jE6+\
kmbGjrtextvu2XgnUSBW7jaYfyf9iJk/\
REjLh7Hvjc407NGP0l6EodYX9pp9NieWDRq2rm4bEyar8ZJursF1k87KNnQdeUqWwf0WaHJmFUDn99\
M/pbqRlZPTOK53Z0Xu1ouaIdxWtIJ9KTc6IRJkXWd8QLEc2h6Tyb1LfTQNOv5tDUs6M5Np1bQ/\
rrqobUy8nG2ns2LXrihrZ/8M/+0//69T/45n58tdtfVDWMSvsKB/MMZ3EL8Wp+\
0hHuv1UPD9uK1PbLdiRiNZUSu+MJmvXr3Isa+/uA35V4+cuDBlNnBKx+\
3orpofhsTIFvNGmcfJqr7rVk4/2zk5b9lNGJmx1/OH4T68NPWxM9ne0OP1qDMj+zajq+\
JjeDnPxkDVMKeQjFPu/1l6pVt98MA9r0WRQ2mwCmnrt9j9CnaHzZSA7kWpnjMY0Y7VeHu22MWX6j+\
0CXzHge1n1KFd6o4pXdh6qRa8RPBJXZZuEb8QfVyD0uPFyN7EH6THYEXnpo3VY66rTylCbsoBIYFZp\
9daupxrsB6EelTdDL5zWMHVyKPH5WVemVh7Yy6d0bL+\
w1m33RVXzkDWtJ67hyS7qPvK6WGGM9FRfPeVRD4ePhMsuOHC0dElkVXxYqNqx4UGXlZwcPtKyEoQf0\
SKiDM1VeufhJmKRJH200O5H4bOxxZI4KYpHkxwGr6iZU7HjJSCPuno7X4xqhbycSoroBpsftqfmEfx\
A2Wr3pksV0GB1/P41yChOKs7LTVRdBvAo6B+o810LfCwK5nJ21qtrlL6c9MXmpn2Uub/\
9RhzYniYDZuGs2/zF5JYVYsIh/p6usFE38lexXfgrQheFeppq0sCtMWhTOhZ13Mn/AqYuqaaG/\
EonDfEb/O4ctlMMvTePw40ZLpevtw3Zy/\
H1HywnQNEv7Kuc8k6SYY8EWyoo5bM1h63zB1iLlvOrofQZfqfdWB65qnbySEQ918spG3T/\
HeILOb8Ucqt8FWyqlcYUhtUk6Dv7aVsxEiw9Alb+k0u7RXjoew/\
mKCNQyd88fztkK2v1ulyvErNOwrMuPxEjTuvpMHIkoFutzEzsLJlZU8+\
u2sXjpkzBdCde3rhXUN7er2berXLXjW1QxY+\
hO4oxamfRuPWwfr0NKDWVC60m4Xm822kFIIz5sNAtj5qRJWO9EkWgl3XrHtBwGXhT5cTtxldOfYsvf\
Tluurn9Hq8cdse61eoJBsVMX0EhDKCl+F7Yl+ppvtNY/ES/W66I5Yq5+csWPpyEGqik/\
r0fzWdNT1b+y2a9F86cuoX5U6U2Wq8XIO/Sw0Tz2b/hhJ2JIN2grXt+Nwv5SbFVILcWuXy8/+\
KVo7B8k8fJukzZa/eKPGkcNdcZteZL/8k6E+JVNsJfm5f/P/1af/94/\
aPaS36ZMGWhveeaFemH9dG8pQLYEYNQE/\
uLABP730cwbTxot8TAS9Lmau2y08jWooxcNXBhcUfBJ5zAQkVo9Gw8+\
eF0N0yqdpW0p3E4Hx8ezoUY2CP9Zb5q7sGZhPMuNRdJpf9EQL9Ixp0oBG+\
Fk9Kx6tio97c1Va0baOw15p7Qkt4I4ksO2urwRr26oaY106Xy1x7vD+\
ePF83wqZJI5kMVXrUio1to8dyzM5VRs75jrsIBvcPfsnlwYO33MHlN35unj6aWPFS266JSTWUpmarm\
BVjeYqh689EknDSqTgGGGpN/rUpZhl5vEh+IfFR5CNIxikd+4Wrjxsf/\
jX1dIs94K15tha19E6wowEBn/3iRUyy8Xxdf3IqreJ8pfXnxNC4FKLNzOg1YG/\
V8goRFxIZRWmODeSML2QxqlJHqhcGHMUHhIn4s0eeGoAhX83cJTeVEf+\
bf4yu8E3YgZQGfVgub8FaofEje/y/oXqll/\
rtNKqLgRhAkS9a6Z5q8VrsQrme2Vk7jVZ6LdpEyM2f06TF9x7L0FubExuMZVXnxjX/zKIf+\
CWtdIW8/TybvSa5Bv8DtrUFR3//\
zfGHteeKPX1uLz4zHb7k3JjKpjkumXXj0rIzNTdOUet1gk0g7Z1Gteq86FVxFqpYWQpTWMlWWfk5pi\
2eZEqqrewte6ZHzcrqeKt6noI+RQVVQ85hrnbv3bzcxqB7E/\
w5uFeEWNQ4iofnkQcHoucXKZEwPIpHg9YhhlYOi39LZrYcDkavrE8PXCQMriXtgfORx+2b8whFS/\
MWK8ZNxBwFGtupXHtC8j2m6L6GH4Ui3/yC9mv1b3QvyD1G8tfvtR1rP+Kv9Ox1haSf1ilyt/\
KV96uZQaadVwndeRJ9uV6shzlW4dy2mG1quk8krInJMv1Br8ipwc9VbVZ3V8PEEdB+U6VvbS/LlXS/\
WsO6tn7WE3x+\
lVNVFylNV2qQBfS69tIcdVaLbFacR3wuhw3F7T95Op92wuxf1JnfBCdwuM4i4Z5Vbli3obX3dvV1io\
W35r6HI9Erj6+\
efQWrXu3tAo78LArZNHZEtkbqqZ1CPBv6BRgwZ4rofN1W1h5RHS8PC4x8LNR0LSTjPpMel3SyzEP+\
5iV7rXBhKopAtiC31090VTsCRla2BY+\
NI2b4y88Vb2jGpzDodxvnzsSr4pdrqorr99wsqz8IVC1v4o+coe3c+w9sqeOETHIhHZz2x/\
kb9RK21z9LDTaPJnIkY745q/VPtgveZfRp152/0fFcgWtthZ/OZP/6JAa4gPf+\
EfyeX4Vk86Ga1SyaVBjv1Vv8PQC4p7bVW5kL/w+6j0ZsmcCu3pmu/\
1NLeDQtB3hx8MDLTf6d4VhwH8OV9mv/\
wM9R8PCmqhN396Q205kykkjMo0M23lRJbjVWVb5Ye736uqEnVrBebeAe7lYiiHxXd3trsmuRNB8dst\
pZR0csNf29l+2EgOaTv2b+aCwUOfop3ZljYl585IFF7yHCmd7kxCbqj9/\
XIG0pCCgw757ivf8Vx5KpKDkPuXdyMB2aqFZCNylR6irtSFspTu96j0pfSq5mAmo7rYe41DEWdbGF2\
4+qB3RY2z5fN2KQr519I9e2j743QmSJXbVfvMo9ydrSAOm51EFMvH157S/VZDNlhqw/\
Vvoe5LaRaWmfulVDzKfJdrv/jzn9dQ4Vq+WONIlDYZ+ZX085f3o9vp55f3o99JP391v/\
5OP8FTi2Xbn7YetwBLQ7NJOSbsUq6WngzefkU6WUwbi2ZcnJEbmp0byctK39gv9lBoYjRaqz2Fw0PH\
E2OPv1kGtPVAIdo6Q++2KYD663EGKhL9gOO7tVPD0Su1PbUjlLKxyXFzsVz3Ulcq5K5LiOF5X/\
mLNcDyaizQzeYxxOVn/9X8S591aCtpJP14ddk/\
hgxeqkwmXgRQlpvai2q59oacsJeJrebLlgvSKbyl3U9F8zfKy2VGYMFldQkABW0MWuyNnJnB/cG+\
m5dhOuMz1KU6ODX9nVSLXZNxib3iVfQ7anI4WxxfP6Bqxy410T449fyq2WXEDKABwKahxm+\
yPZAyLadVp/YwOPP8Wsyg1Al94wzgZnejge4Clh78LRTytyxI/iDBvd4M44mD+\
2BUmEf3eXSfILpfmUf32YnuUzT1Vu0pfdk47ByqPfima/DIbuAwSyfLxXF1zzWmk8vC+/4/\
rt37HPgZ35O08XXY+\
poe0ta9R2qBGiAyKp10cW8nLfJ7aZHSjcn38K75Cz89NfXcrO1GoTJxwdNNEk9TO4vf/OznIy7/\
4OJb/ObP/u18+GA+\
fDBPMM5ygnEKwweXalupoU6eX6zW0hHQ08scVmrfV9JwGsFxPiQwHxKYDwnMhwTmEXsesatH7MWyH8\
0j9uuO2FO0crmG+5NL/Xa/G/pJmIggDJ/X5tnEPJuYZxPVs4l+ZBsM1CPiYKF6/\
2rubyrFaA6mAq9aceMv/CGK9wZIbg358tbFTX8lQ2Z/OcXXTX9JwSIe64FU9H/v/ru77/zT/\
3ffX80RrABbp7nWZfGbn/\
3ZqQHfW7XsNcHsVBR1vPzkKLignSJbuwLZnjrsHkoRXPBTj0DLRNPuqujza4g+7ZzaWpduzb/\
RVSysNJGNl99/EPrRwGDmtOogp8bZ2zW/N5PwhrF2u+Y/byBhf9Ms+G8io4j2RfJl2JTINr/ITp/\
NosnkDC4T4y5Spjck7bkzYrXcPO+Z5z3zvGcW8563hp156/Kmv9ab6y1lO++8989/9tO/LmQ7m/\
6NganSglRfkSX5P/1B59M2/evlqLu1sPkDs/S9JKOb/s3BTK9+ARcH86xSLdnw0e8+8FfzYpv+\
7RE5Sh0iuzMqQ1A3bg3FZ0X3Rr72oRuV/L9fYSXDpv/uycE1+tf/Sn1+\
48H3lH6f4uz1lOH3Wm2XMohnHnfncXced2c27l4pePHW8qZ/Lfu9FbGDxpHww1OIRSmaFm//5CfF+\
5vkrnVXu9tO6Z4Y8d+nh3/yb/597UEhpNxJmc74zUb5wyg9BSs9Mjt4DZwjeqfUn9JWQ4psjil/\
2UgF8uzoVPleJngVOlPWeiy+nW12dm8riJP0UGC1XduL5mZ+\
UvQDIklAPM0LqLBdyogtdMs1zYAQzWO6w/DNrYB5zNRsV+MBc/\
HDIq7ueZzbgXUyxWIrihRNhzKNesSmjsWoxQPd1SnVpO4xg7pGoBNq4n9bBkFgmCYh0mOBITViSuYY\
UgxT/HGZYvdM9gJNEJHc0w1pa6YWeF5goxWOFhi64ZmuSzWbWpanOcTTXWZ7nk6CwHUkNz0rcDRNH6\
Z5I6e521Q7yxdIGTYecfSAaJpFuDBdwZnrSk4tRkzPDJijM123Al2zhMOka3JGuWbZWuBazJTGMKlb\
OSmfqlyhRMzTTc0gmpTMFa7DiSksl0NLnutylwpTI5ZmORoXlLieNG09oK5DHeGaUrpMsGFit3Niny\
eNJqCkTE4Hv9QQnEvPtR0uXMMydSmY41gmtaQVWDSwAldzbIs7julqMB6muYGtcVMYo8jdyckBPxo8\
zQFKzTNNqWuGYVKDQx2uwzy0IvB03ZOezWE/\
lsNdQ3ddUOFu4EG3hArNFdKydGIP03t3Dy7Uy0YRqzos6UQCRJMeVaSJ1OMWDE5zLEEdCNeSmhZIKY\
iJdktPEpdaFDZkC8fQKNWJoJxrVOcQSjDCJUpUux7Rp6jbaAVjTKdMh5Vzk2hoElTrwiBTB2UudEhN\
xvUAcmWBrevCosxxA0LlCPO8k1EsibVPjwhHlyaV1DQsbljC0m2lS2F6jDoOhT86mtRc5gRgxmYQh+\
0KIXUC9UMhZJjeWxm93gYXRWoU7bAN+\
BrXTAlLIMSB3XiabphCesKQ0jSNwDUodxknFoOJGa5GbUYoZ44YocXbGbWijfbJGS73DA7XIrquE9O\
2HWIJSbwALABUJIyG6pZDdcN1TNPSGQtMSN+WmukYwhvRuPdH93Q+\
6jS4GNCq6m7lfDg2txzCPF0Tuk25B4aowZT2PMODpi3dU0jgwFNsmwTgzxJECsuDf3lMG9HsDyr1uB\
6q3T32wueiVeJKc6QNy7Y1GJbENyHAVEYZ1YPA4gJ4SK0AYhLEsmDrbuDAtG3mGsJwLGMEPG1X4irt\
H+V5xRM1D88gtyKDug6ghmACiwSa0DxuSGJAjoLrCtts2yDcMy0JvRHGNXgHDEYzNPwA8PIR3veblR\
jcftmmLd6NIQXGAAOSKw4gKc/\
UhSNUaIJNE6k7GtMRPQLAkGUKAU8ODA6xpm4LQxSuGGFXH07Sgx6yM0EYRXgByMNXONENx0Tc1kAzk\
Aa3XJ0jmEO9BjVhcIENbNMdoAjcGaonzrQazfl61IjbWS9VhcSSyemO7WieSWDwASCHmNTkLjG5dAl\
1hWNB4Z6DSOyqmIi4gryCOLrHiTQCQO60jjAwGtK1M2obDrdgaq7lUUFswBMAx2SuZgZIcmwXgEAD4\
SFYulpgm5y4tmVBtWDUJHyYq9+\
ahKsRhgYhWXYgdOK6OnDXCIgwARICwRTRQMInCBFEx5dnA7gpIivCsOmanpAO0olhzh5Mwlk/\
OBZ4g6NRIW3IQLOAFLqhQ2428gLAXCBsiTgSsAA5hwn3RRKFSGKhtIVLAqA/\
AtQmkloOIEXOLNsLhCuJStmgMagKYZnoCJEuNwzDQxBFCshEgAhjEqCIcppAugLeopm2Oy1ufNpWpd\
CrGERcE1ZNqOYaNnM48i7EAU1wE6HbcJhBkMF5SEg5AS+\
GzjTDSvVqWh7jEoY4wvzdSoz5gLMXDXZQMjFLCiAU4QaycMkDAyEXqX4QQEaW4SDco0/\
AKcISEjsPQEKQUDkOOgAIBsgfp+VpT7xMVFe0yJOLKARc0pgpXE8wT+o6Begj+\
wYvtpBUgwcYQWAimlOkKzpCgekSpJomoYiv05r9XniyS2rU0hC5bcNCjwH5ioEEA06owykl0MGmKlF\
F8h5QhpTCMxFFdenBWVyLOp4zAiy8Srx9GUbDoRwZFbJBGJSmm5CPdD2NEgQigjRKV/\
iJ3pKlw7CQTDlWoJIeg0PFpiHQG6IjAlI14N8oRiRfREcNVo5MukIjwBNFWmmiyyhdZHrofqA35hhA\
NwMWFiD51IXhIht1wRz1As+AEdjIkEZEJmc0g3sddMsbdCBIfnqkeBIvSrHIsJD+\
oOuqCYqcwfEQiSxucR0JvIV/kHwZiPKE2+\
g6SWlxJg2AhfAMG1AcmOplksLOIltxHKrNJ28UryXhYbySDYPJi/\
Gtwq0v0vGDgYsZzvaGTLOGpuz2Bo9GEOjK5STK9ffqC1sXNv13TtzuozewNJ8hmc+QzGdIKsyQ/\
H8esFsE"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.92083385429597`16.345953428580476*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                "OEM6eJxVzr0KwjAUhmEiRQS9iu42OngB/\
tCpU6OLIuXYnkjgJKk9qZZevbQ41O2D5x0+LXiRw+\
fgO2QteJ77YeuIo8xwUFFqCJW46Rkvz2hrgoCDi5+/\
YnlhbFhqML13PVhw8oRvJF9jIzPsTAl0BEaW6Zhcx+\
QPHq2haspFMfX1Ntklm6SGkjDEajVc2jfP1qILSty/jZ1EIw=="}, "ClickToCopyTemplate"]],
              LineBreakWithin -> Automatic, LineIndent -> 0], ItemSize -> 
            Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "796d0093-edd9-4bcc-aeba-c3095cfc4f98"]]]]]], Appearance -> 
             None, BoxID -> "796d0093-edd9-4bcc-aeba-c3095cfc4f98"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.360577`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.360577`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/Abstractions.wl"], "Hash" -> 
                    "1f1b1909bae68ac16e25844b1109c27c110d5bc9c40680dbc8bc95182\
99dd6b5"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 29], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1f1b1909bae68ac16e25844b1109c27c110d5bc9c40680dbc8bc95182\
99dd6b5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["29 total \:203a ", ""], 
                    Style[
                    Superscript["29 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.811399`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.811399`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexicalMap.nb\""}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexicalMap.nb\"", 
                    "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.782983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfdtvHMeanyjeRN1l6XiPnTjLTLjBZmNKXX1vw7sSNSJtZSWbVtP\
2XnFcXRdyouH0bHcPJTo4yAY4QF52kcvZlwQbYBEg/0OQlwDJX5Cn3cfknIcgL/\
FTkAQbwPlVd89M98xQnp6hZQ0588DhdFfX99V3+\
X1fXbpKLsSXntEXD8OXIpbL8a3HrURE7UgkNGmELVyWC/\
HKs1AVkEvx0pNGnMiL8coe3ccVf9XvMCbi2L/idw4PaXT8saDcX/h9uRjffHTcoocN9jTknaZQj1/\
sPb7oiyS+vnfcFrFIvgrborWxES/v0GYsunfvdO+Kw0BwH+yIjQ1/+RnqP0aZK3visN3ExYzDrOLF+\
MYubQlfNAVLwqhMc+\
kZ2OgSWY5XP4oavPxw93tVVaJurcRrDztJ0hXD5bxFWb3v7mzvRo0jsPDVThS2ku0WfybisBMx4a/\
tbD9sJIe0Hfs3c8HgoU/RThEp5hUrj0STHgseX89I7HRaTEn8JOks7UUd0WvG5a12W9CItiD8pU/\
CVv/O2kMaCz85bgp5YaDta9tHtNmhkEy8ttVJwkOomPXurjwVyUHI/cu7kYBsk8ZRodKtZmO/\
dShaSVeg8UpdKEvpfveLPj6k+8JvfC0gsdVcYr2nSnSX9xqHIo4upJ+\
rD3pX8ODVeieKUPEXYFj413Yg3zptfywa+weKheXd8AVoLsR3toI4bHYSUSwfX3tK91sN2WCpDde/\
hbov7UT0MFXqYnwpFY8y3+XaL/785zVUuPaoEcFmVJtx/9lHD+thM4yiX0k/f3k/up1+fnk/+\
p3081f36+/0WnzVT6JG+9PW41a7k/StOLt5vQ7Wwdgu5bzR2h+8fTllK+\
VnQI9X0ztPabTfaMVFM1bf9Qv1C4P/n8zLSt/Yu/Us9L67vr046NuDTpY/6t+o7VLWFMlWxA4gr5q/\
VPtgveZfRj2PhKSdZuL/KLf5x4k43Gq1wgxL/MVv/vQvCtjxR7V7n8ewoHuSNr4OW1/\
TQ9q690gciSZMPrr3RLyEApt1mHN8byct8ntpkdKNoNNo8uLtn/ykeH+\
T3LXuanfbKce1HkopxqaRwZXaHhrVVNY6cftBrVR3Dq7+mnfXsDXLcb7yF2txzV+\
NBQtbPPbXan72X82/9FmHtpJGctw3JP+4ldCXO2F0GC8CcstN7Za6mdvBkDt3S/\
irMPzOYSsuSCfz3KUnQvaLLaG1w2VGoMpldQlQJxIxaPs3cmYUhylejM3LMJ3xGepS9WETyiHHplq/\
WJ1YAYyXBsD4jn8QvlDe2tqvHwDJmQLTQRFd+aSD6BcBBZ4P3buO6ANcAWw1YoVyi30tp1Wn9pAhy+\
Cj37MZLO6F7TfXAG4qnTQbLbEbxo084mYKXqgv9Epl4fYHSRPqzTCeOE0YjC/\
zPGGeJ0yQJ6zM84TzmCdM0dS3aw+ViDOdZ14SRseTt3qo1+kv7TSA8+hbju79+\
fw12EnNv6q42Ir2Owrl/IU/PDUB3sz95SkFJIk4mVx0ywXT6f63MqI/vlbuj2+qUOIfx6j7q0/\
AgOAKDb4CV8+B1N0gthFnXfGttzb9K49biKC0+YgmdGth019Wsonle1m9Wxc3M50pqaS6e/\
u3RdQSzXsA40RlPOA9vvuiiWIf0/jAf0AkCYineQEVtksZsYVuuaYZEKJ5THcYvrkVMI+\
Zmu1qPGAufljE1T2PczuwTqZY1GGRoulQplGP2NSxGLV4oLs6pZrUPWZQ1wh0Qk38b8sgCAzTJER6L\
DCkRkzJHEOKYYo/\
LlPcpQmiXqtIE0Qk93RD2pqpBZ4X2GiFowWGbnim61LNppblaQ7xdJfZnqeTIHAdyU3PChxN04dp3s\
hp7jbDpNQ8w8Yjjh4QTbMIF6YrOHNdyanFiOmZAXN0putWoGuWcJh0Tc4o1yxbC1yLmdIYJnUrJ+\
VTWHBZlp5uagbRpGSucB1OTGG5HFryXJe7VJgasQBXGheUuJ40bT2grkMd4ZpSukywYWK3c2KfJ40m\
DK1MTge/1BCcS8+\
1HS5cwzJ1KZjjWCa1pBVYNLACV3NsizuO6WowHqa5ga1xUxijyN3JySE5aPDUs0rNM02pa4ZhUoNDH\
a7DPLQi8HTdk57NYT+Ww11Dd11Q4W7gQbeECs0V0rJ0Yg/\
Te3cPXhZ3LQURucOSTiRANOlRZUJQj1swOM2xBHUgXEtqWiClICbaLT1JXGpR2JAtHEOjVCcCOYRGd\
Q6hBCNcokS16xF9irqNVjDGdMp0WDk3iYYmQbUuDDJ1UOZCh9RkXA8gVxbYui4syhw3IFSOMM87GcW\
SWPv0iHB0aVJJTcPihiUs3Va6FKbHqONQ+KOjSc1lTgBmbAZx2K4QUidQPxRChum9ldHLXa/\
cOop22AZ8jWumhCUQ4sBuPE03TCE9YUhpmkbgGpS7jBOLwcQMV6M2I5QzR4zQ4u2MWtFG++\
QMl3sGh2sRXdeJadsOsYQkXgAWACoSRkN1y6G64TqmaemMBSakb0vNdAzhjWjc+\
49ClsaeVJL3tlv7zUZ8cO+jToOLAa22gh4fjs0thzBP14RuU+6BIWowpT3P8KBpS/\
cUEjjwFNsmAfizBJHC8uBfHtNGNPuD0Xw8E1IgwWZiFzEjvucfHwZhM773MOy0+\
F74XLRKXGmOtGHZtgbDkvgmBJjKKKN6EFhcAA+\
pFUBMglgWbN0NHJi2zVxDGI5ljICn7Upc1cFVkofUJ6qnwCC3IoO6DqCGYAKLBJrQPG5IYkCOgusK2\
2zbINwzLQm9EcY1eAcMRjM0/ADw8hHe95uVGNx+\
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\
cPTVumlwVdyRhI4WVHTL+WdZVWmmcRkquyN/\
P8AGu3mRNf8Nm3tROHhVhAeVfXIgWWls6fGi2fVI6dd6j7LqjyPHnniiwizp8jFs+\
qT074KMsuqPI8+Ofiizuzpb+\
msuuK0r0rNsirPoysOv8g2expcPqvOOO2rhLOsyvPojKNe9Jw9Ha6cVXec9lXbWVbleXTHkS9Cz54S\
V8+qP077Kvosq/I8+uMrNgqYPVVeOqteOe1WDbOsyvPolSdspDF7alw7qx457VYms6zK8+\
iRIzeamT0lXj6r/jjtVj+zrMrz6I9vDW/\
ENHsqvHJWvXHarbBmWZXn0RtHbVQ2ezq8elbdcdqt4mZZlefRHStt5Dd7yr12Vv102q0UZ1mV59FPp\
9jocvZUff3Meu2UW43OsirPo9eezkaws6f1G2fVgafdineWVXkeHXi6jZJnT9s3z6rjTrtV9Syr8jw\
67lQbic+esm+dVb+ddiv3WVblefTb09lof/a0/\
tZZdeBpjzqYZVWeRwee4iCK2VP17bPqtdMeBTLLqjyPXjvlQS2zp+\
47Z9ZzpzwqZ5ZVebY8dylX9MXT2CENP674HZUls6jRTvxrureeqFNh13/xx/\
9h3Vdn8uZ7U393wfmeavM91cZw8NcCCaP3VLv4JqPY6D3VXgVbkyFP4Wz1gUdKDrubfv7r/eF/\
6pd6dV1JDwZ/mTwVrY5c7teifqcA955/EL5YJ+tPw0isP8O/NFnfO2jE6+\
kmbGjrtextvu2XgnUSBW7jaYfyf9iJk/\
REjLh7Hvjc407NGP0l6EodYX9pp9NieWDRq2rm4bEyar8ZJursF1k87KNnQdeUqWwf0WaHJmFUDn99\
M/pbqRlZPTOK53Z0Xu1ouaIdxWtIJ9KTc6IRJkXWd8QLEc2h6Tyb1LfTQNOv5tDUs6M5Np1bQ/\
rrqobUy8nG2ns2LXrihrZ/8M/+0//69T/45n58tdtfVDWMSvsKB/MMZ3EL8Wp+\
0hHuv1UPD9uK1PbLdiRiNZUSu+MJmvXr3Isa+/uA35V4+cuDBlNnBKx+\
3orpofhsTIFvNGmcfJqr7rVk4/2zk5b9lNGJmx1/OH4T68NPWxM9ne0OP1qDMj+zajq+\
JjeDnPxkDVMKeQjFPu/1l6pVt98MA9r0WRQ2mwCmnrt9j9CnaHzZSA7kWpnjMY0Y7VeHu22MWX6j+\
0CXzHge1n1KFd6o4pXdh6qRa8RPBJXZZuEb8QfVyD0uPFyN7EH6THYEXnpo3VY66rTylCbsoBIYFZp\
9daupxrsB6EelTdDL5zWMHVyKPH5WVemVh7Yy6d0bL+\
w1m33RVXzkDWtJ67hyS7qPvK6WGGM9FRfPeVRD4ePhMsuOHC0dElkVXxYqNqx4UGXlZwcPtKyEoQf0\
SKiDM1VeufhJmKRJH200O5H4bOxxZI4KYpHkxwGr6iZU7HjJSCPuno7X4xqhbycSoroBpsftqfmEfx\
A2Wr3pksV0GB1/P41yChOKs7LTVRdBvAo6B+o810LfCwK5nJ21qtrlL6c9MXmpn2Uub/\
9RhzYniYDZuGs2/zF5JYVYsIh/p6usFE38lexXfgrQheFeppq0sCtMWhTOhZ13Mn/AqYuqaaG/\
EonDfEb/O4ctlMMvTePw40ZLpevtw3Zy/\
H1HywnQNEv7Kuc8k6SYY8EWyoo5bM1h63zB1iLlvOrofQZfqfdWB65qnbySEQ918spG3T/\
HeILOb8Ucqt8FWyqlcYUhtUk6Dv7aVsxEiw9Alb+k0u7RXjoew/\
mKCNQyd88fztkK2v1ulyvErNOwrMuPxEjTuvpMHIkoFutzEzsLJlZU8+\
u2sXjpkzBdCde3rhXUN7er2berXLXjW1QxY+\
hO4oxamfRuPWwfr0NKDWVC60m4Xm822kFIIz5sNAtj5qRJWO9EkWgl3XrHtBwGXhT5cTtxldOfYsvf\
Tluurn9Hq8cdse61eoJBsVMX0EhDKCl+F7Yl+ppvtNY/ES/W66I5Yq5+csWPpyEGqik/\
r0fzWdNT1b+y2a9F86cuoX5U6U2Wq8XIO/Sw0Tz2b/hhJ2JIN2grXt+Nwv5SbFVILcWuXy8/+\
KVo7B8k8fJukzZa/eKPGkcNdcZteZL/8k6E+JVNsJfm5f/P/1af/94/\
aPaS36ZMGWhveeaFemH9dG8pQLYEYNQE/\
uLABP730cwbTxot8TAS9Lmau2y08jWooxcNXBhcUfBJ5zAQkVo9Gw8+\
eF0N0yqdpW0p3E4Hx8ezoUY2CP9Zb5q7sGZhPMuNRdJpf9EQL9Ixp0oBG+\
Fk9Kx6tio97c1Va0baOw15p7Qkt4I4ksO2urwRr26oaY106Xy1x7vD+\
ePF83wqZJI5kMVXrUio1to8dyzM5VRs75jrsIBvcPfsnlwYO33MHlN35unj6aWPFS266JSTWUpmarm\
BVjeYqh689EknDSqTgGGGpN/rUpZhl5vEh+IfFR5CNIxikd+4Wrjxsf/\
jX1dIs94K15tha19E6wowEBn/3iRUyy8Xxdf3IqreJ8pfXnxNC4FKLNzOg1YG/\
V8goRFxIZRWmODeSML2QxqlJHqhcGHMUHhIn4s0eeGoAhX83cJTeVEf+\
bf4yu8E3YgZQGfVgub8FaofEje/y/oXqll/\
rtNKqLgRhAkS9a6Z5q8VrsQrme2Vk7jVZ6LdpEyM2f06TF9x7L0FubExuMZVXnxjX/zKIf+\
CWtdIW8/TybvSa5Bv8DtrUFR3//\
zfGHteeKPX1uLz4zHb7k3JjKpjkumXXj0rIzNTdOUet1gk0g7Z1Gteq86FVxFqpYWQpTWMlWWfk5pi\
2eZEqqrewte6ZHzcrqeKt6noI+RQVVQ85hrnbv3bzcxqB7E/\
w5uFeEWNQ4iofnkQcHoucXKZEwPIpHg9YhhlYOi39LZrYcDkavrE8PXCQMriXtgfORx+2b8whFS/\
MWK8ZNxBwFGtupXHtC8j2m6L6GH4Ui3/yC9mv1b3QvyD1G8tfvtR1rP+Kv9Ox1haSf1ilyt/\
KV96uZQaadVwndeRJ9uV6shzlW4dy2mG1quk8krInJMv1Br8ipwc9VbVZ3V8PEEdB+U6VvbS/LlXS/\
WsO6tn7WE3x+\
lVNVFylNV2qQBfS69tIcdVaLbFacR3wuhw3F7T95Op92wuxf1JnfBCdwuM4i4Z5Vbli3obX3dvV1io\
W35r6HI9Erj6+\
efQWrXu3tAo78LArZNHZEtkbqqZ1CPBv6BRgwZ4rofN1W1h5RHS8PC4x8LNR0LSTjPpMel3SyzEP+\
5iV7rXBhKopAtiC31090VTsCRla2BY+\
NI2b4y88Vb2jGpzDodxvnzsSr4pdrqorr99wsqz8IVC1v4o+coe3c+w9sqeOETHIhHZz2x/\
kb9RK21z9LDTaPJnIkY745q/VPtgveZfRp152/0fFcgWtthZ/OZP/6JAa4gPf+\
EfyeX4Vk86Ga1SyaVBjv1Vv8PQC4p7bVW5kL/w+6j0ZsmcCu3pmu/\
1NLeDQtB3hx8MDLTf6d4VhwH8OV9mv/\
wM9R8PCmqhN396Q205kykkjMo0M23lRJbjVWVb5Ye736uqEnVrBebeAe7lYiiHxXd3trsmuRNB8dst\
pZR0csNf29l+2EgOaTv2b+aCwUOfop3ZljYl585IFF7yHCmd7kxCbqj9/\
XIG0pCCgw757ivf8Vx5KpKDkPuXdyMB2aqFZCNylR6irtSFspTu96j0pfSq5mAmo7rYe41DEWdbGF2\
4+qB3RY2z5fN2KQr519I9e2j743QmSJXbVfvMo9ydrSAOm51EFMvH157S/VZDNlhqw/\
Vvoe5LaRaWmfulVDzKfJdrv/jzn9dQ4Vq+WONIlDYZ+ZX085f3o9vp55f3o99JP391v/\
5OP8FTi2Xbn7YetwBLQ7NJOSbsUq6WngzefkU6WUwbi2ZcnJEbmp0byctK39gv9lBoYjRaqz2Fw0PH\
E2OPv1kGtPVAIdo6Q++2KYD663EGKhL9gOO7tVPD0Su1PbUjlLKxyXFzsVz3Ulcq5K5LiOF5X/\
mLNcDyaizQzeYxxOVn/9X8S591aCtpJP14ddk/\
hgxeqkwmXgRQlpvai2q59oacsJeJrebLlgvSKbyl3U9F8zfKy2VGYMFldQkABW0MWuyNnJnB/cG+\
m5dhOuMz1KU6ODX9nVSLXZNxib3iVfQ7anI4WxxfP6Bqxy410T449fyq2WXEDKABwKahxm+\
yPZAyLadVp/YwOPP8Wsyg1Al94wzgZnejge4Clh78LRTytyxI/iDBvd4M44mD+\
2BUmEf3eXSfILpfmUf32YnuUzT1Vu0pfdk47ByqPfima/DIbuAwSyfLxXF1zzWmk8vC+/4/\
rt37HPgZ35O08XXY+\
poe0ta9R2qBGiAyKp10cW8nLfJ7aZHSjcn38K75Cz89NfXcrO1GoTJxwdNNEk9TO4vf/OznIy7/\
4OJb/ObP/u18+GA+\
fDBPMM5ygnEKwweXalupoU6eX6zW0hHQ08scVmrfV9JwGsFxPiQwHxKYDwnMhwTmEXsesatH7MWyH8\
0j9uuO2FO0crmG+5NL/Xa/G/pJmIggDJ/X5tnEPJuYZxPVs4l+ZBsM1CPiYKF6/\
2rubyrFaA6mAq9aceMv/CGK9wZIbg358tbFTX8lQ2Z/OcXXTX9JwSIe64FU9H/v/ru77/zT/\
3ffX80RrABbp7nWZfGbn/\
3ZqQHfW7XsNcHsVBR1vPzkKLignSJbuwLZnjrsHkoRXPBTj0DLRNPuqujza4g+7ZzaWpduzb/\
RVSysNJGNl99/EPrRwGDmtOogp8bZ2zW/N5PwhrF2u+Y/byBhf9Ms+G8io4j2RfJl2JTINr/ITp/\
NosnkDC4T4y5Spjck7bkzYrXcPO+Z5z3zvGcW8563hp156/Kmv9ab6y1lO++8989/9tO/LmQ7m/\
6NganSglRfkSX5P/1B59M2/evlqLu1sPkDs/S9JKOb/s3BTK9+ARcH86xSLdnw0e8+8FfzYpv+\
7RE5Sh0iuzMqQ1A3bg3FZ0X3Rr72oRuV/L9fYSXDpv/uycE1+tf/Sn1+\
48H3lH6f4uz1lOH3Wm2XMohnHnfncXced2c27l4pePHW8qZ/Lfu9FbGDxpHww1OIRSmaFm//5CfF+\
5vkrnVXu9tO6Z4Y8d+nh3/yb/597UEhpNxJmc74zUb5wyg9BSs9Mjt4DZwjeqfUn9JWQ4psjil/\
2UgF8uzoVPleJngVOlPWeiy+nW12dm8riJP0UGC1XduL5mZ+\
UvQDIklAPM0LqLBdyogtdMs1zYAQzWO6w/DNrYB5zNRsV+MBc/\
HDIq7ueZzbgXUyxWIrihRNhzKNesSmjsWoxQPd1SnVpO4xg7pGoBNq4n9bBkFgmCYh0mOBITViSuYY\
UgxT/HGZYvdM9gJNEJHc0w1pa6YWeF5goxWOFhi64ZmuSzWbWpanOcTTXWZ7nk6CwHUkNz0rcDRNH6\
Z5I6e521Q7yxdIGTYecfSAaJpFuDBdwZnrSk4tRkzPDJijM123Al2zhMOka3JGuWbZWuBazJTGMKlb\
OSmfqlyhRMzTTc0gmpTMFa7DiSksl0NLnutylwpTI5ZmORoXlLieNG09oK5DHeGaUrpMsGFit3Niny\
eNJqCkTE4Hv9QQnEvPtR0uXMMydSmY41gmtaQVWDSwAldzbIs7julqMB6muYGtcVMYo8jdyckBPxo8\
zQFKzTNNqWuGYVKDQx2uwzy0IvB03ZOezWE/\
lsNdQ3ddUOFu4EG3hArNFdKydGIP03t3Dy7Uy0YRqzos6UQCRJMeVaSJ1OMWDE5zLEEdCNeSmhZIKY\
iJdktPEpdaFDZkC8fQKNWJoJxrVOcQSjDCJUpUux7Rp6jbaAVjTKdMh5Vzk2hoElTrwiBTB2UudEhN\
xvUAcmWBrevCosxxA0LlCPO8k1EsibVPjwhHlyaV1DQsbljC0m2lS2F6jDoOhT86mtRc5gRgxmYQh+\
0KIXUC9UMhZJjeWxm93gYXRWoU7bAN+\
BrXTAlLIMSB3XiabphCesKQ0jSNwDUodxknFoOJGa5GbUYoZ44YocXbGbWijfbJGS73DA7XIrquE9O\
2HWIJSbwALABUJIyG6pZDdcN1TNPSGQtMSN+WmukYwhvRuPdH93Q+\
6jS4GNCq6m7lfDg2txzCPF0Tuk25B4aowZT2PMODpi3dU0jgwFNsmwTgzxJECsuDf3lMG9HsDyr1uB\
6q3T32wueiVeJKc6QNy7Y1GJbENyHAVEYZ1YPA4gJ4SK0AYhLEsmDrbuDAtG3mGsJwLGMEPG1X4irt\
H+V5xRM1D88gtyKDug6ghmACiwSa0DxuSGJAjoLrCtts2yDcMy0JvRHGNXgHDEYzNPwA8PIR3veblR\
jcftmmLd6NIQXGAAOSKw4gKc/\
UhSNUaIJNE6k7GtMRPQLAkGUKAU8ODA6xpm4LQxSuGGFXH07Sgx6yM0EYRXgByMNXONENx0Tc1kAzk\
Aa3XJ0jmEO9BjVhcIENbNMdoAjcGaonzrQazfl61IjbWS9VhcSSyemO7WieSWDwASCHmNTkLjG5dAl\
1hWNB4Z6DSOyqmIi4gryCOLrHiTQCQO60jjAwGtK1M2obDrdgaq7lUUFswBMAx2SuZgZIcmwXgEAD4\
SFYulpgm5y4tmVBtWDUJHyYq9+\
ahKsRhgYhWXYgdOK6OnDXCIgwARICwRTRQMInCBFEx5dnA7gpIivCsOmanpAO0olhzh5Mwlk/\
OBZ4g6NRIW3IQLOAFLqhQ2428gLAXCBsiTgSsAA5hwn3RRKFSGKhtIVLAqA/\
AtQmkloOIEXOLNsLhCuJStmgMagKYZnoCJEuNwzDQxBFCshEgAhjEqCIcppAugLeopm2Oy1ufNpWpd\
CrGERcE1ZNqOYaNnM48i7EAU1wE6HbcJhBkMF5SEg5AS+\
GzjTDSvVqWh7jEoY4wvzdSoz5gLMXDXZQMjFLCiAU4QaycMkDAyEXqX4QQEaW4SDco0/\
AKcISEjsPQEKQUDkOOgAIBsgfp+VpT7xMVFe0yJOLKARc0pgpXE8wT+o6Begj+\
wYvtpBUgwcYQWAimlOkKzpCgekSpJomoYiv05r9XniyS2rU0hC5bcNCjwH5ioEEA06owykl0MGmKlF\
F8h5QhpTCMxFFdenBWVyLOp4zAiy8Srx9GUbDoRwZFbJBGJSmm5CPdD2NEgQigjRKV/\
iJ3pKlw7CQTDlWoJIeg0PFpiHQG6IjAlI14N8oRiRfREcNVo5MukIjwBNFWmmiyyhdZHrofqA35hhA\
NwMWFiD51IXhIht1wRz1As+AEdjIkEZEJmc0g3sddMsbdCBIfnqkeBIvSrHIsJD+\
oOuqCYqcwfEQiSxucR0JvIV/kHwZiPKE2+\
g6SWlxJg2AhfAMG1AcmOplksLOIltxHKrNJ28UryXhYbySDYPJi/\
Gtwq0v0vGDgYsZzvaGTLOGpuz2Bo9GEOjK5STK9ffqC1sXNv13TtzuozewNJ8hmc+QzGdIKsyQ/\
H8esFsE"}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844432572492`16.34595460029065*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844432572492`16.34595460029065*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844432572492`16.34595460029065*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.920844432572492`16.34595460029065*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 5 suggestions\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "2c0120ce-3697-430e-bbc4-b390cfaa710a"]]]]]], Appearance -> 
           None, BoxID -> "2c0120ce-3697-430e-bbc4-b390cfaa710a", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844528474777`16.345954610913324*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844528474777`16.345954610913324*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844528474777`16.345954610913324*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.920844528474777`16.345954610913324*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 4 suggestions\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "3836c8b7-5540-4831-941d-0a58a5f66141"]]]]]], Appearance -> 
           None, BoxID -> "3836c8b7-5540-4831-941d-0a58a5f66141", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844561926484`16.345954614618616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzsEKgkAUhWEmJIJ6Cvc5uOgBynDlyqlNEXKzOzFwZ8a8Y4lPH\
0oL2x34/sXRglclfA6+R9aCl6Uft444KgwHFeWGUImrXvD6hLYhCDi6+PkrlmfGlqUGM3g3gAUnj/\
hG8g22ssDe1EAZMLLMp+QyJX9w7ww95lxVc9+myS5JkwZqwhCrzXhp3z47iy4ocfsCjbdEJA=="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8215dccd-4388-4c41-ae49-121898fabb3b"]]]]]], Appearance -> 
                   None, BoxID -> "8215dccd-4388-4c41-ae49-121898fabb3b", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.920844561926484`16.345954614618616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "OEM6eJxVzsEKgkAUhWEmJIJ6Cvc5uOgBynDlyqlNEXKzOzFwZ8a8Y4lPH\
0oL2x34/sXRglclfA6+R9aCl6Uft444KgwHFeWGUImrXvD6hLYhCDi6+PkrlmfGlqUGM3g3gAUnj/\
hG8g22ssDe1EAZMLLMp+QyJX9w7ww95lxVc9+myS5JkwZqwhCrzXhp3z47iy4ocfsCjbdEJA=="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8215dccd-4388-4c41-ae49-121898fabb3b"]]]]]], Appearance -> 
                   None, BoxID -> "8215dccd-4388-4c41-ae49-121898fabb3b", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.505298`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.505298`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/Abstractions.wl"], "Hash" -> 
                    "8d8473bf9d0abd8f32d20b81a29112bf6f6ec7fd04b76b7ee06a1b59f\
b3e534b"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Abstractions.wlt"], "Hash" -> 
                    "d0cc25717e28d889f1584540523beba22832c7476371fd2dff313f364\
31a1907"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexigramCount.nb"], "Hash" -> 
                    "cc673f7c89945f5ce22aae23c66c80d67d9c3e29988598c5f1682a8d0\
e910fd9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 31], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 31], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8d8473bf9d0abd8f32d20b81a29112bf6f6ec7fd04b76b7ee06a1b59f\
b3e534b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Abstractions.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d0cc25717e28d889f1584540523beba22832c7476371fd2dff313f364\
31a1907", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["31 total \:203a ", ""], 
                    Style[
                    Superscript["31 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.880872`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.880872`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexigramCount.nb\""}\
], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexigramCount.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfUtzHFl2HkG8CL7Z5LRm2o+\
GIcghywMyb75zoiUSLALTtMhuNBPdrWdM3ydQZqGylJlFEu1QxNihhTcKhT3a2KGFQiv9Ai+8cdj+\
A/ZKivDGnlk47IV75bAjHHb7u5lZVVkPsCur0GwWULVAFfJxz7n3nPOd7z7yplpILj2jLx9Gr2Silp\
Nbj5upjFuxTGlaj5o4rBaSlWeRvkAtJUtP6kmqLiYr+/QAR8LVsM25TJLwStg+\
OqLx8YeSinDhd9VicvPRcZMe1fnTSLQbUt9+sXv7YijT5Pr+\
cUsmMv0iasnm5mayvEsbieycvdM5K4+YFCHUkZub4fIzlH+\
Ma67sy6NWAwdzDfOCF5Mbe7QpQ9mQPI3ifplLz6BGR8hysvrjuC76b+58r+\
pC9KmVZO1hO007zXC5qFFe7nu7O3tx/QVU+GI3jprpTlM8k0nUjrkM13Z3HtbTI9pKwptFw+\
Cmj1FPGWvltSqPZIMeS5Fcz0Xstptct/\
hJrbO0H7dltxqXt1stSWPaROMvfRQ1e2fWHtJEhulxQ6oLA3Vf23lBG22KlknWtttpdAQT8+\
7ZlacyPYxEeHkvlmjbtP6iVOh2o37QPJLNtNOgyUpNak/pfPcufXxED2RY/1KixVaLFuve1Sd3eb9+\
JJP4Qva5+qB7BDderbXjGAV/BoVleG0X7VujrQ9l/\
eBQq7C8F72EzIXkzjZLokY7leXrk2tP6UGzruo88+Ha1zD3pd2YHmVGXUwuZc2j3Xd54+d/\
9rMNFLj2qB7DZ3Sdcf7Zjx/WokYUx7+Uff7qfnw7+/zifvxb2eev79d+0K3x1TCN662Pm4+brXba8+\
L85PUaVIdie1SIevNg8PTlTK1MnwE7Xs3OPKXxQb2ZlN1Yf9cu1C4M/j5Zl5Wes3fKWeh+\
d2J7cTC2B4OsuDW8sbFHeUOm2zE/RHtthEsbP1rfCC+jnEdS0XYjDb9X+PzjVB5tN5tRjiXh4ld//\
Ocl7PiDjXufJvCge4rWv4yaX9Ij2rz3SL6QDbh8fO+JfAUDNmpw5+TebnbJ72SX9J1g7XpDlE//\
5Cfl81vkrnOX3G1lGm90UUorNk0bXNnYR6Ua2lsnrj+k9ZVdgGu4Ftx1DMcM/C/CxY1kI1xNJI+\
aIgnXNsL810Z46ZM2bab19LjnSOFxM6WvdqP4KFkE5PZXtXPVzcIPhsK5c0W4CsdvHzWTUuvkkbv0R\
KreZUuo7fA1I1Dlsj4EqJOpHPT9G4UyWsMML8bWZVjO+\
Ap1pIbwCR2QY0utXawurATGSwNgfCc8jF7qaG0e1A6B5FyD6WATXfmojewXAwWeD527juwDXAFs1RO\
Ncos9K2dFZ/6QI8vgrd+\
yGyzuR6231wFuaps06k25FyX1IuPmBl6oLXSvytPtd0ITao0omZgmDOaXOU+\
Y84QJeMLKnCecR54wRVXf3Xiomzi3eR4lUXw8ea2Hep3h0m4dOI++\
5ejeXyjegJ9shFe1FtvxQVujXLjw+6fWgDeLeHlKAUkySSdvuuWS63R+rYzoj6/198e3dCoJjxOU/\
cVHUEAKjQZfQKvnQOpOEttM8q749jtb4ZXHTWRQ2nhEU7q9sBUu67ZJ1Pt5udsXt3Kb6VbJbPfub8q\
4KRv3AMapZjzQPbn7soHLPqTJYfjAF77tWUwFwqBM+\
MoyhWkwn1AzIMRkylWu5J4Shs08l3lSGi4lzAkUs6Rj2exkiWUbliXaHuUGDYhLPYdTRzDTNyk1lBl\
wi/oWMwm18dtVjDHLtglRAWeWMoituGcpOSzx+/\
0S92iKrNcsy4QQJQLTUq5hGywImMt44BnMMq3A9n2KSjlOYHgkMH3uBoFJGPNRaztwmGcY5rDMG4XM\
vUaU9lXPcnGLZzJiGA4R0val4L6vBHU4sQObcc/\
kpukw03Ckx5VvC06F4bhodIfbyhoWdasQFVJ4cH9bBqZtWMRQivvS9wSxpeMLQ7DAh12ptA0CvPIMI\
SnxA2W7JqO+Rz3p20r5XPJhYbcLYZ+m9QYcrV+cCX2pJYVQge96QvqWY5sK/\
uE5NnWUwxzKHOYbnusIz7N9gxiCGz5zDWFLa5S4O4U4kIO6yCKrr3q2rUzDsmxqCZjD93iAWrDANAM\
VuAL+43jCt0zfhxThswC2JVQavlSOYxJ3WN57+\
4iypOMpyMhtnrZjCaFpVyqXkgbCgcMZniOph8Z1lGEwpSSxUW8VKOJTh8KHXOlZBqUmkeAQBjUFGmV\
USPRJ7URET6Lpohacc5NyE14ubGKgSjCtD4dUhJGA+\
7AhtbkwGdqVM9c0pUO55zNC1Qj3LCQORH1PojAgzfGIJ000HHyDOL7t2EhuFpOMmiZalXu251oeUcI\
USlnEUpZrW4QSBMoIS+YS+wzZk0ekZyqbKmpbjrAc6Ziu9h5pB5x6HgUCeIYyfO4xVN/\
lMIDrS6lMAoeDC5Bhee/\
k8opg768dRcu5FqIbsKXge4R48NTAMC1bqkBaStm2xXyLCp8L4nA4teUb1OWECu7JEX5zO5dWjoqeO\
MsXgSUQzMQ0TWK7rkccqUjAoAJgTMFNKRqbmpbv2bZjcs5s2NtVBqBXBiMq98NHEc+\
yXdaS93aaB416cnjvx+26kAN+1GRdPTxXwKQ8MA1pulQEUIhaXPtLYAXwLTAXjT0eYtN1CYN+\
jiRKOgEiOuDGiGr/aLQez6SSoPRc7iFLJffC4yMWNZJ7D6N2U+\
xHz2WzTyvDUy5iyTXgygrfBJ4kOeXUZMwREghMHYZmksRxEF0+\
8xBMLvctaXmONQIQdyppVYNWaZHEn+i+\
CUe7lRU0TaQGNAxzCDOkEQhLEbg9l8LUaOq6FhGB7SjYjXBhIB7hMIZl4B9AvRgR779eScGdVy3aFJ\
2sVVIMwKOE1gAtFdim9KROhvBpokzP4CbyFQPwObaUiGZmCTRrBhRwROnLEX71QSXFTvIzSThFQkNa\
QawIYlqebXrcgEymLOH4pmAEl5gWteFwzAWamh5wC+EM05MR4FHNooVej+oJSKYeiNFJuM/lTM/\
1jMAmcHgGyCE2tYVPbKFAbHzpOTB44CH3+\
zoLI5MJlxHPDARRgD9iTxsIhYJPaavPzyjQVDhwNd8JqCQu4AmAY3Mf5MpHMvEBCJTJAOnZN5hrC+\
K7jgPTQlGbiGGtfmMSrUY4GhrJcZk0ie+bwF2LEWkDJCTSN/KPQkwQIomJr8AFcFPkciR+\
27cDqTwQmGHNHkyiWS8dl3RDoFGpXLSB4QApTMtEu7lgIoA5JjU9RdMxsBwb4Qvahkzi4GoHhyRAfw\
SoTdRqBYCUNXPcgElfEU0SYTGYCkSAIG2CfFmWFSBtg3RyyZBhbAIU0UHDlC8RLYbt+\
tPihtbsIKZHGcCVFePcBVH2uB9o2HK4NEGwpYmMA1Q1BPwdVFuaAViiE/\
jcUcRFAgbQIBcZUHlaxT5u6avQBx9MBTbCjVDDt1zuCVBQJChDChssxvK4RUBmA3BzQdBIoB+\
G5WQOZzsBFwoRMiIu/UqKhcDZl3V+\
2Of7jpKATiIsdEiUYBa4ACdwJBjPsTzwEPAdQZEvwXEDIBwBt/\
Q8tCOyFKj0tDrty1ep7gWWdfKRHgGYBrelH0geKBgQ2QgdEejiomNqIDQtxmzQDAoeZSJH2T4B67YJ\
paMMWC0e96OTscKgjgFK4VoOOk8gUhaYD9DBBFoowJZLNWdHP4ZRDq4T2EjvpgoQxb5DvcAbgWJBJd\
0+j+JhjgGqB2IMhzJMG+2j/MCgBBmSgN+\
ZGtgRD44JxwLL8xym2ZglYGIbYYCgHJEpq2WkzXKqDGX8os77U6apYRK4ScF3beKbygcFRU8MHVPPA\
uxa8DAGVmxKywdN9qEcDVhgwQlcULcRKdMbreB+O43iOh3I3h+/\
0DrJl31J0nLAywL0WyQFmfECpEhHOMJEX8bBD7BCC/\
SDCBe9SKUcwdEHcMFXLRc5gtlb4fXtRiN6uaMXC2QDqNkA/lZ4tRiiCA9pSw+a/\
nJpkKMY2Qh51JJf6IULMs4u217c6gzbJIsoNvuDuq6fdO9vyuNHgORjPYMw4ta8sU44petfW1BLyfs\
nlf6kflRPpYACJyqfz5N06vgrr9EzHyjPLlxI/s5JF26n0VF2UbyQDbo/eXCKCo5V0olt/\
Sx6mRup5ITfXI/aB4WrjVfrrNI//\
ccPcPXNfCxTisdNVYcvaSNf7M5TdA1ZuzP62t6kmL5o4YSLihmY3oiaVlGvoSmpup0kEcf9N8rHoHG\
yks8iQqdbpVOfZQOwAwdzUtMdcsyDN2+X3sqAIQGdZj5Jcu19+Ha49FSmdPvCVrgGE+3T+\
ECmtTsIwNz0xYHLW+HyPBTnoTgDobg0izEIjnTYq8It3SvNpo9hqoyZ64vudI/\
mrpCfgA2v6nH88pU39IGBi9bCKE61mKQn57o+VsyMRs3yiQ/\
rQsimnq5I0AFNlj5qNxpb4eVPW4KmUleltpAY4807RO201U4fP9rc7ExY/HC8G1tQFjdd6J/\
tGPPmF3tRsrmZLQyoctvhZLcd4CBUXUyu9U3WlKZ1s9LIWKWBGgJG83N6QuqRbDWiY7WcLOfT/\
qvJUnbq3aGVDUvZXBa+9QoHfF/uzTXpOfCnUTuREVicngP/cUxbh3WeDK8i6E7w11Zes/\
gCioVghlLEVvb59/+mr9ReSKzh2PETPZ1XXPmL+3rlwF7UOD5AOaX1NcV3PvmfIcSlZzTvBda+\
zv7P1w/Uvn79VeMUNMbdY8k6vYLGq9q0JsLB8bxwM2yg/\
6FXMGULMe6OdVMjgrwPo4aYAByGEnuyhGSbhJc61CDvGoTLmRuPWo8yuIhC93KAW6MWw1zN7jpp9cV\
yvigr+71UW+5Nwj+E+gexHqHud2yVff7H/dctqMlWYCWXOlb6xnC9uvMCt39Im6KRLb+\
5kdW7ty6oL6KLPH6xwIjuv4U22foaveKlb/XLP/9n+vMf78ck+/yX+/FvZ5//dj+\
89KTefK5lDyxn6qa/q5noGnzkOfKRxsuLjxUaxRvL7vxQ8ufZinU9r/\
QCGbziLLa6qFbG9LF2lrOyhegVhVRLVNUyU7WEVDEPVQ7X7ybAO6R+\
plCpIH5F9yjv8syR6XXIVFDkDjJ1GPMcmebI9PYiUzGmMFvIlI3JnnFkGqurUw2hiuVvXYjq/j/\
HqDlGvS0Y1VuhuogOUeGjbzdCjVQ5G2YuwClfvz4+OnWHUt9qkLr4WnD6hjW1b7M9F09wweL/\
YkQ0GzSsatnaB6dt0kuDTyeNFHCyoaZf1TzLpsyYxGSm7I78fwcW7XCia2GLNnfj6GibRS+\
qRuTACtvZM+\
PFsxqR0676n2VTnseIPPGZjNkz5OJZjclpn4qZZVOex5gcfGZp9uy3dFZDcdqnxmbZlOcxFIef6Zs9\
Cy6f1WCc9qnKWTbleQzGUc+8zp4NV85qOE771PEsm/\
I8huPIZ8Jnz4irZzUep30qf5ZNeR7j8TV7JsyeKS+d1aicdteKWTbleYzKE/\
YUmT0zrp3ViJx2V5dZNuU5jsjBPXdmz4yXz2pETrvr0Syb8jxG5Mg9qWbPiFfOajxOuyvYLJvyPMbj\
O8N7ts2eCa+\
e1Wicdte8WTbleYzGUXsazp4Nr53VcJx2V8lZNuV5DMdKe37OnnGvn9U4nXbX1Vk25XmM0yn2xJ09U\
984s1E75a7Es2zK8xi1p7Nn9OxZ/eZZDeBpd+2eZVOexwCebk/12bP2rbMauNPuaj/\
LpjyPgTvVOwdmz9jvnNW4nfatD7NsyvMYt6fzTo7Zs/rtsxrA074VZZZNeR4DeIp31syeqe+\
c1aid9q1Bs2zKsxW1S4WhL57Gzmf450rY1rmWx/VWGl6zyHqqX3y7/vOf/uv1UL92uNhz+psvnO+\
VNt8rbYwAfyOQMHqvtItvM4qN3ivtdbA1GfKUXh8/cEtfwO5ln/98f/\
hH7VK3rCvZu89fpU9ls62We6Xo/zOA+1vhYfRynaw/jWK5/gw/abq+f1hP1rPN1VDXa/lTejuvJG+\
nGtzGsw4V/7CdpNmbLpLOK8/nEXdqzhguwVYJJF3abTd5kVjMqpZ5eKydOkQPTr/\
TRZVf4tH1oGvaVXZe0EabplHcn/56bvS3Mzdyum6UzP3ovPrRckU/\
StZAJ7I34sQjXIqs78qXMp5D03l2qa+ngab3C2jq+tEcm86tI/2fqo7U5WRj7SmbXXriRrW/9yf/\
7n/+6u99dT+52ukv6hJG0b7SC3eGWdxCslq8wQjn36lFRy0taudVK5aJHpBN/PEamvfK3I/\
rBweA35Vk+fPDOtd7/69+2kzokfxkzAbfbNAk/bgw3Rth4713Ii2HmaITVzv5YPwq1obvdia6O9/\
1fbQFVfEuqun0mtwNCvGTVUwb5CEM+7zbX6pW3EEjYrQR8jhqNABM3XD7FqFPy/\
i8nh6qtX6Nx3Ri1F+/tG1zzOs3Ozd0xIwXYZ279MWbVaKyc1M1cfXkiaQq3wR8M/\
lRNXGPSzdXE3uY3ZO/2i57Gd12Nuq08pSm/\
LASGJWqfXW7oZeHANBf9G1u3v8ehrGTS1nHT6oavfLQVt5698ZLe41Gr+\
kq3vKW1aR5XLkmnVveVE2sse5Kyu9v1EPh4+Eyz18l2vfyx6r4slCxYuUXUFa+d/BFlZUw9JC+\
kPqFmJpXLn4UpRnpo/VGO5afjD2OLFBAItPiNb+\
6uAkNOx4ZqSedt951tUbq242lrO6A2Wv09HzCP4jqze50yWI2jI6/H8eFhAmbs3LQVW+\
CZBVyDvV7Wkt9LzTI5fwdqrpe4XLWE1OXeixzeecP2rQxSQbMx13z+Y/JCynlgkX8nK6wvmwSruT/\
FW/3uTDcy9STFm6FSYvS+17nnczvcOqiKi0MV2J5VMzmf+OwhQ74pWkCftxsqW29c9RKj7/\
tbDkBmua0rzLnmYRijgVbuFbOYWsOW+cLthapEFVH73P4yqK3OnBV6+T1OfFQJ6/\
fqXvvJ56g81uRQ/W6YEt9NK40pDZJxyFc2064bIoBqAqXNO0eHaXjKVysiEAp8/\
D87oKtZN1vDrlSzjoNz7r8SI50ravP5AsZJ3J97mJnwcXKZn7TPpYsfRRlK+F63rWC8uZ+Nft+\
VZh2fI8qM4bOJM6olUnv1aLW8Tpaqa5daD2N1muNeotFNBbDTrMwJidNo1o7jmUz7ZQ7pudw6KLFj9\
uJq0x/yjV/N6u5Pv4NtR53xLpb6wkGxU69gUY6Qp/h9+Bbsmf5enP9I/lyvSYbI+\
bqJzf8eBbikJrp82Ysn1c9M/1rq/1GLH/qLdTLKt3Jcr0YeZce1RvH4Y0wasccdIM2k/\
W9OOotxdYX6aXYtev9N34u6weHabK816D1Zu/yR/UXdf3u2v5J/su7MfJXPsHeNy//v/+X/\
vzX3gtkL4UtyrWDdpdnXqiV1k93lwLkSwBGTeAvDkzgfxvVvPGk3pQPY0mf67nLerNYgzp60cCFwRU\
FH7WPmIz16tlk8MbrephW2yyrS+l0Njg+ng/V80H4T7rT3KU1C+\
N5biLTduuzunyZjTlVSthIJ6Nn1fNV6Vlvrlo1st5pJNp9S3IrNEd61NKHN5PVTT2tkS2dr3Z7Zzh/\
vHxeTIVMMgey+LoVCdVqW3DH0lxOxfqOuQ4L+IZwz8+phbHpY36bPjOnj6dHHyt6dDkoJ/\
OU3NUKB63uMFUjeOmjdpZUJgHDHEm/1aUswyE3SQwl3yvdhGwYJ7I4cbV04sPw+7+\
qkWa9Ga03ouaBjNc1YCAz/r1JpPY/XJRc34+pfp6oeHDxDS0E6lPhdpG0cuj/\
DIRGJqVUWmGCezONWg9pnInopsKFMVPhEX0uM/IiUAQK+Lulu4pLQ/Bv+UXYZp2MyWCzaklz/\
gjVd4mb3+T9C9W8v7BpJVTcZFEKot5x0+KxwpVkJfe9fhK3+\
ky2GpTLMbtfR9kjjt2nIDc3B9e4qotv7YNfBeRf0OsaafN5NnnX9xjkW/\
zMGgzV2YX718aeF97s1rV8/\
3jKtrpTMqPKmGT6pVvOykhmiq7c4yaPZdYhm3rNa9W58CqNWmkhZN8axsptX4iaYtnmRKaqXsM3umR\
83K6nzrdZ08fgUFVMPOYa5075O43cawexP8ebhWRFj0PIuHZ5EHC6IXHyNScmkEnxesQwysDQb9/\
TrqUBk6vZHcPHSwMpi/tRb+Rw+GH/0hBS7caI8ZJxBwFH1epWkdM+j2mrJeOH0Su9/KM4mP+3uh/\
hB6jfWvLuo7xn/\
UXxnY2xNNPaxY5W4VKx9HIpc9Kq6boooyDblcoouEqnjOWMoXULqbwSstDkM70Gv6ImL7qr6vMyPpy\
gjMP+Mlb2M/\
7cLaU6687LWXvY4TjdoiYiR3lpl0rwtfTGFnJchWWbgsZiN4qPxu01fTtMvetzGe5PGoQXOltglHfJ\
6K9Vsai3/mXndIWFuv1PDV2uxRJHP/0UVqvW3Rsa5V0YOHXyiGyfmJt6JvWFFJ/\
RuE4Z7utic3VfWHkEGh4dd1W4+Ugq2m6kXSXDzhULyfc72JXttQEClXZAbKGH7qFsSJ5mag0MC1/\
aEfWRJ97J79F1LuAwKZaPXSm21s0W1fW2T1h5Fr3UyNobJV/Zpwc51l7Zl0foWKQy/zffX+\
RvbPRtcfSwXW+IZzJBPZONcGnjR+sb4WWUWdQ9/F5JbGmLncWv/vjPS7KG9AgX/\
pFaTm51WyeX1Xfl0qDG4WrY5ugFJd26ai4ULvwuCr3Z506l+nTc93rG7WAQ9N0RBwMD7Xc6Z+\
URQzwXy+yXn6H848GGWujOn97QW87kBonifpm5tQohy8mq9q3+\
mzvfq7oQfWoF7t4G7hXN0J8W39vd6bjkbgzD7zS1UbLJjXBtd+\
dhPT2irSS8WTQMbvoY9cy3tOkL7lxE6SHPka3TmUkoHLW3X84ADSkF6FDsvvYZz5WnMj2MRHh5L5Zo\
W72QbARX6SLqSk1qT+l8j6IvfY9qDjIZ3cXerx/JJN/C6MLVB90jepytmLfLUCi8lu3ZQ1sfZjNB+\
ro9vVs1rruzzZKo0U5l+frk2lN60KyrOs98uPY1zH0pY2G5u1/Kmke77/LGz//\
sZxsocK1YrPFC9m0y8kvZ56/ux7ezzy/ux7+Vff76fu0HPYKnF8u2Pm4+bgKWhmaTCkzYo0IvPRk8/\
Ro6WaaNZTcuz8gNzc6N1GWl5+wXuyg0MRqtbTxFwMPGE2NPuNUPaOtMI9o6R++\
2IYH660kOKgr9gOO7G6eGo1c29vWOUNrHJsfNxf6ylzqtQu76vuF75hfh4gZgeTWR6GaLBM0V5r82w\
kuftGkzrae9fHU5PEYbvNJMJlkEUPZXtZvVCusNBWGXia0Wy5ZLrVN6SrtHRYsnyvuvGYEFl/\
UhABSsMeixNwplBvcH+2ZdhuWMr1BH6uDU9DdKLXdNxhX2mkfR7+\
jJ4XxxfO2Q6h279ET74NTz62aXkTOABgCbuh6/yfdAyq2cFZ35w+\
DM8xtxg75O6FvnADc7Gw10FrB04W+hxN/\
yJPmdJPdaI0omTu6DWWGe3efZfYLsfmWe3Wcnu09R1VsbT+mr+lH7SO/\
BN12FR3YDh1V6Tbs4lkP86dpl4YfhP1nYuPcpADS5p2j9y6j5JT2izXuP9Ao1YGTct2H+vd3skt/\
JLuk7UXkr4AOEYfYWnLtNthEu/OGpmejmxl4caTeXItso8TQttPjVH/1sxOG3ogkXv/\
rTv5gPI8yHEeZE4ywTjVMYRri0sZ056uQ8Y3UjGwk9PQaxsvGtkYdTSJLzoYH50MB8aGA+\
NDDP2POMXT1jL/bH0Txjv+\
mMPUUtlzdwfvJWv93rin4UpZJF0fONOZuYs4k5m6jOJnqZbTBRj8iDpeLDq0W8aYrRGKQCr1t5Ey78\
Pi7vDpDcGorl7Ytb4UqOzOFyhq9b4ZKGRdzWBan4P/3bf/qHF//y/94PVwsEK8HWaa55Wfzqj/\
701IDvnY38ccH87Sh6jGlyFFwwTlGtPQm2p1+\
dDaNIIcWpZ6BlYhh3dfb5FWSfViFtrSN3I7zRMSy8NFX1V99+\
EvrewIDmtOYgp6bZuxthd0bhLVPt9kb4vA7C/rZ58N8Eo4gPZPp51FBgm5/\
l77LMs8nkCi4T6671xdtCe+6MWDU35z1z3jPnPbPIe94ZDubty1vhWnfOt4/t/Afx9QfXvv//\
emxnK7wxMGVaatXXsKTwpwvf9ZzaVni9P/NuL2y9BWp9K6R0K7w5yPhqF3BwkG/1lZIPI/\
32g3C1uGwrvD2Cq9TQbHdGMQV94tZQntZybxRrITrZKfz7FVY2bIXvnZxk43/5L/\
Tn1x58SzT8FGeyp0zD1zb2KEfzzPPvPP/O8+/M5t8rpSjeXt4Kr+X/b8f8sP5ChtEppKMMTcunf/\
KT8vktcte5S+62MrknZv7//pI+/1cXf/lBKaXcyZTO9c1H+6M4eytW9gpt9gY0RwbPpD+lzbqS+\
VxT8fCRTub5q1TV+3nD69SZqdZV8d1887N72yxJs5cE6+3bXja2ijdHP/CFb3sWU4EwKBO+\
skxhGswn1AwIMZlylSu5p4RhM89lnpSGSwlzAsUs6Vg2O1liuRZlibZHuUED4lLP4dQRzPRNSg1lBt\
yivsVMQm38dhVjzLJtQlTAmaUMYivuWUoOS/x+\
v8TiifmyTAhRIjAt5Rq2wYKAuYwHnsEs0wps36eolOMEhkcC0+duEJiEMR+1tgOHeYZhDsu8Ucjca+\
id5kuiLBe3eCYjhuEQIW1fCu77SlCHEzuwGfdMbpoOMw1Helz5tuBUGI6LRne4raxhUbcKUSHVXKFP\
WGDahkUMpbgvfU8QWzq+MAQLfNiVStsgjuF4hpCU+\
IGyXZNR36Oe9G2lfC75sLDbhbBP03oDUNIvzoS+1JJCqMB3PSF9y7FNBf/\
wHJs6ymEOZQ7zDc91hOfZvkEMwQ2fuYawpTVK3J1CHPCjLjIO0Fc921amYVk2tQTM4Xs8QC1YYJqBC\
lwB/3E84Vum70OK8FkA2xIqDV8qxzGJOyzvvX2EUNLxFOSqNk/\
bsYTQtCsVNJEGwoHDGZ4jqYfGdZRhMKUksVFvFSjiU4fCh1zpWQalJpFUIIBMgUYZFRJ9UjsR0ZNou\
qgF59yk3ISXC5sYqBJM68MhFWEk4D5sSG0uTIZ25cw1TelQ7vmMUDXCPQuJA1HfkygMSHM84kkTDQf\
fII5vO7bhmBaTjJomWpV7tudaHlHCFEpZxFKWa1uEEgTKCEvmEvsM2ZNHpGcqmypqW46wHOmYrvYea\
Qeceh4FAniGMnzuMVTf5TCA60upTAKHgwuQYXnv5PK6W2yUpVG0nGshugFbCr5HiAdPDQzTsqUKpKW\
UbVvMt6jwuSAOh1NbvkFdTqjgnhzhN7dzaeWo6ImzfBFYAsFMTNMktut6xJGKBAwqAMYU3JSisalp+\
Z5tOybnzIa9XWUAemUwonI/HN29+nG7LuSAH+lOXqGH5wqYlAemIU2XigAKUYtrfwmsAL7lmIHGHg+\
x6bqEQT9HEiWdABEdcGNEtX9UqZv3UO8vsh89l80+\
rQxPuYgl14ArK3wTeJLklFOTMUdIIDB1GJpJEsdBdPnMQzC53Lek5TnWCEDcqaRV1iMrmMwTvQKAo9\
3KCpomUgMahjmEGdIIhKUI3J5LYWo0dV2LiMB2FOxGuDAQj3AYwzLwD6BejIj3X6+\
k4M6rFm2KTtYqKQbgUUJrgJYKbFN6UidD+DRRpmdwE/mKAfgcW0pEM7MEmjUDCjii9OUIv/\
qgcrd9lJ9JwikSGtIKYkUQ0/Js0+\
MGZDJlCcc3BSO4xLSoDYdjLtDU9IBbCGeYnowAj2oWLfR6VE9aeb9YJ+E+\
lzM91zMCm8DhGSCH2NQWPrGFArHxpefA4IGH3O/rLIxMJlxGPDMQRAH+iD1tIBQKPqWtPj+\
jQFPhwNV8J6CSuIAnAI7NfZArH8nEByBQJgOkZ99gri2I7zoOTAtFbSKGtfqNSbQa4WhoJMdl0iS+\
bwJ3LUakDZCQSN/IPwoxQYgkJr4CF8BNkcuR+G3fDqTyQGCGNXswiWa9dFzSDYFGpXLRBoYDpDAtE+\
3mgokA5pjU9BRNx8BybIQvaBsyiYOrHRySAP0RoDZRqxUAUtbMcQMmfUU0SYTFYCoQAYK0CfJlWVaA\
tA3SySVDhrEJUEQHDVO+RLQYtutPixvDg30dAsNdEGWP+\
4GGLYdLEwRbmsg4QFVDwN9BtaUZgCU6gc8dRVwkYAANcpEBladV7OOWvgodrMFUYCPcCDV8y+\
WeAAVFgjKksMFiLI9bBGQ2ADcXBI0E+mFYTuZwthNwoRAhI+\
LSr6RYCJx9WeeHfb7vKAnoJMJCh0QJZoELcAJHgvEcywMPAd8RFPkSHDcAwhFwS89DOyJLgUpPq9O+\
fJXqXnlZJx/\
pEYBpcFv6geSBggGRjdARgS6uVNRAaFqM2aAZFDzKRI6yfQLWbRNKRxmwWjzuRydjhUEdA5TCtRx0n\
kCkLDAfoIMJtFCALZdqzo5+\
DKMcXCewkd5NFSCKfYd6gTcCxYJKun0excMcA1QPxBgOZZg22kf5gUEJMiQBvzM1sCMeHBOOBZbnOU\
yzMUvAxDbCAEE5IlNWy0ib5VQZyvhFnfenTFPDJHCTgu/\
axDeVDwqKnhg6pp4F2LXgYQys2JSWD5rsQzkasMCCE7igbiNSpjdawf12GsV1OpC9P36hdZIv+\
5Kk5YCXBei3SAoy4wVIkY5whIm+jIMfYIUW6AcRLnqRSjmCow/ggq9aLnIEs/\
XzNaVNV7aTJNL7ct4oH0ujo2QlHxFUF5NbpVOfZUMpAwfzBNAdPc4rmqnbHUcbIaDTLidJrr1fW9i+\
sBX+4MSdULpjbPNJo/mk0XzSaIJJo/8PzY78hg=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.920844561926484`16.345954614618616*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                "OEM6eJxVzsEKgkAUhWEmJIJ6Cvc5uOgBynDlyqlNEXKzOzFwZ8a8Y4lPH0oL2\
x34/sXRglclfA6+R9aCl6Uft444KgwHFeWGUImrXvD6hLYhCDi6+PkrlmfGlqUGM3g3gAUnj/\
hG8g22ssDe1EAZMLLMp+QyJX9w7ww95lxVc9+myS5JkwZqwhCrzXhp3z47iy4ocfsCjbdEJA=="}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8215dccd-4388-4c41-ae49-121898fabb3b"]]]]]], Appearance -> 
             None, BoxID -> "8215dccd-4388-4c41-ae49-121898fabb3b"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.505298`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.5.1.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.505298`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"], "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/Abstractions.wl"], "Hash" -> 
                    "8d8473bf9d0abd8f32d20b81a29112bf6f6ec7fd04b76b7ee06a1b59f\
b3e534b"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2"|>, <|"File" -> File["Tests/Abstractions.wlt"], "Hash" -> 
                    "d0cc25717e28d889f1584540523beba22832c7476371fd2dff313f364\
31a1907"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "2ba56be2188268e3b1e4d77e10d92ffe0911e120919626eae3e542484\
9ef74dc"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "030aef62390594a23262d62cf920be6f6e8bcb057451b1bb2a756235b\
05e3546"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "569be8f1495b848655a2112c788d3339b19fd9ceb15c41631afdabf8e\
4270468"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexigramCount.nb"], "Hash" -> 
                    "cc673f7c89945f5ce22aae23c66c80d67d9c3e29988598c5f1682a8d0\
e910fd9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "25feb3d1d36a7fdb3a33c11bb9fd537968190da61b54a98bf1f557780\
dadda7e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "8eca7b70c4e89ec9f22aed20021906efa0e103bb45efae83266348165\
d41aad9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "0a50748635323ff433d711e27e1f4806a44f24f3bac445943942f9030\
85a797d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "735f619dd0ea301794d85d5d2ead55d59ed3fd81d6015ff5dcf3163e9\
3668eb4"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 31], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 31], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8d8473bf9d0abd8f32d20b81a29112bf6f6ec7fd04b76b7ee06a1b59f\
b3e534b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "47ac0a916a75ca5db282aa0f29c3a83b21a429c6fbbb34411f9cb3f01\
4fc73fe", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "365b772b10051de48edc88fda5c1494bc72c225b205e7cf84dcad0560\
b85c4f3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2cf8a3eddf9867de83542fec7754a5f5b5ab5b80765d7748010dc08b6\
0d4e3ec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "944f20334a3d87f87c99f4b9229f96d75c57d83288c08d8b90b91ae08\
ef55216", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ceea9d5014075ea7fc85f00bffe14867f9f18a5a6bc6e730aa21eadd0\
a2d7deb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "26d83ccc2ac24fcd41088c4038192f1b19c8deaa4cd2b748cb622e5ac\
78b1af2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Abstractions.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d0cc25717e28d889f1584540523beba22832c7476371fd2dff313f364\
31a1907", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e72f4afa435d35e526e835e49ca77a82a70f08c7bfcd6cea968eef21\
f8af201", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a03863b32d04f0d411735490234ef9e3ff443b83ad8cd15c8a3380a6c\
1adc7e6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "38d93d7cf12221466715ef19b3b36fbf5c5a257a23874452ccb483c6f\
0473e91", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76d571c920e26ad9cf1a3c748c9392ac5292c227d77661b9b35e1fe59\
edd9c06", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "707f6140602f1f406113fecaca2bb5de394a5bfbfe15567f8b7add6c8\
3e37533", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "22d922c2b51b0e09d3f1371ced258d06631d945f2cc1cd0f1bc8a0301\
cd5b7db", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fc8fd8d06a2b942e7e11f9d041f270c2071bc0854eecc2b3dfecc8dea\
f12e8e1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e1cafda0de7e6d1237427c02e8bf3d582db11ca23a492cb6a9d27b74f\
2113f17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "727670941292ba4314a4d814df81a8e75d92972398205e67dd6b1729d\
1f3be14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/LexicalMap.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a637d522c859ae162d01ad4c804b8bc68f04abe9e8480b64d18655cc\
239841d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["31 total \:203a ", ""], 
                    Style[
                    Superscript["31 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.880872`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.880872`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexigramCount.nb\""}\
], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/Documentation/English/ReferencePages/Symbols/LexigramCount.nb\"",
                     "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.853518`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.3`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfUtzHFl2HkG8CL7Z5LRm2o+\
GIcghywMyb75zoiUSLALTtMhuNBPdrWdM3ydQZqGylJlFEu1QxNihhTcKhT3a2KGFQiv9Ai+8cdj+\
A/ZKivDGnlk47IV75bAjHHb7u5lZVVkPsCur0GwWULVAFfJxz7n3nPOd7z7yplpILj2jLx9Gr2Silp\
Nbj5upjFuxTGlaj5o4rBaSlWeRvkAtJUtP6kmqLiYr+/QAR8LVsM25TJLwStg+\
OqLx8YeSinDhd9VicvPRcZMe1fnTSLQbUt9+sXv7YijT5Pr+\
cUsmMv0iasnm5mayvEsbieycvdM5K4+YFCHUkZub4fIzlH+\
Ma67sy6NWAwdzDfOCF5Mbe7QpQ9mQPI3ifplLz6BGR8hysvrjuC76b+58r+\
pC9KmVZO1hO007zXC5qFFe7nu7O3tx/QVU+GI3jprpTlM8k0nUjrkM13Z3HtbTI9pKwptFw+\
Cmj1FPGWvltSqPZIMeS5Fcz0Xstptct/\
hJrbO0H7dltxqXt1stSWPaROMvfRQ1e2fWHtJEhulxQ6oLA3Vf23lBG22KlknWtttpdAQT8+\
7ZlacyPYxEeHkvlmjbtP6iVOh2o37QPJLNtNOgyUpNak/pfPcufXxED2RY/1KixVaLFuve1Sd3eb9+\
JJP4Qva5+qB7BDderbXjGAV/BoVleG0X7VujrQ9l/\
eBQq7C8F72EzIXkzjZLokY7leXrk2tP6UGzruo88+Ha1zD3pd2YHmVGXUwuZc2j3Xd54+d/\
9rMNFLj2qB7DZ3Sdcf7Zjx/WokYUx7+Uff7qfnw7+/zifvxb2eev79d+0K3x1TCN662Pm4+brXba8+\
L85PUaVIdie1SIevNg8PTlTK1MnwE7Xs3OPKXxQb2ZlN1Yf9cu1C4M/j5Zl5Wes3fKWeh+\
d2J7cTC2B4OsuDW8sbFHeUOm2zE/RHtthEsbP1rfCC+jnEdS0XYjDb9X+PzjVB5tN5tRjiXh4ld//\
Ocl7PiDjXufJvCge4rWv4yaX9Ij2rz3SL6QDbh8fO+JfAUDNmpw5+TebnbJ72SX9J1g7XpDlE//\
5Cfl81vkrnOX3G1lGm90UUorNk0bXNnYR6Ua2lsnrj+k9ZVdgGu4Ftx1DMcM/C/CxY1kI1xNJI+\
aIgnXNsL810Z46ZM2bab19LjnSOFxM6WvdqP4KFkE5PZXtXPVzcIPhsK5c0W4CsdvHzWTUuvkkbv0R\
KreZUuo7fA1I1Dlsj4EqJOpHPT9G4UyWsMML8bWZVjO+\
Ap1pIbwCR2QY0utXawurATGSwNgfCc8jF7qaG0e1A6B5FyD6WATXfmojewXAwWeD527juwDXAFs1RO\
Ncos9K2dFZ/6QI8vgrd+\
yGyzuR6231wFuaps06k25FyX1IuPmBl6oLXSvytPtd0ITao0omZgmDOaXOU+\
Y84QJeMLKnCecR54wRVXf3Xiomzi3eR4lUXw8ea2Hep3h0m4dOI++\
5ejeXyjegJ9shFe1FtvxQVujXLjw+6fWgDeLeHlKAUkySSdvuuWS63R+rYzoj6/198e3dCoJjxOU/\
cVHUEAKjQZfQKvnQOpOEttM8q749jtb4ZXHTWRQ2nhEU7q9sBUu67ZJ1Pt5udsXt3Kb6VbJbPfub8q\
4KRv3AMapZjzQPbn7soHLPqTJYfjAF77tWUwFwqBM+\
MoyhWkwn1AzIMRkylWu5J4Shs08l3lSGi4lzAkUs6Rj2exkiWUbliXaHuUGDYhLPYdTRzDTNyk1lBl\
wi/oWMwm18dtVjDHLtglRAWeWMoituGcpOSzx+/\
0S92iKrNcsy4QQJQLTUq5hGywImMt44BnMMq3A9n2KSjlOYHgkMH3uBoFJGPNRaztwmGcY5rDMG4XM\
vUaU9lXPcnGLZzJiGA4R0val4L6vBHU4sQObcc/\
kpukw03Ckx5VvC06F4bhodIfbyhoWdasQFVJ4cH9bBqZtWMRQivvS9wSxpeMLQ7DAh12ptA0CvPIMI\
SnxA2W7JqO+Rz3p20r5XPJhYbcLYZ+m9QYcrV+cCX2pJYVQge96QvqWY5sK/\
uE5NnWUwxzKHOYbnusIz7N9gxiCGz5zDWFLa5S4O4U4kIO6yCKrr3q2rUzDsmxqCZjD93iAWrDANAM\
VuAL+43jCt0zfhxThswC2JVQavlSOYxJ3WN57+\
4iypOMpyMhtnrZjCaFpVyqXkgbCgcMZniOph8Z1lGEwpSSxUW8VKOJTh8KHXOlZBqUmkeAQBjUFGmV\
USPRJ7URET6Lpohacc5NyE14ubGKgSjCtD4dUhJGA+\
7AhtbkwGdqVM9c0pUO55zNC1Qj3LCQORH1PojAgzfGIJ000HHyDOL7t2EhuFpOMmiZalXu251oeUcI\
USlnEUpZrW4QSBMoIS+YS+wzZk0ekZyqbKmpbjrAc6Ziu9h5pB5x6HgUCeIYyfO4xVN/\
lMIDrS6lMAoeDC5Bhee/\
k8opg768dRcu5FqIbsKXge4R48NTAMC1bqkBaStm2xXyLCp8L4nA4teUb1OWECu7JEX5zO5dWjoqeO\
MsXgSUQzMQ0TWK7rkccqUjAoAJgTMFNKRqbmpbv2bZjcs5s2NtVBqBXBiMq98NHEc+\
yXdaS93aaB416cnjvx+26kAN+1GRdPTxXwKQ8MA1pulQEUIhaXPtLYAXwLTAXjT0eYtN1CYN+\
jiRKOgEiOuDGiGr/aLQez6SSoPRc7iFLJffC4yMWNZJ7D6N2U+\
xHz2WzTyvDUy5iyTXgygrfBJ4kOeXUZMwREghMHYZmksRxEF0+\
8xBMLvctaXmONQIQdyppVYNWaZHEn+i+\
CUe7lRU0TaQGNAxzCDOkEQhLEbg9l8LUaOq6FhGB7SjYjXBhIB7hMIZl4B9AvRgR779eScGdVy3aFJ\
2sVVIMwKOE1gAtFdim9KROhvBpokzP4CbyFQPwObaUiGZmCTRrBhRwROnLEX71QSXFTvIzSThFQkNa\
QawIYlqebXrcgEymLOH4pmAEl5gWteFwzAWamh5wC+EM05MR4FHNooVej+oJSKYeiNFJuM/lTM/\
1jMAmcHgGyCE2tYVPbKFAbHzpOTB44CH3+\
zoLI5MJlxHPDARRgD9iTxsIhYJPaavPzyjQVDhwNd8JqCQu4AmAY3Mf5MpHMvEBCJTJAOnZN5hrC+\
K7jgPTQlGbiGGtfmMSrUY4GhrJcZk0ie+bwF2LEWkDJCTSN/KPQkwQIomJr8AFcFPkciR+\
27cDqTwQmGHNHkyiWS8dl3RDoFGpXLSB4QApTMtEu7lgIoA5JjU9RdMxsBwb4Qvahkzi4GoHhyRAfw\
SoTdRqBYCUNXPcgElfEU0SYTGYCkSAIG2CfFmWFSBtg3RyyZBhbAIU0UHDlC8RLYbt+\
tPihtbsIKZHGcCVFePcBVH2uB9o2HK4NEGwpYmMA1Q1BPwdVFuaAViiE/\
jcUcRFAgbQIBcZUHlaxT5u6avQBx9MBTbCjVDDt1zuCVBQJChDChssxvK4RUBmA3BzQdBIoB+\
G5WQOZzsBFwoRMiIu/UqKhcDZl3V+\
2Of7jpKATiIsdEiUYBa4ACdwJBjPsTzwEPAdQZEvwXEDIBwBt/\
Q8tCOyFKj0tDrty1ep7gWWdfKRHgGYBrelH0geKBgQ2QgdEejiomNqIDQtxmzQDAoeZSJH2T4B67YJ\
paMMWC0e96OTscKgjgFK4VoOOk8gUhaYD9DBBFoowJZLNWdHP4ZRDq4T2EjvpgoQxb5DvcAbgWJBJd\
0+j+JhjgGqB2IMhzJMG+2j/MCgBBmSgN+\
ZGtgRD44JxwLL8xym2ZglYGIbYYCgHJEpq2WkzXKqDGX8os77U6apYRK4ScF3beKbygcFRU8MHVPPA\
uxa8DAGVmxKywdN9qEcDVhgwQlcULcRKdMbreB+O43iOh3I3h+/\
0DrJl31J0nLAywL0WyQFmfECpEhHOMJEX8bBD7BCC/\
SDCBe9SKUcwdEHcMFXLRc5gtlb4fXtRiN6uaMXC2QDqNkA/lZ4tRiiCA9pSw+a/\
nJpkKMY2Qh51JJf6IULMs4u217c6gzbJIsoNvuDuq6fdO9vyuNHgORjPYMw4ta8sU44petfW1BLyfs\
nlf6kflRPpYACJyqfz5N06vgrr9EzHyjPLlxI/s5JF26n0VF2UbyQDbo/eXCKCo5V0olt/\
Sx6mRup5ITfXI/aB4WrjVfrrNI//\
ccPcPXNfCxTisdNVYcvaSNf7M5TdA1ZuzP62t6kmL5o4YSLihmY3oiaVlGvoSmpup0kEcf9N8rHoHG\
yks8iQqdbpVOfZQOwAwdzUtMdcsyDN2+X3sqAIQGdZj5Jcu19+Ha49FSmdPvCVrgGE+3T+\
ECmtTsIwNz0xYHLW+HyPBTnoTgDobg0izEIjnTYq8It3SvNpo9hqoyZ64vudI/\
mrpCfgA2v6nH88pU39IGBi9bCKE61mKQn57o+VsyMRs3yiQ/\
rQsimnq5I0AFNlj5qNxpb4eVPW4KmUleltpAY4807RO201U4fP9rc7ExY/HC8G1tQFjdd6J/\
tGPPmF3tRsrmZLQyoctvhZLcd4CBUXUyu9U3WlKZ1s9LIWKWBGgJG83N6QuqRbDWiY7WcLOfT/\
qvJUnbq3aGVDUvZXBa+9QoHfF/uzTXpOfCnUTuREVicngP/cUxbh3WeDK8i6E7w11Zes/\
gCioVghlLEVvb59/+mr9ReSKzh2PETPZ1XXPmL+3rlwF7UOD5AOaX1NcV3PvmfIcSlZzTvBda+\
zv7P1w/Uvn79VeMUNMbdY8k6vYLGq9q0JsLB8bxwM2yg/\
6FXMGULMe6OdVMjgrwPo4aYAByGEnuyhGSbhJc61CDvGoTLmRuPWo8yuIhC93KAW6MWw1zN7jpp9cV\
yvigr+71UW+5Nwj+E+gexHqHud2yVff7H/dctqMlWYCWXOlb6xnC9uvMCt39Im6KRLb+\
5kdW7ty6oL6KLPH6xwIjuv4U22foaveKlb/XLP/9n+vMf78ck+/yX+/FvZ5//dj+\
89KTefK5lDyxn6qa/q5noGnzkOfKRxsuLjxUaxRvL7vxQ8ufZinU9r/\
QCGbziLLa6qFbG9LF2lrOyhegVhVRLVNUyU7WEVDEPVQ7X7ybAO6R+\
plCpIH5F9yjv8syR6XXIVFDkDjJ1GPMcmebI9PYiUzGmMFvIlI3JnnFkGqurUw2hiuVvXYjq/j/\
HqDlGvS0Y1VuhuogOUeGjbzdCjVQ5G2YuwClfvz4+OnWHUt9qkLr4WnD6hjW1b7M9F09wweL/\
YkQ0GzSsatnaB6dt0kuDTyeNFHCyoaZf1TzLpsyYxGSm7I78fwcW7XCia2GLNnfj6GibRS+\
qRuTACtvZM+\
PFsxqR0676n2VTnseIPPGZjNkz5OJZjclpn4qZZVOex5gcfGZp9uy3dFZDcdqnxmbZlOcxFIef6Zs9\
Cy6f1WCc9qnKWTbleQzGUc+8zp4NV85qOE771PEsm/\
I8huPIZ8Jnz4irZzUep30qf5ZNeR7j8TV7JsyeKS+d1aicdteKWTbleYzKE/\
YUmT0zrp3ViJx2V5dZNuU5jsjBPXdmz4yXz2pETrvr0Syb8jxG5Mg9qWbPiFfOajxOuyvYLJvyPMbj\
O8N7ts2eCa+\
e1Wicdte8WTbleYzGUXsazp4Nr53VcJx2V8lZNuV5DMdKe37OnnGvn9U4nXbX1Vk25XmM0yn2xJ09U\
984s1E75a7Es2zK8xi1p7Nn9OxZ/eZZDeBpd+2eZVOexwCebk/12bP2rbMauNPuaj/\
LpjyPgTvVOwdmz9jvnNW4nfatD7NsyvMYt6fzTo7Zs/rtsxrA074VZZZNeR4DeIp31syeqe+\
c1aid9q1Bs2zKsxW1S4WhL57Gzmf450rY1rmWx/VWGl6zyHqqX3y7/vOf/uv1UL92uNhz+psvnO+\
VNt8rbYwAfyOQMHqvtItvM4qN3ivtdbA1GfKUXh8/cEtfwO5ln/98f/\
hH7VK3rCvZu89fpU9ls62We6Xo/zOA+1vhYfRynaw/jWK5/gw/abq+f1hP1rPN1VDXa/lTejuvJG+\
nGtzGsw4V/7CdpNmbLpLOK8/nEXdqzhguwVYJJF3abTd5kVjMqpZ5eKydOkQPTr/\
TRZVf4tH1oGvaVXZe0EabplHcn/56bvS3Mzdyum6UzP3ovPrRckU/\
StZAJ7I34sQjXIqs78qXMp5D03l2qa+ngab3C2jq+tEcm86tI/2fqo7U5WRj7SmbXXriRrW/9yf/\
7n/+6u99dT+52ukv6hJG0b7SC3eGWdxCslq8wQjn36lFRy0taudVK5aJHpBN/PEamvfK3I/\
rBweA35Vk+fPDOtd7/69+2kzokfxkzAbfbNAk/bgw3Rth4713Ii2HmaITVzv5YPwq1obvdia6O9/\
1fbQFVfEuqun0mtwNCvGTVUwb5CEM+7zbX6pW3EEjYrQR8jhqNABM3XD7FqFPy/\
i8nh6qtX6Nx3Ri1F+/tG1zzOs3Ozd0xIwXYZ279MWbVaKyc1M1cfXkiaQq3wR8M/\
lRNXGPSzdXE3uY3ZO/2i57Gd12Nuq08pSm/\
LASGJWqfXW7oZeHANBf9G1u3v8ehrGTS1nHT6oavfLQVt5698ZLe41Gr+\
kq3vKW1aR5XLkmnVveVE2sse5Kyu9v1EPh4+Eyz18l2vfyx6r4slCxYuUXUFa+d/BFlZUw9JC+\
kPqFmJpXLn4UpRnpo/VGO5afjD2OLFBAItPiNb+\
6uAkNOx4ZqSedt951tUbq242lrO6A2Wv09HzCP4jqze50yWI2jI6/H8eFhAmbs3LQVW+\
CZBVyDvV7Wkt9LzTI5fwdqrpe4XLWE1OXeixzeecP2rQxSQbMx13z+Y/JCynlgkX8nK6wvmwSruT/\
FW/3uTDcy9STFm6FSYvS+17nnczvcOqiKi0MV2J5VMzmf+OwhQ74pWkCftxsqW29c9RKj7/\
tbDkBmua0rzLnmYRijgVbuFbOYWsOW+cLthapEFVH73P4yqK3OnBV6+T1OfFQJ6/\
fqXvvJ56g81uRQ/W6YEt9NK40pDZJxyFc2064bIoBqAqXNO0eHaXjKVysiEAp8/\
D87oKtZN1vDrlSzjoNz7r8SI50ravP5AsZJ3J97mJnwcXKZn7TPpYsfRRlK+F63rWC8uZ+Nft+\
VZh2fI8qM4bOJM6olUnv1aLW8Tpaqa5daD2N1muNeotFNBbDTrMwJidNo1o7jmUz7ZQ7pudw6KLFj9\
uJq0x/yjV/N6u5Pv4NtR53xLpb6wkGxU69gUY6Qp/h9+Bbsmf5enP9I/lyvSYbI+\
bqJzf8eBbikJrp82Ysn1c9M/1rq/1GLH/qLdTLKt3Jcr0YeZce1RvH4Y0wasccdIM2k/\
W9OOotxdYX6aXYtev9N34u6weHabK816D1Zu/yR/UXdf3u2v5J/su7MfJXPsHeNy//v/+X/\
vzX3gtkL4UtyrWDdpdnXqiV1k93lwLkSwBGTeAvDkzgfxvVvPGk3pQPY0mf67nLerNYgzp60cCFwRU\
FH7WPmIz16tlk8MbrephW2yyrS+l0Njg+ng/V80H4T7rT3KU1C+\
N5biLTduuzunyZjTlVSthIJ6Nn1fNV6Vlvrlo1st5pJNp9S3IrNEd61NKHN5PVTT2tkS2dr3Z7Zzh/\
vHxeTIVMMgey+LoVCdVqW3DH0lxOxfqOuQ4L+IZwz8+phbHpY36bPjOnj6dHHyt6dDkoJ/\
OU3NUKB63uMFUjeOmjdpZUJgHDHEm/1aUswyE3SQwl3yvdhGwYJ7I4cbV04sPw+7+\
qkWa9Ga03ouaBjNc1YCAz/r1JpPY/XJRc34+pfp6oeHDxDS0E6lPhdpG0cuj/\
DIRGJqVUWmGCezONWg9pnInopsKFMVPhEX0uM/IiUAQK+Lulu4pLQ/Bv+UXYZp2MyWCzaklz/\
gjVd4mb3+T9C9W8v7BpJVTcZFEKot5x0+KxwpVkJfe9fhK3+\
ky2GpTLMbtfR9kjjt2nIDc3B9e4qotv7YNfBeRf0OsaafN5NnnX9xjkW/\
zMGgzV2YX718aeF97s1rV8/\
3jKtrpTMqPKmGT6pVvOykhmiq7c4yaPZdYhm3rNa9W58CqNWmkhZN8axsptX4iaYtnmRKaqXsM3umR\
83K6nzrdZ08fgUFVMPOYa5075O43cawexP8ebhWRFj0PIuHZ5EHC6IXHyNScmkEnxesQwysDQb9/\
TrqUBk6vZHcPHSwMpi/tRb+Rw+GH/0hBS7caI8ZJxBwFH1epWkdM+j2mrJeOH0Su9/KM4mP+3uh/\
hB6jfWvLuo7xn/\
UXxnY2xNNPaxY5W4VKx9HIpc9Kq6boooyDblcoouEqnjOWMoXULqbwSstDkM70Gv6ImL7qr6vMyPpy\
gjMP+Mlb2M/\
7cLaU6687LWXvY4TjdoiYiR3lpl0rwtfTGFnJchWWbgsZiN4qPxu01fTtMvetzGe5PGoQXOltglHfJ\
6K9Vsai3/mXndIWFuv1PDV2uxRJHP/0UVqvW3Rsa5V0YOHXyiGyfmJt6JvWFFJ/\
RuE4Z7utic3VfWHkEGh4dd1W4+Ugq2m6kXSXDzhULyfc72JXttQEClXZAbKGH7qFsSJ5mag0MC1/\
aEfWRJ97J79F1LuAwKZaPXSm21s0W1fW2T1h5Fr3UyNobJV/Zpwc51l7Zl0foWKQy/zffX+\
RvbPRtcfSwXW+IZzJBPZONcGnjR+sb4WWUWdQ9/F5JbGmLncWv/vjPS7KG9AgX/\
pFaTm51WyeX1Xfl0qDG4WrY5ugFJd26ai4ULvwuCr3Z506l+nTc93rG7WAQ9N0RBwMD7Xc6Z+\
URQzwXy+yXn6H848GGWujOn97QW87kBonifpm5tQohy8mq9q3+\
mzvfq7oQfWoF7t4G7hXN0J8W39vd6bjkbgzD7zS1UbLJjXBtd+\
dhPT2irSS8WTQMbvoY9cy3tOkL7lxE6SHPka3TmUkoHLW3X84ADSkF6FDsvvYZz5WnMj2MRHh5L5Zo\
W72QbARX6SLqSk1qT+l8j6IvfY9qDjIZ3cXerx/JJN/C6MLVB90jepytmLfLUCi8lu3ZQ1sfZjNB+\
ro9vVs1rruzzZKo0U5l+frk2lN60KyrOs98uPY1zH0pY2G5u1/Kmke77/LGz//\
sZxsocK1YrPFC9m0y8kvZ56/ux7ezzy/ux7+Vff76fu0HPYKnF8u2Pm4+bgKWhmaTCkzYo0IvPRk8/\
Ro6WaaNZTcuz8gNzc6N1GWl5+wXuyg0MRqtbTxFwMPGE2NPuNUPaOtMI9o6R++\
2IYH660kOKgr9gOO7G6eGo1c29vWOUNrHJsfNxf6ylzqtQu76vuF75hfh4gZgeTWR6GaLBM0V5r82w\
kuftGkzrae9fHU5PEYbvNJMJlkEUPZXtZvVCusNBWGXia0Wy5ZLrVN6SrtHRYsnyvuvGYEFl/\
UhABSsMeixNwplBvcH+2ZdhuWMr1BH6uDU9DdKLXdNxhX2mkfR7+\
jJ4XxxfO2Q6h279ET74NTz62aXkTOABgCbuh6/yfdAyq2cFZ35w+\
DM8xtxg75O6FvnADc7Gw10FrB04W+hxN/\
yJPmdJPdaI0omTu6DWWGe3efZfYLsfmWe3Wcnu09R1VsbT+mr+lH7SO/\
BN12FR3YDh1V6Tbs4lkP86dpl4YfhP1nYuPcpADS5p2j9y6j5JT2izXuP9Ao1YGTct2H+vd3skt/\
JLuk7UXkr4AOEYfYWnLtNthEu/OGpmejmxl4caTeXItso8TQttPjVH/1sxOG3ogkXv/\
rTv5gPI8yHEeZE4ywTjVMYRri0sZ056uQ8Y3UjGwk9PQaxsvGtkYdTSJLzoYH50MB8aGA+\
NDDP2POMXT1jL/bH0Txjv+\
mMPUUtlzdwfvJWv93rin4UpZJF0fONOZuYs4k5m6jOJnqZbTBRj8iDpeLDq0W8aYrRGKQCr1t5Ey78\
Pi7vDpDcGorl7Ytb4UqOzOFyhq9b4ZKGRdzWBan4P/3bf/qHF//y/94PVwsEK8HWaa55Wfzqj/\
701IDvnY38ccH87Sh6jGlyFFwwTlGtPQm2p1+\
dDaNIIcWpZ6BlYhh3dfb5FWSfViFtrSN3I7zRMSy8NFX1V99+\
EvrewIDmtOYgp6bZuxthd0bhLVPt9kb4vA7C/rZ58N8Eo4gPZPp51FBgm5/\
l77LMs8nkCi4T6671xdtCe+6MWDU35z1z3jPnPbPIe94ZDubty1vhWnfOt4/t/Afx9QfXvv//\
emxnK7wxMGVaatXXsKTwpwvf9ZzaVni9P/NuL2y9BWp9K6R0K7w5yPhqF3BwkG/1lZIPI/\
32g3C1uGwrvD2Cq9TQbHdGMQV94tZQntZybxRrITrZKfz7FVY2bIXvnZxk43/5L/\
Tn1x58SzT8FGeyp0zD1zb2KEfzzPPvPP/O8+/M5t8rpSjeXt4Kr+X/b8f8sP5ChtEppKMMTcunf/\
KT8vktcte5S+62MrknZv7//pI+/1cXf/lBKaXcyZTO9c1H+6M4eytW9gpt9gY0RwbPpD+lzbqS+\
VxT8fCRTub5q1TV+3nD69SZqdZV8d1887N72yxJs5cE6+3bXja2ijdHP/CFb3sWU4EwKBO+\
skxhGswn1AwIMZlylSu5p4RhM89lnpSGSwlzAsUs6Vg2O1liuRZlibZHuUED4lLP4dQRzPRNSg1lBt\
yivsVMQm38dhVjzLJtQlTAmaUMYivuWUoOS/x+\
v8TiifmyTAhRIjAt5Rq2wYKAuYwHnsEs0wps36eolOMEhkcC0+duEJiEMR+1tgOHeYZhDsu8Ucjca+\
id5kuiLBe3eCYjhuEQIW1fCu77SlCHEzuwGfdMbpoOMw1Helz5tuBUGI6LRne4raxhUbcKUSHVXKFP\
WGDahkUMpbgvfU8QWzq+MAQLfNiVStsgjuF4hpCU+\
IGyXZNR36Oe9G2lfC75sLDbhbBP03oDUNIvzoS+1JJCqMB3PSF9y7FNBf/\
wHJs6ymEOZQ7zDc91hOfZvkEMwQ2fuYawpTVK3J1CHPCjLjIO0Fc921amYVk2tQTM4Xs8QC1YYJqBC\
lwB/3E84Vum70OK8FkA2xIqDV8qxzGJOyzvvX2EUNLxFOSqNk/\
bsYTQtCsVNJEGwoHDGZ4jqYfGdZRhMKUksVFvFSjiU4fCh1zpWQalJpFUIIBMgUYZFRJ9UjsR0ZNou\
qgF59yk3ISXC5sYqBJM68MhFWEk4D5sSG0uTIZ25cw1TelQ7vmMUDXCPQuJA1HfkygMSHM84kkTDQf\
fII5vO7bhmBaTjJomWpV7tudaHlHCFEpZxFKWa1uEEgTKCEvmEvsM2ZNHpGcqmypqW46wHOmYrvYea\
Qeceh4FAniGMnzuMVTf5TCA60upTAKHgwuQYXnv5PK6W2yUpVG0nGshugFbCr5HiAdPDQzTsqUKpKW\
UbVvMt6jwuSAOh1NbvkFdTqjgnhzhN7dzaeWo6ImzfBFYAsFMTNMktut6xJGKBAwqAMYU3JSisalp+\
Z5tOybnzIa9XWUAemUwonI/HN29+nG7LuSAH+lOXqGH5wqYlAemIU2XigAKUYtrfwmsAL7lmIHGHg+\
x6bqEQT9HEiWdABEdcGNEtX9UqZv3UO8vsh89l80+\
rQxPuYgl14ArK3wTeJLklFOTMUdIIDB1GJpJEsdBdPnMQzC53Lek5TnWCEDcqaRV1iMrmMwTvQKAo9\
3KCpomUgMahjmEGdIIhKUI3J5LYWo0dV2LiMB2FOxGuDAQj3AYwzLwD6BejIj3X6+\
k4M6rFm2KTtYqKQbgUUJrgJYKbFN6UidD+DRRpmdwE/mKAfgcW0pEM7MEmjUDCjii9OUIv/\
qgcrd9lJ9JwikSGtIKYkUQ0/Js0+\
MGZDJlCcc3BSO4xLSoDYdjLtDU9IBbCGeYnowAj2oWLfR6VE9aeb9YJ+E+\
lzM91zMCm8DhGSCH2NQWPrGFArHxpefA4IGH3O/rLIxMJlxGPDMQRAH+iD1tIBQKPqWtPj+\
jQFPhwNV8J6CSuIAnAI7NfZArH8nEByBQJgOkZ99gri2I7zoOTAtFbSKGtfqNSbQa4WhoJMdl0iS+\
bwJ3LUakDZCQSN/IPwoxQYgkJr4CF8BNkcuR+G3fDqTyQGCGNXswiWa9dFzSDYFGpXLRBoYDpDAtE+\
3mgokA5pjU9BRNx8BybIQvaBsyiYOrHRySAP0RoDZRqxUAUtbMcQMmfUU0SYTFYCoQAYK0CfJlWVaA\
tA3SySVDhrEJUEQHDVO+RLQYtutPixvDg30dAsNdEGWP+\
4GGLYdLEwRbmsg4QFVDwN9BtaUZgCU6gc8dRVwkYAANcpEBladV7OOWvgodrMFUYCPcCDV8y+\
WeAAVFgjKksMFiLI9bBGQ2ADcXBI0E+mFYTuZwthNwoRAhI+\
LSr6RYCJx9WeeHfb7vKAnoJMJCh0QJZoELcAJHgvEcywMPAd8RFPkSHDcAwhFwS89DOyJLgUpPq9O+\
fJXqXnlZJx/\
pEYBpcFv6geSBggGRjdARgS6uVNRAaFqM2aAZFDzKRI6yfQLWbRNKRxmwWjzuRydjhUEdA5TCtRx0n\
kCkLDAfoIMJtFCALZdqzo5+\
DKMcXCewkd5NFSCKfYd6gTcCxYJKun0excMcA1QPxBgOZZg22kf5gUEJMiQBvzM1sCMeHBOOBZbnOU\
yzMUvAxDbCAEE5IlNWy0ib5VQZyvhFnfenTFPDJHCTgu/\
axDeVDwqKnhg6pp4F2LXgYQys2JSWD5rsQzkasMCCE7igbiNSpjdawf12GsV1OpC9P36hdZIv+\
5Kk5YCXBei3SAoy4wVIkY5whIm+jIMfYIUW6AcRLnqRSjmCow/ggq9aLnIEs/\
XzNaVNV7aTJNL7ct4oH0ujo2QlHxFUF5NbpVOfZUMpAwfzBNAdPc4rmqnbHUcbIaDTLidJrr1fW9i+\
sBX+4MSdULpjbPNJo/mk0XzSaIJJo/8PzY78hg=="}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.867247344922814`16.3399769391228*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.915223362797099`16.345331532683705*^9, 
  "TemplateVersion" -> "2023.03.03", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "PacletBuildData" -> {"FileHashes" -> ByteArray[CompressedData["
1:eJwBHgXh+iFib1JiAQAAABEFAAA4Qzp4nJ2WfUwTZxzHkWAJGuStOoVlOCcd
Vp9WwYG8OXmLAgWrT9GoILten5aD611zd6XlRdxAYYY4hS26bIJhJItzRDJD
SLZl2eZ0S1jcdC+a+UKQOI1umiU6hgPmWil72qPeevzV5Nv7fj/t/X7P7/ll
awBclceSditiBEKgWEabz1hoiq/UbrRTJsRrdchJkQSdS/CI1zDG7GAAFZC1
cyTSHVTUr3Q2a0iXYiA4CxJ0I/naefYLkdEALvMfWsCYkFNbsVpDmnmvKD6k
hGUQzvn50zbN47LzCgBVUjk8sri/4iuSJbJeDzthCBlS2wBMDCRLY0GMRNq9
xMZI8OvNVADT/adtRWbEIYZEesLien2w1mpkaV6bw9oZk4GtRozoJR55SzWa
oty1HiPmx4Um/BFG7gYwXxYi14UQoN1qJbhaHetAHOmqmYj2uCul54zxdDKm
1Viq/rle8AwBYJYsWr7TRjAmPSEIiBP/p+MrJy4t7fpmIaZ0jwcPW0ZCXwYw
UxZFovs0D9esDu8hn8eQD43zThU+upsp98V5IHkUb0Mc7zLoaVYQ0aqpid4b
yT/OxzTVB87G4UxzjdxO8NCKCZsIoUhpmSxfE7kLI4J7hQNz97RvBHD9bBD+
i5PReHb0l/NjXu+tNpZTx6+4RAG4YTYYKHB2UrBz4l47FNWdVvB5TSwGDS1g
m8MKQjfN8v94eluE+diqSp94kJCGMW19/fb9EXyD3JZ2YywcYX1ykESUKxkn
g7qbzy3DlLDlD09cUx7OkkvZbHM/RdD+hkH97ZLOLFvZTkxJHn+NeuX7PleX
rZNFga7D6aDISvHJ7GtIGR3Zq8cA7bP31Z1kUK1cgAE5BUOtTVz0yar4OZMn
BxsxoG/J4NtZOzoL5XaXgZVs4/vsq9arZb25GJQRvXbgWG5BDoBpskDbWc7v
ZG65eOqno01dCkz4tvf6maZ1fKLcAbPce4xBxNVQ5Ixxpvyznwz5O2aV1z3Q
V17ypeqyEUC1fxpEBEdWTl1fL01dqkji6ipf0FpcODhEy8mTuqR1m3ZvunHk
/XUArggwj6ck4s4WRz28N2bcACAIJM5MIdrEaxy0RGS97hp5WMlvAXBtIJGU
+7MYCYSJEAjp5Ilze8cK39sJANQEkvzfopIkken4bH9s2tF9iwPMdHCUgDQ0
S1ZLZF7M6Lh5oaR1LoAvPiXThmjas5Wl/k/BQ0oTv6g7NN/+9ArhsADXqbZ0
Qv1DTIzrzK4MOLKiUiLw0fDJpe1hV5MATPUfaLALLEcRot1ic437VCKH6FDe
rro1vucgXYTzmabKwbichiUALipyDSVEa7ONvMARpBsiaked9YXJBAU4UYHt
WJm2+2w4vvb2OQe2BrWxXrMUK4t97dMz0jdAMfB7+bbRYywOwEqEJ8C964jB
veHqebsc/V6LPVaiPD5IWG30jJ98/Osc5cJ3rmzHTqzEeJylAkVTAjXDu6xZ
1Vp/53Ic9mJF6fFuI2jK9KSgInPSd3cGO0BoBDZjJVxPkDQSChgzK3Lt+yjl
7ppORR12YSVqylVMMJQZ8YL0PNjyya1wfXaHaxlYZHA9zIu7QvCm9htiDsSf
jvcqC1Y8dlFX+Nhbfhswn7G8W4rtWIn1sePNTBRRNFEXfbku6jkcgZXoqQhP
R82g/7Vj7M1R61crsBUrMVNW7wL7eEkytaox/FQw9mJFOeX1KbCP+Y2eB+aG
srwd2Dyt/AsHkm9WbXqBSg==
      "]], "LastBuiltArchive" -> 
    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/build/\
FaizonZaman__LexicalCases-1.5.1.paclet"}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
zrsfp87g88Tt/6LdTeIa30f3oy7G9cJb6g0/oWJ4qalZq2RV0DJjg+LbeX1Y
8hPR+Wlb3/9oMfKSikEp2scuy859J+uQti0zmU0+BY+FCNDOENnWe2FRxcDN
fL+cgn9ot/E7m3tjrIptAz5uqVmScStPeFxzXm9S836B1bTnyEDRjnr+c+0H
+h2ZxhvE52XPcAQYN28T3t3g++2R/Fh9BYfif3+IoN03NNWrv00URIz+2zMZ
baKFdEXpl9J+qLw/mPYK+b6WCtoJEeXzhX0taEPcwWnrf1LFU00QjYJ6vuXv
peL707lPD6rLuF/zaLU7HM+QKnvbfKyu4InEJ9oS9q5VVVB8CIEvf58+d8zC
d5UUeNmfnU1Lu+2bnWnPV1BgLqWtKk++IbCtSxnG4doxC0beVtFM8qD8nhMb
AssVf6iieoUcE3PzeUt+V85kfqZiiuRpmykwtbn9Z+ZTrqdRja7ub+l5/n3V
wBd8fwbXHtnJh3r71x5cu5MCRodUZR+pIHjs9rArx7vK0HmNeL85J7iTOyjY
+udii4Ov+fwbeW+m76ig1KxSPcv85n4YKkiIfs3MmfyjYjeXy5Rx/2tnmpai
2oOvKpL8TIibGU2/2qPijK+0axEmjZxGXPT6ZurjP1XD385WMK5l07sVk2kI
lQTFLAWHt4X0P5Zeg4luxIv23dIBy8oFkb+eX3fxGu3V5U0HJmoaKr0/NPP1
HAXJXi+vU9+h4WIde/eCCzg+I+fuHOJPPl2p+48Mc3n9zKomD3m/tANuP9xM
26tb/c1aWg1Zdf6poKRlTGLT1Brm3hzYxEq76qlUIfNTaEbehL9v8/F8kaIB
Gn426XTizzIFE2Th5dcQ8jFVsosLFXSS/BH59CfJl6zmeNyM3HWRfH3k+3aP
xxL3H57JD66rQdhaPO1zm595HWmi4cPewUc6r+F4d6rVZgTt6V6Fd0RtVAy8
X0fD/A21Mlxe87/262pLP1mqagisXPNX0DYFsq2Uqp7xIm6vPP7UlvGVNCN/
S9yeYXvScuG0uZoD9t9UcI8wOqGlhvpT2uSad0FBnU3v8wR24/fWT/638S0F
u+yWgOW9NZTukqN2i7sKwpLO7/F+oIaG7Wt7772nIGBx0ubBI/i+pNUhtKO0
goG7J2rQHRp/Hzjkjq97lgadvjHu9TuH1r/ma8Y+eq5AaJXzhgZXDTrM1wr0
tIq/C8kkP//2n/2oZP5XJ94rmLm47s+edzWs89lj7kybo1WtwCMN3f9k8dNo
tyZ6q8j7pc7x+H5b3i9ZzI19peM1hPvIhlPwNWWzOdWeajhyZmmFnZ8UjOm+
rOmoOA2vpsx/mPKXYvilBxpmlZOZVTx8QzN44EfyDEmo3dRQ5+NLWzLahyTP
90SDbJfbfP64LQ9fzLyiIbYYN/oH+mPCuRfbNFTp9OjJYH5vgYHlq43brmFI
vvd3B3D8dd66U4O1FQntJQX1s4dcrbpfw9tXh4u7iBsKrj4bGXmM87nywJHA
WPrXyE/dOp3i/WR/0JasXYrrtBcOzXL0uoKlks/n981ZfvJdp9sK7ozZ//Tl
Nw1Jd719tpY8qduUjE/Tervw9UXfc3iqYHuqRsNUqwtn72QKS8vx9l5442Zm
iwvt66tPs36hv3M3LfgjpQuVrZU2nPim4Lg4oiQu7Fn3ep9GnFJm/6ZmW15p
eJdaElMKch151PXZSQ3RRxmAM5C3cfu1PuGZH0XFlzzx0XcOaejSyvFjBHn9
l0fH65fcq+H+uIZ5R2sqOsZ3Gz+Z4xNEuO92qRhypPPNnbu5v5P1Tesmjjki
eeqrGtKT3l6krfsL2pmecKcXoR+rkSTfossaVpX+OVUr6/Fb+zQUanm5Z2/a
zVNdMNdap2HF/YM+C8qpxneN4f7MUXjAEuKey/bjF/z6a4h3vquXs6D6f/nE
NZJQzk/ctIbEt6OGqOKzH63j/bgKYm4M0HBe/A1xVKm1HFmuf4FD6aoQV0Rk
P5txtoZOiduc2WureNalrJp0sgaha5fqM04If1qk4ZLwysYqpm1OXjtylwan
5CsiVGzs0rz78kuakcdrStzjO6svXmiQ9HitBiqKS+I3A+crdtmL18RhfSSu
5XJh6ZDhE/z5PV0GvpmbuYwLA8L63//eiN9X+siJ8aEujCyb3Fa2tQqywdIT
h3L+hT/w/l4dOtxqNMRl8D/iLmvbq5kOD+LvJdHTW8XmTd5xkX1dcDzc/qDC
EA9O6OrCIeH3o1T079rneueOLuT7q/7+SlvKa+27u8DVvvvJWOJCyS+1d6GJ
4KuJKqR8lYX2A8nfTVOR+nTSLF3ruAz8PklF/ZDmjgIhLkSsnjrrzAQVN/Q8
jwuuBxnXxfHvS7hCB4xwuhBdZHKDCdEcP/GbuV0YdyX+QdrpKsZKHOT99LzT
VBVSNntc3+Xx9//smB+7i9RdoOLY1ZytzbVdaCg0aSHXU0ZHJ1stF04R/pqW
EEfnet1+TGkXBE48p51mg61RK+6fgVK/WkecpR3LER/kMvYDcd08wrKNtFMr
O8ZN36fC3LNswpK0LkzTCmx4dEA1+PhfDUcDs9RJcUyFX88BVVp+1rDjVO+D
i4lrcn2dfW8692/qV39tz86qcFR17l3yR0O/F1nypyYuU2Sd0LZMWLVtOnFb
8ucTs735zfgi9YbrKgRGPv2qIU3BTn/PEEcMk/wq79dzh//Ps8QBdikYvNeM
PBxxRSUBNPSfer2Tcf+s1IHvaTik80nV8PePNejpRsZ5vc7F/X1kwsHhhRi3
H0865xpyWMN6yStloB8sXGr6b+6/YzMqL5udifv63ck3s7m+DzdWynzw1TBu
aDlSN8YDCSOMq1My9C+yfpOGUc9KTNrup6EovUDbpRrGS5zl3wf8PPv29HLG
I9nA6TRcEx6whuOXI/5UcFINmSUhyvjyW+pFSej3JJHP/SblojbELWRt6uRR
Gi4n+ES2TVQRLWFvsIYaUjf6xP0q+X3Gu+oZezmH8nt1XtZeg++BiZF7vqj/
Vw+Q8HcgOX8n/LmeZuCwlNz3xbizK2vIkG1+91GpNPQVYFddA4PP6lirBklz
5CYeWOofFLM3s+bJy2qoNbj2m6vEEbL8XxG/aN2iV2bIraHJs54Nq9k0SDlj
Z7CGXGlq1jnL5xRb8OOaDRpa1Cj5q3AaxhNJ5zCuB8r88DveHSdQrEK/V/HV
mg7Ed96SQA/1xGWuG4jfJk7Q8xoHVaNuRlyR4+em1H9WE18SVuwjTnGPrGSt
tMDDl/idUp734j4aL/Xc2oyDpEEVab/Kuy9rBt5Pr6fRlt2yqqJm8PmN5Gdd
G71fVprzuqHzlwUzuI+lnl9Ugzfp38jxKpZvVs43KMT3/7r9WDPyLcO/azh4
hBuDfEqv8xDnVZSNtobvI4V+ro8AIQrc53rcNWlYIIVJ+hk9r51RQ4fm65NP
4PUqDNN+nA+f77/yleXf63Uprle9zriVfufh5dhMxKHvdcJPfnN79eP8HEff
3SRGO4ifpZ5NXPytQtnGF2hfS9NOi7qpGvyPdnSSW6/uEecPEx40RkW/bBzx
/eSJXEZx9JtEHf4T93pwOd9n3X77w+1bVANnjeN4SD5wNnmuOEqOT4jUW+n/
Jo6oenIB/VqlzL2SzuN3Jas4u+gY+sFfXiuKdBuuQmjfRv7/F6WATd46d0Dl
7/H0y+9OHyu7sZ+KT1EcOD7/ih7XVGPfdmackPzoQBVSzqveUEVr0uz9fO9Z
ydesbV1SRdZJl0uso398ffXDnGElyMeCZsal4bg1k0RGccZtSdzspP8TwQiv
67zlKP2DJMwYt8ttbB/fjf6rc+dqNRqYyDfWP1/x7TzjjfDLJCrq/ewZ3Ia8
J7zDV+QUHFfkqfc78p5VNy8Xi7uowPGZL07/9NAnLnv0JgW5c1YPLfOc771g
mWvPRAUvKuf5q75R8fV962Wphyno2oyB/QPn5fyJ+197EmedPtXwJudPYPeO
doqxjrh/mzRKP24AeZ+ex+H+DuXqvxWuIETG5a2KiIpb714hz5q2bctqO+00
oouh7TOOC/47/fXL8ItVSiso0evptmD6t4QxmY4uz61AaNwW2qME72RWMCWs
6Y9ctE9c4MSoCtxSsCTPaCF5APLuNAFjCh7y1rB1tf3PPBt5Y7upbwZm+He9
1nw6Evq7gdxmwy3kXdfUosfsxPGTXqSpyt/HBgy3zcinofPn/M6M2RQILPlJ
f5B2+trhtYoriNt17kUM/VC+bFfbdSePFDnF2Jr0pz9yl2jI79H9U33ioEmu
64/qKJhe/3nQlKae/dyCvFYSzc2J87mNZ5En5srXqtd6/r7BBAKszuRdQhhb
EKdc6dIsFe2ctVtEqe00dAvxvrG8poJ9GdDBt62G/SKoIK9t8fSSdod+9FUt
bjjy4OxNiBD5+9GSAC2koKjUx7pqEJlRK85fy+2T12XhdUnb5xnF++n1Zg1S
Zvnbnzg9/YPcU/h7v6kt/LuQh+p5S9oit/An75wkuJ08plnL2Wvi95LXNKn3
tSntYlGNZ9w6TB4t+Urardd+GbycvGWN5h8b0F2DLW5wx6zEsVWqPn2Tug+f
H/hh4Rx/FSd1YcM/e5kArFH/7AWSdxpLfz6XAYO8K+/G0cdDRmtG3m6dgrWC
H6dqkPCcnuv5oQhUaD+TPMIiBbXF/9PWeTF5ZZ1tBOa0t0q+ZwN5QblHjqrR
mqGHWa+gQrVx7v7jiBOKfj/ait+3O3LIrRDaucvZXj0iL0gf8dl/Be0E2Sf8
vm1Cgybw+UFTDsTTTrKp1cmKUzQMvbCi+jXa+StF378zQ8OkCz+yT77Dv5eq
9FzNwMc3POuXcXXftR5Xfj5TsGP6kVof52l4LbDkFXnhp8l1evLv8/Qgo/tK
XpndvuHvdA1TJZ7/IQ85FHNlBa9n+tUlc8mUnvwYrxv7SEXiNZsyh3ZTyeuk
VXHn9INs/WZ63je9auCRBeS9DHtKkIr2m65Wrsrrp49vHB5EHnBL8tnkmTf7
bjnRuSj9b8mj7Y/wfccE3LrwjThflvHGlRrEu4fRFjpXey3jFd1auwIqUkiB
dYNm5DXze3DZZvISwvSsBTz13hjNWBdZ6ddTLhqQgThGYGC+0ox/Ur8nbzPy
38Tl2wngyHOmcFkU4/XgSdvrxh/UULLrhbFXSvH9GY7qEzfV6bHnSE2+77dz
RK60s8VdrfQgr4pMkkaL1SDuMlN28hbnwr0fT2u4OGLftt70z7sWVO1Wj/aL
5IUyFalGHHus0vEZ5IU3h/WoOCOc/trDw0RmVpG2rqvh/Y+eGG+pVkdFkaSS
cdAg2buHTeiPSV/uErddbHFwv1dHFeul7kI7lHDzYC8PbzqjoV5zekDGF31d
074Q9Cx5J+L2g+JPj2u4YyWgZLx+7nXEFsLvzViBEXEXv4cweuvO/7WXkM4H
r+J4Sr2D4ynpYi/aR6TOQFyYv3xYs4vEI/J5lTn+tnJeXV+vVQ1/sUWDbIeS
GzjekblLpaB9u+yUEaad/+xBoodh3BXYeIx/P1bqk8TZel16K/GG8MyrKmKr
Fh1XZouH9xEXBHt4mR/p1i3ivAOl49eHc30dGFN1cskUxEHiaLk/Jd0286sn
n0je5xVbsF3CO8Zbjk6N8RpmS8LzJXlb0Mbl67gf1S309PdUuL7fD+3N30sZ
ezXtNuZHDQLJQ/XyPu17Ur8aqUHKUgsSyMveVBp/aijxWNo5hze+UtGj6nq1
G/1Ro1wVPs58oBr8nTi247VNadpfI3548/5Gq0Ea3mZmIGccTsjXLGIo7eSi
IyPeE1pbm7//Lx+tr+MhnrwYx7fHsqajZtDusbBioxyLVTyW/Auf37RYxmkp
yLvEfWcbSDx5a0bO/cQjQ/WEqYY+b0OadOf1AiJo6KEZuG4FeUm58F39O2tI
cU+EjuRpCa39znb6z1+q2CKANkpD8zLztrbjfHVNHzWzOf1zzRciHOX8SN6T
drqG914WP62imD8RHv39f/qLqbmaJ93F++t6B+KKTZUe9vej/erslbDzHI/N
7/MEfuDzTtBdJJAH6X6niwZdPnSf++F8ybDLvP9XwXfECTsaftlzu4Nm6DjJ
K8Le9snm3Uoz9FHE8Y1FeNpEM3SlxJnxWzrVakP8rMt0iNMd9cggavC/f4wY
9jyM8yB4jHhcl41F8vciQC1HntQj3akIvoek+b+Xpf+sdaDwFsaVrTU7zuvD
+wyTvCjXhevt1s9LS2oQWU19rqs95s6HnxM/6/qZSYxjvQiwaK/TBXIaPklg
pr1c4in9rpR/GxYjHq5OR0370qXSR06U0DBBdEFcx/4TQ18mJw/JtrtBrRGM
00mGF+//i++t19f4ncMk3cv4X5nbcFkzDVL9XxHOeL82tHGTlozz4kBpt5J1
zLhfdY4oPTUoImzgutNOMXKTB3X52LhnDJ9fRfRh5AelhWCL331DoFlGM/LY
9LtSni1VgfFV6lU7GOfaEply/KTs2IV2H0l08X4rXHt+jdmu4U+aPOFxNT3x
ajX9frueqbZyPiTNNIx2VW5PG9/ni+iWV5GXpWVE43dllbo245giOIa8Lm7m
xY/BczQUEADE7zokPJVxyXozx5FHxEN6HOH8LBf+wfXwfETrqATuo9a6/pP3
3znX+wP3wSvxy1zPy+h2C/fUsCZF3kRv4ottzuzaMa6rgqIX4P5II/k22hlE
GEi8IeX7lVynI2R8yUMvV4/M2IDrsq3knWkLLUnWS4PIE6P/46m8f9oby7uG
9Ce/Ef/K9ZRV1gntz3Ev16/n/fuvzFXONoDvt+DzwQ+tuX6FAHD/7qn6aMPY
Dh4cy3nqtbpkDdkXwd8ceYqLP2l9NO8Xvuemff3WlRvs0RXO1iDDdaGfhjmB
jEwcP5PoBnjf56Jjot8X+WmW5h4dHuOYrtPlutHr+7R1nQjHt63UG2jfEF0k
x2/5k2vFU8ZpOj21Eu/5fixzsc01ftfIVkl8iQfbc1oL0k6fNOeYAK5Tf9no
/H3phFsbEjne5y4//lbkHsf/RM2w7R01fBh1uu6RBI5HEeeN0fzOHLqD1tCz
4oyvKfmdizKtPHDkOedJ1hHHsXDE3irpHnF9hzPQcXwP73pxcTDvv7tpu01X
Oa9NvCv/dF7ieL9s/Kwnvz9y2OaE62e5L6UwyPHeu/LalN2Mu7p+muO7Tngo
42jgCvOEVSOIl+8u3HGH4zOlSsULRzmeJUW3vknDXxGUDNOwOU37SWW4XteI
UJ12jp4RLWcvYZwMzhU3j3gyeY/P3w8s5Pq3tF+7n/teVIzfJ2sGj+K+1+ti
nGcdn8705Pn53nq9l/hJUPRurqcUo4WIe/LaHJdkg7Qa0xjvRhe7fqIT13WX
SsVy912qQdx2GK+PuEcHx31jkwQjx23MQ1dk6Ariv5upj7/id48aeGlbw5Ue
P8F13Hpd87q1+R0Vt8UMOsX1I2nrNWvoLzpJJlUzeCfx1+6uijst53Xg7ie7
66zz5A/IK3R9xXrO26/apbs04vvPjEnXjX4Coyfb60Z68lcct6bv/vTdzPc7
PX1Fxyz0GzWOVrtziPssxYno/H02Mn6L7pnrotbYoeXWMP6PPzO68Eyu07xS
UKAfCZa6DXlP6N42H88Tj2TqXGBdusacf8mTEY/MrTh9Qv4GGhZKoXo3+VT7
iddr1SNuFuEY7T9fuWNr8XdSh9xLPEeYup/2ANHj7qM91btlWtq6zuYA43/d
tbeShTAOSWMF8ZfQvw35Ob+EjVeIz5SIG3lvkucNrEIGRHyl6wWcGqStYRDX
nc5702v47dtkw5rLnv1BPPKrhABL4jNxCF6aofun3aJu7axLfqjomPPr7HtX
NayUBCN5sZ/XY3MhruvZMqF3VCzu/b1jzHX6lw2JTToxXj4S4e0D+r/hhVpe
Pq6iau+o5I+eEu9e6HT0QIyKyz17Fyj2kvj+05/SYUtUlBaBx2vP+pxEfNG2
n+PuG67rUo+PDhvK+Cx9AW+Jd0hPqwxSjTjCffdb/HZXFRUZdldyX/Y/asqQ
jfgzu+hmafu0HVw4VTsVTSX/+4r4SspizVS4BffxeRePLur9vTHxl+QzaP8e
PS5l9ga8HjpgRN7Xnvmvq+Jts4bta/N9Q9osKfCnumroMmj/kX1Xy4OH+H6S
vj9XU0X9nL6D177juHO6NtJe0u0hKn/VjH6Nih4++Jd+XPSh5Afr4l4PC/dy
YVRmR80i5IOFBU8kcRl9M08UnH5aesX9Pxp+fDMH+tDOf/Xr5g2f/9l/P0Ts
KPCB+OJHrosjyKdOCr9//8+eIY0vHE8930w7baauqevx/YvWnfip6EMFwySN
yvGUNFjM3X/2keKu0AFXyd+FCNHOl/dwqRLXFOxcGrng0AvuW6kD0Nbrgxwv
S9jc+V3iFJwVvTnHY8DBNnuiaEeXXDniy7t/f79WAPOH/7WnSN3nooLCIiz+
yPWyeWvVurTDFtx9V5PfO0X6TmjP4Ha9/4t8UoRTzz11ZtpJBXe8VfCgbZNi
GZO6IDLpzdcVQ8eewoXTMc0fRR9VDBxA+2+0b5aJ5NPHRHjN3+v8cb6C1H92
TbP/5L68EJay0lyPvuaH5qk/KoZO4wvjqOhEZyk44tHZZ07SocOt8QpEnvOW
499aCqJjFGwUPRS/v/Ky2bVy0W4jdEd094XRfg3vr/MLxg2rjB/5+uNf1bOV
5/7ZGJ7lV+1DipE3uq956pkqJH2/4e4/O73oF2/+s99JHvKWZuQJLykGXrtN
fq8nkjl/I+lweb3SBW6AUwrae3UZlvyaB3fsVwz9Kvf3kzpeE9seVlBUCBP9
hcjF2pxTYM0R+2M+/YneT3Ce4y35iIfE1xJXbymGTobvr7dL3FOMPot4Dc+m
lg7qG6+gXN/t3Y5z/fErbI2e/LP1Ov7zf/aQqGnOD1yv90V+z/EJbNncfvId
16/oD/k997uJAJrPE92Q1O0Gx9ddQTtFYM4O+c5rKCL9Klzfej2bOIGrdeY8
vk/t2ySaR+mHZZ3fUID6jbce2u/pa+D7J0ofG/ljsDR2XFBQqmeZQWcZP/oK
bjygYOL3sHP9Gd/O+Mc/1bh+0vXmCmI8SpB8w0YFmwljFm309A3Qpvfr9Zvx
4+3OtOd77VXgJf+QLw6Uuhpt39vd85xgPNFlSzEKMovgjv7/58aF2dKsVbB+
ZppDcYcYt949nPZ4kSe/Q/9v6A0V/BHgRlvSMJ9nK6iVa9d2C58n7THphyoQ
OW4T8lUvIQ5DFFyju2nO+HNS8hS0dV7I5+n6y84KzgixEP6dZEzNlb15v5Mt
U+Y4pkG2wbgOiqE/YLwp9zd5YM5GnJ/fdEAczxNSt66lYN+Im3PLEsfo+od6
ClotYAA8pRn6hVYKLuZXBhwg7tH1X7RPCnG59M/W8RPjiSOAjCOM8yf1E67P
TYumxxcN+7eepbwRRbvgoXnJkj+mPxGaWl5BzsIDlvjT/0v4z1FAgbQVrH3h
wYHFPDoCxgOiiD1HSypQn2a9Vor+MUTypCEK6tYvdfaT+E+p//L645Nz9s2i
vVf6EIr8u67j80IKbLIfaM97Zl+dwPvv+9hwUapvxC+Sd6et4wf6M2l/elxZ
Qc0k+RaVob94KvLgZgo6iv5H/FsL/y6tIhRcEeEb/Y2kkzu0Uwx+zXixTeeV
CsaK/jqZ6/9soa9vU/6zTfID2h/mDDvzvRL9l+g9UrswdfDPEl3zKPj4ToTH
LuhtTU6Ol9RtUrkgvZ1eigJpR4hJ9r/2MdHFaYqhN2C8ejA6aHM/uwKusge5
aQ9M42+LCFJg1wvJxFPynb70/6LfoL1c+sVov05Msa8F/euQ/fU3VuPvvywl
ImZ8DJTEs0kx8v4fPbjSoeDZtuAMbxlPhL6/4PNaiEPkfI6Riffjes5Chs35
1mk/79dWhCr0r82/j51jMtO/2scnHUT/MUkS0Bm5XwbFjkpGf0XUUjEkuYJf
t6L9ptLWZem0yUYyN6B/FZnh6mQeHR3961shpGkUDLkV0q8B7Sv5BpavRltf
B/SXuzD80cnUXM9S7+V67rWFgemPE3UFx9E/6XkW2v0brCl8nuvfNS6i4tZf
Tgic+sz9/Uj8fj4FO6R/k/it26vOi17Snt7kT7lE4r8H+S4rKfIqmCv9QMSL
JXal+XYmF8fv+4HqQ3Z68sU5FKyURhf6rx4ChDjf8XMWbTlO+27LF+UCC/3z
NwOunRnZrISCjALkiFflde6WVZC+24YJd4i3E0uP+fGR86G8q5fTl3j5cRJG
NI7fhSIMCMT/z6SQ+taJT6SXq8jrpC3telrF6NMjvv+Su8feXCk9/ob3uxpw
43u1r05s53ReIF4P3bq825r7TryeMHLnAuL17KIzPO0Evf2VI7x+JopMZ5PT
2L/0r6uW3KlqWe7EF+lLJF8o0nvcy41LnZ56u4bj/ZeHz+nsRLc+1zvvI+/x
7Zt1saOk0/CP9Nc5ZUJTOZFEAvZizaP7dhg6svmMf7IuBzjg5HK9SD5DlHyk
UJQDrwJfj+7E95Oy4u6aDqQTgsv3CZbE7h874kUwsox8Vvo1Eu1G3YC8Vo+z
P+zIEDqn/c/ZnrzOX7vxXNoiB//s7YDI5zBHw6m3STOnyOLAO9Hv8O/HfrM1
mAwHzu0h0OH3ldOFyg5D77LMozNq7DD0hbPIrwkDHwY6DJ0n50fKZEtMDqz/
cKV6JPldXdFnZXIYcZD8b6rUbx0O3Hr/ObQh+aGe9+Xf+xqCGgxOGJ44i++f
X/oGRnJ+5ncf1Ye2S4TvEz319Yd2hAjfJ49MbDPfevWqHQ0IW0pHk69K4+Ym
O/qIXpDPqyW6p2l2zF0Tb7k5XjN4RE87hgSpwbfHkndNTm6JamTHgW2974zi
8we2jl/3CnYUejg7sd8Ij+4lqx12EWYN8dTHPtiwo9vxRgP7e/j8Zxs2TPk4
vQOvh0kDNO3id+7OWTRUw819pePXf7VhheRf+D3TxN867FgiggM+b2/HND+W
8P467+f7hIouKqUdIiPKNp38SgJlejuOSx/uNA3SZbTjiA3XpF7G3+tp7S42
o57H5+t67lI2vLtwu1Mgv1foZcxHK2wi7JF8qBQ07lgh7qAk+fyo9DU2z3hq
hbQpdOqnwUw48fuyFUssRHa9Gd/uJ26JP2XFaNE39GR8iLh+POkhK3JLXZ/X
30q/9V4rZhdvGuBLHn9P34dWVNX7hzRj3BZbUVzyjl01Q9891mrUEclzw0gj
C/ewooKe8Ncw3W4d1rep1ehzIA8fUY0DGm5FZ9EjkSc7RFBTygqRnWzvTP8t
Qt2yVmSS+kZbDWk9fW8iX23cknhELxdaUdj9duvnFp58p81q+GPa70nHG5mt
uCMCjlYaLkcMCv782wK9jaaZhmKLLg7t/9iC8vu8s5duyP0jPPKMBas3DZz1
vJanHnbQgg1/e8zJW0PDt5UCCC0oIAGrnGd/zLYY+L+ChmNzm51PMtyC+Xrj
H+8vdZchFkwSvlJaw2cR9vax4Gxk5KduIf/puiyGH8hHviF60QiL4V/Iwzvq
ena+b/5kMz/kJT6YN23DsfwWQ6eUnevX9/WhC+kt+HE/tHeUWzP6UF6YUUTO
JVA5H23Sx9cfZYZD5umdilM70xWrmt2MFiLA26Pidp8K7w9dC0J05J6V18iL
X/j2m9bzTRDSST5pnIo6l95knvQhCMVErz5MhXE+g9moQ4xUMaqStdKGzGaE
Sh1qjApxVyUKmzGgyPpS9SeQp49z9zdXMCOhAwk/efhB0TvXM2PtkULpnFNV
SDuKTyez0X8arUJg7vnxZmQUQcxsFV1FL7bUbHzfDBUiP/y01YwoEUpNpy26
uhgzdki/NZ+n56dPmjGtPBfcZBWyzetcNhv1Cd6/g+jR48yoKQc68O9ltorf
Nht9cnze6D57xr57YsZobtc1fJ7Rz2xGga0/dhehfevVPee7L2aDB85SsZ1u
5Vmi2dC/ziFvGv8sSa6kFvhIAwDthen4P1JZcLPawVvP+PuCcn5CMovBh3i/
5qKj5t+vbvKwaZ5pKuJ0gGVGKe8by7tyvHSdwTcz3oiehd8Xq/dhWoy+T87P
18trcy5OYTH6QceruEs4EOFnwWspwPP3fx8RB2SwoEeeE/Va8/tHbx2lpMps
gcg3s/D7g9J0Kj5bsyD5zA/vCnK8oidh/yanxdNfzPlP2B+bJ5MFH8U9jVUh
sEfj/aoVHVem+SgV4YStD3y4X3KVs70azvuJf+HvowUXDfXoAXk//XwMXpf2
+5jCFoyV/oIR/B7BNbAY+J7rZ9NOKRxbUFzq4vx7XT9c0mL03fZXIbL7jiUs
yKM6P0f15vxeJrCtZYHIIRK6c31JPay1BSKnS+zpyRt1tWB/+S/XD/P3IofK
Rtvwd6qn79ECaXtpRzuP5NN6WQwdTjcVkhaI6mEBvNZWXxClwmL61iCRf//r
8YEOrWurKCpCzaEWTJCNX0tFzIjQJifHWvAgqkfL/rx+OF3s2PJTacvxIbTn
CaGfazHq7/y9rpOkP9H1hdVVo29vugWVxAFVUrFG8j9L+P52ETiq6CmAgP5I
ZJs+Zfi+id5XJp6wYIHeuKIa+b0jFpQS/plLRUqpb72xQNxL13xcD3SHc99z
PtNZErNmUw1/bLciKPxDxWf5OR5Sr8xihcgvc2f19Glkt6JQu4TFDzQVHwfM
//O6khXilvwyq0b/WV2rodNQVXSSRHKkFSX0eVcRKsKJNlZc+hi8u6SV1yfQ
c3a3GucjWD37s5sVraVuGeDpS+hohZxO0TyTiuDh1uyNW1mN/rV0nj6Txla8
C6hc81dqFZK2XsT4IV9VNb2KVCK8rGqF0IRyGVSDNxW1Qrr97vH6MfnAAla8
kPwz7/fD06f+X9/SL32BWzHocceLudKomLh0Qbv6qhUbpC72V4GUwXszPum8
4bdi9B8GWxHvTjls5ifypJoPU9fmeI3WC0AKmnS/m93OeFRwhu+bHNsVHBS9
n78VR3uQeE9XMDNT4NCKjE9f5fiZ0QoGjLdpnR1WtBCe0U+BfMZf6Xv+dMqZ
LkpBbxEC8Hqc8IT2CnpI3tnHCilTOclz70g9hvc/vYoOhbzvgxxHk82Ki5zG
F6HkmUekU9pq4FHieJFF1oiwGn0UuRWM1xsxiCekMTCDAmmna8D5aSqNQFYF
NSTAjrCilvSBJ1Ug7YyPR1mROvWzhA8/nej6nkBnmBWtpG1it9PIL0/i+DTc
96bsNqeBV4kvVnQVYY4Tt1IfJ0S24eTnkZkdUIw8lM2G8hfbXHuew4m58o/5
n52VYc9MW9JvM+s6Ie3X8ZoND+QcjAJOo28gjw3tZF+Vd0LSQa1K2jDQfKJ7
1ZxOSHty3nK83+h6+6eanVitF9pt6Dk5ya1Xvx2GLru2DUd1okLcmzO360tn
G54cHTYl1wMHcsmBD2NsxvkrJx1GX888G7bI+Q3reV2O31htQzYpnM9xQGRI
p4bZ4KUvsP+1L3mna3hvvA0xx5pNLzzeAWlLerHBhtjuDFhTHUY/O/HgNMm3
DnKgy75LTVZf5vuslYYD/r5QpiLB92xGnjLCgUayzt/YkCB5sTAHtkaHNf3x
2oZWIl/P6jBwxDsb6j5eOf+4wvtLXv6jDZOlX9vpgMs/NmD4Lxu8RRhtdhh1
Nx87nhB+Rvs48LrQldr9rHa4pd3otd2omxS3Yxa/5s4rO8YO7vT7c2k7JsuC
eWBHpT/NH+ypZMddaay9Zscj0ePWtKPJ+PVnDp61w9b7fv7gcDt+JcTNvHjF
jjq4/dersd2o4922Y+PhKdc2RtjxR6bjkR1OwYe0pcwUxue/aCwZGzt2pz3f
y5LGgZ7cpu9K8boIFX6RZ1y4P7Ks2452UmDydxhxwmQ36sVFHOgtQi3i7zmS
4CIP6mIacfhMEruRryVv0/u9n9pwSeTb4xy4cjbbrMa3bcZ5Ghsc6NuuwcS9
120Quvz1mAPjT1ubPztrM3Txtxxoqp9fYsM8ORfqhQMpRTe9nutD1vEPB8Sd
zZ9jw94lB1uHfeMOECI42YZSMrDpuX8Sd3yRvv54wd1uJwo0sXt162ODwNMj
IU7sEz1bLz7v4vzxdRs48dJr7L7+tKd8WzczTTMn/ob0fXOltw03GzVzb2/t
RDn9nAp+jwhsOzoR09KVcfMEG97O8Ln+t6ET4lbGrbBB0qWNmnA/6cJAm+EH
ajnxTjbMaRsaybBXc2LY342tTsZ67sf9dchnQcFlcbyu51WcxnkgD7i+rte6
ljyT09O/bUPl7vS8/N6sY/dmwEvuT8K8JC+5H66Fv8770wZpx17E8RssetQ0
dqDxhZW7z3C+Xkolh3xX1+s4jP4P1Q5vkRns9cwfbX1/73HAPiPf1a957cZ5
M+TlG6ShnnaA4BTur//6wmvrjftcP+efzO/UmfxN0gK9HFjyybKvfC87OgSV
0la1Io+ul9N3cHs79kpiItxh5OP72PH+4bTHYVUcBh4bxfVTjMCgpAPRcgDX
Eju+czoOFXJA5OlfttgR2q3erT70eOFtQl91uWXHFl3ozPV9WDs0+DvXr65P
5T6TvG1aBxacLkrGaUfDQgsXpuM+PFUzbPv6KXbIsRrLrQ5Iuu7ZODtSlo0Z
msbm6avmextt7g6Mlb6UlnZDp5/OYfQ3kxfPDi/3yMH755jVuFH6Kna8ksI4
7Wmik+M+2l/i5NDX3DfvQ/RIZvhtlwM7GXbe0nZn3PwqMJfDqIf42w0dThPO
m+SBvO0otjRjkjFdHZ75tiHgw8I5X4Y7jPOO6JckfPemnyxULDRi4WObobtb
7jDOPXlmQzOhV5zXlyLcpJ/T/ddFB2KlvnKFfk10Jjfo16QQxnX67E3q1Sne
8f3eygFl3Deir0vGfSNubxv9qBwA5+PEGdHfH7BhvZynpjjRRoTrO2zIXNZ1
c3cpp6GHWW7D8QpvX7yMcKKa6NGn2zznrzmxW/QujAO6/5jkxHYZj3H0u0pC
u3rznYjzGVL9+ljy+FL2aPMap6GjHmlDj8W2FGNjnEb/9yAb8u8asKfGQSfk
eIyLfW2GfvmMEyYp4HHf7t6c7PnEBKeRJ6ZdWvpu3jhRWxK4U2zgal9aIaUC
kf+vmGoz4l3af7bIFPdnUjBRePJQ+iFZ7uZ/tsDocPs/W9dLFvln69shmLjn
UZLWdRhXJZ2dvoGCaqu8K2b2t2FQ6cIRe4lDlkQSgTKOV5X+g14KvKRs42Mz
dNmjPfltLxvk+LChUxVI2Drw0YpDg8emD1ikYB7DedwLK8oMOrsgz3oFsqxe
P7NCP8Zns4LQH1V21HhuRXuBSTsU6HLBt1ZPXUOBo1jb8u3fWTHpU9GlGY8o
sEm+hPZi0SnEKmh+cL/Xz1NWo/5KXLZFPzfEirEV+2Qs+VgxzmNYaoWl3uhu
RRMUZJFEy3wrslhWPMj+WjH6tqdakUwG8K2CkeL3RltRs87Z64kfFTTSdcnE
jYOD1OCX/B4Rhje0orII0L8pqDw3fYHTla1AtaOjghMVLJCDI6pYcW42Ax1x
ZKTgPdp6HcdLRaT0LVf+Z1eWvhni3GFJ3z25Spw6SxpTiHMrlHn//Stxs8j4
3hCHimyqEHG4LhzJZcVKyTe7VKwSoQxx7V3S2YpuFRtEkJTJCus+EiPygoEd
m69PntYKOe7hRUEVp6S+k+R/bYF3RyqruKILJayQ8nr1GqqBj7ysRp48nLyp
SvaErx8tnr5k9f/OY5P09UHyqGWiL7hmwfHXre+070HeIYSH1/V6R18V62Sf
PbBgu/RP91OhSZ6MPKblnpXXpvB6uACAtxaMETwnfx9IIvvNghqCS8kDGS3W
vf7J36f2mhwyQEVvWcjEyWQhHXeRt0o6aTZxuRw31X6qimr6QXhWox9t3j9b
2tnjydNt0s/E79fPWVvE+amQflWL7+RtIqRbqBp5yk8Wo/9/roqXix9EVuD7
6nGBtl63SbCgk3qqTJrlKvqLLvGuBculL26lauj74z3n5/H6CilwxlmM8y9p
C+2dt8sCQS3dYlTIMZZpyQPHScM57VnSuDHfYvSl0NakT2Yiea3s0x0qPkt+
e5TFyLtuV/FdAB557aEOrY/m5fX+En87WIx5PKwiobYI1P/Zev9orX+2nmeq
YsEB7fv90J2qgbeCLbgliSnauwXgFCfPrPhsaund5K163cCCiyJY3afimYxP
bgvyiV6dzz96jwQhqQXPBBhyfHV/42PBbV2nrcK7XoeveGVGcjnQcZKKriIc
u2yGyB0+jlYxuJ8cUGPGBqlvd+Hz6S4D1phxf8yIkdlo633JA2gvm77yekc+
v36Poc3DzNgvDZWtPX1kLjMk6telDfGz6c0Q2X6LNqqhy/gQhJpSd+P6+hNO
5PQ+CBldHOg+XK+SD6et9zfT3luk7sRP34I8/YvcH3pcCoIck1WW63F488mO
QzeC0LfC+0MzuR/WVV9w992lIAhs6ddKxc6MT5aM3BOELY2TxyZy/+j6hA1B
qDsuZteMxqqho18YZPRtNFKh6PrdIDT/26vz7SYcn4d0PV2DcMMS+qYC72fg
lSCIrHooxyMsd+NXE8oHodCOqI15+T1PpE4E/r3gee43kQenKRsEaU/2H/jf
fAZh4uLYAz8GqYiQcxFyBMF6r8zrasNUnOtlab/WFmTUcUd5+jgzBhl1rrGe
8658gqDL6yerKCFC5AxBWKsf4Mn9a/pY5mLKILSP2pziwGx+rwCxN4HY8cjq
vZj766jQ1quBEDlqvWUqhvp8eppidyD4Fi/PrPbo0ecGGudNbvjvPLZA4zwB
7oe4coX2jmgQiFE355Z9zvVm6F0DYRVce4Trh7DXXSIQ4s412mNFT+b+Zxvn
qQUa+ZID3O/5n23KnDzw/85Ty5Yh7Y5VPwKQ5Hb4tguX6C9F/3U/AClDvXMN
fcj9QXr++VwA7g3Y/WT3JxVSLqt3IsDQ5/xWjXNSjgZAZEappW/vauv8W/fw
7+WAm/QaRLY0ZUOAUf/213BGGk8W8/ft47uNd2gIknlYGoDmutBPQ4TA4nkB
GDl/Yo5jxTQ8ut+2SbEpAegy+Fj5EeU9Osn+AcgifVWhmnFuVUQAWpZSLs2t
phnnbQUH4P3tlenHVNcg7S9jLQEQ1t6V9gIR7n33N/qL+ftlkih64g/Zjr3L
e/oYjvpjeRE5oUNDd1mPW/w9fcoaNgivW+Rv9GnR1nnrJH/UEtxSRjPmo78/
8g2PrbaslIayEs+i/CFp7TLBGnoLX2/qDynbjy+hwUtvjPNHVkkf0P5ehwS3
vD98pE5WlN8jG9zmb/QD59TQWeoPyfxR4cv1w+HZNSwR/ep1P0NXmU1DgP30
09LH/fBU+mudGgoU5D/b/PBzVvGmAS4NdUXXtsQPnUdb3/9Q+bz59Awj/Iz8
h+rp+2nvhyd+vBH/XpexhPlB2macFg2Hxe8W9kM6/aAYDfkkL+zyM+odJn6v
mtRnqbcf5JiDqEwa5BjaeSn9oG8rHw2hZXbNLkQ7dR9p6OT3iIwxqR8qiSAm
Nf9eDtz66Yulct5ECg0vb21IbPLGF9IV751UQwcBiE98MfdGpjFR31XclfOg
4nyRYe/Icl0+qOgucf2QL6RN+OcbFYuuHEksvdrX6Ct4Tf+8q39Y/8W+mCH6
OV7Pw2E6NNrXOL/lnWqck0L7KunQU97vIOmxa5QvWnRffqoR17+cDtdtmC+O
yDKg3Vd0PYN8cfRwj3cPP3I/SQK3vy8mVbh66/R7FftFl9XHFzFV63ZJz+cb
5+/6Yvc0bsgEFR1Eb9TaF1KuL/ZYNeqRTX2NePlIRamfU7UC1XxRSw4moL2O
r70Qvugh53HeVzFH6rU5ffHVVaFVg6cqLt3uFDiPtt7/9oL+TfogcvviDT8z
yysV4939zScK+Bp1G75fnl3bLaaivqgm8eOLilySt6d983B4moBvqtFPzt/r
vOarCq+sftqDfL7G+Sa038p9+TxdJ/2S+GgVI0UKXyQVQsn3Kybn0z0wQeRk
Z6+oBo45YDL6T08xXgnQ3GdCL73xTMVoOUeirsk4r5D+K16eX9sEOd1i9F6O
l+RDrmXCIIn7/589RPj2Hn7fju9+XuVMmDuajpDXIyVhWtQEKVtu4/3C45pb
RncxGbpP2q2kEb2tyTjP75CK6zpPMBl54a0qasq5GN1NiH7y0Xll87/fyzGp
2WmnFt1MYxNa63lDjp+cg1jfZPAA4glpVw0NNeGTFMh2EZ89ZUCtYDL6y3hd
2q+eVjchrxT4aQ+2kxBUMWGUnKNAf79lRuuxLUP493JAwkkV+SSuVzQZ9dtY
xoecrc2PiplQTXSlJzhe6wkkCpiM84jp38dKPreQCUITVH7vGon3+Uw4LH3o
x1VMlG1Me6WZQJG/1/lhVhPSCvDj+AVLY0FuExZIfyy/L58QNbcJDaV/8aBq
nB+imHD1Xq8iT/h+w/s2PdQ80IQM71eMkvmWYwvj/ExIUetbksr3VGzXE0gm
o2+F9rKT7zol+pog8KJxPN9XhGi0Zdkc5n7Q61f8e10XxfUaKrpB3l9kZnPf
eM4zTGGCJueg/fb0xWbifIiukPHoaNmN7eNp6/UF+qNYyT9kNEHSly/T0F/q
eh4T5j9MOXAw/Vmc8N7UfJ/AcsUvMz5JO3+LNCaEZSt/WHVrkPayHek4PtIH
znh1LpskIEywSV9DPg1d5zIA8nl6/z/9t6SJOvB7pghOZjz4Oi22nd3fZNSJ
wzT4SSLaZYKPnOPdQEMree8sXA+HrraKbfzPRo1kKas003BF9D3ZTMa5spGe
vqGcJrRZ3mPw+DqMd6JHzW4y4i7j2WvR7/O6KX/maQmFNdSWumh+zl+tEe2D
8mhG33VhE8QsVYDxTAhINRPkGJweWRmfREBY839t/Xwijk/s3R0jB9b07AfG
C72s3MiEtY/zJ5vJeHJOzj3oZDL0u27P+Ru0/zuv1kfOq+rD69LnWJDPF333
IJNxvgfHS9d70Jbs/hvG4wV7PzZcNMYEcVvfpE4teoYpJkRKoKe9YHp80YOz
TEY/GON9Cb8UieUXmYz+bo5vpPDpNVyvUq9sp8Ei+q0tJsyS/rIOGiS9m/Oo
CeflPKEozXMOoAkNzhQ4vpXztUISbMdMkDLi05qaoXeO5+/Xl1ifIlxDciEK
b02ISrlbaRyhGfmcHyYME9zcVsOsNIfiLv40QY73T8L7OzLR0/wxQeDtxSEa
4qePGdXoE/2lCCSGa0gtebFfJgzq3O5M2BiOt37+gy/U6AcVz0xmfJf6jNvX
6Euao2Gifo7S/9qFJQE9VUMh0QcW9MUvwZfTPO9T0hdyjHocf6/rHUv54nKK
L7l7zNPweXKdnm7GgwARDC7XIMcAHCvui8OvGdlXaOgvB1eU8IW34Pl1xGMy
kaUZb6SfgXY7qY9V9IVbDupZrxm4nPFM55VrNFTUG/190U7O7VqpoYkIPqr7
on7a1/lFRxRpGR09ltcLzz/ZIt/if/fT+1Lmc7z2zl9doryvoSefRfymB0Zf
FKtQqfuPaA3VokptSl/PF3UkjzOF4yH9ii18MTYtlvfkeAzW80C+xvkRM7j+
RK/TxRdyDNZNjkdyOT+pM+8vichVGn7J8ZM9fA39xGriGemTauuLA3Iwxk4N
3sm4ADr6IiEwc0Le/Rqm0e2U4d8Hr2645N4R7j/p1+XffzomJyVoxvlgxAv6
uaEneV2vU/kaebbzGtbIPprK8dGFnhoGykGe833RXfo/LnI+ZHzW+kKO16x7
QzP85XZfvJbzdF5xf8h5c1t8UUXShd80Q5+7xxfF32QvnjWlC13lHLrDvthT
q9XGpX4ubN9xsHK7s774LXpRzYV5Ioy47YuikxtMqJHdBTk+eQfx18VhT1Ob
87nwSMox730R+s7abEARF1LKeVG/fFFm5ryQSyVcBr5M5ofMqJ67cUmXp97h
hxdyIECwC+0ERwT4QWTFC0q5jHM2NL//O3++kQisrX6QY5/GFHCh8o4aJ1tm
8cPaeMvNHPldCJA6biE/498HwOuvRfdTwg8JP9d+uJLbhT+tvz1pUcbPODcm
p8uod5Tzwyq+9hZ+3wrpkyrvh6hyJ4oNcbkMPF/dD3vF7WR1Gf8+hLp+kPKS
rZAL7+V8sQZ+iNAbsF3wGlNzZZsafN+0EZ/9y7uwKkPTmvdr+2Fd1dj806q7
IKpsJ+21N+fcyFSf35c9xb0I2vr5fc15Pc+aLnPr+KFHqq0FRw3m+05oe+lS
Mz8M1nVgLjwQHcAUP5TPMTF38rmef//BDj9UkTi42oVEWY9X/TBCb/hyG+fb
v/XDATlHyN9trD8ff0OnaHMjQfJaDn+IjPRCBzdGih4k5T87jzRGB/yz2823
XvX9/2z9fnn8jfN3c7uN/qoy/p5/n4AbiVIPq+0P/fjfEP5+98krYzr7G/0n
QW7MkIPDJvqjnOinLW64JUCs98fFsVfiH1jdKCL9xofJn+R8zORuIx6v8Tf0
2D5uRBK2zNjjD3H7W/zcWCH/YpDj/pC0XGFfN/YKTo31h07DzG4skLh+k88X
wX9WN0pJf9svfzw5IETGbfQxf/qPv7lxUOpAfgEQmX5EOT5PBK5BAca/L4XX
vaRe6QiAfix1RTeW6XnKAEOXXMONpHJOS+4A6J/RwI2aos8oFIAgwolNkW4j
H1Y0AMn0AgfHhzRieqkA+Oh9i25sSfZ8YrbqAUaeZzDHV/remgdAL+sPdeOw
zGvrAAhNCKEtZZXJ3fm+mY4unzSC46kfdB+AqW8Glv5/XZ3PK0RRFMc3kvIS
xT1v1s6zs5SFzXfhL5CFMmVDZCdGlBV2SmbBYko0YlJDZJKJMAs/kkyTWDCL
MUI2FsbYGd537qwsX69e975er3Pu9/P9nrZ5RT/1gUUDLvM5rLZfjxrLHSwr
8izAUwaj/FBX/PWQi74xCNCvG1VQhqzKGmSd9lxhTbHPc813A9o3i+tquaii
gcO8jE3FwoXTff5rQJz6ZEtxz3znGsHrpN/Abisccg61Ao4JuNpVlIbr6q8b
BLGxnVLav/5inSti/cp+rVD267UIevs08XLk36cfd1AQ4v/i2N/vz3coNyV2
XsmpoizDRwRJ5nod+O+PfFLUfz4PnlKKCHX5pFT4WsU0c/DPBPGJ5sJlWm29
diuYPdwbf7xTEL/OPwkywVh46UHtPj4ETP/cyCoor3V+is3NyCl6CNCXpJKL
pEg4I/G5Dtf66x3P8l8zrs09avTAcSMDGdf6C4xX6XddrLa+dQWbPAxxPkl1
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9582c273-c0a7-442e-9b38-5f365bada852"
]

