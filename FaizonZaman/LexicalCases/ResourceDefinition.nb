Notebook[{

Cell[CellGroupData[{
Cell["FaizonZaman/LexicalCases", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->199157558,ExpressionUUID->"d97aaf78-f1ae-443b-ae90-a83fa0700ad3"],

Cell["Extract lexical patterns from text", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->1461555280,ExpressionUUID->"2d343e0e-3393-4115-a33a-02aa214c4f64"],

Cell[CellGroupData[{

Cell["Paclet", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Paclet"},
 CellTags->{"Paclet", "TemplateSection"},
 CellID->864524491,ExpressionUUID->"4fff13b7-1453-4ab0-a235-036ad9ae01a6"],

Cell[CellGroupData[{

Cell["Paclet Directory", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletDirectory"},
 DefaultNewCellStyle->{
  "LocalDirectoryInput", 
   TaggingRules -> {"FileInputProperty" -> "PacletDirectory"}},
 CellTags->{"Paclet Directory", "PacletDirectory", "TemplateCellGroup"},
 CellID->95800296,ExpressionUUID->"177626bb-f947-4ccc-8173-d29431929554"],

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "LocalDirectoryInput",
 Deletable->False,
 TaggingRules->{},
 CellID->1441636574,ExpressionUUID->"2d0d4ae8-8f27-4584-84f7-205277c86e2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manifest", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletFiles"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\"Refresh\"", ButtonFunction :> 
       DefinitionNotebookClient`RedirectOutputsToConsole[
         Block[{$ContextPath}, Quiet[
            Needs["PacletResource`DefinitionNotebook`"], 
            MessageName[General, "shdw"]]; 
          PacletResource`DefinitionNotebook`RefreshNotebookPacletFiles[]]], 
       Appearance :> 
       FEPrivate`FrontEndResource[
        "FEExpressions", "GrayButtonNinePatchAppearance"], 
       FrameMargins -> {{5, 5}, {0, 0}}, 
       BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, Method -> 
       "Queued"]]]}, {None, None}},
 CellTags->{"Manifest", "PacletFiles", "TemplateCellGroup"},
 CellID->324117918,ExpressionUUID->"8913b601-5d61-4d27-9ffe-6f8d71bcd923"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"ea379110-db67-4102-b718-46d635a9f10d"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1675393764,ExpressionUUID->"46afa232-0e28-4a5a-a63f-4b754214162c"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"43b64ebe-5078-4a13-8a72-1a9d9e6c38ab"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->537412084,ExpressionUUID->"7cebe457-13f8-48a3-adc6-ac0a81318c8c"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Guides"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"225dde7d-fc27-4ea6-8a85-a911ac443dfb"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2116160153,ExpressionUUID->"a9a293c3-a24e-44a9-8a28-5d77f0ccd788"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/Guides/LexicalCases.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Guides/LexicalCases.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1827013504,ExpressionUUID->"506d7302-4e6f-468d-8c11-19949d1b9cf4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"c44dd94d-0ba3-4c10-bd47-b53ac2205fd5"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1894776922,ExpressionUUID->"a4d0a951-7bf2-42c7-90be-d5a0d9012aef"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/ReferencePages/Symbols"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"402bb638-88b5-41e4-bb36-b4823112afba"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->480726691,ExpressionUUID->"aba264b6-8c7c-498c-94b4-e9b5b8bc2a6b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BoundToken.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/BoundToken.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/BoundToken.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->740015623,ExpressionUUID->"3dff21eb-839f-413d-ab89-53ce6a807508"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CountSummaryLowercase.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/CountSummaryLowercase.\
nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/CountSummaryLowercase.nb"}]\
],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1364775984,ExpressionUUID->"a901d270-ad0d-42be-9459-e1472a72aa9e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExpandPattern.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/ExpandPattern.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/ExpandPattern.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->517129481,ExpressionUUID->"3b8cba86-46ad-4f73-986b-d6fa562273af"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/LexicalCases.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/LexicalCases.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->528867758,ExpressionUUID->"e461a6d7-ed08-42e1-9aba-0a5276593569"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalDispersionPlot.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/LexicalDispersionPlot.\
nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/LexicalDispersionPlot.nb"}]\
],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->245593773,ExpressionUUID->"f455a418-9615-49fa-81d6-bbbd1caafae9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/LexicalPattern.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/LexicalPattern.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->230973277,ExpressionUUID->"473dd219-893c-49d0-aac9-f65d42c4c3f1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/LexicalStructure.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/LexicalStructure.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1464916410,ExpressionUUID->"d4216015-b46f-4dfd-bb17-cc938e087297"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalSummary.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/LexicalSummary.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/LexicalSummary.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2097573662,ExpressionUUID->"e85d3c0d-0b76-444b-a062-aaf704f13e76"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"OptionalToken.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/OptionalToken.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/OptionalToken.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->828988082,ExpressionUUID->"47978c75-87cb-45bf-bb80-964e21d4346b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Sandwich.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/Sandwich.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/Sandwich.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2076276085,ExpressionUUID->"88eb1e65-dbe3-4b58-9cdc-5ac527efc907"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TextType.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/TextType.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/TextType.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1510380492,ExpressionUUID->"9cb61b4b-7134-4bcc-82e9-b62dbbd505a4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ToLexicalPattern.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/ToLexicalPattern.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/ToLexicalPattern.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1708221504,ExpressionUUID->"d555097f-16c1-4006-9c87-088e6db79e9d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"WordToken.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/WordToken.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/WordToken.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->369940985,ExpressionUUID->"4cdcff2e-807b-4aad-bfa8-4f0986cec0d1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$LexicalCasesServices.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/ReferencePages/Symbols/$LexicalCasesServices.\
nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/ReferencePages/Symbols/$LexicalCasesServices.nb"}]\
],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->632976830,ExpressionUUID->"dcb6e49f-b298-4e46-be45-3554ed16d0a8"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Documentation/English/Tutorials"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"cd05d7ab-72ea-4b06-b490-d62fd991c6fb"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1955078219,ExpressionUUID->"1d74485f-9168-4913-ab86-9f9980a43619"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCasesOverview.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], 
        "Documentation/English/Tutorials/LexicalCasesOverview.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], 
     "Documentation/English/Tutorials/LexicalCasesOverview.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->352343986,ExpressionUUID->"a72da4e4-6acb-4a68-a280-981c8da5e7ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"77fbface-bc73-44cb-a2eb-2185d6fbf4d1"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1232957923,ExpressionUUID->"a985faf4-2764-41d3-a7d5-8439e4ba65df"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/LexicalCases.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/LexicalCases.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1254101958,ExpressionUUID->"64e12cf0-e5e8-4ae8-9253-7e7d4c17c317"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/LexicalPattern.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/LexicalPattern.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->139612801,ExpressionUUID->"67b6f377-7301-4012-b576-a2fcb6efaba0"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Plots.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/Plots.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/Plots.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1420203883,ExpressionUUID->"baf6ed04-5fbe-469f-bcf3-de2304f937a2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Samples.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/Samples.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/Samples.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->85925176,ExpressionUUID->"5bab62f9-3a5a-4674-9747-3f3cc36f0bf6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/Utilities.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/Utilities.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1035422248,ExpressionUUID->"48405ac2-bb0d-41b9-b6da-954ecb33efec"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Kernel/Validation.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Kernel/Validation.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1281730495,ExpressionUUID->"ba30a9f9-85c1-4285-b10a-98a6a316df81"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "PacletInfo.wl"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "PacletInfo.wl"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->635966408,ExpressionUUID->"e958c858-c886-4619-9ae6-4d3496e0286a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "ResourceDefinition.nb"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "ResourceDefinition.nb"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->49311844,ExpressionUUID->"7dca1dae-7d86-47b4-9ba6-00e7b70df8ec"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tests\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"6a095ee5-cf45-4d3b-9aed-fb64f4cf4c79"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->661308137,ExpressionUUID->"2b420a8e-a4d9-4a4c-b9ba-7ee84914e4ed"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wlt\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Tests/LexicalCases.wlt"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests/LexicalCases.wlt"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1377985334,ExpressionUUID->"b82e3b4e-580f-45c9-be2f-2de2920d4aef"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.wlt\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Tests/LexicalStructure.wlt"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests/LexicalStructure.wlt"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1335859290,ExpressionUUID->"112f1218-049c-4607-be7f-52629b01ee6e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Patterns.wlt\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Tests/Patterns.wlt"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests/Patterns.wlt"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1993041292,ExpressionUUID->"0472b1c0-e749-492f-9698-ad3c91a69d4a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wlt\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Tests/Utilities.wlt"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests/Utilities.wlt"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->595068738,ExpressionUUID->"636245f8-a8e7-4b17-86e5-3472cdcd8da3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wlt\"", 
     File[
      FileNameJoin[{
        NotebookDirectory[], "Tests/Validation.wlt"}]]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File[
   FileNameJoin[{
     NotebookDirectory[], "Tests/Validation.wlt"}]],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->488935487,ExpressionUUID->"dfba4179-3ba4-4d06-bf4c-fb442beaa503"]
}, Closed]],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1266296587,ExpressionUUID->"5b2f547e-0348-41a4-8fbb-343824346610"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "83555428-421c-4536-928e-20bea56a5af0"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"314f14a7-7a48-4da9-8357-b93eb787262e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give an image that you want to display on the main landing page for \
your paclet. This will be displayed along side the basic description that's \
given below.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "89998b52-a073-4d31-8a43-00b0912ac0d2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->670275254,ExpressionUUID->"7111be4c-f931-4ee3-a9c9-6966b879f890"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qf8v+1YB/zbimjIDCElDbOUVRmFUlGRQiVkFzLKaiEjK6FEoZ2KCG2l
skpDURpWAw1NkdH4Pr2v5/n8nuM+Xdd3/Pb/vo/P63X9v//fNc95nMf5OY7z
OK90l/vd+u7nPeussx54of/759Z3fvBNHvCAOz/0Nhf9vz9ue98H3use973b
XW9x3wfd7R53e8D17nK+/zv51POfddabL3DWWf/3c9aq0Wg0Go1Go9FoNBqN
RqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPR
aDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQa
jUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj
0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0
Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1G
o9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9Fo
NBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqr//3f/139z//8z+zROL1I/fhVhyed
lrnjpNPVaDQaFVUmtXxqNBqnFdHNN8mpc6JMOyfmqXHm4aTnMnV+3v3gzEHL
r0aj0Wg05lF1m9OMc+L4nbL/7//+7+k4J+bxsJG2qrzSZsdy3ITR3tblfvgY
yzhIvZ2W9i4Nc2maa2eND8Vh9MdzQ5oOgtPSl9b5KZypvgu75Oc0yKujxFy/
2UUONk92cJyWcqvjYq332h5OS1qPA+dGeVBxTpT9x41zml6yhKPoF6dFBxrT
tGnucKbJiLm0n0lzoXV81knrJ9vK0DOtzZxbsJ966bpcrf71X/919ad/+qer
v/iLv1j9+Z//+fT7J3/yJ6u/+Zu/ma4fVRnpSx/84AdXH/jAB1b/9V//dSTf
OCfjjW984+q7v/u7Vz/1Uz+1eu9733uiadFW/uzP/mxqP/X4l3/5l62eV/9j
G9DutI9zWx+N3jIeR/GdJX3hNOgRp1mnqXV0bmufZypST3/1V3+1+omf+InV
L/zCL6z+/d///YRTtR3Iwfe///2nsi8cFs7UOdmZAGVrfD0nt59tMDe2ntYy
kba3v/3tq7e+9a2rd7zjHbP9Iuf+7u/+bvWCF7xg9bM/+7PTM/XaSWI/Y7h0
O970pjetfuzHfmz1K7/yK6v3vOc9R5jKo8OZ1N4Oiujr56S53H/+539O7dD8
WB88TqT/0lHMrRz/9m//dqxp2BXnpva+CdrOb/zGb6x+5Ed+ZKq7yLXTDOmj
Z56T+vCI45hXHsf8fVec9ra3K6LTnoayPZOh/MLDbtMnlHk4W7/bcHT7eUa6
8oz7Nz1zGvvcHH70R3909fEf//GrT/mUT1ld+cpXXn3iJ37i6jKXuczqDne4
w3RdPg8Tqd/TiPe9732rd73rXRNPfBrHnPQHnNEnf/Inr84666zpeMpTnnK2
68eN293udqtP+IRPWH3SJ33S1H6ueMUrTsezn/3sjemq/eIf/uEfVr/7u787
6bfBOW2cOCzoQ/rugx70oNW3fMu3rF760pdO5//oj/5oOvfgBz949Z3f+Z2z
ZV/Pvfvd757m9H/8x3882U1SH13uh4dXvOIVq2/+5m+e6uUHfuAHJp3W8ZCH
PGTvePOb3zzde1K+BsCG99CHPnRK5+Mf//iJx4HHPe5xU/q1s9/+7d+ezp3W
8WwOyd8//dM/Tf3C2Ob44R/+4UN7N7v1k5/85KnsHvawh01yDF70ohft9VF1
D0ctp5MmdthnPvOZe/LA/A/UYdKkns8k4N/Sl1J/xmt5SV9Kuz3KvqT//uM/
/uP07U2HtnEa9YkKZaV/bJOff/7nf574hDx3TkHyIn9PeMITpjb28Ic/fPUH
f/AH03l8dvrND/3QD03nluQgbuzv//7vJ53mP/7jP7YupypPvuM7vmN15zvf
efWYxzxmmnvU60CO0Fmf+MQnrr7qq75q0sPce6ba5pJmNoP73//+k4z+6q/+
6tVP//RPT+dPqq299rWvnepc3T/taU/bq89v+7Zvm86TrW94wxvOlodzKrR3
bVsfiSygQ1ac6WWQPv2Hf/iHq0//9E9fXe5yl1vd5z732Wt/+uK2sn+/c8k8
88IXvnCaS13hCleYxnI402Uu+fTc5z53T5b+8i//8nT+937v9/bOPepRjzrh
VO4Pafs/93M/t/qar/maSYbd9773nebs9fpB8Ju/+Zt7OtAP/uAPTnNBNsmq
A+V7x9VWfv/3f39PRn7v937vni+LMSwy0twUTrN8SHkZu42l8vPt3/7te/K9
zrn57cBpnQsZp/BZc3Y6fZDsdkS3OE7k++vkJhl7WrnCMxna+JyP6yas67dL
cmY/z6zrT2f62EdXD29bjxve8IbT9aNq78aDJz3pSasHPvCBJy63kke69PWu
d73VTW5yk9XrX//66dxpqt+UDy7nYz7mY1bnP//5p7q64x3vOJ0/7nEsZXO1
q11ttg2p323S9eIXv3h1m9vcZnXd61539XEf93Grq1zlKqsv+qIvOhsXdJrq
4Shh7vKqV71q9eu//uuTXvVrv/Zr03w/dZ+yxHd84Rd+4V5Zm5fDj//4j5+t
DsaxNOXoO/rdox/96EkX+oZv+IaJW8AzvPKVr/yQ+48D+Za84v9f9rKXTett
Tgtq2eHQ8Zb4lHptDso09fFpn/Zpky5BF6r1FHvJScUcAf0w6fnoj/7oSYeG
i1/84nvn6c9wEjrafpG6wePc7373W93jHvdY3fWud53q5aBI2f31X//16vKX
v/yHyL6v//qv3zvHpg3bll30IfaOO93pTqu//Mu/PFt+NqVJO/usz/qsve+b
J8BjH/vYvXMXvvCFt3rnUSDfpHsb08i6Tf2JrErab3CDG0z3sRfWvpR2e9jj
YfVRMzbRFW50oxutPvuzP3v2+JzP+ZzpcA95dhRp2gZ0mZ/8yZ+ceMPx+8nP
b/3Wb62uf/3rT3rfUn6SJ+X+rGc9a3rutNsRoPqBG1PZneSX7SZ9CiJ7taeP
/diP3WtPT3/606fzuJOcu+Y1rzmdq/px5es9g49le+OnDdvUfd6h73rWNx/x
iEdMfaRer33nu77ruyb5cJe73GX65knbQvLdt73tbVNZa3fbIOWjTu5973tP
cpr8TPmfRIwEwHOm3vkm/e3f/u10vsqc1LH+MNfe/OIVrfs8ibwcFOkb6vLz
P//zJxlAFpAJN77xjVdf/MVfPI2p1lmc6UheX/3qV096kPr9iq/4ir3rxvZt
ZT95ireHXWR/5Ar/6LQx/jNw2tpO9cU3dzB3IV+N56973es+ZO5C99Vmkq97
3ete03n+CLVPnYlIHtkTyK573vOekxw7zPGfLSJldK1rXWvyq8Cr1rKLb8U2
84mkibw2jvCTqzF+1iHXPZNv04O9C85znvPsnY+N+iTmDknnW97ylql9Rkcc
85d88/n7qI/6qL2064fwBV/wBXvnPu/zPm86Jz95D/v37/zO7+zJfHPY17zm
NXt60lH33byfDqDdkVN4gtEebC5Ahjus9YXj0OWSPuPEOj2TbJV28+ya7jxP
p33e8543yeh6vbEbyGn6Jf+GJRlV2yzfB3No4+Hd7373STfS5sf76v9f8pKX
rL7pm75pddvb3nZ1t7vdbbLHxQa0VG+/9Eu/NNkUv/Irv3LitvDU9Or67nH+
WPscDi1j6DZ97rjWH5HT5AP5wyZ72ctednXe8553ddOb3nS6volvT1yK0e+m
lmOuGWdxHPo/vTWymAyDk+Jw8l1jY2SpdljTvglLsR1HrIubtXRtjGunfeO9
8O3XuMY19saOJWxTR0v5GZ+ZKw9zCHJPOtjWtR+HfpXnxvSAvLi/jmvjoY+O
fXM/+Vn3zLo6Hp+be8+IpfrbtB4G6OY42Ytd7GKTTQUfRmdPbJ7cp19+3dd9
3erDPuzDpgMPBfxpL3CBC0znLn3pS8+OodbIaj90Kz4Ymat7H38yf+Ne5+pt
rs2uK7ulZ+felTJS3zjBr/3ar530nF19A9d9Y1161r2rpo/uYo6AEyDns452
CXTR1BO5iq/nj4LH/vAP//Dp/C768WEjeX35y1+++siP/MgpPdqguGLAxyvp
z1qa0d9yU/1uqvtd0jr37Dbnle0v/uIvTnXHjz/528+3gvQRPDF7oTJShs95
znOm8/plyi76+bZ6bcpY+dc51LZzIOPtl3zJl0zfvuAFLzjx9vCMZzxjL02f
+qmfOvvO5H2XPjWXjnX9Kv1J2fEBI3u0wcjLOdAfkvZb3/rW0znrci50oQtN
fYnsOypf05of/sRLY9bcIV9Q1w9tO67sR2eIrqAN0YuVD3ka3+cx/iu/rV3y
Qz+H+r6ldrFOp0mZjrrTYY7J6W840Utd6lLTuJqx1dyhygd45zvfuSfz8G3h
Us0Z0vZucYtbTOeqflz9IYyn5gnGVzKAr9ZSu57rJ+YW7N/6xCMf+ciz8e1j
meG41Ie84BJShktlt58+ve1z/g7nrNzkXz5Ge8G692uz/Hq1W3pKtYnU+9e9
b5trm8b8/G2OmXrHBfB9BL4h5Krz5k6Q9c8g/9rPR3zER6wueclLri560Yuu
vvEbv3Gr9J02pA/xC1gnFy5ykYusvvVbv3W6d0lW7Srz1l2bkylL84RN+mCe
S7wJcxr1Zi5j7UhQ7W7bHL/6q7+6995tyyFtiP9M5lPsarVca36X+vvcvHSb
8t5FJidfeAS+UnXucvOb33zP1zn3mb8aP9On+A8D/5/MXfjzz6VxSc9cp2su
YVs9ai4Nm56hk/Blwi+xdW+yge4il7/v+75vr+z4pSlP4wVZk/kEjhe2mU/U
+suce1t+ONfxp0kTnjRxzfA8kZFZpzQXO3aTnr0Jm+okY5I1kcYkdunw5HP6
PJu7GALSTQYYj8DcOPm8/e1vP52rsTje9ra3TXMncpC81w9wNNv4ZR0Gkg59
zncjgyI71LW5p3TlWnwnqi6zC/+zi36a60t+vuNhTWFNjzTKg3rQ1ulhzquD
yO1NMn7T+FPP1+v1XO6b+9Z++J/jQLUl0RXZWqovnTkAjJyvdCtf/Kgyr/Vj
XCKD0t9rPvU58+w5fo8tGg+V99df+q6+Mz7Ddyx+0HWs8m3+L7XP8W07TbEV
50CPNM7JGx8GWMe3b5Llo02KLIq/gON85zvfdHzpl37pdP2k+fYHPOABU3rU
G/tITfsSXF9XDpvK6CBtYZu1B5s4h/H6Jt560zvxTKnfpTg3GW/FX8i9+vEt
b3nL6Rl6irFCXZALsTVsKuultG3Kz9I8eD/f2lSfS++sc/VLXOISU5nQW8kP
6y2sL6/3+Xb1naU/AFtizpkPjrqNtk6/xa3TBdm5yVlcnl+cAh6ZX0rNz7Zz
0zlsq/8G5JA5W/j2TdiUll14t23uxW/w5cLbbrJ1QV1zwNZI3+GTIm5XbI6x
7x0G374NfzLeD3T0jKdXvepV99YW4JGTfmuAYEn2HOXYti3fswnR2dZhG1tT
vY+NyDxDGZlnZs2WflnrHnbl2292s5tN89CsO9l2DoTjMrZGL/qe7/me6bw1
yEnT1a9+9Q955zYydJe56pJ8DcTGtUYrfPs6sOEm7ebsQK9i49CXHIlHdth8
ewV+DcdJTuEEyWJ1ZMz6jM/4jMmO7BofZb90n6RpU7q2lQHbtvWsg+IrsgQ2
CmNB0owjJZ/kx6/1T/HXxh/zXTxqzJXDfnST9Lfqpxz+Ux2mHPM93EVsXLjS
n/mZn5nO87fJ89FZxzmqd+FXtGXcavwbl+T7WIe5zlamDpb82+fyuEmuzOl6
69KydG5bWWCs0Oa0mf34zm0bU3RXbEr/qPP8/M///F69f+7nfu7kowRiKOa8
e6Dy7cYA81ntTDtyH51m6bunGak/a0LkhVzgJ4VD47eKw0oezfFGm+dB5hSH
jU39IKDb0cHlqfLtfFoi++nSdEH8mzLhbzzKftxdvrNprXzaRLXZpI0lxso2
+t2mMXe/a/bnruVd1nuGJ0m7x4cl3lDu05bIx+TLfA+0pZzTt3bFUbah/bw7
POA6zNXlJvmkv6WcbnWrW03f4I+lzDOfSDzDXfh266jpMOaFu/LtfKSTJjxe
bJLsLzn//Oc/fzpX371Jp99VRm7Sr/ALxiT9cp1+weaetJMB8QFXNslP4gqM
fDvuQtsPz2itXPZ/OC6+XZ9jGw7Hxs+rjmf8L3ItcRkTI/uwZPU6fYJtJ3KS
rw0/X2nBfdAznaePJs7qCHlTttbJbIOj5OF2ec9h+tPtKpMypozriNjDlL29
IKHqavmGcS7347bFV7MGIfKG7Sl9b07fxn/jlcxFfMs5/mdJU54h23L9Sle6
0vSMtXPkknO4iPjTpyz1LXOu2uf02V1iauHX9Pmj5qBj+1NO/EiyJn4T3165
dNwcHYRPqvmwuVh0jNwDxgRzB3oIHcUcuc5dTppvxzVKD1m0LbcRsNWQyfYw
fepTnzqVQdad1ncoY2slrC2t7cFBRuI9+UNYE5HnzL2sq/FO5/063MufKfFq
R9T+KHYaG6304bl9I/alObDPk4nmjmyj1vR6Jr7mIz8TPze293V8e/qIWNHi
vbuPn/73f//3n+372n98REeIM0sXNm6IsWZ9p/+nvOv3kk72XuWlPyc//s76
3hGVs8JDGpM8Zw4lzuAY57zqCcqVvV/+6cjWPdF/YuOeQ12va+whx+Rz3b3m
4ynrrNXTbqPz0nvG+Y5+qu/hh2rc8EB5JM7e2PbNM5UFvUk5KL/x+VoG1vZk
3oUT8yzuGX9BZtT+rpzdy37Jt56dRRrFbVB2nnWwg4ndMX5P/vDD2qg2q61r
vynDmhflp5ylT534W780l2Rz0I9HWY2DoY9ac8U/mN6Fb1cO2qJ0Obx37CP6
buqJXV5ajRnXuc51pnPqK2uODzoe70dXzX3GrcyZralI2cWX1zioLSed6k+d
KGcySJ2yj8iv/Bm/9APjeJU12oJ2yn+M32cFWee8upkbL11XD+xK6llb8i7t
MD5EgTRIk3pJ+0l6fSP276XyMC5qUzhg+TYflDdrUuu9qTO+XMqJfT38GrkW
nUS/y3u3QfoHe5vns7ZyFxtwbHL4gKz1JytjV+H/PvdO/VH5a89khn6rzMmG
cH8V2jTZod7ij6qu9F3lRn6SG6lT8l1/9z7cNX/grGUmX9WPelKOVW7q1+lL
YtGBNsRP3zmys3LbxwVyKzohv9wl1HImS5SNcYX8xlfEF7COK+qAbHIotzon
0sfIPPqEcgPXvFvZK3O6rjaoT7uPzhA9Inu5zYFeHf06Y+sI/cs79ZG5fdvp
j/qre/TD+JlZW0IPomdoT9JOP6dDWoMyN1ZWWe9+bVLZaVv69RInnf6mbSmH
rOmYe3/K1VwivHzWLBvP05fZH+q7800y05hvLk4XolOai9BlRi6gyhnlkX6m
LOlH8W+vfDuo2yrT0lecU59zZVB1SWONvuxb6kDbzRxmCerJ+/VVY562w65V
0+Ub9H717TBHUw76qbZdx/DExAf2Z3/PyWm/4W4qjLlkA/lR05586ieeNTak
TMZ6cp1MTH7I+rn68Y3IHOuok+fIZfbVTfuamBNoOxkD6vvPBKSd68fyK9/x
1U8+yD15NLaIpwHjHtjqzbitj+i3ZFTmmLXsjee+5YivSa6TDerLtTrPNL8k
28jD7M3me+zLvqeuYysZbSru1/7YiMgg//d+48nIt4/QD4yv7jPeLiHpJye1
y8xFjAHx20ua1vHt1U8880Vjw9zcTNunT1vbRh4pn/SnOmdRLt5j/AZzUXXj
GXy4dQ1kxxySHvpJ1gPM7XFc9RL2ivgBZP2QMSmcgL5V86I96O90DLomPYDu
R2dVDvoy3VP+ogeqf3JF31RHI8+rv8svOTOnk5lnSJMxNLKSLJgbmyIfR5ns
l7ye05kq6DDGeXWlPIyBvhV9oJaFtp82wZ6b+mLrcQ5nuYvPQepEX/E8XWxX
vt34lTR92Zd92V4d8BWJP13WXo1lLe/Sq6yj06uXpX14lIm2pn3GlkMOmLcp
O3M4/St9iL6uHcgfLteYxHbuHXNjUuxiODxpx4nF/8xYnHzy3YUljsw4i8sk
Q+hp25TnQVH59vj/JA/S4/vqN7yL38jqOh+v/A+5Yx4zx//4nnogf1xXN6Pv
cfTTlO9YBuo/ZY0TmoM2Q5bpT77HL9hYo82ra9+PTjv6CiYtZFLkLplmTpd5
d73fHEVf126kX/ngNaMDk7meJ7f163EsIavoSfRF8l0ZbuJ/dsW2duy5Z6TF
/gNsGvhvMljZSyeMfR/3YQ+TcEp1rYY5m/N47qzjAmNM5BH7U+VCcTvRo+O3
o78ZF8W0DNdeYwnTJT2jza6LZWlOKS1sj9pwzceInNcmrEmJ7Iq+cVR9NfWg
nWzDtycdZCR5n/qqh30ztevsLTSm3bf4Te2Xb8/YnT2K499T/96Wu9ov3x65
QhalPdZDXPO0wbyHbp/r2iP5lXbD/7COWXnG2DO+ux7RV+a4NjKDXhwuoB7q
GlddY0PgxehmdS1SPfgrpB/Uvp52oizW8e3Ja41pHT/FtJOluWI4eG1zLm3K
O/OeKvPNXfFKc8/QD80H5+KEk+/VD6MefNbI4rTDpNH6p7Tr8bCGBqewzkeE
zpXn6ZJz9uaUNZtB3h2/UHnNXrqjL5WyJ2P5tq/zuRvL3veNlfwa+TEpE353
/m+OZdyiX1V9Wt0rczZq7Rc/Yc6SuDWeNf+p47J3ms+6hs/2bmvysxcc3kIM
idhh61yBjuXd0sZ/wf3ex7YX+0FAF3Hvl3/5l0/1oc6yh6b5knewqyrLwHzD
uin3GGOkzaGMpU/arMP03sydajzg2GyzDkGfk8a023C4h8ERJubUNn5QFb6d
uMX2U0ha6JXR46v/sXJPnuULl6Du/G2epr3IozKydihjLv3F+5Vj7a+AR3M/
v52M/9WOzb5GX055q2vl75vanPlY8oz3ZRNxn/tTT6mzxMyfA12fH4D2kDbv
WfWv75jb0d98K3OprDNXhsmr+VPmkNJe87MJ++Xb67Paf8a09APzi4xXdJ/x
neaH6k8fVH/pS8rdoVwyz6kcgnFDvbFH4bPYdpW1/u7XEb9/cy/lqf68U19S
rv6f/q7c9bnIKSAfI/NwWGAMjQ83fe241u5W2W8ulzFWP4iv0NgHlZd+Y8zJ
fKceZGaN0+9+sjPXs0+H+iXPyctcU96pi3Ux2uqhDqrtuB7RAfzS12p+MwZl
7uao65LTLugTWdOoLvUVY0XGcG1bnsZ0mSvWeE8pQ7JUW5nLizYau96czhG/
QPaHOlZVpN8YZ6IjhZ8yXoVrtB66vjvfI/vJDO3YvAZ/5//WQIw8l4NOQ5ak
n2jz+gRdlA+RZ8O3pwzINOmLTJNvz5OpWcNS81bngeaJ7q3y0Delc7Tve46M
M3ekQ5KB7o0cTFzN2C2l0TggHe5RDtkrw9+RJdpsjatC3ri3yunoF/4e42j5
5SvgPu+OTT8xlMD8Wzl6T2K95PnEPZQf6cl9xiO6hTzXddH4gPCpVV7Glmmu
k7Y6t37BEd2+8rFnOt8em1Ogrs0FyZ7oCZEX+KYqx+qhHY37xdMXcj06Quwq
dX1W9Clgr8p58xBtY/wWuUOPiB+e76nfula0zifMD+ocJaiyEL+T9iEvNU7F
yMXQKavMzoGXoy+xGbg3cmiJb1cWtTzNy+gsibmgLxoParyAHHwEY0NMveI4
c90YPRcvTT+Zs8tVvp2OqA3gaNbNXegK3olDSVroJ1kzMvomGOvNibNXZWQR
myRdxd/GIulO7A/jrPqQbt+rNgD5oI+ZA/hWtXNLM3skbiPzieia/pYGfHi1
P5hHRCZHzpHdnpPGOb+fzMn0lZqnyFdyuu7VWX3VwldFpzSmZszCK4RrOmq+
PTCOxYcj8fiBTHBOXJnon+l3yoTvh/lFZHHKTf7pSPEhqMADqwt6gLLIeuPo
p5lvaIPy7/1zY1K+l3llZHv6Hv/b6AvhmY3V9Dbln/2LR94vcsH4Ty6Yz58E
3551ycre/DP6Mn5A+o1brodvlw++KuyN1r3OyWpyJv5ukaHV5z++JspQX8/6
Wkd0k5RXyslcKesJr3zlK+/1wSo/6fRJ76aDHxtU7lLb09fn7tdWEu/PkXWM
3hOfk/xNj6vPKqvkBbQJcQXmvsOHg93uoPvr5LnRN2c/qPsujHx79VPXfrRl
91fQt8UD8by5ZmB+l/eOfrN4Y3y6a5WjYuPIXCExxgKyO+Vq/Bx9V+pYzGeQ
f/smvj3PZX6d+Vt8f08D355+kJg5KVNl7hltKv61/Kn0+6q7ep96xN+F2zkT
/dtzHl+dMqCbRX9PfCy/saGlLI0jecZaGsATaU9kuVgOdU9p4631QGSgsVS/
V3bahyPrtEbdjgyJHEsdqRPvSrtmV6z7fdAjcr+0u1/91LVq1nfQV8Z6hXV8
e9VBzbfyPmU9+sHU+XC1s6kbz9DpzMnxO/FtzNyHfTIym05E54luZ/2Rb+vn
yjnPjT7d9N7Y5yJrjdVZx+SgjyVuGHiH+LCu6e90BrytODnpEziHdbFrKt++
NEZHDrKvxtYVv1FzenUmr6PMoo/TPeh09l4KXziW+9iO2B3iE08XM/9nL6Hv
Oy+f4dGSNzKa7iP/dF5cAr3TeGx89py2H25JW8UFsAebd7juXn3SPENML7/y
FD8J6dMOtTk6U+LjGBPoFr4d3UtZJj/aBC7D+9Wh8khMb+n0f7/yGC4VR2mO
Tm/3rPTR25yTbulTpuY4I3euTvCbVUfL3gXO8Yue08d3QdVL6BXKcMl+tQ50
NGmK3wyY3zpnfWW1QUhz4uooL/Xp/ylTv8pKOambrLmnc+A29MPEmUxZkZXq
LfaY5I18wefRy9Wb8tbmjOX+r41pA3TxQHvXDuhI2k72Bk4brPb4CrKXXcq3
3Ccf9CrrgrRH7V2bih0844c5k3K64hWveLb9GLJeZbQfbMJh8O3xq8SRZEzR
Po0lzkdG13ai/5CZ6lR5uQevph7VjXLGYVX5T4f0rfRz80Dlp/+Zx9DF1Hds
UdqRvkSW6LPqRFtShmSAOk19ZR8fIIvIUmlPeyIDpM05Y2/m1cfBZ6XdZi12
uIKlGKXOx86WuZy2KzYDzsW5z/zMz5xkVPystDN6Vdb/Js4iLka9Ohc+KHyL
ccb45f2x9Rnz6Wx0gmtf+9rT+KeMl9pj5dtHmZZf407izpBjWSuZsk9ceHoN
3QK0Q2Ni9QGgz9BLEkvNIV5j1R3YETIHTrqMSfWcebP6r/rEHN9e81CRfkOW
aU/8rfIe8+f4b9a4orUtkFnaPZlB/hirsnYj+4YmzqiDrVp/cj9ZQ07hED2j
HXnOuFL9I3HjxsH0Ef2H3NWO2MLyjZo+HCOZZUz2Hf2Tf7F36Hvk7ZwsIPul
T1ocZKn79Gd92zfjT6bd4avdI31khWf86ue+5XA9e/uA+Ts9Wj5dlzZz3ozP
c3KPDU6flwZ1UdNcZRHZEzkNdDT5V66eJ9PxDcZi55XDWLfmMHgA7SF7YPiW
sneOz1fiBSzxW+ckvj28mjZKByADjMXhpvXL2NxSL9XfRV/H2+CBKhfhXXlG
G8n8JjpC+gDOK9dSH0C+0LvJ0ejb0pR5euRr9nxPPwwvr1/Lm7TE361yzSNS
19pU5dvn4t+C/NX4Gngvcr/KPG2y2o0q364PRReq9ghpG+3fde0r3VO7Jhtj
+6eT1HV6/AKUp/Ekc0P32AOqchHh5ubWLFe+PftNjW08ZeM9mZPFjxnvFv0z
MWaq7E4MTEf2vdefomNEhtLdyHH9PnMU8qauvyIj9EnvpNOl/CB+hOrSe8lA
Oiu5m70CtTvPpH3rF2Re5ioO+o4+Ii9Le/1ps+pGPqSTHCJf1TUZZSxRN7Us
yEvzTOUUXzvlas2Ac8bWXXw0D4NvV7bhceU9z5oPOWf+HP4r79b+lDN9yBih
nOKnox6lo3KhaXPS6bq6tf7ZWE0nd786MBaaZ6V/k00Zk1wbx6TMK7Mvd9qo
+pd2ulLAdwyfh4eIPjPqT9WP+CT59qyfjk+E/kKWsofSDeNTnngyUNdik6H4
ErI7+zqGr6Nzp3y17cSuoedlnmNulrg12nhNX/0/LrHy7bWc8qs96w/GFnbQ
yCN1oX7kxztcix049ajsw++qT36P+hv9Mnmlz0RnpH9V3dSYUv/GhSWmmnFC
2/ecuWfGRs+ES6j8j7J0/8h3bYs8g/OgL4c/2cVPL/MQB5m2xLen/MhT140F
ZI+6t5aAjK8+6eonz6h7ZW28ic3MM2S875ufeEZ8voCM94x2ln3x2NojN9jM
PFPjK4/zkV35duOEOlSX6ti3s//MUWFbvr1yoPR290mnMlM+5CJuiS5MTtbY
9uO36Cj74dtTdnQ8dWp+gYeph/FRO2Ivqc8sYVe+PefMsdWrMiAn2KnjW8B3
Mv5r+lyNGayt4Iqz9pIvDl4q8oBtvX7Hs9op3y79y//NsVL+iS9aZZQ+E/+H
1JE8qZ/EBfHNGmcxc3Xjl/EHz6FO6SZ0EGt45Em/C6819s1NfDuwy6W/aeNL
68bmoF6VZ2JYSJt+Zd1axgO6UYCfMVb4DpmbcU96lSc9LLxezY9vpOyMu55T
f/hM3IZyqHH+IfHopaNy3cY+c21je+ZlI/bDt5vLZy/E6Leu8QOpdsW8W31q
48Y+ekq9NqLOXelBxiflgB8wb1CH6kA/z7y4xubh4xo/dfYl7U19kTF0H88Y
j8hg0Ae1NWM3ncZ139S/fS+HtkvGp025N/7mxszUkzEBH0ev8p1qD8Bl6Rvx
n1dv7LTSR3Z5JtxiytU31b2/tXHPuS790uyatPn/uC+2/h7dprY1ZeQcnXrb
vbQrhz535J3aYOaV27w3iI9M9RuLrZo+U30g/Z8upxzpyPoartY57cFY6Vn/
N14kFn/8OZXfuL88marscTyxIwKODhfrXb5X/VjTZqrvPYSrVC/alrojW2Ob
IXfnQP/UptyjHxvHvEe74f8h/WnrkbVA3iknul/guxlTk9dt6+IgfHu1yUVX
Sl+vOlI46/pO5UQuGi8iYx3+zryQLKs2YdflP3yeNq3s9Hvy2bhD3oYzkT7f
0YaMldqMNmFuqT7VmWvKr/r2elf8XGp5mDM5V/e/PE18exD+2b34ae047VR/
DTeevlLnwvFVNKeQdzyfv40XVbd0+FtbxQOEB7MGwPecd5DFSzHLYB3fXv8f
XdCcotpCtV/fpNOwIWScN3aw2UdOeZ4eEr2ELSi2hXANEN8iYy87O91fOWsv
ZIbzxsL4N45+Otvw7bkXT+Be/E/yY2yJPT1ziMrzGufN4eXH8/JPV8saGWNQ
9ctRFxmH9Blll7EkOmH1b8/39LvItMg+9+o/5H/aTdLmWXpx1pFoW1n3rQ8a
/2Ibr/ZUY2Hlt/iZ+y45qC7Z3BL3sK7Zdg/9XP/PfrH0nozfjoyrSau/nScn
/L/aIeLfXPuz9NNljMPaRfislKvnyBT6Q9LmHroM2U6/E38guoQypz/QFdjd
5S/fo0uYo6v3xO2D7MtiDh2/3yWZc1R8+yZ7+tL8Zddvz/Ht5j5sduY+4Zvp
4Rkb80x0Ev0TL2M8VcfaGr4586TopJA5fh030weMz7kW/15Qn3V/MH3Lt8xd
jA/Zd5R+nPrSd8LdGyPpHNoCeYezzpxi9G+Hbfn2wLwqMs/4aC6nTWrfZF72
/0isaKh8ezjo2PWdY7dIX6px1NWRcmVfNTd3zRjtfXlWGaeOEqct+TC+W7Oh
/OKjLG3s8PVb9f/b8O35njy6Dx8T+7j6TUy+6Ou5v/pasIfxYyCT9HG2uqzd
8TdZSEaRk7FD6n8j3+458km9xC8QtIHMDWK/BG3Gd6yjyNwsz3hfdJYc0kcm
a3uVb095qX/3xGdFvsgdafEu44Fz8QevfnR0AOUUzte1KmPGOfc6HAbfrs0n
BlvGIIj+qZ+n/DNe+NUOzFPpI+rLe+RdXYavjE6RdBp75dG45B7p9R1r1PVd
Y0+NU5kxyTfMa9Q5u4Y6rGNSOLzkPTJIm0y66bDZkzZrmkY94rTx7fxXcJD8
8LTHyM1w0NWGRmfBLSmn8D/qjQxmK4xvf/TBuu9cOGXzH7IgfDZ7Z9bq1/xv
w7fXezOHwJFkfS4ejR6oX6pf6co6wqQta3XIGzYpbcT76Mh4KHlig0gMpqzn
lk86AQ6XHdLfOG7yPmVrPU44b+NF9Fa6SaAu8ETKXBpr2pYwN7ev6wGSf3p1
vr+fWLQ1/vMS3x57jboh1+XNnMK8lFyjp7muLNOHMh9TPvojHdAzeEh9Tr/N
9UD5OKesPUOe4Yj506rj1Iv2teT/syvfDtH1o6MsxVM+LGzLt+c+bcacV/tT
79VOHizNeQ/Kt6ctGIfm1mPXI3spVH+rOezKtycNaVMOOhDE7kdGmQ9LY91j
KeVp7kI3UYbaYdZ/x999U13TTef49sppe7/ryrnGywyWbGK13yobPBouix3R
N81pq129/q7j2/Nr7MlaJxzCGFNxCWN6wyuYF6b/Vt8IIOfJpPRjuiO9Ymxr
dX6q7vi1kc98VRNrJjo6HSd6eLUN1321jE3KYi726Bx24dvzt7wZS/laVP83
nK755iiHjYnx7SfLqu43It8wNoV7NK+tHBvQc7yPfjpyyeSw78WvL6BjhVMN
n1Lr1jif+fK6/VI9Y/4bPTzcvXrSR5U93YHvQ/WnM/5JlzZjXpH2B9oxX17f
pm/P1Z80uWY+t81+qd5JpyQjarx7803pTlyTw5DvdEs6qn6vL1TOfRuYS7Ch
ZI4LdC5yiR2zcivxb8fVxOeWnFAfZKM2aZw0p3Au9p/98O3mM8ZF39I2yD86
TI1vCZvKkKygfyn3Ob5du5HX+M/UuKpL36hjGr0iMiHjDj6Lv2blmLbBQfj2
Oqbjvfh71vGBjq0PLMWwrzKbHNIn2SoS58lYGfkElW933VxlHZdbYazVn7SR
xI8dkXSTzXREule1XZqDaYt5/rh8R3fl23E9iUOor0HWGZEl9CnX6prsyOis
pXMd7xt/zXFtUYUxILr5uv1S57CJb0970u6TlqTbebxbdDRjcuWl4+9q/B9j
SUTvNsZGryJD2YiUnWcypmTc87f7XQ8Htx++vdanb0fPSV8md8zV5+Lqyod2
TLalbvUL8zDn9YnKC2urfPv0F226wvvN9bbZL9U8MXb0kW+HxC/Sd2ufD/9B
DmYdT/gbMGbGpzQ2jKXyGiG9dJPEdNt1v1Syhpxe4tsB322cJnOyhtQ99LDE
5yG/85z/x79RXdATtKus7ya38Tjkf32fPPoWXSJzctAnjFXxh18ncw6Tb9eG
5sa9dfNt/GNte8G29TLHt88dOBf9Iz58gKPQL3Hhse8GZAe56TpOLjE6qn/2
fvh2fgO1PNRz1hybj8X2V/eBq/MGIAPyzFz89l35drwTvQzHkHaUNhA7rANf
vOTfLo2Ze7BlRnfNWihIbHRHjTEWuxJ5Ti6TwWlH4dvVg/qrwGEkjj17SW0P
sAvfnjIzb5MfY1p9F86HXvjW/y8uf+Xb1QE5p+60E+thyLy0D/pl9Mr98O1J
q3zEv5rcZPvD/2za63qEtK7j2/WFzF34Vs+9b65Px35qfMq6ZqCjVT+SbeXL
YfDt7lN3yqvqzNJHhmffp6W5LKgDXANdztih3sjqxA8d+fasQbBOdZt0kvfm
e8akpf1Sa5rY/sn8ut5J39Zuzauq/aDitPDt4Vi0c3N4cja2AnUU/i18e2Ig
VpiD4D/MUcnNyJXaxlKO4S19h34amTj6g45p3YZvr8DpZm2UtY1zyPP6HTsq
mcQ2HN0nXI5xPfI0ds6MPWR/1u7le4nJE7sFH9TYXZRjbJnWetDp5vZWPIw2
QD8KT4TfmoujuA3W8e2Zf0ZXV0f6c8YChz4S31S2j+Q3/sPGGrIcj5Zn6HPx
F9ZOMubnXLjy+IQ5svdkOPqseR7Xce7Kt8cvSBx5Y8TS/keHiW359mqbji3L
/DH3xXdnnW31oHx7yhe3xmcUr8n+YQ6Vg+1Xv41ue9h8e8qkxuEjY5QJez2d
L/sOOuQzc8rIbKDrZY7oPvJRG5nzP0m5Jo4LvWsd3173LzG+JJ59Xcu8BDoY
P/L49NQjaR3XXs3x7YnXNbaHOt/2vqW9u5dsHcY/zye2TLVN+aVv1u/ywxpj
qmfvY7bz+FfU8Txt05hB7qZeHVmT6ah8pvGXDpD4lmkX7P44t/D26/Sqbfj2
XZFyoOMrGzpe4o7NtYP6Pf008WjxpJnHRxbQKcKNZyyC8O10WWNBxmXf07fM
U+nPmcdnzwX3mefknXTo0c6bNNOnyWA6l/ulk17hb4fnndP+6byR69pf/AFx
61kPVn0BvceR8TnzGfcYV8O38/FPeezHb2xb5L3GGXo6XoQcrgedSHumn9b1
0HTM6iN8WGkJ364cjdXO+37alzkNubcL307nH/n29A1jIT5bvSZ+sDoQ9wd3
Ncdnp05SP9K3jm9X39KlvWsb4ULr2vjjwkH49oNCn+Xbpf+qq7pfg/px1D00
w7e7V1+MnpqxpvbbIOWp7sK3V3/Zoyhv7zNW5Tgs2boN3+5e+nn6Zdbus7XT
Hep4Fl+Bmm7IurC6B2+N3RAkrot5VfRjHFT2Na/1soRNfHtFYmPSu8IlxT/M
96tdkhzO+J81qlW30e8TEzJ+pd6Z/dWVM31auWVMrn6tlfOvY9U2fPt+4Tvs
zRl7jCF0eOMbvjmxT7KeEOgliSWQGOWpE7JsiW8f/Z2M0WTsEt9uvhM7ZdaN
JZ0ZJ7O+JPZt/RnnkXjF4XWqX8Ickn5jrDFX+tnGsr/LUr/OufRJ9oolvj2/
bEnJS2zB5DW92jnlVnlpckZ6tA/lEJt6LYfEvht9Kg+Kg/DtlTugt9A/6aX+
r19qG+y5+NesT0jb1qfUHx3WXIG8oIcaW8hrHErWaqzL6xzfTp6wqbFN0Mn5
WqcP+o50+358cXEQbPfSFvkkT/HjMSfPmHJQvl1/S/59x7OJ5cI3Md8xhyNL
lSd9QJq1Vc/4bmK97JdvT92RcZkTkn2R2erBb407xw91jN8e35/IP39nDlbj
IYOxI+ODdBlbIisjVx185sKP1H3Izf3yXmmjw6XszLnrN+t3t+Hbd8XIt5u/
SLN2E77dnMl3Dsq31/x4F9mTfWu0Z3KMbTtr0irGOYpjjm+vY65vJPZY7Mdz
8vGo9b3D4Nv3C/VgLmMeHR0wsWH0YXOwxIxOmsgr8lu96APpKxmbRr0mfxsL
jAneT75kj6vD1jUPwrcfVD+d49vF1sHPRo5YG0gOx5ZY+XbAZ+NxauzcHOGm
419V0w1ZnxL5o/9l3r+U1m359uis+n9kIW4lcjTfqXMNelV8WfmE0BvD5ZCL
lauJ3IveSpbpE94lXeG9/J01nfjSjLnKT3ut9miymjwna8KJL+Uv0E7V1zi/
rwddRh9Jfajr/cSW2ca/PXlVBuQqGWyswhGTa9m3TN1H7mctqjHG2Ge9hGeU
hXfEP5YdI2UR/2VjlDahPvgKWfvlHakXf6csD8q3nwSW+Pb0/SD/Z6uMP5O6
mPOtWNqv9KB8+1Fgv3x7ZAuel4+6toXHzWF+yBZDJkS/q34IOCn90fP6jTbo
2jo5m7TGB2yJb5f+Ov+cmyfVOoose9vb3nY2O6a5KT2avqFNRI5GNq3j2+NT
XPn2fN9cIbJC3J8xnlXKqT6rn8aWFjuG9avKLfskV769ftscg17FBjfuJYcr
MB7mXpyP/uoa2UnOkAu1bs0dyPzsrVDlvPrwzuxbmoN8d/9x8+15ni8MnZEO
6DfrqkafxfobXwLPsAXn3tQXnim+4nU9cOXbs744zy7x7TXmdfh2usCSHSbr
w8O3yxM9yoGrcJDR5pt0jti0K9+Oq637HiVO+Mi31zGcnhyul06V9B8VqnwN
37btkT6GjzisdM7x7XUfTDoz+USXxges49sTjyn9Z86/verP2rC5vTUd5HVi
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
ZTwlZ4xx/s6effv1b691Q37qX+F3zDFwp8Z25aIt6OtVV5Y+ekzWr2lj7jWu
6uvkhPKOXEp68m02WHnzrPfQGdg4+S9UTrEidUWH9m6yZknuxUZv7m+8IJ/C
oY2+PrlXP5Mf5eB+5WUuQR+k05J52lPlxQ4Dh7lfanwDl67Noa5JnLu2CakX
9Zd5G96abmV8F3Og7qEQDlgZ4i8zX6dL6wfamjpIrFs8bfXXoONFp8cLkZPG
3Ox/QRZKQ/Vv9wzdJzIYKt9uXpi5Q8Yuci08kbnALW95y0kOa3uJv+OZdf7t
+p98uE/9juUcWUQnTfmQY8Y8/I35ZeaDfKQqz0seeK8jcbK833wD/05WGsui
K2VtTF37IL/anz6l3M2XzLWqX6Z+ke8Yf2v+1J/5i2u+WdtD6hiOkm83Rmo3
2lX4dnYY8iX6gTm0vp3YUp7NXEfbIZvpmcox/h7O6/OxDcU2yU7BNke3167o
rLhPcixydJN/u34hPeYvlW/PrzaZmDbh3Mkg8whyyfe1u01r3g+Kk4gnA/GV
yhyUTmJsjA9X5lhZF5s0Sadn6hxhU9kkj8aKjLfKN2OSuUndf+wg2C/fTt/P
nnnRT+u6+12+be7OLqnPxn5Wob1nT4/My8iV+DRINx7GXJ/+MfI/1c+MvDFH
0e+tu0ks5uwp6jAPh7oHJH7M9+i2SYvn8W58mHH/o+6fegz3Lz10RnJN21Gn
0Tkjh+krSYf3K1NtLfwAzh6HkG/4v7TwT4lNBmdfeS8yxd94KnyAeg0XSIZ7
L9lN5ivfcP7KNXa6XfeQD3DX4em0EfIsNoN14z9Ia3RLvzjeyH3zjsy9Exs4
aUwcZ+OxdqHfkFexvRufq3+D3+oDa1zVZsjP6AnaVHw88p3sieowTilD/gTx
NaK7J1bBnC68K9/uudgt0ucSI/0okfSaW4/7UMbWM8amp3+PsbDroQ9mnsbP
Jz6Xm45tZFP0R3U8dxjLtm3P4TXI901pozdmvTLww44/1tz92nGN8a2f1/Zk
fE+5av+55v9pv3NpzX4EjozHdSwP6CRVDx4P8+O6xzkftbqnTj3q/hl4Shj3
0/Vtc565581vav2517wvc+jx0P7pV7GNsWMm3tF4kGfR6X0/MLere9TNHWw2
iZtTy47eGe5y7sBD5Dn6HZ56XVmTVWPMy+C4+Hagq9Lzs+eMsSvxZo0j+rXY
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
xNwkc4/8Zl/dcJ9z32KzY9sge/VZ8wPzksTRSH1Vntfc0pzKPIR85a+kvnGZ
vl0548wNIoOh7v1Grrimr6TdJl98v83frOmht+Pi+K1n/Wz8/ebypa/y73ef
PrKkc+V+Ogye2LzAPMTcQpqyV0yNb6A9Zn4cn9KqZ8una9ZtjXEKjHXkh7FB
vsxfzOXJiVHvNsbmOzWOH+in6s21+DJV+TLHtyvfw5i75N1s1PJirMC10y/4
AOm/0e+t1yHXRv3DmkbPOlz3HL5R/XqePB75FXoOLpdMILMiI8gj+dyGjyaL
fY+cXLdmXx0YN7Q1aTQGkGPk5pwf2GHjJOLJ5L38Y5SxPMu7MjDuSZP2rswT
/yzppGupB/fPxRrbBLY8dTM3JmUd9H7z7Tn9T/lZE7Gf+O30hOx5QfbtoqPk
PfQxdvzK1dRvmy/zD3B9LF/9nzyhI/o+/sdcV7lpG57JXE7fo5c6xwY/xqTD
TZGNZFD1M/C+yq+NPGA4uPDdc+VGT8bpSCPZRsaRpewpke+17HAr7Fi4ytzv
G/SMur+b8pcO5ZM4R8YD5xLfUL/2t/dV2y1dkK0O/+P9uCZjFx2d//1B7WY1
xkvWfWyDGn8iMeDneNhc03ag+sxrM/x9oncbx80N5nTu6qupD4fbsxaBrrAp
BkDK1zP6grZV/W9GpM+RYbvGbyf79X1joz5HNzkuvr2mTRusc+p194I5xNze
7OcmkDc1dsVJY6wDuso6/4t6f/ZYXXrXNqCrzcUzX3qn9jbnmzUCR1DjgGz7
fjBubMMHjc+q17kY/cEoO/RZfai+Zyk/c3z7tpzVQSHdYx0tzW0h60eOEvV7
dAeyfttvuncsu6OURb6XPatOGtu0tdOE8F77gTa7jQzYD8ayU8dHYbtYh5Pi
2wPfGWPXHwf03fC3h4kaUwHngBeg+x13P5nTm3ZdD7Df79FPjLFH1W9w3vFH
ia/BHN+e+O181Y3HsM3YP6cvrNMvYOTbzRVOC+bGuV2Bc0xs+Kx1nOs7Y9kp
t7m9UdY9Ywwen9mm/6gD/fogtq3DwpjexJ44SiR24mnh248Sc3rQ3Dxk3fUK
feIox6H67bqPwVF/KzFrl67v8q5N1+in6+byB8Ec336QNWNHhU2yLhjLjszS
Lo5yX5mAHBrb+lHLiZPg20dkj+LjhDZKFzmqMQkfLCbVtv7t1c7G31A/Mq4f
J2r62N9PYz+GUafdtMf5WO54qW3lwbYYxz3p8Z2j5AVOSoeo9olt07HtmF/P
Gx934TTY4qz52iWeTNq4vqbPsaEcJ5cT35n697rYf9lnOBj/rueX4r/U46Ta
kDRvSttSOSivei1lNtZb+KU536rYRrcph5rWTW1jqY6W5hi1/pOmPJtvbhob
s190/Xudz19Nz/jN8d6a7jwXX6K5tC1dm9sDeyltc2W35Kvg+mh3WspPUPl2
66H4B+IHzKX5uBzFHl51vfvc30v3L/093ps6n+PuU/br2u7c++PbN6L6/S3l
b3zPUptM2je1jXE9dtJw0rz7caZhrMda75AyGes65+fSPHd/UNfVjee26Rvb
tr2axnrfcZbtSfLtS3Ih5TdX3uv61Dao613rOw+jvGta+VJlzWz2ozoMX9aM
jdtwd9UPKogOMfaT6ARze065d5vvVr2yfm/dM+u+m7QBHzO+gHzOE3+BD8xS
DPvw7cY4a4L5SNXxbd3eWvWeUQ9Yeq7y7b5p/svni//c3J6Zu6KOF0tttcrB
se/MycL4sI79CWetrK0FEceG/xh/ruyFaq190rQuHaNMWyc/dx1b556t2ObZ
bcfgmodt5fpSGg5L1uQd/N6sC7UGUP1oe7is4Ezk26u8GedFm8o+/bbqCnNz
pPH+oOrQkU1jm1wnC9fJs3GOm3Rl3rBOTu4q+5PvpCHfXppPrJtz1fnk0rxn
m3npuu+MY9CIyreLu6Cd8yEnp/iWHwZ3OzefSJ+vesqc/lH1isijJfla8zw3
19hFRuyiDy3NrY5L14OT4NtTDzUtm+YBu+jwS9/cz5i06Z3AbmB9MZmfPfYu
d7nLbe3fDmIDZO+I+J7vJ11zMrJiiT8a+b/I3SoHan9aJxuWZPLSODIem/iB
JZ12HTezicup3FrOj/mO3B3l9n75n10x14a3wbblvo7nTD2O49gSDvrMqDcE
eQe7hvVP+px1aOIxsftu698O1rhkTji3HuQ4kHFqWx5j23vPyTjN5bBr2g6a
j/2UxS7tbT9p22/97Oe5XZ6p66izz0H237PudoxHdpjYtSz3W/b7Rb637TdP
e/oa/z8OUm7HWeYnUb+nwb/9JNr0YfenvMcazOw7qjzFMDtun6o5zNkZjgqH
pZ+kfujB1nwmrqcD55K1n3Pr4/Dt2Vvc3i1vfetbp/PbcqsV2+Qlert4C0kj
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
q1/6pV+ajl/4hV+Y+OAgvNaP/MiP7OXj4z7u4/Z89c9//vPvnf+BH/iB6dxc
/l72spdNPP1DHvKQiSO9733vu/qO7/iO1XOe85w93v1M4JuTxr/9279d/cqv
/Mrq13/917euz3e84x2r7/u+71t9+7d/++p+97vfxB8/9KEPXT3+8Y9fvfa1
rz3b+8/tSDn853/+5+qLvuiL9trYne985+n8T/zET5ytb83Vgbb90pe+dPWL
v/iL0/HiF7/4bG37sNLIfvSMZzxj9a//+q9bP/OmN71p9ZjHPGbntp/73ve+
90196YY3vOHqKle5yuoSl7jE6tM+7dNWX/iFX7h60YtetHfvmdSeXvnKV05y
K31hyWaQPOF+yZLP+IzPmGTSJS95ydXVr3711c1vfvPV8573vA+5v7E7UnZ/
8Rd/sfr0T//01TWvec3V0572tBNOVaPRaDQajUaj0Wg0Go1zG/7t3/5t8l/+
8z//84mTvdzlLrc673nPu7rpTW86Xd/Ez9ZY6cH4d3iQd7/73RPH/jmf8zmr
j/3Yj93jH7/gC75gui62zDp87dd+7eojPuIjVh/+4R8+cecOHGW+ke/g8C5w
gQtMx3Wuc509P9JP+IRP2DuPA03+8tx73/veyT/567/+66dv3fGOd5z+f5e7
3GX1NV/zNas73OEOq0c96lGTj2rN1677Y+7nWj0/F+tl7vvJG9uE/HzDN3zD
xOHWfWPrc3kn339rAeTfc3jju971rtPfykF5/NZv/dZ0b2wk4/u25U93Kbt1
+91ue22u3A5SF/kblPed7nSnvTb2Ld/yLdP5n//5n987d6lLXWq2T932trdd
ne9855vu0cYdePf6/oMgMUtud7vbTd9Rj/X8Ojz84Q+f+ql6j7/wNvsfwJ/+
6Z+urnvd687a9BwXvOAFZznRcR3MunUxidU9x3nXa2Nbr8/MfW/MY431c7Ob
3WyqK/3C32TX+J38/v3f//3qsz7rsxbL4MM+7MNW97jHPSa7RJ5bt1/CXH7r
ufpc/l/XpYxyZJdngronwbiGYV1/mvvWmI91+RzfV8sp97EppWwf+MAHzj67
hPF7c3uHz+Vj2/xWbBo3N71rrk0vPTtXT9uUa333unUoc9+Yax/bpq3tTo1G
o9FoNBqNRqPROKeAT/MVrnCFiaf4/M///OncOr59kz96+IDMnd/2tretPvqj
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
4i8/9rmki0xhqyPb8jzemo0E0g9Gvp28WmrbaUfieasH7SKxW0D6nFcPiduf
9rUt355vkAupb/JoRPZTyLekOWV7latcZfpb2Wq37rMGopadtQGxvRkL8i15
kwb2P7YEB05fXq1BqOtmKt+uzZDPc0jdGPfSl65+9auvjTMfjHWBS2f/YCPA
zePApZvtMPdKP7mftLHTsMeO40xkUX7TL+2lwoZLrmqzbCzsPMra+4yhsG7f
9kaj0Wg0Go1Go9FoNE4jtuXbw0/gb7J23rw598U3dt1ejMfFt2+Dut8pfhQn
iz/D/87Fba/n8AK4E9yz2Lx4v/gF+/VO1/G1eDYcGByUb8edQ77jsH7fNdxx
fBzDaygjvoTh2/mR17j01Tfbd/Dp0lz9oPGUfMPFDcAreZd1AyPfruykI/aM
Wma1XUgj/sZ3lF32+Eua8fHO48lxrNIM6/h2nNAmvh0PNKYJ5yg/eM3474Jy
e+YznznxPeK3+673K2v8tXuT/4PuZ1rzcVh8e57B5eGuwz2u25MA9HH8aOKe
Jxb5tvEcUibacvq3eBSwtBdE0sJvPDypuEb5buKgi9edfUqTLm1pP3y798cf
nG3FM9qh58i3pCNxt5MWB1tS+HbtIrxobcNzdQHi0mhDYqAkRocD5x5O9iB8
+6UudanJ/onfv/a1rz2dw2dKV2Jlj3w7X3v15R6xyp1jM/K3Phq+vdou5QNf
jsut9oNwyTWGSOJV+QYePjFQMp6kXGvckLQLNjF8tXfa1yDxyK5//evvlVt9
B2zLt+d+tpvcz66Wekz6yPHkKXYecVni92/NjDauPvins3mwn2SNlfFN+5B2
7Tb2A1wz7hyP7dffSQd7do37hG+Pb7sYL+lL+lvyXtt9bcPkdvK7NEbXNqq9
sJGlrnKkTZINbAN5zjq29MEc+oe+Z/1Gxr663iP3eyd//5SDo5aDGHW1PTQa
jUaj0Wg0Go1Go3GmYIlvr/51kP/jJBJjFZdZOdsg+z8ufes4+Pa5+fnSuezv
iV/izz3eO/ISYijgm+QfJxdOOPnD3fGZx53jsLMGoPLt2fMzXB0+im/5Or49
ex1WvgSnNMe3p4xGvn1E7uW/jVfHTcsT3tU1v7gfPovOL/m3e0558HWdK+v8
jX/BdypraU9sn2rLSGx3cYnwM5B9afHtiWcTrgnHvolvZweo9ei5yrfX2A65
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
ta6PebX82kZ/gxF/oq3Jy8hcFv1kvfYq159nr/wsNapTfm1HiKtRHiMmBGjZ
Eb+f+GP5Op7xRV4vvtPcf3x89tPlZ5i6lf8mxle9yumUv69Ge5vnfWQ9cn/1
PI9yPi3FsQL+dlv6uxARERERERHprKAtlLWGemvXeddGJw09ImK119JzOY62
ED/LFsfrvWMT2wC9BZ9U4mjj2xy6y/gk/CpzjSVi9ja6PvddrBcrO78+yLVj
fi/nFelhtXSfuCcvQ0tlrHesnG5+vvw5h/I2ihFej3JbtVSmRm0X+efzPOjt
xIHBv504IeX6tKTZl5+DODa+fS6JrYO/LP61xNDmOQ8f49ZqTvwN4aPNvFRr
5gi4h7UD+JXW0tHGhfBTzr8r+pR6ecT1UXeuxRo9q9Hn5Hlh0bfk93JtHC+X
Ie7BGums0fcFsf9Brb6Pa6MOQUt1yv/eo72ifpQtTyuvT74XA8fyNs+viXTy
tok+OM+3Xvvl8cViDIjYL3m+eftE+o3m+yIf9Ff2zMXPH9/s8G1nnUOjv8Eo
Q0vjTK3783aO9qhX1mib8ncR7d6ontHv5c9PfK43/1f+bpol/h7yeDj553K5
8mcy2iN/Xmr9LxB55PVtVJ9yfrX+LvRrFxERERERkYmR0KuajbM7vv3Zy7C2
PzSXiH07PmNo16KWP+34ur61aY8PIs+2qtO4MD7bLs4RKyT26I14zWNTn7Fp
t9aQ7ysaFnG3JyYfz9bq+K1t87bug2rR2r5vbJ7zjvgMtFWfH5otWnt5f5B8
r8621GMnZJtPiLGztfmMS/1b839DrftEREREREREZMJx+umnFyuuuGKK/0xc
an6PPRA7oh4l7Uc8D//4xz/Snpfsy8qegx0VYpmvsMIKxWqrrZbiHy+//PLj
9GyH/29r7m0Lv32R1hK+zqxfYq9PNHf2zmQv6YhTYn8vIiIiIiIiIiIiItKY
0NKZ+yFe2EcffVTzvIiIiIiIiIiIjBuxHj43tRdpiY4ajyPHZ1ukPp3hb1hE
REREREREREREpKOizi4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi7ckvv/yi
aZqmaZrWqU1ERERERESkNfy///f/ilGjRvlOKSIiIiIiIiIiIiIyFoS+/vXX
Xxf/8z//U/z444/jNd0ffvihGDFiRPH5558Xn332maZpmqZ1OPvPf/6TrL3L
oXU847n49NNP9UcQERERERGRpsG3fejQocVLL72U3inHV5owZMiQonv37kXP
nj2LHj16FH//+981TdM0rcMYYxNj1FNPPVX53N5l0jqGxbPRq1evtAZQRERE
REREpBm+++674o033kj2zjvvjJd3ytDbP/roo/Seys9///vfxb/+9S9N0zRN
6xA2fPjwtAbr7bffLvr27Vt88sknjlVasng23nrrrfRs/N///d84/28kIiIi
IiIiEz+sjx40aFDx3nvvpTXTaA68Y44robcPGzaseOKJJ4qvvvqq+Omnn4r/
/ve/mqZpmtYhbOTIkcXo0aOLf/zjH0Xv3r3T/DNx1dq7XFr7Wzwb/H/Es6He
LiIiIiIiIs1AfPXXXnst+fMB2ju+XOPq417W24mB+v333xfffvutpmmapnUI
++abb5K2Gpoqc8No7u1dLq39LZ4N9rZRbxcREREREZFmGThwYNIZ8D0HdAb0
9o8//jh9Htv9wcp6O/ulou2TvqZpmqZ1BENXxZ899Hb2DmduuL3LpbW/xbOh
3i4iIiIiIiLNwvskMdsjfkxo6x988EHx7rvvFj///PNYp63ermmapnV0U2/X
6pl6u4iIiIiIiLQWfNvR1YlPmkPM0tdffz3tGwdj4+Ou3q5pmqZ1dFNv1+qZ
eruIiIiIiIg0Q2jnaApvvvlm8a9//avmdUOGDElaPO+a+X3Not6uaZqmdXRT
b9fqmXq7iIiIiIiINAO6ORb7otZ7f8TH/dVXX63so6rermmapk1spt6u1TP1
dhEREREREWmJ3Lf9tddeK0aMGFHR38uGXj506NDkAx97qbYG9XZN0zSto5t6
u1bP1NtFRERERESkJUJHHzx4cIoV05LP+n//+9+0n2q9mDONUG/XNE3TOrqp
t2v1TL1dREREREREGhHa+jfffJP2Qv3www/T72gL9eyrr74qBgwYkOLO/Pzz
z63KT71d0zRN6+im3q7VM/V2ERERERERaQk0cPTvl19+OWnoxIppyfBvf+WV
V1LsmdbmBertmqZpWkc19Xatnqm3i4iIiIiISDOMHj06+apjxGWP32tZfp77
WsOkqrfzfo61dzk0TdO0lk29Xatn6u0iIiIiIiLSkZhU9XZMrUbTNK1zmHq7
Vs/U20VERERERKQjMbZ6OzHliRuP8Xuja9FFvvzyy3Rte7+Xl8ukj7umaVrH
t3HV22Ovky+++CIZ/X9LY1dntlr15Vh7l6stnw31dhEREREREekIjI3ezrtt
vi8r77mNdOvYAxbGVd+OvWPHJh3uHTlyZPHJJ58UJ510UtG1a9eiX79+xX//
+191d03TtA5sY6u3R+ywWhosfX9n0txj/GumvrViy3FsYhzr1NtFRERERESk
I9FavZ33fbT2F154oTj//POLP//5z8Xbb789huYe7/zYLbfcUpxxxhnFjTfe
WIwaNWqs9Q20Fd6j0e8pY2t1A/JFXxk4cGDRpUuXYrLJJivuv//+FP9+YtQg
NE3TJhYbW72dPp/x4uGHHy7OPffcYtdddy2233774qyzzirefffdNAa2d92a
sWbGv2gjrn3sscfSGL333nsXO+ywQ3HEEUcUjz/+eGoP5p0npjFPvV1ERERE
REQawbv0uFhraa3ezvp0uOiii4pf/epXxeSTT14cc8wx6Rjr1eM6tBB0+eee
e6749a9/nbTt5ZdfPl1XL65MvT1MOUaZPvvss6SRHHzwwcU///nPlH5L2n2e
XujtgwYNKtZYY41iyimnLB555JGK3t7aPVTb6lpN0zSt2lqrt9Pfcz3zq1tu
uWUx/fTTp3Eot3nmmac455xzKunXG38mZB1rHUMf//TTT9O89aGHHloMGDBg
jPGP6xjL3n///br15dg+++xTDB06NKVZb/xsaSyckPuNN5OPeruIiIiIiIh0
JMZFb59iiinSO/zKK69c/Pvf/07aR7wbo70D+kC86y+77LLpWK63cz2fI5Y6
7//luLqhtw8ZMqRYYokliummm67o27dv0hbQ4Mvv45FGrLvP48yH3r7qqqum
MuHzyDHi23I+7m30jh/p8XvEyK2nk+Tx7Rtdq2maptW31ujtnGMt1Ysvvlgs
ssgiqa9n3Nh6663T2NWtW7diww03TMennXbaolevXkmjjX6dvGqNIbX67hgz
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
ssoqlXZDE6BM+NiRf7zX8y5PXAB87DmOfk66sTafvfbQKZhfIB/yRZNg7T/x
ASBi8zKXQp1yPUTTNE1rbM3q7fTL9Olot/Tx6Ngca9Tfch8aLWuguIf1Wvho
089HHDJ0e8Y5/NwZf+jn6deJ68I97L9a1tsfffTRpEWjked6++9///uKzzxa
Nvcwp4vtscceKR/81HNd/5133qnEon/11VfTMcpOGSnPQgstlM4z9sZeqNyP
Lo0mz5w8PykH/y+QLuXn3tC4WavGGEadGa8YO/n/Au2b8zFXHGMra9BCc+cc
43/EggnN/PXXX6/S2/m85JJLpvMvv/xyRW9nfEefp+6sTaCsfG/cS5677757
Gn/Zn518uSfWn6m3i4iIiIiISCM6m97OGnTeo9dee+2kK/DOzPsx677xX3v2
2WeT33tZb4/0Yj85fqJF8x4d+gVxXtC5Yx9VYtqG3v7cc8+lspM37+TEvQ+/
RHzzeN+ONfO8q4e+XY7fjv8h6eR7oUYsAXwIgXvwpecY9QTSz/dW/e1vf5u0
gL59+6Zj+N/H9X369ElzCtCS7qNpmqaNac3o7Ryjb0bHXXDBBVMfTKz0fN/P
Whb3ha58xBFHpP6a8YXxivtZF7Xsssum88RTi30/x0VvJ65MjCER2x2f7lj3
xZhIHckfv/DQ25njJv2Y32bsnm222dJ51nmRTsS7Yf8QdH3mi4nvMscccyRt
nDjqgDbOfDHG3ARQlqgD676YO6Ye+K3H3rKxPzv3kO/ss89emQdnfB4bvZ01
cBxnHCXviLPPfZEm5ceXPo8Zr94uIiIiIiIijehsejs+6MBeb3y+4447krbM
uz9aM+/BoR+U90sNTeChhx5K6+jXXXfdpNHHunH8xd966630Ho1OXUtvj9g0
xI2ZeeaZ0/n3339/DF07tPey3v7www9XtPjQD4iRw7mDDz44lZe08FPnGHoL
dccHnzg1Z599dopzs9xyy6Xz1AXQJfCRjLoQL+Dee+9N323sg1drrz9N0zRt
TGvWvz3mZhlv6HtZX9VonpPjaOeDBw8u5pxzzjRvSl8d/XTcx7hFHBjSZP9r
tG4YF719l112SWNOvv8qeXNuzTXXTHHZGI8b6e38ZDycf/7503nGwjyGPPHc
mIvG3z984NnjhH3CAY089HK0+tC5Q69nnVf4/Me5aGs+43dPHSOWPIyr3s6a
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
ud6OlswxygWhtzMWoTHHXqNo7DGWMrYyt1vO5+yzz66MU4xfxGIhXfzty9dy
jPVbtEn4j6Nfx3nWgUUstrwt0fKZk5hvvvnGSHPllVdO+4TnPuexhi3mv8OI
BUd7r7vuuukzGn3EXsv922Nvl9yYQ7/nnntqzlOrt4uIiIiIiEgjOrreHpo6
sVluu+22olevXpU45ZwPDSJi5HKOOnEt799xbWgL7HuGTo0Wjr/em2++md6n
8Z/D5536RQza0DjwF8fX/IQTTkj6A5p87FHHezb58U6PDk9sGuLZxP6q5E/M
GvQBysT69qhvlLdPnz7pHHHk+ZyvrUd3IC3ir1PmU089Nfn5oXGg/VDGiDfP
dZTv+OOPT2VFk8HfkjQjv/bWsDRN0zqDtVZvjz1OGU8YH3v06JH8zo866qjk
o87cLONNxEPjHvp6+m7WUhGXvFu3bqnvxr+b+DKxD0jo0bEfKT9ZwxRjGeMH
65wYLx566KG0dou53hhj0Li5JsaDyJ+0iMvGOdZOMR5Tj3z8i3wY2xiHqEOk
kdeXMY457aOPPjrNE7MWjDVglANdPjR85gHIj/bgfwnyKY9NfGZsRadnbKWO
lIF6vf/+++l/iPz74Cd1IaYabcgYyH0RrybGWP7X4Xq+V/T2WFuAnz7/WxDv
J8Zw6gm0Qa19ctXbRUREREREpB4dXW+Pd9t8j9D83Ty09PxzxLktXxv+dbwn
kyfwnhw+gJC/+8dPwCcufueeOMe9kV/EUofQF0IfCcKvMS9vxFvPdZg4Fz77
EPp6kNc/fOXjOozPETugvbUrTdO0zmSt1dvDuC76fMat0NQhfKXzfj50aIj9
QYJ87jUvV1zDuBRjTqzLCqKsXB/jLuNBOb3YhxXysbiZ8a9cX+oXGn9ejnyf
0XwMq6W1x3XcE+UmjSgnZWGuu9Y9se4sysrnfAwN3/3Q28O//amnnhqjPWP/
1EbPhnq7iIiIiIiI1KIz6O0YugPvvs3EH290ba518Htcw/VYLW0j7gndoKxf
8znPK083P1Yr/fxcPV28nF58LqdVvq5cLk3TNK05G1u9Pe7Nxw1+NurjY8zK
x5lGfXeePp/ztGM8qZV+rTSjbPXOlcfMWnWI63Jf8HrjVORXbzzMLW+Hltow
rq/Vhvn4GzF5In478eLwbc/XETTT/urtIiIiIiIiUo/Oore3hZbSFve0ZcyW
ZtMu+/xrmqZprbNx0dvL6XSk68elPdqrPOOzTXK9PY8nE/uYNzvOq7eLiIiI
iIhIPSZVvV3TNE3T6tn40tu1jmWhtxPvnr3O2deWuPaht7fm2VBvFxERERER
kVqot2uapmlatam3T5wWe6qwjznfK/vLjhgxolXfrXq7iIiIiIiINEK9XdM0
TdOqTb194jb+74h9VFv7P4h6u4iIiIiIiDRCvV3TNE3Tqk29feK3RvuYN/Ns
qLeLiIiIiIhILdTbNU3TNK3a1Nu1eqbeLiIiIiIiIo1Qb9c0TdO0alNv1+qZ
eruIiIiIiIg0Qr1d0zRN06pNvV2rZ+rtIiIiIiIi0gj1dk3TNE2rNvV2rZ6p
t4uIiIiIiEgj2ltv//LLL1MaaO6apmma1hEMbf3nn39OYySaKhrryJEj271c
WvtbPBsxF6PeLiIiIiIiIjntrbeT3ldffVV88cUXmqZpmtYhjLVXaOzvvvtu
8fTTTxefffZZmh9u73Jp7W/xbLzzzjvq7SIiIiIiIjIG7am3856KPfnkk5qm
aZrW4axPnz7Fc8891+7l0Dqe8Ww8++yzxejRo9vi3zMRERERERHppLSn3t6z
Z89i0KBBxYcffqhpmqZpHcqGDh1avP7660lXHTJkSLuXR+s4xrPx2muvpWdD
/3YRERERERHJaS+9/aOPPir+/ve/6xcmIiIdloEDBxa9evVq72JIB2TAgAHF
U089Vfm/RkRERERERATaW29n/zmOaZqmaVpHMeaC+fnPf/4zaaqjRo1q9zJp
HcPi2ejfv796u4iIiIiIiIxBe+vtrb1fRESkrYmx6v3330+aqjFDJIhnI+Zi
1NtFREREREQkR71dRESkGvV2qYd6u4iIiIiIiDRCvV1ERKQa9Xaph3q7iIiI
iIiINEK9XUREpBr1dqmHeruIiIiIiIg0Qr1dRESkGvV2qYd6u4iIiIiIiDRC
vV1ERKQa9Xaph3q7iIiIiIiINEK9XUREpBr1dqmHeruIiIiIiIg0Qr1dRESk
GvV2qYd6u4iIiIiIiDRCvb3j8csvvyQTEZH2Qb1d6qHeLiIiIiIiIo3obHq7
WrSMD+I58lkSkVpMaL292b7Ifqv9UW8XERERERGRRnQmvX1i1hiibp9++mnx
wgsvpLb1HX7CMDE/VyIydoyN3p7P49WyWnnk/Xz5c6Nr45j914RHvV1ERERE
REQa0Zn0dvj++++L119/vXj00UeLIUOGpGMTg94watSo9PPGG28spphiimLN
Ndcsfvrpp3YuVcfkxx9/LM4666xi7733Ts8gtEbvGDx4cNG9e/fi1VdfNZ6R
iNSkrf3byzr76NGjK5/LeeWfue7nn3+uGvfUeycs6u0iIiIiIiLSiM6kt3/3
3XfFpptuWkw22WTJjj766HR8YtLbr7/++lS3VVddVb29RHzPzz77bOUZOPLI
I9OxZvSOuJ/nJu7fcccdi2+++abpNERk0qBZvT36lS+//LK48847i6uuuqq4
4YYbqox+/Yknnhjjns8++6y47777Uj924IEHFrfffnsaG2uVg3GX9A877LBi
t912K04++eTi/vvvL77++uvxXndpjHq7iIiIiIiINKIz6O1xzy233JI00jnn
nLM44IADip49e6bjtfT21sa4HduYuONL6w+9HW2GOq6++uot6u2tzbst6thW
cx21YjDE70OHDi3WW2+9YuWVVy569OiRjtXTO/I04if6CL7x8803X2prNKxG
aYjIpEezenscZ93VzDPPXJnLK9vss89eSRcbNmxYsckmm4xx3Yorrlj079+/
qgykvc4669RMt2vXrmk8Nq77hEO9XURERERERBrRmfT2gw46qPjVr35VHHLI
IWNcUy9Gbkv6Q63rm9GXW5tPSzSjtzeqY705h9aS169RHZut/9jMCTRzjDj3
H374Yd00minf+eefn2L3nHrqqXW/VxGZNGlWb484MM8//3wx77zzJs39kksu
Ka644orisssuS3bppZcWd999d7ou0tlnn31SX7/88ssXjz/+ePJ/33jjjdOx
tdZaK6VLf/Tee+8VCy+8cDq+8847F3/729+Kp59+urj44ouLWWedNR0/6aST
qsoibYt6u4iIiIiIiDSiM+ntxP5AW2C9PppFI/9vfKBZq1+Psq6KdkvdGl1T
q1wffPBBMXLkyJaq0CKt9W8nhjk6EDF2mi0vbY61RlMmTnDEyS/nQRkGDRqU
rhnfjBgxIvl4RqyXnGbLz/dD+YjzkEO7cg6Ni7Zm/ibaX71dRKC1ejt6+bTT
TlssscQSddOMNN566620Tov54zfffLNy/pNPPikWXHDB1C+RJ3zxxRcphgya
et7fw5lnnpnmDFdYYYXUV9J/qf22PertIiIiIiIi0ojOpLdvt912SYe49tpr
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
GL7L/HzllVeKvn37Vj5rWv5s9OnTx1hDIiIiIiIiUkV76u2sw+ZdlZ+apmma
1lGsd+/e6Sda+3PPPVf5rGn5s/HMM8+4Tk9ERERERESqaO/47T/88EO7x2LV
NE3TtNyM367VM+O3i4iIiIiISCPaW2//8ccf26JaIiIiY80vv/ySfr7//vtq
qlJFPBsxF+OzISIiIiIiIjntrbe39n4REZG2Jsaq0NuN0S1BPBvq7SIiIiIi
IlIL9XYREZFq1NulHurtIiIiIiIi0gj1dhERkWrU26Ue6u0iIiIiIiLSCPV2
ERGRatTbpR7q7SIiIiIiItII9XYREZFq1NulHurtIiIiIiIi0gj1dhERkWrU
26Ue6u0iIiIiIiLSCPV2ERGRatTbpR7q7SIiIiIiItII9XYREZFq1NulHurt
IiIiIiIi0ohJTW//5Zdfkk3q2A4iIvVRb5d6qLeLiIiIiIhIIzqj3h5a8cSi
F1OP0aNHq+eMI7Qf7Tg2z8XE9kyJyLih3i71UG8XERERERGRRnQ2vR09FRtb
yL8ja6oT6r09NP6O3BatYXzVIzR7EZm0GR96ezPzeORD2s32/aTF9djE0n93
NtTbRUREREREpBGdSW/PtQXua63W8M477xT77bdf8Yc//KH44YcfxkizvUA3
ee6554r+/ftPkPz4Du65555ir732Kh5++OEJkueE4IMPPij69u1b/Pjjj+lz
a75b2uSnn36q+iwiky7jS29vdK6cZku6e/l6rrWvmvCot4uIiIiIiEgjOpPe
Dvfff3+x4447FhtttFFx5513pmMt6apxHm15sskmKxZaaKHiiy++qCpPexDl
+utf/1rMOeecxfLLL1+88cYb6VhbxC6I/Ej7oIMOSm1x4oknjnG+MxFl5hle
YYUVitlnn724+OKL07Fm1jLE+QceeKDYeOONi+2337546KGH2rbQItLhGRe9
PfoV0vjyyy+L77//vm5fNHTo0OLpp59O+ZTvr8XPP/9cvPDCC5WxQiY86u0i
IiIiIiLSiM6gt4f28NZbbxXTTz990omxk08+uep8S/f36NGjmGqqqYqVV145
aSB5eerd0wzNXFsrpkDkve+++6b6TDvttMWTTz6ZjtWLadJsuWpdl+vtxx9/
fGqLs88+u9Vpt3RtW+r25bTzZyOei8MOOywda6YN4zvo1q1b5f4ZZpghrTdo
lIaITNyMrd4e83zfffddWk+15JJLFuuuu27xzTffVKU7fPjwYueddy7mm2++
1OfMPffcxSqrrFI888wz6XytfvT8888vllpqqWLmmWcuZp111jTHyFxhveul
bVBvFxERERERkUZ0Br097jnjjDOSHrrOOuskDSRiwgToIaNGjUq6A/fwe+7j
3L1793Q/fuRlvT3W9uf3NNrDlGs4H/fXi6eb7+FZL81PPvkkxbghxkstn+zy
ffF7Lf0+4ttHG+Qx2nO9/ZhjjkltceaZZ1blU4ZjtEnkndenXJdG5wKORxuX
ydu/Vv3zti7HnufYLbfcUvzxj39MOla0Rzn9ctvENcSg4XneZZddUrucfvrp
DdtFRCZuxkVvh6uvvroyhzfTTDNV1lTRnzB+rrnmmuncXHPNVWy99dZJR+fz
dNNNVzz66KOVa6P/oW+L9FZbbbVimWWWSb/POOOMFc3dPV0nDOrtIiIiIiIi
0ojOpLfvvvvuxeSTT15ccMEFVcehkR9ynKunt8d+dfWoFTO3HmUNuNk0x+a6
vBzo1I3IdZvW6O3NlCW065bKODY0u3ahpWuabUe0E56x/fffvxLPXb1dZNJj
bPT26CvYiwMf9CmmmKKYZpppkqYeYw6cddZZlbGI+dbgpJNOSse7dOmS5gCj
DB9++GHygZ9yyimLm266qXJ99OOs2Yrr7a/aHvV2ERERERERaURn0tu32267
pC0Q7zx8niH0hffee6/i43zOOecUd999d8XXGYgnU8+/HV577bXib3/7W1qz
j3/zNddcU4mpm/vBA/cTP/7cc89NGslll12WYuqWoY1IB9/80047rbj55puL
gQMHVqVFGTlOexCbN85FnsT+ffDBB4tLL700pUF6L774YiWPSOezzz5Ldbzx
xhvTdcxLPPLII5V2yv3DW9Lb43fypp7sQwo8L6RPffjJHqXBu+++m7Qg8r78
8suLAQMGjJEe5bvtttsq9+V5vvrqqylN9rXNy8s6hvvuuy/Vh7b+85//XPTp
06fqu+N3fEJvv/32FA850s7Tf+mll4rrr78+lf3CCy9MPqHEfIBYF0EsB9qF
OA/UvVxGEZk0GBu9PeYe2V8ErX3DDTcsFltsseSDHmMOYx7+7MzrsR8JxD6p
9HUrrrhi6oMYy4JY27Xeeuulz7FOh7RmmWWWFGeNMSLOSdui3i4iIiIiIiKN
6Ex6O3tZojmgyUIeUwR9d/HFF6+stw8jHm5oxeixZb2d+6nHgQcemHwQy/fj
ZxixvMOH/OOPPy422GCDMa7Fn5G4MKHT8h6+6KKLjnEd8XzRsKPsaC6R19df
f11VZ+KSb7bZZmOkMdtssyX9OXywmYOoVSaMWO3oyq3R2+PaQYMGVfwn0bkX
XHDBqrSXXXbZ1B7o4cQhzs8tvfTSSY+I7woWWGCBdI75ifw4+e2zzz7p3HHH
HVc5xvcU8yy5TT311MXhhx9efP755+la2oG9Ujl36623Vo5FHOVTTz215vdL
mzEvEPUNvb1r164VLV69XWTSo7V6e5ynb6MPWX311YvHHnusmGeeedLYEGPO
kCFDilVXXTVdM3jw4KpYY8CcIlr8HnvsUUl7/fXXT9dfcsklldhlwV577ZXO
nXDCCelzjAnSdqi3i4iIiIiISCM6i96OHrHNNtskXQEfZgh9gs+hn2655ZbF
ww8/nGzTTTdNfoWvvPJKuq6W3g6c5zi6CPuHEnfmrrvuqsTHRe/+6quvKr6L
p5xySjq+3HLLJX/ufv36pVi9aODo2PioY6H/b7HFFumd/Nlnny2OPPLIVCbK
F/A7+vFaa61V2VMP8FdfYoklUhrzzz9/0ruffvrp4k9/+lPxq1/9qjjxxBMr
cw6bb755um7bbbdNfpE9e/ZMOnu0C3o4hFbTrN6OHzrxhPGhjLmCa6+9Nuk+
8847b0VzJ84B8YfxH7/ooosq2vaee+6Z0gm/fdqMul533XVV3yH5HXHEESn2
Ar6cQWhXCy+8cHHFFVektkZPR7fHBx1/UO5FY8KPlD1g77333qq0+U6jHYgT
g4891/AcLLLIIlVrIEJv32qrrdJ3Xm4XEZk0aI3eHufeeOONtI8p/TPzvG+/
/XaK3c7YEGMO8WPo6+lnGEMjr8iPsSfmAoH5W+aNOUY5IN+T4y9/+UslBhaU
97aQ8Y96u4iIiIiIiDSiM+jtoZuutNJKSdflvoCyhF81/tH5Hqr4ipNPUCt+
O6AFo8Giu+Y6BfFl0G/RSohFAujh6CAcx6c+59NPP634FhJvl7zmmGOOin88
cJ7rIPJ66KGHKv6Qud5+1FFHpePo9nn8GBg2bFhVXcnvySefrPjWB3vvvXfS
YvAFz9uzWb2d2Dfo7VyLnznfe3DeeeelmAmcY+1B+OYDWj+aE/p85An4vHM9
MXHy4+R36KGHpnPEowE0LPzMaetjjz22ql7MReTPDt/hQgstlO4njlDw+uuv
p2eGshBjKHR/4FmO+oRe9vLLL6f24hkhj7wtRGTSoVm9PfpN+pZYi0RfBszf
MX5gMX/HGLDDDjuk65i7zaFfD993xjvSZgyLedc333yzKk9g/pFzO+64Y6WM
6u1ti3q7iIiIiIiINKIz6O2Absp+cRjacugJ4dv+61//OtUFiPuSv//GtfX2
Sy2DHkKcEuoXGm5o/JQXn+2I8U0sklp7lRKLhJi66LzEmMl9qKNMjfR2yoWP
OPezt17Uq9l9Vr/99tuk6+MTj3680047VbT41ujtxJNB78ZHk9g20T6AzsD3
QRm/+OKLShmB+Qvy5XuhLSPt1ujt3ENsGY799re/TXHd6z0v9fR2YvlzbM01
16zMc9Ty/4z6Ehsn1jWwRqDcLiIyadCs3h79Cet66DfoP+jz6AtzvZ0+Mvo7
1iDFmhtiXT3//PNpbRBrhmIOk76SNBjX6Ec5RiwayPsk9ujg3CabbFI1fkjb
od4uIiIiIiIijeioenvo0Zwn9gd+0ugQhxxySDoffsrEVEFrIL4t5FpqpNGS
3h7n2e+T2PDEw40442GxFx0Q02XOOeesxGxHEyZWTJQp6pjHMSHWCuv+Yy/Q
/Lpcbw8fceK44JdN+uwNGnXL26f8O3o6bYrGzL566OSR/8Ybb1yJdd5avT3K
wZwH10Q92R824saEph6aFPoRcWPmnnvuqjUGrdXb0fgjZjzlOPjgg4tevXpV
YqtHOWvp7ZzD55NjxPGBfG4kfzby34mVw1wJsWbYV7XWfIqITNw0o7fHNayF
IuYX/V3ex9N/sa8Elt9Pf4Vve+w5EUacGdbyxDgF9MH0RRyLOeW8r77nnnvS
OfZg/fHHH8c4L+Mf9XYRERERERFpREfV23N/Y2J3hx4de2CGTrvbbrtVYp1w
Ty1ttJHeHjrrueeeW4lLQ/xddFriiUfeaOIQmgn6+r777ps0Zc4zF7DrrrtW
9geN69DvI7Y6ho5/+umnJ228kd6Oxs4xyhT6TSPf9vfee68S3z7SOuyww1KZ
wvdxfOjtEHo7MW7Ql0Jvz8vIudDb+Q6D1ujtcY4YCpzje4n6UddXX321km4t
vZ2y0A4cY41BPldQi5h7IV9i7kde+bMiIpMGzfq3E9eLtU4R+wu9nHlg+nnG
J/akmHbaadN4wvxdHneLGO+sQWL8IW47/uk33HBDSmvttddO19C3MmZxjHlM
yPsi9srmHLHDotz2VW2LeruIiIiIiIg0oqPq7bnPNvuDsscovtT4iEPopqHR
Em8EavkvN9Lb4aqrrkrH8WkmJjsxYkK7X3fdddO52N8ULTaPkYuuTDwANBWu
+93vfpfilnB/XEfcXvIO7RvL9wTFd76st6Mxo+ETh4D47/kcQ143IE4Be5bG
3q74nUfscXzB43hH0tvRiKIskR/zA2W9Pde48CElZnzs3briiisWgwcPTufw
66zl3x7xlCP+e663l/3bo8533HFHit/AM3fAAQc01OhFZOKkJb09+g7GRHzb
cz/1RsaeGNxbb90MujnX/f73v0+fyXeNNdZIx+68886qvgpOPvnkdC726LC/
anvU20VERERERKQRHVVvD9AW8Gl/4IEHkqZAHBf07NA6Lr744nQcP3TiukO9
OOe53h76MCy33HIpBjnxX3LQvkPnyPX2vGxAXk888UTyYSRmOT6LtWDugDzQ
0VdeeeVixIgR6XjULY/fjkaP3ku5LrjggnQMHaVWvR599NF0P5p7rm3nadfT
2/H7ju9kQujtK6ywQrr+/PPPT58jFjzsv//+Nf3b8/IA5WAf2tCfAB/Tst5O
fdCgOMYetzGXUY7vn6fPs73KKquke9gbYOTIkWO0t4hM/DTr385xrmGvZdbc
vPHGG2lukGPEZGePC/pPYrlzLO/z6KOYK6SfIT/2S41+7PHHH69cR4wzxhb2
DgH64Chf7DdxxRVXpM/Gv2p71NtFRERERESkER1db88hhjv682OPPVY5xv5x
sWcn/tERvxb4nZjs7B0K3Idmgeab66iLLrpo0sDPOeecqvzYLzPitEc8GXQO
1vT379+/6lraJGK+cx/1vP/++yv6ecA+ouSFxh++2bX0dth9993TccqbxwQG
fCTjfmLWoInjO873EqAvH3jggSmNTTfddAy9nbZg7UDQlnp7pI3/P/UnHkzA
PTfffHNln0DiGkd50LDw9c9BTwp//muvvTYdq6W3AxpXxH6/9NJLq3QR2odn
mPpE+chruummS3EhYn9VtRSRSY9m9fZGoLuzRok47bnOTlqsQ2JeNWC8Ouqo
o1J/9Zvf/KZyHcQ6Jdbd0CcHjKH04/jXMxaWfd+lbVBvFxERERERkUZ0Br09
NAdikKM5XHfddelz+PHFenoMjRptgrQPOuigdOyiiy5K1+F7iC6PLo6ve+jG
EecFDRddHY029mFFMyZWTOjt6LEcJ7YN/oToyvizR16kTd2uvPLKim6C7v7S
Sy+lNPjM8Z122qniv43vPHkQrzfX29HYw48bH0Z0deLGE/+GOQb8sNk3FO09
NGX2k2U+gD30QpMmbWLIE3cm6NatW9K3t99++6TTQC29HU2fODvMO+C3CdFu
1In6kn5Zb+/Xr1/yz+f8J598UkmXOQ3KxDniG+PDGTGB5p133pRWxNpBp4/y
4w9PvbD4bpgDiBjuPEdLLLFEupb9daMOaFy0dTwf7G1LbPxHHnmkEu+eZyWg
3LEeAC0sjzkjIpMOrdHb89hlESuG+9HU55lnnmTRnwBzf/Qzu+yyS5qDJf2Y
X2W+78knn6ykG2y44YaVPVXZs5s4ZOjvebysfE2QtB3q7SIiIiIiItKIzqC3
xz3bbrtt0hbQmwFNI7QN9AY06HKs3FVXXbUSCwadGE03dPTwm0YTWWyxxca4
d5999klxSPgd/Traa4899iimmmqqMa5nb9PQetHWN9poo5rxe9dcc83i7bff
rmgppM1x/OzDFz/O4SsfMVhyo64nnHBCxQcbnb18DXo71/D7SiutVBVDh/g3
cR3zGPXiqxDLPq7D1xzCT5N5hjgX8eJDkyLmfJwbOnRopU7E0Ik5h9xYm3DJ
JZek3/HxBO5Di0dXL1/P3qlXX311pbx8t8Tz4dwtt9xSVU6e1dhXt2zE/Udj
j/pGuZmHYC4j/y5EZNJhXPzbQ/eO9TVYvu8yY1LsgZob62pirMn3lgDipaG1
l+8h1gyxypwbnHCot4uIiIiIiEgjOpPevsMOO1T09vL+oYDfMvHciZVCnHRi
e5NPTu/evYujjz66OOuss4rhw4dXtQN+8Nx72WWXpeuA92n023JcdPLiOtJC
08afPfy/Q/NA30ZXYY/PI444IsVKJ24K7Z1fR9rkgZ9j1CmPC4D/+Q033JDi
muOfjc6Mn3sQ1951113J15/9W/k9dG7SRrcP/Znr8aO/5pprks7N+bJeEGVD
/yeOORpQ+MfHtWj9zC9wf542oL/HfcR6yc/xnbAvLW1NbPrwL0eLJ61y/Bjm
Q6gzcyrUn3bnWJ4mZSIuD/dHvTkW55mTwZceP3n0fH6y7iDiOdDuXBv62M47
75w0rDwPEZl0GBe9Pe8H6QPpJ2NdUJwjLgx9JOt5iKHF+qX33nuvKu8yjL3s
58xYQCww5nXdY2LCo94uIiIiIiIijehMejs+ysSqRavNj5dj1pbffVtaY5/r
KPm9tXTWXMOtdU3cX86zXKZmtZvydeWYLy1pwS2dH5uYxONCvbarVU6ONSpf
sxpHS23P58gf7YRnbL/99qvsBaDeLjLpMT7it9ej0ZhU71yj/s4+asKi3i4i
IiIiIiKN6Ex6Oz59+B7vuOOOyS8Zn+p8zT06RWgi8bmR1pprFByPa/k9/J35
PWLx5vflecU9ZT2Ge/Iy1CsTn8mjkc6Sn8vLVy5TEPlEvJ1y2s3uqxf3R+ye
8jnSjTj6te4rlzPqE20VdcvjHpe/o3LbxudyulGWWvUqt335u+E+fP6PP/74
9IyxTiC/V0QmLcaH3h79Tq2+vdyvl8eUemXK10DV6l+l7VFvFxERERERkUZ0
Br099ATih+N7HHFrifedn8+vb6RBNDrfWu2i2Zi54yO2bjNptDaf9tRq2qqt
W5Nv/M4evBH/HWM/XXD/QZFJk7b0b88Zm35Njb19UW8XERERERGRRnQGvT2H
2O3rrbdeseSSS1b2TVV7kLElnkfi6nfp0iXtZUu8/YiJ7LMlMmkyofR26Xyo
t4uIiIiIiEgjOpPeHtrn119/XfTv37/48ssvW5W3SD14pgYOHJie60CtXWTS
Rb1d6qHeLiIiIiIiIo3oTHo7GN9D2ppaseFFZNJCvV3qod4uIiIiIiIijehs
enukoSYq45PYl1XdRERAvV3qod4uIiIiIiIijeiMeruIiEhbot4u9VBvFxER
ERERkUaot4uIiFSj3i71UG8XERERERGRRqi3i4iIVKPeLvVQbxcREREREZFG
qLeLiIhUo94u9VBvFxERERERkUa0t97+008/tUW1RERExpkBAwYkTdX9uaVM
zMWot4uIiIiIiEhOe+vt3377bfHzzz9rmqZpWocx5oL52b9//6J3797Fjz/+
2O5l0jqGxbPB/0/q7SIiIiIiIlKmvfT2YcOGJQ0D69mzp6ZpmqZ1OOvTp0/x
3HPPtXs5tI5nPBvPPvtsMXr06Lb490xEREREREQ6Ke2pt/O+OnDgwGLw4MGa
pmma1mFs0KBB6edrr72WdNUPPvig3cukdQwrPxvG9hcREREREZGc9own06NH
D/3CRESkw8KccK9evdq7GNIBIbY/z4bxZERERERERCSnveO3jxw5Mh3TNE3T
tI5izAXz85///GeK0T1q1Kh2L5PWMSyeDWL7G79dREREREREyrS33t7a+0VE
RNqaGKvef//9pKkaM0SCeDZiLka9XURERERERHLU20VERKpRb5d6qLeLiIiI
iIhII9TbRUREqlFvl3qot4uIiIiIiEgj1NtFRESqUW+Xeqi3i4iIiIiISCPU
20VERKpRb5d6qLeLiIiIiIhII9TbRUREqlFvl3qot4uIiIiIiEgj1NtFRESq
UW+Xeqi3i4iIiIiISCPU20VERKpRb5d6qLeLiIiIiIhIIyZFvf2XX35JJiIi
Ugv1dqmHeruIiIiIiIg0ojPq7erl0lHx2RSZOFBvl3qot4uIiIiIiEgjOpPe
Pj50zM8++6x45ZVXisGDB0/Qd2Ty8p180kLdXaTzMjZ6O/eU/+5rHQOOlceE
euNEzOO1ZDJhUG8XERERERGRRnQmvR1+/PHHlO+TTz6Z0oDW6Aw33HBDMc00
0xQ777xz8fPPP7f6/okV2vXcc88tDj744GLgwIHp2KSiIcT3/8MPPxRnnXVW
ceihhxYffvhhOtaaNmAOp3fv3ulvavTo0W1SVhGZMLRWb8/Pc2/5+nycqaWz
10tLOh7q7SIiIiIiItKIzqS3o4dus802xWSTTZbs2GOPTcdbo5dfc8016d5t
t922zfX2SBcte9CgQanOHU3bj/I8/fTTlXY96aST0rFJRUOINujevXulDc4+
++x0rDVtsP/++1fuP/DAA9P3nqcvIp2H1ujt8Tc+bNiw4qabbiqOOOKI4ve/
/31xwQUXFH369KnyP4+fP/30U/Hyyy8X1157beovTj/99OLRRx8thg4dWpX/
l19+WTz00EPFHXfcUdx5551VxrFbbrklzSP36tWrMqZJ26LeLiIiIiIiIo3o
DHp76BO333570jJnm222Yvfdd0/6aH4+v76exom2QRrbb799Q729tevza10f
Ps6vvvpqsfjiixdbb711U3pIS3mPbeyAWvfF5wEDBhSrr756sdxyyxU9evRI
x+ppCOMrdkFLdWwLasVeiN/fe++9YtVVVy1WWGGFNP8ArWkDNDGeq9lnnz09
Y0888URV+iLSeWhWb8/nLJdaaqnKnFtup556ahoPIoYMY+d+++1X89olllii
eOaZZyrpo8nXuq5s5M34nJdd2gb1dhEREREREWlEZ9Db4x5infzqV78qDjjg
gJrXlTXQWnFzW9LbyzF1m9G+612PvsI5dFfyXHvttVN9y+XK02iNzl4vLnCe
ZtzTTJ0+/vjjSiyZenk3m3+Z/Npy3Wtp343KGTGOG8VEbmYOptb9+KeyFqEW
zbQBvx9//PHFFFNMkXxbRaRz0ozeHtfgw06cMvp51rnce++9xWOPPVYcdNBB
xZRTTpmOP/LII5X7TjnllHRs+eWXL6688so0x3nfffelOc/Q3EeNGpWu/fTT
T4urrrqq6NatW3H++ecX5513XjJ+p49h/pl7jjrqqDSmUU7n+NoW9XYRERER
ERFpRGfS23fcccekK6A9oCmwHh/K2sKQIUPqptusfzv3k049yvfQHrRjTvi3
P/7448Xkk09ebLzxxo2qWYF6EQs84pGUGT58eNr3tVF5avH9999XYt6XaY0+
Q7yD7777runra4GWRD1qwfdSr5zjCu32wQcf1G3bZiG++8iRI6uO8czQjrfe
emt6xk444QR1L5FOSmv0dvorxhQ08HwNE/3cDjvskObfunbtWjlOH3rJJZcU
/fv3r0oPv/Y55pgjafT9+vVrsYzEn+HapZdeujImqP22PertIiIiIiIi0ojO
pLdvt912ScdEM0fHjPX5gA/gYYcdVsw555zF1FNPXcw000xJ337jjTeq0qin
t4eW8vrrrxebb755uh9/RWKDsH9mrmVEntx/4YUXJl/E6aefPl2/8MILJx0F
PZcyEZtk/vnnT3lON910Ka7MvPPOmzQY2hD22muvYuWVV07ay913353qMO20
0xbrr79+1V6exPddYIEF0jny69KlS3H99ddXveuHxn/cccel8y+++GKKZ0Na
s8wyS6rXYostVtx1113puqj3N998U6y11lrFsssuW7zwwguVtCJt/N733HPP
VDbqOeOMMxbrrLNO0hry63Ii7bfeeqtYaKGFijPOOKMYMWJE8vlEUyIN8rvu
uuvSdbQxcYznmmuuYoYZZkh1jXORPnmtueaaqV3ZmzSvM22Ejyft/cADD1Td
d88996R4C7TbVFNNlXxC8UNFL4lryB//UtLmOYg65NrKrrvumspOG9CWG2yw
QdLIKAPPA98X8Zv5vo888kh1GJFOSmv3Sy3r7DG2XX311ak/QBOvdx9zd8yz
fv3118Wiiy6a5mcZCyD6V/LH+IwxX0kfSdro7uA+qxMG9XYRERERERFpRGfR
29Ex0cjRFtgfDkJnJQbIMsssk86hj6+00kpJs+DzPPPMUzz33HOVtGrp7aFR
PPzww0kD5jz6MBo42i+f0Za/+OKLSjpos5tsskkldi7XL7nkkknL5TOx5tHb
55tvvmLmmWdOx/BxpDykueWWW1Y0/FVWWSXNERDPl59ozWjG6NLwySefpPxJ
g/Po5ej6kTf78qHV0EYRg4BY8ZzbaKON0j1o9IssskjS3Dk+66yzVvRq+Pzz
z9N8QB53PNqHffjQmDlH+1BP6stndOdYB1DWHKJd+/btm65Fx45yoxNFnHO0
Jb5T2jvaMs6RfsRhIH3qSX049//Zuw9gO+r6//+I9C5VegeldxCpgvQuRXpR
qSIChiAdRKQXpbfQQUADZCSZhJAgJYQu+DVSM4AaOgLmlwAz7n+en/+8dz5n
c87m3pvc3HPk+ZjZuffu7tn97J7DHvLaz74/kanHMdPnPo47cnrOCXXV41wt
vvji6XzHPRDW515DnGf6itIe2pxvm9oQnDNew/vJOYisi9yd18a9keuvvz5t
49BDDzX/kjpUT8ZLzX+Pawe1X7gecM+z2fq5O++8M11jucaR5ebtiNfF9x7j
hXP92WOPPdLfXmumHfN2SZIkSVKdTsjbox/75ptvnnIL6twi+vtFDk99dI4H
bPeII44o8wj6PuPyyy9vyNsj96A+CP3Bo19y1EthHFH6UzOf14LMl/7jzCOH
pv5u1BYhs6ePNtk8bSNTP+uss9K6a6+9dqplwrGTb4dNN920zIPpX03/cvqB
k9fTT/7II48ss+J77rmnbAO1e+P+ADV2EBn5D37wg3SuWMZ9ATJztvX444+n
7TCfOuOB9tDnm5xn8ODB5Xxquse9DM7DI488kuZzfk488cTUdzNUM6TIf6ht
HG3hXgN98sm4GZ80MvY4l9dcc03xySefFC+88EL5fnAs8TnguMm7aSc5OvK8
nZoN7Ovaa69N86ihs+OOO6btUPc/7pnwmT/++OMb7sUwj/PJfYcRI0aU86nt
Q77ONjbaaKM0fiHoi8o2Yl/Rjptvvjmty5i+UWNGUmfpbv/2auYez7zwLBPX
A2q2V3HN4Dth1KhR6brI/VnW5ZmqZqINXJd5rop1eX6pun/1LvN2SZIkSVKd
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
wHMM1LaJ95D98hl68MEHG2r5xP0Ani0wh5E6U3fydu4bzjfffOn6yfWH6wvP
yvCTie8lJp4Him1zT5DrHvca8++aY489tvz+CHENYv4222yT9sF1HN7Tm/bM
2yVJkiRJdTopb6cuSPTrI9+M2up51kvmyfP61PKu5iOxHvk0dV94xr/Vv5Pp
W8g6Y8eObbo83yeZNX3s6Ydeh1zkxRdfbKjJ0pVaANXj47yT9bdapzfRB5ws
Oq/N0lc479RAzvuB1iGzZ/2efG5z3Pugxkw1E+O+A+8PNYv4nJKbmcNInak7
46V2R/VazTM/fNfw/ZFfL6wT077M2yVJkiRJdTopb6fPNn0Ao+5KVbN8oruZ
RdRN7+p2urpuXTta7XNKthvbnNzyrraj1b67en6725bJLWvV9u4cV3ePqW79
fNlZZ52VPqf8lNSZupu3V69BraZ8/Vbb6cp+1HfM2yVJkiRJdTopb+f5e/oN
U+/juOOOS7XYu5sb59ucXAY+uXV6uu6UZiV9mbd051jbrS1Tq+3NtsPvjJFL
nZtll102fU5jHN12OFeSuqe3+rdXtdM1VV1j3i5JkiRJqtMJeXugbshqq61W
1uDu379/mm9OoXZwxBFHlJ9NatXz3wj8fEqdZ1rl7eo85u2SJEmSpDqdlLeD
/d5yyy1pHNAY19M8U+1g2LBhxemnn54+n++8806a52dT6kzm7WrFvF2SJEmS
VKeT8nazS0nStGDerlbM2yVJkiRJdTopb4eZuzqBn1Ops5m3qxXzdkmSJElS
nU7L2yVJ6m3m7WrFvF2SJEmSVMe8XZKkRubtasW8XZIkSZJUx7xdkqRG5u1q
xbxdkiRJklTHvF2SpEbm7WrFvF2SJEmSVKev8/bx48eneU5OTk5OTu0yffnl
l+lnZKpffPFFn7fJqT2m+Gz89a9/NW+XJEmSJE2iL/P2QYMGpX+3SpLUjv7+
978XQ4YM6etmqA2NGTMmfTbM2yVJkiRJub7K28eOHVsMHjw4PatPnuHk5OTk
5NQuE1kqP5988sli+PDh5d9OTvln46GHHrLWkCRJkiSpQV/m7UOHDi2GDRuW
+oc5OTk5OTm120SeOnLkyD5vh1P7TdyHGTFihM/pSZIkSZIa9HX99s8++yz9
W9XJycnJyaldps8//zz9jPrtEydO7PM2ObXHFJ8N67dLkiRJkprp67x9woQJ
vXFYkiRNMWqHkKn+97//7eumqM1QD8+8XZIkSZJU1dd5e3dfL0lSb4vvqshU
rdGtEJ+NePbBvF2SJEmSlDNvlySpkXm7WjFvlyRJkiTVMW+XJKmRebtaMW+X
JEmSJNUxb5ckqZF5u1oxb5ckSZIk1TFvlySpkXm7WjFvlyRJkiTVMW+XJKmR
ebtaMW+XJEmSJNUxb5ckqZF5u1oxb5ckSZIk1TFvlySpkXm7WjFvlyRJkiTV
+V/K2//73/+m7TPx+5Rsp9nrW82XJP1vMW9XK+btkiRJkqQ6nZi3R+6dZ9/+
e3fq4bySLfX0nHpfQlKnM29XK+btkiRJkqQ6nZa3f/nll2lCZLp5tjtu3Lji
nXfeKT7//PNubTfXKiv+KmbIPT1mXvfFF198Jc+ZpM7X07w97ld2955lV6+V
+fa9vvYN83ZJkiRJUp1OytvzbGHixIkNy8hEjjrqqGKjjTYq1ltvveLAAw8s
c/muiCxl6NChxU9+8pPioosuaph/7733pvnXXXddl7fZaeL88p48+uijxZtv
vtmj7dgPVFKn60ne3uw7py4Xz7Pz+LtOdVtT8hySes68XZIkSZJUp5Pydtx3
333FvvvuW2y77bbFHXfckeZ98sknxRprrFFMN910aZphhhmKpZZaqlu5b/SH
P+uss9I21lxzzfQ3fbRx+OGHp/nbbbdd+vt/rV9h5D4488wzi/nnnz/du/jw
ww/L5XXifeWzxLnaeeedi9NPP73497//3bsNl6Re0N28Pa6RfB89+eSTxSOP
PFKMHTt2kuWt/s6vla3GDwHtYPt8/9atr95j3i5JkiRJqtMJeXtkCS+88EIx
55xzlrn6sccem+azHf5eYIEFiuuvvz7lI3nO0RWRt1944YXFjDPOWHzve99L
f0fe3q9fvzR/7733bmjT/4oYaxZbbrlled+C97krIosifyCrj/eIZwLy5ZLU
Cbqat+ffBb/61a+Kb3/728V8881XzDPPPOm+L/do2Ua+bp7N33nnncX2229f
rLzyysVll13WdLuB7yfuLbP9BRdcsFh33XXTPehW66t3mLdLkiRJkup0Qt4e
rznllFNShrv++usXzz//fPHxxx+nDITaL9NPP33qj01+UVV9Zp+fPPef5xOR
t59//vlpH5tsskn6O/L24447Ls3fc889y22GqCk/uUw53y9T/M7x5XUCqsuq
bY1z0mqf8fpWtQ1iX7FenN/4+cwzzxTHHHNM8cc//rHpccS++RnbiHZwvvg8
XXLJJcXXv/71dA+Ez0y+fUlqd13J2+O6/N5776XvhrjPuPTSSxdrrbVW+Te5
e9TniuvyLbfc0nD/mOmnP/3pJNuOn7/+9a/L9cjm2Qe/zz333MXAgQPTOt7X
nDbM2yVJkiRJdTopb//hD39YfO1rXyvOPvvshuVku+QO++23X9PX1tXOjW33
NG+f2v/O7s1/t9dtu6s5TV1N/Oo2FltssWK22WYrRo0aNdn9S1I76UreHvP+
9Kc/FTPNNFPxrW99qxgxYkS5/M9//nOxxBJLpO+Ok08+ueE13M/87ne/W2y4
4YbFMsssk+4Zn3DCCeVr454o+L4km+ce5uWXX16uE3XO1l577fQd5hiq04Z5
uyRJkiSpTifl7TvttFPKFn73u9+lTIG+7OQZ1HNnPtnF/fffX9xzzz3Ff/7z
n4ZtjBw5Mo11esYZZxRXX311Ghc17z/Yk7w92jVs2LDi9ttvL3OW6r+9Yz+j
R48u7r777lSnl+0OHjw47e/SSy9NtX4nTJiQ1qPtbJNl5513XsO/5yOreeut
t9I+Of5oY+znnXfeSf0dqTMQ+Xgse/bZZ1PNHWq001+ScWCr/c/HjBmTauOz
7WbvwwcffJC2T7upn0A78lrC0cYVVlgh1eDhWPL5ktTuulu/nWsi+Su43sZ1
meeyuE/Mc1mtkMXz/dK/f/9yXjw7hNNOOy0t/853vtPQNr4ryOFnn3328nmk
7owTrp4xb5ckSZIk1emkvJ0xOMkcrrrqqvQ3+59lllnSPPKM/Ln8qJdL9nzk
kUeW68XE+uT077//fso1Jk6cmNbvat4e83//+9+nOucsI8dHNe+IdbfZZpu0
HmOyHnDAAQ3tIS+h3yLnN44zbyv3GPK6Lddee22Zv3z00UcN+x00aFD52k8/
/bTM2m+++eZikUUWadg203rrrZey9TjPkf1EtoPYBtn55ptvPsk2llxyyfL4
43gjbx8yZEj627xdUqfoTt6e9ymP13Ed5Heu3Vwjqeuei/pi3OtlLJK6vJ3v
I5afe+65Zf2xwHNfLDv++OPT3/Fdpt5j3i5JkiRJqtMpeTvZww477JByhQED
BqT548aNS+PLbbHFFmWeQX9rMonPPvss5R1HHHFEOfYnz+rT//3EE09M+Tbz
d9lll/I5fHQ1b8fjjz9ezDvvvGk+r8uPLxfb2GOPPVL+PMccc6TX/OhHP0rH
Evn1N77xjVSXN8YZpR96LJtrrrmKv//97+U2ed3MM8+cMnzq2COyGfJt1me8
PvrSc+5eeeWVlImzLfIZ+r6Ty++6665pO08//XSZGXE/gNoIbDs/JsarpUZM
1CPm/gD99Q899NA074ILLmg4Xt4P6h9wzqOGviR1gu72b8/HwkA8M3X00Uen
6+Nee+3VsH5ek4ysvJq3x7bIz9dcc820nHbkr+Un113uyR5yyCFlO6wp07vM
2yVJkiRJdTohb48cmcyB/JacGJF/nHPOOSmLIM/O0Reb9ZnIrvMMgrw6cu8H
HnignD+5vH333XdPf48dO7ZYZ5110jxyjro68bENXhvZOf3iYz7j6JGNs4x+
+NQliGN+6qmnioUWWigti+PGjTfemOZ9//vfnyRvp04NddM5vuj7fuedd6Zc
nXn0eQ/8/vbbb6ffIx+i5k5sG/GecW8i7mu8/vrrDceX15OJ9TmH1CSO5xHi
eCWp3XU3b6++lu8Drq0xbmo8/xMml7fH/tjG8ssvn5ZzXzR/LW644Ya0bLfd
ditfY97eu8zbJUmSJEl1OiFvx/PPP5+yYnLkV199tWFb1CHP8/YYZ+7nP/95
mr/99tsX48ePT8siU8aOO+6Y+gWSU4TJ5e377LNP2i/74m/6gEd+Pbm8/Qc/
+EF6zWGHHVa2P45h6623Tm355S9/Wb6GZfRP33bbbdMy7hmE7ubt1IeP8fao
t04N9lxew76at8f5X3TRRdP8m266qWx/swwqjumkk04q3xdrHEjqJFOSt8e1
mGequAZSW+vDDz9M8/K+6bGfurz9xRdfLK+98d2Xf9dQt51lW265Zfq+yNuu
3mHeLkmSJEmq0655e2TmLP/DH/6Q+lTTV/qggw5q2A6qeTvIq8mLmU+NGUSe
HNkvY4ayfMUVVyxfN7m8nZoA1Fvhd9rz2GOPTdKeqmreftRRRzXM5zhjzFdq
pyPGTuU+QdTnpXZO6Grezpiycex5zfiNN9445eZ5flOXtzMGLX3vqcsTNWqq
71X+N9g2ORGv4fiiHo59LyW1u57m7bEeNbt4lol7nDzPhGbXycnl7dQCo34X
y//6179Osh3GtmbZdtttV35veI3tXebtkiRJkqQ67Zq3x3rUWomsgefyyROq
WUKzvJ31yNGZf/HFF6d5kSdHzh3j2FE3vav12xlvlJw9cmuycF5bzZxz1byd
8VuRj6u6//77p2X0CUfcE+D80KeeZb/97W/L9buat+fjpZK9U9s+agEzrbTS
Suk85K/P8/Z47ZVXXpnmUdumO3Vh7rrrrpQ38VreJ5hNSGp3Pcnb43r57LPP
FksssUQ5FgfX8WrNsa7Wb+f+5iqrrJKWM651/lowjgbLuKcZrzNv713m7ZIk
SZKkOu2at0deQF5MBk1+TNYb2XCeJzTL28mrN9hgg4acN/L2+Pmb3/ymzJxj
e5PL25nmnnvu4he/+EV5H+Dee++dpE253sjbo2YvNQSiZkyMk1fN2/Pzjjfe
eKO4+eabi+985zvlMZHfh2Z5O+tzn2HWWWdNbaoea7Mcic9IjPf6rW99qxgx
YkTteZKkdtHdvD2ua1xfY9zrTTfdNNWRYVk1k51c3h6v4WeMFXLbbbc1tA28
hmWHH354+juvmabeYd4uSZIkSarTrnl7iJoy5AxkCgsuuGDx3nvvNeQXzeq3
k41ETk0NGDJv5pNJR26y5557lstDnrez/WrePuOMM5b5/amnnprmkbtHPfRm
WXJv5O1xPtZbb72Ut+dtffDBB1PtF+q152Oj5ucf48aNS+eM2vAbbrhhOb9Z
PRnGno0xXcnzwXlsljPEPJ4rYP2NNtqoeOutt8r7AZLU7rqTt8e6jG0a93lX
X331dN3Ll+fiWsh2q3l7fL/FNZ3nqLhO8z2BGN8D0fc9nuNyXOreZ94uSZIk
SarT7nl7btlll019rB944IH0d+Qf1bw95sc4crPPPnsxcODAhm2x7/nmmy8t
v+WWW8r51f7t0Vcw8pC8zzfP+a+xxhplzQDkGXrojbz9/vvvT/kLuXrU9AX5
Dtk563N8MX4e2fqjjz5ajhsbzj777FRfnfH8QjVv53ipzxP94dl+Ncd/7bXX
0n2Q/PzvvPPO6f264IILWp4bSWpHXc3bYz2+R7m3yDWSDJxrYlfFuKoxXnaI
ffJ9xXLGwxg7dmy5nHbxPUCds5dffrmhPeo95u2SJEmSpDqdkLdHTrvFFluk
zOHqq69umE9N8plnnrnYe++9y/lkxGTNW2+9dVmjnfFGR48enerdLrzwwmn+
tttu29BX8Nprry1mmmmm1GedHDuy9X79+qV97LfffunvyNAZE4/65PT95t/d
qOYysS796NnG0Ucf3dB+HHzwwWkZfeaR5+2Mc8qyK664olyf9436OmQtHCN9
2q+//vp0T4L8nFoyCyywQFlr5ogjjijrzQ8ZMqR47rnn0ji0UeM+2gTGl2V/
nJv8eG6//fayFjvZO+8f9YQvvPDCdM4Yry/vk7nuuuumvJ39ML+r4w1KUl/r
St6e187aaqut0vWRmltcT6+55pr03cQ9XCZ+5z4puDfJ2BbXXXddmrjWcs1l
G3wHcS1/+OGHy3awn7jfyVjXjz/+eLr+Ro34Zvdw1XvM2yVJkiRJdTohb4/X
7Ljjjg39vCNboE8g88kqQC4S2Qh9AcmBo055Pu2www7F66+/XtaZifMR/d7p
Fx/to/8688i2kY+PSo7OssUXXzztr5otR/4c9wuiJkCejdAWlh1zzDHpb/qT
g/1vv/32aRn15vPzQX5TPaall1461WInb+dvxkilnWQ41Ddodh7ok8n7Gm2m
Nj3zyctDHCvnfrHFFptkG5wz7hXk9Xro40n9He4FxPsiSZ2gK3l7zCNbb3Zt
rU5k5eBZo8mty71TxL1X+q8zZnh1vd133z3dW64bs1tTl3m7JEmSJKlOJ+Xt
u+yyS9O8/emnn07jqEb/8nwcOpBd33HHHcXpp5+ecnPqpfB35BixfuQVt956
a3HIIYek9f/zn/+kZY899ljax9ChQ8t2RY1davay7Kqrrkr5fb7v/Hf6lbMe
fcKr67BdltH/HpHj8JPa6SzjfOevI8enz/mxxx5bHHXUUanf/pgxY9IyauTQ
Hz4fO49x/BhnlTyd46NWMDn8+++/37DPp556Ku1v0KBBDe9DLOd8n3feeanP
PPulbjD5Ub4e54a+8+TttD9/vSS1u+70b3/11VfT9ZaJa+eVV16Zvg/yiXnD
hw9P63PNZQwO5vO8VryOn/zN/Kibln9PvPnmm2kZ92W5fnOd/+yzzxraot5n
3i5JkiRJqtNJeTv9yKmfcumll6a/u5LfVv8dXH3evtW/kzstG86zlmZtrx53
dUy9ruYF+bar/Smr+6UfPPXlI4vvtHMq6aurO+OlTgt1+zdrn7bM2yVJkiRJ
dTopb48x5RgXlXE/yYzJGcgh+L1V7VrWyWu0x/qtMopWdQN4TbNlUbO8bpug
fa22Ubf9WFb9N33UwYl95q+P9jRrZ96fn9dXtzu588nyfBm/x9+xD54HoB7P
vPPOm/rVxzJJ6gTdydvz74C6KbYR30l1U7Prbz4+RmzDrH3aM2+XJEmSJNXp
hLw98gTqsOR1a6ljki/viq6u20m1cLvb1lh/So8v30a8r9TT2WSTTcr3aMst
t2xYLkmdoN36t+c66fvpf5F5uyRJkiSpTifk7bnzzz+/WGeddYollliiuOSS
S9I8c4e+F1nUa6+9lsaFXW655Yptttkm1XqH75GkTtLOebv6lnm7JEmSJKlO
J+Xtkdky1txzzz1XjvOp9sH4rGTuZFSS1KnM29WKebskSZIkqU4n5e1oVVNc
7Yf7I+YQkjqRebtaMW+XJEmSJNXptLw9tkH2YY2S9uT7I6nTmberFfN2SZIk
SVKdTszbJUnqTebtasW8XZIkSZJUx7xdkqRG5u1qxbxdkiRJklTHvF2SpEbm
7WrFvF2SJEmSVMe8XZKkRubtasW8XZIkSZJUp6/z9gkTJvTGYUmSNMXGjBlj
pqqm4l6Mnw1JkiRJUq6v8/bPPvus+PLLL52cnJycnNpm+vzzz9PP6MM8ceLE
Pm+TU3tM8dn461//at4uSZIkSZpEX+XtY8eOLYYOHVoMGzasGDJkiJOTk5OT
U9tNDz30UDFy5Mg+b4dT+03Dhw8vRowYkbJ3SZIkSZJCX+btgwcPTn0H//73
vzs5OTk5ObXNRB0Zfj755JMpV42/nZziszBq1Kh0P8ba/pIkSZKkXF/Wkxk0
aJD9wiRJbYtclb7MUhW5O58N68lIkiRJknJ9Xb99/PjxaZ6Tk5OTk1O7TNwL
5mfUb//iiy/6vE1O7THFZ8P67ZIkSZKkZvo6b+/u6yVJ6m3xXfW3v/0tZarW
DFGIz0bcizFvlyRJkiTlzNslSWpk3q5WzNslSZIkSXXI299+++2UoXd1Ip9/
5513zNslSf+TzNvVinm7JEmSJKkOefu4ceNSf/WuTmTtH374YfHiiy+at0uS
/ueYt6sV83ZJkiRJUh0y8+effz71Ve/ORE7/9NNPFxMnTuzW/szbJUntzrxd
rZi3S5IkSZLq/PWvfy0+/fTT4j//+U+Xp88++yz95N+a48eP79b+zNslSe3O
vF2tmLdLkiRJkuqQt/fUyy+/nHL37jBvlyS1O/N2tWLeLkmSJEmqQ97e3X8r
/ve//00///73v5u3S5L+55i3qxXzdkmSJElSHfN2SZIamberFfN2SZIkSVKd
Tszb2X+0Qb0nznNPz7Xvk6ROZd6uVszbJUmSJEl1OilvN7vtXL53kjpJT/P2
/D5ld657XX1NT7evqce8XZIkSZJUp5Pydnz55ZdpnNbhw4cXb7/9dkN7NHVE
jnPrrbcWBx98cPHII4+k+V3Jm+K9eO+994pHH320eOGFF4qJEyf2anslaWrr
Sd7e0z7wXfkOoz3muu3BvF2SJEmSVKeT8nbW3W233YrpppsuTccdd1xDezTl
4lz+61//KmaeeeZ0njfeeOM0jyxpcuc68qbrrruufJ+22GKL8t6IuYSkTjAl
9WS43t13333F3XffXbz//vtpXqtrZ+znn//8Z3HXXXel+5xvvPFGy21zL3PY
sGHFgAED0ms07Zm3S5IkSZLqdELeHvsjhyC/nWuuuYqddtqpuPfeexuWV1/T
k2f5u2tqZf112+mtugFsk/cj33b8/tFHHxVbb711seSSSxZnn312msezBZM7
1/H+Pv7448Uee+xRLLLIIuk969+/f5pvDWRJnaA7eXtc/0aMGFGceuqpxWqr
rVbeb+R7Dlw/m72O7fI9uM8++5Svuf766xu2C54V+s1vflN897vfLde7+uqr
p9rxquvM2yVJkiRJdTohb4/XHHroocX0009fHHjggZMsj77XkV+EyfXJrj6j
32r92G6sm78ucuuuyreTv7a6nWrbmu0jP/bJtbk6v7qd2Eb8fPfdd4unnnqq
+OKLLxrmV/edH1d1Hfpr8p7tvPPOxYQJE1oehyS1k67m7VzzIktfffXVyyz8
61//ejHbbLOl16JV3o477rgjXSdnmGGGNN1yyy3l8ljngAMOKLcd6954441T
96DVJebtkiRJkqQ6nZS3Ry2Zyy67LGUfkd82M27cuOKzzz7rcrtY/9///neX
1w//+Mc/pkrfc+q3tELNgGZZzZTi/L3++uvFp59+Osmy7hzTO++8k/rD52gv
79Gbb76Z3rPNNtssrQezCUntrif921988cVU62XgwIHF7LPPXsw444wt8/Z4
DbVnFl544WL++ecv5ptvvnS9zPP28NprrxUjR45M35sbbLBBWu+mm26aeges
LjNvlyRJkiTV6aS8nRoyZAxXXnllQ59C5m+++ebpeXuer19hhRWKeeaZp1ho
oYVSzktGgchLov3kzaecckqx7LLLpvXnnXfeYo011iizjvw1jNFKHfNdd901
5fJHHnlkscQSSxRzzz13sfjiixf77bdfmZnXZdUc7yabbFLsvvvuaf0rrrii
WH755YtvfOMb6SftiXNy4YUXFiuttFJaxr5+8YtflH3N49iPOeaY1H62E+cq
9s+5YNkJJ5zQcCzPP/98qhXD+ZlzzjlTxrPjjjumcVFZJ9Y76KCD0rm84YYb
yn3Gtj/55JNUNyHOHW1ca621ittuuy21MdZ99dVX03u24YYblufHbEJSu5uS
+u2MEc01sS5vj+1HHZmjjjqqvKd8++23p2Wtvkt22WWXtN7NN9/c7ePSlDNv
lyRJkiTV6ZS8nX1SkySvbRv5xTLLLJPmkx/zkwx50UUXLcf7nGOOOVKfw/w1
9Ckk92b51772tVRnfMEFFyyf1//pT3+a1o32Pvvss2m7LCNf5+cCCyxQfPOb
3yxfQ95Mf25Us5k8p6Zd9GVcf/31y3r0/B3bOffcc1PtHH6P+wCx7Kyzzkrb
idydsUiZf+KJJzacK5x88slpGectjB07tjxPnBfy9KixzjnjPY3XR22E2Ofn
n39evnfcl4g28Xr6Z8bff/zjH8v90SeTeeutt55jpkrqGD3J21mH7w2el+La
3Spvj23HmCR8p4wZMyaNedEqb497oTxLtN1225m39yHzdkmSJElSnU7I26Mu
+Pe+972Ujd95553lfDA2HfPJw48++ujULgwfPjz1DyeX+P73v5/qprAd9nn4
4YeXWTE1xmkXy0866aRilllmacj1QZ/wyJT5ef755xcff/xxMX78+OKaa65J
/dxZRsbNtlrVDqBvfGyHGry0lz7g9P3ea6+9ysya6dhjjy3eeOONlFNvv/32
aR793CPTAbkLx05f8zi/sa8zzjgjLdtzzz3Ldpx++ulpO6uuump6HgCcjzPP
PLO45JJL0t+xbe4H8HrG6Iv55PzRB5NzN2DAgNQe5vN67lNwTqINtJ9trLzy
yukZgWpNeklqRz3J2+O6995777XM22O7b731VrqGcn2M7xqeO2qVt+f3bOP7
wLy9b5i3S5IkSZLqtHveHuPFMS255JKpb/if//zntCzyD7Jjsod+/fqVr4ts
4/777y9mmmmmlGnQRx2MARp91SPXyHNq8mmW0Yeb7Bjk7fRnZ4y6QYMGNZwH
9O/fP+2DjLpZXZk8K4k+8dEnPTz55JNpfD1yePq459gn9wE4FrYf53HbbbdN
26IOTfU4Ilunz2Qg32ccP15XPVf5+QZ90nn9OeecUy5/+OGH0zzaGbWDm9WW
j/bRVvpuUst49OjRLdeXpHbSG3l7jFVNvRlqinEt5T5rvDZydPP29mbeLkmS
JEmq0855e+yHdU477bSUZ9O/m3FQ81x4lVVWSdnDVVddVWYZ8ew9fcfpW81r
yd5xzz33pPW//e1vp7FIWS/6pPM765GTkJdEH3CyeuqczzrrrKlGStSaif2Q
JUddALJ55PlMnpVQt4b2DBkyJG2D42P5Sy+9lOqhs51XXnmlPBaWPffcc6lf
PK/7y1/+Um63u3k7tV4iL6duMM8AhMjB6/J2asvQhrXXXju99/Rrj33Gucgz
IpYfdthhaTvUuOf9kKR21xt5e2zjxhtvTPeOqYUW40hjhx12SNfKeIar2bbN
2/ueebskSZIkqU675u2x3rvvvpvql9Anm5yajDpvAyJvv/TSS9PfkQGD3CNq
nDPOKsiPyYzpX0h2EduL15B1M9YdfckHDhyY5j3zzDMpb6ePOees+hrOBfvg
NdX+93l7I2+nD/u9996b5pOpg3or3ANgO+wPkYHz7/rFFlssLSN7D93J22kP
Ndijrnvk7tTpoS3Vc98sb997773TPN4TRE33uveQ+xNRm4b6CVHjvm5cWUnq
S1M7b+damd9X5TuAZ4S4/n/wwQepntlWW22Vrq/XXntteraq+uwRzNv7nnm7
JEmSJKlOu+ft1COJ3HfddddN/dGrIm//7W9/m/7O83bW32ijjVLWG/VPyKEj
byfjiGPKa44zRilZSYz9meft5C/xmvzf3TFW66hRo9K8yeXtkeU3y9ujX33k
LeyzO3k7EzXd87w96hmAsfkOPvjgsu487fnxj3+czl3ss1neHrXbowZCXd6e
P5+w7777lhl/9HE3b5fUrqZ23h5jXMd90FYT30352NnxWvP29mHeLkmSJEmq
0655e+yD7HfkyJHFlltumfIFfkb9l5D3b48xPaO2CX0JqfHC8kcffTStf/XV
V6e/qYnCs/yxvRiH9KGHHkrP+pO5R7Ye9WTI29lm1E2J1/FvbnISxmeN8Vrz
NvZW3s54qVELPj8OkJNX8/ZqvZdx48YVhx56aGoPzxDccsst5bJmeftRRx2V
jnPjjTdO5zn6bCLOX/wdNWYYt5XtrLPOOml81TheSWpX3c3b43rHT57Liryd
Z7Ly55i4xm6wwQbpGso1MSbuJ3P/k+srdWa4/kaeHvXL2A5jbkfezj3k+B7y
/uW0Y94uSZIkSarTrnl7dV+RX5CDR94c24q8nRwdbDP6El5++eVp2VxzzVW8
/vrraR55OnXYGfs06tOQG8drjjjiiJR5LLfccmVGwj7J29n/2LFj07yorY4Y
+478mz7zed/3/DimRt5OffjYHlk6bY3+5rEtzsEuu+wyST2ZHMcc87773e+m
7eRjzjbL22+99dY0j3sRnMfYV3UM1Gjf+++/n8ad5VwPHjy44X2TpHbVk/7t
gese31fUFxs2bFiaV73X2cxOO+2Urq95fa8qvl+izjvXY0175u2SJEmSpDrt
nrcjcnD6/5EJ533+sOqqq6bsgRrhkemCWjCMr8qyY445ppgwYULaP3lF1GHh
tU888UT5muuvvz7VbmfZZZddVs4n415ooYXS/vfff//Uxx1kKGeffXbqx8h0
ww03NLStes6mVt4ejjvuuDRvgQUWKJ5++uk0j/cl6qxXx0ul7swBBxyQ6skE
7h/EOK30RQ/VvJ1zx1i1Sy65ZHnuHnnkkXL9ESNGpJo0cW7w1ltvpWcCll56
6bTPeO5AktpZd/N2ruPk7FwjqZlF3s51/ve//3367qFGe2w3roPxTFDU8Yrn
lcjRo087WP7RRx+lvu1cU6POO99RfKd8/PHHXlenIfN2SZIkSVKdTsjbeQ1T
ZOT0WUdk0dG/nYl+6+TyTHPMMUeax/Lokx6vIbPmmf3Iqr/zne+kZ/qjdu7O
O+/ckHew/je/+c1yP/zOa1ZfffVy3p577pmOp1k/xjxvp2846//hD39I8yJv
53wuv/zyDZl6Pl5q7D+vJ/Pkk08Ws88+e5rP/QAy8kUXXTT9veOOO6af9HMH
tezpo8881mGc1G222abM2rk3wXmKtq611lppPvcTELXaeSaAcVajnzt947nX
EdvOM3tq4UctmRgn1WxCUrvrat4e94OvueaadP3m+yauqUwLL7xwsfLKK6d7
qQ8++GDDtpE/C7X11ls39FuPfQ4fPrxYbbXVihVXXDHtg3uYrMc1l20z/6KL
Lmpoj3qPebskSZIkqU6n5O0gA8/7nUcWTY5BTk5t8cjkI3unzsrbb7/dsJ3I
MF555ZXU95saMfEa8mPGqKM/Yr4u+TfLyLbPP//8so83E/3hTzrppNpjiXNG
30fq1LCt6IsfOTZ9IrlPQO0b3pf8GF977bVUG55lL774YkPb6JPP9uJeAVk6
feepOc/69GeP/cQ4qZybfHy+TTfdtOwfH9vdYost0uvjfOfj0D7++ONpOX36
YztkPxdeeGHqgxnboN1sn3sTMdat2YSkdtfVvD2u33wvUDeLLJyfjJ3N9ZPv
F/q5U1vm9ttvb9g2ou47+L7iNTFOd8znu5L7x4yxwTWX7yHWY19MzD/hhBMa
2qPeY94uSZIkSarTSXn7brvtlnLd3/3udylTiH7h0b/9yiuvLLdNHkzuO7lj
wPjx44unnnoqZdH5/LzfYeTtZBtRB54chkw770/YV2PWxTGQ2Xd1/WeeeSbV
0mHM1NCV9lfHW33sscfSvYtc1Eggb+e92WSTTcr9mE1IandTUr9d/9vM2yVJ
kiRJdTopbz/kkENSP8FTTz21YXnk7b/97W8b1q+2t9Vx1C3L83b6b5O382/s
TjW17gd0dTvUu6F/+/bbb5/q5sNsQlK7M29XK+btkiRJkqQ6nZS3U7edXJ16
LGTu9M8GeTuZLv3eQd/37ubKrN/sNXnePv/886c6LOQvsayv+rM30+oYJrf+
lBxDdRtxvujXzv2PzTbbLL1nhx9+eEPdBElqZ+btasW8XZIkSZJUpxPy9vD+
+++nWu1RL7x///5p/gorrJD+vuSSS9LfU3O8uGgvY5RSL5f+9dG/vZ2y9nYR
mdSAAQPK92meeeYpRowYkeZHPXpJamfm7WrFvF2SJEmSVKeT8nb84x//KK69
9tqiX79+xfDhw9O8fffdt9hwww2LQYMGpb+nZi4S7aUuOmOxbrnllsU777yT
5pm3TyrOyQsvvJCeQWD8VH6f0n70kjQtmberFfN2SZIkSVKdTsrbW+W1bHNa
/Ht3Wu1HktS3zNvVinm7JEmSJKlOJ+Xt+b7VOXzPJHUa83a1Yt4uSZIkSarT
aXm7JEm9zbxdrZi3S5IkSZLqmLdLktTIvF2tmLdLkiRJkuqYt0uS1Mi8Xa2Y
t0uSJEmS6pi3S5LUyLxdrZi3S5IkSZLq9HXePn78+DTPycnJycmpXaYvv/wy
/YxM9YsvvujzNjm1xxSfDf7/ybxdkiRJklTVl3n7oEGD0r9bJUlqR3zPDRky
pK+boTY0ZsyY9Nkwb5ckSZIk5foqbx87dmwxePDgtI1XX33VycnJycmpbaZX
Xnkl/Rw9enTx0EMPlX87OVU/G9YakiRJkiTl+jJvHzp0aJoefPBBJycnJyen
tpm4H8xP8tSRI0eWfzs55Z+NESNG+JyeJEmSJKlBX9dv/+STT4rPP//cycnJ
ycmpbaYJEyakn3xHcl+Ysb37uk1O7THFZ+Oll16yfrskSZIkaRJ9nbdPnDix
W6+XJGlaoUY3mWp870nhb3/7m3m7JEmSJGkSfZ2302dQkqR2Et9Vkalao1sh
Phv/93//Z94uSZIkSZqEebskSY3M29WKebskSZIkqY55uyRJjczb1Yp5uyRJ
kiSpjnm7JEmNzNvVinm7JEmSJKmOebskSY3M29WKebskSZIkqY55uyRJjczb
1Yp5uyRJkiSpjnm7JEmNzNvVinm7JEmSJKmOebskSY3M29WKebskSZIkqY55
uyRJjczb1Yp5uyRJkiSpTqfm7dEGqVPxGfZzLLUn83a1Yt4uSZIkSarTaXn7
l19+maa8HVIn4/NsXiO1lynN27t6P439sG1+dmd9Jr8D+4Z5uyRJkiSpTifl
7Xk7I3NvV/l9AX118d/KF1980TKrMy+T2lNP83b+m457aHWZO8u5NuTYR6vv
jdhuld8z0555uyRJkiSpTifl7Rg8eHDxk5/8pNhtt92Ke+65p6E9UqeYOHFi
cf755xd77rlncfzxxxdvvPFGXzdJUqYneXv1u6guOw8ff/xx8dRTTxUvv/xy
y+3kPvnkk+KZZ54pnn/++WL8+PENbdW0Yd4uSZIkSarTCXl77I+2fuMb3yim
m266NB1zzDENy/tatIOf5557bnHmmWeW56dd2qhp66OPPip+9rOfFQMGDEh/
x+f/s88+KzbccMPys8zvZPCS2kNP+7ePHTu2OO+889J/0xtvvHHx9NNPp/nx
+tju6NGji1133bVYddVViwUXXLBYaqmlio022ii9thmuD6eeemqx+uqrFwss
sEB6zZprrllccMEFU3qo6ibzdkmSJElSnU7I2+M1p59+esom11lnnWLUqFHF
hx9+OMl69CeMZ/hb1cVmWV4vN2rhttp3vs3q6/IcPebRX3H++ecvZp999mLc
uHHp9dQNqGbuzdrbLJdv1gZ+Rh3f6v6bLcvXyc9LXgc4jq2V6jp15y32E8tj
H9X6Cnnt4sltM6+1wPr5+5Dvq1VbWp3fqrw+cl2bmp3L/D1ievbZZ9Nndost
tig/B/EaPhu33XZbsfTSS6d1Hn300XK7kvpWV/P2+O8d++23XzHbbLOV99GY
+J5DXmPm8ssvL2addda0/Gtf+1rK0BdddNHyNUcffXS57WgHz3XF+jvssEOx
3Xbblev369cvreOYrtOGebskSZIkqU4n5e177713yhrOOuusSdapq2GbH1/d
sU5uvLpWy/J+7eA+wHzzzZf64rdqV10u0pP3o9VrJne8XW3blJy3Vvc8uvqe
NXttT5Z1RU/b1GrZE088UeZjrZDRsc5NN92U/jZvl/peT/L2I444olh22WXT
PeEZZ5yxmGWWWdJrkY/pcfXVV6fviF/84hfFp59+Wm6L2lLTTz99MccccxTv
vPNOOZ++8DPNNFPK8ocNG1bOf/jhh4sZZpihWGyxxYrXX3+9od3qPebtkiRJ
kqQ6nZS377TTTqkvH30DYxzKfDl5w/33319cdtllaR1qvb///vtlm6PdvG74
8OHFjTfemGpo//73vy+ee+65SY4PY8aMKQYOHFhmIk8++WTKRXnmn9f9+9//
LtedMGFC8Ze//CVlKfRtn3POOYt777035SMPPfRQqiGSt5c85U9/+lNx6aWX
pvYOGTKk3F6sQ1tefPHF1AayGvYxYsSI4ne/+11x/fXXp37+gVq+I0eOTMd/
xRVXFI8//vgkx0Ofarb1yiuvlMdDH+s4DzG/2gcd7J/tUxuF9e+8886yVkL1
ngPHwfknJwL1hn/7298WF198cfrchLfeeitlRrfeems6p/zkHFbfi88//zwd
D+cIb775ZnHdddeluj333Xdf+iw99thjTdvCeScTGTRoUHl+6zJt3pdHHnmk
uOuuu9L2Od44jvx8UCuGfUd7OZeXXHJJcdFFF6V51Fc++eSTy2cy+BzQfo6D
/Uf9mEMPPTStw/s2ubZJmjZ6Wk8G/LfN/VYy9zxvz8W1Nt/X22+/XSy++OLp
esB3R7jqqqvSvO985zuTbIt7eWTuXI9RHYNVU595uyRJkiSpTifl7TvvvHPK
HK655pr0d14fhEx0tdVWa3iOn2nTTTdNfYxjPTJ5+slX16MWLtkqeXZe94T+
ipGFUju3+rptttmmzOKp27v88sun+fRRrK5LbZFA5rrJJptMss62227bMG4e
uc3uu++elpHzH3TQQQ3rk+uTn5PTxPmJib6V3FOIc4Xbb789LVt//fWLs88+
e5L9f+tb3yoz7bzf5muvvVbsv//+k6xPpkSmHPVdYn2Oj+WrrLJKytrnnnvu
8jV33HFHyqp/85vfpBy6us1FFlkk5dh5v/1//etfxYorrpiWv/TSS6lucawf
53yuueZKWXm8d/Fa8vxoa2T91c8863O/gvsYzd4Xts39jby2DPdsWHbggQem
+wRRH4LpkEMOSTWWo/5Dvi36qOZ9XSNvJ6ePtkjqWz3J26O2Ffc155lnnpZ5
e35PkNdwP5Hf+V5ceOGF0zWDe8eBe6LM43oa9cWifTvuuGNadu2116a/zdt7
n3m7JEmSJKlOJ+Xt5AqROyPyC/oBRr7N+HTkDvR9Zrw65tMnG2QakaWShVKX
5uabby4OPvjgMgslAw7kIIx1yXP83/zmN9NyMu0rr7yyOOCAA9J85kXOQR0Z
+rbvtddeZS2Bn/70p8Upp5xS/PrXvy7ee++9tN6rr75abo9juueee1IGvfnm
m6d55OtxXsmA99lnn7QvasKznHyWXDiyaur+ksPw+1FHHZX6ka+88srp7yWX
XLL45z//WZ7Du+++u2w30/e+973Ufo57pZVWKs/NG2+8UZ57svF4toA++2ec
cUbK7fP8vX///uU5A3k7GTsTtQ7I0DnfJ554Yjom3v+oc8y5pP/mDTfcUL4/
nB8yq8AxrLfeeqkfZ7STWgwnnXRSqnu+wgorpHPOcwLxXkfmTnu//vWvF8ce
e2zTGu7xN3X3l1hiibTt3XbbLZ1jPh9x7LSXZw0CeTvnkvoRvNe8ln3Rh5+M
n/ycuu3xPnDstJfPT/58xmGHHZbWOeeccyapby+pb/Qkb4//drnW1+Xt+fYD
y7lPx7WAPu6ffPJJuT2e06L+DNex0047rXwN10iuS9wv5lksWMO995m3S5Ik
SZLqdELeHjnFWmutlfKGBx54oGwHucZSSy2VMoof/OAHZf0Y0CeavtDhggsu
KPtPU8cl0Kc9xmKlD3RkquSh5OXMJ1clwycrjtdsv/32Kf8lX8+PjToqkY/n
7YljoT802/zhD3+YMt7Ae7H22munbUYtGPbHeqxPdk2/7zgf1KjhWKL/Nf3S
ow3UnJl55plT//e8nyR5O+vTF5vzkdfDYZ9xLrk/EO8z9xDoP8k+8vPGe/fL
X/4y3dNge5zreA21Xeadd94ya37hhRfK9yzOFTkFNVbyzwB1WOhjz+s41kDe
zrmJvuJ//OMfG7LpY445Js1nDMH8M0Nmteqqq6Zl1MvJl1WxLdrN+cprKv/j
H/9IdRyillGg7XG/Ybnllmt4LiGQucdzEFXcEwD3Kljn8MMPL8+NpL7V23l7
rMdzVdxz4/rGtZRrOt8hsb3YJvWt+G5gHe6Tcg3ceuut07WDZ5Vg1j5tmLdL
kiRJkup0Qt4e7STvJdcl14w28Jw9ecNCCy2U6paAHDPPHeL3NdZYI+W19GcH
eXr0MSZTjZyXGtzxushxTzjhhHJ7ZO2gvzbLvvvd7zbs58EHHyzz9g8++KDh
uOkrHu3N68uEX/3qV6mNZPvg/Oy7777pNeTj+XnkOOnDz/pkNshrwEQf+qi/
A/rSM49sJ947zkG077jjjkt5DvcSmM+x7rrrruk1Rx55ZLmdyIrJs6POS79+
/crl5Nb0hef+SBxL5E2t+m9zb4H7D7vssks6JvqJh8jbq+2IPIrPB+3mmKmj
HvvgHPOa1VdfPdX7qRtbthnOP/XfeW6ANvE5iOOIvJ0MjM9yfmzx88ILL2zI
2/P9x3Z4tiHq4nT3vydJvaM38/ZYjzEeqrWr8ut1jtpiW2655STrk7lXrzvq
XebtkiRJkqQ67Zy3sx/yXtajNjt5J7VVEDk5+WeeeTO/WhsX5NzUXWEbMa4c
yyKvJQuJuh5kq7ST+ZG3U7s9thm1ShjnlGX0n47tIc/byV3yjJUsOPp8kydT
95va89RSoT939GWPfJ/jj7yd+iaxrdhX1CthW3G8cfxRYybqgiPy9nXXXTf1
bY/txTFRozzqrrPvd999t9xO9DeP3Cjeg2gz4/YF+srTv57aNIyJWs25o41s
n3751NyhpjzZdeRI1F8Jed5Ozp1/lmJ7kUVFX0/mRc196vBH21tlUrE9Mn/q
wbAd6tvkddm5VxP3W3i+IGo/8CxF3he1Wd4e5yBfh4m+9FFHh/Wi/pEZjtR3
pkX/dq7BXGe4PnH9ihpbPFfFfb64RjAuRdS1+tGPfpTqVsX9YfZBPTCu4V4z
pg3zdkmSJElSnXbN22O9N998s1h66aVTrsAYmfSBjnwc1HJhGVkEr6mOFRfb
oUYM9U3y/CPPpkFt7aifHplq5O2MCRqibzd10ieXt0c9mWhH9GVuNdE+Mpfo
K06fxsjbGbMV+X2EyJjJdWM/cUz06Y4sPkTeTu33qCWTnzfqlUdNeN4bzj+5
EfOGDh2a1olzHz9//vOfp+XUVw953s57nZ+DaB81ExjPNo6d11MTPmrP836E
PG+P96+am//hD38oa9LHsfHZobY6Nf7zNlfFtkaNGpX69kebeCaCezzcC4hx
UKt5O3XbGa82305d//a83fnnk2ceov2ofj4lTTvTIm+v4vpMLXauA4zzEPbb
b79yrIvAPqhFxT64T8l3CxwvtfeZt0uSJEmS6rRr3h77oF4J2TPZLXVtY2zS
yLwZO5Qcgn7eaJW3sz/yTGqOUPcWeZ7JepGt0789lk3tvJ1l9LFnjE3q8ZJL
P/LII6n+CtOf//znlGu//vrraf28nsy0yNuvuOKKtJx65cyjzk6MITpo0KC0
TrV/+0EHHZSWM/ZraJW3R9vo50+tfF734x//OPUnj9o7Rx99dJqfjwtYl7fH
T/qALrPMMul+BWOosl/W//a3v52Olf03+6zH61977bXUVz3GS6XffYzZyjlk
Ps9ATM28PeYx9ivtZkzEvJ6RpL7R2/Vk8meruJbG9wrXP76nuLaDsat5Hora
XLQlnkcK9I3nGrP33nunv71P1/vM2yVJkiRJddo1b8/3xXP11FshU6A+N7ls
bOecc85J88lZI/Mkv6geExkEGTdZN9kmyCwiA2GbMSYmOXpsJ/pu9yRvJzsl
A87rv1B7ntfQ1/6pp56a7PnqrbydejJ5/fbIfSI7pz8lPvzww1Srh/NGDYPY
f5w39sc4ttUa95Pr3844q5ER5dkRqJeQ1/DB5Pq3xzk588wzy3PFmK+0m3sy
8X7WoV5P9C/nuHPU1WcZ2+pJ3r7VVluV9WTiPMR7yL0G1mF8AvrXs33zMqlv
9TRvj3G887w9rpl1taxiHA3G4uC6Fd8rTzzxRLpXTB/22D7rsT3aNHz48LT+
xhtvnPabt129w7xdkiRJklSn3fP2HJk6/f5ibEqQhVAvhL5/xx9/fMOxkEXQ
N5C8Hj/72c9Srsn4nrwud9NNN6VtkJPTNxrkH93J22PfvJ7slHaRheQ43qjV
Td2aaq4b9wDiHPdW3k6f71dffbVh39RFn2OOOdJyzkfsK7Jm+n7zeckxFio5
ELkS+XOoy9s5PnJrXpePfQrer7jvkZ/zyeXtcT7Iq3kfOcdLLbVUej95D7oy
Tio15DmOnXfeuSFb4xmFqJ1MX/zu5O2MfUgWRg18avPk4vkA7hmxDp8HSe2h
J3l74HmayNur3wFcPw488MB0fas+j8Xfm2++ebqucB0C92xXWGGF9N33wAMP
TLKvGGM7xrhu9gyNpi7zdkmSJElSnU7I26NfcowNevXVVzfMP/zww8t62+S4
9BunT+Bxxx3XkFNTL4Tn8qMuN+N/Pv/888X555+fclnmR930yLTJ8FmW1zaJ
vP3yyy9Py+jfHa9hogYL/RHJfclMaA//Jo96KfR/J4tnf2QkI0aMSJnO6NGj
U/1yapkwZic4P2Qz7If+13nbsO2226ZlkanneTs1Y1gWx4/f//73KZth37SR
+jx/+ctf0s+FF144zSfvoa1xPLzP3KNgGbkPtdCpN84YfZHPk0Mj2sX5n3PO
OVMd+Gb1ZOJexWKLLZbGaCW3oA3k88yn3dW8fYMNNkjzo458tQ56PAvBOY/P
A+3uKuoMxbMHF1xwQfpvg7F1eS4i2pTn7fRLZx7LW+Xt1Aritbzf3Lt57rnn
Ut16lkfWxmeMdXh+oCv3BST1vq7m7bEe1wvuU959992p9jr1srg+8DwV1xaW
cV3nnmB83zDG9I033lg8++yz6T7tLrvskuZzjWY8iriORF0zaruzfe5LMnG/
k0yfZXwfoSt14jVlzNslSZIkSXU6IW+P11AfPK/3En35IpOO3CGfll9++eKW
W24pt0WNdLL26npk4z/5yU+Kd999t+GZ/ahtQlYaIm8/77zzyho3ITIZaqtU
90FOEgYMGFCOA1udyMnJ7MH4sGQyzKfOQJz/2A9jyLKMPo5xruL9iVrksQy0
gXnUlud5geq+qTPz9NNPl9uK/ZAFRf/y6sR4opHPx/ojR44sl48dO7ahbUzc
+6DPd3Vb1F3ZbLPN0u8//elPy3aTZ9Nfnfl/+tOfyvOQi/ya2kPk2/QHpW5N
s3VzsYxj2HDDDSdpE+O47rrrrmVd98jbuW/CPOquR9/1Zm3aeuutJ9nmW2+9
VX6uOU7mcd9ncm2VNG10NW9nTGtwr7bZ9TGfIhMfOHBg0+tffJ9wLxNxveQ7
h1pfXNOq63NfM2p5ee2YNszbJUmSJEl1Oilvj75/eX31PF+g33X//v1TH3HG
PL3ooovKujH5M/Zkt/T5ps/gAQcckOqI8Nrq8fGTWgDk3OT0MS/aQ994lpHv
Vs8P+Qh9HOlvT05y1llnpX7keTteeOGF9HpqqlAz5qSTTkp9HaMffBwj54n1
2F+1jYy5yrJnnnlmkvN28803p2X0r4/1o57MRhttlPpa04/7kEMOSWPucV6p
XZCf8/z3f/3rXykvys8b+8/bFPuhPzrbpk9+1POptp3+mdRo5/3ifga1Vz79
9NM0n3bTNzzwOYvjIatuJj4PjMUa/eRfeumlputW5Zk7dd+5f8NniPFjOW7q
/rBvMvbI3fgMM492V48xxznlngfb5PNA7R+2Gf1QGYO1Wi9IUt/qat4e87nO
8t82zxpx7ePawMTvzI/vo/z6xzWX8VEZL4NrA98T1OLK9x/rsx++p0488cQ0
7gXXYJ6Jyetree2YNszbJUmSJEl1Oilv33PPPRtyycg5qjlDdfzN/Pn6amaS
18/N+4ZPTdUavc3aUW3z1G5HNW+nr3r0y6zWH2j2eahrb0/OW76PZuenJ2Kb
9BOnNjx14LtTczk/ht6oydDqHJLD855QG6LaDkl9Y0rqt09O9fpS952F6ndc
9V7z1GybJs+8XZIkSZJUp5PydurgkkvSt4+8gYwh74se8+JvctxmOQTbY1k+
fmc1vwi8niyk1XZY1iwvjv3HNtl+9TyzzXyd+Lu6Hq9lP83ep1jWrH1sK5bl
eTu1gakbQ5/t2F+0t+6z0Oy85e2vHn+cm1b5MduJXCnfdpzX/Jiifcyvy6Pp
zx711ul7390+n3mb8nMSbcpzsPz9r9tHvk3E55LXRF162kvf+divpL7V3bw9
vivqpupzQ9VrR6vvLFS/41D33aXeY94uSZIkSarTCXl77I9xRaNmLZlx1JWp
Zg1dzVinxfP3XdnHtGoHIm+nf3uMyZrn8V3d1tRs75RsL15HvQZq0kRNfOrA
c3w93XZvvCd5LSI+99SRoR9+jNGa1xGS1Ld6s397Lq41fXkNVveYt0uSJEmS
6nRC3p6jvu2qq66axpQjY83bo9biHFH/l3yXPtVRc7yTswKOi7o4fB44rlln
nbXYfPPNizFjxqTl7XZs8T4wDi51/RdZZJE0Pu5tt93Wxy2TlJtWebs6j3m7
JEmSJKlOJ+Xtsd9x48YVo0ePLsf2NG+fvDhHnPdrr722GDJkSB+3aMrFMfEZ
HDhwYBrLddCgQcWECRPS/HbOQGj72LFji2effbb45JNP+ro5kirM29WKebsk
SZIkqU4n5e3ojXEs9b+n0/IPszypvZi3qxXzdkmSJElSnU7L22Mb3a05rv9f
jNH3v3bfIsZu7aSxA+NzbFYjtR/zdrVi3i5JkiRJqtOJebskSb3JvF2tmLdL
kiRJkuqYt0uS1Mi8Xa2Yt0uSJEmS6pi3S5LUyLxdrZi3S5IkSZLqmLdLktTI
vF2tmLdLkiRJkur0dd4+YcKEbr1ekqTeFt9zkbebqSrEZ8O8XZIkSZLUTF/n
7byeeU5OTk5OTu0yffnll+lnZKpffPFFn7fJqT2m+Gzw/0/m7ZIkSZKkqr7K
28eOHZv+nTp8+PBi6NChTk5OTk5ObTfxHTVixIg+b4dT+018Nh5++OGUv0uS
JEmSFPoybx88eHDx0ksvpf6DTk5OTk5O7TLx3cjPUaNGpVw1/nZyis/CE088
UTz00EPW9pckSZIkNejLejKDBg2yX5gkqW3xPTdkyJC+boba0JgxY9Jnw3oy
kiRJkqRcX9dvHz9+fJ/XYnVycnJycson67c7tZqs3y5JkiRJqtPXefv/+3//
r1uvlySpt8V31d/+9reUqVozRCE+G3EvxrxdkiRJkpQzb5ckqZF5u1oxb5ck
SZIk1TFvlySpkXm7WjFvlyRJkiTVMW+XJKmRebtaMW+XJEmSJNUxb5ckqZF5
u1oxb5ckSZIk1TFvlySpkXm7WjFvlyRJkiTVMW+XJKmRebtaMW+XJEmSJNUx
b5ckqZF5u1oxb5ckSZIk1TFvlySpkXm7WjFvlyRJkiTV6dS8PdqgrzY+Tz39
LPA6P0eSmjFvVyvm7ZIkSZKkOp2at3cKM11J6jxTkrfHdb/u2s+y6ndvV74v
urJt9S7zdkmSJElSnU7L29k3r3300UeLcePGNbRHXw3xGXr77beLfv36FRdc
cEExceLEbm2D7IzP7+jRo4sPPvigN5opqYP1JG/vaiY/ue/cZsun5FkeTV3m
7ZIkSZKkOp2Ut5Op7r333sV0002XJrLWvD3thna9//77xb/+9a/i888/7+vm
/M+Iz1D//v3Lz8KIESPSvK70DcWHH35YrLfeeum188wzTzFgwIDebLKkDjMl
/dvfeeedYsiQIcUDDzxQfPTRR2leXHviJ9sfM2ZMcccddxTHHXdcce655xYj
R44s3n333dptsz3uN991112TXVe9w7xdkiRJklSnE/L22B+5BPno7LPPXmy5
5ZbFnXfe2bB8aupqX8Jm68Xf48ePL3bbbbdipZVWKp5//vly/VZ6UiNgcu2c
WnUH6rbTm7UNmm07zuENN9xQLLbYYsUqq6xSjB07tly/2TbiNbH8s88+K047
7bRi9dVXT5+pOeecM90bkSR0J2+P68oTTzxRnHPOOcU666xT3gv805/+lJZ9
+eWX5XZfffXV4phjjinXyafVVlutePrppyfZB+247LLLiu9973vlutdcc83U
Pmx1gXm7JEmSJKlOJ+Tt8ZrDDjusmH766Yv99tuvXEYGQo7RLPNmPsvrllUx
L/bHz2avr65X/Zv1+Zv8doUVVihmm2224rHHHkv7pI9+s/w4shjwe6t6AnGs
zTLk6vK87dX21ontRJafn6d8m3XLwuTeh1bvX5z7/O9mx0u+9cYbbzQ9juo5
qG4T1CRac801U3ZFf9R8+5K+urqat8c1DmTlkYXzXTXrrLOm1yL/zuHZLNZZ
eumli1NOOaW4+eabiyuuuKL49re/neZzjzauXdGOAw44oNz21772teLrX/96
ceONN/b2aVAT5u2SJEmSpDqdlLf/4Ac/SFkDffwip+0t//znP7u8XrVfdJwf
2rfwwgsX8803X/p3+eR88sknqc5Jd/zjH/+Y7HmIOvd527prwoQJDe91vh2W
Rc2EqY1zm7e/p6jpU8XzB9hjjz1SfnXLLbekv83bJfWkfzv90u+///707BXP
Yc0444wNeXu+zZNOOql48sknG7bz4IMPFt/4xjfS6xhbotoOlt9zzz3Fuuuu
m74Lb7rppql70OoS83ZJkiRJUp1Oytt32mmnlDFcfvnlqQ20feutty422WST
VAc3X3fUqFHFWmutVey8887lssilWbbyyisXRx11VPHxxx+X+yGTPfzww4tl
llmmWHDBBVPfw0MOOSRl2oi8hWM+4YQTiuWXXz6tt9BCC6Va4OS1MW4n21lj
jTVSH8QZZpgh9VukPRtuuGFZKyDa+oc//CHNJ5tnW7wuz36j3WeddVaqU/DU
U08Vjz/+eLHqqqum/TPviy++KK699tp0XGQ4nN+99tqrWHLJJYtFFlkkzSen
qRP7IcOhRsvAgQOLN998s9h9992LxRdfPG2L94C++iBroJ7+EksskZbzPtC2
/Fy98sorad8//OEPy5ovsR/6pe+5557pOPI+6rz20ksvTeeM87HAAgukfqOM
i/rpp5+Wnz9qGHOuaB/3KuJ8Bfq+b7/99sVSSy2VztNyyy2XnpGI7J33iveA
vJ3PFeevug1JX01TUr+d63Hk5nne3gxje3Dvj+sR30d873D/79Zbb03Lm+13
l112Sdcs+sVr2jNvlyRJkiTV6ZS8nX2SnZMxXHfddWn+Bx98UCy66KJpHs/i
RzbNz3wszegDSAbCsrPPPjvNP/TQQ8sM5MUXX0z5OfOpAUBd8DnmmCP9TaZL
vV2QjeTP9bN/stz4O9pGXfCZZpop5SbMJ3Nnu3PPPXfxyCOPlHUC6OMYr2U7
ZO7xN/XFY5/Ydddd0/wjjjgiZej8Thu///3vp+P4+c9/nuaxHhk4v7M/Mv+o
bxBZf7NMOfZz8sknp/U333zzsj1sJ9pFPk4WH8fNeKNxnCx77bXXym3SR5P5
ZPV81uJ9iHNOTs/yv/zlL+V7zXHHvng2gPcijoF7DvEZ4v4B8zjWeMYgtn3h
hRcWM888c1o+yyyzpO3wfvD3Rhtt1HC8ZP7xGco/o5K+unqSt3MdZuKZHK6L
rfL26tipgb7xc801V/q+qI75Ec908QzUdtttZ97eh8zbJUmSJEl1OiFvjzq2
W2yxRcp1Y5xUkJWSI9OXG5Gh0uc7MuBjjz22rGnOOJnbbLNNmn/bbbeldekz
zbaZx1h0HFe0kf7zzP/lL3+Z2kF/7Rhf88orryzbQe5BDh51VegXPnz48DIT
Zzl9uMluIhO+9957U213cuHf/e535bYGDBiQsmGW0ZY4Z/vuu286VrZJ3n7X
XXelNr711ltpHY4zltOn/O677079vocOHZr6eDOfPv2txLk788wzy+0su+yy
qZ8l24kaCZGFr7jiimkMW5axDu1l/lVXXVVuk3yfbdFXnWNHHD+fPbbBcrJ3
cH6Zx3bOPffcsubLQw89VOyzzz7F66+/Xn7+/vjHP6bXfutb30r3XgJ12Olb
GvceYr/kVzvuuGP63OXHu//++6fPym9+85uWdf0lfbX0JG+Pa9N7771Xm7fH
usx7++23U27L9Zq+7Vy3uNa12jbXW57bMW/vO+btkiRJkqQ67Z635+PFkRmT
TdM/PFADhNyB+ie0hfXJn8k6qB9CH+wNNtig7P9MbRjyb/o7R+1c+mqzDdaP
uibRrueeey717WYZ/QpfeOGFtC79sl9++eW0TuS21fND3ZLotx51VmI5uf+2
226blpNvx7mJejRkwCxjLL1A3h75Pflzvi9+Hn/88Wk5tWmqNXCof8OyLbfc
suW5juM444wzJumTHtsh5yGb5lmAqNMTdthhh7SMPvuBvJ1tkYk3y9sZTzbv
3876nFu2k/d5z0VuRd4euX/k7bxvUed//fXXL9vdrD9/tIN7KazPvZtm+5P0
1dObeXusx7Z5Jmj++ecv72PynFLUusqvW+bt7cO8XZIkSZJUp53z9tgPOfCv
f/3r1JeZ2iLkDbEd+pFTa4T+zCNHjkzzrr/++pTL9+vXL/V75/eoo8K/jckp
ttpqq7Lmd/QLp+Y6GP8zshH6HpLb8nw/+6K90XeaeuXUWY8cJvrhx8T6rEf9
ceqtMy/ydPpzk+GznHPBsnwMWI6BzJmMPUTeTh9tkBdHJsPE8bL89NNPL9sT
uQ1jzEa9l1aqeTs1C2I7MUVuH22g/3m0/cQTTyz70OfjB3Ylb4/+7bwnm266
aZq39tprp1r98T5FraBmeTv5FugfzzFy7nh+IL9fw0/amf8N3hs+Q9xXue++
+3p1HF5JnaG3+7eDOmXcR86fG2I8imZ1v8zb24d5uyRJkiSpTrvm7bEeuQVj
cpJ30weQ+rb5clBfPeqPgPX5m/EyGWMzrx0TfZnJ2EPUjKHPO1kt+S358Eor
rZQycequs5y+7SDnnXfeedM8ct0111wzje9JXZq8bfSzj7ydtiDy9mHDhpX1
3dkH9V/YJxO/R332zTbbrGwnNQai7nxkx/l7Enn7cccdV7YhMvSrr766zL1b
qebt9IWPfcT2Tj311LSMmvHMy/v2R9117lt0N2+PfvTgXFF/JvInfud9oyZy
3s48b3/33XfTPLJzav0wn/3leXszcb+CuvB8xngtx4+4fyLpq2da5O3sg+8J
nhViPa6r8fzUs88+27BN8/b2Yd4uSZIkSarT7nn7P//5z9TPmWxhvfXWK3PV
HON7Rl9wXkdeTX9l2jl48OD02sMOOyzlJfRVZ13qjQf6qcfYp/TpJmem/zsT
WTw1wHfZZZfUXz2OnXadd955ZS4edVyoLx7q8vYHH3ywrC/P/qkpH/tkIk9h
Ouecc8rtRd5+yCGHpL9b5e38DNW8ney6lWreTvZTfT8iU6eN+WtAv/ru5O30
aa/m7bEf7l1QKyhquTPRD5TxV/P67dW8nVpDZFzMjzr8dZ/v2NbDDz+c7rdU
z695u/TV1Jt5ezwvVMWzVYwhEuNi568zb28f5u2SJEmSpDrtmrfHPshm6Qse
mTg1z9lGXtv20UcfLcc6ZZsLLbRQ+j3aSF/BZZZZpnjttddSbRn+5jn+QH94
6slEvtGV9gfyc/q2R/3dI488cpL+7dRvp991rI/HHnuszHfJ7utEPh15+49+
9KP0dyfk7c8880xZ7518PWrqxNizkafneXv1HFOzh1ryrMe4tvGZa1ZPhv3F
PRDqC+W5VtSiqfbZ57O48MILp3s0P/7xj8vaNmYo0ldXd/P2qKvFT+7/Rd7O
+M3Mi+t4fl2J6xHzWM56PKfFNZMxv2OdeE6Hn//+97/LvP2mm25qqGGmacO8
XZIkSZJUp13z9uq+GHt0rrnmKmaZZZZyHM3IP8gfqANCH+oDDzww1Wm5+OKL
0zL6C+6xxx4pm7jkkkvST+qDI/oNXnHFFWVuS7120C6y5GYZRryOfCQylKuu
uiplJOTB0deavJ0Md7bZZitGjBiRXsd22SbHQ197cv683jr7jG3G+erkvJ06
CcyjNjpZOPPjNYxTS99/lr/00kuTtId95tk654o6xzH2bZ63xzxyd+7NsG5e
+77ZmLbxPv5/7N13kBTV+v9xcwJzQsyCiDkr5qzoVTEDijkH0GviqhgQM3hR
wIAJ01XMgSIUQVAxgQSx7qUUYYskqAgChYj8cX71eX719Pf07Eyzs7A7M/p+
VXXtbsczPWOPfPr0c/xzoecT4uUA/r5q07/d6XqkvF3fRYMHD7Z58b0/XQv9
eR/R9cnvxXbo0MG+Sw455BD7O7cOjZ798bw9fk4L9Ye8HQAAAACQpdzzdvG8
Wf39lDGov7PEufeZZ55pWbznt57JS5cuXZJ6JPqpMT/j/obKx9UH3fvPex0S
UQaiPoRqr6jPtI6lPotx+66//nrLSFSPZuHChTZf/da937tn6vHr8XbpXoHG
R42pdm/fvn3td8+KKzFv13nzfvw333xzsi+NZRrX4hk3bpwt0/umnDw3R7rv
vvvs3oXep19//dXmxXn7nDlzknVV50fzlXVpnF0/3xrbVX1He/bsmWp7+/bt
7b1TXaJCdR4A/L0Um7frejJv3jz7TpsyZYrl7brvp2udrkF+3dK9Rd1/1HVL
9xznzp2b7EPjk+j5rHiMER9HWzm7vm/1veJjjuhapnlaRuZbf8jbAQAAAABZ
KiFv9xojysKVMfTq1cvm+3P2olrfcZ1v5R6uX79+1i9ayzT2qWq6+359+7fe
esvGy9Q6qj1zyimnWN121YzXPPU5lDZt2iQZucYybd26tfVDVK6i+b179072
raz+rLPOsvkbbrihra++9cpUdFzlL8rnvd2HHnpoOOOMM6yWu+qbKC/WGK1+
zvzYF198sf2dm7ffdNNNtlw/nWfK6n/v2XQhvq5n6uqrn/u+derUKRlLNd5G
fCxVjeca7/Oiiy6y+bof0qJFC+vXr3OtcWI1Jm18f0S5uv5W3R/1Nz/nnHOs
HXq2QfM7d+6cvO533nnH5mk/nrfrM6Hz6v0/ve6/8imNa+ufAfWD9/s1eiZC
8x9//PHUawXw91XTvN3v5z3//PNhjz32CPvvv7+NIeLXH9XC0r1ijes9bNiw
VF6ua+Kee+5pfx911FHJ2Nx6VkvPQHkb9HyUrpvah8b0btiwoa2n7wnft99H
jJ+PQt0gbwcAAAAAZKmUvF1OPfVUyxh69Ohhfysv9WVjx45N6s2ohnr8DL5y
C2WuyjKUzaqfc/w64kxDGa/nJD4pe9f+RVmJMuFGjRql1lE/9ieffNKyjrgG
uf49rpzXx0bVpP7jTn3h9bf6O+bur2vXrrbcX4tyduXQ6o8tufmPsnAtV+7t
r8+zlz59+tgy5UGFeHauPuFat1WrVtXeg3vvvdeWafzYeBt58MEHbdl1112X
2kbjzCpL8vsZmvSMgGr3qM++tvHaCurr+eyzz4YmTZqkzodq8qj/ueoD+X4/
/PBD21bn1/uI+jKNKaj11cc03o/uaaiWvtcC0jlS/X4t0zMA8ecCwN9XTfN2
vwZqbOv4WqNrk76P4nl6Vkr0vafncPx5LJ90jdTzS7pmih9T92h9HGhfT/uP
v1duvPHGVHtQd8jbAQAAAABZKilvV99vf4Y+rnfr/Ln7fHmp9hGPlZlFfZ8/
/vhjq+ni2Xwu5b76t7bGctVP/V2IjqsaAqpFo7q+/nridur1aD8fffSR1X3P
eg2F3q+s5bljhWbJ2s/yLPvuu+/sHCgLz90m9/Vqvsa0HTp0qN3r8Bo9NXlN
8b5UZ0G1knVcr+fg9N5qW38GQfckcrcH8PdUm/rt8dil/n3kz1H5dSX3uq/9
67qv65SuV/G+it036gd5OwAAAAAgSyXl7erfHY8vuqLVJLNY0bnG3zknyffa
V9T5yNpP7jL1vVc/UdVSXpFtAFC5lme81GVZ1jWGa1B5I28HAAAAAGSppLxd
dWS8tq3GvVRt87rKJWrSZzDub1jf+6tExb62FXU+8vUt1bMRejZBY8uqdo/y
dvWnj9cB8PdVl3l77K9+3f8rIm8HAAAAAGSphLzdzZ49O1XXu2PHjqn2AMvi
nxXVe9fYrf5ZOvvss/kcAUjUV96OykPeDgAAAADIUkl5u0yZMsX6uXfo0MH+
nRu3B6gpfe40PupNN90UXn755TBv3rxSNwlAGSFvRyHk7QAAAACALJWUt5Or
AwDqA3k7CiFvBwAAAABkqaS8PT42sKJQOxlALvJ2FELeDgAAAADIUml5OwAA
dY28HYWQtwMAAAAAspC3AwCQRt6OQsjbAQAAAABZyNsBAEgjb0ch5O0AAAAA
gCzk7QAApJG3oxDydgAAAABAllLn7YsWLbJ5TExMTExM5TItXbrUfnqm+uef
f5a8TUzlMflnQ///RN4OAAAAAMhV6rxd/24FAKAc6Xtu0KBBpW4GytDEiRPJ
2wEAAAAA1ZQqb6+qqgoDBw4MkyZNClOmTGFiYmJiYiqbafLkyfZz1KhRYejQ
ocnfTEy5nw1qDQEAAAAAYqXM2wcPHmx9w/r378/ExMTExFR205AhQ8KIESPC
gAEDSt4WpvKalLUPHz6c5/QAAAAAACmlrCejf6/OmzcvLF68mImJiYmJqWwm
jS2in99++63dG9Z3XanbxFQek382JkyYYJ8N6skAAAAAAGKlrt/+xx9/FLU9
AAD1xWt0+/ce4P73v/9Rvx0AAAAAUE2p8/bff/+9qO0BAKhr/l3lmSo1uuH8
s/Hf//6XvB0AAAAAUA15OwAAaeTtKIS8HQAAAACQhbwdAIA08nYUQt4OAAAA
AMhC3g4AQBp5OwohbwcAAAAAZCFvBwAgjbwdhZC3AwAAAACykLcDAJBG3o5C
yNsBAAAAAFnI2wEASCNvRyHk7QAAAACALOTtAACkkbejEPJ2AAAAAEAW8nYA
ANLI21EIeTsAAAAAIEul5u3ehkqh9iqvKfZca31tV2mv969ked8D3jug8pC3
oxDydgAAAABAlkrL25cuXWpT3I5KU9N2V+rr+ytZUe+BsjryOqByLG/ermvH
sq4fWu7382p6T8/XJ+MtHfJ2AAAAAECWSsrb43bGv6s9f/75Z0nzTG/P+PHj
w2233Rbuu+++VHuWLFkSxo0bF3755Zdq22W1ffr06eHbb79Nznk5ZvDeptmz
Z9trv/fee8OsWbNSyyrZjBkz7D3w93h5XhO5DFAZapu3azvdE9bPrMzd18ud
V+g4+dbXd8df4RpbacjbAQAAAABZKilvl2HDhoXrr78+nHfeeeH9998vatu6
pNxDXnjhhbDSSiuF1VdfPfzxxx/J8oceeihstdVW4eSTTw7z58+3ecvKSXSO
DjzwwLDDDjuEN954w+aV47/r43sNeu2rrLJKGDt2bGpZpZo2bVpo0aJF2H77
7cN//vMfm1fMa3r33XfDBRdcENq3bx++/PLLumomgBWsNnl77rWh0LUinj95
8uTw9ddfh++++y6Zl/vdEP+ta5Kur7/++mvB9VG3yNsBAAAAAFkqIW/3402c
ODFssskmlulqUoYpP//8c7j55pvDW2+9laxf3/mD5+2vvfaaZe2NGzdO5e0H
HXRQkkXPmTMnma+cpXPnzmHgwIHV2q55/lpvvfVWm1eONUn8PdVnaY011gib
b755mDBhQmpZpfH3YMiQIcl78M9//tPm1eQ98O31GfXt9ZlQdlfTfQAondr2
b9fzMI8//ng45phjwnHHHRfGjBlj831736/uv7Vq1SrstNNOoVGjRqFp06bh
6KOPTu6tOr+W/PDDD6FNmzZh5513DltssUXYe++97V6eniuK10PdI28HAAAA
AGSphLzdt1EurdxSOcPw4cOtZokyjM8//9zmK7vQ38q+4xrvca3b+Bn/OJ/w
9byGbk3GyIzXUbau31955RVry6abbmo1ZJzae/HFF4dXX33V/vYaMur3rvWv
vvrqpO3e1oULF9prVs47derUpJ25bY5fW6E2+7q+TOv6ufDfl/U6ff3c2sH+
u2qurLzyymGjjTYK33zzTWpZofbEbc/af6FlLqv+caHzknVOnD7fXbp0sWcq
pkyZkmxXaP+5x9K9oP79+4cjjjjC3udHH3007z4AlJea5u1+HZFLL73Urn9+
j02TvufEa8xo0vfExhtvnKyjDH3NNde039dee+3w+uuvp9qga4/W0fKGDRuG
fffdN6y22mr29z777JP0jSf3rR/k7QAAAACALJWUt5977rnWP/yee+5JLf/o
o48s523dunWN9pNrWf0W82WjhbZRnp4vby+0zzvvvNPWV//8YmT14V9W//6s
+sC5f2edm9z+msXk7TVtT03bWqys81PMeLZZ7Yj38/LLL9tn94YbblghdeAB
1K3a5O2XXHKJ9T3ffffd7TknZefaVvR9oHVVD+aAAw6wa6Wu/xrTQ9v/9NNP
4R//+Id9H+y4446pscFVP03zDz/8cLvPrLbNnDkzHHnkkTZfy7Xv3PruqBvk
7QAAAACALJWUt6v/urKFXr16WRtUv1ZjkN511102X32IR44cGT7++OPkGf55
8+aFwYMHWy0a0fpPPfVUePrpp20sUrd48WKriat1tf8XX3zR9pUvG/XflXeo
5ovWV39F1VBRPRn1O1TfxThvr6qqstoknkMrW9H+zzjjDGv7WWedZf30VZ9e
dQNE2clnn31mr8dr0ORm6Xo9qhHeo0cPq6czevToVDt9Xb1W5QI+jqkypH79
+lndg7fffjt1LnKpvrDaodfYs2fP8OGHHybrx5lzMXm7PjdDhw61vEL88/DE
E09YO+NxZdW3U8t0bL1WnbtcX3zxhd13yR2nVcf3vEw5V9wmPZMwYsQIe6//
/e9/Wx0Hb4/Te6D3Ret5m3LfA22j9ulzoPdfbfHlnrGp3Xqflcf554K8HShf
ta0nI/pe23DDDS1z97xd1xLfh679Ph6E+LXgq6++su30HeLjPeiaplozun7o
uyCm7+C11lrL6qxpW6FWVd0jbwcAAAAAZKnEvP3JJ5+0v5X7+vP4ynnjZ/jX
X399W8frb+s5/759+4YGDRok6ygblffeey+0a9curLrqqql9aLr99tvtNebW
oFF9GI1lGq+r2uWq2av8w/N2zz5Uf13rHHroofb3c889V+1YPil7F91P8BoD
eq2ifep8zJ0719qm1xlvq2OrZviCBQuSOjfywAMP2PIbb7zRsvnc7dTfctKk
SUl+rp/K/e+9997QrFmzam1UPQMfE9Xz45rk7X4+dD9E+1G94j59+iR5kk9H
HXWUnXe9bo0XGy/TNrrXEWf9yqi0TOdVvJ+nXv+ZZ55py+67776kTTp/el4i
93Wp9vyDDz5o50+0nn9mlJn769Wx1b6HH37YxsHN3Y/qKv/444/J633nnXeS
+f6ekLcD5as2ebvXtVJN9Q022KBa3p4rvi8o2m7bbbe1a8WAAQNs3ieffGJ5
ujJ4Hyckduyxx9r6Xbt2tb+znqvCikHeDgAAAADIUkl5+ymnnGK5wgsvvGB/
K9+94447wiGHHGLzt99+e6t1rky5e/futo76qysH15h066yzTthyyy3Dv/71
r3D33Xcn9bj9GX7VwdX83r17Wz9kz07Vr1s8J9W/sVUvRsu0X9VYV4btNbo9
t/Wa7tKpUydrx0knnWR/q8+08nLPsnfZZRd7LaoT/sEHH9g66tOunEUZuo+n
qv0pt7nllluSY1155ZXh+eeft5/KdzzX9exHHnnkETu+ah14DXzlzzreuuuu
a/NUX1480/G6+Nru8ssvt77nype32247m6/XMn/+/OQYxeTt6oevtm622Wa2
L2XWOvfXXnut1Sf2XF3H3nrrrS33V417vYdx/R3PsLSO8ih/r+K8XedC++nW
rVvSJv2u/ejzoJoOqpes5yR0f0P5vH+ulbfrvdR8PQ/g+9Y+1Kb4HonuA+m+
ht4znWfl7c77t6vmkX/myduB8lWbvD0etyErb8+tleW/f/rpp3Y91jXfv590
Hdb3ja5vup7l3vvV94+uuz6mNnl73SNvBwAAAABkqYS83XOK/fbbz/qgex7t
+7r//vstyzz99NNT7ZNBgwYlmaj6Scf1Qnw95SnqFx3no8o/2rRpYznG+eef
n4xzp7oz3i96r732Cl9//XWyjbJZ78eujDbu365s3TNq8UzE7yGoT7of1ylv
V3atnMX7Oor61iv/Vdsee+yxJB/XT9WHUVajfapei/NxWTXpnoTXZNE5UE6v
86rX4323RdmOcnzVrIkzHN3D0Prqw686M66YvH3UqFHJ8wQnnHBCki1p/auu
uipZdtxxxyV1YPw90bL9998/9dlo3Lixrf/SSy+l5us1eO1j3XMQfeZatmxp
WZjuccT0+dD76FSPSFmXjunPGIgyMD/P2of3h5fx48dbDZ64HRozVevq3pDG
wfVzD6A81WXensuv4R07dkzGT3X6XtLzP7q26hmtmNrWvHlz2+bCCy9MjsO1
pW6RtwMAAAAAspR73u7H+u6776wGisaf81rsuXm7aqH7fM+HPW9XZu156bKy
CGUfmlTXWxmH8mDlrqLsQ/tS/qoa8L6+cnh58803U+OlFsrbvZ/iySefnGTg
3mfRX5fydq/l63m7spSbbrrJtjn++OOT7Nb73mtbZdRqd9u2bZPXpH7p2uag
gw5KXn9uFqwx+mbMmJE6tzHN03FUT1jPEmgbv/chxeTtuk+h7ZXZazvxc6g6
6jq/6pP+22+/JedY1H9d2yljij97xeTtel9UP0jzlN+rhkNulubnSO+7+qvH
ebvWve2222z7gw8+2LI1b2P8euNxFFXbX33edX70e3wMAOWnvvJ236/uXfp1
TOMr+zba52WXXWbz9TyQxuTWd+Czzz6bPGcV1yFb1njZWH7k7QAAAACALOWc
t3v9cdVgV71wZZWeKcTjmMZ5u2ecns/q38Jats0221iuGtcnj1+L5qlfsvpz
n3322VZnxHMM1Wn38UG9xopq7Krfd3w8/e55cLF5+w033JDsy9uUL2/X+VL+
r3PRpUsXm+f3FjxzV30U7XPXXXdNzqXn7UceeWTyun3SuHz+mnRfQ9QOP8fq
X67jq4aN6tAoB/d6+fGYf7XJ25Uf6Zie5as9yv9VU0H78gzb3zO1Q9s1adLE
3k9/LcXk7aL6PF5HR88iqDaM/lvw9vnPfHm79qn3Te3T+xq/B/6a48+X/65n
GLQfPaeh+jXkYkD5qo+83ddftGiRfTfoeqR67L5ufA3WtTt3nAjVQNPzV/pd
PyX+DkHdIG8HAAAAAGQp17zd15s6dWoyXuaee+6ZjAMay9e/3fN21T7RMtUc
1xibcfud+qyrNrhnGFpX9UZ8HLoWLVok/b6Vk3otGa8ZEh9PfQ9rmrdLnLf7
vrLydvVnV814baNaMuJZr7dBNWW0XLm3n0fP21Vj3vlxVNvF8/bvv/8+df5V
K1+15bVc2ZHOxamnnprk2z7mrNQmb9d58ucV4mcS1ltvPVvufd59P37/RHl7
XBOnmLzd26C++Xqf/d6BasPrc+C1bSRf3q5szM+JxijU8bNqJnv+pb76On/a
Ts9p+GsjGwPKT33k7T7Ghvdf1zgU+k6O9xVn8k899ZSte8UVV9h4Ebo+aTwS
XcOuu+46Wy/fmKpYscjbAQAAAABZyjVv92Moo9SYnsotlEV4nhpnlLXN2/VT
macyVx+zVP3TvY+39/tWDRbP29Vm7zvu68XHK6Z/uxSbt+t8q3a5tlFNdvGs
12uvP/jgg0nNFd9XsXm7+L0Fr3fz8ccf2/H1mnxsWK3jyiFvVw0g8WxL2+fL
270dWk9jmV566aVJ7q7Pg/edVy333Lxdn1nPzTXmbNz2fLztqr2s5yz0fIDa
RD9UoHzVdd7u+9f4D7qWaP333nsvtSx3v/kcdthhtr2u8cJ4qXWPvB0AAAAA
kKVc8/b4WMrc1ZdPmYJy1V9//TVVi0OZZzxeqnIRzxwK5e3ejk8++cSWq36M
cueYb6u83evJ6N/X3j9ZdW5EWbsfT5lqbfL2Dh062N/KZLLqt2s71dTRNhdc
cEGyfpwh+3iuqovjapO3H3DAAWGVVVZJ2ub0fqhueVberto8Uh95u+hejOY/
8cQTqX1pOz8fuf3b43Og86i68erjrtesmjbyyy+/VMvbte/WrVsn59jr4OTL
z32e6kHstttuts0zzzxjn2EA5au2ebum3Lxd8/L1O9e9UV0zdY1/9NFHk/UK
5eu6Tul6o+ui2qOxIHT/Ttdc1TrzdVC3yNsBAAAAAFnKPW+PKTNX7hmPHSqq
n6KMVP2+4wxWlpW3qx6K9qms2fs0+zp33XVXUk/G83Zl4OqjrPlXXXVVtVxE
/dS1rFGjRpaLFMrbPQ/WmKbKW4466qhqrzdf3u5t1r40fuzQoUNT23z00UdW
E13LNZ6eq03erkxb58b7cDtl5V7fPl89GbU57vsfq6u8XXWM9Rm4/PLLU8fT
8wZrrbWWbaNsy9ugnMTfU6d6DdpvfB8hX94uqluv9bRv9Y+Pqc2qURR/zvRs
gHKxZs2ahfnz56fOP4DyU5u83emepOftw4YNy7tfPZ+k66WuLRo/Iotfs3L3
E9/3099k7fWDvB0AAAAAkKUS8nbPEI4++mjLFnr37p2a72NoNmjQwMYKVX7r
GYf6oCvn3HHHHVN5e/walGcr81A/7h9++CGMHDkyqTGjvOTQQw9NtpXu3bsn
dVauvfbaMHbs2PDpp5+GVq1a2Tztb6uttkrl7WqX2qHa5+J9HT3TV0atbFh1
WLxvuGqZKDtXn2uN7+ltVw7v/cu32GILq7GjnFzbKzP3XN37QEq3bt3s+Mcc
c0zyOvwcjB492pY1bdo0TJo0KVl+5plnJrXqdU6UoasPpnJtnS9tE/dv13Ll
5zpnb731VtLnO+Z/jxkzxrbX8wp6DyR+JkEZt5bn5u1apvmqlaM+pE73Pnz8
VX0+vvrqq3DzzTcn9yW0jfdv13usNuq+ic6Z/lYb4vfCn3VQP3S1Uc8z9OvX
L/UeqP+/1te4q/pM6HP32WefWfal4+m8Oq9DdNppp9l/M4yVCpS3mubtvp6u
IboealwIjbut64iuA7fddpt9R+maqHu62k+vXr3Cmmuuadch1TF755137LkX
Xbt0n1R12nUvU98Bou8mZfO696n7mrq26Fqia8rGG2+c9G0n960f5O0AAAAA
gCyVkLf7Nl57pUePHva3Z9Zqg2q+eAbuk/orexavTNT7M+fmnKrLkrutns8/
//zzk77UqgfibVEGe84551TbRtnJCSeckPwd15NRXqJ5hxxySOo1KSf38U99
2n777W1cWPWR9HnKcMTr0Ojf+Z65506q5+t9IT2v9ixZY846Pw9ffPFFUiNH
2ZJTtr355ptX2/+RRx6Z1JDv06dP8nrUb9vHmNU0bty4aufbz4cfUxmSjw/o
r02v1feRm7d7bq33c9asWcl+lXXrHkduW/X8wK233mq/33333bauajDE7Ywn
3bPRvQmn99qXvf322zbP7wvoHOf73GnaY489rFaRt/v999+3+arbzjipQPmr
ad7u1y2/zmRNul5qDHB/fidr0rXR70Uqs2/YsGG1dTSWuF+XuJ7UH/J2AAAA
AECWSsrbvT+f5+3xs/PaX8eOHS0HV36u5/OVV1dVVVnfctWcWbhwYar93sdY
Ocq///3v0K5dO6v13blz56S/oPbz9NNPW/4dt0XHVn9E9W9Xf2b1pdbr0TFU
Q1xjuGpdX1/97dWOuD+4t0N9sTUmrOqyX3bZZfb6dK9Aue4DDzxgbVAfbD++
71P5ds+ePZM2XHfdddZvMn6dnhGpf7qO7+PNxsdXbq1l6ruuftvxMvXb1361
f90zeOGFFyxfUl6ubTwr9/dCr1PnUO9Dbv2D+Pyp3oq279q1a3JMb6v62Ksf
5z333JPM8/ZMmTLFtlN/cv/sxf30Vc/Hz4X6iWqZ8jJto77ncTv0Xtx44412
3lWXQWPCes0Y36deq+o+6DPhtXbi90D9T/XZuuKKK+x5gGuuucY+S17rxrN5
9V/VZ/fiiy9O8jnyMaB81TRv9/m6vuia1aVLF/upe5y67uh3XT/0U/vy67aW
6x6gfmqZT76uvge89pRoTAnVJdM9xIsuusi+F/z6y7WkfpG3AwAAAACyVFLe
7n3KlW+KZ7xx1qB8s9jsIc7f40yl0HnJrQXi/ZVrIz5GMfvJbVvueVwR//6P
z0VN3qf4PHrOXF8Kncd8nwWtG89X/h2PZVjTc5e7nu6R5C73z+ibb75pn13l
8fk+twDKy/LUb1/R4mPnjrtaynb9XZG3AwAAAACyVFLerr7IyizVD93b4W3R
OnEOod99vEplv/53odeTu60yDM+N823r23jWoQxVk8/PzZu1nublG89Oy+IM
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
0jIT9/3331s9mvvuuy8sWbLE8nr9vf3224ddd901tG/fPmlXbjb9+uuv23P8
2223na2v46mGbr5185kwYYL102/RooXto0mTJuGoo46yWr+5+1CtevWD1Piw
Ou7OO+9sr1X9+5944gl7nQ0bNrTXrt+PPPJIex2evWhfqm+g5ccff7ydj/h8
AgDyW5767ervvuGGG6by9riejL53dH/X5+uZLP1Uxr7llltav3XVfvd2eO0x
jQF+9NFH2zW9c+fO1j9+1VVXpX97PSNvBwAAAABkqZS8Xcds1aqV5QzPPPNM
0vZtt902eXZfP5U96KfGEJ0+fXryzP3nn3+e7E+/a/6ee+6Z1MDV9j7mqiZl
7k45i46vMVj9OOutt55N+l2ZypNPPpl6fTGvNdCpU6dUrQH1f/T26l7B0KFD
U/to3Lix1Qro0KGD9Xn0Y5133nlWH8Zfm+9T+9J++/Xrlxx73LhxNk8ZjfeN
JxsAgGy1ydt1rVc/dt0j1bU7N2+X+J6qH8Prhf3www9hiy22sH7rX3zxRbLM
t3nooYfsWq/68FOmTLG8Xd8B5O31i7wdAAAAAJClEvJ2z7uPPfZYy471vL7o
2BofVc/mK4NQpvzNN9/YaxLlEWuuuaaNGfrll18m+1Pe7jm18hCNW6e6K8rn
zznnHJuvfuMa085fq8ZkVQai3Pvpp59O9tW1a1dbX30SlfHHrzH3Nf/nP/+x
/uy33367/TtdfRzV/7x58+a2D/Vlj+vD77bbbkm+r3sD6u+ovvk6d8pzdB5U
U0DL+/bta69b2ZD6Sjr1p9fyAw880J4HiOvAAwDyq03e7t8XGu+0UN7u68W5
uy979dVXbRv1jc99xkrfFfr+0eT79GyevL1+kbcDAAAAALKUe97uY4XKDjvs
YPm5117x+d7nr3Xr1qlt1VdQfdZVCzfO29VvUDn22muvHZ566qnUNlq20UYb
2f5GjRpl81RnXXm15j366KM2T/mIH1/3AbRMY5OK15XPxzP5mMbT80z9l19+
Seb72HuqOzNp0qRq2ylL91o6uu8Q87Ypn9fr2Xjjje39kmLqIgDA31Fd5u25
2+g7Q3XdVdNd13M9w+Rt0HE1DvgBBxxgyzSuqqi2jK7/5O31j7wdAAAAAJCl
nPN2P45yCvUjV5909edT/u39AzWpDrtyiLPOOivJLqRQ3q7ftb72pXq5yjPU
11zbqo+76qRrudonn376adh8880t69c4qbk0xp3adtNNN9nf2lfWa5c//vjD
sn2Nq3fNNdfY8Zo2bRomTpyYrLP77rvb/LvvvjvZr9rodYDV33Hrrbe2ddQ/
P7434edOY7r6OLM33nhj3rwfAJBWH3l7fM3WOCLKzvU8lu6Tih9T3wG6hmt8
bNV917703Rvn7fG+ULfI2wEAAAAAWco1b/djqL/3hRdeaLm5+mm/+eabqeVy
//33WxZx9tln29+eaywrb1ctFs+3fRvlJJ5zv/feezZPY5WqNrpyDfVB32ef
fcLee+8d9tprL8s/ttpqK1tf45hKobxdVONGteG1H+9H75P6sY8fPz5ZV2O3
ar764Ou8+X0Ez2DGjh2b5O1eQyc+L/776NGj7R6C2q82+7ipAID86iNv92MM
Hz7cnkHStfyRRx5J1tf+tEzfYaojo3u/2kb3a9UfXtd/Xde1Tnx81C3ydgAA
AABAlnLN2329GTNmWDbtNcjVty/X8uTt3o/Qt1G+n5u3q3a7j3F68MEHh8MP
PzyZNN6qagCodvzjjz+e2lfuaxkyZIiNgap9qQ+j6s7rHPTv39/mqa9ivry9
Z8+e9ndt83ZlM+r777m+zikAoLC6ztt9f6oL5vdsdW9Z13l/jkn8+SRNuker
7zN9f2i8bj1Xpe8ljTeiZRrjI9+xsGKRtwMAAAAAspRr3u7HUPYwYMCA0KJF
C8sVWrVqVW3Mz7rO2/VTtd5VT2ZZ9wfyvQ5NOk+en5977rmpPvDq856Vt/fq
1Ss5F1Iob/d6An7uvPZvp06dbB31be/du3dmfXkAQPF5u667Prb3Tz/9lOTt
Gp8jrnMmvi99D/r3je7f6l6oP8vk6/zzn/+0MbX1fbDtttvac1CavJaMvhd1
H1djcQ8bNiy1f9QN8nYAAAAAQJZyzdtzjzVt2jTLzZV7q1Z5vK+6yts/+OAD
m6d1dtxxR8s1nn766WR9ZeZxP8J8z/J77qE6AJ6/KF/Xdup3LuPGjatV3q51
lb9oHdXv1T59nfj5gF122SVVc4BsAACy1aZ/u9P3iF/v1ec87q/u+62qqrK6
ZLp+61ofj91RE/r+8cz9q6++KmpbLB/ydgAAAABAlnLP28VzCtVNVzbxyiuv
pObXVd7er1+/ZJurr77a5mnc1Pfffz/VvlGjRoWBAwemXp+Ls3GNz6o68M8/
/3yyXDn5CSecYFl+ofrthfJ2je2qLF3b3nrrraljxu+RzoH6RyrfyX02AABQ
XbF5u75DNJ62cvCpU6da3q7rvZ6P0r4WLlyYrDtp0qSw33772fV9yy23tPux
c+fOtfG71Tf+xx9/tHE2dEy/Zvvk87Q/z9tHjhxp8+nXXj/I2wEAAAAAWSoh
b/ec4cQTT7R84oknnrD5npHfd999Nl81yuP5ytvVv7BBgwZ58/bNNtssb96+
2267pfJ2LVM/cY2Nqvkat+6kk04K559/fjjttNMst99kk03seF4/Jj5XykC0
D99emb1q8qo2zoYbbpjU5s3t364sPV/9du8rqUn70DrKdk455RTL7nVenZ4F
8FoFs2fPTr0HAID8apq3+3X55ZdftjFGjjjiCMvSlbXr2tusWTO7/h500EHh
448/tnFOW7Zsacu0jr4DjjrqKLvPq5pf6vO+xx572HeM7qnGbRH/ftF3r+qJ
aR/K23PXQ90hbwcAAAAAZKmUvF1OPfVUyyh69Ohhf3tG/sADD1gf77Zt29rf
nn9MnjzZsnGNIzd69Ohkf3r2Xusrq9A64lmKshDlHVruubUfX3l1+/btkxzF
p0033dTGStW5yFdTxrdX9q08Jd722GOPDWPGjLGsXe355ptvku2UucQ1bOL6
v3EW5OPJ+nTPPfck6ym/9+PoXkK8LQAgv5rm7T4WR5cuXVLXYR9jO/67b9++
VhutadOm1i9d94Nzt/FJNdn1PRm3Rfw7RsfVM1F6fsnryXBtrx/k7QAAAACA
LJWUt59xxhlJf29lDZ5zKIdetGhRagxSb6fm6xjxa9TvPj9fPr548WJbHucr
8faqGaAaMhoHT6+jmPFHVbNd+frQoUPDr7/+mhxf83Pb6e2Ia8QX2qfGTlV7
1A9f7fHJ83Y9G6Dj+XkBABRWbD0ZLde12CdduzXpOu7zfDzreLmu+/F2Pun7
bFnXam2rfZD31i/ydgAAAABAlkrK2y+66KKwyiqrhM6dOxd1zBVleXPqQtsv
z36Xta3GSFUfy9atW1sus7zHA4C/g+UZLxV/beTtAAAAAIAslZS3d+/e3fpq
q766+rir7bn10uuLH7c2x66LNue2R2OjalzZ448/3s7ZzTffbPO9fyUAoDDy
dhRC3g4AAAAAyFIJebv78ccfw7bbbpvUt+3YsWOqPfi/OvS9evVKztN6660X
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
2/u01VZbWV7sr8mPo3OiOrnxupp222238Nprr6XOgf989dVXQ5MmTart/7TT
TrPfW7duneTtfhxl+AcddFC141x33XU2Jp6vp/xbtXq1TOfc82lNqgsvugeh
vzt06GC5/aabbpra5+GHH2611OPjO891NGap8vWjjjqqWpv02lQ/WHxcP923
0DLVZ3/llVeS+gZeW9/rJMS1Ffw9kdy8XfvI1z4AqG+1ydu9f7nGMlU/96y8
3dfVfm+88ca8eXu+/Ws/fg3WPVhdX7fYYgvy9npE3g4AAAAAyFJJebvGnlMm
ob7r4rmCcnDl7eutt54tv+CCC0KnTp3C9ttvb3/vueeeNun3iy66KPzrX/9K
lu2///7WJ96PM2PGDHs2X8s22WQT20/Xrl3DoYceavNUG6Vv3762vucnGq/O
s+a99torPPjgg1ZvN87fzzrrrCRvF90D2GijjZJlyrlVy3yHHXaweZ07d07O
s7IbHV/1BlR7RcsvueQSq/WrzF4ee+yxsMYaa1g/R69xr7o7Wq9BgwZJLh7X
pM89v+rvr31oXd2b6NKlS3jkkUfsHGme7muoLb6t7m9o/d13391yJbVduZHq
7KtPvH7fe++9LQ9SfQW19+qrrw5PPPGEbe+Z0QknnGD7f+6551LtAYBSqU3e
7tdGPU+0rLw9HvfipptuWmbenntd1PNafg/5sMMOs++xeDwN1B3ydgAAAABA
lkrI2z2nUO6rvPv999+3vz3/8Cx98803t2We42o8Os+7NSanxlj1fanOirIQ
7U9tcaqfq/W33HLL8Pnnnyfz1Tfc8/5ddtnF+pzrtahugPJ+zVe/8Hhf+t37
yeunnyvVgznppJOSvuyqx+v69etnmbnGwPPxYJVxH3zwwclrUf9+9Q2Pc/PH
H388Neaeb6uaO+prrvsBhxxySHKsfJmMzo3qrat/fNwm3Rvwewdqn9N9Dz+m
MnevORPv28+nxkuV+LPm9YDU91+ZvPL9+H0FgFIpt7xdpkyZYmNw33DDDcl9
UI2dqmt03GbULfJ2AAAAAECWcs/b/VjKGZRfaMw4/Rs33pfn3eofLso1tEw5
tfpVK2v2WiVapn2q7coptN3IkSNt2fTp08N+++1n2e/999+fHMNz4W+//daO
r/298MILNk911JXZKx+P66142zwHV/129UcU1WjXMZo3b57k4jHVOtc2vr/Z
s2dbVq55qpeTj9eT0fh5XqfF++1/8MEHtmy77bZL6rjXtA+k1y4488wzrc3q
R+/bet6ufvd+DnP363WJr7jiiuR8+rnx/Envm9Y5+uij6ZsJoCyUU97uv7/x
xhup2lx6Rsq/J7h21h/ydgAAAABAlnLO23UcZb0aE87rnOv5+Xg/4nm76pRo
G+/77XVYtEw1X+JlqueubF3L1A5RH8FGjRolddK9vm58PO9Lr37borov+nvn
nXe2v+Pn+bVNt27dkrzdz5VnJnpNqk2j46t96o//2WefJfXTNdaqxHm7snPf
d5yveN5+xhln2P0BLde50zrKA3SPQPmPxmeN38Pc8y3z58+3cU3VdtVW17h/
XoNdtXj8XHj9dvVt13n1NsW17T1vv/zyy5Naxbm17/VebLPNNkmdnIkTJxZs
IwDUh3LM27///nu7d6kaZLvuuqtt07BhQxunWu0j960f5O0AAAAAgCzlmrf7
elOnTk36oSvX1ZieuTms5+09evSwv72ejGq+aJxQLVOdlHiZ+pX78/iet/fv
3z/pN6gMOH6t/rvXy1UuLJdddpn9rbrqWp6bqejZf8/bvX67+s7njkcaT+ov
v+aaa4bu3bvb+vny9txz4Hm7xmf11+j98ocMGWK5T1be7n8r7z/55JOTtug+
gvrMe115rwEvnrerZn1cmz4W5+3+vubLkVTrx+vM+7rUlQFQKuWUt+eja67u
9+r7QtfOESNG5D0OVjzydgAAAABAlnLP25Wvqx65+mdrvM7XX3891QZZ3rxd
Obsol1577bVtXlVVVbXjyBFHHGHLlY+I6ujq73333df+zs064v7tnkn37NnT
+ovr+K+99podX/3bVRtd50SZutqrGjqifvp1mbf77+PGjQtbbLGF7Uf1Y9Tf
XuPHSvv27W2+xoFdkXm7vyeqY6+6NKqPoL6aQt4OoFTKKW+Px7nW7/G+/Hmo
22+/3f726z7qDnk7AAAAACBLuebt8bE0vui///1vyxS22mqrpI+7t2NF5e2q
q65MX/NUl92P723WGKLKg+NaL94u1UPR8XJrpqhNufXb9bo1T/UA5s6du8xz
Vtd5u/991113JfuI31ctU16uZZ06dSoqb/fxUvUcgMQ1D/ynxrj1MWpV00ef
ifj9BYD6Vtu8XVNu3q55uTl4nJ/HebvPL3T982V+7/LKK6+0+7cXX3yxLad/
e90jbwcAAAAAZCn3vD2mLFz93AcNGmR/e/6xvHm7apmI8hD169Y85ds+3qi7
9957bdnmm29ufcFF44SqT7xylUceeSS1vvJ1H/u0devWSd4+efLksP322yf9
xXPPv//tr68+8nZlNMrU1cf8+uuvTy3T8b1f/x133FFU3u71Do477riwYMGC
aseUDh062DpXXXVV3rYBQH2rTd7udG/W8/Zhw4Ytc32/L+l91GO6brZp0ya8
9dZb1Zbp3nOzZs2Se6Hi13/UHfJ2AAAAAECWSsjbPZf15+Z79+6dmr/33nuH
NdZYwzJnifP2o48+2papD3W8THm7xivVssGDByfHUk2XddZZx46juuVjxoyx
ui7q+60sWvP1u3ie3apVK5u//vrrh4ceeshq0ejf4AceeKDN1zGUl8SZdNeu
XZMa6cq3dS7VpvHjx1tf+HhcUs+7tR/VnYnfA6f+9lqucfRy8/ahQ4faa9p0
002tFny+7cX76m+33XbhzTfftPbop9du1/6VB3nu9PLLL9s8jTtbKG9/9dVX
bVs9F6B69Do3Gos1bt8555yTjHerfVNHBkCp1TRv92vppEmT7LkoravrnsaZ
1vXx7rvvtsxd3y1z5syxdZXH67qs67km3efVurpf6rXFRo0aZes+88wzyXeF
6npp/xpfRPd6jznmGJu/8cYb27ji+cYQwYpH3g4AAAAAyFIJebtv4+N4ej92
zxW85rj3L//jjz/sp3Jq7/vet2/f1DLVJW/SpEmqz7jvT3m+apvkjmOqvopX
XHFF0u/dz8PEiRMtc85df7PNNrPM3rN7z6S9toD6NK677rp5x0xVvu7nRhn5
LrvsYvPffvvt1LGd5/e6J+E5tv8cMGBAsl9l6Lnbe10CvQ7vdx9PBxxwgE36
XXXWPXd6+umnbZ6eO8j9HPj+9R54/8t40rnw9vn7qv7y8fsNAKVS07zdv1N8
rIqsSfcURXWzVAMma12NVS36HtAY28rU86239dZbWyYv3KusH+TtAAAAAIAs
lZS3q+9fvrxdY5Kq/u3nn39uf3vmoLapz7uW6XXGy1TbRfvRMr2O3GOpb6Hy
cPW9Vv915cw+Vmu+c6G+9OrHeN5551k71Wf9008/tef9dQyNi+rtjbNu9WNU
n0X1bzzllFNsbFi1Oa7rrtehnCZua27erteu5S+99FKyzF/rDz/8YFmQasF4
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
99xQVVVlNWeOPfbYsMsuu1h/b2UcEyZMsPU8G4kzDNXZPeKII8LOO+8cdt99
9/CPf/wjDBgwoNqxp0yZEs455xzrY+91Wg499NCw0047hQMPPDDcfPPNSQa+
rDq9omO0a9cuHHTQQZa17LvvvuGqq65Kav36a9NrOu6448KDDz5oOfvtt98e
dtttN2vvww8/HO66666w55572nnZYIMNQsuWLcPxxx9v52PRokXWVr0G1brX
Omo3ACBbTfJ2v06rXoz6putarHuweiZJ118ZPXp02GSTTaz/+uTJk21e3M/d
68hccMEF4eSTT7bfX3311WQ9lB/ydgAAAABAlkrJ23XMVq1aWRbx7LPP2nzP
OrbZZhub37x5c+vnrd/9p6bGjRuHzz//3Nb1zER9Cs8444xknXj9tdZaK3Tu
3Dm1vsbAW3vttW25svHcGr2alIurlnr8OnMpM1ceHm+nuur+u5ZpH36OdVzN
1z2ECy+8MFlP9QluueUWu0egv5X1xPvcbLPNwvz585P9eP/2O++8s6j3CwD+
jorJ23Wf12udKW/XdVfbq3+77Lfffnb91XdevJ3+1na6Xuta733h//Of/9hy
8vbyRN4OAAAAAMhSCXm7jwGqPFvZhGcRnn+oT6Hy5tVWW81qznz55ZdhwYIF
4a233gpbb7215RfK1nUsr4fesWNHm7/uuuuGXr16hXnz5oXp06dbX3nP3rW9
U80W5faav84664R//vOfYerUqWHWrFnh/vvvt4xeyx544IFU3/t8r0XHaNq0
qdX31XlQP8inn3462Yf3bZSvv/7aXptn8uqvr1xG75va+/3334fbbrvNlqmv
/aeffmr9KVXfwF+r6P6B1rnhhhtSY6oCAKorJm8fOHCgXV/1XaT7nOLXXt1j
3X///e175amnnkr2rTpiO+64o233yCOP2PwTTjiBvL0CkLcDAAAAALKUe97u
49FJkyZNwpprrhk++ugj+9vnex9v1XrJbePrr79uObzy6m+++cbmKTvfeOON
bRvPP2L+TH+LFi2SGvHaRn0QtR/PQmI6trZRjRnv414oK1G+rv71uZThax+q
TePnSdm52q/56t+fb58vvPBC0t5cnvko21dur9o5AIBsNcnbfR19j2655ZZ2
He7Zs2eSw+t77vzzz0+eO9J9Xr8Peskll9g8Zez+DNdJJ51E3l4ByNsBAAAA
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
AABAFvJ2AADSyNtRCHk7AAAAACALeTsAAGnk7SiEvB0AAAAAkIW8HQCANPJ2
FELeDgAAAADIUql5u7cBtcP5A4DCyNtRCHk7AAAAACBLpeXtyjw89yAzrh2d
N006j+QEAFBdbfN2XVu1rdavyXdUfC3mO60ykLcDAAAAALJUUt5eTv+m9XMw
bdq00LVr1/Dkk08WfS7q2p9//hmWLl26zPXIeAAgrTZ5e3w/2Ok6nO8aq/0v
WbIkNU/X65pcs1Fa5O0AAAAAgCyVlLfLqFGjwr333hvat28fBg8enGpPffLX
MWzYsLDSSiuFddddN/z4448la08x3n777XDDDTeEBx98MEyZMqXUzQGAslNs
3h5/j86YMSN8//33BZ/Fivf1xx9/hEmTJoVZs2blXY7yQ94OAAAAAMhSCXm7
H0/Z8FZbbWX5tqZrrrkmtbw++ev45JNPwpprrhm22267MHv27JK1J5f6VKrP
/csvv1ytv+Rpp52WnMP99tsvzJkzx+aXQ7sBoBwUk7f7umPGjAnnnXde2Hvv
vcNOO+0UTjrppPDQQw8l11avNSPfffdduP7668MJJ5xg6+6///6hbdu24cUX
X6zjV4blRd4OAAAAAMhSCXm7b/PAAw9YRrzrrruGd9991/bhy30dr00etzNu
t9fIjX9f1rHjffvv/vPjjz8Oq666qt0HyM3bff2ant/c9ePjLatdua9p5syZ
1q6mTZvaexTXE/7hhx/CM888Y+dR5/Odd97Je74A4O+qpnm738/86KOPkvvB
DRs2DE2aNEnua7Zp08a+6/w6rfug8b3jxo0b231b/b766qvbM1zCNbk8kbcD
AAAAALJUUt7erl27sMoqq4ROnToVdUypSd/EWFbWHe+vUN5ebE6S1b6s/RWa
P3nyZMtumjdvXnC/d955p53Phx9+uKi2AsBfXU3ydr+/OW/evNCyZUu75p57
7rnh559/DgsXLgxDhw5NcvXnnnsu2a5bt24276KLLgpVVVVhwYIF4bfffguX
Xnqpzd9ggw3C3LlzbV0y9/JD3g4AAAAAyFJJeXurVq0si+jVq5e1QTVTRM/l
f/vtt5aHKLfQv3/79Oljtd7j9qo+rua99tproV+/fraNj1eXlVv/P/buM1iO
6mzXsLEBI3LOWGQwwWQTPnLOOdiAyNhgTM6YjE0yGYPIwWQZMKEUiiAJCUQW
Auo7KoNARRAiI6Bk0o8+da9Tb581o5nWbAX2jLivqq6t3bl7evfA06vf9cwz
z6T2iGQn1OTNNcrbY3/JXF555ZW0nTjOquwk6vg+99xzaXv9+vVL5zjEsuzz
iBEj0rygbjzt/e+88850Lvj99ttvL6abbrpiiSWWKIYPH55yAdZFW0yWZ12X
XXZZOp+nnHLKRD8DSfopaSVvj3HPPvtsMfPMM6d+PKJPjFi+d+/eqc36Msss
U3zzzTdpHN9dfBfV95fKu0eLLLJIunc//PDDNetR+zBvlyRJkiRV6aS8fccd
d0z58PXXX59+j/f4qZ0+99xzpzyc9/bjHf111lkn7Svz9e3bt1hjjTXKaTFE
+8IcGcr48eOLyy+/vFhwwQVr5p999tmLv/3tb8Vnn32W5h08eHDDvJ22ieut
t15ahnaPTGtWv4Zx9P160EEHFdNPP33N9shvOF7ymch2ou06dX8HDRpUrLDC
CuX8u+22W6oDzL9pu15/vO+991653cjbTzjhhK58hJI0zWslb4/vILJx7qXb
bbdd8eWXX6Z7etTv4rnrkksumabz7Bb59wDrIIdnfp6V8l1C3k6/1rDv1PZj
3i5JkiRJqtKJeTtt1xE5xK9//etirrnmKuuR0w7+8MMPT+298e9//7uYaaaZ
0rSNNtqoOOuss4pjjz02LcM4cvGPPvqopobMcccdV2bU22yzTfHXv/61OPLI
I1O2Tl1e5kd93h61X/bbb7+07Morr1xTZ77Z+aTfUuZfddVVi2OOOSZtj772
GMe+Uxs40K59xhlnTLXZaQtJ28n9998/9b1HLfbzzjuv2GCDDVJmQ15PH3wH
HnhgOiayoNiPyNs5LmsWSNL/15W8/aGHHkr30u23377M2xmi/frGG2+c7sf3
3HNPue5G91yeffJ9Mu+886acHt6b2495uyRJkiSpSifk7ZFz/Pa3v01ttsnP
8/G/+c1vymz87LPPLjNlspB33nmnWH311dO0PffcM7UfDPx/Mv3UMS1qwnNs
AwYMSJkHbc2ptRJt2TFkyJBUyyVEPRlyb/ooBVk561xooYXKeSfWRpH1XnHF
FWl/A5n+hhtuOEHNF857PD/gJ1kPxxpt+UE9GqYvu+yyNRk7og7PddddV7aJ
N9ORpP+vK/VkeO7K98Ucc8yRasLkeHeJ/Jx7LX1+58tR9/2WW25Jz4B5vsqz
01lmmaW444470nTvy+3JvF2SJEmSVKXd8/bYFnVQaI9Ovkw99Hxdq6yySmo7
uMMOO9TUOAdZNNNmnXXWlJuAvDkyZ9p2k+HTr+inn36axpE/k41QfyZyEebP
s4/6/lKpO0P99T59+qTf2c9HHnmkZt6uiG1R04b979WrV3muOO/UCma/L7jg
gprl4pxQoz76S62vHR+ZPDlQjx49UhYUffNJklrL2+OeynfHJptsku6566+/
fqrn/u677xZ///vfi3nmmad8Hsw7Roh7MP178H2R1/y68cYbf6Qj1KQyb5ck
SZIkVWnnvD36RKX/0GjnTS30fD1YaaWV0rQrr7wy/U7uHe/rR80U6up+/fXX
5XiyE/795JNPptyazPnll19O42hHT8ZNnXZENpIvF9snb2f91Jihhi/9k7Is
9Wryc9XK+WSd9MdKzQHq0VAvJtqxU9MmMnH6RI12kC+++GLZrj2vGUwtncjb
+YzyWjmxPWoGc16iDgJt7FvdZ0malrWStyPG814UdcXq+8ygDhp1xfj3mWee
WbMMOf0RRxyRaqAxD9k7tcLOOeecsl9rtR/zdkmSJElSlXbN22M+2ghSE4Ws
gvrs5BP1GUTk7VdddVX6Pdq2g1roTKMvUnL42P9Yx8iRI1Mbbwbae5NpL7PM
MmmZqP/e6Pzkefsvf/nL1H6eOvKRsbCvrKvVtu3UuaH+eixPnRvqylPPPZ4z
RF2byNupzf7CCy+kcbGd2K+77rqrzNvp+zWOO0QuT9+r5PrMy3HHOsx5JP2U
tZq35/PyfXLqqaem56PUL4tnwPQbwnPYq6++Ov3erK38Nddck56jcj+mJliz
edW9zNslSZIkSVXaPW8nsz700ENTVrHkkksWDz74YM0+oFnezjxkH0zbe++9
a3LnWJ73+am7O+eccxbPP/98Op7od/Wmm26qaReeH3+Mo24vWXvk5NTgjYyc
rD8/lma++uqr1J9e5PRkLlEzh1r10f58Subt8e/bb789ZfucA85zrMO8XdJP
WVfy9nz+enyHxTPNJ554Io3jfaT8ns2/4z2qQw45JH3fcc+PedVezNslSZIk
SVXaNW/P5//4449TnXLyip49e6b+P6vydmrQxHb+8Y9/lP2GfvLJJ+U6I8O4
/vrr0/TFF1+8rN++zjrrpHHUdEG0Bc+3meft5N5R753+7/j/b+rA0O6d6bGO
erG+vn37lu3Lyf/zbURdmEnN25dbbrkJ6snEzzfffDP188p89NnH+ak/Tkn6
Kepq3h74/uGZb9Qvu+2229J3wfzzz5/G1Yt7Lt9JDNR8557Mc1vE94/ah3m7
JEmSJKlKu+ftec6w2GKLpXbY1H1B5B+N8vaYNmzYsGLuuedO02+44YaadVNf
hpotUd89tnXyySencfPNN19q817vo48+Kv9NPRnq7bKNmJfMhPb0rIP11+fd
9cdGjQGOa6211prgfJxwwgllu/mu5O30E8ty9OMa/cSG6Cv2vvvuS9tdffXV
G557SfqpajVvj/s47djjHh0Yt+mmm6Z78XnnnVfOf8oppxRXXHFFw/VFnxr8
RNyv1T7M2yVJkiRJVdo9b0fkDVFzJXLzaKNOO0DyZ9qyx/zRZpDhT3/6U1qO
Gu1kHO+9916q10KbccbPPvvsNe3KqRlPe3emUcOGXJqMnf5U6fuOPlFHjx6d
5iVvpy0742gfn9edJ6+n/7uLLrqoZn/rz+PQoUPL/bv44otTO/OXXnopZeyM
59jIXiLLoU/VmWeeOWX89JeKyIJinRwfy5GnH3nkkcWYMWOK4cOHpz5SY97r
rrsurZ/6BdEPrCSptbw9vmP4zuEZK/f8Bx54IL2T9cwzzxRbbbVV2R8HfXQw
L/d7+uhm/AEHHJDeb+L+zH2de3HUJuOdI1i/vf2Yt0uSJEmSqnRC3h71xCMf
j3bskV+TZTCerBqRz8e2yKn32muvMsfIh0UXXbTMNfJaKoMGDUpZe6NlVl55
5WLgwIFpPv5fm3Fk7mPHjq3ZbtSyadQmP0ftgQ022GCC7ZDdRF6z9tprl/Vu
yH9iHtrvN1vvzjvvPME68/b6nMe8zrwk6f9pJW+P7yay9F133bXh9wW1zKKu
WHy/8Mw4vrfqB/oD8Z7c3szbJUmSJElVOiVvR+TH9Xn7X//61+Kwww4rhgwZ
kn7Pc5HYV9ZBrfb999+/2HLLLYuddtqpOOqoo4pXX3216XZHjRpVnHbaaWm7
m222WfG73/2uOOecc2rqybz11lup/Tz9stb3S8qxUZuGfkhpw5gfS/3+Uff9
uOOOK7beeuvUrp19I0vn/HJsHHOsn+3/+c9/Lo4//vjUjr5+vbFO2lgee+yx
xTbbbJNy+4MPPrh47bXXynkvvfTSdD5POumkiX4GkvRT0tV6Mnwf8YyVfj+2
2GKLYo899kh1Y/iui/XldcV4p4p6YbvsskuqOcM7TAcddFDx8MMP16xX7ce8
XZIkSZJUpZPydvKLyNsZ12pd2/o+QOmzLv+9WbvF3Lhx4yqnTynUe5nS9Xqp
Ux9ZffwO6txwPs8666wpuj1J6nRd6S+1Phv/6quvGq4r1K+L7xfec2o2Xe3F
vF2SJEmSVKWT8vajjz465cO0Acz3hXyaDHlieQjzRZt4fiffqFomMv04XuZl
mfx88W+2nWcl+TYZP7F9y/cvxL4xnuXzaTGOearaQNY/k8j7kUWvXr3S+ezd
u3flvknST01X8nbUf8ewfP33RS6+T/J7eL682pd5uyRJkiSpSifk7bE95o8a
twsuuGBN3fWuqG/v3sr8UQtgauvqvk3KOi+55JKiZ8+e5bmkb1aYGUjS/9PV
vL1+2Vbv4z/m94umDPN2SZIkSVKVTsjb8+1SK32hhRYqZpxxxlS3Pd8ftYba
8D169Ej99VFfONrAex4l6f+ZnLxd0zbzdkmSJElSlU7K28Mbb7xR9O/fvxg9
enTN/qg1nL/HHnss9fUaPIeS9P+Zt6sZ83ZJkiRJUpVOy9v9/9opy/MpSRMy
b1cz5u2SJEmSpCqdlrfHOqIvUXVdnD8zAklqzLxdzZi3S5IkSZKqdGLeLknS
1GTermbM2yVJkiRJVczbJUmqZd6uZszbJUmSJElVzNslSapl3q5mzNslSZIk
SVXM2yVJqmXermbM2yVJkiRJVczbJUmqZd6uZszbJUmSJElVujtv//bbb7u0
vCRJP5aRI0emTDW+96QQz2LM2yVJkiRJue7K20ePHp3+P3XIkCHF4MGDHRwc
HBwc2m4YNGhQGrp7Pxzab+C6GDhwYPHDDz906b+DJEmSJEnTtu7M2wcMGFC8
9NJLDg4ODg4ObTk8/fTTKVN98cUXu31fHNprGDp0aPHkk0+at0uSJEmSanR3
PRn/P1WS1K74nuPZsFQvag1ZT0aSJEmSlOvuvH38+PFpfQ4ODg4ODu0y0D8q
P6NGN8+Gu3ufHNpjiGvD/lIlSZIkSY10d97+3//+t0vLS5I0tcV3VeTtZKwS
4towb5ckSZIkNWLeLklSLfN2NWPeLkmSJEmqYt4uSVIt83Y1Y94uSZIkSapi
3i5JUi3zdjVj3i5JkiRJqmLeLklSLfN2NWPeLkmSJEmqYt4uSVIt83Y1Y94u
SZIkSapi3i5JUi3zdjVj3i5JkiRJqmLeLklSLfN2NWPeLkmSJEmqYt7eOva9
q+dqUpaRJHUv83Y1Y94uSZIkSarSiXk724+hU5HdTAv5Tad/DpLUiHm7mjFv
lyRJkiRV6bS8/cfOdmN7P/zwQ/Hhhx8WY8eOTf9uBccay3z33Xc165Mkta9J
zdvz58ETu9/Xz+v3Q2cwb5ckSZIkVem0vB1ffvll+v/ccePG1ezP1JBnLmut
tVax4oorFqNGjarcboz/+OOPi1VWWSUtM2zYsHL6t99+W1x33XXFlVdeWXz1
1VdT/RimtNhXniGMHj26eOedd7p5jyRpyupq3l51D6+f1koOr/Zl3i5JkiRJ
qtJJeTvLHn300cVcc81VTDfddMVZZ51Vsz9TQ+zvyy+/XMw888zFz372s/T/
2FXbjfEffPBBMf3006dlHnvssXL6fffdl8Yx3HzzzTXbaUe05+cZR7Trj9zp
lVdeKZZYYomiR48exfrrr59yKZgVSep0Xcnb83se36nXX399ccEFFxRPPfXU
BM+F83nffvvt4pZbbinOPffc9Ax2+PDhLb8/pe5j3i5JkiRJqtIJeXts7+GH
H04Z9S9+8Yti+eWXL6699tqa6fXLTIncN/aXbHm++eZLmXueKzfbNqgjM8cc
c6Q8+oknniinP/roo8Xcc89dzDvvvEX//v1rttNo+5NzHJNyHmKbsU99+vQp
FlhggfScAJE78flvvfXW6Rj5XLbccstppi69pJ+2VvP2uFfyrtKJJ55YPkuN
Ydlll025e8yL8ePHp+fF9fMy7LPPPimj97ll+zJvlyRJkiRV6YS8PZY54ogj
Uh6x66671uzz999/nwb2i0wkaqUzD+Prj4/5aEPIfI2OPaaxrjxvn2eeeYqZ
Zpop5S/Mw7pj/th+fn7I22ebbbbil7/8ZZm3xzR+jwwmHx//Zn15e/J8/RPT
6PhYvlFeFOcrMvbYJr/Hds8777x03i+//PI0L/Vw8jaYHAft+BdddNHi3Xff
LZeXpE7VSt4e90zmPfvss9N9kueoJ598cnHppZcW2223XRo355xzpmyW+b/4
4ouiV69eafwiiyxS7L///sX5559fHHTQQen7gvGHHXZYuX61H/N2SZIkSVKV
Tsrbd9999zL3ZR/IfZupX++k5hb1eTvZebRvx9dffz3BMlV5e2T0zdTvJ3Vc
uqLRcUaNeLTyWddvkxyJ+j233377BNuK9dFen+HFF19Mv9vGXVInayVvj3Fv
vvlmsdRSS6XvpzvuuKOc/s0336Tnw4zfd99907hPP/00ZezrrLNO8fTTT9es
75xzzilmnHHG9M4Q/X+oPZm3S5IkSZKqdFLevuOOO6bc4pprrqlpi33kkUcW
Bx98cPH++++ndTLfGmusUay77rqpzeDIkSPTfDH/559/Xpx++umpFsqIESPK
Y4rptOdmGnVU4ljJ26kbT37O/2OT+W+22WbFqquuWmy88cbFGWecUR5L7G+z
9u3s55577pnaONLfaIyP5T788MNUl4D1sv4NNtigOOqoo1I9+Pz8NztP7Afn
iG2Q6ay22mrF5ptvXpOXx7GSDW277bbFs88+mz6TXXbZJfXxyrFRP+bAAw8s
cyT2hWce22+/fao1HOshc1pwwQVTRhT5kXm7pE7WSt4e99HHH3+8+PnPf16s
tNJKqRYMz1WpGYPnnnuufDeKeyx4TjtmzJhyHeTy/OT9oIUXXjiti3Xm+6H2
Yd4uSZIkSarSSXn7TjvtlHLfG2+8Mf0eWQd1TBj/m9/8puyfNB969uxZvPDC
C+X63nnnnWLFFVdM09iH2EbUoaHvT6adcsop5TLk7fPPP3/KQRZbbLGGdXfJ
oWm7GBrl7XjttdfS/Owr/bAits18Sy+9dMP1L7fcculZAeoz9zgXgwYNSsfb
aPkZZpihuOqqq9J88W7A4YcfnqYdf/zxxVprrVXOS338RrWIYyCHz/d7oYUW
KmafffZi8ODB6XfzdkmdrCt5+wMPPJDeAdpjjz3K2utRzww8/+W+2bdv35p7
d6wz6nnRfyp5O32UDB06tGY/1D7M2yVJkiRJVTohbyeTYJv0x0mmcdddd5Xj
QXtscnCmUS+XeuKfffZZceedd6YcmJyDtt7R3pC8fe21106ZBv+vHPsV2TFt
25lGHZVA3k4bbtbF+/7Ukh81alRa15lnnpnGMe2iiy6qrCcDzjlZO20eWW8g
a+FYIlt/5JFHUm0X2uBvuummaX+atW2Pc/Hqq6+mZTfZZJN0fmkrTxv6eFbB
MVBfJuY/9thj07Fy7jiGCy+8MK3j9ddfL957772036yLZf/85z8Xzz//fDFs
2LCybWZ8nosvvnhqv0mexLrz+u6S1Gm6krfT7zX3SN4linpckbXzk+8b7rHx
XlDeN0i+Ht4pinoyUavMGu7tx7xdkiRJklSl3fP26AMVtPsmu37yySfT7zGe
du1kHX/84x8nWJ56KWTbtO3mWEFGHm25BwwYUO5X5O3k+kw766yzyvVE+3ay
6fo65vjDH/6QlqH2y0cffZTGUf+lWd7O8wHq00TezvbPPffctA62EzVwJgU5
eX2deLJ/MnHWH+0mccwxx6RxeRaU45zwrIJ5evfuPcH0uBaofcMxXXvtteVy
ktSpWsnbYx7eWYpnuzfccEM5nueShxxySPleULwzla8r+scmX99hhx3KPsFj
mtqPebskSZIkqUo75+151nD99den3Hy++eZLNVuYFtOpmUtGQV4c/ahG+0H2
Meqz9OvXL80/qXk77dF79OhRvPXWW2n+fBgyZEhahkyb9uGgTnureTs1CKhH
Q+5NbXn2P9r1R22CVrKX+nk4z4899ljKwaPuzj333FNOp30746h3EM828u3R
Fj76qaUWTV5nPt/eJZdckuYhd+ecS1InayVvj/mYdtJJJ6V7IM9kqbfF7yuv
vHK6/9OXNNOo0YV8XfFvvr+Yd5ZZZknvF8G8vT2Zt0uSJEmSqrRr3h7boC4M
/aHOPPPMqT74zTffXLMeRN5+xRVXpN9pKxjTaWtOLZa8fTZ90k1q3k7NlGgn
n2fPnAuWIS+J9uOt5O3Dhw9P42iTvswyy6R13H///WlcV2uyxDkjv7n11ltT
bZ1YZz5E/XtE3k6mnj/DiJ+0uYy8/eqrr66ZluNz2mKLLcpaONSRj/MqSZ2m
K3k7w8cff5zy9Kg7FvdCnvNuuOGG6ffzzz8/LZPXbceLL76Y6rbn3ztm7e3L
vF2SJEmSVKVd8/aYjxz617/+dcoh1llnnZT/1ucQkbdHX6B53k4dFbKOvF5K
Vd7OuiM3bpa3k7/EecgzGZbhucCk5O2cjwUWWCCtg7rtrLsreXvsxyeffJJq
EbB+1kXfr5dffnmqwUNbS8bdcsst5XKRt++8886TlbeDdxAiZ2r0XESSOkWr
eTvyeyLvT9HnBsuRwWPNNddM90X6FIl1x/rpBySei+62227pOzG/F6v9mLdL
kiRJkqq0a94e2yAD/9e//pWyYurJ7L333jXrQd6+nUyEvD3qyVAHPerJRN13
8pDf/va3aRz7ELl57Mu222470fbtUW8lchP6aI32jPw/OKjd22reTq33PA/P
8/ao81KV98T+nHrqqWkdPXv2TG0m8/O03nrrpWm0fQ+Rt++yyy41571Z3h45
UP18Tz/9dDo3vINALXvOcT5dkjpJV/L2mL/Rd+nLL7+c+uTgnh/9csS6yOPp
S5X7K8+AqVUW937vne3LvF2SJEmSVKVd8/b6bf3nP/9JbccZIrOor99O+2qM
Hz8+1XDHP//5z7LOy5tvvpnG0eZ9k002qcmeo5bMl19+WbZFPPPMM8v9iLyd
9bDv+Oabb8rjif5SaRtPbRVE3k4Ozf+Tx/42qt9Ork2/pIwn74+sPd/GxM4R
291qq61SW/7bbrut5riYZ7XVVuty3s7nu9dee6V5LrzwwjQ+3gPI5zv00EPT
PEcccUQ53rxIUqea1Pbt4HuNeze4x3JP3myzzWrWS60z3j/ivrnkkkumXL7R
utR+zNslSZIkSVXaPW9HZM+rrLJKyibuuuuumvHRLnzHHXcs+yrFsGHDymV6
9eqV9pV9JwchQybb3nrrrVOfoHE85M5RE4V+SwO5OG0U6QvvjDPOSO3RA5n+
rLPOmqZddtll5XhyfTJ12uU/99xz5fhGeTvox5Ttks3Qtp7nBoEaMzfddFPD
zyrGcRw77LBD2g9q3gfaUJ599tkp+2fdUesFE8vbOcc8S2B/yfJ5LpCL+Wij
yXY5BsbxjoEkdapW8/a4B/bt27e46KKLyu8T8F0V/VRHnxagTtpGG22UxlNH
bODAgel+T1/g9J39+eefp/WY47Yn83ZJkiRJUpVOyNujVgrZOPnENddck8bX
5+0M9Dl3wAEHFPvtt1+xxBJLlONee+21NG+096ameSyz+eabp2WoO0P7dWrp
kkvX5+3Rn128+0+b7j322CMtwzj6ZaWNeeQy5CbMx7rog5W68Xj99ddTNj33
3HOXeTvHwvy///3vy22Qbx922GGp3XuPHj3SuDiO+jaQsc2//OUvaT6yfJ4p
HH300WXtHAZyc3L7cNxxx6X9q8/b83Vee+21ZW16+mA95JBDir/97W9pWuTq
Sy21VDHLLLMUjz/+eM2yktSJWsnb87bq0c8I7zjxng/9aHDPZNzBBx9cfl+R
qfO9wfgZZpgh5e3U7KKfEd674nuELJ7vAt6Ryrej9mDeLkmSJEmq0il5O2i/
nveLGvnFCiuskDJj8omoLRMD7+u/9NJL5XpioG7MPvvsUzMv9WL69euX2oLz
+0knnVTuA/3fkZ0stthiKe/Pl4v285GNxPlhO9SkiXnuvvvuNJ7MnN9pE896
82MhcyczZ1q+/vnmmy/19/rFF180rDcQx0XuQ597+bKs68EHHyzHR90dHHXU
UWV/qfm+5+edc5W3+2fgPPPsIp6FcF6o3U4de5i3S+pkreTt0YcHbdMffvjh
8n2qGKgldv7556fvuVieemjR5r1qmGOOOYq33367Zl/UHszbJUmSJElVOilv
j8yXfjvJp6OtemTsvXv3TrkHtVvuv//+lJPE/jXKqGmbTfZNf6xk8mTdoPY7
tWDy2ils78MPP0zv+YM2itQAePTRR1PfoNHOu/5csj/8/zjbYPlYF+snG4+c
vX4fye6pP3DfffelfYzttoLzQi3gPn36pDw/jotzzXbzc07NAsaR41fhnNAW
n/159tln0/wca+w/tXbmnHPOVMMH5u2SOllX+0sFzyb5XnzggQfS99Ann3xS
Tov7O+vhPSjuuwx8LzAfdb/ygXnMcduTebskSZIkqUon5e3UiKEeStQyCZG3
R7v3Zvs7sXFV41sxJf6fu2r7rfRBOjWOq5VlqXdD5h71bszbJXWyrubtE7t3
a9ph3i5JkiRJqtJJefvFF1+ccvU111yzuPfee8t37anfTg5Pu3f2jfbdkU23
kk83mrdZRp/3J9rVbUxs3MS21RWTelwTW2c+P23jhw4dWpx88smpHv2yyy6b
2ndGjRlJ6lST0r69/r5b9fyzlUHtybxdkiRJklSlE/L2wDK0oY76tqeddloa
v/zyy6ff6QMVUdtFU0fkTtSsoeZ9/eeR18iRpE40KXm7fhrM2yVJkiRJVTop
bwd11sl1995771QjF1tvvXWx5JJLpjbvMO+duvLP8Nhjjy0OPvjg4oYbbkht
222TKWlaYN6uZszbJUmSJElVOilvz7Nclov8g75L6XPum2++6dK+aPLwefAu
QfRbK0nTCvN2NWPeLkmSJEmq0kl5e7682ov1hiVNS8zb1Yx5uyRJkiSpSqfl
7fX7EP826+0enntJ0yLzdjVj3i5JkiRJqtKpebskSVOLebuaMW+XJEmSJFUx
b5ckqZZ5u5oxb5ckSZIkVTFvlySplnm7mjFvlyRJkiRV6e68ffz48WUNcAcH
BwcHh3YYyNf5GXn7Dz/80O375NAeQ1wb5u2SJEmSpEa6O28nw5AkqR3xPTdg
wIDu3g21oZEjR5q3S5IkSZIm0J15e79+/Yp33323GDt2rIODg4ODQ9sMY8aM
ST9ffvnl4vHHHy9/d3CovzasNSRJkiRJynVX3j569OjiscceK/r37188+uij
Dg4ODg4ObTeQpw4ePLjb98Oh/QaujUGDBvmeniRJkiSpRne2b+/bt2/x8ccf
F+PGjXNwcHBwcGib4Ysvvkg/X3311fRs+PPPP+/2fXJojyGujREjRqRrw3oy
kiRJkqRcd9dv/+6777q0vCRJP5ao0S3Vi750zdslSZIkSbnuztvHjx+f1ufg
4ODg4NAuAzW5+RmZKjVDunufHNpjiGvjf//3f83bJUmSJEkT6O68/b///W+X
lpckaWqL76rI2+0TUyGuDfN2SZIkSVIj5u2SJNUyb1cz5u2SJEmSpCrm7ZIk
1TJvVzPm7ZIkSZKkKubtkiTVMm9XM+btkiRJkqQq5u2SJNUyb1cz5u2SJEmS
pCrm7ZIk1TJvVzPm7ZIkSZKkKubtkiTVMm9XM+btkiRJkqQq5u2SJNUyb1cz
5u2SJEmSpCqdmrfHPkzKcv6/8aSZ1HMuSZ3GvF3NmLdLkiRJkqp0Wt5O5hG5
R1fzX/PiyRPPKn744QfPpaRp2qTm7XGfZGj1PtnV+dW9zNslSZIkSVU6KW+f
Ev9P+/XXXxfvvvtueQztkm/EsfF5XH755cW9997bLe0p2Y/vvvtuoue6Xc6b
JE0Nk5K358+DwX3y+++/b3q/ZF6eXzb7Xe3JvF2SJEmSVKWT8naMGDGiuOSS
S4qTTjqpGDRoUM3+TAxZ+z777FOsvPLKxW233ZbGtUuNADIZXH311cXPfvaz
Yvnlly++/fbbbt6r//95vfPOO8UFF1xQnH322UXfvn27ea8kaerqat6eT//o
o4+K0aNHVz7Xzb93x44dm54DN1qX2o95uyRJkiSpSifl7WS+iy++eMqjGQ4/
/PCa/ZnY/r7++uvlsjvuuGMaR67RDm21I2+/8cYbi+mnn75Ye+21f9S8Pc7B
q6++Wlx44YXFm2++mX6PtpaPP/54ee5mmGGGtJ/5dEmalnQlb495X3vtteKQ
Qw4p1llnnfRcd7fddiuuvPLKcr76/P25554r51999dWL/fffv+jfv//UOiRN
IebtkiRJkqQqnZC3xzIXXXRRynt//etfF3fddVfKhKPubdWyMX38+PHFaaed
Vuyxxx7F008/ncblteDz+rn8rM/h6+dptK1m0/JlG60n8vbrr78+HeOaa67Z
ct4+sXXXz5f/Hvsdzx3OOuustP1//vOfNbXav/jii5Qr9OrVq9w/PjtrDkua
FrWat8czx6FDhxZLLLFEuj/OOOOMxWKLLVY+ozzggANSnS7ulbGep556qub5
cY8ePdLPOeecs3jwwQfTPN5b25N5uyRJkiSpSifl7fvuu2/x85//PGXmzfZp
Ukwsr58crdZBn5S8vT4/7+q2Gzn++OPTOb7vvvsaTh83blyavtRSSxVvvfXW
JG9HktpZK3l7PG/kvrj99tunezfPc99///3i888/T7W3FlpoofIZZizDsMkm
m6Txu+yyS6o/88knnxRHHnlkGrfoooum58Mwc28/5u2SJEmSpCqdlLfvtNNO
KYugxjnjqHk7cuTI4u233264HPnIqFGjUl7CfrLf1KShXTzttfNj+eqrr1Jt
eNoV9unTJ/2bDCXH76yLddQjG+f/vanZG9l5npN8+OGHxRtvvFE88sgjaWA9
edv6yWnf/umnn6ZzQM2XBx54IO07tepD7AeZDucrPrNXXnmluOeee4rBgwen
Y+NckRWx/UsvvTStk3P12Wef1bTLnHnmmYuFF164GD58eHmeJWla0kreHuOo
CzPrrLOmIWpxhauuuirVCOO9rLin9+vXL81Lm3Zy9kAb+BVWWCHdg2+++eaa
bah9mLdLkiRJkqp0Ut5OzXVyiGuuuSb93rt37/T7HHPMUebn+f5Rr52cg0zj
+eefT+Nol80yLAuyDPqp23bbbcv3+mPYfPPNU4Yd66MOL+OpsxvLxr6RPTNt
2WWXTeclpvPv888/v6wzkA+HHXZYyrlZf+QwreTtUTfmvffeS/Mzb/26d9hh
h9TGkvnIcEBNA6bde++9qc/ZmJf8/Nhjj51gHTH86U9/SstHbRlyogUXXLB4
8cUXy+OUpGlJK3l71JLhGSr3ym222ab48ssv030y7pc8a437PzVkcMIJJ6Tf
99prr/R7/sz1qKOOStO23nrr9HuMV/swb5ckSZIkVemUvJ1tRt5+yy23pPFj
xowpfvWrX6X6JrfeemtNG2zQrnC66aYrdt999/RuPtPJw3/xi18UN9xwQzlf
ZO1LLrlk8Ze//KU499xzi6222iqNO+ecc8r5LrvssrTsb3/72/R7nrfTVpxs
f6WVVirzdkTN+fnmm6/43e9+V5x++unF73//+2KmmWZK41lnnom3krdH/kLb
9MjEd9555+LEE08sjjjiiGLeeedN4/bcc880X6z7wAMPTPtPX6zx3OCggw4q
LrjgglQPn/cHaLfOtDXWWKPYZ5990r7+61//qvkcZptttnQ8w4YNK8+DJE1L
upK3P/TQQ+Vzzsjb8/v6xhtvnL6L7r777vQ7/aIyf96XamyPWl5MW2211WrG
q32Yt0uSJEmSqnRC3h45Bzkx2Xr0JQcybHIM8mZE/sF21l133ZRbXH755eU0
8nbGXXfddWkcbQ9p/z7LLLOU9XVBjRb+P5plYp/Jxll2rbXWKvcrz9uZRi2A
//znP+V6+Dd59ssvv1zm5KyT9uTk8+xjXrem1fbtoE3/xRdfnGoE558Dbdc5
JnJxnknEPpKtRz5PrWE+g2hbz0/qzcRzhhtvvLHsL7Vez5490/qpiZCfc0ma
VnSlnsygQYPS/XyuueZKNcUQ92nqdS2wwALpvsrzV8SzY55z1m+Pd6qiX/C4
r5vnthfzdkmSJElSlXbP22Nb1GqfZ555UrvwV199tVzXo48+mrKJxRdfPOUc
MT85N9n8YostlrLwaPseeTu5NsisyUho901bw+jLLheZSlfz9mgPnotseujQ
ocWMM86Ytv3BBx+U0yelfnv9ufr444/TcfMcYuDAgeX0yNvJy8nh4xhiOfr3
o4ZB3rdftNPM0b8f8/ztb3+rOT+SNK1oJW/P77kbbrhhui9uuumm6fkqz3Lp
aySydoaTTjqp+Oabb4r1118//R7PLPP7LMty7+bdreibxDy3vZi3S5IkSZKq
tHPeHjVwqY1OLXXyic0226ymbgzTF1100ZRP5DViqJkedVby7dbn7Tj44INr
arbz/89kz2FS8/Y8n6FPPNo5nnbaacX//M//FHPPPXe5Tc5F6EreHp8D7eNf
euml4sILL0zt0xdaaKG0DtpbUpsgUE+G8dSIAe3tWUc8F6BNf+Ttt912Wzmt
fns84+BZAbVn6FeV+gn5dEnqdK3k7Yjx3BfzbD0G7skrrrhiWZ+MGjPUl+F3
vgOR5+0vvPBC+Vw0+uY2z20v5u2SJEmSpCrtmrfHfPRlynv18X49bQbrnXzy
ySlvp954tNdeZZVVUpv1a6+9Ns0TmUh93s548o+jjz66pk9T8m7aeJPnT077
djJztkVbRaZTh4XshTrvUcN9UvL2PPsmv2cZ2vPTHyzL0gcqx0+N9xB5+377
7VfzzCLW9dlnn5V5++23314zrf7fZ5xxRnmu7r///gmmS1InazVvz+fl3Stq
hdHWfbvttkv1Y5i20UYbpe+of/zjH2m+XXfdteY9onwdbItpfE/E96P31vZi
3i5JkiRJqtLueTsZcPQtt/TSS6da5bEPsR+RdZM1v/XWW8Ubb7yR2nbT1pBa
LXlWUZ+3RxtvsNxZZ52V+gqNLJla6IG23M3ydmoA1OftrJs254ynljqZPrV5
qSfw2muvle3QeaYQWsnbY5v0Y0o7c+bnHFHXnro7IM9nfKP27b169Sr3P85l
nOuqvD1QOyFqytDG/dlnn206ryR1oq7k7Wh2/+P9n/je6d+/fxrHvZj8/e9/
/3u5XLxnxL03+qwGz3y9t7YX83ZJkiRJUpV2zdvz+cnMzz777JRBLLnkksVX
X31VU+uE/Jp8mvyCPOOaa65J8+62225pep6TNMrb85+xbwcccEBqL7788sun
fBnUd2fZ1VZbrWxHH/XYR44cWebtnBfkNeep45ufv+eee65YcMEFu5y3RybD
eY9s/Pjjj6+Zh+XinYDJydub1ZOh/9eoU/z888+X/a1K0rSiq3l74LuEd6a4
R7OOO++8M30HzDvvvOkeizPPPDPdQ7nfgvtnfAdFPxu77757uT61F/N2SZIk
SVKVds/bY1v8pE477dafeOKJNC4yb9bJe/pkFKeeemqxySabpH//+9//niAz
blS//fXXX59gey+++GLK2+mHlfrxuPvuu9Oy9EVKW/hAtkI2wrTlllsuZe+g
r7uoo07/qIjs5IEHHijbpkeNXlx33XVlG/pG+U5eZ2fddddN+xj1XGIan2nU
Ee5K3k47TOrd89yCejHNUBuBWjW33HJL+j2eOUjStKLVvD2/f/IsOMe4LbbY
It13eXcqDBkyJD2L5Ttg1KhR5Xie7fJMOa/TZZbbfszbJUmSJElV2j1vR2TU
UQM3+kUl583r5lKzfI455kgZBm3HG7UPp/35DDPMkHJt9OnTJ9VUpy08/+/8
9ddfp5x83333LduZ0x8pOFesm6yZGuhk3k8++WSZ77Ne2pVH+3ZqzUd28oc/
/CFlKdFWn3UwsExev516vown56eP1XpRR4eMn2w8+pBlm2Q9PEeYf/7503jO
R563H3LIIWl7tN1Hfd7OT/aTZVdeeeX0jIBj4Hzk81GLnvM8aNCgtA7bX0qa
1rSSt8f9mO8inmcussgi6XuNnJ0+rHfYYYd0P+WezPtOMS8/qe/ONJ6bUgeN
+/0ee+yRxvFc2Ay3fZm3S5IkSZKqdELeHjVUtt9++5RFXHXVVWl85BYM5OSR
XzAcfvjhDdc133zzpelXXHFF+p128VHXpX6Ye+65i7vuuqvcFiKHz4fZZ5+9
OO6441K+zb+jfTs5dNTBqR9ov876+ffo0aPL/RsxYkSZl1N/gFy9vlZL7Mtt
t91W9rmaD+uvv37aj7wOOyLLofY68vwo1kk9nvp1br755mX/qvykXSb7SE2c
+vVI0rSglbw9vpvGjBlTfj/VDz179iwee+yxCdZLPx+rrrrqBPPTr8ewYcPS
PNbpak/m7ZIkSZKkKp2StyPac1NHHZERx3SyYtqdM5BbN3LyySen6bzPH8jH
TzvttJTXr7POOqku+T777FMMHDiw5nhBG/KTTjopZdC0t6dN44ABA9I8J554
YsrdaRMeGH/ZZZcV22yzTbHBBhsUe+65Z3HjjTem4ybzZ18+//zzcn4ynfPP
Pz9l5hzvF198McE+5L9T44Y2lOutt17K0c8555yU8996661p3ZGJ4+abb07j
+Jmft3qsc8cdd0z7wDmhT7/ImvhJ369kQvQRG+MkaVrS1XoyvE9F/9q8KxX3
zqOOOqp48803a9aXL0O79mOPPbbYcsst0/cO7yDFfVXty7xdkiRJklSlk/L2
qJFO+/YpVcekPkOhP7u8Dk2zc8O2aVMfmrVDzMdHdt5MPi/1COgHtkq+b3lm
PzltIvNlP/3004bbox49Nexfe+219Lt5u6RpTVf6S62/59bf6xt9j+TLsO78
fm9+297M2yVJkiRJVTopbz/yyCNT3n7ooYdOsC8gsyArZ2h2TNRnYXqenTAv
+Xm+DL83q9eb5/wxX9RUb1T/hXliHP+OOjj8m32pn78r+TXrytuex7YYX38e
YtzE+jfN1xnnJtB3LJ/B8ssvn+oRxzySNC3pSt6OuKfn713xfVB1f4x54juA
f/v8sv2Zt0uSJEmSqnRC3h7be/jhh1PWS3+iSyyxROpbNJ8+uVhP1ONtdd6u
rrtVre5Hvu4pWes31hnZEZkT9WroJ5XPYKeddipzfUma1nQ1b69ftiv34+iH
RJ3BvF2SJEmSVKUT8vZ82YMPPjj11znddNOlWuX5/mjKi4yJ/vuoIdOjR49i
5ZVXLp555pma6ZI0LZmcvF3TNvN2SZIkSVKVTsrbA/+PS1v3UaNG1eyPprw4
t+PGjSsGDRqUhvHjx3fzXknS1GXermbM2yVJkiRJVTotb/f/a9uDzzgkTcvM
29WMebskSZIkqUqn5e2xjuijVD8OzjXn3PMu6afAvF3NmLdLkiRJkqp0Yt4u
SdLUZN6uZszbJUmSJElVzNslSapl3q5mzNslSZIkSVXM2yVJqmXermbM2yVJ
kiRJVczbJUmqZd6uZszbJUmSJElVzNslSapl3q5mzNslSZIkSVW6O2//9ttv
u7S8JEk/lpEjR6ZMVaoXz2LM2yVJkiRJue7K20ePHp3+P/Xpp58uhgwZ4uDg
4ODg0HbD4MGDi0GDBnX7fji038C1MXDgwOKHH37o0n8HSZIkSZKmbd2Ztw8Y
MKB4/vnnHRwcHBwc2nIYOnRoylS7ez8c2m/g2njyySfN2yVJkiRJNbq7nsz3
33/fpeUlSfqx8D1nPRk1ErWGrCcjSZIkScp1d94+fvz4tD4HBwcHB4d2Gegf
lZ9Ro5s2zN29Tw7tMcS1YX+pkiRJkqRGujtv/+9//9ul5SVJmtriuyrydjJW
CXFtmLdLkiRJkhoxb5ckqZZ5u5oxb5ckSZIkVTFvlySplnm7mjFvlyRJkiRV
MW+XJKmWebuaMW+XJEmSJFUxb5ckqZZ5u5oxb5ckSZIkVTFvlySplnm7mjFv
lyRJkiRVMW+XJKmWebuaMW+XJEmSJFUxb5ckqZZ5u5oxb5ckSZIkVTFvlySp
lnm7mjFvlyRJkiRV6cS8ne3HoCLlQD/lLIhr6ocffjDz0ER531CrzNvVjHm7
JEmSJKlKp+XtZmWSJpe5uyZmcvL2/JnwxK6zrsyr9mDeLkmSJEmq0ml5O1jm
zTffLL766qua/fkpiWP+7rvviltvvbW44YYb0r/zadO6uJa4hs8///xi2LBh
NeOlHHnpmDFjivfee6+7d0UdYEq3b8/vy61k8Gpf5u2SJEmSpCqdlrefdNJJ
xYILLljMNNNMxbnnnluzP9Mqztk333xT8zlRPwW9e/cupptuuuJnP/tZcfXV
V9dMm5ZFW1DOyQYbbJCOf7nlliuvp2n9mmiEPJBnLj/17IfPnr+XyEfjfLz9
9tvFmmuuWcw+++zFOuusU7z88svl/FK9rubtcR2NGzeu6N+/f3HxxRcXN910
U1q+ma+//roYOnRocfnllxd33XVXukZ/CvfvTmfeLkmSJEmq0gl5e2yP+clV
GXr27FlceeWVNdPz+VvJ0Cbl/f2u1AeY3HXGubrtttuKX/3qVynDifkjk7n5
5puL2WabrZhnnnmKf/3rX2lcs1xoStQrqFrH1KqH0KjWQvz7+++/L7beeuui
R48excYbb1y5H+1ar2Fyr9cYd+GFFxZrrbVW8eCDD6bfq/LBqXntT47J2a9Y
7qmnnkp/LzyLQpyHd999t9h+++3T3wv3ELJ36/6rma7k7TEv8y299NLp+vrF
L35Rfl8dd9xx5ftYzPvZZ58Vl112WbpvxTwxbLXVVulaVfsyb5ckSZIkVemE
vD2WOfLII1MesdNOO5W1U3JkZ4yP7I1/12ckkVXn08hsG7UpjHUwPZaLfYmf
TIt9ifbFMT2WayTmZZ74vX5+tse4E044IR032TrLfPvttzX727dv3+Lxxx9v
uB3Wlx9frLOVTDOOLdqRx7GxDoZYR+x7ftyNjrd+v0Osu365+n2P3+s/g3fe
eae48847y4yq/tjiXOc1eLpaGyK2zTHU/73EddKobXn9NZSLzyI/B43+FvPr
CvXXa1zPu+22W7pOrrrqqvQ7f5v1xxmfz8SufebjWJkvjj3Gx/UQ0+uPJa6P
VnXlbzKuo0b7Fftw4403pvNw4oknpnXS1j2/tp599tnUxp2sk7ws9kHKtZq3
x/iRI0cWiy66aLr29txzz+L2228v/vrXvxZLLrlkGnf88ceXy5xyyilpHNfh
rrvuWpx++unFn//852K++eZL49dbb722fT4o83ZJkiRJUrVOytt33333lEXQ
LhB5BllfayXPKWJao/xi/PjxDddRhfyu2T7G9qvUb6fROcz3k7aR1Ix5+OGH
W9q/Rutotp2uqs/E82NplLNPKdRdyLfVag5Vf67zfezOjCTfdv3fQKNrF+w7
56EZ2vlzndx9990Np9efs3y7rZyLZn+r+bJd/Xtq9DeZX6eTsl/XX399Og/U
9K8X94yVVlopzfPEE0+k3ye3NremPa3m7XFPueCCC9L30+abb14z/cknnyzm
mmuuYoEFFijXMWTIkOJ3v/td8dBDD9XM+89//rOYddZZixlnnLF4/fXX0zgz
9/Zj3i5JkiRJqtJJefuOO+6Y8oxrrrmmbBObZxH33HNPsccee6R63htuuGGx
3377FYMGDarZZ35Sn+Wggw4qNttss2Ldddctdthhh+KWW24pp8e8X3zxRXHA
AQcUf/vb39K2rrvuulSzhLaHrIOchTaJRx99dJqf/+9m/vXXX7/YdNNNU635
yB/rc0XyFpbjmKglveWWWxannnpq8eWXX5bzDBgwIO3nMsssk46b9e6///7F
XnvtVWaq1Ps95JBD0vDRRx9NsK1PP/00taXcbrvt0nbIZGlL+cknn9Scl1yM
O/vss4s//OEPab2vvvpq2hf2YZtttikuvfTSVKcYzzzzTPHHP/4xnXeyJurq
0wYZ8ezh3//+d2rHyTmM9cfn+vTTTxe///3vi5NPPrlm+1wbnHv2mX1n/Ycf
fnjxwgsv1Kybdv8777xzWne+3vw87rPPPsVGG22U9p/z98ADDzQ9/kbngmM9
77zz0jE8//zzNdM4l0cddVS63mJa7AP5OMfG9FGjRtWsm/avu+yyS7oGuV64
lkaPHj3BMTzyyCOp7fr//M//FL/97W/TsbJsZHfUEeL4yPO4TjhXXIf8LTz2
2GM16+NdgGOPPbbm2qe/3RDnlL8bjrVfv37pmvzTn/6U5ufvin187bXX0vSo
YXTFFVek/eJvg+vjjjvumOAcNju34G/30EMPLbbYYou0Heq+0Adw/X5xPGyX
9zn4++T6ZH6Oh33hXZBVVlklnYeVV145fSZ83tTHRrShX2211dI8jz76aBpv
3q56rebtcW1y7f385z9PdZ3y92Hwm9/8Jl1veS33yOn5yb2OeT///PNiiSWW
SPPG35DXZvsxb5ckSZIkVemkvJ06MuQQ1ItA5Bxk2mSatAmsr4VLzYj77rsv
zUcWSgZXPw8Dy9I+EZGDUJ+EadTEpjZFPj81Oz7++ONilllmSb+TYf/yl7+c
YL3k4/m+0jae7DSWqx+YRm1fkNc3mofhiCOOSPPQ1x6/01b3P//5T835oo41
fYg2Wp7seezYsWVtkEaf77LLLpvmzbPcGNgeWXifPn1Se8z69f/lL38pa3wg
auKQL8f2IkeK+h+LLLJIzfioj1I/UKt+8ODB5X7STpTx5Mv58iDnbrR/1Fa+
5JJLaj7vRuLZRdSJz+tCxHZ4lhDrjWmxTnJrxnMu33///XIaefj0008/wX6t
sMIKxXPPPVdun8yt0f4z8IwDvXr1Sr+T9dXPE8cI2nIvtdRSDc/FMccck44n
Pi/yc6bxfCP+7uLv6a233iruvffesu5FbD8f+Fu4//77J/g8Qowjt1911VUb
7jv7RT2O/HzSZp1p1Jbadttty3m5Pqv+XqLNceSfkbfz2TXbR/20dbV9O+9d
cU3x7Cd/x2nMmDGppgz3zLgH1PflG7if0xaevweeYzaaR93PvF2SJEmSVKUT
8vao1Uw/cmQW1OpGZBq0iybnIL8kcyMnZ6AOC22Co643ucf888+f2v+SwTOe
9uHktCxPFhmZdexjvNvPdNZFu1raY5OJv/nmmylHiayQTI/2t6yDdrWRDVMv
Os4bx0I+TJ1e2kHy/+vk9rQXj/w1ng+Qa1JvYO21107jaZdMHkOOHsfEM4Q5
55yzmHvuudP+xHbYv6gbTNZL+2HaTg4bNiy18Sb/5rNolCHF58t5ij7/eE5B
+2FqFJO/5/ku2SX7ybUU55K6xJzvwPMIjo9stj5vp60221lxxRXLbbM+xpHv
8u4BfQ1ynthv2j7n9d5pd8+6DzzwwPR7jOeZSOStzMP5+eCDD4qLL744tYF+
5ZVXaq7JZqIGCc8X2M7qq69es52o98P5oP13PGfgWM4444x0HOTrIepO8Llx
7GTA7733XlkvifbbUac+PsO99947ZXX8vfA58NnEuxtcQzx/4NpmXtqiv/ji
iykHivcYuJbZ73jmQVt7tst1Qb7HeNYR/vGPf6RjjWdIPLfgvQKeBfC5Ufci
rld+kteTnQ8cOLBsX04eHu9r1Ldxj3PONU5tF9r/3nXXXantPPu67777pnXw
98e5CX//+9/T9uJvkuuB/XrppZfSsmyfNvvx/IW/Fc5T/G3EPSP+priXcDzm
7arXlfrtXN8jRowoFltssXRd8d4FzzP5O46/d67LXDzL43kx92au4/gbJbO3
jkz7Mm+XJEmSJFVp97w9MmqQG5OzRc1lUOOWTJYM7qyzzpro9snXG+Um5NXk
pbTXDuzjbLPNlvKPNdZYI9VmyZE9L7744mXGmaP+CFkhOWzU64h8lml5hhhY
B+vimUGcY3JmasEwnjyyHhkN+zjHHHOUmSLI5llmwQUXLIYPHz7R85LL83bW
QR0XsqNA7httrsmF8vNCzht9/kXdF9DePdrK1+ft1OZh2vLLL1+Oo102nwd5
czNxPsmy83cJWP+HH35Y/OpXv0rj86y7/hhbEfvEsxTONfvFOYh279QY4hrs
2bNnytvymhHkulwDZP8gE5533nnT9RrPjWL9ZG5chzyr4LkK70Lwb655aspM
TPTVSH2d+mMlp473GthOfv54jsA+8hwoPpurr756gjb7ufjMeGYQz4cCvzNt
6aWXTvVrYh+a4dkR13mO3yN7zPst4FlJ/g5FI/F3xDOeevm7EzwHoWYSGvW/
rJ+2VvN2xLT+/funvwmuP74beAeF51k8k4xaUfnfAs+9eI7861//unx+xXMi
anhF38RqP+btkiRJkqQq7Zy351kDmfUMM8yQ2ovTzjnWE22YaZtOJpy3VW3U
F2OO+ck1yT3JBlkPfS2GyNvJ5aI2Bu1jY/0cf2S6ZO9RmyW2GTV7o3Z05Jv5
PtG2kTyc9tzUxIncOM4L7ZOph814Ms7YRuxDfd4e615zzTVThko9kPptt1qz
nFrhbDf6pyX/ZRp5LW3kmRbPJ2IazxEip88z4lbz9tg2bZLZ/5lmminlveT4
Ia97jPq8HXxe5NQzzzxz+pzycxbnoNUsK+alXnjUI6JdOqhrzzMN2nJT44Rr
JfoCIPMnhydve/nll9M4lotjbYQ6/Pl5ZT5+J9N/8MEHy3ooeR2guOaox8O8
USM/MmT+RukngPMZ13GOdyS4fni/oD5vX2ihhdJxxzZiOu3b450OxjHweTAP
71CQHfKsIJ4BNbvH1H8G5Iy8P0K7+/j7ob+GEHk7zzY4rtivWA/7QMbJPPSH
EM/r6vsM4DNiHmrZkJlJ9bqSt8f1xftPPE/jb56/t3g2VP88NuZn3fyd5LWP
eF+G7x61L/N2SZIkSVKVds3bYxtku9SMIFOmTfW1116bxkeWSJ5MrhH1matq
cQfa39KWl7oX9TW0qVsdaHdLXkpmSy3dyO7iGPK8Pdpy5/2yUn+GabQtzvcZ
ZOzks7Qdp01zvg/U+4j2vrQdj7w9Mt68zX+et0ctHHLeqNNNv6qRh7aqPm+n
hnae31IjhH4toy11Po1nIdRUYVr0SYpW83ZEdkteGueEttvUi6H9aIhtNsrb
o4YD5yE/pkkV11U8E6FeUL7vXDf0vZlna2TmXJtk9LGv1JeJOkPURSen5/0F
auTw73hfgnouIMshz4/6PbSFJX+mH9Y4rji2yNvjmVFsM78e+Ey5vrim2B77
QA129pO/r6i3wvajhlKeM8a2Im/ns46aMbEs1yTrohZNfZ8Cufwz4dkM1wb5
d30/DNGvAqKd/iabbNLwc2If8rw9tl3/+XP+ou4M783wvKvZfuqnqdW8Pebj
/SO+K/hb43kh78NEXTEG7vf11yL3FWo0cV/j7zqe5/FuRzw/tY17+zFvlyRJ
kiRVade8PeYj844+P2k3TXtwth/ZXvSVSfvdqO/RDNPIS6MmNXk7/S/Sbjja
ZNOuN+R5O3Wg0Sxvj/bLeTYSbcAjb499Iw+NDJWsndrY7EP0KbrnnnuWeeqk
5O20tY/aItTiaNQnapX6vJ1zhDxv33LLLcs29/k02uNTs4RpHFOoytt5d6E+
bwefMeed8xGZFW1ByVMjk0ejvD1q+vMZt3r8VblW1GOPvl3JaEFbVH6ndjk1
8/k3+TXz0y4/ajkHPmvG8a4G1/UyyyxTM1C3iHbd0Y8n3njjjfQZRJ2eyM1p
W5+fx2Z5O7VvYln6FeU8sy2Ogfc6qGXBdsn945xG3s528r+p+rydzzruAfE3
ybsIE8vb43f+nnk+wd8Y66ONPTVe+vbtW15HeZ+vkbfzt9Xo82o1bwd/G3Ev
iFpU1nFXaCVvj3HRlwfX0pAhQ8rpvI/Su3fvsn9srutYrtE1yd8q/XMzL/cw
5H2vqj2Yt0uSJEmSqrRr3h7bIK+gjTYZIe1eoxZ3ZIDkl7TNXXfdddPveRvy
qCESmQg5HjkG/UrSnjBqc4C2vlV5e2Qok5O3gz71op/Rc889N+WNsT7aijOe
ZwjN8vZo75i3JY68nVwW5L5RHyeOJ68nkx9D1bmfknn7aaedlsbxvCOvB8O2
aBdan7fn2RbrJreNtuX17yE0ytuj7sjCCy9cc77y9eefVX29kWbnhP49uR6o
GUHdE+rXUzuCz4llqePDdHKYOEd5O38+c8bRjpV94O+H44uB3zm/sX/5/rAN
2sDG+xC08Y6+WZHn7fk7B3wm9EnK3wnvdjCe6y62SS0gtsnP+ryd+vP5uZvS
eTvHw3qoec39IP+bjL53G+XtvBfSSH3eHucwtpffu3jmxXMP+qnleUnV56+f
nlby9rjm+T6JZ23UX2J89HkMruWo75Xfd1gn8zLEtc89gu8IngHn21D7MG+X
JEmSJFVp17y9flvsJ9k37QQjV8ZNN92Ucgwy9GeffTaNY52N2rmTHzMv2S/I
FwP1sX+MvD3qzZPFkqPk2TJ13uvzdrLz6C+VWjqRozbK2/P+UqkDQmZD3Zc4
7+Q5XWnnPSXz9uiTk/ojiKw9pjE/7axjX3N5przXXnul9XBOQqO8vV+/fumz
I/ONvJvjb3RdxH7EOW8m9ov251yHvI9Au3H63ozjp510nDP6SKSee96fLNc8
48joI+NlnybWrjq/Tmgjy2fLOwzRxh1Ri4briPn52+TY+HvgWQXnjSw6xPWX
+zHy9lgHf3/77rtvTc2YfFvxDKwreTvnKPpLpc9gtsXnHucu9iPq+vBeTP1+
Sehq3s7fJH8PPMti3nh+BvrA5u9+6623Tr/TjzC1t0I89wLPiVgXf3to1hZe
3ce8XZIkSZJUpd3zdkTOEf0n0t499oM8OmqzbLrppmW+B9oi03521KhR6Xcy
aDIP6pME9p+MnfyTdZCHh6mRt7M/7AN1M/I+8Z544omyjgDtbSP7JSskKyV/
oY1k3ucnmuXt0Vae3JPsN283TBZNXlq/v2Fq5O3UVCDv5VxG36fkS/RbGTU9
aIMd2x4wYEBq5zl69Oiafdt1113TuSCLDfV5e2Rd1EBmPNdNfD4g52J/Iu8G
fYzuvPPOqe/c+j44Q3zuZGe0i46a6FFrPfY76s3wuURmFusjz6ZGedREIcvL
cW7ieRL7ecopp6Q60Dn6POUaoj07tYMC1w/nJr++A58F2+Rcc43n2SF9BVBv
Os4dfoy8nWuSz45j6dWrVzmd9fFsKf6uL7roonLaxPJ28DyNddLWmNr1uTg+
cvZ4T6L+/QcJXaknQ+5KrSb6A+F9nRx9SMd314UXXpiydp6N8bfD30r+DPCl
l14q7yuHHnpoGtdKnyT6cZm3S5IkSZKqdErezjZpG0gOQWaNyCGosxJ1Rshs
jznmmNQ3XeTXtEPG6aefnn4nBz344INTbhq5Mbk6GV193k47ZrLDZnk7uQnL
NcrbyQSZlrfP5XyzPbJn2tTTlpGa5szHeH6St0fbZNBfKdPI1Gn7Tg2dyHhp
0894nhdE3h5tmsmmY1vkiyeeeGLKpKM/SrId1GeNsV3qGbA/0fY4z9v5LJgW
NeXzvJ06J0zLa5C//vrr6R2EaMdOG+Tor3KFFVZI2SzjObfk8NRlYRptxPk8
qQWUn6e8Rgv9qDK+vtYQOXXUTea5CNfE0UcfnZ7LMI58HfTJyzmMWkN8rvFZ
Nzov1JSP643nB4MHDy7nYVlq2MR555lB3ocuBg4cWO4Xx0wN+DPPPDPVmmD7
XDd8JpdeemmaZ6aZZkqfG23nabPds2fPNJ529Xm9JKbFdcK54BzzbIrt8pmx
jthvnt1QU59sOv6u8ucj8VyIa6BR3n7HHXek6XzWjfJ26uxzbiZWTyZyfebn
2mZ/6BM29pNt5Hk7f0uMi/ckGn0+PI+I80YtJs4L7dnz6zT6Mqa+TqPPWmol
b4/6XDw7inplXMtHHHFEemZEXSueWTF+scUWS89/eA4c+Tv3Cu7T9PXAMswT
96F4Fmfb9vZj3i5JkiRJqtIJeXssE21SIxPP62FEjffI6WI46KCD0v8Ts8+0
F8773mSgPSJtXKMfS2pxBNohxnzN8vaopT18+PCac4PIWaiXgqjnG2108+Gw
ww4r++Kk7XacV9ZHRkOumc9P23OQt0cuSY6Tny9yZPLlaD8eA7XHyVPHjh3b
sC/J+J0a48xP3o88bycTZhrt6PNp1E6J4+7Tp0/N/tCWPbL+GMiYyf35N+2Z
4zxRG53aMfXniWcl5NB537hR1508Pj6jQHvz6As3H7iWnnvuubRv1H+IjJf1
/+tf/yqvr0Z494B648zPewpcJ3HeWFc8R2AYNmxYzTnNM3cy4/r94hzQ1p5j
ePvtt1PGHs8p8oG8nHaz+fGOGTOmPPcxbL755uV+jxs3LmWCkfXXnw/uBbEu
/ibieUejvJ33GpjOuY06GHmNo3guEu3vG+XtDLyfEjVl8oFzQPte/n3eeeeV
y/HsJ7ZbL65lPgOuhXx9PI/iuo19jGdxDz300ATXjIRW8nbEuytcd1yf3EMa
/X3ltZ8++OCDlK/Xz8fAvej555//UY5Rk8a8XZIkSZJUpZPy9l122SXlEdR/
ITeLjDf2h7bV5M/UBCFnZRt5/6mgHSJZBvOQhUYNXTJDapdQWyOwDdZBnprX
YwnkvWSeLNfonX9ycqaRc8Z+xr7S7pe2tZyD999/vzxG5v/oo48myMDZLzJo
2pMPHTq03G+OL/axUS7KesnhqSHDMXPsrL8VZELsDzll/Trj2PLnAjGNHJ9p
5E/5NLAvtHsn5+Tc5ccd+XHg2mD+hx9+OB03NU/yefLPneXzOumxL6D/Qt4/
uOeee9K6qC8U+xb4/GnnzbsMZOGoymDj3HAu6/9+yJCZxtBoHTE/55Usj3bl
XAu8A8Cx1ON88plTw4XzxjJ53wM5rjWeDTEv13d81vlnQC7PtcQ81DHi2on1
xXxcb+w/227UvpbPnelcB/XPErgmWSfXZSu1MJifjJ7rk+OMfY6/yfj7iXMW
253YOnmOQzt83nPgmOOewX5GTR/+LmDernqt5u3I/0a4N/DOy6233lo88sgj
qT5Ufi+M9bI+/kYef/zxdJ1yb2JbUUvMDLd9mbdLkiRJkqp0Ut5OjWfqU0d9
k0b7VLV8p76XP6n7PbHl2uV8NNqPKZVfVK0nn0aGS7tv2vST2+e52NTQlX5r
W13H5H7e3XE9NNvm5OxLK8suscQS6d2WeG/FvEz1upK3oyt/rxO73rwe25t5
uyRJkiSpSifl7XktiUcffTS1oc0zjrz9ePy7Ua2U+nnq/91s/kaqpjfbh5jW
aPlW9qPVZVpZtsrE9n9ix93KvlQtU7/9ie1Lq9uMIfIz2nhTA4J647SBx8T6
z2zl3LSSb0/qZ9+VY53U9U2Ja78VE/ubbHSOunJu49/ca1555ZVUA573GKgJ
RPv9mEfKdTVvD5P699rod7Un83ZJkiRJUpVOyNsDtUXmmWeess4tfSvm+yN1
RWTq1IPnGQ71HDTtiXsO94+ll166vH/st99+abz3DzUyqXm7pn3m7ZIkSZKk
Kp2Ut+OZZ54pjjvuuGK33XYr++M0L9PkoLZy1Aw3N5n2xP2Bz/iEE05I/ete
dNFFNbXnpXrm7WrGvF2SJEmSVKWT8vZ8P+lTbmI1P6Su8HqatnHfot/j+r5y
pUbM29WMebskSZIkqUon5e0w89CUxvVsXvLT4meuiTFvVzPm7ZIkSZKkKp2W
t8f2rQMhqau8d6hV5u1qxrxdkiRJklSlE/N2SZKmJvN2NWPeLkmSJEmqYt4u
SVIt83Y1Y94uSZIkSapi3i5JUi3zdjVj3i5JkiRJqtLdefv48ePLmsoODg4O
Dg7tMJCv8zPy9h9++KHb98mhPYa4NszbJUmSJEmNdHfe/v3333dpeUmSfix8
z5GpSvVGjhxp3i5JkiRJmkB35u39+vUr3n///eKjjz5ycHBwcHBom+HDDz9M
P4cPH148/vjjxdixY7t9nxzaY6i/Nqw1JEmSJEnKdVfePnr06OKxxx4r+vfv
XzzyyCMODg4ODg5tMzz66KPpJ99TgwcPLn93cIhrgax90KBBqdaQJEmSJEmh
O9u39+3bN7UT+/zzzx0cHBwcHNpm+PTTT9PPESNGpFw1fndwiGvhlVdeSc9j
bN8uSZIkScpZv12SpMas365mrN8uSZIkSWqku/P28ePHp/U5ODg4ODi0y0Cb
ZX7+n//zf1KmSs2Q7t4nh/YY4tr43//9X/N2SZIkSdIEujtv/+9//9ul5SVJ
mtriuyrydmuGKMS1Yd4uSZIkSWrEvF2SpFrm7WrGvF2SJEmSVMW8XZKkWubt
asa8XZIkSZJUxbxdkqRa5u1qxrxdkiRJklTFvF2SpFrm7WrGvF2SJEmSVMW8
XZKkWubtasa8XZIkSZJUxbxdkqRa5u1qxrxdkiRJklTFvF2SpFrm7WrGvF2S
JEmSVMW8XVMa10dcI5LUiczb1Yx5uyRJkiSpSqfl7WQekXuY6ba3Sf18WI7P
2M9XUnfpat4ezxmrhqpl2R6D9732Z94uSZIkSarSSXn7tPL/tHEcr776atG7
d+/ikUce6eY9mrI++eST4ssvv+zu3ZCkSTY18vZG32E//PBDzXjm+/77783d
25h5uyRJkiSpSifl7SD7uPbaa4uzzjqrGDp0aM3+dIrvvvsu/fzrX/9a/Oxn
PyvWWGONbt6jyRef61NPPVWst956xQ477FC8//77XVrHt99+W9x9993pvPDz
66+/7rjPVtK04ceoJ0PWHj788MPigw8+mGD7aj/m7ZIkSZKkKp2Ut7/33nvF
MssskzJqhsMOO6xmfzpF5O2XXHJJ8Ytf/KLYeOONu3mPJl98rn/+85/Lz+eJ
J55I4yb2+cT0zz77rFh22WXL5Q855JCpu9OS1EQreXuMGzFiRHHAAQcUhx56
aHHQQQfVDAceeGCatv/++xdXX311uVzc9x544IHij3/8Y7HBBhsU6667bpr/
1ltv/XEOUpPEvF2SJEmSVKUT8vZYhnyaHJZM9qabbko5SCt1cRtN70pt3a4u
M7HavZG3X3zxxel4Ntxww5a33WwbVdtvZX2tTKs6rviMnnvuuWLnnXcujjzy
yOKrr76qXH/9OjgvzzzzTHHyyScXc801Vzo3XGOxjCT9WFrJ26n7gvvuu698
Tlg18O5Pvty5555b9OjRo+G8Rx11VJrHflrbj3m7JEmSJKlKJ+XtvXr1Kn7+
85+nPLbZPnVlH1qdNrFsOv931brzXBldydubbbPV/ZxcE3umkWt2DqrWUb/M
ZpttVkw33XTFgw8+ONFlJWlKayVvz9/NoZbW008/neqcMQwePLh46aWXiiuu
uKKYY445ihlmmKF48skny2WpmcU9ju+A0047LX0nvvPOO6lt+/zzz5/qpuX7
ofZh3i5JkiRJqtJJeTvtpskmeCefcR9//HExevToYsyYMQ2XIx+hBg3zxHZi
37/44oviP//5T9oH2lTntcbr+64LH330UfH666+n/k2HDx+e6u02mo9zQh3e
F154Ic3LMtF/KPN1JW+P9bL822+/XR4HfZKy3wMHDkzbyvf5008/LYYNG1YM
GDAgnef6ddG2knVx3qKdZT6N9TG9fhrb5jPv379/8eijjxYjR44sxo8fX7O/
zMM5Hzt2bE0+lZ8f1v/yyy+nc8P1x/7my2OvvfZK5+bmm2+eYHlJmtqmVP32
ffbZJ93Ljj/++PQ766GvivXXXz+NP+WUUyZYhu8ntS/zdkmSJElSlU7K23fc
cceUT1xzzTXp9969e6ff55133jLPzveP/xeeaaaZillnnbV49tlny/Hk0LzX
n7+7P+OMMxYnnHBCyrFjHWyXn/Tbef311xdLLLFEzTILL7xwcdVVV6VjYF4y
kn//+9/FdtttN0FtADJ18mmQtaCVvL2+b9Xzzz+/uOeee9Ixx7rnmWee4sor
r0zzkU8vuOCCNcfF+aJfvsiLXnnllbIuD1kSIlvneoga6jwnCG+99Vb5vCMf
6BeVGjLxGZGhM546+5Gjx3Z5PnLeeeeVtWJiWHHFFYs+ffqU54ZzHnn7dddd
V/OZStKPoat5e14fK/pB/ec//5neyVpppZVSfa24j3G/47uJdu/x3JP1M8Q9
X+3LvF2SJEmSVKVT8na2GXl7tHl+9913i0UWWSTlGeQazJP3Q0fOzPv65MRR
S7xfv34pg2Y9q622WnHMMcekbDdq6G677bapNgDbZF3kJrzrH9kwdU6oTf67
3/0u/b744osX48aNS+smd475Ntpoo9QHHn26/upXvypr95KlxDnoSt5+zjnn
pL5Vl1pqqTIrpz/RVVddNf0+++yzp776+Pdyyy1XHHzwwen4+J3nDUOGDCnX
SY0D1rX88ss3zNtZnumvvfZaGsdnvOeee6Z1sf0//elPxV/+8pe034y79NJL
y2PieQOfB+uIvJ1zyPmPc8awyy67pPMYzyY233zzmuONeeM5gnmGpB/TpLZv
j+X4HonnujyHRNzf4juF+2ozPmNsX+btkiRJkqQqnZC3R86x7rrrpvz8gQce
KKftscceadxuu+2Wfo92hWwn3tcnDwZt18mBGbf99tunNttxPLfcckvZ7vqG
G24o10/tlFlmmSWNP/XUU8sMmWXuvffedP4CtVUuv/zy4sYbb0xtucOdd96Z
2qCzDmrMhK7m7ZFVU8f+jTfeSONHjRpV5vkM5OxxXOTliy66aBp/0UUXlesk
b49cvqp9+4gRI9I42sOzDTJ4zkegng75Om3S87w9ngfEuwL4xz/+kZanTSd1
iaONP9cP9YqjJlDsB88SWA+5fnyekvRjmdy8nWe7PHv8zW9+U9Yei++nAw44
IN3f+A7gfkzfqFtvvXV6/njSSSeV9c3M3NuTebskSZIkqUq75+2xLfJraqiQ
15L/xroeeuihlFtQ64W+5mL+N998M+W7tH8n42b8XXfdleal3goZB9h+LEO7
bfIRcnpqyDA+ct9NNtmkrFVe/77/xDIRcpqNN944PRe44447yvGTkrevvfba
5TmLaWQ3rJv1fPPNN+U2ceCBB6Zp1MoJrebtr776ajku2tXff//9DfczcqQ8
b49nDrTz5L0Axu+///7lMrHNRuvhGQnzb7DBBk3PjSRNLZOSt8d3Ac8To257
vP8T9zZ+7rrrrmka3wt5bbAYyOij/phZbvsxb5ckSZIkVWnnvD3q4LKP1HmJ
bDpqvYDMdqGFFko5edSZAe25o7547O+JJ56Ysmey87zfUtbB7w8//HCaPtts
s6W+UcnXqQfAOOq3M0/ehyj7kJ+7+DdZC3n/TTfdVPz+979P2fMvf/nLtD+X
XHJJOf+k5O1bbbVVua3YPm3AmbbNNtukafEMgWmnn356mkZtmzgPL774Ykt5
e9STYT20m48siPo8Tz31VHomEWL5PG/nHII68OT1nEfq2sS+NTqPsY9cH4st
tlhahpo/9HmbT5ekqWly8nb6hOY7iSz96aefTuPiHsn3St7HB89Q6X+bmlv0
cx3337333jvNHzm92od5uyRJkiSpSrvm7THfe++9l/qai3y40Xv2xx9/fMpl
qbMStd5XX3311L796quvLueLNoW77757Td4eecagQYNSHXTmYbvUjllggQXS
77Sjz+dtdk5efvnlstY5A88C2P8555yzrB8QJiVvp514bCvO0ZlnnpmmbbHF
FjXHhbPPPjtNo458V/P2vL9U2qjT/j/vi5VnEdT2iTr3aJS3k81HzfxW2mzm
9Rh49sFytBVFXp9fkqaWycnbmZ/71jrrrJOyd8S9iyHavnM/j75Fwn333Ze+
z5Zccsma/rvVPszbJUmSJElV2j1vJ+elnV/kw48//ni5D7EfUR9lmWWWKd5+
++1U03z66acv5p9//pSbx7oi46DNOyKXjhzkySefTP2mkg2PHTs2bbtnz55p
GXLlaG/fbF/Zj4UXXrjMvmkTH3XWyfjzWvKYlLw9+hXNtxt5+5ZbblmzDBrl
7dTXifNJXoDI22nTXp+351kPNWaoTUNfq5G7U+++Uf32yNufeeaZsgY+28vb
tzcS2+Nc0dcrn8d5551X81lJ0tQ0qfXbEe8V0e9z3O/y96PiGfEVV1yRfo/v
MwbumzPMMEP6/uL5LbqybU195u2SJEmSpCrtmrfn87/77rupr9LI1NlmnrdT
s3zVVVdN7+8PGDCguO6668q6J4j8+eSTT07jaftOLZSoYxIZOn2mRg49bty4
NA/tExlH3p3nJvn2oybK0UcfnebdZZddamqtMH2nnXZqm7yd+veMW3zxxVOf
qIynBg4/qYPTLG/PnzXQTp2+ajnnzP/FF1+k8Y3ydjJ86usznj5m832vz84j
VyKjZ37y9j59+hSff/55zTmXpKlpcvJ27sXcv0477bT0e9yT4+cFF1xQc8/O
v1PoO5rnxbwbFfdg8/b2Yt4uSZIkSarS7nl7XjuFvk/JIQYOHJjGRVtnpl15
5ZUpvzjjjDNSJh19e0YWDuroMp4+V2+//faa/eGdfuq6M53+R8mWmXbKKaek
cdQSp+18PXJqcB7In6lhEzVjYru0k19rrbUmqN8eNebpM6+ZqZG30+aenJx2
47TpzzF/1JqP/lJpkxk1ERB9spIz8Hmwnugb9f+ydxbAlhTn441AQnAJDsGD
BHdNghM8SAjuEtwdgrO4E4Jb8ACBYqEWl8VZLPktvoXbIgssWpX51+l/fZN+
s/fevfe9fftmd8+p6nrckZ6enrlz2dPffJ379siFwPYbbrhhWr744ouX+wd5
3Gf8pR3Ef5IDSERkdNMT3864MM+7iF+P51rUQU4vcpXxrI15MgLmIWFf3iGK
uUUcZ6wX+nYRERERERFpRd19O4SrIA4cB3vRRRelz+HEgZhtPPoUU0yR/C/v
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
XURERERERFoxpvn2uv+7tpnDrqPb1rmLiDSmp7693XHheA7XaQxZWqNvFxER
ERERkVaMab4diBln/zh2XzuKzz77rDj33HOL/v37d2nPBx98UJxxxhnFAw88
UC7v67bCsGHDirfffru8FnVok4hIneiN+Pb8Wdvqueszud7o20VERERERKQV
Y5pvP/LII4tZZ521mGyyyYoTTzyxS3tGN3HcffbZp/jRj35U/PKXvyzuv//+
tIzz3HrrrdPyWWaZpXj22WfT8tGZk6CZ36e9U045ZTHnnHMWl1122Whrj4jI
mEJPfPvw4cOLgQMHFueff35x8803Fx9++GHTbXG2l156aRqzffTRR4tvvvkm
Lde51xd9u4iIiIiIiLRiTPDtcby77ror+WvKNNNMU5x66qld1ufbt+MqOs1j
Xt02/nuvvfYqfvaznyV//eSTT6ZlnOdWW22Vli+88MKpr6BdZ9NpLHx1+y+/
/LJYccUVi0033bT49ttvu2x7yCGHFFNMMUXqx/HHH7948cUXyzaLiEjnvj3y
wdx2223FDDPMUP5WUX784x8XBx54YPHxxx+Xz+lPP/202HLLLcttfvKTn6S/
SyyxRPl7IfVE3y4iIiIiIiKtGBN8e+yz5557Jh+x9tprj7Af23z//fepxOfv
vvuuobOOdVEvHoX9mvlt8tdEXbFv7l5w21dccUXxxBNPpM9Rz9ChQ4tLLrmk
eP7557ssb3We1B3nwDEanQOfY7uYkzXOhf+mvPLKK2Vs/eeff562x7tHXW+9
9VaxzjrrpG0uvPDClu0SERnX6MS3x7rLL788jWHyXF122WWL7bffvthkk02K
SSaZJC279dZb03Y8u7fZZpvyGX3ssccW5513XrHKKqukZbPPPnvK+wXGudcP
fbuIiIiIiIi0Ykzy7RtvvHFyEaeffnr6jEOGqgeJ5dX2Vv8beO+/2bb5sRsd
Z1T+G7tad+QUaNauRsvx7MEbb7yRYirnm2++EfaJuk877bTUn0cffXS32y0i
MjbSrm9nOc/h999/v/j1r3+dnqnk7Mqfx8ztwVweAZ52pplmKsYbb7xynBZ4
Ni+11FKpjptuuqmsX+qFvl1ERERERERaMSb59nXXXTd5CPLcRlx3wL97jzrq
qPR+/korrZRi4A844IA0Z2nUEe1+8803kw9hm9/97nep3pNPPjm961/dFq65
5ppU76qrrlr84Q9/KHbbbbfimWeeKdcPGjQo5W056aSTuuRueeSRR9JycviG
M2kVq0g9hx9+eLHZZpulc6Bdhx12WJqPFaIO4uZ33nnn4qyzzkptveiii1K7
2Oecc84pLr744mLNNddMvn3yyScvdtxxx2KXXXYp9t133xTrHucXvp08ByIi
8j/a9e3xO3TKKacUP/3pT4t55503LeMZy+9BPv4b7y7h34l5J69XLI9x0GOO
OSY9u/mNyuuX+qBvFxERERERkVaMSb59vfXWS34YvwzhIcgzQz73PF9ulJVX
Xrl4++23yzZz3Hnmmafhtvj09957r9wWN00uAHKwV7fFk5BPHphzlGULLrhg
8cUXX5TtPvPMM8t6w7k0y2+zww47FFNNNVXDdnHezLcX+7766qtp+fLLL18c
fPDBXbbFrS+wwAJd8gHn5Z133imPG74dDy8iIv+jHd8e2/Dcj/xcjK82Is9D
lse3R76xWEcOGuphbvB8udQHfbuIiIiIiIi0Ykzw7fG+/uqrr548xFVXXZWW
h2/ffffdiwkmmCB548cff7x49913U4z3L37xi7R9Pq8q8eIsW2ihhdK/k3Hq
Tz/9dPLyBx10UKoz/Mbee++dtsWJMMcoOVpefvnlYtttty2WW265dBwg/p1t
VlhhhS6+He9CLt8NNtigpW+HrbfeuphooomKQw89tHjqqaeSFyd+PXIBkwc+
oA2cG+cceYKJl3z44YfTOs6H2H7WMW8feQk414EDB6Y4yui3GA8gVj76WERE
OvPt/BaSu4vnKf9NXDu/F+zHMzl+J9k+6uHdJ7ZnfJRnNstff/31Yrrppku/
J/w2g8/l+qFvFxERERERkVbU3bfneWPmnnvuFGs+YMCA9Dm8BfOV4jSqxHv5
5GeJ42644YbJYe+1114tj4v/wHmwLXlimp0HXHvttaX3zn0789+xfP311x+p
bydnzGuvvTbC8v322y/V8Ze//KWL24mxhMUXX7z45JNPRtjv+uuvT+sjt0FO
5DRgjldi4Bk7aNU2EZFxjXZ8eyxjjHTKKadMvzc8exl7zd8rWmaZZYonn3yy
rJfy6aefpneUYps99tgjbUeemQsuuCBt6zO5nujbRUREREREpBV19u3VHOq4
b/K4kJOddbG+Oqcp7brnnntSvDseY7XVViudNHODhocmZjxi1GPfqLNfv35l
jpiPPvqojEtsNPfqqPDt+XJ8OI6HcQXyrlMH4wTDhg1L68O3Mx5w2223dWl7
5Gb/xz/+kfYjdw7XKNbFtoArIA8Pzv3OO+9seh1ERMY1OvHtDz30UBoLJn87
z92ZZ5455QgjBzu/NSybfvrpU16wgHeYIkfaL3/5y9K7zzbbbOn3UeqLvl1E
RERERERaUVffHj6duG9ywEw22WQp38rpp5/epZ6A+nDpzIE644wzdoktxIO/
//77aTtyuTNHaqxbeumlUxx8xJaHP2F+VNZvtNFG6XM+5121H0aFbwdi9Jkv
lblPySmQn0M+ZsB2uHbiIInDp85od/RL7tuHDx8+wrFjO8YV6Fe8O/l0Yp1x
lSIyLtOJb2dubJ6jPHN5XwgPG/A7iUNn3QknnJCWDR48OMWys4zfH/bn2U+M
PMsWXnjh9JzPx5WlPujbRUREREREpBV19e2x3VtvvVXMNddcpRv/5ptvRvAP
5C6PbXiff/PNNy8uvfTS4thjj03Lfvvb35a+HYhXJ7Y95hWlzDHHHMWVV15Z
brPmmmum5eRV53i97dtvvPHG0skQJ7nNNtuk9pA3nmVrrbVWF99OrD++/Ykn
nkjLOvXtsT3xlvPPP3/ads455yzr0PGIyLhMJ/nb8a7x/H722WfTMp758ewl
zp3fJubygF133TVtu9NOO3Wpb9CgQWluEdaRBw0i/5fUB327iIiIiIiItKKu
vj2OgV+//PLLkw9nftDwE1HPe++9V0w77bTJT2y//fbJSUe+8nvvvTctJ549
fHvuLoidv+OOO0rvzvv+zLcKxLfjR/DuwPx3+TngXqIN3fXt8d/E1uPO2ZY5
WsnrG27n5ptvTsuJ22/k2yMncCe+PWIm2RanQ6w8jifGG3QHIjKu04lvJy8Z
8er8ZvCbyu9M/E7w36eddlp6Hq+66qrp94nfCvJ48XvDdvk81uQIIy8Nv3kf
f/xxl1xgUg/07SIiIiIiItKKuvr26rGI+/v5z39eTDzxxF3mFSUuPPKxh48O
b3HLLbd08e3VmO34jN8m3y7b/u1vf0vLTjzxxPR5lllmKXMD4P4bxRr21Ldf
dtllabulllqq7M9wO7GuU99+3XXXlTHrnB/Hj36JbR944IFUB7ng33zzzRHa
JyIyrtKOb4+xS56vvFfFM/eoo45K6/itiN834tlx8eR0Zxk5Z/Dt8dvC/ozp
8ozm940xUMZ/X3jhhbS+0bGl79C3i4iIiIiISCvq7tshXEPEoeO3A3w77pl8
5/EePzz//PNlTpgVVlghzbEKF110UXLY+XHJqRL5aHDk8MYbbyS3zzJyAJD3
PcCHUEfUGbHk3fXt5L6JeMZXXnmlXI9LX3HFFVMd5HTvxLfjACLHOzH8+TFj
zOCKK65Ida+zzjp6dhGRjHZ8O8TzlPFdxoTx5E899VS5/tVXXy1mnXXW9Kzl
dwN4ryjeyar+hjJfCb8H8803X/qdMr9X/dC3i4iIiIiISCvGFN/OMVdfffXk
KM4///yyHeRixz3HPHXHHXdcsddeexWTTz55Woa3IH877+W/8847Zb52HDpz
11HCyzPPKi47YG7W2J5cAUcccURx4IEHFksssURadtJJJ6Xt8O24bbx+7ttp
J8s5Vqv87bj9OA5+nXMgHjLm36OOqm8nJp1zrPr2gH6JPlhkkUWKI488sth9
993L/AQQ4wEcS58jIvI/2vXtMV81ebsixh2/zjOX3xfmPo35R7788su0z4MP
PlhMNdVU5W8RvxW4+D322CP9ZuXvWhnbXj/07SIiIiIiItKKMcG3xz7rrrtu
8hBnn312+hxxhcSsM8doOGvKGmusUVx99dXpvxdccMEUi06+9osvvricHzQv
5Dm/8847y+NFngCcdOSayQtxifQdkPecZeRAj1zpcOaZZ6bljBOEM2mW0+aM
M84Y4Rgbb7xxmtc1xhLCtw8ePLjcpjpfal5n+PS8DBgwYIT27bvvviO/cCIi
4xDt+vZ8W/KW7bLLLiM8d9dbb700rgrxfL7rrruKJZdccoRtZ5hhhnJMWeqJ
vl1ERERERERaMSb59j/+8Y/JR5xzzjnJfRAznreFPDMU/ju8N26aY0XuciB/
DJ6aeELmYn344YfL3DCN4rzfeuutNPcqrv72229POV8iXh2IacfJcJx8f/w+
y4mrbweuBWMEN9xwQzpGzNFKHbQhfA/H5ryIcyenfCOiHdRJ/P1VV12VcgHT
VuqlT2MOv0MOOaSt9omIjCt04tshnrn81pBD5tZbb005u5h7JH4nY5uoe+jQ
oWnOVLZj3PjRRx8tfy9856i+6NtFRERERESkFWOSb99iiy3SHHP9+vVr2J5m
7cw/tzrXRtu3ch6j49/YvelcmNeP/iTngYiI/I9OfXu+TzvrWj3bR/bbI32L
vl1ERERERERagW+P/Ojtlsi3Mrp9+/HHH5/isZdffvkUb/7uu+92aVeQf240
11yr7RuRr8/PP1/f7DidzHXXyTmwrJ1/4zeqk1j5/v37p/ld6c/rr79+hG1F
RMZluuPbofqb1Or3pdPfIqkH+nYRERERERFpBf9e7C68Mz86fHtAjpXJJpus
zHN7+OGHp+X6ic7YYYcdyj6cfvrpy/wFOgMRkf9Pd327jP3o20VERERERKQV
zz77bMoDjjvvpLz22mvFk08+2ZEvh574drjvvvuKXXfdtVh77bWLa665Ji3T
t3cGc/Gts846xR577FEMHDgwLbMPRUT+h75dmqFvFxERERERkVYwryjzen7+
+ecdF+be7NTT9sS3x778pc35nKXSPsyXOmzYsL5uhohIbdG3SzP07SIiIiIi
IlInehrfrvMYtdifIiIjom+XZujbRUREREREZGR0N5dId/brqW+P4zqvXPex
/0REWqNvl2bo20VERERERKROjArfLiIi0pvo26UZ+nYRERERERGpE/p2ERGp
O/p2aYa+XUREREREROqEvl1EROqOvl2aoW8XERERERGROlH17cOHD++ST9xi
sVgslr4u+HX+hm//4Ycf+rxNlnqUuDf07SIiIiIiItKKb7/9Nrnvr776qu3C
9t99911Hx6n69u+//743TkdERKTHvPTSS8mpilQZPHiwvl1EREREREQawr8V
hwwZUjzyyCPFM88801Z56qmnioEDBxbvv/9+x8cCfPsdd9xRvPfee8XQoUMt
FovFYqlN+fjjj9PfZ599trj77ruLjz76qM/bZKlHye+NAQMGmGtIRERERERE
GvLFF18UTz75ZPLuX375ZcsybNiwFPM3aNCgjuPTw7dzHP6d2r9//+K2226z
WCwWi6U25fbbb09/+Z164IEHys8WS9wLjMPcf//9KdeQiIiIiIiISE7kJH39
9deTQx9ZrBa5ZJ544okUm94peXw7rp06iBWzWCwWi6UuhXh2/kZ8+4cfftjn
bbLUo8S9wf8vcW8Y3y4iIiIiIiJVcO3w+eefpzwx77zzTrm8WvDlr732WnIQ
5HzvFPO3i4jImIL526UZ5m8XERERERGRVoRzf/XVV4unn366qQcnn8xjjz1W
xrbHfu1S9e3MudrI61ssFovF0leFmGX+/t///V9yquQM6es2WepR4t74z3/+
o28XERERERGRpvBvRyCPO/Ohvvnmmw23I9bv+eefL2PbY792qfr2r7/+uget
FhERGfXEb1X4dnOGSBD3hr5dRERERERE2uXll19O+WKqMe7EtpO3/e23306f
O3XtoG8XEZG6o2+XZujbRUREREREpFPw6uRxjxj38OrkKiW2vSc51/XtIiJS
d/Tt0gx9u4iIiIiIiHSHV155pXjuuedKHz5s2LCU1z2fS7U76NtFRKTu6Nul
Gfp2ERERERER6Q548Mcff7zMHUPe9kGDBqU543qCvl1EROqOvl2aoW8XERER
ERGR7vLaa6+l/DHvvvtucu387Sn6dhERqTv6dmmGvl1ERERERES6S+Rxf/LJ
JxvOn9od9O0iIlJ39O3SDH27iIiIiIiIdAfys/NvSLz4wIEDiw8//HCU1Ktv
FxGRuqNvl2bo20VERERERKQ7xHyon3/+efHvf/+7+Pbbb0dJvWOjb6evujt/
bLv1i4jI6EPfLs3Qt4uIiIiIiEhPwPXiGUaV8+2pb2f/qKMOHjpvQx3aM7YR
71noM0RkdNJT3x7PrpH9LuTPOH9Dxgz07SIiIiIiIlIneuLbe/pv2rfffru4
/PLLi9tuu22UxevDsGHDUq777vLDDz+k0oyPP/54rP73fJz/yFzT2NwHIlIv
uuvbeY5V5zrh+Vbdn/qrz32WGUdff/TtIiIiIiIiUid6Gt/+2muvFZdddlnR
r1+/4vHHH0/L2okfhJtvvrn40Y9+VMw+++zF0KFDu7SnU2K/QYMGFauvvnqx
zjrrFC+99FKP6qyCd7nooouKRRZZpDj66KOL4cOH93rumjoQ5/f0008Xp5xy
SnHxxRcXr7/+eh+3SkTGJbrj2/NnP//9/vvvF1988UW5LOrI62K89r333is+
/fTTEbaTeqJvFxERERERkTrRE9+Ok5hvvvmSM6fssssuaXm7vv32228vfvrT
nxYLLrhg8cknn3RpT6dE/OJee+1VtufMM8/ssq4daBvtosR+0V48DGMD1D31
1FOnsYaetLluxHnec889xY033pjGEyDO7+CDDy77dv755y/PXxclIr1Np749
nmfffPNNcfrppxdbb711sdxyyxXrrrtuceihhxYvvPBCl3r5DTzqqKOKtdde
u1hiiSWKNdZYo9h7772LJ598shfPSkYF+nYRERERERGpE93x7bEPDgP3Oscc
cxTnnHNO6S9yIv47jwOPv+SRCXeLb89z07eKG6/WFfsBMdjrrbdesd122xVv
vfVWl+M1ak+1Hpz6NNNMU8wwwwwpvjFy+QK5Bv7+978Xv//974vzzjsv5cCp
trNZ/c3Oo1U/dUK7x23W3shVzDkSvz/eeOOleyI/f94X4Jovuuii6bqdeOKJ
abl5jkWkt+nEt8cziWfY+uuvX44T5mXWWWct7rzzzrT9gw8+mJ57sW6iiSYq
/3ummWYqHn744bSdz7l6om8XERERERGROtET377VVlul+PT999+/6Tat9g/f
/pvf/KbMJ1OlXV+d8913341w/JHVE+vfeeedYpJJJimmnXbaMr67SqPl7cb0
d7KuHbczMq/QqR8i7/2vf/3rdF14f6ER11xzTbruO+200wjvAIiI9Abt+vZ8
/HXLLbcsnfktt9xSvPrqq2n/TTbZJC1jTJZnPvHsbLfFFlsUjz32WPo95O+S
Sy6ZlvNX6ou+XUREREREROpET3x7xA0S284yPDeEeyX+G2f70EMPFQMHDiw+
/PDDLl42fDv5ZHDYbP/mm28WAwYMKJ5//vniq6++GuHY+F3q/Oyzz9Lnzz//
PMUm3n///SkvL/HZuHvi5atz3+FgmKOV7fv375/yoYQ7p15cM/X84he/SL6d
HOXURQl/Q5uYLzXPAZzDcnIEP/DAA+mcP/jgg4bbcVzOg1wHwLFpD65g8ODB
Hc8fGzmH77vvvuSJ6OtG0PaPPvqoPGfy3d91113FG2+8ka497wf86le/Kn7y
k58Uzz77bDp39qEv2Z7rTP9x3XBWcY307SLSm7Tr2+O5f/fddxeTTjppMf74
4xdPPfXUCNtEfnb++x//+EdxzDHHlM/jgN8Jxl9/9rOfFS+++GJa5rOufujb
RUREREREpE70xLeTBxfvesEFF6TPeItYh7fdcMMNR3iHf7fddkvHgltvvbX0
7XiNVVZZpcu2v/vd78ptI4760UcfLXPFk1d3nnnmKbcn7pr4RVwxsYvELQJ+
BD+/ww47jNCeVVddtXjkkUeSq15sscXSMvavbvfyyy+nusjvy2fyxOf9ga8+
66yzirnnnrvLfuRlYR/8eT4mEbl4TjjhhDS+kOfBp2y88cZlPptGfieWvfLK
K8Vpp51WzDbbbF32Z8yAY+Sx/vgp+mXeeectnnnmmfR+Qmy//PLLl7Ggjc4f
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
t9hii9RmtiMGPXKr4J05/kUXXdSlvbT/gAMOKJZccskUU84+Z599dsohw3L2
iTlFgRh/ltFH1eMTL8+6rbfeOsWb5+uq23Lc3XbbLc1dSl6e1VZbrTj//PNT
jP2mm26axgWiDtw6eRKoO84nHHteJ7H/XBOcPedPzpubb765XE/uHa477wsQ
996ofSIio5JOfHu+PeODzPHN85xn5CqrrFLccMMN5XbvvPNOGmMklzu/HeSf
Id8Mfyk8L/lb/c2R+qBvFxERERERkTrRE9++0UYblfHtuNxm+W7x13m9o9tV
VI9HfpSIy27VHlxy+JVW2+WQt/3DDz/sZku7Dy5/6NCh5edR0cdcM/oq4Pri
58mzwHXfbLPNynES/ZOI9Cad+nbIn0s8z/LnuU527EHfLiIiIiIiInWiJ76d
GGhymBBfHYTf4C8OPv93L742dySsY1me0ySvh3WU3JnEcvZp5Hib7cexqu3B
HTdyNtH2fLvYj+2r5xH75LHi7B/x/o3GIqKeTs69EdW2xnGhUT9FW1r5iGqd
tDU/X8ZXuO677757WY++XUR6k+749tgvf/7ybMv3zZ/RrUqz3xzpe/TtIiIi
IiIiUie649vDOfBOfuRKJ58J+djz9fHfke+9DkR72vn3eGzbnfpHN71x3Gpf
3XHHHSnPAvMKct3//ve/p+Xtei8Rke7SXd8e9NWzWXoffbuIiIiIiIjUie74
9oB4P3LKTDDBBMm/HnHEEWl5Xdy6jBriHjn55JPTdR5//PFTnnjyBOXrRUR6
i576dhl70beLiIiIiIhIneiJbw+Y95R5R/EgoG8fu4jr+corrxTXX399mn8w
8s14rUVkdKBvl2bo20VERERERKROjArfLiIi0pvo26UZ+nYRERERERGpE6PC
t1MH7sNY57Ebri/XWZchIqMbfbs0Q98uIiIiIiIidcL4dhERqTv6dmmGvl1E
RERERETqhL5dRETqjr5dmqFvFxERERERkTqhbxcRkbqjb5dm6NtFRERERESk
TujbRUSk7ujbpRn6dhEREREREakTVd8+fPjwNC+mxWKxWCx1KTEnd/j2H374
oc/bZKlHiXtD3y4iIiIiIiJ1oOrbv//++z5ukYiISGNeeuml5FRFqgwePFjf
LiIiIiIiIn1O/Lt0yJAhxV133VU8/vjjxWOPPWaxWCwWS+3KQw89VNx33319
3g5L/Qr3xr333pvefRARERERERHpK3LfTlzYwIEDi0ceecRisVgsltqVBx98
sLj//vv7vB2W+hXuDcZi9O0iIiIiIiLSl1TzyXz33Xd93CIREZHGRM4QkSqR
2998MiIiIiIiItKXOF+qxWKxWOpenC/V0qw4X6qIiIiIiIjUiapv//rrr/u4
RSIiIl2J36rw7ThWEYh7Q98uIiIiIiIidUDfLiIidUffLs3Qt4uIiIiIiEid
0LeLiEjd0bdLM/TtIiIiIiIiUif07SIiUnf07dIMfbuIiIiIiIjUCX27iIjU
HX27NEPfLiIiIiIiInVC3y4iInVH3y7N0LeLiIiIiIhIndC3i4hI3dG3SzP0
7SIiIiIiIlIn9O0iIlJ39O3SDH27iIiIiIiI1Ik6+nba9N///revmyEy1sP3
TDclYwL6dmmGvl1ERERERETqxKjw7eHswpHjQX744YexyplzfpzTuPLv+HHt
fGXsgecO9+6Y6mOj/ZRxBc55ZL8X+nZphr5dRERERERE6kRPfTvOY1R6der7
4osvii+//NJ/M4v0Inxvhw8fXnz66afjlNuV+tLq96Snvj3Ghdv5XYntxqYx
47EZfbuIiIiIiIjUiVEV3/7OO++U+z766KPF3/72t7QsP8bI6oCnn366WHbZ
ZYsNNtig+Pjjj7us6wvi2Pw7/rzzziteeumlPm9Tb5JfB67hm2++mT7rL8Ye
4hp/9tlnxV/+8pdiqaWWKh566KE+blXPifNivO7yyy8v+vfv38ct6oxo/zff
fFP84x//KG6++ebyezc2Pm/y96GGDh2axn1a0V3fPjb2nXRF3y4iIiIiIiJ1
oqe+/fjjjy/mnnvuYtpppy1OO+204qOPPipmnHHG4sc//nGx7bbblsdoN1fA
gAEDih/96EfFL3/5y+Ldd9/tsm50E22mT5ZYYonUrhVXXLE8n7HN48T5MM4x
55xzpvP905/+lJYZ6zn2EN+nDz/8sFhsscXSdb7pppv6uFU9J86rX79+xXjj
jVf84he/SONGMCbcu9H+iy++uBh//PGLn//85+l5CGNC+zslfDn+fOmlly5+
9atfFX/84x/TbxFUz7kn8e3ff/998dRTTxWXXHJJcccdd6SxpmZ88sknxT//
+c/iqquuKseMpd7o20VERERERKROdMe3hwe55557kqujTDrppMUpp5ySHDmu
/Kc//Wmx8847p+2quSoauepox3333Zf2nX322Yv33nuvy7qR1dEOrfaprsvj
ZRdYYIHUrtVWWy0ta5b3oCcevtN9Y3tKuKejjz46jQ1EHH6nxwf6faaZZkrn
u8UWW6RlrfLxt9vuRtvF588//zzdLxtuuGHbMfW9MebRqs7uXp9Rcfzoi0sv
vbRYaaWVUvwzjMw5tqqLsbHf/e536Tr/61//6qidI2vvyNb1lGrd+byvRx55
ZDonfPu///3vcv3oal93r3u0/5xzzknjBfj2eO9gVLZ/VN6X7ewT53XnnXcW
8847b3LZEL8LgwcPLhZddNHyt2S99dbr8kwLOvXtsT3bzjrrrGX9FPr2iCOO
KL07deHkjzrqqGKCCSYot2PcY5dddim+/fbbsXLMY2xB3y4iIiIiIiJ1oju+
PfbZe++9k5P4wx/+UAwbNqxcjyO66KKLUo6AfHucxnfffVd6C/xGOJfY5t57
7011zjLLLCP49phHkDrCteR15LAt27E+9ov/5m/uamJdo/qirc8//3xx/vnn
ly646l7yc4tjtxN/Ge2p7tvIF+TbxZy00X4KTmiVVVZJ/Tdw4MC0Lcs6cQ9x
Xo899lhx4YUXphjoWE491JcfN/qt1fyO1ese28b5UseQIUOS45988smLZ599
Nm1PXo0850ScS+wTy6N9rI9r3KiPq84s6oyxk7gvOEZ+DfJ1ra5Po/Ot1pW3
qVlfhvvLoQ4KYxJc37/+9a/p81dffTXCfRbHb1Q35L59hRVWSPXdeuutTc+n
2l/5NYg81436K7Zrdf6dXK/8XFo9Qxi7IY75/vvvb3ge0d7YjzoataMd4juR
30N5vY2+E42On+cW5xl85ZVXJj/dqv35M7BZ++N5GXXHMdt9NrX7vG32/Yxj
UsfJJ5+c7rWTTjqp/H7n9yVjPowzTD/99MVbb71V7p+fN7Tj22PdNddcU/rz
RRZZpNh0002LtddeO43FsOyWW24p9+G9CJbRhk022aTYeuut0zgyy3Du0SdS
P/TtIiIiIiIiUid64ts33njj5CLIIwNVR9hoH8h9TKwbmW/P4ySD3Pu0ci+N
nE38d75f/t+d/Hu9He/T6bp224C3yll55ZVTLp833nhjpPv2hLztjVxus884
uSC/psyPO+WUUybn/sEHH7TVhlb3W6e0itHuZJ+8X5q9w1ElX95qf9hqq63S
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
HIdYeu5b4vVZ9vvf/770v7SbesJncg9wrYhjDwfOuwrxfeQc6JPIecG9wT3L
GEg4WfqWeSfx/ThC2st3jTGicLKMPQSd+nZi5mkz9fAXf099OFbmJ43xD8a2
2Ja+ZJwg1l1//fVlnY8//niqg+8zY2P59eI7w3hSfr04R54r1EPcO98xzpd7
nu8Z8xXEvcv7F9y7PBPy+HDaE2OB3Cc877g+xKDj/bkf8u9AK6KtxGdHn1Av
9wn34lNPPVU+H3kOMb4S9d59992pn3g20U6+G3yHuJbAtiynrZHHPO6BcO3E
inP/E7fOdz2+F4y75deMsaS4zyjclzwzYiyvSjybuHdw5eRj4d0ePGb+vOU5
w/c7tue9m0bfT8ZVuAe5JnGv8e4Nfc/YQXxX43eI+5t28jxsljNoZL4dqPc3
v/lNOh7b48gZH6NvuZfiuR7b804C2+a5bmId7WQd92q8p2Ae93qhbxcRERER
EZE60alvz/PG4GJwI5HPIvwHLgs/QW4FIO6WuFQcJh6lVTsa+fZwGzjlavuY
pzWcKO0PwrfjwcgtkbsZcsxEbDZxmTm4K/bh+Pm8lRGziZON9uL3cZtsjwOs
ErksmrkZ+hFfWXUDxOBSJ24tXDng28Pf4V6r4C0Zv2Ab3Fh3iLZGLCxxsQG+
nX7jOoabDHDFEa8c8eVcd7wg7jDyRlTJHRr74xjDwUH0PzktwmUfddRRI9SD
P2Qd92Q1Xpr7Zs455xwhXpp5B6I/cxcMq6++eumPw4MGjN3k9wJwH0afcQ/l
4Pl++9vfpnUxPhDx7fRNxD/nfclx8dTR3uinhRdeOO2Xj4PkcE9GXpeA+yza
HO+BQKe+/bDDDkvb8l2mjTlxb/JOR57fhu8AYzesY6wiYD5eluFEI9dOXC/y
wZDXg/VxL+HTmUeTPok8P1XiucS1ZF/GdMK3sy7GPXD51TkC2hlnzMl9e8R8
kzclh/cu4lnIOwEB23HPxThU9djM8xrfpbiWPIt4j4HlPBf4buWQc5x7iXoj
jxXg29mH723kr2kXvpMxPhQwPhFjFry7EjAeFt/P/J2YgP6nD1jP2FqVeO4w
JsU1jhzqjeYfaOXbYxnjHfFs5t6O+z8K44K8SwDMr0uOHZbz7K0eL97FYCwg
nsf63HqhbxcREREREZE60Z34dsBB4tpxb3jxPOYvHFPM6YgDibhM8i7jk6px
iyObL7UKOYJx1fj7iPmNOHvAPePg8WARY477o43EdxIfjoshNzfgg1iHx8b3
MG9fnBdUfTuQU4Fl5CohN3LMV9lu7GN1O/JK440jxwQxpHn+k/CW5GDO2xx9
iYeK2H3yQTSa87DdNjXy7XgrlhFDHfdJ5Cfh2NwPxOziugDfGPHtxMXStywL
4rqzP441rjt+PM4rfFv4dnw6sanVONPu+PZ4NwH3FoSzDbeMJwfaEccidjve
Z4hlOODI0/H222+P0K/sg/MM342rjGsc7jf6EqcZ9zQx7Pm6iPEmBr+ap6gK
fc358n0Ln4gL7W4+megTvgtB3Hvk4mYdOfohrhHXN3KNRN4b4F2Hdnx7xLfz
3SBePfod/x7EPRT7576d5wTw/Yyxiohh7kmscvVYtC2+E7Qn7iPeAWA93908
Dz7PGJ5NkS8p8pdD7tvj3QWeRXGt4rka/ctfnm0x1hZ5xiF8O9+/vK9GRnWb
/HkbuawidxSEb6cNjb6fPGfJN882jHNVn02xHc8btmG8i2ue04lv5/vF8yje
rZhuuulS7D9zcMR3i9xTnBfvScR4WIwV5W3nvPmt4LsaYz363HqhbxcRERER
EZE60a5vD/9ALCA5CaaccsqUNyJ8bP7v26pvB3wejpvl7If7wNeEywtPMjLf
ThvJtUuO6GpO9nzOw9y3E0sLcSziFfHp7BOuM/c0OGPyR8ecmNDIt4djIm9z
Xkc7hMvBk5GvAYcY/RYFRxRth3DgzDFJn4Tza+bb8+N02q5Wvp28CszZCuEV
yRkRObfj2EBfR44enBV5eXDOxIPn+1d9O3COVd9OHvC8naPCt3MvRR/GX3w2
64jbzvsaiC2PvBixPXmKOD9isBljIJaaeUrJU8G7D+GKOQ8I347zwwXnx+ae
jOsYc4HG8XPfnvdffp0Z7yC/B86S72l+T+HF4/vUXd9OnpSoo5pfnrw4+XWD
cM7k4A/a9e35uw5XXnllma+EOPqtt946+e5oQxyzkW/neOzDcu6P7oxF5VR9
O/ddxNLndUcuec4znmf4QJZxT+J6ox8b+fZ4BnHfxjwIkTunes8yby3rIw8V
MP7BMsY88neTWpHfS9x/XDdyl1eft8wxGsSzsNn3k7Gf3LdXjxNw78ezZ6ml
lkrXLfqnE9/OcyfeIeD5nOdR4nlAnnjWkbuKPon3WRrFt8d3NY9vN59MvdC3
i4iIiIiISJ1o17fHduQTjvhAXGTEMuZUfXs4Hpwo89GFByH2kLhL3HjU0Syf
DHUQ1x2+jRhLnCKxqhG3Sj74IPft4X8b+fbwJ7mnCd8esaXQyLfvsMMOaRlz
R+YxrSMjzpU2rrLKKl1yHOBRyQtO3xA3T57roJqvpLu+vZUrase343yr81A2
8u3RLpzp0UcfXa4Pl5afW7u+HZ+bx56249t5R6CVb19++eXLeqLNEWdLXHJe
FzDewTpcenwvGENgGTk98LqMlXCP8Zc82HxneMcDvwe5bw+nGsdmboOIVY68
Qa18e349qT+8LK595513Tp4aD8oy8ov31LcTKx9EXeHUI/Y99+2xH64/aOXb
caNV3x7H4d5ivC3ypRPDzDszxEJHP+S+PcaFyJke+8T4xsicaav1jWLpGYuM
/aK9MZ8q92W890B8O8vIy0KuoTi/Vr6dfOrhu6vfr3inJp5HMfcEhG8npxaM
7BmVx6Pj2Xl+sj/3LnHz3EuRFz0f3wzf3uz72a5vjz6LfF/xG9Kub49tyEMU
eW/Ipw/ck/F+DfNrcD/E2ES8h5P/hkRdxPTHcy/eD9C31wt9u4iIiIiIiNSJ
TuLbgXhsHDfxgXjziFltFd+O54j11BNz/IV3x9EE5Hqp+nYgpp7l5OQlj3i4
LYjcvKPbt4djIt4bcieb53qo9mMs47zZf/HFF0+eIPoel423xdM28u3hWnsS
397MR4xK357nyADc4jnnnFNuR8xsXGMcazjIyKHTyLeHz23m2zl/+pLlcd/R
L5EDY1T79tie707cC7g+Yp3pI+5TCnHMxO4yxyQwL2pPfDvti3GoaDueKfJn
4N1xzfl8lixnvKtOvj3GR/LrRf/FmF7u2+NYnDPOnHuC7wnb8T5Bo/j28O3E
hEesf8yZkN9Def2xLP42+g418u1c79g+f08Cr8t9FPXj/tmH9z4iD3s78e18
Zjk5hvJjxHcQz86xdtxxx7KdzE/NPoxR5Ns2I9rIfLvsR74wfHO8jwKML7Iu
nwsgnoXNvp9V317t13yODt4RYRyFd2Ein1A+htGOb2f8hfFg+oPtuV5sH3Ny
xNwN3P9Anhk+x/snEOMYsW2jZ4HUA327iIiIiIiI1InuzJcKOFWcCD6bfNP5
uqpvb+RV4IYbbkhxjHikiGmO2E98ex6zusgiiyR3cuSRR6bP4dZwH/jSvvDt
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
nUMn65odo1Xb2nE0+XbV/662oVG/jqzOPI8FbhDXTu7nyNfQLL9Eq2vYaZ+2
e92r66rn0em5N9o/p9X5tLOu1b3QTtvb6ctm349m59Xse9GsDZ2Mt7Q67+6u
6871Glm/juw+rdYd28YyYuxXXXXV9GwjD3sj8lzxfKfIt09c/cj6u5P2jWx9
q2dFs207oZPnbbvHaVQn75yQ24WYd/L3kGOG2Pnqvdkd396obZ18d0flGIb0
Hvp2ERERERERqRPd8e3hH8jXwLv/keeWnNf5eqkHcY2ZO3OJJZZI+aHB6yTy
P2LsiTkTyCNO3nnySzUak6jmb5977rmb5iiRxoQvJwdPPu/CTjvt1GV90F3f
LmM/+nYRERERERGpE93x7Tnk4mUeROJByXcL+qZ6wvsHkQ9dVyXSlXhukes+
z1Hf6HkWbv7WW29NcxszT2jMtSrtEb895J5nTlPmm2XMlnkCGo1x6NulGfp2
ERERERERqRM98e2xL96D9/+dV27MQE8lMnJGlncEmM+WuTh5fur4ugf9Rj/G
+wGttgN9u1TRt4uIiIiIiEid6Gl8u85jzKFVnmcR+f/0JOe59IyRzWkA+nap
om8XERERERGROtFT3w7x7r9+SkTGJUY2t6m0Rzu/H/p2aYa+XUREREREROrE
qPDtIiIivYm+XZqhbxcREREREZE6oW8XEZG6o2+XZujbRUREREREpE7o20VE
pO7o26UZ+nYRERERERGpE1XfPnz48C752C0Wi8Vi6euCX+dv+PYffvihz9tk
qUeJe0PfLiIiIiIiInWg6tu///77Pm6RiIhIY1566aXkVEWqxFiMvl1ERERE
RET6kty333HHHcUHH3xQfPbZZxaLxWKx1KZ88skn6e9zzz1X3H333cXQoUP7
vE2WepS4N5599tliwIAB5hoSERERERGRPiV8+5AhQ9K/U++8887itttus1gs
FoulNuX2229Pf/mdeuCBB8rPFkvcC4zD3H///SnXkIiIiIiIiEhfkce39+/f
v3j77beLDz/80GKxWCyW2pT3338//R00aFDyqvHZYol74Zlnnkn3hvHtIiIi
IiIi0peYv11ERMYUzN8uzRg8eLD520VERERERKTPqfr24cOHF//9738tFovF
YqlNIWaZvzEnJjlD+rpNlnqUuDf+85//6NtFRERERESkz6n69q+//rqPWyQi
ItKV+K0K327OEAni3tC3i4iIiIiISB3Qt4uISN3Rt0sz9O0iIiIiIiJSJ/Tt
IiJSd/Tt0gx9u4iIiIiIiNQJfbuIiNQdfbs0Q98uIiIiIiIidULfLiIidUff
Ls3Qt4uIiIiIiEid0LeLiEjd0bdLM/TtIiIiIiIiUif07SIiUnf07dIMfbuI
iIiIiIjUCX27iIjUHX27NEPfLiIiIiIiInVC3z5y/vvf//Z1E8Z67GMRaYW+
XZqhbxcREREREZE60VPfzv7jyr9tdcIiwnNgXHnm1Ynu+HauVbPS7j5Sf/Tt
IiIiIiIiUid64tvHFRfx5ZdfFt9//31fN2OshXtw2LBhfd0MKf7/teBeH92+
Kp4ln3zySXH99dcXt912W/re9QXt9sG48vyrC6Patze6vtRZva4//PDDqDkB
6TX07SIiIiIiIlInehrf/uabbxbXXXddceaZZxZPP/10WjY2eKjol3vvvbdY
aaWVih122KH44osv+rhVYxfcJ3jNww47rFhuueWKq666Ki03T8S4R1zzRx99
tPjRj35UTDbZZMUrr7ySlvW1O4vn2UcffVRcccUVxYUXXlg8+eSTfdqmcZHe
zieT18f436efftpwndQPfbuIiIiIiIjUiZ749g8//LBYaKGFkh+j/OUvf0nL
x3Tfnsc+/ulPfyrP77nnnivXS8+IPmS8Jvp36aWXTssaxZhK7xL9/dZbb6Vx
jyFDhozW44fPfPzxx4uf/OQnxQwzzFC8+uqradnocmfRB5w7fUBfQMQ3P/TQ
Q+W9OtFEExXXXHNNl7ZL79Kub4/r+P777xfHHXdcsffeexcHHnhgccABB6QS
/33BBReMsA/33/7771+sssoqaQxwl112Se9b5NtI/dC3i4iIiIiISJ3ojm+P
fc4666zknmadddbipJNOKuPbc9rNl9vuPp3m1e3u9uFy/vWvfxW///3v01jC
8OHDe3ycTrbryXl0euzuXKdO1jWqm8/06V577VX87ne/S+9JQCOP1hs5lTup
c3Rct+62p9m2nbQlvtN/+9vf0nf6vPPO6zhPeafnmJP7do4/3XTTdezbO8nP
Xd0nb8Npp52W2nDJJZd0eRZ8/PHHKb59nXXWSesXXXTR4ptvvknt08X2Pu36
9vxemnjiicsxkmr55S9/mbaL8RR+/6affvq0bsoppyzmmGOO9N8//vGPk7eX
+qJvFxERERERkTrRE9++9dZbFz/96U+LffbZp+H6TumOz23mjrtzjGY0yy3e
7nFa9cfo8HSjql97C471+eefd9yO7raxExfb3WN30rZOx6I6raeT5SeccEL6
Tp977rlNj9Mp7dz/3fXtPRkjasbhhx+e+uDSSy9tuB7v/rOf/az41a9+Ndpj
8Mdl2vXt4c8feOCBYtppp03u/Oabb06/b8wLQGEc9cEHHyzvn6FDhxZLLLFE
uvf22GOP9N4N8fHEtuPseecClwuOrdQPfbuIiIiIiIjUiZ749vXXXz/5iXPO
OSct++6777psR+wyOWfwGi+88EJDbx2uNeZG5DP7PPLII8U777yT3En4DY7B
OvI6vPbaayOdw5Q6Bw8enI7/wQcflO3LfQnbfPbZZ6V3IWc0Odsjl8S3336b
tvnqq6+auljOK47z3nvvpX0aQX+8++67yQPhjCIffNXfcCzalO9H/Q8//HA6
j3agTtqV55zHKdGvnFved/QrDpH6Of/qdYw2MZcl8bxVWMa6RvH/cQ3uvvvu
dA9Ut4kYd7ar1h39Qltp32OPPVYMGjSoR3Or5n6X/Mzk4aY08/1AH9IvXLe3
33676Xck+iG+H3x+/fXX035c91btAc6L+4L7O79fq9vyl7bjpp955pmGbef8
uIeiv7knaQP36JAhQ7qcA/XxPeMa7Lnnnime9+STT06faVNcF64Dx6I0Ggfg
eKwL31n9vnAP0X/3339/8fLLL6fPeXuhu/HttI32vvjii6n/cKWNfCznTd/F
/U+f3HfffcW///3vtIxrvdNOO6U+4LkWfUD/RT/BFFNMUUw99dRlHndzyvQ+
nfr222+/vfj5z39ezDPPPE3rjDq4Z6aaaqqUJ6j6HNp2223T/XD66ad32Ufq
g75dRERERERE6kRPfPu6666b3FjkwQ3PgScjvwzxn/n7+7yrT7wgviLqwKMy
N+IKK6yQ3NU222xTbk9M4aabbpocGNvx33l9G264YRcvDdSNN7v88suTs8u3
X3vttZOnh3CBxDTONNNM6dgHH3xwue1iiy2W1l988cXp87LLLjuCr8et9uvX
L+UlyI/D/Kq4a6At9MeRRx5Z5iqIMssss6Q+jzrD42ywwQbFL37xixSDeeWV
VxbTTDNNuQ9xtfQtbWnkFKJteEJiOzmPJ554IuXDqfYd/p1zyPucstZaa6W5
IaP98Mc//jGtO+aYY7rcA3DsscemdVtttVV5DYD81jPPPHOXuuecc87i73//
e7qmUQf5elh36qmnlseMdfh12prXQd8ccsghyal2kssjtnvppZdSW/M6udeI
a2UsgjopeDfaWr2PllxyyeKuu+4q861EvUcffXRaf+2116bxhdlnn73LfuSN
ju9I3h7ubfqV70G+/RprrJGuXb4t57z77rt32W788ccvjjrqqNSnUT/7Ud/i
iy9ePPXUU8VSSy3VZR/uZ1x9gFvGTTbKu7HFFlukbYgLJlaY+z1cebSL5wbX
hXvunnvuKe8DyvPPP5/Ovfo9mW+++coY42h3u749+h533r9//3TPVtu95ZZb
pnucbeM+3nfffdO6m266Kd2fXHc+E8NMXDvn0KgPYm4KvnfUh5ulMAaU3/PS
e7Tr2+Na8z3k2vF8qRLPz7jvuGcZQ+E7E/dj5Ariu8X7DrvuumvaNv8OSz3Q
t4uIiIiIiEid6K5vx0mst956yWdE3oXwEOFPif9cffXVkycn13F4LeJJA/wh
ng9Px/bhR1ZeeeXklvm84447Jm8cLpv14403XvrMXHiQ55U44ogj0jq2wRNv
t912yZGy7De/+U2KkY/zxvlNPvnkqV7WM//rqquumpw2RD5rjh9x65wnbhMv
Hj6O+fU22WST5Df5zHEBL8k8oCxj/OEPf/hD8pdzzTVX6UpjDCD6D8/Kunnn
nTf9JY8wfb3AAgukz/TXrbfe2mWfIPqAOONJJ500OcHw/IxpcG4TTDBB+kw+
IOYE5L/Jn06fh3OlzyHc1WqrrZaW07f5PZD3N3PLBvjecJnLLLNMscMOO6T+
irkw33jjjfIaRJ+deOKJ6XOMazz66KPJ77KOfTbaaKNUB9eLZXjWRn3QCnzM
jDPOmPanb7hO1BtOnfzcAfdWXF/uuT//+c/FIosskj7ThzFfZvQD8yxGXu+4
3ly3fE5hPG/0X8Sgx/Wm0M/cRwsvvHDpjOM64I7py6ibcRLWcx4sIzY9GDhw
YLr+Ue+EE06YxscYc4rxG8ZCIkcG84NSd3wHGQvinvjtb3+bYt3hn//8Z7o/
iAHO30cBnhvsN8kkkyTfFbAd8zuwbrbZZkvHpx+JOWYZY13Eugft+va45uQJ
iXNk7IxryXlG3u7ov7inmP8y+pnnA33AfzOHAGMrfFejP2nviiuumPqAfPb5
cRk7wM8yXgD69t6nU99+0UUXlfcA7zHwDgPv2sRYUYyrcQ8z7shvA9ufcsop
XeqL3wbGPvN2SH3Qt4uIiIiIiEid6I5vD8+Bq+U9+xtvvDF9zuedIxaQ2M/Y
lhwW4cxzL4gHwVuxHOd+9dVXpzYQW0gd1M86tuE4LCdHBg6fdXjBPDYcR4un
x7cR4x6Q5wV/yD7EYwfRpvDP9APHiJwlODjW4YTzPDH4eNwxHhMXFz6P4xCn
zXmFi2TeReJ7n3vuuXIZuVViPj5itSHqwElGm/CAOCIgLjs8JXG6cS0a5bnB
44ZDxh/SBtwnLiq8MAV3Sp/Tp5zf9ttvn5bjZNk2rinjJiwnTj/umzgWy1iH
Jw7I6U9f4ypxWQEx++Trye+jyJvMuwKxnPGMuDaMlXBdgzvvvLO8tp3MRUr/
Mi4S4y75uA/5JHhPI86XY9B++uevf/1rmZeF+4PzDOdNvhhgv/32269LTDi5
TWIfXDYxsptttlnZf3nf4cZ5lyKOT/5ovB9jQ1WfT9vz2HTOg/udOngfAMgb
FN8rnHF+rpwbnpt11Mkx6Rty2MQY0vHHH1/m+Ql/ybVjnIFjNfPttCF8e7zH
ctlll6X7lXs+4HpG/H+4bOCZ0W58O/AeBufA95S+CrhmjA3w/eS7GPcaz5S4
Rnyn6cfIGUU/sG3EyjNvavRB9R6j7TxniPnP4/Ol9+jUt5P/hWc0Y6qMeTFG
wjN3zTXXTO9zQP7bwfeP8U/GYXifge8SzwQ+M87GM8nc7fVE3y4iIiIiIiJ1
olPfHr4BH40fx2mRryKvqxnEDuMwcXrhL/HTvMOP04jY4nBXOFB8J+vC4VVz
87Ivzi2cCfGtuDJyMAd5bmiOT36ScDI4XZbhQ/O4xzhO7tujb/CSOGL2y4/T
LJ981QtFHx500EGpDvwehM8P38eYQuwbfw899NC0D/lQmuXJBuLbceb4pvPP
P79LHThGYsTpV+KD83XkVcCn4hIjtwp06tvDDeN6o1+a5b+v+nYgljrGCgYM
GFD2T3fiiGMfnHM49Ouuu66sM3elsS3ny7a0P+Jg4/owdhQx8uHt/l979/Zr
213Wf/y/MPHOCw/RoBfeYIwX3kii0RujFwYTlZB4oZCgFLVVAQEPKHIQBNFW
DgKKylGgCuXQbRErBSkgqAVSKCL2IFCLSBPmL++RPCujk7nWXsfuuX99vZIn
a+95GHOM7xhztfszvuMZPd/+7LEf//EfPzh3Mr2guw9pz3WOaj6j+xM86lGP
Wj6n8yozLtvHUY/1/eyaiF7b92LWdcaxObwtf+aiz3en+eaTc7fc+ez613Rs
dNz3HUzHf9cotJwXvOAFB58/43PSvP1yGXT9W1qHzlPMeh03b1/b9XzrV++i
ljX9bfJzP/dzy2Nlr3M+ZH1M9Xtt7kvR/OjDzGvar8fZVs7uuHn7fPc6xufc
Sr/nu9Zkrt+orrvuuq9bdtf1zPN9xztfU0bfd579JW8HAABgn5wkb5+5gGUP
M8e3HLqsade/b8vvyribT96cwvozTO+Sue9nWV+ZYNl5GWHLbx36rHL86QHf
vNM+p8yw5+pXUmZcHjLzv3t88vNy0OYe91z9Kupf0pzf6atSH5tM347Jzea+
iJPZrPP2OUfQ3Nz6m/R4c9bX/egnq5+/b9+btXtnljOW58788/Lm+exM3t6c
+PU6tczpb9M5i+3Mc/3n8vaypfLM5jP33hnX+ipMP5vGpvWfz2h76j/T+/rz
OGneXp+N5nPPfOzmiZZlru/5ue6hv52310t/5sfP+s1nTl/w45rXdk1Cy+wa
gTmW1suc/dbjvabXPv/5z1/eO8fd3Be46wB6vvnSs/zp/1/uPp876z377du+
7dsOjq3m+U9P8+7Huus4mte2D8uyy7rLG9tvvaef5dIzXpPbN/71Iu98RXPl
W9ZsYz+7v8D0jWl5c9/izhX0+HOf+9yDcTnt/Pb1vY7nmGybu56j3kXzHXrs
Yx97cK7rpHn7PNdndX6onh/tm76vnTPqOH7Vq1518PqZ317Pme39Ovd8nT5Z
HbMzBuvjNtPHpl45zd+f3w3mP1+c4+bt87quq2mOe/9d6fjq3FfnZruOqe9K
34/pp5T6otW/qv/m1PNorq3qdf13IPbvfpK3AwAAsE+Om7fP65qTO/22m/c3
mdg6hyhjrEfE5GnNsy0/az78zPGdObXrvH09jzkf/OAHDzL6+ZyZR9q1/mUj
ZSHlL7MN3/qt33owP3Hykvnz5L/1Fih/z/TWrnfEem7x/Fzn7ZMJvv71r18e
a3749LDYlcOsrwWoN8j0HW88Gpvp91GvgvV2T95e//DtXhXTk7i+48fN26fX
+yx/3ZemMV6P67q/+TyXk+Tts6x6gq/vGVqO37mX+pDnsH4ymfuzlntlcufT
mPWZuavNWV8/PuYY71ibMShjnjx2be6Nut4PM7999tt6vee+ux2fsx/q4zPH
Q70qdpnjcN4/x/Rhx3ZZYiZv7zsyPW9mnn7e//73L68vP+/P6Tid+e3Pe97z
lsfWx99p57eXYbffp6d6r+lYmHMNHTenydvns1v/9T11+171/Zq8fd2Tf/L2
jqv1fl1/byZvv1zGOvu7musl5HwX57h5++V0XmZ+L809mvsu1kum/0Z1PjId
f5O7dxxNDyu9+vePvB0AAIB9ctK8/e677z7opdC85fKxTCZVxvazP/uzy/Pl
y92fsPtaluXdeOONB/Pbd+Xt0/dhV96+7pOddd4+cxQ/85nPLPOHJ0/r/pv1
oW7uelWeW+7XHNjJN2d+++Qux8nb69lc1l4+M/P0tzO59f0wJwssy3nCE56w
5AEtvznEPd46rLd78vZ6oK+3OafJ28tJ18tf5+0f+tCHHvIZl8vbt++X2s/m
62/n7ZNJNe+3cxldUzDZZPcf7Dg6Km+fedZzD9btvP2w8d5ltq2ezHP8bY/r
LCOdi+k+mr22+5tu5+39vf7gPV8/9ukZM/nr7Lf1eu/K21/zmtcc3ANg7hew
bY7D5lCX+5UhP/OZz1yO7Tmu59h+2tOetnzH0rUck7fPuaUZo9a/azRan3Lp
yRf7Thw3b5/vz+yHjsXtvL3P63VzP9h6xtfHvWs8GpcXvvCFy+P1wjlp3j6P
tazJ7duv9cHpmpbGePr/d95nTN4+x9Vp8/bWd+692vmS9TZzMU6St8+507mO
Zmq+j3Of6HoZ9XjXO/T3vqfb5vdG95FY9xpjf8jbAQAA2Ccn7d/e6+tjMX2Q
y9x7zyynHjA9Xh+LenCv39fyLyJvn/nt5SszX32ysstpbvlJ8/b6E0wf4OYR
r+d6r3uOpHu8lqmWH5YNjrKiPvNqydt/8Ad/cHnsmmuuOZgnPfu8/HfX/PZ1
Bt7P+sjXb7/XTt/z7MrbmyM+GVfjvu5Nsh7vbbtyllmf6efcdRmdB9le5rpP
+1wnUa6edXbXOYTOoZR/z/M9Pv1kLpe3z2Nl4zMet95660P6ycxxtL5fQblu
35P1fXsPU269nt++vc9mfb7ne75nuWYlh+Xt813o+9u5gaq+HDMes4+38/Z0
vmLGvN5S6/3UZ5wmb5/PbRzmvEznPdZ97xu37/7u7z5V3j7Za9/97fvxzp/n
90K/bzr/1vrrNXKxTju/fX38zPfp0Y9+9MF1Te3z+R3U78b1ucQ+o9+J/R7t
92L9m2KO+36RtwMAALBPTnu/1DLDMrHmeM/9G9M192UT3/Ed37FkUNMjO809
vYi8vYxkdP/SOQ9Qr5fJCw+by3ySvH3Gpnzm+77v+5bH516n2+b99f8ul51M
fX3Pyub6HtVP5krn7fVvn+V1vcB6e2f86s0w84gnb++51m3mfa/Xv14ujUf3
Ux278va3vOUty2Nlu/V6yFEZV/3951qL7TGZdW1Od8dZc8S7tmDXMmdd6yk+
eep99933kOV0Tqljdt1HpPcdN2+fz2iOf5lw41FuvMv6upLv+q7vWpbRNRLz
metrCTLHXWPR2HWNydzrcZbVfpks+vGPf/zBOnZ8z31XO6+yPZa33HLLch6t
3jWN5Vp9suealnXe3rmYrgVZ90sfc07lJ3/yJ78ub2/e/R133PGQ9d4ek+7B
0O+SjvHXvva1Dxnvfq/M746uZxmXy9tbj8nwp3fSLn0PGoe2O/LXi3ecvH1e
07VO7Zv1dSPr+ybP97fl9Htxrt/p3MmYY6L/vnWMdc3LfJfs7/0ibwcAAGCf
nDRvz2RmZc5lhetr8Mvkeqxcs/nMaS5s+Wrzc8uougfmOm+f+552L8VMLlze
+83f/M3Le3bl7eXJ9baYOYcpi5m+6N2T8fbbbz94ruU/8YlPPOivkbLilt88
x/W2zc+XvvSly/PNs557X2Z6wVQ//dM/vWxH+UznCH7gB35g6RWeV7/61Qd9
sifL6bX1KOhcQcsuy19v94/8yI8sj5fHr7c5jXXPNb/6cnn7nA+Zz13n7Z0P
aTm78vbuF7h+LtOjvZyqjLk53vUJetSjHrU83uun13pZVPlq+XBzuNe9PzpH
0us79zKaa9r7u5/pvL/1mTmo9Qu5/vrrD+6l2z75zu/8zs3b3/72g+Orv3c8
lHlv39ty/lxNb5O2o/nV5bONS71dWt/Jz7sfb8drr62/yBx/73rXuw7OVTzm
MY856KvSNnYf0PV+y+S/rX/Pffu3f/vOawP6ztSHqW3puT7/+7//+5d+F2Ne
W/bXds5nl593vcB11113sM3l4X2vWm7HV/uh5zr2pzd++6Lscca85/u8nmu/
zpz7+a52/mr6Xv/wD//w0kup3xvznj6rfbXO2xvX6aU0530ay3L9fkc0Jj/x
Ez9xkLf3mX1X+m7MfZB3zW+fsf2xH/uxZfldfzHr2bUAHQ+tT8f/Om//+Z//
+Yccq9t5ez8nk+8cWb+DOha3+0Z1DPQ7q/vYzr13uViXy9vXfWOuvfbaZR92
fq9rjDpflY6NrrVYXzuTvjs91v2Du2ZpdD6xa0B6rt8dkbXvH3k7AAAA++Q0
eftcbz/zsKc3yPTDmDnjVbnZ5LGTzZZjTTZWL4t57fSenly4+yA2n7bntu+X
2nPNm+256Scz21IPi/pazHJnHvz8fc4D5Fu+5VuWx+qBne28vW3r+fK1Wa+Z
U1xmPutQle3NnxuDctDmQ879ZbfHY3LbMsz1dpez9njLX29zWvftrHdX3l6/
lPLMXjt9fWb5jdd2z5j5jA9/+MMHcz9vu+22g+U2/mVRsx1zv872T/Ot13Pf
y6imr89k23MOZK5vWM87LYPu8fq9ZDLq1nP68VfNS1/fJ7R70KaMdh5rTNf3
B93WvNeZjz/7rPx6/l6OPW644YaDe3zO58+fy3PnPqPzOTNfe/bbelte/OIX
H/RJmddPv4rO18z9TluX9XHUOa3p19RrH/e4xz3ktY3rHIPN555rPerfXq+a
XjPPr7ezTLse8JnzG+kcxnr5jXfH46xzc/e3j4GqOeHf9E3ftPy5axPmWOx7
/g3f8A1fd/x3LmP2bedmOn+Tfh/MPP7WsesWto/x9fHa9SezXa1375nv1Jwv
6ZqQ8TM/8zPLY53T2j5G1r17Zpnz84d+6Ice0su+709jf+nSpYMx5GIdZ377
HCf97lr/3u1YXf83oP237pfVucu5L0lVJt/vsNn//X2+W/oG7R95OwAAAPvk
tHl7Jp+oZ0omoy5jK38rRy3PLq+rz8y999673CuzOabTo+Oee+5Zctqu59/O
fst461FSPlvviEzGUqZaTtdc8vLdrHOQltUc1nLvsrfmc/fZrce6/3X9Z1r+
ZNLz2fOzMen55rzOY+vPefnLX748X5+QMpnmZDdXcvLDNP++dS1frJpz+brX
vW7Zhtb/p37qpx4yfs2TbpnTg36dK3VOoue6R+nsq115e5/f/mmO//RZmfVv
vJpf3HJmrv98Rnl0+67ntvt5ND99trXx/NEf/dHlXpudU+jxpz/96Qfr0bo9
+9nPXvLirlFoH9TDpGx+5grPcsune//0BFn3Ve9Y6pqEMvLZjx0r7ZfR/ux+
AuWf3/iN33hwHO2a/5qOw3L1+ti0z8ro2yfNxZ7XzWvLrZvfXr7ea8vw2oaO
2/U2pGsP2o6XvOQlB8uZMZ/9Vp+aXVlQmXBj1fel8WpObeM5x+r2Mdd3qvWe
ce1YX/fT6c9lz80rb35v29Cx177rmJjjfde1AF0/0Nzf1qVzZM27n95AnT9o
PnvnzBqP7/3e713OVbVN3S+280D125n9mK4x6fE+u3Vu/5Xr971oTDrPsr4f
br9P2s99/lyfsp1xru9h2zmo9ktj0Xp1/qLfL12/0PLX8+1bdo91H+Xt/bf+
jBe96EXL8dE6tO/b5/P97D1dS9G5pulJL2+/eMft3z6v63xk14T0O7ljr+Oj
3yPd53b+e7L+rjfXvWts5vfCvL59P69nP8nbAQAA2Cdnydunl0NzwMvL1plZ
yjXnOv6H03Y2V758nO06y+e0nTNn/zC9Zs4zXM3KntbnEy6nPiRzT86T2LUf
15+7fS/LMrLysTnmjpO5dH5hPdd+17mLdGz32qPW7zzUT+aobG/9ma339rjO
Ns/9UjsHMXPEO/bW38dd679+7M477/y67/ToPMD6sw8bi/XjnWdZj/VRr209
e/3lxnj9/Jx3O6vtMdi+D2u67qF5+3MNiLz94p32fqnpeGpfrh11bPU7a743
7D95OwAAAPvkLHl785K7Tr/5x2My0HUPlLlHaI+X363nL8/9THt81xzW0zw3
69jz6+fW9ypdP9YyDvv3eY/POu+y7sWRuYfldm571Hhs937utT1+2P0Aj1qf
42zbace15Wxvx/QW2l6n2eb1Y/P+7eXO5x3WH6L3rLdhfQ/elCNPn5CnPvWp
y3uOyuIOW+Zh473eP7O/dx1zPXe5/XZYn+/DjqPDXrtezqzjui/85O31Uuo6
hfV34bBtXS9/V5+VXX9fr/cct7vub3rc42ZefxLr9V1/72d/rJc3j13u+3PU
GJTr93uv/krun/nwOWnePt/z9et2/XfhqNcf9X1nf8jbAQAA2Cenydsne5h7
gdafu3ugvuENb3jI8+v870qZvhMXnZccZ1v3YTzOw0nHc7b7LPtg136csXz8
4x+/HIf1aqlv/brXyEmXeR6vPYuTHCNHjck6b5+eQdvnGE667F3Pn8RJxu+k
35WL2D+zzMlfy9brLVJvko63fudt57NcnNPOb5/9eNLv+sPxfed8yNsBAADY
J6fJ20c9Jbrv4NxfsZ7ikVHwcJjj7BWveMVyP9LD5o4/ksz3+b3vfe9yn9TO
hU3eLoM6ncl1uy9v/fD7XVcvmTe+8Y3L48b14XGWfjL8/03eDgAAwD45S96e
Ms9Lly5trr/++kPvbQgPl0f6sTff5zL27kt8zTXXbO6///7lsUf62JzWjFt9
i7rPcff1Pc39CDgbeTuHkbcDAACwT86atwPARZO3cxh5OwAAAPvkPPL2h6u3
NXA8c79QmeT50tf7ypG3cxh5OwAAAPvE/HYA9p28ncPI2wEAANgn8nYA9p28
ncPI2wEAANgn8nYA9p28ncPI2wEAANgn8nYA9p28ncPI2wEAANgn23n7Aw88
sNwLUCmllNqXKl/v5+TtDz744BVfJ7UfNceGvB0AAIB9sJ23f/WrX73CawQA
u3384x9fMlXY9rGPfUzeDgAAwBU3/y791Kc+tbnxxhs3t956q1JKKbWXdfPN
N2/e8Y53XPH1UPtXly5d2tx0003LtQ8AAABwpazz9uaF9e/V97znPUoppdTe
Vf+NuuWWW674eqj9q3e/+92bd77znfJ2AAAArqh1P5m3vOUtm/vvv3/5e/9e
VUoppZTa5/q///u/5f9bPvKRj2z+7u/+zr10AQAAuKK28/YvfvGLy79V+/er
UkoppdQ+1//+7/8u/x/z4Q9/WN4OAADAFSdvV0oppdTVWvJ2AAAA9om8XSml
lFJXa8nbAQAA2CfydqWUUkpdrSVvBwAAYJ/I25VSSil1tZa8HQAAgH0ib1dK
KaXU1VrydgAAAPaJvF0ppZRSV2vJ2wEAANgn8nallFJKXa0lbwcAAGCfyNvV
layvfOUrB3Wl10UppdTVV/J2AAAA9sl55O3rzPSk9XD8W/yRmueedpsvt3/O
azxbxuQiHYf7sn9Pu7zzPsbOsv/Ocz2UUmqfS94OAADAPjmPvP2rX/3q11WP
t5yWv+v59esussoeH3zwwSueBzyc1TaXP5w2t5h9t/77+vn2W2N61py7Zdxz
zz2bO++8c/Nf//VfO7fjqPM0rcusTzV/P+vYnfa47H3nlXWfZj3mPee5Hkop
te8lbwcAAGCfnDVv79+5999//1L/8z//s1R/fuCBBzaf//znN3fdddfBY/P8
+jUX+W/wmT9dpnvRn7VP9bWvfW3Zp6fJw+d9d99990GGsV5G2n/33nvvcuxM
7n7SbKT3/tu//dvmhS984ea6667bvOxlL1seW+flh52j6TP7OdvZMVulx84y
L7x1aPu+/OUvn/j9sw7nkXW3Hi1v1us46964tO4d671f5q6UeiSUvB0AAIB9
cpa8vXyvzPSGG27YvOIVrziol7/85Zs/+7M/2/zJn/zJ5sUvfvHy5/XzVflq
nzfzk8/7398z17eff/3Xf7154xvf+IjoS982f+pTn9q8853v3Pzpn/7p5p/+
6Z+WDPqoed/rrLb3/dEf/dHm+c9//rKf7rjjjoPstvF73/vetzz/ghe8YPPa
1752yd17/CTZbuvSOvX+3/iN39i8//3vXz5nltO6dDy++tWv3rzqVa9afk61
Tm9+85uXZXTs/eVf/uVy/LWt/fnf//3fT5U1z/HypS99afOGN7xhqRnPy723
z/vkJz+5+eM//uPNRz7ykTNl3bP9//Ef/7Fs69///d8v38/jLK/P/cd//MfN
9ddfv/nP//xPmbtS6hFR8nYAAAD2yVnz9o997GObF73oRUvW+NKXvnTJYsvZ
/+AP/mDJUp/5zGdufud3fuchz/ezHP51r3vdmfp3HFUzV/nd7373wXrccsst
Z5r/fNQ4TM2c73m8v1eN6brPR8+tx7nn+vu69808tr2s9Wdsb3OPd77jV3/1
VzfXXHPNsk9z1Hzt6cXyN3/zN5tf+7Vf27z+9a/fvP3tb9/81m/91rIfP/vZ
zy6fefvtty9j2fIb12c84xlLJnzYPpxtXK/zrGNzsDsmytDHzMfvPX3WL/3S
L22e8pSnLD9/5Vd+ZZkH/4u/+ItL1v/Rj3508+xnP3vZxp679tprl+qxT3/6
0183V/64x0w/Oy6f+tSnbm6++ebleLncvr/vvvs2f/iHf7j57d/+7c2//uu/
njnnbiy/8IUvHCyz71gO25451jtn8Zu/+ZvLd6zrE056HkQppa7GkrcDAACw
T87aT6Y8ryy3KkMtK6yHzHOf+9wlV29u+7Oe9azNu971ruX1vWZef9Ze20et
Uzlp//YuE24dyiDL/T/+8Y9fdr73Savst3nVZZxl1s0xnj42Zbbl1+9973uX
HjqTqff65nU3Dj1Wvtrc8XqZT9+UxvHWW29d5lyX6Tb3vLn6//AP/7C8/rAs
tc+pl0+ZcdlDjsrbJ69tbP7lX/7l4Jhou8q6myOf8vHf//3fP8g23vOe9yz5
fOu8fcy0ja1j69pc8V773//938vYdwy07b/3e7+37JdLly5tPve5zx2cj+hn
87Mbu97XeZLmtJc9t0033njj8prG9ZWvfOVy7Pbapz/96cv6nuW8yszzb758
x23z1XcdL+se8p0z6DibcTqPY6t90HmO3/3d313OZzU+u/Lz2Xf1v+88RPun
/XHex7hSSu1rydsBAADYJ2fN29f9tHtfWWW9Yppn2799ywMnu5x5ujPH+SLn
tX/mM59Z8twyyLLI8tuyy/qF9+fW9ax55OTDbd9znvOc5fxC210u3hzrHmuO
eJlyeWzjUiafxrpsuHVLY9Pc7XqslI237L/6q79a5pe3rJe85CXLHP2W1TJf
85rXHJzf2M5g034oC//bv/3b5e+Tt8+9VLdr9sns+/LaxunJT37ycq6gvzd3
vLy/P/e6jpnOYZSXN+brcWm7Guu2u3Vu/3dNQ+cByt3LyXuubel1Zf3reeFz
PPVzxqs5+41x2z3rOa//wAc+sPn1X//1zS//8i8v5yjmODvt8VO+/bznPW+p
cu/18TLz8BuvxvdpT3vacg5gPQbnUS2vcx5dU9A5o86jrPf3nJtoX3fNQcfH
P//zPy/bLmtXSj1SSt4OAADAPjlr3l6tM9L6pJc/Ni95+qjUi7rcuznv5eAX
Ofd25lU3F7sst/4ekw83V3l6oDRn/DT3+lzX9GEp+66nSX1IGr8eKxfu8+sx
nnKA8uJy5nzoQx9a5mqXjzZO73jHO5bny9frid7yy7eb113m2phOL+/y3/qF
H9a3pG1tPXbl7W1z5l6jo7/P+Y+5PqB1arw+8YlPLGPa+vTY5MrN32+fvvWt
bz14bN7bnO/mm0/+W6+TllXmPnP/65fy53/+50tevGs7ps977y3Xb3zK5Sf7
7jM7T9H4t26NZ5/buu7qt3OSmvn+nT/pfErLnPnl89m33XbbkoX3+RfRF2nO
OfRd6lxC38/ZrnVfoq6p6PjoPM9F9EtSSql9Lnk7AAAA++Q8+slMxlofjzLW
+nyss9uUi5Zddi/H5jefx/zyXTXzwluPepms+3j357LLctkyyunbctp8crax
ucWdTygnbxzKksuGpzd587HTPO7mvDfGvbasul4r5c2NS8vpPqVl9D3fMupN
0/KaH95nNHd7soXDxu+wvL31bX59OXKfMdU5iTL11mPGqfMijWFZcu/r72Xa
9W2fbL392PzvzrGss/+2t3MNZevTPyad5yhzb9585zvK25vPvx7L7WOrPLm5
481bb45/6zjnOVL+33UB9XZvv7a87Xngp605psuy20+TqTe+3ZO28Wgb2j9n
zfcP+27NtnZdQevRMT3nq/pZD6L2U8f8lc68lFLqSpS8HQAAgH1y1rx9/p1b
nl7GWm7cMtb54+Tx9SVpnm75bO87j0x0/RmpT3y5ZPPCt3tvzM/OB5TNllWe
dC7/uiYjbv7zDTfccLBNzT1v3vPb3va2ZbunR3vz3+tx01j3eP1lytfLn8tu
P/jBDy7LKSOvF3hzust1e21z3Muvy+DL7XvtYfPzj8rby+/LyOsJ3nL62d+b
d19u3GeV9Zftt67Te6ecvnMFLa9jZnrG1C+8e6tO3t469Z7W/S/+4i8O8vae
772dcynjLzefvH3X3PC5b2rr0jFV3l7uvn5Ny6yvffPfy91bdtcZ3HTTTWee
a74e146ljtu5vmDuj9o+6zzFWe+PernvV+PQuY3uQ9w2dr4knSfpO9e1FD1/
EZm/Ukrte8nbAQAA2Cdnydsn466/Sblx2Wt/Pip/rPdIOXDZ5Xn1u571qHdJ
88CbJz7zoNfr0b/JyyTLJsu163c9/V5O87nrvL0stFy55df7u22sV0pm/Zqf
3RiVa6dcuFy6PiDNdS8TL5Pvdc0r72fLnx4wLaf1bazrRd/nbI9161TG3Rzv
1mHulzpz4ZtXXnbeOkz193LtPqfny7c7X9B5g8x1AK379MNJeW/5b+cGptdK
r2t8p2/9evub79+Y18P9cvPb5z0dl90n9dprr136t8yx2eu752zZdzpuy507
H9H+3z7nc9rjasakufmtez2JOo/Q+HTP14vs39K2rnvY15epfd95l+5r28/p
Lz/7af2eK52BKaXUw1HydgAAAPbJWfL2ssjy2uZpl0U2Bzu78sfJLlv+3Cvz
9ttvP5dcsOU2x7nMujyyedeHZf7Th6P+KHM/zLvuuutU2ey6n0z5/cwh73Ob
H9785z6nZTdPvTnS5bbTK73HmjNentz9MFO/kN5Xnt48/DSHuusHWn7qcfKU
pzxleTzrvjJz/9Py8+b5N8e+zyp/n7FqbNbV/m6dypXLxMusy5Lbjh7rvT3f
uYDy9XLfljPXCfRZ6/uXtszOQZRJl4n3+Z0baDsbl15bP/Ty+OmDsn0cTH7S
XO7GrWoft+zWpdy77Suzb257y+lcS/PbW6+51uCsx9ZsT5l21wO0/R27M8//
IrL21rtx7xqGzmW0L/rZ+aT62jSOHR+tS9eKdC+AeV3V+86jh71SSl0NJW8H
AABgn5wlb+915XvlnpcuXbps/jhZ98zT7Z6m55WLvulNb1py0Mlkj1qPmTtd
TllGWy/308xTnvVunnH3OZ3ce3rKlKW3TmXp5cVlzZ/+9KcP5oKXh/aaJz3p
Sctc95Trdu7immuuWeZzp57pZeDl0y2r8S7jnx4icw/PtqFtqkdM4/vkJz95
+fz+fPPNNx86FlPNNX/CE56w9ELvPZ2LKNfts8rUm5fe+jZ3vX3XNpV1b++/
1qntKAsvj2+dW4/OIzQ/v/3TujdfvvMP67Hc3kf1q3/iE5+4+YVf+IXl/ERa
fudqWrfy9baz8WoOfOt91L1kz5LlNKe8be/ag9nX5523r3vyND6NW7l61bHa
9RBVPdvnzz3e861bf24fdZy5d6pS6pFQ8nYAAAD2yVnntzePtuyz/i2H9RPf
9e/iepH0mefR86P1bY56c6F77Dh94ed9zRmun8pZ5rd3zqFceL3sss7mdNc/
pxy7DKDzDOseOv35Ax/4wJK1z5zxHm/+ej1mJk9vzLp2oHnb9aipX/r2HP7Z
nsa0z6rXecstD+98QvPjDxuHtqNeOK1L7+19zd+e5XQupXVpm8px26bu31kv
+MmHt8e7dSujbxltf/PsW7fp/d7n1T+/8wPrsVyvV8u98847D7al3jFzriLt
8+5/2/Y1z7sxaxznNeeZ58w89/Z1Y38Rn7Guvk/ts/Kj5vKvq/nrbWvH7vrx
jpF+dl6g+fHmtyulHgklbwcAAGCfnPV+qdNb/CT3Pp252NV5/Ft7suac9H05
yz1Tq7G97Bnb9c/1GM3nb6/DWOel69fNz+3xnpz/MEdtw/QIP8xk6tvLP2ps
59iYdV7Pt15/3lHrtf687Xvwrsf1qHE5r5rPvOis/Tj743L0b1dKPVJK3g4A
AMA+OWvePr1MTvPv4/PMLK/kekzP9MPWaf1z13vry75+rr9vPzbvP2pZ85nz
/nUdZ2xmXY5672zrccZ7e/u3X3/YuB22PbvOL8zjlxuX8zzOHq4eLTM+p6mH
Y/2UUmofSt4OAADAPjlr3q6UUkopdaVK3g4AAMA+kbcrpZRS6moteTsAAAD7
RN6ulFJKqau15O0AAADsE3m7Ukoppa7WkrcDAACwT+TtSimllLpaS94OAADA
PtnO27/whS9sHnzwwc1XvvIVpZRSSqm9ri9/+cubr33ta/J2AAAA9sJ23v7A
Aw8sf+/frkoppZRS+1yTr3/0ox+VtwMAAHDFrfP2G2+8cXPnnXduPve5z20+
+9nPKqWUUkrtdd11112bz3/+85vbbrttc9NNN8nbAQAAuKImb7/jjjs2b37z
mzdvfetbl59KKaWUUldDvelNb9q87W1vW+YN1BMPAAAArpSuxU79T+++++7N
fffdp5RSSil1VdW99967ueeeew7+vwYAAAAAAAAAAICr35W+55lSSiml1FkK
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK5m/w/t6NZb
    "], {{0, 585.}, {750., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{750., 585.},
  PlotRange->{{0, 750.}, {0, 585.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8672490849354277`*^9, 3.867249101873516*^9}, 
   3.867249183387917*^9, 3.8672520845880423`*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"8123ab86-a188-460f-a593-5f09a048f1ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "decae1fb-934b-4965-85ae-6e37e5cdcecc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"aceec9e7-e157-4523-8f71-cc48343b420f"],

Cell[TextData[{
 "Search text for lexical patterns. While similar to ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "293bdebc-2440-4ed0-8fc3-a8c77927c731"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4348b293-9086-405a-9552-69b6d97eff98"],
 " etc., content types can be used freely in a StringExpression (as opposed \
to expressing complex lexical patterns in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "578be5d6-01cc-4cb0-af57-3cf5cb9a62df"],
 " wrapper). Files, search index objects, and Wikipedia queries are \
supported. Results are returned in a summary object which supports several \
subvalues. Consult the documentation for usage."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867249288040543*^9, 3.8672494722485037`*^9}, {
  3.867251889550839*^9, 3.867251893349916*^9}, {3.867251924252048*^9, 
  3.867252040200535*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"c1aaae7f-d588-4f0c-8c09-ee4cd718d433"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0cb0e03a-580f-49ee-bb88-740a53023144"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"352226ab-4d79-4cc1-8a2a-d8324aa5fd29"],

Cell[TextData[{
 "I developed this functionality for a particular work task (Lexical \
Programmer @ Wolfram|Alpha). I needed to find adjectives that precede certain \
phrases. I started by gathering article text from Wikipedia of relevant \
domains, then searched for the desired lexical sequences. The initial \
approach used ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fa4dd15f-260f-41e8-a56d-887bcbb7f69d"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4b48e437-49df-4325-a041-f22e31d1df55"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9928c496-c3d2-42ce-b07e-144e09250aa0"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "313914b0-114a-4161-84a7-dd8df99fc946"],
 " for example), but it was slow. So I designed some lexical tokens I could \
use in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox[
     StyleBox["StringExpression", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"], "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "39052c76-7a03-425e-a578-2690fb569e90"],
 " that could be used with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5918dfec-d60f-4776-bee8-33480bbbe97c"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.8677912350480967`*^9}, {
   3.867791269135138*^9, 3.8677913550069532`*^9}, 3.867791480276322*^9},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"628b9ad7-8f2f-4a40-8a4a-86b031d29af4"],

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "05e1d942-067f-495a-a88d-a12fd53cf9a7"],
 " is used internally to extract examples of a content type from the source \
text. These examples then replace the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextType", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "35db54d3-a537-4505-9830-8c49b58c76bf"],
 " in the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringExpression", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cdb3404e-fd29-43a3-a681-d20c7be1b5c9"],
 ". You can see the lexical pattern generated from a piece of text with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ExpandPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/ExpandPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9334e845-e2b3-4b40-91c8-9c8e70f23888"],
 ". Note that this means, for example, if you have ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["TextType", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox["\"\<Adjective\>\"", "TextContentsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "StringTypeLink",
      StripOnInput->False],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"ref/textcontent/Adjective",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f28b404e-41bc-4970-bfc8-9a0b79f3d136"],
 " in your lexical pattern, the token will be replaced by all text snippets \
identified as adjectives in the source text."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, {
  3.867791371520297*^9, 3.8677914240855637`*^9}},
 CellTags->"DefaultContent",
 CellID->95094794,ExpressionUUID->"390476ab-a40d-40b4-866e-605ec2cae6cb"],

Cell[TextData[{
 "I\[CloseCurlyQuote]d also like to say thanks to Swastik Banerjee for \
helping me improve ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SearchIndexObject", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/SearchIndexObject",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cbdf0774-d7a3-4673-be2b-ac33524c117f"],
 " support!"
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, 
   3.867791366308352*^9, {3.86779144799393*^9, 3.867791450914543*^9}},
 CellTags->"DefaultContent",
 CellID->601398866,ExpressionUUID->"8f7f9486-ccc2-4770-952b-c49212f6fe06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2360b3c3-6e63-4f37-8cb5-ddd7c68dec7c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 DefaultNewCellStyle->{
  "LocalFileInput", TaggingRules -> {"FileInputProperty" -> "MainGuidePage"}},
 
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->254653237,ExpressionUUID->"f416675c-8907-4149-8292-18fb9f1ff535"],

Cell[BoxData[
 RowBox[{"File", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Documentation\>\"", 
     ",", "\"\<English\>\"", ",", "\"\<Guides\>\"", ",", 
     "\"\<LexicalCases.nb\>\""}], "}"}], "]"}], "]"}]], "LocalFileInput",
 TaggingRules->{"FileInputProperty" -> "MainGuidePage"},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.86725186043613*^9, 3.867251861883181*^9}, {
  3.867252123136656*^9, 3.8672521757680273`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->835369788,ExpressionUUID->"5f4d3f82-043a-4a10-92c7-e0d7b0c703b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe default content appearing here \
shows the recommended structure for this section, but any of it can be \
removed or changed as desired. Use additional cells and cell styles as \
needed.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6332bb2c-a278-4cd0-afa6-9dc3253d5922"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->405986742,ExpressionUUID->"5bdc36cf-9792-4602-b8c1-7bdf8a169d07"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "55aee260-762d-41e4-b547-01e7a5d39d72"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"9876ff37-ed5f-4bd9-bdc8-6c1d44fdf9d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[3]:=",
 CellID->633295841,ExpressionUUID->"294798e5-e121-496a-8993-8a0953008279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->256310072,ExpressionUUID->"694b766c-df77-4aba-8c53-1431298f445f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"4c9fcc44-25dd-4ba3-a583-6ee0d0fe1c8d"],

Cell["\<\
Search for verb phrases beginning with \"Alice\" in \"Alice in Wonderland\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251031141988*^9, 3.867251071471037*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"d6107dfe-2927-4701-8f84-65c667b2eedf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alice", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867250923402269*^9, 3.867250945044845*^9}},
 CellLabel->"In[5]:=",
 CellID->222665312,ExpressionUUID->"2a555123-14a0-4237-ba4f-9065fe6610f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "=", 
  RowBox[{"LexicalCases", "[", 
   RowBox[{"alice", ",", 
    RowBox[{"\"\<Alice\>\"", "~~", 
     RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}]}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867250886366906*^9, 3.867250907934865*^9}, {
  3.8672509485911818`*^9, 3.867250992716366*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[6]:=",
 CellID->593829399,ExpressionUUID->"2f00fa94-931e-41fb-bafe-7256e7bd1b37"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["21", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["21", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FaizonZaman`LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "Alice had not", 
       "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
      "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
      "Match" -> "Alice's first", "Position" -> {{3456, 3468}}|>, <|
      "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
      "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
      "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
      "Match" -> "Alice was soon", "Position" -> {{18290, 18303}}|>, <|
      "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
      "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
      "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
      "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
      "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
      "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
      "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
      "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
      "Match" -> "Alice got up", 
       "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
      "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
      "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
      "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
    "Dataset" -> 
    Dataset[{<|
       "Match" -> "Alice had not", 
        "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
       "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
       "Match" -> "Alice's first", "Position" -> {{3456, 3468}}|>, <|
       "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
       "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
       "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
       "Match" -> "Alice was soon", "Position" -> {{18290, 18303}}|>, <|
       "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
       "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
       "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
       "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
       "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
       "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
       "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
       "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
       "Match" -> "Alice got up", 
        "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
       "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
       "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
       "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 19], <||>], 
    "Source" -> "Text", "TotalMatchCount" -> 21, "LexicalStructure" -> 
    TextElement[{
       TextElement[{"Alice"}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867250913373678*^9, 3.867251001476802*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[6]=",
 CellID->1165345827,ExpressionUUID->"62fa5c5f-a025-4dec-bf2c-072101485515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8672510052463713`*^9, 3.86725101515628*^9}},
 CellLabel->"In[8]:=",
 CellID->1085443159,ExpressionUUID->"4f854be9-a0d7-4317-894e-5af4214cd5ff"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQmcTuX//38z1uzZs2WXXZYQWcqnGhHZUhR9ZSllKUK2LBHJhGTJUiJL
diFMX8OE0deQiLGbMR+GbEO2ofm9/vf74fqfzjn3mXNm7jNuvJ6PB4+5r/M+
17muc5/zfl3va7uLv9Xrla5pPR7PB5nw3yudP2rUt2/nga1y4kOb9z/o0e39
t7u8+P6Hb3d7u2/tt4KQeAS2Y/Hv//s7kRBCCCGEEEIIIYQQQgghhBBCCEkx
/3jxV27/SwghhBBLrJX05MmT0dHR1GVCCCEkdbCQ0Zs3b+7ycuvWLT/qcjwh
hDwE0OMRpySpywiW/8+Lv0JmPqWEkIcHejziFGtdVsGygI/UZUIIsQ89HnGK
tS5LsHzaC/7AR+oyIYTYhx6POMVClyVY3rNnz507d27fvo0//BIy8yklhDw8
0OMRp1josgqW5aO/QmY+pYSQhwd6POIUX7qsDZYlxV8hM59SQsjDAz0ecYov
XZZg+cyZM9pEv4TMfEoJIQ8P9HjEKaa6bAyWBXxMecjMp5QQ8vBAj0ecYqrL
J06cMAbLAhJTGDLzKSWEPDzQ4xGnGHXZV7AspDxk5lNKCHl4oMcjTjHqskWw
LEjIDDPqMiGEWEOPR5yi0+UbN25YBMtCCkNmPqWEkIcHejziFJ0uJxksCykJ
mfmUEkIeHujxiFO0uizBMgT36NGjxy2BAcxgjFOoy4QQ4gt6POIUrS7HxcX9
n0NwCnWZEEJ8QY9HnOJrXxH34FNKCHl4oMcjTqEup5zDhw+v9nLy5Ml7XRZC
SGDx4Hk84jbU5ZQzffp0j5c1a9bc67IQQgKL+8LjTZkypUWLFpMmTXLJnjgi
kHV59OjRwV7wDPiy+f3334Pv4r+74gzqMiHEF3Y8nvJ1ipdffrl79+6ffPLJ
qlWrLl++7GoJ/+///s9zl127dvndnjglkHW5bdu28tWXLFnSl83AgQPVE5Ls
mzBq1KhnnnkGWSXvdOoyIcQXdjye8nWmFCtWbNOmTe6VcPv27XKhDBkyHD16
VKX7coy+7Im/uC90GYSGhpraQLJTrsvNmzfH6fg/eadTlwkhvnCky/299OvX
r2vXrgiZc+TIoRRwx44d7hVywYIF77777k8//aRNtHCMpvbEX9wvuvz2228b
DX755RdtqzLZN6FevXrUZUKIGzjSZV2XdVxcXJcuXeRQs2bN3CymCSl0jCTZ
BL4uZ8+eHf8/+uij58+f1xl069ZNGVjo8uHDh9euXbtv3z5fBuXLl7fz+MXG
xm7cuHHnzp2XLl3SpitdVq1HWK5fv97iioSQh4SU6DK4ePFi8eLFxQeannvs
2LF169bt3bvXehj6v//975YtW2Bp3y/ZdIwpKZUWuFbcqDNnziTjcg8Yga/L
jRs3zpkzJ/5YtGiR9uiFCxfy5MmD9NatW5vqMp6K4ODgfPnyqYAa+eimkFWo
UKFgwYJp0qTB0XTp0uW8y/z587Vmc+fOLV26tMona9asr7766okTJ+So0mWo
9g8//PDUU08FBQVJSpEiRRDUO/5WCCEPCinUZdCiRQs5iga/SoTl559/XqhQ
IeWXsmXL1rNnz5iYGN3pu3fvfvHFF7VdixUrVpw6darWpkaNGvB7zz//vHxM
0jHq7JNRKsnhq6++wqFOnTrlz59f7HHRrl27GqOwhwp5Zpxu86VIBV1++umn
8a3hj5YtW2qP/vjjj0gsWrToJ598YtTlF154weOD8ePHKzN58IzMmTNHDPB4
qJdCB5RabJQuN2rUyGj2yCOPHD9+PEVfEiHkviXluiyqmj59eqVWcXFxzz77
rKlfevzxx48cOaLOhfPRqmTmzJnV3yEhIcoMZyGlbt268jFJx6izd1oqlcPL
L79cqlQpo33v3r3t3t8HEaXL/3VO6uhytWrVEPnij0yZMp06dUodbdOmDRL7
9eunpmRrz3333XeRUqdOHTxIv//++8mTJydPnowHG4lomJ07d07MVq1atXLl
Sglv0YZceRfVlzJkyBDJ/NFHH505cyYerb1793788cfIavbs2WKjdBnkyJFj
+PDhW7duRR2rV68uiUOHDvXDV0UIuQ9JoS4jnJSOwapVq6rEvn37ij2iA/gr
2ISGhqq44Mknn1RjbXA+ktijR48DBw4g/+3btwcHB1eqVOns2bMqQ53OJukY
TXXZfqlUDsJ//vOf77//HnH9mDFj5KLZs2d/mDu0A1+Xy5Urh2epWLFi+Pur
r76SQ6dPn0Yc6vGunkPLyqjLeCSWLl2qy7BXr15iuX79em266LVxGCUyMjJj
xow4lCtXLt2gzLFjx9TfSpeLFy+Oe6I9XdKbNm1qp76EkAePlOjy4cOHn3/+
eTn03nvvSSKcTLp06Tze9VPaPQYRTTds2FCMFy5cKIkISD3eWFsnc7qOYlOd
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
HPDcJSoqKhlFTTbUZUKIYN/jDRw4MH369OKyIiIidEfhcnfv3o3/fZ1+8+bN
7du3T5w4cfz48bhifHy8nYtGR0fv9nLhwgXjUWTy888/jxkzZtKkSWgw3Lp1
y06eSeL3usTGxi5fvnz48OFz5syB5//nn398WUJNfv/99z179hhtBgwYIDe/
TJkyxvufmtwXurxx40alsLjzpjZGKdy7d6+ckjFjxri4uGQUNdk8nLp87ty5
xl6OHTt2D4tBSEBh0+NB/jwaIIKSfuXKlXXr1nXo0CFdunRIb9iwofFcyOXH
H38MR6fNIW3atD179oQMWVwUjjFPnjxi//333+uOrl+//rHHHtPmWbhw4eS5
fffqcu3aNWTo+TdVq1Y9fPiwzvLgwYMhISElS5YUm82bN+sMcF2VA8zu3LmT
7JqmkPtCl99++211u5544glTG1MpRAuqT58+qT+483Dq8h9//CHfEf64h8Ug
JKCw6fG6deuGdweCtWrVKoSuEs3BzYqEKerXr687ETbVq1eXo2nSpKlQoUKt
WrVU3N2yZUuLi7Zq1UrlrNPl0NBQ5Ib0DBkywJXVqFFDSpI5c+a1a9c6vgvu
1AX21apVU9pdrly5HDlyyMecOXNqo+x3331Xp92ooC43NAmOHz/eu3dvMQgP
D09GNf1C4OtyQkJC7ty5cZdef/11C7ef+lJowcOpy2h/UpcJ0WHT4z333HN4
d/AiaxNjY2Nz3gW6Y6plUJ9KlSrhUPfu3c+dOyeJUVFRjz/+uLyPJ06cML3i
woULtTql1eUbN26ULl0aiXnz5lV+PiIiIl++fEgsVaqUdRhuiht1eeuttyS9
Xbt2ly9fRgqCXFQkS5Ys06ZN01q+9957culHHnnEly4Lf//9tzRIvvvuO6d1
9BeBr8vr1q2TtlN0dLS0hQYPHmw0S54U4jGQgX7rLouYmBiIjv3OcClMgwYN
VAousXPnTnzj1ieePn0aF/L1Hmm5evUqmnOHDx+WdrW81MnTZZtlO3v2bFhY
2LFjx3yN3SxdupS6TIgOmx6vdu3aeHfat2/vy0A6YI1aBk6ePLlixQpd4vz5
8+V9NJ34eubMGenBRoZGXYZvkcSpU6dqz1q+fLmkI/Mka2SBX+oCPymhdNu2
bXVO6dKlS74uPW/ePGtdBpB1GEycONFuffxN4Oty586dcYtq1KiBv3H/Pd5B
eaOZqS4/9dRTuXLlatq0qdF+0aJFZcuWlXYRyJYtW8eOHc+fP6+1wXcdEhJS
qFAh1aQsWrToggULkiyzFOY///kPHo+uXbsWLFhQ9bT07NnTOHcCete8efMC
BQqoC6HYs2bNMs38999/xyscFBQklmgBjh49GnW0qctyT2bPnm2zbLgJU6ZM
KVKkiCpb9uzZ+/btq33y8bKgCY10ZZDLS61atZIsDyEPNjY9Hl4WvDtwd74M
LLTMFKWtI0aMMB5t2bKlxzv3BmUz6jLkWBIRKWjPgjcoV66cx8fQsH38Upce
PXokIxCwo8uQAxiMHz/efrb+JcB1+ebNm9Ad3KJhw4Ylam7p7t27dZamumya
COlp06aNxwwotTK7fv26iJ2QKVMm9ffQoUOtiy3XLVasmJpjoOWjjz7SGr/0
0kumhQGTJ0/W5fzDDz9kzpzZl70dXZaytW7dGs2bJMt27dq1559/3vRayAdN
bjHDy2Jqg1c4yfIQ8mBj0+Ohwezx9t/6MnCqZWiuy2u4evVq3SEEF3Jo5MiR
hw8flr+1ujxw4ECPt5fS2DmGxrzHOwHMZjHcqwvKgJTGjRs7urR9XR41apSj
nP1IgOvymjVr5B7+9ttv+PjXX39JnDhgwACdpX1dxt2WPPPkyYNHEeJy7Ngx
KEuGDBmgesoM4itmaFhKxzIe4Hr16nm8czOOHj1qUWy5rhAcHLx06VKcO3Hi
RJn2kCNHDm2ncZ8+feQRXbhwIbK9cOHCzJkzURgkIpjVLmNE21UeGHl/9+7d
Gxsbu3jx4uLFizvVZZtlk9dTFHbjxo2IkXfs2NGkSRNJrFmzpvT/4wbiqBrr
CQkJ2eiFHdqE2PR4VatWxbsDb+DLwL6W3b59G+ojfbxofl+9elV7FB5PZuwg
QodlVFSUUZdVvBwdHa3LXBrhadOmTcmaqZTXJS4uTkqoQglIEsJquETrDO3o
8qOPPgqDQYMG2a6QnwlwXe7YsSPuT4ECBVSzTZQR4qKztKnLhw4dksgXd143
jHv27Fn1N6RKJuq/+OKLWpvLly9L/N6jRw+LYivtGzx4sLbBqaau7dmzRyVC
7NatW6fLoV+/fmK5ZcsWlShd+sYHBs9qxYoVnepykmU7cOCAvA7Qfe3aRryP
MpwNVq1apdI//fRTSaQcE6Kw6fFy5cqFd+ezzz7zZZCklp06dapXr16tWrUq
VqyYvImlS5dG611n1qJFC493WvXBgwcTvbOqjLqslqbqJvPAU6n+OuvYxJqU
1wWRmqSjCQGpFQcoVKlS5ZdffvGVsx1drlChgsc7bJ3sCqaQQNZlhIoyZNml
SxeVOG7cOLmrEkErbOry+PHj5XTkY3FpvB1iZlwE98477yD96aeftjhdrmu0
mT17tmT7008/WZwO8FzpXhZoaNasWZGSL18+4xwt+/Ox7Zdt7NixkmKcNxIR
ESGHtGP31GVCjNjxeGFhYcaGro4ktWznzp0eDQULFty/f7/OBv5EjoaEhEiK
qS4jSi1btiwSg4KCPvnkE7jB33//XToVVf4p2Wc45XXZtGmTHJL52wDuUc21
Tpcu3cqVK01ztqPLb775plz0ypUrya5jSghkXV6xYoXcwDVr1qhEBLyS+OGH
H2qNberyG2+8IadbT66WOD137txHDOC6Hm8Ib3G6r8nhkDy5uunkMdzSRYsW
9ezZE6KZN29esZwwYYIcPXnypKS8/fbbxnOd6rKdsqnV+qaTG4sWLerxhtIq
hbpMiBFrjxcfHw//Jm8Tmtw3b970ZZmklp09exYhXr169dRmIGnSpNHOUTl9
+rT00DZs2FD1lZnqcqI3ZJZpyVoQ1L/66qvytzFmsU/K66LUwePtPoXIJiQk
3LlzZ86cOdIjivjadDtNO7ocHh4uU4KbNWuGJlPqbzASyLrcvn17uYHly5d/
UoMkFitWTGtsU5dl0XqOHDmsL63WtvsC7UaL031p34YNG0x1GeFncHCw6YXU
nEC1HRDCWOMVU67LxrLJrcabaJpPgwYNPN52qVrJSF0mxIi1x5s0aZK8NXh5
d+zYYZGP/TFZaC7chQxYg9mzZ0t68+bNJWXbtm3KjW/dulUSoXr4KKuAhX37
9kEcZTAa/hYRwcGDBwcPHiz2an1xMkh5XVAFSSlXrtypU6e0p6jtNE3vpx1d
BgiI1H4mMTExTirnBwJWl69duybdthZs375d2dvU5SpVqni8M76sry5m4CUf
vPbaaxanO9Jl1YGcNm3a559/Hh93794dGRmp0+W1a9dKyueff268ohu6LDch
Z86cpvk8++yzOIpHVzVKqcuEGLGpyxAptcDBFKdzmJGbLL2sXbt2onebAmt3
KtSsWVOXD5RRO3NMuhx9NddtksK6JHp7F6XACJB1xsp5mi6ytqnLOCpTiajL
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
wNR93759UvjVq1fbzM36LgE0GJA4ceJEXzlQlwkhxD1serxatWrBV3fu3DlJ
S4msM2TIAB2UlB49eoj//+OPP5JdTju63LJlS9hkzJgRNTJVHFM2b94sxt98
802yiyekft23bNki+cuIvx2SvEvZsmVD4vjx433lQF0mhBD3sOnxnnrqKfjq
7t27W5shBpRYrHr16iqxcOHCSGncuHFKypmkLi9YsEBUZuTIkYcPH7avyytX
rhRji1lSdrgndVeFP3nypJ2s7Nwl0eVRo0b5yoS6TAgh7mHT41WtWhW+uk+f
PhY2x48fb9Kkibj6mTNnSmJcXJykfPTRR5IC5xweHh4bG+uonNa6fObMmdy5
c8MAcT1i1aioKPu6/MEHH4hxdHS0oyJpuVd1nzNnjlxi1apVgwYN6tSp08CB
A7/99turV68ajW3epUcffdTjHYX3VR7qMiGEuIdNj5crVy746s8++8x4aO7c
uZ07d27UqFFQUBBs8P+HH36ojv7222/i/KdOnTpv3ryKFSt67lKlSpVffvnF
ZjmtdblFixY4mjlz5oMHD+KjfV2+fPnyY489BsvixYvbLImWe173L774wmMG
9HfFihU6Y5t3qUKFCh7vgLiv8lCXCSHEPex4vLCwMBWUGY8GBwdrFQFx1s2b
N9XRTZs2SXqlSpXkj6xZsz7yyCPyd7p06VauXGmnnBbaBFmR3EJCQiTFvi53
797dfmRt5J7XXekyjvbv3x+xv/RsSP5btmxRlvbv0ptvvonEggULXrlyxbQ8
1GVCCHEPa48XHx+/Zs2aokWLwlHny5dPKzqKGTNmvPDCC5ADtRsYAsO4uDg5
iqhNyVaJEiVCQ0MTEhLu3LkzZ84c2RCjdOnSSW78mOhbm06fPi39rg0bNlQT
nm3q8ubNm2VNUO3ate3vvhU4dRcWLFiwceNG9RH5o3kgF1VbkTi6S+Hh4XJb
mjVrhiaZcYMR6jIhhLiHtcebNGmSuO78+fPv2LHDOqszZ84MHTpUXPoTTzwh
y4G3bdsmOZQrV+7UqVNae7XxY5I5J/rWpubNm0smuJBy/lu3bpXEyZMn46Os
GtZx6NAhGWzNkiXL3r17kyyANfek7r6AklauXFnylyXMTu/ShAkTVEsjJiZG
lz91mRBC3MOmLkMUID12Mhw+fLicsn79+kTvTCf5iCBRZxkZGSmH5s+fn2S2
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
BAo2PV63bt3w7qRLl27VqlUI5RDxLViwQClU/vz5n3rqqaxZs8rHUqVKXb58
WZ17/fp1X0IGFi1a5OuirVq1UmY6XYYqoY0th2rVqtWjR4+GDRvKx0qVKjmV
ZpfqAhmqVq2a0tly5crlyJFDPubMmVNbyL59+0o6rlunTp3MmTPLx08//VTZ
IBg/fvx479695VB4eLijOvqRwNflhISE3Llz4y69/vrrFm7fVJdJarJ582bq
MiE6bHq85557Du9Oo0aN5OP58+ezZ88usgWBkI5Z6PVLL70kb9m4cePUubGx
sSrxhIG///7b9IoLFy7USp5OlxHUSDrCTJU4e/ZsSVy2bJn9O+BeXd566y0x
bteunYg7mhOoSJYsWaZNm6bM9u/fL2Y1a9a8evWqXB0ijpSgoCBomTZPXELC
6u+++85+Hf1L4OvyunXrcItwo6Kjo6UtNHjwYKNZ8nQZDSoZ6LfusoiJiYHo
pH5n+OnTp3FdPI0WNleuXNm1a1dYWJi1mQWo/s6dO329vIqzZ8/iKseOHfM1
drN06VLqMiE6bHq82rVr491p3769SoFrgnKdO3dOa/bXX3+JxtWvX18l7tu3
T1691atX2yzVmTNnpAcb+Zjqsgy2PvLII7oh3aeffhrpCJ9tXsi9usDjyXB8
27ZtdU7p0qVL2o8SAqdLl+7UqVMqUfXvaUNmAbKO9IkTJzqqox8JfF3u3Lkz
blGNGjXwtwx2lClTxmhmqstPPfVUrly5mjZtarRftGhR2bJl1XBDtmzZOnbs
iHad1gbfdUhISKFChVSTsmjRogsWLLAo7fz583N5Wbt2rTZ9/fr1kj5q1Cht
OhpveDuQPnToUJUI+WvevHmBAgXUdWEwa9Ys3bUOHz7crFkzbYu3SpUqc+bM
sSieuido9+LR7dq1a8GCBeXctGnT9uzZ0zitAjdhypQpRYoUUVfBq9S3b1/t
kz9jxgy0hOUVEwOpbK1atawLQ8gDj02Ph5cF7w7cXZKW0p9cuHBhlbJlyxZ5
9WRU2g4tW7b0eOfeoGymugzngMTcuXPrThSHXK9ePZsXsiYldUHbwE4goHpc
VV+EomLFihLF69IhB0gfP368k6r4kwDX5Zs3b+bMmRO3aNiwYfg4b948+SJ2
796tszTVZdNESE+bNm08ZkCpldn169ch6OqQdiqCVkN1/P7772ID5dKm9+nT
R9LRKtamq8keqnGo+naMTJ48WZ2IpqZWK9GsVX9rO3CMyD1p3bo1mjfGS2j7
rBK9cyqef/5508IgHzS5xWzEiBGmNuXKlbMoCSEPAzY9HhrMeGW6d++epKWM
qFaoUEGlrFy5Ut444xwqUxBciP3IkSPRvJe/dbr87bffSvovv/yiTa9UqRIS
O3XqZOdCrtYFag6zxo0bW5tFR0dLhhMmTNAdUhOw4e216aLLuhgqNQlwXV6z
Zo3cN5lRDzEKCgrCR9xPnaV9XcbdljwRqOJRhLgcO3YMypIhQ4YffvhBmUF8
xQwNS+kixgOMVqLH2x9y9OhRX2WWCLRq1araRHmYPd7hDG2kKQ9G+vTpr1y5
Iimi4PXr11+4cCGucuHChZkzZ6JsSETOalXj6NGjJcNevXrFxMQgqt27d+/L
L7+M6+qeMdMbJQQHBy9duhT1mjhxIiqFlBw5cmg7tAcOHKgUduPGjSj5jh07
mjRpIok1a9aU/n/cQBxVYz0hISEbvbBDmxCbHg9vLt4dvP7WZngH06ZNC0u8
bipxzpw58uqtWrVq0KBBEE28uRBWGUvVAY8n8SMi9Nu3b0dFRZnqclxcnJjh
f1V+/CF9jJs2bUqyRkmSkrqgeGKmQglIUnh4eGxsrO4qERERYglfpzuEEEYO
6ZaQPProo0jE1VNex+QR4LrcsWNH3J8CBQqo4QNRRoiLztKmLh86dEgiX9x5
3YDs2bNn1d+QqowZM8LsxRdf1NpcvnxZ4neL4ZU333zT4x0QV73ip0+f9nhD
Wuma1k6ZkEaytlMIz+q6det0efbr10+eny1btkgKAl58hF7rxoWt1yomanR5
8ODB2kEZNa1uz549knLgwAEZvilevLh2rR8uIXNU5N1R6Z9++qkkUo4JUdj0
eLly5cK7o1u5Y2T8+PHylkGqVOIXX3zhMQOSumLFCl0OLVq0wKHMmTMfPHgQ
H33pMoD4SnMd4KzvvvtOhqS7detmp+JJkpK6IFKT9KlTp86bN096pIUqVapo
Y3w1gW3z5s26AixZskQO/frrr9p0xO8e77C1X6qZDAJZlxEbypBlly5dVOK4
cePkTurWpNvUZfUkaGcAGsHbIWbGRXDvvPMO0p9++mlf56o+ItU8wwPv8fa3
vPbaa1pNj4+Pl8f+k08+sboRiYl4zHTvjpr2b7EIwhS5J8byq5mWP/30k6SM
HTtWUowbpqkmqHbsnrpMiBE7Hi8sLEzeHW1D1wjCOhmxKleunHZPKqVl9evX
79+//wcffCDRt8fbuaca84l3fZHH26klKRa6DBCu6vQR7tQvC3tTWBe0GSRR
dUVmzZpVDefBcuXKlWL59ddfS+LevXt1ZQgNDdX5akFiq4IFC6puzFQmkHUZ
rSO5aWvWrFGJCHgl8cMPP9Qa29TlN954Q063nlwtcTpaaEcM4Loebwjv69xz
585J58y7774rKfJsDxs2DE07j3fFuqSvXbtWCqNrrQm4w9Dcnj17QkPz5s0r
lmqIZPv27aopiwoiBrf5sviauA45ltzUxDa1Wl83uVEoWrSoxxtKqxTqMiFG
rD0eGufwb/I25cuX7+bNm74s8YKrfipjlxpe240bN2qNBw0aJMYNGzaUxNOn
T0sPLVJUX5kvXUZJZGQKwRG8kJogmiZNmtGjRzu8B/6vi1IHj7f7FAoLcYfl
nDlzpEe0dOnSIvcq4oiMjNRdaP369XJIN/c7PDxcuuubNWuGJlPqbzASyLrc
vn17uWnly5d/UoMkFitWTGtsU5erV6/u8Y6iWl9azCzIkCGDxek1atSQYstH
mZ+AJ0fNzJfhDOmdxmOv244V0WhwcLDpdbVTBH/88Uel1/Jwfvnll0kud/Kl
yxs2bJB8lC7Lrc6VK5dpPg0aNPB426W3b9+WFOoyIUasPd6kSZPkrcmfP/+O
HTss8nn//ffFElGDnetCTSpXriyniFto3ry5fNy2bZty41u3bpXEyZMn46Pa
4kM696Dj0jN569atKVOmKIeDqNb+HXCjLqiCfES4rV39lKiZzSX3U1baArg4
Xbbz58+XQ0YtQwSk9kSNiYlJflWTRcDq8rVr19SGML5AzKjsbepylSpVPN4Z
X9ZXFzPwkg/w0FqcrvZzO3PmjGzTjSbc9evX0UbF24eP06dPh1nNmjXxN14W
7bmqdYeg+/nnn5c9adHSM+pyoncJfEhIiDS2BeSpW+2lw74uy03ImTOnaT7P
PvusxztjTTUqqMuEGLGpy/Xr11cLHIyo3l20+a0ndmpRo114JdXeGtbAgSRq
NjFW3d3C8ePHxdtky5Yt2T/ukPK6JHq7E+WjcWWo8paQXXzcs2ePfNRO6xXU
zf/vv7cWSfR2cctUIg91WQOCQbknPXv2nP5v1Kqc3r17K3ubuqziUNO+WZ0Z
Illfe2hYo5bgLV26VPqu1WR+aYW2bdv26tWrMrccz4Y68dChQ9I7jYcf75FK
V++U6ZI6RKzLli0rXry42HTt2tWibPZ1Wd0r00EWyUe7wIG6TIgRa4938OBB
BI+ykQXeSlOHs3jxYhkaK1CggC42tGbIkCHySkKbtL/jY4HsFKEmKkdHR+vy
nDt3rhxK3jaVfqlLondfBemv7tevn85SLYySjUHUzG3j/GrZ4RnlUZ1+Avyt
bNRZtmzZMWPGIEhMRk1TQsDqsiwxRjh28eJF3SF8I4899hiOFipUSD3GNnW5
V69e8h0Zt+nQotpmYWFhNuulBS1JmbHWv3//du3a4Q81IiOrABA1/+/d5fx4
X9SJM2bMkERdl4u1LgtQTxkD0vXw67Cvy2rNtXErFSivjL9opyziARZ7Xz8T
Q8hDiB2PN3PmTF9it3LlSulQhUtx+vvyshlChgwZZJkGfOl5A9u3b5dLQ4vx
UfqxJ0yYIInGeHbnzp3K3lFh/FuXxLtrnytWrKhrzKieeTUxSbbchKXWDGeJ
w9TuNiZIN3vWrFmPHz/uqJD+IjB1GbGkzKxr0qSJqUH37t3lzuMrkBSbuoyH
QU5EQKr7na9z586ppVJqL7hKlSpZzMSwQLbTwaXlq1cjRzExMZKzTC3TbnST
qJE27VS3RM38cKXLaGZrA2pBttTDM29RMPu6rEbDy5cvrx22xvMstQPz5s1T
6dOnT5fEqVOnJnl/CHlIsOPxIH/SUTZy5EhtOvyA7F2A2NBXjBAZGVm5cmXj
pKYtW7ZI47l69eoWlzad96V6/BAd6+zVipht27apRPiisWPHakMMI36vi9r5
RLdZt+xI5tEE+2oZjnaGrdrAxFhHWY0bHBxsUR1XCUxdVhuq+/Lwaij/vffe
kxSZqaX7cS5TDXrhhRfkXBiHhobijYAi4yvOly9f48aNVdNLFgh7vKvh0KSU
jo7Y2Nhhw4YhQ12/hxHVESRCqbWXxpug2zZHzdt/9tlnT5w4gcLs3r1b1htq
dTk+Pr506dJoeQ4ZMkSePeimWgGBcy0KZl+XwSuvvCKJNWrUQJMGtTh06JDa
LU3NjRTUz3HWqlULxUZ7xthyIORhw2YPId5oz78HoeDlZBcFj3ePQbxfK1as
WK5BVumi2SxiN3jwYOgdHBpi3m+++UYNjxonPGsx1WW8vPCHHm/MiHTlFZcs
WSIdvAgo1B5HcEeyQVZQUJB2TZYWN+qSkJAgg3coJKT5tpeJEydKPzliB2UZ
FxcncXqBAgXgx1Cd8PBwyRPO2ThX9vHHH/d4ezuT/NZcIjB1WcIxNJCMm7cI
eGzkScB9FiFWna6420oETTXo/PnzalqXPEtaAYXuiBlidtn0Q8Cjop4Nj1nX
ro5jx44pY93MLrQl1CHd2gQ86jIxTFDL8UqVKiXlFF2OiIjQFiZv3rxqm1A8
ftb7yjrS5StXrqifUdPdK7wR6l4JuO1qjNvjnaqNN9H+vA5CHkhs6rKs0u3Q
oYN8hCuw+BliAaFlovd33GTFh3pJtb8y/MEHH1hf19c6KQSt6jcT4Wbr1q2r
5pfCyWjn3KrdDMDAgQONl3CvLmgGyKZkHu9OKerXG/PkyaMbvEaspxaWinB7
vF59/fr1xgKLEx4xYoT1rXOPANRluHfRI8iihZn6wW4ZzUT7R331so9N4t0m
qLEzHNLcr18/7XzvDBkyIAzUNQOuXbs2atQo9XAKkJ6vv/7aTue22oD6yy+/
1Kar/hOPd8K27iyEydpmAzQXRUVJpCWp+rFx/9955x1ZjajAq23c00aHr3ui
djbQNTnQmBw0aJDMS1EPc5cuXUx/gBVtUWlqKktjlxQhDxU2dVl+t0It9MAr
r5UkU2TudKLXoeGVVD8cI6AFbr1LiQCHI/aLFy/WHdqzZw9iCl0xmjZt+uef
f2rNbt26pXbR10apClfrcvToUbQZlNRKCf9rmF+d6J1ypvVOCHZMRRlI1GO9
95SrBKAuJ5uYmBhIHgRadbBYg4gYqrF8+XJUxHo5/5EjR1avXg3J0/1OmUvg
imharFixQvf8G0GxUQXUetOmTbJLtntFOnDgAIqEV9V6fQSO7tu3D3c1SUtC
HgZserw6depodTkZXL9+fffu3WvWrIHcOJrqbA2cHqLjZcuWIQIybY0LsgmJ
v/p+ndYFBQsNDYUb1M0aMnLs2DFka5xnroW/80gIIQ8wNj2e7H/VokUL90vk
fy5evChbZ9uJ0AMcNAkkoLZes+Mq1GVCCHEPmx6vS5cuHu/ev9ahXAACIZCJ
JQ0aNLjXZfEDapo3AvB7VQbqMiGEuIdNj7ds2TKRg/Tp05coUUJNkgl86tat
6/FOWfmv2ajufcTkyZPVADQaSKm/nYiCukwIIe5h0+PduXNHrc0EERER7hfN
PyxatCgkJMS9yS2phtpYOygo6KuvvrqHJaEuE0KIezjyeGFhYZMmTRo3bpz1
D94RNwgPDx8/fvz06dOjoqLubUmoy4QQ4h70eMQp1GVCCHEPejziFOoyIYS4
Bz0ecQp1mRBC3IMejziFukwIIe5Bj0ecQl0mhBD3oMcjTqEuE0KIe9DjEadQ
lwkhxD3o8YhTqMuEEOIe9HjEKdRlQghxD3o84pR7pcuEEEII8QV1mRBCCAkc
2I9NCCFuQI9HnEJdJoQQ96DHI06hLhNCiHvQ4xGnUJcJIcQ96PGIU6jLhBDi
HvR4xCnUZUIIcQ96POIU6jIhhLgHPR5xCnWZEELcgx6POIW6TAgh7kGPR5xC
XSaEEPegxyNOoS4TQoh70OMRp1CXCSHEPejxiFOoy4QQ4h70eMQp1GVCCHEP
ejziFOoyIYS4Bz0eccoDo8vbtm0LDQ3dtWuX33NOZY4ePTplypT33nvv448/
Xrx48e3bt+91iQghyYe6TJzywOhyiRIlPB7PM888o02cNWtWmzZtZsyY4ffL
aenXr99rr73Wp0+flGe1dOnSLFmyeO6SKVOm69evp04tCCFu4MjjXbp0aefO
nYgybty44WahiAkxMTG48/v3709ISLi3JbkvdBkxI4SpuZdDhw6Z2hh1+cCB
A0rgoqKiklFUmzz22GO4xBNPPJHCfK5evZovXz4pcKlSperUqdOqVatUqwUh
xA3se7yBAwemT59eXvaIiAiVfurUqSVLlgwfPvz777+HA/znn3+SzCo6Onq3
lwsXLugO/fHHH7t9cOvWLdPcYmNjly9fjgLMmTMHHslOAXzh37o4LSHqPnfu
3GHDhs2ePRsZ3rlzR3t0wIABcvPLlCmjvf+pz32hyxs3blTahDtvamPU5b17
98opGTNmjIuLS0ZRbSKXrlatWgrzWbNmjRS4U6dO6oFxrxaff/5548aNfd1P
QohfsOnxfv75Z48GRM1IjIyMrFKliuffFClSBOkWWcFR5MmTR4whf7qjmTJl
8vgAiqkzvnbtWocOHXRmVatWPXz4sLO74E5d7Jfw7Nmzbdu21ZkFBwfHx8cr
m48//lgdKlmypE61U5P7Qpfffvttdbt8haWm/dhoQfXp08ftwR152HSXTgZT
pkyROi5dulSb7lItEIzjWvjfv9kSQrTY9HjdunXD+5guXbpVq1YhMETEB4eQ
IUMG8Qk5cuSoX79+oUKF5GPWrFl//fVXX1nJq22qZdevX/clymDRokVaYzh5
hBtyKG3atOXKlUMx5GPOnDm1ipYkbtTFfgmhsIhBJL1WrVo9evRo2LChfKxU
qZIyu3Xr1vHjx3v37i2HwsPD7VfQvwS+LickJOTOnRt36fXXX5fb9ccffxjN
THU5dXj++edxaTTGUpjPp59+KhU8ePCgXwpmjTyZ1GVCXMWmx3vuuefwPjZq
1EilzJ07FymFCxfesGGDxG63b98eMmSIeIlOnTqZ5rNw4UKt1Oq0LDY2VtLH
jRt3wsDff/+tNX7rrbfEuF27dpcvX070ChwyzJIly7Rp0xzdBDfqYr+ECG3E
7KOPPlKJs2fPlsRly5Zp88RNSJMmDdK/++47R3X0I4Gvy+vWrcMtwo2Kjo6W
ttDgwYONZsnTZbSUZKDfussiJiZm8+bNvrqR8VDh0u+//74u/cqVK7t27QoL
C8MDb6cwSpd9jaFbEBUVhQudO3dOpaC9jevKl4tGsvEUNBSpy4S4jU2PV7t2
bbyP7du31ybOnz//r7/+0qbgvS5TpgwsEW8aMzlz5oz0+iIgNdWyffv2Sfrq
1autywPvIYPdiDh0w7WXLl1KsjpG/F4X+yWUgeNHHnlEN4D+9NNPIx3hs+7S
Mvl24sSJyaimXwh8Xe7cuTNuUY0aNfC3DBDgqzSameryU089lStXrqZNmxrt
Fy1aVLZsWWkXgWzZsnXs2PH8+fNaG3zXISEhqr8FFC1adMGCBbqs5EsfM2aM
Sjl8+HCzZs20Lb0qVarMmTPHVx1DQ0NLly6tZmJnz549lxeZk2laC0lEKxRf
hDxdIF++fFLsr776Km/evOrqWbNmfeONN9C6kHMrV66MSqVNmxaH8GDnuouu
3UgISTk2PV6tWrXwPsLdJWkpkXWGDBmMiyhbtmzp8c5FwRVNtWzLli2SLuPX
FkCtxNK0f9JfpKQu9kvYtWtXmOXOnVuXLuJSr149XTrkAOnjx49PVp38QIDr
8s2bN3PmzIlbNGzYMHycN2+efBG7d+/WWZrqsmkimkxt2rTxmAGlVmaIMSGF
6pB2ssTQoUO1GU6bNg2ihtagfESbsEiRIsoYjTT1t6/On6VLl5qWR3TZompD
hgyR11kQ7f7ss89USubMmVXb47HHHpNWpSiykYULF9r8XgghNrHp8dDSxjvY
vXt3azNEghJFVq9eXXcIIYO8yCNHjkRoIH/rtGzlypWSfvLkSesLFS5cGGaN
GzdOsuTJJoV1sV/Cb7/9VnL45ZdftOnSZ2jsRRddHjVqVLKq5QcCXJfVFOXf
fvst0St5QUFB+IgQVWdpX5dxtyVPPBL4os+cOXPs2LERI0agzfbDDz8oM4iv
mKHZJh3ReDzQsvJ452YcPXrUV5lHjx4tJ/bq1QshKqRw7969L7/8ctWqVU37
kxO9cw43btyoxkqmTp2Kj9u2bUuyakLt2rXXr1+PlnBkZGRCQgK02OPtGtq0
aRM+4uGfMWMGKqtqh3Tkj1p4vIH8xrvoRpcIISnHpseDf8D7aL0NwvHjx5s0
aSJv/cyZM7WH4MdkHg4a6og9o6KiTLVszpw5kr5q1apBgwZBkgYOHAjZunr1
qtYMHknM1IAsHH54eHhsbKzNWidJCuviqIQwlgzxv/ou8IfELPCHOvtHH30U
6bg//qqsUwJclzt27Ij7U6BAATV8IMoIVdJZ2tTlQ4cOSeSLO68b9j179qz6
GxKcMWNGmL344otam8uXL0v8bhySULRu3drj7ZnRyZyvtYEKX+PL1rr89NNP
a+VejR99/PHH1leX6ZEcXybEVWx6vFy5cuF9/Oyzz4yH5s6d27lz50aNGklU
gv8//PBDnU2LFi083v4xmTXqS5e/+OILjxkQrBUrVigzxEEqRpg3b17FihWV
JVryuqjTEf6qi9MSQnwlEgHI/7vvvpNQvVu3bsZCVqhQweOPqbzJJpB1+caN
G9mzZ8f96dKli0ocN26c3FuJoBU2dXn8+PFyOvKxuLTqCjYu03vnnXdEDX2d
27dvXzlXt+ggSZKhy2nTpt2/f782/eLFi/LAI4i2np5BXSYkFbDj8cLCwuTd
RxhrPBocHKzVUMRxN2/e1BpAsORQSEiIpCSpy/Xr1+/fv/8HH3wgcbrH2w24
ZcsWMYOKSaL09Hq8c1TUkBwsV65cmby74a+6JKOEMkFXC5yq6YzfN998E0cL
Fix45cqV5FUzhQSyLqP9JndvzZo1KhGaJYm6VpZNXX7jjTfkdOs9OiRORxvy
iAFc1+MN4X2du337dtUww6WXLVtmc316MnS5bt26xnxeeuklyQctcLx60dHR
ppejLhOSClh7vPj4ePi3okWLerzzNnUiJcyYMeOFF16AgKrdwBAeKg92+vRp
6Xdt2LCh6lf0pcuJ3qHbjRs3qo/wThBHMUYOkqh8r8fbORkaGpqQkADLOXPm
SH9j6dKlk7dZpb/q4qiEuKsySohAr2fPnhBcOTFNmjSjR482FjI8PFy6uJs1
a4YmU+pvMBLIuty+fXu5e+XLl39SgyQWK1ZMa2xTl6tXr+7xLmy3vrSYWQBR
szj9xx9/1E6HRjG+/PLLJEdvk6HLpuvC0MbTzgZHI+HVV181flnUZUJSAWuP
N2nSJHlP8+fPv2PHDuuszpw5M3ToUJGMJ5544tq1a0hs3ry55LBt2zblnLdu
3SqJkydPxkdZ2+sL6E7lypXFXtwUspKP5cqVO3XqlNZYbVaZZGldrYujEr72
2mse79il9LLeunVrypQpykV/8cUXxuJNmDBBtRzUSpZUI2B1GV9T1qxZrcUR
kamytylesjdXnjx5rK+u9ot7yQf4oq1zwOMdEhIizWChZs2aunVYOvyly8Ku
Xbtat24tfdoe7ziObqEWdZmQVMCmLtevXx9SZSfD4cOHyynr16/fv3+/tZNU
zsc6TzX6JmuO4N7lo3F1Z2RkpBxSK1BSQrLrYr+Eaitj1TEuHD9+XPxztmzZ
jLE/AnCZSuShLmtAyCn3pGfPntP/zYgRI+RQ7969lb1N8VKjG9Zjr2KWPXv2
lOzQnujd02bZsmXFixeXi3bt2tXC2L+6LJw8ebJHjx7SKMX/2smK1GVCUgFr
j3fw4MH3339f9i7A62zH4Rw9elQcRb9+/bS/a2OB7P9ggdp6a8+ePYnePRCk
NxiX0FlGR0eLpV+23Uh2XeyXcNq0afLROKInu5B5DFtuooUgq1rKli07ZswY
ieVTk4DVZVlinD59+osXL+oO4RuRn3AqVKiQeoxtilevXr3ki5g1a5bF1VXr
MSwszGa9LLhy5YqMaOj63nW4ocvC559/Ljlr25Yy4dx00xVCiL+w4/Fmzpxp
FAhfGn3kyBExllUh8JDnDWzfvl1soEr4aN2PnXh3Ugra6mrhhuw7XbFiRV0x
VK+ydtpPkrhRF5slnDBhgnw0LlPduXOnylmbjpaSxzuRDDG1/Tr6kcDU5atX
r8rMuiZNmpgadO/eXe4nvgJJsSleu3btkhOLFi2q+9Wwc+fOqaVSarVRpUqV
TGdiWIAGsG6ONJCt5BCAW5zoL11etWqVrlsmNDRUctaOpEhTIX/+/DbrRQhJ
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
aEDUbLQZOnSoHC1VqpQ2HRr38ccfw9Fpc0ibNm3Pnj0R1BjzuXbtWocOHTz/
pmrVqocPH9ZZfvTRR2nSpNHm+dlnnzmovG9SWJcvv/zSkxQzZ840vTTkIE+e
PGLz/fffq3RcV51bsmTJO3fu+KWmyeC+0OW3335b3a4nnnjC1MZUStAa7NOn
Dwd3wB9//CE3EH8kaUxdJsRf2PR43bp1wzOfLl26VatWIYgzRq+RkZE4atQy
uOLq1atLOjS0QoUKtWrVUnF3y5YtdfnAvlq1akrvypUrlyNHDvmYM2dObWTa
t29fSc+aNWudOnUyZ84sHz/99NPk3w4/1cWOLi9atMj06q1atVI2Wl1Gk+D4
8eO9e/eWQ+Hh4SmsZrIJfF1OSEjInTs37tLrr79uoSz3VkoCn82bN1OXCUl9
bHq85557Ds98o0aNTI/evHmzcuXKSk20WgYlrVSpEhK7d+9+7tw5SYyKinr8
8cfF+MSJE9qs3nrrLUlv167d5cuXkYLAEPKUJUuWadOmKbP9+/eLWc2aNa9e
vYoUtBYg4kgJCgqC/3d8I/xaF1ieMGPPnj3Sfnj66adNA96FCxdqtVury8Lf
f/8tXQRwRMmuYwoJfF1et26dtJ2io6OlXTd48GCjWfKkBF+uDPRbd1nExMRA
11K/M9zRdVGXLVu26N5BxdKlS53qcoMGDeTjjRs3tm/ffvDgQV8jUAq8cWgJ
R0RE4Nm2tkRWR44cQYEvXryoO0RdJg8SNj1e7dq18cy3b9/e9OiQIUM83vAW
cuMx9P2ePHlyxYoVulPmz58v75F24iv8g4Sfbdu21b3OuuUPEjYiqj116pRK
VN1uKQmZ/VUXUyDoMIM0m85EOnPmjPRg169f35cuAzRRcGjixIkOa+Y3Al+X
O3fujFtUo0YN/I1nyeMdlDeameryU089lStXrqZNmxrtFy1aVLZsWTV0ki1b
to4dO54/f15rg+c2JCSkUKFCqnFVtGjRBQsWWJQWz08uL2vXrtWmr1+/XtJH
jRqlTUdDFM8J0ocOHerousuXL8dZcitWrlyJJ1z1CxUrVkw7aQFPMp787Nmz
y1H8ISWpVauWr1rIzUQD/sCBAy+88EKmTJnkXLSL3n333Vu3buns8UYPHz68
atWqqscJL12TJk1Onz5tzBzNjNdee02VB18BGuGojjLwpct9+vSRko8fP95X
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
Y4OCglwd3ikYEhUVFRwcPGnSpNjY2IwtieiyIAiCe4jHE5wiuiwIguAe4vEE
p4guC4IguId4PMEposuCIAjuIR5PcIrosiAIgnuIxxOcIrosCILgHuLxBKeI
LguCILiHeDzBKaLLgiAI7iEeT3CK6LIgCIJ7iMcTnCK6LAiC4B7i8QSnZJQu
C4IgCIJghuiyIAiCIPgP0o8tCILgBuLxBKeILguCILiHeDzBKaLLgiAI7iEe
T3CK6LIgCIJ7iMcTnCK6LAiC4B7i8QSniC4LgiC4h3g8wSmiy4IgCO4hHk9w
iuiyIAiCe4jHE5wiuiwIguAe4vEEp4guC4IguId4PMEposuCIAjuIR5PcIro
siAIgnuIxxOcIrosCILgHuLxBKeILguCILiHeDzBKaLLgiAI7iEeT3DKQ6PL
GzdujIiI2Lp1a7rn7AP3vzDbtm3DEdevX3/fjigIgh1ElwWnPDS6XKZMGY/H
8/LLL6uJU6dObdeu3eTJk9P9cD4UxlVeeeUVHLFo0aL37YiCINjBkcc7f/78
li1b0LC/du2am4USMoDExERc2T179ty8edPa8oHQ5Vu3bkFeW3uJi4sztNFL
4d69ez13iY2N9aGoPiO6LAgCYd/jDR48OEuWLOSyoqOjNVuTkpJiYmLw1zqT
Y8eOLV68+Kuvvpo+fTp84J07d9I8LhwsnPkPP/zw448/bt++3WKXXbt2zZgx
IzAwcNq0aSjM7du308z8yJEjMV7Onj2bprEZGV73ixcvrlq16rvvvhs7diwa
Tjdu3DA0w/mJMQG7DBo0iC5u+fLl9ddX5YHQ5dWrV7PC4pwb2uilcOfOnbRL
tmzZTpw44UNRfUZ0WRAEwqbHg9v3KMD5U/qlS5dWrFjRsWPHxx57DOmNGjUy
yyElJQVmnn9SvXr1/fv3WxwXkU6pUqXUXSpUqIDITmN28uTJ9u3bazJv0aIF
BMsiczjeQoUKkfEvv/yS5knQ4Cd1X7ly5RNPPKGalSxZ0lD+smfP7jFh/vz5
X3zxBf985plnLFo1D4Qud+vWjavz7LPPGtoYSiHaTn379r3/L3dElwVBIGx6
vB49euARhgAtXboUoSUFbogQSZKYBg0aGO4Oy+eff55sMmfOXLFixXz58tHP
/Pnzm6nnvn37ihcvzq61XLly9D88mCpPUJDGjRvTptq1a3/44YeQSPpZtWpV
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
9xCPJzhFdFkQBME9xOMJThFdFgRBcA/xeIJTHhpd3rhxY0RExNatW9M95wcR
R2fj3LlzEV6OHj3qdsHMkMsnPKyILgtOeWh0uUyZMh6P5+WXX1YTp06d2q5d
u8mTJ6f74fwcw7NhRmRkpMfLhAkT3C6YGY4KLAgPEI483vnz57ds2YJm6rVr
19wslJABJCYm4sru2bPn5s2b1pYPhC7funUL8traS1xcnKGN3rHv3bvXc5fY
2FgfivrgIrosCH6CfY83ePDgLFmy0MMYHR1Nibdv346IiAgJCRk2bBgCjb/+
+sts9+Tk5JkzZw4fPjwoKGjJkiVnz55N84inTp2KMeHIkSP3kv+uXbtmzJgR
GBg4bdo05IZa2DgBWvyn7irYSmaGR7l+/fqmTZvGjBkTHByM637x4kXeNGjQ
ILq45cuX5+tryAOhy6tXr2aF/eqrrwxt9I59586dtEu2bNlOnDjhQ1EfXESX
BcFPsOnxVq1a5VFA1IxE/H3mmWc8/wSPyeHDh9V9EX998sknjz32mGqWN2/e
H3/80fqgo0aN8phQuXJl3/I/efJk+/btNbm1aNFCVSg7+EndNUBKChUqRGa/
/PKLuunGjRtffPEF5EbNKnPmzL1790ZoCQNs5XRUzaKt8kDocrdu3bg6zz77
rKGNoWNfvHhx3759H8GXO6LLguAn2PR4PXr0wCMAfVm6dCkCsTt37syZMyd7
9uz0bBYtWrROnTq5c+emn2XLlr1w4QLteObMmcaNG7MK1KxZE1vZYf78888W
B/3888/NtIk9raP8oTVsXLt27Q8//LBRo0b0s2rVqval2U/qruett95iM1WX
k5KSatSoQemZMmWCsqP63PvRtm3bVK9wJyQk9OnThxKjoqLMjuL/uozmUMGC
BVGLd999l6qza9cuvZk4dhXRZUHwE2x6vNdeew2PwCuvvEI/oTgI+kiG4MAh
00iEXr/xxhv0tAYFBZHl0KFDKWXIkCGnTp2ixLCwsBw5ciARwV1KSorZQSnk
eeKJJw7pOHbsmA/5IxQiY6geJ06bNo0SFy1aZOeM+U/dNcydO1eVb1WX0eRA
wwOJPXv25JLExsY+/fTTZIxsKfHKlSsQbqTMmjXLrGz+r8srVqygFsiRI0fy
5cuH/3Et9Ga+OXacTHoRb/36IzExce3atb51hts5BNoeO3bs2Lx58+XLl304
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
m7pMZ75AgQKGW2lE2WOPPUYr2xiWgeCO6DR1mUd/8aROLqrmpbMg+C3WHm/s
2LF0S6PBuXnzZot8PvnkE7JE1GBhBnGhl6G5cuXSdJ/aZP78+XSgAQMGOM3/
nXfe8XiDUOrrg4MaP3584cKFKUPooA/lSc24urdu3Zp+bty4Meku69evp0So
LX7yIicaoONwUzRsAGgmc40ePZpXHUlMTNTs67e6nJKSwgu8mLFp0ya2t6nL
1apV83iHY1kfnczAGybg9rPe1/oQPPte83KZ4OuejrpMszBwSvWHs6nLVK/8
+fMbbn311VexFXcadzHduy6n3h39hbYlLb5H5wGPOau/IPg5NnW5QYMGmhkN
KlA0MqtZs+bVq1fNzBCs8dqVFkORrYHQUA5vvfWWo/x56WONW0tISKAOgTx5
8qT5yQY9GVX3PXv2WAsQUatWLYsMcU2LFSvm8cbvanpERAQNVfI8ULq8YMEC
KnPv3r0n/ZPhw4fTJrUT2KYut2jRgvY17IzVmOXNm9f+ohmODsHvIDS98cSs
WbM0dxfrsqYX2r4uv/nmm2SpH85hU5e5XobvROiI6vyFdNFlHv1FL+tLly6N
/z/66COLcgqCX2Ht8fbt24dgkBaawP1v6HDmzZtH45Dh4S0+xopHmyZbgS+/
/NLnAl+/fp2mvbRp08ZR/hMnTqSt+lHQPLjUYvFJQzKw7uqXjyygtTUsoLei
yJYjayg+zbupUKHCd999p1+UzG91meb/Iv5S+/8J3LrUdV+iRAm+jW3qMgvc
1KlTLY7er18/MoNm2ayXo0OcPXuWrn7FihX1Lxd47vPff/9NKbjTKEUdw5zq
nThgU5d5kpR+LQ6buty3b1+9nhK7du2i1yXqCMN00eXUu6O/XnjhBW6+On20
BSEDsePxpkyZYnZvL1myhDo8ESZYfKD8ypUrvBI1hMCHgIKBY6d81I8E2cl/
9OjRZKCPajkSgXbbL0mG1x3qc0bHpk2buC74yWprdlwemcO9ndQtnzt37oSE
BMNd/FOX0fihoXdNmjQxNOARd+vXr6cUm7qMi0s7lipVSvOVrlOnTvE8pt27
d5NZ1apVLUZiGGLzELQKHEBLUrM7tQ/RlOLeWm6IquMHLl68SLPG7OgyT7Sv
V6+e2pWE/7t27WpHlyG+ZFapUiV16jHuRpJOMHv2bIsyEE51eeXKlWT/n//8
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
Dc/VfT6BguAejjze+fPnt2zZgnbptWvX3CyUkAEkJibiyu7Zs+fmzZvWlve/
LefDEW/dugV5be0lLi7O0Ebvyffu3eu5S2xs7L2U2Smiy/YRXRYebux7vMGD
B2fJkoWer+joaEq8fft2RERESEjIsGHDEGj89ddfhvvu2rUrxoQbN27YOXpS
UhKM8deO8ZEjRyjzs2fPpntJGH+r+7FjxxYvXvzVV19Nnz4d+nLnzh1Ds1On
Ti1YsABmYWFh6vkZNGgQXdzy5cvz9TXkgdDl1atXs8KisoY2ek++c+dO2iVb
tmwnTpy4lzI7RXTZPqLLwsONTY+3atUqjwKiZiTi7zPPPOP5J3guDh8+rNk9
e/bsHhPmz59vcdxLly6tWLGiY8eOjz32GIwbNWqUZlHhTgsVKkSZ//LLL+lV
Eg1+VfeUlBSYaTKvXr36/v37NZaff/55pkyZ2CZz5szff/89bfriiy84HVVD
q8PscA+ELnfr1o2r8+yzzxraGHpytG369u17/1/uiC7bR3RZeLix6fF69OiB
ex4CsXTpUgRZiMXmzJnDilO0aNE6derkzp2bfpYtW/bChQu879WrV82ECYSG
hpodFBEiSRLToEGDNIv61ltvsb1Gl30uiQa/qjssn3/+ebKBzlasWDFfvnz0
M3/+/BcvXmTLfv36UTpKW7du3Rw5ctDPb7/9FlsRvCckJPTp04cSo6KizMrm
/7p88+bNggULohbvvvsuVWfXrl16M7/y5KLL9hFdFh5ubHq81157Dff8K6+8
Qj/PnDmTN29ekiE4cOoyhV6/8cYb9AAGBQXxvseOHePEQzquXLlidlDsmP8u
UBw7ujx37lxVyzS67HNJVPyt7l26dKFD/Pvf/6YmAUJdVDxXrlwTJ05ksz17
9pBZrVq1Ll++TGWGiCMlICCAO8lRJAqoZ82aZVY2/9flFStWoAqoyJEjR6iV
MnToUL2Zb54cTR16EW/RpZDqfV+/du1a+53haRbm5MmTELj4+HizNxSOjH3T
ZfuV2r9//4YNGy5duoT/8Zg41eXk5GQcCM+I4VbRZeHhxqbHe/HFF3HPd+jQ
gVPgmqBEp06dUs1Onz5NmqWKyO7du+mpXLZsmc/lpE5ja10+fvw49WDDzFCX
06Ukqf5Udzgueunfvn17jQc+f/68+pMCYcTg6lwVRJFqyExA0JEyZswYs/L4
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
hBBCCCGEEEIIIYSUDf4PvhWWmg==
    "], {{0, 366.}, {324., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{324., 366.},
  PlotRange->{{0, 324.}, {0, 366.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.867251009916374*^9, 3.8672510155337677`*^9}},
 CellLabel->"Out[8]=",
 CellID->1501601396,ExpressionUUID->"0f3bb108-cfd6-432e-a847-6b3d1e49c131"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251023389432*^9, 3.867251025207808*^9}},
 CellLabel->"In[9]:=",
 CellID->186843028,ExpressionUUID->"ef2d9a36-4297-4c29-ab34-6e37804ae541"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
QgghhJDM4P8AnqlB+Q==
    "], {{0, 102.}, {249., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{249., 102.},
  PlotRange->{{0, 249.}, {0, 102.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251025602577*^9},
 CellLabel->"Out[9]=",
 CellID->1750846797,ExpressionUUID->"75f14ebb-b684-4a33-ba2c-90c15a842488"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"21055314-b844-4936-b9b7-794bc39ca526"],

Cell["\<\
Search for a lexical pattern in Wikipedia articles containing \"darwin\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251098096149*^9, 3.867251107978134*^9}, {
  3.867251186252664*^9, 3.867251196349597*^9}},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"5ad7ca70-7fcb-4314-8642-c2b32b158485"],

Cell[BoxData[
 RowBox[{
  RowBox[{"darwin", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<darwin\>\""}], ",", 
     RowBox[{
      RowBox[{"BoundToken", "[", "\"\<theory of\>\"", "]"}], "~~", 
      RowBox[{"WordToken", "[", "1", "]"}]}], ",", 
     RowBox[{"MaxItems", "->", "1000"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251109517704*^9, 3.8672512099533*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[11]:=",
 CellID->978490832,ExpressionUUID->"f75850a1-a1b1-4354-a9a9-f111f673f1dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"darwin", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251315746311*^9, 3.8672513188938837`*^9}},
 CellLabel->"In[12]:=",
 CellID->2047610439,ExpressionUUID->"8417c714-be0a-4b65-b06a-07b0b92d6e9a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xl8jOf+//FBQlr7zmktQdDaqa0oDtpSLart0VZPKQfVVpWqXRUttZwo
ocrRY6k1jSWoJY2vEErsS2qrxL4viTUikt/1y+fhetznnslkZiSZ6fT1/MNj
5rqvuee6r3vSx+Pz7n1ft/8Hn77eI7vFYunvp/55vevA5v36dR3csYB682af
/h/27POv7q37fP6vnv/q1+CDHKqxrPrnd1+L5f+/TgEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAuNX/AQAAAAAAAAAAAAAAAF7hJgAAAAAAcBNqc+9GAgMA
AAAAgCegNvduJDAAAAAAAHgCanPvRgIDAAAAAIAnoDb3biQwAAAAAAB4Ampz
70YCAwAAAACAJ6A2924kMAAAAAAAeAJqc+9GAgMAAAAAgCegNvduJDAAAAAA
AHgCanPvRgIDAAAAAIAnoDb3biQwAAAAAAB4Ampz70YCAwAAAACAJ6A2924k
MAAAAAAAeAJqc+9GAgMAAAAAgCegNvduJDAAAAAAAHgCanPvRgIDAAAAAIAn
oDb3biQwAAAAAAB4Ampz7+atCczx48dXpTp16pS7xwIAAAAAQPq8rzaHkbcm
MD/88IMl1erVq909FgAAAAAA0udybX79+vUMH4zbxcXFxcfHu3sUGcnZBObr
r79ukyooKCitPvv372/zSMaN1DkkMAAAAACAPxenEpjLly9PnDjx7bffrlSp
UrZs2XLlytWsWbNZs2ap9kwdZKaKi4tT5fwHH3xQp04dPz8/X19ff3//7t27
79q1y91DywDOJjBvvfWWJBvly5dPq8/gwYMtj7g8sDFjxrzwwgtqV659nAQG
AAAAAPDn4nhtHhUV9eyzz1psqVGjxuHDhzN7qC5It8yPjo5+/vnnbR7UE088
Yec6kD8LlxMYJTw83Gaf8uXLP34C89prr6mPq39d+zgJDAAAAADgz8XB2nzR
okV+fn5S85YuXfqdd9755ptvevXqValSJWl04w0pdtgv81Xxni9fPhl/kSJF
2rVrN3LkyCFDhrz00kv6YNNKIf4sHieB+de//mXdYePGjcacyuWBNW7cmAQG
AAAAAPDX4UhtfuHChRIlSkjB27lz5ytXruhNN27c+PTTT0uXLn3s2LFMHqkr
7JT56ijKli0rB9W6devTp08bt/72228VKlT44osvsmqkmcW1BEaCqUKFCl27
ds3UoWfPnrqDnQTm+PHjv/zyy6FDh9LqINdTpZvAnDt3LiwsLCoqKi4uztiu
E5g1a9bonuvWrbPzjdrhw4fV2E6cOGGnz/nz5zdv3rx27VpHdggAAAAAQLoc
qc0HDBgg1a6qvm12SGtVXtW+bdu28PDwCxcuPO5A06BqczX+ixcv2txqp8wf
Pny4HFSnTp1srr6b7lLDu3fvVhV6bGys9aaYmBi16cCBA5m0ru+RI0fWr19/
5syZdHu6lsD8/e9/L1CggHqxZMkS41Y1J0WKFFHtb7zxhs0ERh11mzZtihUr
pi+SUfsx3cxVpUqVkiVLZsuWTW318fEp8MiCBQuM3ebMmRMQEKD3kydPHnWm
Tp48KVt1AhMWFrZo0aL69evnyJFDWkqVKrVx40brQ1PnYty4ceqr9T6ffvrp
2bNnm7rt3bu3devWxut8qlatOn36dEdmDwAAAACAtKRbm6uaV27JyZ07t820
waaDBw+2atUqV65cuoytWbPmqlWrTN3Onz9fuHBhVX1/8sknpk3Dhg2TwvyP
P/7Qjc8995xqmTZt2pkzZ7p06VK8eHHZuSrne/ToYbxgw36Zrz7+5JNPqk1q
hEeOHHHwoOTbv//++2PHjqmSX9++pDuoGn/ixIlPPfWUPuq8efN+/PHHpqjE
2aP+73//q1rKlSt3/fr1kSNH6kt3lMqVK4eFhdkZs2sJTKNGjdT0qhcdOnQw
bv35558tqbehffXVV9YJzMsvv2xJw4QJE3Q3OSnW1GFKB3Ue27dvb7NPQECA
9NEJTPPmza27qZNr+q1evnz5pZde0h2Mv8yBAwfqbupTxtP3xBNP6NeTJ092
ZAIBAAAAALAp3dp87dq1UoFaxwVpWbhwYZ48eWxW0KNGjTL2PH36tLR369bN
tJP+/fvLJuP9TRI+tGvXrkKFCtY779u3r+5pv8zfsGGDvO3Vq5eDB6W//Ysv
vqhTp47eoarrZeulS5datGhh80vVB42JirNHrdOGatWqWe88Z86casLTGrNr
CUytWrXkvPv5+Z09e1ZvffPNN1XjgAED9OOQjJ/96KOPVEvDhg3VJO/fv//U
qVNTp0719fVVjcWLF9c3r4WGhq5cuVIuWalaterKR/SFTPrypEKFCs2aNUtN
3YEDB4YOHap29eOPP5rmRMmfP//IkSO3bNmijlGfmhEjRhjHNnDgQGlv27at
3Fi0d+/eBg0aqBY1EjVa6aY+Jd0+/PDDw4cPx8fH//bbb23atFEz/6d+4BcA
AAAAwO3Src2/++47qUnnzZvnyA5VvawqYvmIKtX37dt37NixyZMn67VtFy9e
rDu7lsCIF1988aefflJ19NixY6Wcz5cvn67i7Zf5QUFBxkDGQcZvr1u37rJl
y9atW6cKf9nar18/2RQQEKC+6MyZM+Hh4foKjdq1a+uVTFxOYCyp15/MmDHj
8OHD6nvfffddaSxVqlRa90y5lsBUrlw5Pj6+TJky6vW0adNk04ULF+TCod27
d/ft29c6gVGHHBISYtrhp59+Kj3VXBnbJZmxvkFsz549coFKwYIFTWuwxMTE
WM+Jv7+/8bnh6uPS/sorr+hG9SPJmTOnamzVqpVxh2fPnpXfqj4R7dq1U2/V
2Ez3tVmvhwMAAAAAgFPSrc0//vhjKWk3b97syA47deok/ceNG2dsX7NmjbTX
qFFDN7qcwAwYMMC4xIp+gs/WrVuNO0mrzP/kk0+kf0REhCMHZfr2+vXrm66I
2LVrl4+Pj9pUpkyZU6dO6XZVuTdr1swUPbmcwLz66qumG5r03TozZ860OWbX
EpiKFSuq14MGDVKvmzRpIpvUV0j0dNOQq6S7w9WrV0vPWbNmGdvTOjWjR4+W
/qbLpUz0nKxcudK06emnn5bIS7eoXUnnvXv3mjp3795dTqi81b/2OXPmpHto
AAAAAAA4Lt3a/PXXX5ea1HgFQlri4uJk6QybV2W0atVKdrVp0yZpcS2B0fWy
Nm3aNOkcHBxsbE+rzNcHZXogTocOHQL+l3EBE/n2bNmyRUVFmXao10WZMmWK
aZN+fLO+X8nlBMb6ycthYWGyqWvXrjdteZwEZt++fXK8hw8fvvno9P373/++
mV4CowY/Z86cHj16qDNVuHBh6fn1118b+6R1at5++22bp8bEzpzUrl1btVeo
UEG3SCpYqFChfVb69OmjNhUrVkx6/vrrr3pF3+eff37BggWmZzABAAAAAOCa
dGvz9957TwrSnTt3prs3qdmV3r17W2/VOcmMGTOkxbUERpXGps7BwcHS2fRo
m7TK/LQO6rnnnrP8rw8//ND07db5j/KPf/xD+tt8PpFclVGmTBnXjtpO2hAX
FyeJQcuWLa2/9+bjJTCKrJQyatSo2NhY9UVqPuVpRGklMBs3bnzxxRcttowe
PdrYM61TU7NmTUvqDWX2x2lnTmSRZGMCI/u0Qw1Gd54/f75OjSypa/h8++23
aT1sCwAAAAAAB6Vbmw8bNkxKUdPlJTYtXrxYOqui1XqrvhFp8ODB0pJRCcyK
FSuks4MJTFoHpfbz70dkLV/rBMb625UaNWpYUp+8bHNaGjVqZEld8fXGjRsu
HLWdtEGRRz9XrlzZ5lc/ZgIzdepU9bZKlSqyHNCrr74q7TYTGJ2wqalr0aKF
ehsZGbllyxanEpiqVataUq9XsT9OpxIY2afychrefPNN4x4uXrw4btw4yc1E
7dq19YOwAQAAAABwQbq1+X/+8x8pQseMGZPu3hYuXCidTYvAiPXr13tIAqMP
yhQLGP3tb39zPIGRGj9//vw2d9W0aVNL6kOx5c6sjE1gcufObXm0PIu1x0xg
zpw5I0soy4O/Fy1aJO3WCcyePXvkapynn37aeJeWeu1UAqMvobF5NZHmVAIj
+8ybN69x7aB03bhxY8GCBbIcsdKlSxfHPwsAAAAAgEm6tfnOnTulAvX395dL
OOzvTTr36dPHequumvVjlXQW8f7775s6Z2oCs2vXLulfunTptB5z41QCo3OD
8+fPW2+VD+rLVJw9ajtpQ0xMjGx65513bB7FYyYwSseOHeUrChUqpOfKOoGZ
MmWKtKhzYdxhWgmMPJxIr42jqQmX/kFBQXbG6VQCo9fXXbt2bfpT8L/UCZX0
qVSpUs5+FgAAAAAAzZHavGXLllLApvXAHf1goFOnTmXPnt2S+kRm6yVM9YN7
9OorqqKXm32Mzw4WvXv3fvwEJq0yX3n55ZflI9Zr5wqnEpiPPvrI5gCU7du3
y6YOHTq4dtR20obAwEDZNHLkSJtH8fgJTEhIiHxFjx49dKN1AqMGIC1Lly41
7lA/h8iUwEisUbRoUdMANm/eLP2ffvpp41OllNjYWL0ctFMJzI4dO6Tzs88+
e/XqVTuHv2vXLutllhs2bGhJvYTGzgcBAAAAALDPkdp87dq1UsDmyZPHejWY
jRs3lixZUicA7dq1k87ff/+9sZuqrCV2CAgIMF5LI8uYqH+Nz06aO3eufiTN
4yQwaZX5yoYNG+Qjfn5+qpy37iCfdTCB0TFLpUqVjKu2xsfHt23b1jq/cuqo
ddrwn//8x/ilZ86cKV26tGrPnj17WuskP34Co06WTIVxD9YJzKpVq6SladOm
hw4dUgceGRn5yiuvWB4xJTCSk1hSlwxSM/b777/HxsbKJp34+fv7q91evnxZ
bZoxY0aRIkVeeOEFuZPIqQTmpuFnWbVq1V9//VV+gUePHh00aJA6ofL23Llz
5cuX9/Hx+eKLL9R4bqYuCDNr1ix9XI5MIAAAAAAANjlYm3fr1k3q0GzZsvXq
1Wvx4sX79+//+eef+/btK9eZqPa9e/eqnhEREXLvT44cOcaOHatq5wsXLsyb
Ny9fvnw2S2b9iOquXbseP378t99+GzhwoFxI8/gJjJ0yX/nkk0/0t7z55psz
Z87cuXOnOooFCxbohyI5mMAor776qnykVq1amzdvVkX9nj179GU/jRs3dvmo
ddqgJrl79+67d+++evXqhg0bnnnmGWm3Xk9Ge/wERjly5Ij6UmOLdQJz5cqV
okWL6vHLQ8mVcuXKyXGZEpigoCDdWXKnQYMGyaaTJ0/qtXMtqfmSfp03b141
qzedT2DUj9D4oKtcuXLlz59fv5WfzcaNG42NhQsXVt3ktY+Pj4MTCAAAAACA
TY7X5voGGWsFChT4+eefdc+ZM2cat8qlL6J///6m3S5fvtx6h6rQ7tu3r7x+
nATGTpkvBgwYkNZBWVLTg19//TXdbxfnz5+vXr26/qwxNyhTpozkBq4dtU4b
bKpataoxVjJxNoF5++231T6rVatmv5skMDlz5jQ2Hjp0yJicFC5cWHW7dOlS
pUqVLFYJzPXr1/WtW+L111/XW0+ePKk+K4sMC19f3/bt2x89elQ66LWUN2zY
YBpbkyZNLFYJjKJGMnz4cJ0E6lMTGBiob01S0969e/eCBQsa+6jZ+OWXXxyZ
PQAAAAAA0uJ4ba4sWbLk5ZdfNmYLhQoVatOmzb59+0w9VV1cu3ZtYxlbvnx5
0xqt2qRJk+SyGQku6tevv3Xr1t9++806i1A7US3Nmzc37UHfJ2VKYOyX+WLN
mjWqUQ9A+Pv7f/bZZ6pmN/ZM69u1ixcv9u/f/8knn9T7yZUr1z//+c9z5849
zlHrBGbq1KmNGzfWO8+ZM+f777+vF+GxydkE5jHFxcXt2rVr0aJFad0VZRIb
G7tq1aply5bpBV6MLly4sGXLloULF0ZERNhfv8WpEaqfq/ol//LLL2klV+q7
1PeqowgNDT18+LBTT1ACAAAAAMAmF2rzY8eOrV69esGCBabrOqydPn16zZo1
qr4+ceKE/Z7nz58PCwsLDg62/wxi19gv83WfDRs2qINSw7D5PCPH6RRi69at
xmVerDl41DqBkSsx1FH8/PPPv/76qyOhRBYnMAAAAAAAwCZqc89nZ82TdJHA
AAAAAADgCajNPR8JDAAAAAAAf3bU5p6PBAYAAAAAgD87anPPRwIDAAAAAMCf
HbW551uxYsULL7zQtGlT62dOpYsEBgAAAAAAT0Bt7t1IYAAAAAAA8ATU5t6N
BAYAAAAAAE9Abe7dSGAAAAAAAPAE1ObejQQGAAAAAABPQG3u3UhgAAAAAADw
BNTm3o0EBgAAAAAAT0Bt7t1IYAAAAAAA8ATU5t6NBAYAAAAAAE9Abe7dSGAA
AAAAAPAE1Obe7f8AAAAAAAAAAAAAAAAAL5ICAAAAAADchNrcu5HAAAAAAADg
CajNvRsJDAAAAAAAnoDa3LuRwAAAAAAA4Amozb0bCQwAAAAAAJ6A2ty7kcAA
AAAAAOAJqM29GwkMAAAAAACegNrcu5HAAAAAAADgCajNvRsJDAAAAAAAnoDa
3LuRwAAAAAAA4Amozb0bCQwAAAAAAJ6A2ty7kcAAAAAAAOAJqM29GwkMAAAA
AACegNrcu5HAAAAAAADgCajNvRsJDAAAAAAAnoDa3LtlQQKzbdu28PDw3bt3
Z9L+/1xOnDgRFBT0ySefDB06dOnSpUlJSe4ekQ2cMgAAAADIeiQw3s3lBCYu
Li4qKkqV6gkJCfZ7litXzmKxvPDCC66P0luEhITkzp3b8oifn9+9e/fcPSgb
MvWUnThxonfv3t27dz958mRm7N/kzJkz6lcaHR394MGDLPg6AAAAAHAZCYx3
cy2BGTx4sK+vr8QIO3bssN+ZBEbcvn27WLFiMmkVKlRo2LBhx44d3T0o2zL1
lHXq1Ekm4e23386M/ZsMGjRIvq5ixYrp/lYBAAAAwI0crM0fPnwYHh4+efLk
ESNGzJ49e+fOnTa7HTx4cG8aEhMTrftfuXLl559/Hjly5IoVK65fv/6YxwJr
LiQw69evtxhERUWlpJ6pv6eKiYkx9SeBEatXr5YZ69Kli/p7cfdw7MmQUzZx
4kT1e1B/vKb2jh07yjx89tlnj7N/Bw0dOlT/VsuXL+/hMw8AAADgr8yR2lzV
4Kq0sfwvVb6dOnXK1NPPz8+ShuDgYFPngQMHZsuWTXfInj37t99+m4GHhhSX
EpiePXuq0+Hj4xMaGnr9+vXk5OSU1GxNTpN6YepPAiOCgoJkikJCQtw9lnRk
yCmTpMX6Op8LFy58+eWXEyZMyJpMNTExMTY2tm/fvjL5kZGRWfClAAAAAOCC
dGvzhQsX6lylePHi9evXz5Mnj77VIj4+Xve8d+9eWvGLsmTJEuNu+/XrJ+1q
bw0bNnziiSfk7TfffJNJR/rX5EIC07JlS3UimjdvbmzctGkTCYx96qcrU3Tk
yBF3jyUdGXLKmjVrZjOBcYs7d+5InDtv3jx3jwUAAAAAbLNfm1+7di1fvnwS
tkRGRsrlENevX2/btq0Um+PHj9edz507pxtPWlElku4ZHR0tPevWrXv79m3Z
Z+XKlVVLjhw5zp8/n4kH/BfjQgLToEEDi9UiHiEhIfYTmKZNm+oWdX6joqKM
Z9ymhIQE1W3v3r3prqGqOuzfv3/79u3ya0nXzZs3t27dqoaagauzXr58OSIi
IiYmRv4KrOkE5tixY07t+cyZM5s2bbp06VJGDNOhucqQBKZatWquJTDOnk2R
7o9K1kAODAx0djwAAAAAkDXSrc23bdvWtm3bK1euGBuvXr0qyUyTJk1046FD
h6QCXbVqlf0vlVsGfHx8zp49qxv1fS5cBpOBXEhg6tWrp85C165d5e3MmTMr
VKggp1tRLwqmUt2kg5TzL774YlxcXI8ePUqWLKlvK/v4449trv8TExPTqlWr
nDlzSk8/P7/27dubfmMiNja2devW+iqsbNmy1alTJzw83NRt+fLlakjPPPOM
ej1t2jR9mVbdunVVe7FixWzeEaN+vWprgwYN7MxGcnJyUFBQqVKl9NVcagb6
9eunDlb3UeMJCAjQT0HSU2T/MVJqz5MnT37qqaf0nkuXLr1w4ULZum/fPtmJ
9UIrKamBmGxdsWKFs3OVYiuBuXXrVtGiRdUO+/fvb+o8evRo+a6LFy9KS/Xq
1dWw1flVO/H19S34yLJly1IenQtly5Ytpl05PsL69eurPfz444+O/6jy5s2r
OkyYMMF6EwAAAAB4ApefhST3IDz99NO6ZfPmzVIlydqtaXnw4EHhwoWt73NR
qlatKtfbuDAe2ORCAqOKX3UWevXqJW9HjRplsaVy5crSQcr5MmXKWC8WpAwc
ONC0/1WrVuk8x8fHJ0eOHPK6VKlSppWFVC0vZbU148VXyrx581Rjzpw5g4OD
jYsLDRs2TF7MmDHDNIyYmBjZNHTo0LSm4u7duy+99JLNAaij1omEvkDIxE4C
c+/evVdeeUX3NC6gNGLEiJTUPxN5slJAQID1x9944w216cknn7x165azc5Vi
K4G5ceOGdP7www9NnYcMGSKb9MVpkr1YW7x4sT4XysaNG437cWGE6jArVqxo
3d/6R5XyKIEZM2ZMWnMOAAAAAO7lcgJTq1YtVe9UqVJFt6xcuVLqI+sVeo1O
nz4t3SZNmmTapB8sq+pTF4YEay4kMDVr1rQYHmQTExMTFhb2wQcfyKmZPHly
WCp9O5IUy6JNmzYhISHHjx8PDAz08fFRLfnz5zfeOXLlypVChQqpdvXvokWL
EhIS7t69O2PGjFy5cqlG9S2658WLFwsUKGBJvVJi2LBhf/zxx/nz51VPWTJI
NYaGhurOuur39fX18/NTZfjOnTtXrFgRHx+vBqDaGzZsaDrMiRMnykcOHTqU
1lQMHjxY+lSuXFkdclxc3Pbt21u1aiWNdevWlSfvXLp0yThF06dPV2+3bdtm
Z5JHjBghnTt06HDy5EnVoiatcePGltRU6sSJE6qlT58+0mfv3r3Gz6r5fPLJ
J1V7p06dXJirlMdOYH799Vd1gHJ+a9SoEfaInGibCYxrI3TwRyXkd6VGa2fa
AQAAAMCNXEtgVCkq/x/cWDL/97//lYpJFVOqDurSpYsqYOfOnWta7WHHjh3S
zfqRMaoik03WjzyGa1xIYAoWLKhOgem5VHqRk7TWgbGkXnBiXCPl3XfflfZ9
+/bpxm7dullS7yUxBRRypY1xFaD33ntPZz6mI5L22rVr60Zd9atafuXKlcb+
vXv3lk2qhDe2P//886qxWrVqac3D4cOHfX19VR9/f3/jTUyJiYmyWLH81K2n
KN11YNRIJHFq3bq1sT0+Pl5iColBdu7cKTs0pQpLly41fbtTc5Xy2AmMkJvI
rNeBsZnAuDZCB39UokqVKqr9rbfeSgEAAAAAj+RaAjNhwgSpg+bOnasb//3v
f1tsKVy4sHG1iuXLl0v7pk2bTLsNDg6WTVu3bnX1gPA/nE1gIiIirLOFFAcS
mEaNGpnaf/zxR/nImjVrpEWV0rJYiqqjTZ0vX74sncPCwtTbhw8fymUeZcqU
sV5Nt3Xr1tJ5586d0qKrfn1ZiLZ//37ZNHz4cN147tw5uVnJzqJD48aNkw/O
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
du0cmYpbt27VqlVLD8AYR6jZMCUtTiUwt2/flmdkC/WHo/9SrGcsISFBb1XH
fvLkSesdOj5XKYYbrNRuddqzfv16ixX19zhw4EB5bUpgZs+ebfw9qH+//PLL
lLTPhVMjdCGBKV68uCX1Xq20Zx0AAAAA3Ml+ba5KP1UbWtdlRtWrV1c9N23a
9PTTTxtrVWO11b9/f9OeFy9erOtuXYup71q3bl2mHu9fjQsJTL169dS5MD6O
R+zevVsuM9AnSy55kmtmWrVqZeofERGRVrEcFRWlimvjr8jX17dTp06HDh0y
9dy6dWvdunWNPdXX2XmKlvGqKmu9evWSburn5+Bs3LlzZ8iQIbJAsT7w7t27
37x509RTJzCnTp1yZM93794dM2aMDoWEv7//999/b31rkvpG6dC4ceO0dujg
XCmRkZH67/rIkSO6fdq0aXKlivwJN2rUaN++fQcOHJAWUwLz4MEDneSIf/zj
Hyl2z4XjI3ThRyUh1fjx49OaHwAAAABwL/u1uSoSjUGKTaqkks7Xrl1TdaIs
sqGVK1cuNDTU5s6XLl1qrOgrVKhA/JLhXEhgGjZsaLGVwKSkFt2HDh1avny5
KsyNq4W4Jj4+ftu2bStWrIiOjtZrBNl048YNNX7187h06dLjfGOXLl3UoeXO
ndvZ66wePnx4+PBhNdQMOXDTnv/4449Vq1Zt2rRJ7uJ5TA7O1ZkzZ1auXBkZ
GZmQkGBsv3Xrljopa9asiYuLc+Tr1JjDw8PV112+fDljR+gsSckCAwMzcJ8A
AAAAkIGcqs0dce/evb17965evVpVWI48MikmJkZ1Pn36dAaOAZoLCUzLli0t
tp6J82d3/PhxucCjW7du7h4LMpj6z44EuekusAwAAAAA7pLhCQw8igsJjNzw
UrhwYW+KxZKTk1977TUp0vfv3+/u4SCDzZ07V05ueHi4u8cCAAAAALaRwHg3
FxKYZcuWSTHr6+tbrlw54zohf0aTJk0aN26cXname/fu7h4RMtLUqVP1zYyF
Cxe+e/euu0cEAAAAALaRwHg3FxKYhw8f6mclKzt27MjMAWauGzduGJ+71Lhx
49u3b7t7UMhIgwYNkpObI0eOadOmuXs4AAAAAJAmEhjv5kICIyIiIqZMmTJ+
/PiMXS41i504caJt27ZVqlRp166dOhz95GV4jcjIyAkTJvzwww9Hjx5191gA
AAAAwB4SGO/mcgIDAAAAAAAyELW5dyOBAQAAAADAE1CbezcSGAAAAAAAPAG1
uXcjgQEAAAAAwBNQm3s3EhgAAAAAADwBtbl3I4EBAAAAAMATUJt7NxIYAAAA
AAA8AbW5dyOBAQAAAADAE1CbezcSGAAAAAAAPAG1uXcjgQEAAAAAwBNQm3u3
/wMAAAAAAAAAAAAAAAC8iLuvxwEAAAAA4K+L2ty7kcAAAAAAAOAJqM29GwkM
AAAAAACegNrcu5HAAAAAAADgCajNvRsJDAAAAAAAnoDa3LuRwAAAAAAA4Amo
zb0bCQwAAAAAAJ6A2ty7kcAAAAAAAOAJqM29GwkMAAAAAACegNrcu5HAAAAA
AADgCajNvRsJDAAAAAAAnoDa3LuRwAAAAAAA4Amozb0bCQwAAAAAAJ6A2ty7
kcAAAAAAAOAJqM29GwkMAAAAAACegNrcu2VBArNt27bw8PDdu3dn0v7/XE6c
OBEUFPTJJ58MHTp06dKlSUlJ7h6Rm/HzAAAAAABBAuPdXE5g4uLioqKiVPmc
kJBgv2e5cuUsFssLL7zg+ii9RUhISO7cuS2P+Pn53bt3z92DcjPrn8eZM2fU
7yo6OvrBgwduHBgAAAAAZDESGO/mWgIzePBgX19fiRF27NhhvzMJjLh9+3ax
YsVk0ipUqNCwYcOOHTu6e1DuZ/3zGDRokMxSxYoV0/11AQAAAIDXcLw2v3Xr
1po1ayZMmDB27Ni1a9deuXLFuFW93ZsergfIei4kMOvXr7cYREVFpaSe37+n
iomJMfUngRGrV6+WGevSpcvDhw/dNYyJEyeq0zRy5Eh3DcDE+ucxdOhQ/esq
X768G+cKAAAAALKSg7X5okWLSpYsaSzMc+fOvXLlSt3hu+++s6Rn1qxZmXgk
sMWFBKZnz57qZPn4+ISGhl6/fj05OVk1Hjx4UE6iemHqTwIjgoKCZIpCQkLc
OIyOHTuqMXjO5TfWP4/ExMTY2Ni+ffvKdEVGRrpxeAAAAACQZRypzcPDw7Nn
z65qpbx587733nv//Oc/ixcvrt6qxtmzZ0sfRxKYJUuWZPrx4H+5kMC0bNlS
nazmzZsbGzdt2kQCY98333wjU3TkyBE3DqNZs2YensCIO3fuZMuWTW2aN2+e
WwYGAAAAAFnMkdq8Ro0aqlAqWrToyZMnpeXq1au1a9dWjdWrV5eWmzdvnrRl
3759TzzxhOrZqFEjbjfIei4kMA0aNFDn6+233zY2hoSE2E9gmjZtqluio6Oj
oqJUiW3/ixISElS3vXv3prsiq+qwf//+7du3375925FDUL/GrVu3qqFm4Fqv
ly9fjoiIiImJkYuCrOkE5tixYy7s38FJu3DhwqZNm/RforVq1aplRgJz9OhR
dfimew8dGZKdgE5WLQ4MDMzYoQIAAACAZ0q3Nlc1b44cOVShNGbMGGN7WFiY
asyWLdvFixftfLxXr16q2xNPPOFaWYrH5EICU69ePXXKunbtKm9nzpxZoUKF
fPnySbygXhRMpbpJBymxX3zxxbi4uB49eui71bJnz/7xxx8nJiZaf0VMTEyr
Vq1y5swpPf38/Nq3b2+zuo+NjW3durXqID3V761OnTrh4eGmbsuXL1dDeuaZ
Z9TradOm5cmTR/rXrVtXtRcrVuz69evWO2/SpIna2qBBAzuzkZycHBQUVKpU
KX0pl5qBfv36qYPVfdR4AgIC9FOQ9BTZeYxU/fr1VYcff/zRwUmLiIh47bXX
SpQooYehPq6vQBPVq1d/6qmn5HI1X1/fgo8sW7YsJXUdp6JFi6q3/fv3N+18
9OjR0tP4tywjnDNnzvnz5xs1aiRfqmbSqSGl2E1g8ubNqzZNmDAhrVkCAAAA
AG+Sbm2u6i8pr6ZMmWJsP3XqlLT/+uuvaX1227ZtcqMB/5vbXVxIYFTprU5Z
r1695O2oUaNs3lNWuXJl6SAldpkyZcqXL2/dbeDAgab9r1q1Suc5Pj4+ku8p
pUqVUj8qY8/ly5dLkW5t/Pjxxp7z5s1TjTlz5gwODpafnBg2bJi8mDFjhmkY
MTExsmno0KFpTcXdu3dfeuklmwNQR63zCn2BkImdBEYm7Y033qhYsWK6k9a2
bVub+1emTp2qu0n2Ym3x4sVq640bN+Tthx9+aBrMkCFDZJP6YzeNcPjw4ZLI
iVdeecWpIaU4kMCYol0AAAAA8FaO1Ob+/v6W1IVBjLcR6arTzg0RcqeS+pf7
j9zFhQSmZs2a6qx99tln8jYmJiYsLOyDDz6Q0z158uSwVPp2JCmxRZs2bdQP
4/jx44GBgT4+Pqolf/78xjtrrly5UqhQIdWu/l20aFFCQsLdu3dnzJiRK1cu
1ai+Rfe8ePFigQIFLKnXvQwbNuyPP/44f/686ik3tanG0NBQ3VkSGEvqtR9+
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
nho1alj+V6lSpVS7sVtiYqKq9XLlymXslj179o8//tiF1TCQIVxIYHr27KlO
nI+PT2ho6PXr1yVqO3jwoJxQ9cLUnwRGBAUFyRSFhISk2zkr51P9YcbGxvbt
21e+MTIyMqP2DAAAAABwXLq1uaorc+bMKbVb/vz5mzRp8tRTT8nbPHnybN26
VbqdP3++Tp060p4tW7YqVarUq1dP38nSoUOHrDgYWHEhgWnZsqU6Zc2bNzc2
btq0iQTGvm+++Uam6MiRI+l2zvr5vHPnjvrDVHueN29exu4ZAAAAAOCIdGvz
OXPmqKrt6aef3rBhg9y/kJSUNHz4cH3DhXS7efNmtWrVVEuvXr2uXLkijUeP
Hi1btqz0PHnyZCYfCmxwIYFp0KCBOl9vv/22sTEkJMR+YtC0aVPdEh0dHRUV
pUp++1+UkJCguu3duzfdFWJVh/3792/fvv327duOHIL6NW7dulUNNQPXnr18
+XJERERMTExa99/pBObYsWPp7s0t8ymrBAcGBqY7PAAAAABAhnOkNl+wYMHV
q1eNLaoIrVixoqrmnnrqKd146tSpFStWWH9WKs2ZM2dm0JDhBBcSmHr16qnz
1bVrV3mrTlyFChXy5csn51G9KJhKdZMOkhi8+OKLcXFxPXr0KFmypPEGtMTE
ROuviImJadWqlb62ys/Pr3379jq4M4qNjW3durXqoC+vqlOnTnh4uKnb8uXL
1ZCeeeYZ9XratGl58uSR/nXr1lXtxYoVu379uvXOmzRporY2aNDAzmyon3pQ
UFCpUqX0jXVqBvr166cOVvdR4wkICNBPQdJTZPMxUm6cz7x586qtEyZMsHO8
AAAAAIBM4vKzkOReFVX02V/jJTIyUqrCUaNGuThEPAYXEpj69evLtUzyVp04
iy2VK1eWDpIYlClTpnz58tbdBg4caNr/qlWrdP7g4+OTI0cOeV2qVKlTp04Z
ey5fvlxCA2vjx4839pw3b578GoODg+VeGzFs2DB5MWPGDNMwYmJiZNPQoUPT
moq7d+++9NJLNgegjvrixYvSTV/QYmIzgXHjfMpkjhkzJq3jBQAAAABkHtcS
mLi4uCJFiqhqrk6dOvZ7fv3111IPqjrRxSHiMbiQwNSsWVOdr88++0zexsTE
hIWFffDBB3IeJ0+eHJZK3z4jiYFo06ZNSEjI8ePHAwMDfXx8LKlrBxlvn7ly
5UqhQoVUu/p30aJFCQkJd+/enTFjhizgrL5F97x48WKBAgUsqde9DBs27I8/
/jh//rzq+cQTT0hjaGio7iwJjOLr6+vn5zdmzJidO3euWLEiPj5eDUC1N2zY
0HSYEydOlI8cOnQorakYPHiwjkfUIauf/fbt21u1aiWNdevWlfvyLl26ZJyi
6dOnq7fbtm2zuU93zaciPYcMGZLmuQcAAAAAZBoXEpjY2FhdhM6aNSutbklJ
SfPnz5fFeCtWrOjgCh7IWC4kMAULFlSn7NtvvzU26kVO0lq3xJJ6wYlxjZR3
331X2vft26cbu3XrZkm9ocYUUMiVITly5Dh//ry0vPfeezqjMB2RtNeuXVs3
6gQmW7ZsK1euNPbv3bu3bDp+/Lix/fnnn1eN1apVS2seDh8+LL9ef39/401M
iYmJcgGYYkyBnFoHJuvnU6lSpYpqfOutt9IdHgAAAAAgwzlem8+ZM6dr167N
mzeX2xzUv59//rl1t7Nnz3766acdO3YsU6aMFIwBAQEHDhzI4HHDMc4mMBER
EdbZQooDiUGjRo1M7T/++KN8ZM2aNdKSnJwsi6W8++67ps6XL1+WzmFhYert
w4cPn3zySUvqzTjW68q2bt1aOu/cuVNadALTqVMnU+f9+/fLpuHDh+vGc+fO
yc1K6rjSmopx48bJB62XMNqxY4dseuWVV6ynKEMSmIydT/H++++rlpIlS966
dSvdEQIAAAAAMpbjtXmbNm0sBkOGDLl//751t6ioKGM3Ve5FR0dn8KDhMMcT
mJs3b65evbp06dLqrBUrVsx0ctNNDKyfnrxmzRr5yMKFC6XlxIkT0vLVV1/9
YUUuOJEFW9Rb6dm3b1/roeosYu7cudKiE5gNGzZY95eVbcqWLasvKQkKCpL+
sbGxaU1I586dpY9x0V1NJsrf3996ijIkgcnY+RSRkZGSO7366qsRERFyCxUA
AAAAIGs4nsDMnDnz5ZdfrlmzplR2StWqVS9dumTqdvny5bfeeqtx48Z/+9vf
pJsq+qZOnZrxQ4cDHE9gpkyZIuerePHi27dvN211ITHYsGGDKTFYtWqVJT1y
UUpoaKi8/e6772welGwdOXKktOgEZuPGjdb9dWITEREhLc2bN7fYWhzGqHbt
2qpPwYIFbW5t2rSpJXXlW70SdWYnMI8zn9qkSZP03++ZM2fSHScAAAAAIKO4
sA7MxYsXR4wYIf8z/Zlnnrl7967NbsnJyevXr5dlXRVVBWfAcOEkFxKYJk2a
6Kf8aBmSGCxfvlxaAgIC2qZBVmzWPU2LwIgtW7Y4lcDcuXNH1uPt1q1bSurq
tXInnTpkOxNSo0YN1adAgQI2t7Zo0cKSuvCvvkkq6xMYx+dTCw8Pl/WNSWAA
AAAAIIu5/DRqVfxKHbdu3To73VQtX6JECdWtQYMGLg4Rj8HxBObIkSN9+vSR
dUVU+W9cAzYlgxIDfYfaxIkT7Q9G97S51pDOW4KDg00tNhMY5aOPPpI45f79
+3PnzrWkLmRkHTQZ6dvubK6aIkddpUoV3ZL1CYzj8ymio6PlSVKVKlUaO3Zs
WtkpAAAAACAzuJzA6DUoBgwYYL+nPNRGFbzx8fGuDBGPwdmVeGfNmiWnNTIy
0tiuCnZp14vfao4nBtevX5eLT5o3b25/GLpn5cqVrZcrefPNN2XPv//+u7Sk
m8Do9XhDQ0Pl4y1btrQ/hs8++8w0fu3gwYNyDZjxuUJOJTBZPJ+iT58+qnOe
PHnsrH4DAAAAAMgk6dbmpmshNL1W6ocffmi/p17R1HrRGGQ2ZxOYe/fu+fj4
qJM1evRoY/sPP/wgJ3H69OmmjzieGKQYwhPrWMPkjTfekJ5z5swxtu/evTt7
9uxyIYdegyXdBEZp0KCB6qB2my9fPvVi9uzZ9gdw8OBB2eezzz57584d3a5+
5x06dJBN8+fP1+1OJTBZP59K48aNVc82bdqk2xMAAAAAkOHSrc3feuut119/
/ebNm6b2oUOHSuknC7yourhEiRKrV682dbtw4UKRIkVUt9KlS2fowOEQZxMY
JSAgQJ2vHj16GBvDwsLkdNerV2/v3r3379/Xj7hyKjFQv5OcOXNaUtew/eqr
r65du6Ya1d7U/lu0aLFo0SLdc9euXbpnYGDg1atXb9++HRwcLCu6mMIWRxIY
vR6vovZ848aNdKdC/fKl/3PPPadGnpSUdOzYMR16NGvWzNjZqQQm6+dTKVu2
rOr5xRdfpDs8AAAAAECGs1+bL1u2TIq+SpUqff/996pITE5OvnTp0uDBg+U6
hHz58sl6ntWrV7ekPvaod+/ev/zyS3x8fGJiYnh4eLVq1WQP/fr1y7qjwiMu
JDCyeHLnzp2NjUlJSf7+/jrBUPV+rly57t27l+JkYqAsWbJEfjyiaNGictWN
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
hw+ntfPHoWZj8+bNjvwBqp6yGq31PTjy152xYYg66j179uzYsSOtn4qDX3rm
zJlNmzZdunQp3W88fvy4+mHcunVLvY6MjLROYBRZSzkwMNDh4wAAAAAAhzi7
Dkz58uVtJjDKqVOnVqxYYWpcsGCBlDkzZ858nHHCNS4kMPXq1VPnq2vXrvJW
nbgKFSrky5dPzqN6UTCV6iYdJIF58cUX4+LievToUbJkSeMNaImJidZfERMT
06pVq5w5c0pPPz+/9u3b6+DOKDY2tnXr1qqDvryqTp064eHhpm7Lly9XQ3rm
mWfU62nTpuXJk0f6161bV7UXK1bs+vXr1jtXP2O1tUGDBnZmIzk5OSgoqFSp
UvoCMDUD/fr1Uwer+6jxBAQE6Kcg6Smy8xipWrVqqQ6zZs06dOjQyy+//MQT
T8hn8+fP37t37/v37xs7jxw5UnZomiI1t9L+2WefmaaiYsWK6vXKlSsbNWqk
L2ArU6ZMWmvMLlmypFKlSnL5h5I3b9733nvv2rVralP16tWfeuopiV59fX0L
PrJs2bKU1PsTixYtqt7279/ftM/Ro0dLz4sXLxrb1dSpI6pZs6a+Rk7tXP0e
Lly4oPvY/1J9aiZPnqy66VNTunTphQsXWh9dUlLSsGHDihQpor+ucePG8+fP
t5nAqGNXjRMmTLA5UQAAAADgsgxMYGzS/6N51KhRrowPj8eFBKZ+/fpyLZO8
VSfOYkvlypWlgyQwqrqX34bJwIEDTftftWqVznN8fHxy5Mghr0uVKnXq1Clj
z+XLl0s5bG38+PHGnvPmzVONOXPmDA4O1jGCoupueTFjxgzTMGJiYmTT0KFD
05qKu3fvvvTSSzYHoI5aBwv6AiETOwmMTFrFihV1DGWk/r6Mn/3000+l3XSZ
R2JiorT36NHDNBXKoEGDjFMhcufOffXqVdNO3nzzTZvjr1SpkuogMYi1xYsX
q603btyQtx9++KHpGIcMGSKbjAt3b9iwoWDBgjZ3qH4AasKlm/0vVe7du/fK
K6/odp3RKSNGjDAOIz4+vmnTpjb3JmwmMGPGjEnr3AEAAACAazI7gfn666+l
zFF1tyvjw+NxIYGpWbOmOl/6soqYmJiwsLAPPvhAzuPkyZPDUunbkSRMEG3a
tAkJCTl+/HhgYKBcepE/f37jPSZXrlwpVKiQalf/Llq0KCEhQRXdM2bMkAWc
1bfonhcvXixQoIAl9bqXYcOG/fHHH6qQVz3lchHVGBoaqjvr2MHX11cV46p8
3rlz54oVK1T1rQag2hs2bGg6zIkTJ8pHDh06lNZUDB48WPpUrlxZHXJcXNz2
7dtbtWoljXXr1pW7dS5dumScounTp6u327ZtszPJxknr2bPn1q1b1dEFBwcX
LVpUGo3XjLmWwChqAseOHbtnz56oqCi5tElRf5LGnai5kvYiRYr89NNPatrV
GR816v+xd+fxURTr3sDHQABZRQISuSyRVTjIJhg2WSOyyKKgKKgguKEi4Bbg
sOthPwEMKnDhENGDBCEQ4LAZL0sIJJJAMCFBiCwxIGtWCMQk8z53nku9ZfdM
T89kJjO0v+8ffJLqmu7qqkro50l39exy5crRAFGFH374gU6HR7NVq1Z77+Jh
dTQDk5GRUalSpSpVqkybNu3gwYM5OTnJyckiQ7J06VKupn1QMn36dP7IkCFD
+AErmnVdunQxWdJ6aWlp4ogffvgh16xTpw5NTurD+Pj4cePGifSUIgPD85Ma
rzF8AAAAAAAATnBfBqawsHDdunX8oEGTJk10ruABruVEBoZvUZg/f75cKBY5
sbUOjMlyw4m8jMmIESO4/Pjx46JwzJgxJstjIIoEBd9pU6ZMGRGtv/zyyyLn
ozgjLm/btq0oFGkHCqu3bt0q16dYmzdRhC6Xd+rUiQpbtmxpqx9SUlJ49gYE
BMgPMRUUFPBixUTOAjm0Dgx3WrVq1RSZyRMnTnBmoFGjRqIzncvA0I+qvCYw
tYr3PHjwYLmQ7x558MEHFQvFXLlyRf6W79VRL8niaAbGbHloS7Hz69evczN6
9uyp56A0lJyy69u3r1yenZ3NWTvRGDpB3knNmjV/++03ufLatWutZmBatGhB
hc8//7wZAAAAAADApVyegaEwhwJGCprq16/PAU7jxo0prnRBW8FxjmZgxAti
5NyCWUcGpnPnzoryNWvW8Ed27NjBJcXFxbxYyogRIxSVKSTnynv37qVvi4qK
KlasaLI83KReTZfibq78008/cYlIOwwfPlxROTExkTdNmzZNFGZkZHA6gs7L
VlfMmzePP6hewig2NpY39e/fX91F+jMwVl8g9dRTT/F+xLoozmVguCdl9erV
M1lu3RElCxcu5MqKp7rUXJiBsYq6gvNOeg46f/583rMiq2a+m3ATs1GcoHpd
F6vvQiKvvvoqFfr7+/OCvQAAAAAAAK7i8gxMXFycSUKBTHJysgsaCk7Rn4HJ
ycnZvn07B+m1atVSLAZrNwOjTibs2LGDPyIWR01LS+OSWbNmnVHhG054wRb6
lmtOmDBB3VSR2wkLC+MSkXbYs2ePuj6vbNOgQQNxV0loaCjXP3v2rK0OGTly
JNeRF90VuKMCAgLUXVTCDIxYeOfIkSNc4lwG5scff1TsuX379ibLDWmi5JVX
XrG6ZzWXZ2Co8YcPH16wYMHgwYObN2/ODxxVqVJFz0H5/qgaNWqoZxE/c1S7
dm2uOXr0aG5DRkaGYie2MjDR0dGcnXvmmWeojvq1UAAAAAAAAM5xeQbmypUr
zz//fJcuXR5++GEOcCic+fzzz13QVnCc/gzMsmXLeLweeughEfsLTmRg9uzZ
o8jAbNu2zWQP35QSGRnJ34qFQRQnxVtnzpzJJRppB7OUsaGAmkt69OhhsrY4
jKxt27ZUp3r16la38tIlZcuWLSwsVHRRCTMwX331Fe9n48aNXOKqDAw/eCVn
YNq1a2eyPAxlt8EuzMDk5eXNnz9frHgjq1Spkp6DcrM10Ae5Jg2xybJOr/qM
bGVgyOLFi8V7mtLT0+12DgAAAAAAgB7uWwemuLh49+7dvKwroSjY+VaCs5zI
wNDgKl4fbHZRBiYiIoJLGjduPMAGXhdF1FQsAsMOHjzoUAbm5s2bvB7vmDFj
zJbVgPkFTHTKGh3SqlUrk2UxW6tbe/XqZbIs/CseknJVBkY8OLNr1y4ucV8G
hs/Rz8/PboNdlYHJzs5u2bIll/v7+wcHB+/cuZMq8PuYdGZguNnE1ix66aWX
uCavP1y5cmX1GWlkYKKiong9GWRgAAAAAADAhdz9LiSK5WvXrk0fCQwMdKZ9
UDL6MzCpqanjx4/ndVqefPJJeU1ds4syMOIJtUWLFmk3RtT88MMP1VtFkkHc
JaKdgSHvvPMOp1Pu3LkTFhZmsqz6q040yfr168f7tLoeCJ91ixYtRImrMjBi
6WDxhJTIwCgepSl5Bkaco9UnrWR2MzCvv/66YpPVDAyvsmKyvCxbXuHHoQwM
N7tq1aqKWar27LPP8uHUK4HbysAkJyfz+7aaNm06d+5c8YJsAAAAAACAEnJ3
BsZ8d9EGCnizs7Mdbh+UjKMr8a5atYrD0ujoaLmcQlEuF4vfCvozMDdu3OCb
T3r06KHdDFGzWbNm6oU4OFonJ0+e5BK7GRixHm9kZCR/vHfv3tptmDhxoqL9
ws8//8xLhchvzHFJBqagoKBu3bq06f777xfphWnTpvGe5bdKkaysrBJmYERu
Z/Xq1doN5ncPySsPiwb7+PiY/vyKJTZhwgR1BoYfTqSWKCpbzcDYOuikSZN4
z+KxMlvEq6i3bNmi2GQrAzN+/HiT5bYZjTWCAAAAAAAAnODCDIytv0eLFU3t
rvYJLudoBiY/P5/XRJ0zZ45cvmLFCh7EL774QvER/RkYs5Q8Uac1FIYOHco1
165dK5fHx8dzyN+0aVOxBovdDAwJDAykCrTbqlWr6sk5/Pzzz7zP5s2b37x5
U5TTPB8yZAhvWrdunSh3IgPTsmVL6nC5fOnSpbwT8RyNWVoZRl5PKScnp0uX
LiXMwFBncuV69erJb9w2W57Vkt8Z7e/vb7KsEaQ+F77Jjf6V72kJDw/niSRn
YIqKivj2kjZt2sh7OH/+PI2mOgNj66BJSUm8Z+pAxZLRClu3buWadO5y8+jr
sWPHWs3AcK/269dPY7cAAAAAAABOcFUGhkI5CsG2b9+uKL906ZKfnx+HeCVs
KjjB0QwMady4sSKoJ3v37uVwtUOHDseOHaOwV7ziyqEMDM0TfrSEwvNZs2Zd
v36dCmlvtP9evXqtX79e1Dx69KioGRIScu3atby8vI0bN/KKLooMg54MjFiP
12RZqTUzM9NuV4hnWB5//HFqeWFh4S+//CKSSN27d5crO5GBMVnev7x58+ac
nJyLFy/OmTOHb62pUKHCuXPnRGXx8mv6EYuKirp69er333/PLzYqYQaGPP30
01yffrRp5/n5+bT/sLCwWrVq9ezZU6RVO3fuzNWWLl168+bNCxcuUDXeJF4O
/uabb9LP+4kTJ6ZPn863MCkyMIR+dXBheHg4jfuNGzdoXKpXr86FigyMxkFF
gq5Vq1aHDx/mXFxGRsaMGTNoKorUHLW/TZs2XJPONCkp6fbt2wcPHgwKChLN
U2RgGjRoQIUff/yx3UEEAAAAAABwiJ7Y/MiRI4fuqlOnDgdrooSfLXrsscdM
ltcejRs37j//+Q8VFhQUUEAnVt2cNGlSaZwP/JkTGRhePHnkyJFyIYW0AQEB
ImgtW7Zs+fLl+f4NhzIwZMOGDXwTC6tZs6a4WUKRHFi3bh1nJJj4FBVOmTJF
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
rVrFAxcdHS2X0yUZl4vlHwX9F8M3btzgP7/26NFDuxmiZrNmzdQPpHMwTk6e
PMkldmMQsSJlZGQkf7x3797abeB3icrtFygQ40fm5TdHlHKs6mjz1EfUPxzv
v/8+H2v16tUa1QoKCnx8fEyqF5eQCRMm8B7sZmAefvhhk7WlGNyRgcGslnnD
rLa1E/3DIV5FvWXLFkVlpzMwmCcyd8wT92VgJk2axCXiISyHGmZ3K79oSV6U
mIk1jhSL85Q8A6Pnt7H+ySaMHz/eZLl5TGN1IAAAAHAJZGCMzdEMTH5+Pv/l
bs6cOXL5ihUreEC/+OILxUf0XwybpfBBfWGvMHToUK5JYZpcHh8fz2F+06ZN
RUCnJxgPDAykCrTbqlWral++Mgo0eJ/NmzeXX6FbXFw8ZMgQ3kTzXJSXcqzq
aPOsHlHncFCfc7V69erJr6Y1Wx5qkF+BWrt2bZNlcUv59pXw8HCeVCZ7GRiK
N/nvsG3atJGPcv78eRpukyMZGIp05s2bl5KSonFemNWi3Etmta2d6B+OrVu3
cgmFrvIkpK9FM+QMDOaJVaU8T9yXgUlKSuKSli1bKpaX19Mwu1v9/f1NlsXT
FJVF1m779u1yuXg3k9MZGJ2/jfVPNtalSxeq3K9fPz2VAQAAoCSQgTE2RzMw
pHHjxjRwb7zxhly4d+9eHtAOHTocO3aMLmXFndUOxSB09ci3bVNIPmvWrOvX
r1Mh7Y3236tXr/Xr14uaR48eFTVDQkKuXbuWl5e3ceNGXtNAcbGqJwYRT+Wb
LKsvZmZm2u0K8UTD448/Ti2nkIfiC3Fl2717d7ly6ceqDjWP12+kn1/5r+r6
h0O8UJj2QD/U+fn5dLUfFhZWq1atnj17ijv8xaty33zzzUuXLp04cWL69On8
11gmZ2CsNol+t3DN8PBwagmFGDRw1atX50KdGZicnJwqVaqYLE9bHDhwwNYo
YFZ74awuYQaGpmKbNm24kCYtBeC3b98+ePBgUFCQ6CiRgcE80VCa88R9GRiz
lM5q1arV4cOHeRJmZGTMmDGD9iDPSScyMJ07d+adL1269ObNmxcuXKBfjGbL
mipcTiN77tw5mpY0cwYPHixGwekMjFnfb2P9k401aNCAKn/88cdWzx0AAABc
SE9sfuTIkUN31alTh//fFyXZ2dlcjS5pROG0adP4CoEuzLiEroTdfjKg4kQG
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
Atek+dauXbuoqChFtYiICGrSo48+Sl8vX768cuXKXL99+/ZUXqtWLatPW3Tt
2pW2BgYGavQGBXehoaF169Y13UU9MGnSJDpZUYfa07hxY/HOGtFFGq+RopDz
mWeeMUlatWr1r3/9y9GOGjBgAB3Iz88vOTlZ/uCMGTO4DfyoYG5ubs2aNenb
Dz74QHGIOXPmcE3FDzIF4AMHDqxdu7ZoIdVR3/PmRAYGM8odM4o7rXfv3ikp
KU8//bQ4wWrVqr3zzjuKTuOzIwcPHnS0bUxj3HX2sNmSJqL/VqpUqSIOV7Fi
xeqSo0ePcs0nnniCvu3fv79iD5cvX37ppZfEXKJjNWvWjM5OrkONnzlzZuvW
rcXq4jSRaLZcunTJah9azcBwIxcuXKjeBAAAAACgn93Y/OLFi3zVumzZMrn8
/PnzXP7DDz+4t4lQAk5kYCjYoWF96623+NvZs2ebrKFIhytw2FK/fv2GDRuq
q33yySeK/W/btk1ETGXLluX8HqG4jyaVXJMiKTk6ky1YsECuyfEgBeAbN27k
5wXY3//+d/7iq6++UjSDYnbeNHXqVFtdcevWrT59+lhtAJ21SFmI2zkUbMXL
165dk4NcijrF13I79XTUgQMH+HzlO0bS09Pvv/9+KuzcuTPfw5CZmcmfffvt
txWNmTJlCm+in3RROGDAAKtnRD7//HN1z5scycBgRlltQElmlOg0kyX7pP5g
165d5c9aHTWdbdPYg0M9TDOzf//+vKlatWotW7YsX7684iNHjhyRz06RG9m7
d6+fn5/VY61fv57r7Nmzp3r16lbr0PSgU1b3oUYGRvFnCAAAAAAAR+mJzQMC
AkyWhUHkW8RFjKD9AAV4lhMZmNatW5ukl6RQXEmRzmuvvcbDvWTJkr0W4uER
EfqRfv360cQ4ffp0SEgIxcIcW8n3/F+9evXBBx+kcvqXoiSKCikIomCWgy86
iqhJEd8DDzxgsvxdm8LeM2fOXLx4kWpyboEKIyMjRWURD/r6+lIESoHSTz/9
tGXLluzsbGoAlXfs2FFxmosWLeKPJCUl2eqKyZMnc51mzZrRKWdlZVFIGBQU
xIXt27fnn4jLly/LXfTFF1/QtzExMbZ2+9lnn3HN999/Pz09nULREydODBo0
iHo+Pz/f0Y564403eG/r1q3jklGjRpksuYjExEQucTQDQ6NvsoTt3333XVpa
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
1blQkYFp164dFTZs2FB9Dw/f8EkHsjsQAAAAAAAa7MbmS5Ys4YvVAQMGiOUH
f//9d/qWy+2uhQge5EQGpnXr1jSsI0eOlAspuhFrlXDcVL58eU7KORQvkw0b
NojQyWRZukTchtGkSRO55rp168SLt0yWVWH5CyqcMmWKXFNPvCxWTyWDBg3S
0xW5ublt2rQRDZDzFdQbirhYZ7wcGxsr1vPk06fomL/29fWNi4tzqKM++eQT
LqHK4oNXr16tUaOGybJ8E33Nhbt37zapVK1aVexBZGBu377NyVVWsWJF/oJC
e+4BOQNDIS03kv6dP38+n6D47OTJk231A2aUq2YU404TJy6jo3z55Zd2z86h
tqnHnenv4ZiYGKutpeGjZnz22Wc0DxVnp5gSq1atko8lN/itt97iOuL/L5Ml
DSXazHlmRQZGPIpFP6GKdc/4J2L27Nl2BwIAAAAAQIPd2Ly4uFj8Sb1cuXKP
PfZYu3bt+NZuMnDgQI0/XILHOZGB6dChA43sSy+9pCiPj4/nPwSLcCYhIcF8
956ZoKAgRf39+/dzTfXjIXFxcRRMyWGXr6/v8OHDk5KSFDUPHTrUvn17uSYd
TrE+Cfn22295q+IltgoUl3G17777TmdvUJRNkSMvUCxOfOzYsTk5OYqaIl6W
bzaw6uLFi+PGjXvwwQfl82rduvW+ffsUNbU7ig7EMWy3bt0UH1y7di3XpwOJ
wuXLl/MtChyudu7c+fjx4ydOnOAS+V1I586d45fjMAqKP/roo1u3bjVv3tz0
5wwMEclYapjZsvBInz59uGTIkCEa/YAZ5aoZZb7baatWraLR4aeiWMOGDcUr
s+2enf62mVXjLujs4dzcXPrfxGRbixYtxH8utqbErl27nnjiCflT9erVk5+W
MlveIi0SQTTtAwMDqYXh4eEmVQYmOjpapENTU1PlTZw1XbBggdXOBwAAAADQ
SU9sXlhYOH/+fF7SUPDz81u2bJn2KojgcU5kYDp27GiyloEhf/zxB4W0ERER
FLnLy4k4Jzs7OyYmZsuWLcnJydoTKTMzk9pP0VYJX30+atQoDrvklS70KCoq
SklJoaa65MTZnTt3EhIStm7d+sMPP6Snp2tkMvV3lF0U9tKuduzYkZWVpV2T
TpmCUDqoWFXDFuoQCl0jIyPFq3bIa6+9ZtLx1AZmlAtnlEC/sY8dO0Yj8ttv
vznxcZ1tszrugt0e5jRdu3btaJr99NNPMRY0M+fOnctLBxP5ljAN1AD6IaLP
ZmRkWK1As33fvn27d++mGaK9K/pJpB9JOi/5DhzCWamQkBA97QEAAAAAsEV/
bE7X23Sp/J///Icuqs+ePat+Uh68kBMZmN69e5usvTTnXnf69Gm+A2TMmDGe
bovBUfTt5+dnsrwnyNNtcSPMKKdFR0dzjkW9JLVZuoPrq6++Kv22qeXn53N7
7C62DAAAAACgzaHYHO45TmRgxo4dS7FGjRo15NcZ3+uKi4vFy1MSExM93Rwj
O3r0KC/won42ykgwo0pi/fr13HW///67euuiRYt467Fjx0q/bWphYWHcnqio
KE+3BQAAAADubcjAGJsTGZjNmzdzuOHr6/vII48o1kO45yxevHjevHlikZCx
Y8d6ukUG16lTJ16yQ15Yxkgwo0ru5MmT3Hu9e/eWH5W6detWSEgIr270xBNP
eHyRsc8//1wsVVSjRg1qnmfbAwAAAAD3OmRgjM2JDExRUdHQoUPFgj+xsbHu
bKB7ZWZmym/J6dKlS15enqcbZXAbNmxYsmSJx2NnN8GMcpWXXnqJ+5D68/HH
Hx8wYECnTp3Eu6X+9re/Xbt2zdNtNAcHB4slfJcvX+7p5gAAAADAPQ8ZGGNz
IgPD9u/fv2zZsgULFpRwqVLPSktLo8iuRYsWgwYNotNRvGEWwFGYUa5SVFS0
aNGiJk2ayAu8+/j4PPbYY//617+8ZI336OjohQsXrlix4tSpU55uCwAAAAAY
ATIwxuZ0BgYAoBT8/vvv8fHxP/744y+//HLnzh1PNwcAAAAAwI0QmxsbMjAA
AAAAAAAA3gCxubEhAwMAAAAAAADgDRCbGxsyMAAAAAAAAADeALG5sSEDAwAA
AAAAAOANEJsbGzIwAAAAAAAAAN4AsbmxIQMDAAAAAAAA4A0QmxsbMjAAAAAA
AAAA3gCxubEhAwMAAAAAAADgDRCbGxsyMAAAAAAAAADeALG5sf0PAAAAAAAA
AAAAAAAAAAAAAICBePp+HAAAAAAAAIC/LsTmxoYMDAAAAAAAAIA3QGxubMjA
AAAAAAAAAHgDxObGhgwMAAAAAAAAgDdAbG5syMAAAAAAAAAAeAPE5saGDAwA
AAAAAACAN0BsbmzIwAAAAAAAAAB4A8TmxoYMDAAAAAAAAIA3QGxubMjAAAAA
AAAAAHgDxObGhgwMAAAAAAAAgDdAbG5syMAAAAAAAAAAeAPE5saGDAwAAAAA
AACAN0BsbmzIwAAAAAAAAAB4A8TmxoYMDAAAAAAAAIA3QGxubMjAAAAAAAAA
AHgDxObGVgoZmJiYmKioqPj4eDft/96SlpYWGhr63nvvTZ06NTw8vLCw0NMt
AvfC/JeVcP5nZmZGWfz2229uaiEAAAAAgAchA2NsTmdgsrKy4uLiKLq8ffu2
ds1HHnnEZDI9+eSTzrfSKDZt2lSpUiXTXRUqVMjPz/d0o/5CVq9ePWzYsJUr
V5bmQTH/hZLP//379/Nnv/zySzc10gulp6fTb9rk5OQ//vjD020BAAAAAPdC
BsbYnMvATJ482dfXl0Oh2NhY7cqIQFleXl6tWrW40xo1atSxY8fnnnvO0436
C0lJSRGx/6lTp0rtuJj/zCXz/6+ZgQkODuazbtKkid3ftwAAAABwT7Mbm584
ceKYprNnz5ZSW8FxTmRgdu/ebZLExcVR4dWrV3ta/Prrr4r6iEDZ9u3bucdG
jRpVVFTk6eb85dBvKu7/8uXLX7582bU7x/y3yyXz3/AZGKsTaerUqeL3bcOG
DfHbAwAAAMDA7Mbm1atXN2mqU6dOaTUWHOZEBubNN9+kYS1btmxkZOSNGzeK
i4up8Oeff+bhpi8U9RGBstDQUO6iTZs2ebotf1ERERETJ050x019mP92uWT+
Gz4DY3UiFRQUnD17dsKECbwpOjragy0EAAAAALcqeQbm0UcfLa3GgsOcyMD0
7t2bhrVHjx5y4b59+xCBavvHP/7BXZSamurptoCLYf7b5ZL5b/gMjMZEunnz
5n333Uebvv76a4+0DQAAAABKgd3Y/MKFC+esGTduHF9J7tq1q7QaCw5zIgMT
GBhIw/riiy/KhZs2bdKOQLt16yZKkpOT4+LiKKDQPtDt27ep2rFjx+yuP0kV
EhMTjxw5kpeXp+cUcnJyDh06RE114cqWV65cofDw119/5ZuC1EQE+ssvvzi6
8zt37tDZpaSk2Nq5XDMhISE2NtZu9zLqigMHDtAPrHa1rKysGItr167Z3Wd6
ejoFkvqf9HHhfMjNzY2Pj6eBsHtGrvogw/x33/w/ffo0tZYGiL6Ojo7WzsC4
dpJQR/ESuBoP/ugfJrFPjZ84jYlEeB3jkJAQPQcCAAAAgHuRcyvx0nV4xYoV
6Vpx7NixbmgUuIwTGZgOHTrQyI4ePZq/XblyZaNGjapWrcqBA31R3YKqcQWO
QJ966imK4t944w1/f3+u6ePj8+677xYUFKgPQfMnKCioXLlyXLNChQqDBw++
evWquubZs2f79u1LFbjmfffd165du6ioKEW1iIgIahLfjrV8+fLKlStz/fbt
21N5rVq1bty4od55165daWtgYKBGb1C8GRoaWrduXXHTF/XApEmT6GRFHWpP
48aNxVtgRBdpvEaqTZs2VGHVqlVJSUlPP/30/fffz5+tVq3auHHj7ty5o6hP
h5s5c2br1q3FCsnUvdSHly5dUvdDkyZN6OutW7d27ty5bNmyXL9+/fpWF/lM
SEjo0qWLODvabXXJsGHD5K5YsmRJnTp1ROV69er9+9//VuzwiSeeoA+uWbPG
tfOB4vRnnnnGJGnVqtW//vUv9aH79+/v6Ac1YP67Y/6TwsLCv//9735+fqK7
aB6uW7eOv1VnYFw1SdiGDRuaNm3K95yQKlWqvPzyy9evX3f0iPp/4uxOJELN
oE0LFy7U6DcAAAAAuKc5l4GhmJEuFOmyPDs72w2NApdxIgNDYSwN7ltvvcXf
zp4922RNs2bNuAJHoBRuNGzYUF3tk08+Uex/27ZtIgyhaKVMmTL8NU2n8+fP
yzUpuuGQRG3BggVyza+//poKKVbauHGjiKoIhXj8xVdffaVoBoVXvGnq1Km2
uuLWrVt9+vSx2gA6699//52rib9rK2hEoNxpFLiJ+E5GobH82T179th6GJA6
jRqp6AcSHBws9wOjGFlxi8uhQ4c4YKTK1Jj/+q//UnyEwn+umZ+f379/f1Eu
cgJk+vTp6lMbOnQo7VDdYOfmAzVbTgJw+pfJI6t+IEjnBzVg/lttQAnnP/3H
0a1bN6ufYooMjAsnSUFBwbBhw6wetGnTpo4Ok/6fOLsTyXw3A/Ppp5/a6jcA
AAAAuNc5kYHZunUrXzpu2bLFPY0Cl3EiA9O6dWsa3IkTJ/K3FKnt3bv3tdde
40FfsmTJXgtxFz1HoKxfv34Ujp0+fTokJIRD+2rVqsmPY1y9evXBBx+kcvp3
/fr1FKNRlEfxUfny5amQjiJqUnz3wAMPmCzJAQokz5w5c/HiRarJt4tQYWRk
pKgs4iBfX98KFSpQCPPTTz/R/KRAjxpA5R07dlSc5qJFi/gjSUlJtrpi8uTJ
IkqiU87Kyjpy5EhQUBAXtm/fnh9euHz5stxFX3zxBX0bExOj0clyp7355puH
Dh2is6PwuWbNmly4cuVKUTkjI4NCOYrOpk2bdvDgwZycnOTkZBHALl26VN0P
hHpv7ty5CQkJcXFxfF8T+eyzz0TlwsLC+vXrmyw3AOzbt48Lly9fzjUpME9N
TU1PT+fy6dOnc/mQIUP4CQsaZb55hgY6LS3N6qm5aj5Qs3mH77//PjWpuLj4
xIkTgwYNorman5+vOLScgdH5QQ2Y/+6Y/x9++CFXrlOnDvUY7SE+Pn7cuHEi
iSFnYFw7SahzuJqfn98333xD/UxDPHv27HLlytHOHR0m/T9xdicS4YNOmTJF
o+sAAAAA4J7mRAamR48eJstLM+2uWQEe50QGhm+3mD9/vlwoFnmwtQ6GyfIH
d3lKjBgxgsuPHz8uCseMGWOyPHGgCND4D8RlypShMJNLXn75ZRGqKM6Iy9u2
bSsKRRxEEdzWrVvl+mLBIoqL5fJOnTpRYcuWLW31Q0pKCj/yExAQID/EUVBQ
wIsVEzkKdmgdDO40io63bdsml1PMyEFoo0aN5M6Mioq6cuWKXPP69et8I0rP
nj3V/UA/nvKCqNQk3u3gwYPlYymCRDZgwAAqpLhVlFDXcewpbolhFOBzluDt
t99WnJpr58PQoUNNlns8FIurKJ7xUWdgdH7QLsx/UV7y+U8V+NavmjVr/vbb
b/KmtWvX8k7kDIwLJwkdmn9qHnzwQcVSLfLPl/5hcugnzqw5kUiLFi1o0/PP
P2+13wAAAADAABzNwCQlJfEF5D//+U+3NQpcxtEMjHgXiRxbmXVEoJ07d1aU
r1mzhj+yY8cOLqH4lBeLoOBUUZnCH668d+9e+raoqIgfIqhfv756Acy+ffty
5Z9++olLRBw0fPhwReXExETeNG3aNFGYkZHB8RGdl62umDdvHn9Qvh2FxcbG
8iZ5yREnMjBWX6Dz1FNP8X4Ua7yo0cdNllyNKBH9wN0oq1evnsly34K6smJu
8IlQ9C16fv78+VajePPdAF8efXfMh0mTJvG3GzZs0OgQda/q/KBdmP+yEs7/
hQsXck31gifqdyG5dpKIQyse45LpP6LZwZ84s70MzKuvvkqb/P39eV1iAAAA
ADAeRzMwb7/9tsnyiH1mZqbbGgUuoz8Dk5OTs337do4aatWqpVgM1m4Eqk4m
UODJHxGLtaalpXHJrFmzzqjwH9x5xQb6lmtOmDBB3VQR24aFhXGJiIP27Nmj
rs8r2zRo0EDcohAaGsr1z549a6tDRo4cyXXkRUcF7qiAgAB1F5UwAyPWizhy
5IhiU0FBweHDhyl4HDx4cPPmzfk5lypVqogKoh9+/PFHxWcpEjRZVp4RJVSH
K3///fdyzQ8++IAKa9SoIUr4fgwqUY8aP05Su3Ztu6dWkvlAZy0WOKU9b968
2erLa9SH1vlBuzD/FUoy/0ePHs01MzIyFJvUGRjXTpJXXnmFK2i8yUv/Ec0O
/sSZ7WVgoqOjOTP2zDPPUFc4N1cBAAAAwJs5lIGhC3iKwkyWZTbd2ShwGf0Z
mGXLlnFo8NBDD6ljfyciUAoGFRHotm3bTPbwH+UjIyP5W3mRE/mkeOvMmTO5
RCMOMksRKwU1XMJP0qkXx5C1bduW6lSvXt3qVl6GhSK+wsJCRReVMANDwR3v
Z+PGjaIwLy9v/vz5YpUYWaVKlUQ1jX7gp07kePDmzZscTnbv3l0UZmZm0gSg
wqCgIFHYrl077VErV66c3VMryXwg33//vXz6dBSaG4rnTaweWs8H7cL8VyjJ
/KfjmiyLOas3qTMwrp0kPJOrVaum0TyHjujQT5zZXgaGLF68WLzvTKzCBAAA
AACG4VAGJjk5ma8M8brMe4UTGZiuXbuKt5wILolAIyIiuKRx48YDbOB1UURN
xSIY7ODBg7xVZwRKIRivRzpmzBizZZlNfrMJnbJGh7Rq1cpkWV3T6tZevXqZ
/vyojqsyMOJBiV27dnFJdnZ2y5YtudDf3z84OHjnzp0XL17kV7o4nYEh1IFc
v2/fvtTz33333aOPPmqyrIAhonXRFcTWqL300kt2T60k84HRONJ84LsvWPv2
7eU3CNs6tN0P2oX5r1CS+c+r1FauXFm9SZ2Bce0k4ZPy8/PTaJ5DR3R5BiYq
KorXVjIhAwMAAABgRA5lYFasWMFXhnJ0Bt5MfwYmNTV1/PjxvAAChZOKZZZd
EoHGxcVxyaJFi7QbI2p++OGH6q0i6hF3iWhHoOSdd97hcPLOnTthYWEmy3Ka
6kSTrF+/frxPq2sy8Fm3aNFClLgqAyOWThVPiPDqECbLG2/lVUFKnoGhUxOv
3BUoNFa8vJi7gmrqWXzbHfNBVlhYuHnz5oCAAP7sG2+8YffQdj9oF+a/1bN2
bv4/++yzXDMvL0+xSZ2Bce0kESdl9dEqJ47o2gxMcnIyv+uqadOmc+fOlV80
DwAAAADG4FAGhpeD8PHxwTqB9wpHV+JdtWoVBwjR0dFyOYUDXC4W/xT0R6A3
btzgP7736NFDuxmiZrNmzdSLIXDmgZw8eZJL7EagYj3SyMhI/njv3r212zBx
4kRF+wWKnni5BvmtJS7JwBQUFNStW5c2USAm0h0PP/wwlVBAp6hc8gwMr/XR
vXv3Tz/9lM5lzJgx//znPxWvpzFLa5zqSb26Yz6o0a8gf39/k2WtWruHtvtB
uzD/ZSWc/+JV1Fu2bFFsUmdgXDtJ3n//fd7/6tWrbX3KoSM6+hOnMZHI+PHj
TZYUqMb6PAAAAABwT3MoA9OmTRuT5bWb7mwRuJKjGZj8/HxezXLOnDlyubj9
6YsvvlB8RH8EapaCR3VYp8DvliVr166Vy+Pj4318fEyWPxOLNSjsRqAkMDDQ
ZFnCiO/60AjBGIWZvM/mzZvLS0kUFxcPGTKEN61bt06UO5GBadmyJXW4XL50
6VLeiXiuhwJw/rM4/fTJNc+fP089UJIMzK1bt/iFO+JlPbaIN6BRgxVLNNs6
NdfOh9TU1OTkZEVh165dTZY7czQOreeDVGHevHkpKSkaDcD8F+Uln/9bt27l
mjQn5Xu66OuxY8cqMjBml04S6j3eVb169eRXbJstD2eJF1LrHyZHMzAaE4l0
6dKFNvXr10/7oAAAAABw73IoA1O7dm26PqQreXe2CFzJ0QwMady4sUn1jMbe
vXs5cOjQocOxY8coDBfBjkMRKEVA5cqVM1nW8Jw1axavz0B7o/336tVr/fr1
oubRo0dFzZCQkGvXruXl5W3cuJFXtFCEPHoiULEeqcmycqyel3mJxyUef/xx
ajkFvBRdiuhMXsDW7FQGxmR5l/TmzZtzcnIuXrw4Z84cvrWgQoUK586dE5U5
iiTh4eHUVxQ50rlUr16dC53OwNBB+W/9AwcOPHv2LMW/xRZWGywSAq1atTp8
+DDH/hkZGTNmzKChF6kAsxvmA7WT5qSvr++0adMuXLhgtqz18c033/DeqJqt
Q+v5INWpUqWKyfJUzoEDB2yNF+a/C+c/zTFO5pOnn346KSnp9u3bBw8eDAoK
Ei2UMzCunSR0RC5s2LBhVFRUfn7+1atXw8LCatWq1bNnT57/+ofJ0QyMxkQi
DRo0oE0ff/yx3aEBAAAAgHuU/ti8qKiI47VnnnnGzY0Cl3EiA9O6dWsa5ZEj
R8qFFHyJRRU4MClfvjzfv+FQBEo2bNjAf8RnNWvWFO+QVUQr69at44wEE5+i
wilTpsg19USgYj1SMmjQID1dkZubK0JFDtLF19QbikjTuQyMGh1FDj/JkiVL
xNYKFSpwP9C/nCsryVNI/fv3VzeADkHB6YABAygOFTUp/OeXGos6Yr1QxRC7
fD7ExsbKx6IKdHT+miLuuLg4W4fW80GqIypMnjzZ1nhh/ptcOv/37dtXuXJl
kwqnIEx/zsDo6TT9k+T69etiZWnFSVWtWlU0XucwOfoTpzGRCL+GbPbs2XY7
EAAAAADuUfpj80uXLvFF4+jRo93cKHAZJzIw/KYS+e02jOJxER+ZLDF4QkKC
+e49M/LLi5lY0kF9Jz8FRBSxypEXRUnDhw9PSkpS1Dx06FD79u3lmnQ4im0V
1b799lveSvU1Tu2tt97iat99953O3qC4laJdXqBYnPjYsWNzcnIUNUUEev78
ebu75bC9Z8+eCxculNfCbdiwIQWn6vqLFy8W8SDFjIGBgXSm4eHhpj9nYDT6
gV9ArIgHxU0CVtER5T/337p169NPPxVRPKNwkoJl+dEkd8yHixcvjhs37sEH
H5TrtG7dWtFX6kPb/WBBQUGfPn24fMiQIVaG6i7Mf3HiJZ//5OTJk5zsZRUr
Vnz11VezsrJ4HaQ1a9Yo6rtqkpgtSZiPPvpITgGVK1du2LBhGRkZDh3R7PhP
nNn2RCKcRFqwYIGeDgQAAACAe5H+2PyXX37hK0bcI30PcSID07FjR5O1DIzZ
slADRR8RERHHjx+XF3BwTnZ2dkxMzJYtW5KTkykQ1qiZmZlJ7d+1a9fly5dL
csRRo0aZLCkLeV0LPYqKilJSUqipLjlx890MDD/HUVhYSCFYZGSkeglcGQWn
FEvu3r2b+q3kDTBbXmrs4+Nz3333rVq1iobg8OHDNBxUSMHviBEj+IddvSQF
dcWZM2e2bdtGjbl69apLWsLszoc7d+5QR23duvWHH35IT0/X82ImnR987bXX
9Pxmw/x31fwXrl27RlM6OjpauwcEF06SvLw8qkmjefToUY3VjfQPk362JhJn
ukJCQlxyFAAAAADwQg7F5nDPcSID07t3b4oCBg8e7M52ecDp06d5bYcxY8Z4
ui263trjbjzQQ4cOVW8qLCxs2LAhba1du3bpN6yUZWZm+vn5mSzvCfJ0W9zI
q+Y/qOXn53Pa0+4iyQAAAABw70IGxticyMDw60hq1KjBC1oaQ3Fx8cCBAznA
SUxM9HRzvCIDw69SGjVqlHqTeI2vzgVD7l1Hjx7ldTm6devm6ba4kbfNf1AL
CwvjAYqKivJ0WwAAAADAXZCBMTYnMjCbN28Wix488sgjqamp7myg2y1evHje
vHliPYexY8d6ukX/yxsyMM8//zy1oXz58t988438MqPjx4/zIqI+Pj7btm3z
YAtLAZ9pUFDQxYsXPd0Wt/DO+Q+yzz//XKwMU6NGjVu3bnm6RQAAAADgLsjA
GJsTGZiioiLx6mESGxvrzga6V2ZmpvxCky5duuTl5Xm6Uf/LGzIwcXFxYlnd
2rVr9+zZs2/fvs2aNeMS6rfly5d7sHmlY8OGDUuWLNG/pMy9xWvnP8iCg4N5
gMqUKfNX+KEDAAAA+CtDBsbYnMjAsP379y9btmzBggUlXPzTs9LS0gYMGNCi
RYtBgwbR6ch3enjWiBEjevbsOX36dM8248SJEy+88EL58uXlF75UrVp1zJgx
p06d8mzboOS8dv6DLDo6euHChStWrMAPHQAAAIDhIQNjbE5nYOCv49atW7/8
8sv+/ftjY2Nd+3ojAAAAAAAAEBCbGxsyMAAAAAAAAADeALG5sSEDAwAAAAAA
AOANEJsbGzIwAAAAAAAAAN4AsbmxIQMDAAAAAAAA4A0QmxsbMjAAAAAAAAAA
3gCxubEhAwMAAAAAAADgDRCbGxsyMAAAAAAAAADeALG5sSEDAwAAAAAAAOAN
EJsbGzIwAAAAAAAAAN4Asbmx/Q8AAAAAAAAAAAAAAAAAAAAAgIF4+n4cAAAA
AAAAgL8uxObGhgwMAAAAAAAAgDdAbG5syMAAAAAAAAAAeAPE5saGDAwAAAAA
AACAN0BsbmzIwAAAAAAAAAB4A8TmxoYMDAAAAAAAAIA3QGxubMjAAAAAAAAA
AHgDxObGhgwMAAAAAAAAgDdAbG5syMAAAAAAAAAAeAPE5saGDAwAAAAAAACA
N0BsbmzIwAAAAAAAAAB4A8TmxoYMDAAAAAAAAIA3QGxubMjAAAAAAAAAAHgD
xObGhgwMAAAAAAAAgDdAbG5syMAAAAAAAAAAeAPE5sZWChmYmJiYqKio+Ph4
N+3/3pKWlhYaGvree+9NnTo1PDy8sLCwdI57b43CvdVad/PUnPlrwtyT6Zx7
92inJSQkULMP/j/2zju+iqL7/xepCgLSBPmKIEWkSBMMTWpEEAQUHgH1EQQE
eXwUEZUiVZT+BCEggigISpMWUGnxRwkIgYAgMUE6AaKEEiASWri/87rnxTzz
7O7dO7u35vJ5/5FX7uzs7pkzZ2fPObs7s3VrsAUBAAAAAPgvyMCEN7YzMOnp
6fHx8eR4X7t2zbzmo48+6nA4nn76aftShgvLli3Lnz+/4w758uXLzMwMzKmz
Vy9kL2n9ShBtJohQ4N+vX79evXodP348wKeG7QnUbS+bKq1Zs2Yk9oMPPigX
zpkzp3PnzrNmzfLhiVJSUuhemZiYePPmTR8eFgAAAABhCTIw4Y29DMzgwYNz
587NbvnOnTvNK2dT59znZGRklChRgpVWoUKF+vXrv/jiiwE7e/bqhewlrf8I
rs0EkS5dunCru3btGuBTw/YYS7aXTZWmz8AkJSWJjNPBgwd9daJBgwbxMStV
quTxjgkAAACAuxxLsfn169fj4+Ojo6M//fTTDRs2XLp0yZ+iAR9gIwOzbt06
hwT1OBWmpaU1d3H06FFN/WzqnPucNWvWsMa6d++elZUV4LOHYC/AZjwSXJsJ
IhTsc8PfffddfxwftucRS7aXTZWmz8Ds37+fW503b96//vpLlJsYjApDhw4V
d8zy5cvfVdcyAAAAAKyiHpvHxsYWK1ZMjs1z5co1bty427dv+1lGYB8bGZg+
ffpw58bExFy4cIH797fffuNOp3809bOpc+5zoqOjWUXLli0L/NlDsBdgMx4J
rs0EkdTU1BEjRkycOJFGGH8cH7bnEUu2l02VZvgV0ooVK959913NDdHEYFS4
cePGsWPH+vfvzweJi4vzRmwAAAAAhDeKsTl5azlz5mTvokiRIpUqVcqRIwf/
/Pjjj/0vJrCJjQxMy5YtqVvJd5ULN23ahIjGnE8//ZRVlJycHPizh2AvwGY8
ElybCWNgex6xZHvZVGmGGRhDTAxGnb///pv9om+++cb2QQAAAAAQ9qjE5keP
Hs2VKxf5FYULF163bh0XpqamRkZGVqlSxU8PMYFPsJGBiYiIcOjmZ1i2bJl5
RNOkSRNRkpiYGB8fT+6o+YmuXbtG1fbu3etx9kKqsG/fvh07dmRkZKg04fLl
y9u2bSNRfTgv4tmzZzdv3kzXgruXvkRE88cff/jqpDJ0xVGY4G7mUt+GSOpd
YwJsxn824/HIGg4ePEj109LS5MKsrKxDhw79/PPPBw4cUPluwtwC9Sj2qSHU
rsOHD2/ZsuXixYs2doft+db2bCstJSWFbEb+3scEQyt1WtE8KTwuLo6smlvN
TxNUMjAmBmMJntk4KirKm4MAAAAAILxRic179+5NTkXOnDnJq5TLyWkn19GP
wgGvsZGBqVevHnV3jx49+OesWbMqVKhQsGBBdlDpnwdcUDWuwM75M888k56e
/sYbb5QqVYpr3nPPPW+99daNGzf0p6C4IDIyMk+ePFwzX758HTp00DvexLFj
x1q3bk0VuGaOHDnq1KkTGxurqbZixQoS6fHHH6f/p0+fXqBAAa5ft25dKi9R
ooRhnrBx48a0NSIiwkQb5MlHR0c//PDDjjuQBgYMGECNFXVInooVK4pVRYSK
DJeR6tq1K4tkeO2wwPXr1xclFJI8//zzJUuWFAJQhTlz5mh2NMzAjBw5kiXR
6JY6hcv1s3Cod40JsBnf2oylIzNPPfUUHW3u3Llnzpxp2LAhV6ZG8VY6y5gx
Y+6//35xnPvuu+8Bid27d4tDKVogn/Grr75S6VNWPqFfKZii9W7dugnjoe6r
XLky1TdRiwxszx+2Z1VpJMaUKVNKly4txChTpsx3332nqWZupU4rmifnhDQj
3tQtXLjwJ5988txzzzl0GRg+KW3inyYGs3//fv7/o48+0p9xzZo1vHXlypWi
kK+piRMnutMkAAAAAIDH2DwlJYX9n06dOgVKKOAzbGRgyEGl7u7bty//HD16
tMMICou4AjvnjzzySPny5fXVPvzwQ83xV69eLdzdXLlyCZ+ZooYTJ07INSlO
kYNEmQkTJsg1v/nmGyokQ126dKn4Po4gz5n/mTlzpkYM8u1509ChQ92p4urV
q61atTIUgFr9559/cjXx/FSDYUQzdepU3rpgwQLNpgMHDvCmYcOGcUnbtm0N
j0xMmzZN3tcwA/POO+9wZc0zaIqYuJyCKblcvWvMgc0YCmDbZiwdWdYwGRIn
VBmOOik65siUKFSoUPXq1fPmzas54I4dO/g4Vi2QbhOVKlXSV9b0KSuf+Pnn
n+XyDRs2aGYbEyxcuNCdZmRge4YCeGl7lpSWmZkpDMzhSpuI/4cPH64/rKGV
WtI82ca9995r2CiHLgOjGSpNDCYrK6ts2bL0/0MPPaR/Sey1116jTXReOZfO
BjBmzBh3mgQAAAAA8Bibf/nll+yQbNmyJVBCAZ9hIwNTs2ZNh7RGCXn+FBa9
/vrrbAZTpkzZ4EK8rc0OLdOmTRty7w8dOhQVFcVfrlGIJ7+pnpaWVqRIEYdr
NiFym8nnp6iBwg2OAeksoibFC4ULF3a4niNTYHL48OEzZ85QTfa0qTAmJkZU
FgFd7ty5yeEnB3jXrl0rV668dOkSCUDl8lslzKRJk3iXAwcOuFPF4MGDhTdO
TU5PT6fINDIykgvr1q3Lbvlff/0lq2jGjBn0c/v27YbHPHv2LGumffv2mk0j
RozgIyQlJXEJ9QL9bNy48aJFi44cOXLhwoXZs2dzRrRUqVJyxOR9Bka9azwC
m/GtzVg6sl7DERERa9eupQF8z549TmlI79KlC+v55MmTtWrVopKiRYv++uuv
ycnJFETzcaxaoGKfGmZgzp8/L9ZH7tq1K3UH9UVsbGydOnVoUBIimQPb84ft
WVLa8OHDuWbHjh35mzWq3KhRI4crkUJWZHhYjZWqaz41NVUkvvr27bt///7T
p08vWbKkXLlyXGiegTE3GOoaLhffXzP8GqFD92SKZR4yZIiJMgEAAABwl+Mx
Nn/zzTfZA2EH+ObNm+QrJiQk+PCLdeA/bGRg2LEcP368XCgmDXA3r4LD9QBX
nnPg5Zdf5nKK6URhz549Ha531zUOPz+IzJkzJ4UtXPLqq68Kl1jTIi6vXbu2
KBQRDUU6q1atkuv369ePN1EUIJc3aNCACqtXr+5OD0lJSRQfUR3y5OWPAsj3
5ukFCDmqUp9XgR8QUyih+RCpSpUqmnZRDPXTTz9pdn///ff5RHJS1PsMjHrX
KAKbEeXe24zVIwsNN2zYUJO7eOGFFxyuwPbKlSuicPfu3Vxf/qTCad0CFfvU
MAPDHU0MGDBAPh3da6zOBgPbE+Xe257TitJIbE6StG7dWj7CpUuXOENFHoX+
sHorVdd8jx49+CCavEdGRka1atUcnjIwGm1oDIbOwlkmaqlcvn79eq6vWUmq
atWqVPiPf/xDr0MAAAAAAMZjbM7RYokSJdLS0l566SXxVnChQoX69u179erV
QEkK7GA1A7N582a9r+5UiGjIhdaUf/XVV7zLDz/8wCXkuvPkAxpv1ul6M4Qr
b9iwwemaYui+++5zuN571+f6yLfnyrt27eISEdF06dJFU3nfvn28SXzaQ5w+
fZpf/qd2uVPFuHHjeMdZs2ZpNu3cuZM3iRfmnVYimoULF3JN+UMk8QnS5MmT
zXenoFW/u5cZGPWuUQc2I+OlzVg9MmuYAtjExERNff2sqk6XnjlwHjVqlLkk
TlMLVOlTp1EGhgTg6VDoXqM4ga0JsD0ZL23PaUVp48eP5xJNBsl5J7kkH8Sd
laprXjYb/bTAhmshWcrAEB07dnS4JkqSE+Z9+vRxuCaN0Xy6xZ8mlSpVSk5v
AgAAAADIeIzN+eVhcj/EO73Fixd33CEiIkJlEQ0QLNQzMORerlmzpkyZMuzN
Xr9+Xd7qMaLRr8JDPjnvIiZgPHLkCJdQlHdYBz/A5QkQ6CfX7N+/v15U4fbP
mzePS0REs379en19ntmmbNmy4ultdHQ01z927Jg7hbzyyitcRz/NKcGKootC
ryKPEQ1FCvzavPwhEn+CRMEIRVv6Xc6cObN48eK33nqL4hdxAcq5Gi8zMOpd
ow5sRoM3NmP1yKzhBg0a6CuT2mlTtWrV5EK6/DnGnzp1qqEA9izQadSnTqMM
jJjnRH5HwjawPQ3e2J7TitL4XaCiRYvqNTZw4EDaVLJkSc1h9VaqrvkTJ05w
zd69e+vF9kkG5qeffuJNX3/9NZeQz0PHpJLXXntNUzkuLo6vo3bt2m3evBne
EQAAAAD0eIzNeVYQ5oMPPjh16pTTNT0v+zayVwlCEPUMjJghlnxLMQ+nwEZE
I97TFs756tWrHZ7gh7wxMTH887PPPjNsFG8dOXIkl7ib2JMRERC5xFzC1quf
bEGmdu3aDteyL4ZbmzRp4nBNa3Dr1i2NilQiGn5UKn+IxJ8gNW/eXFNz586d
bdq0MdSVvOKGlxkY9a5RBzajwRubsXpkk9XJhwwZwieVxwQhybZt2zT1vbFA
p1GfOo2ULzraJyv5wvY0eDleqSutTp065hrLkyePx8Oqa37dunX8c9y4cXqx
fZKBEfPx0tG4RLwpqpkchpk8eTLniAjylNxoFAAAAAB3Lx5j82eeeYZ9iUmT
JsnlaWlp/Bz/2Wef9a+IwAtsZGAaN26sWVfF6aOIZsWKFVxSsWLFtm4g31uu
qZlUgdm6dStvVYxo/v77b57fsmfPnk6X6fKyGu4e9zM1atRwuFY1NdzaokUL
h2siTfHRgaWIZsOGDVyZv+NITEzkn19++aVcTcRi99xzT6tWrejn3r179+zZ
w4U+zMCod406sBkN3tiM1SObZGBSU1N5aemCBQtGRUWRzt977z0yMCqJjIyU
Z/lwem2BTuUMjOi+6Ohoc1WoANvT4OV4pa40FoNwp7Fu3bp5PKy65n/88Ueu
qfFPGJ9kYJx35uPNkSMHr8HE42rx4sVFOksmNjaWZ7xxIAMDAAAAACM8xuYU
o5EjUaZMGf2m559/nn0kfwkHvEY9A5OcnPz222/z1/fknWoCMZ9ENPHx8Sbe
soyoOXDgQP1WEb8sXbpUU2IY0RD/+te/ODy5fv36vHnzHK65HPWJJhnx3N/w
i35uddWqVUWJpYgmKyvroYceosovvPCC846HnzdvXvkLAjoOTwJJV588T4JI
16hnYDRfNukzMOpdow5sxrDV9mzG6pFNMjDEqFGjHDoaN26cmpoqV/PeAp3K
GRjRfYYf8lgFtmfYatvjlbrSWIyCBQtq7iCWDquu+f3795to3lcZGDEfL68q
zl9kUx/pa9KlwatfPfbYY2PHjsVEeQAAAADQ4zE2Z88kR44cer+OF3AsVKiQ
H+UD3mF1Jt7Zs2ezIxoXFyeXkzPJ5WIySYG6c37hwgV+mCte53aHqFm5cmX9
p/SdO3fmI//+++9c4jGiEfNbxsTE8O4tW7Y0l4HX4dVEjgx56fyxv7zmhaWI
hnjvvfeocv78+TMzM+vWreu4k40RzJo1iw+omSxCPf4dNmwY15SXd3G6Frjh
cpGBUe8adWAzMl7ajNUjm2RgSAN58uShiHLcuHG9e/fu1KnToEGDNCvyMN5b
oFM5A3P+/HluBR3nxo0b5trwCGxPxvvxSl1pAwYM4BLxCZWNw6prntwSPl2t
WrX0W9UzMCYGw/B8vLVr1xbGr7lFMm+//TZtKlCggMmMPQAAAAC4y/EYm5Nn
zv7GkiVLNJv4xeYnn3zSj/IB77CagcnMzOSHfR9//LFc/sUXX7AZzJgxQ7OL
pchLBCP6MEEDBYZcc+7cuXJ5QkICfzHx2GOPiZfAPUY0REREBFWgw/J6XnPm
zDEXgMIWPmaVKlXkVTZu377N3jgxf/58UW41A7N3716u//nnn3N89P3338sV
RFCwZs0auVysNuIx/p05cybXnDZtmii8fPkyT6/t+N/VqNW7xumKwSl+T0pK
MqkDmxHl3tuM1SObZGBGjhxJm+rWrWt+RqcvLNCpnIFx3nmp0mG0HJjIXThh
e27w63ilrjSxplv16tU107mrH9ZpRfNiqroff/xRLt+9e3exYsUcahkYE4Nh
1q5dyxV4mewyZcoYvuTDQ2ubNm3MZQYAAADA3YzH2JycxooVKzpcz5jkr57F
kgSvv/6636UEdrGagSG4u+XY3CnNW1KvXr29e/eSay2+SrAU0VA8kidPHodr
TshRo0adP3+eCulodPwWLVosXLhQ1CT/WdSMioo6d+5cRkbG0qVLeYYETfCi
EtGIGS0crtkgL1686FEVL7zwAtd/8sknSXKyf4pWRGjQtGlTubLVDAxRrVo1
h+vjI4frXbLMzEx5a2xsLB+QNHP8+HFy+EnzHTp0EK2Q41+eALN8+fLyI3ix
Cm3JkiXpaGlpad9//z2/b8PIvazeNZcvX+Y5oHLmzLllyxZ3rYPN+NZmLB3Z
JLb94IMPWEVr1qy5dOnSbReGZ7Rkgd5nYLZv387JCodr1vcTJ05QG/fs2fPS
Sy/lyJGDRzDYngn+sz1LShPJqBo1avzyyy/sNpw+fXrEiBF0BNmLMLFSdc2v
XLmST3fffffNmzePFHXq1Kno6GheH9yhloExMRhGzMcr7NNQUVzH3VYAAAAA
AKdCBoaYM2cOex3t2rU7e/as07VyaK1atdgNJg85EIICW9jIwPAjxVdeeUUu
JLdZLEfOXnHevHk5Y2DJOScWL14s4iyHaz5DfuuGqFSpklxz/vz5/HIII/ai
wiFDhsg1VSIaMb+l43+XgTbhypUrbOcMvxjPkDY0kYuNDMy4cePEAXv06KHZ
eu3aNV7zVMQX/E+FChVYEjn+Fd8gFC5cWI5x6tev79BBkRqvnKLJsyl2jUjs
EIMHD3bXOtiMb23G0pFNYtvt27cL7cmQVun4n3zyCRke17Rkgd5nYJyuryDl
7pPb2LdvXydszxT/2Z4lpWVkZPCC2ky+fPnEzLSamuazFalrnjwThxG8BrdK
BsbEYAR0aYgKe/fuNZSZr5fRo0e7VSUAAAAA7npUYvMbN268/PLLwveQvSkT
HxiEAjYyMPXq1aOelVesYBISEuSHgORXc/KN35mJjIzU1BdLdupfI4+PjycH
WHaVc+fO3aVLlwMHDmhqbtu2TX5nw+Ga+VkzKwXx7bff8lb9WroyFMRxtUWL
Filqg+Igip54gmLR8F69eolVpAUiouH1MlQ4efKkCNk2btyor3D8+HGxtgjH
IO+///7Vq1d56Wo5/o2LiyPBuFpycrIoT0lJ4c8ZmJIlS9I1m5WVxY/LNRkY
p1rX0IDQqlUr3tqxY0eTBsJmfGsz6kd2p2GnK05/4oknHO6pWrWqeCtG3QIt
9amJ8teuXSvH7w5XHC0+n4HtmeMn27OqNLKQMWPGiAwSU65cuc8//1z+NMnE
ShlFzdOANmLECJEhdLi++Vq9ejU/PNKsI+DupO4MRpCamsrDdeXKld0JzN4R
T9gLAAAAAGCIemw+bty4IkWKCP/kgQcemDdvnp+lA95iIwPDb03oMzDEzZs3
yfVdsWLFr7/+KlY1tc2lS5e2b9++cuXKxMRE87k3L168SPJTaKZZVdkq3bt3
d7gmv5XnSVCBPPykpCQS1ScNt3rq5ORkOrU8FYYhKSkpq1atiouLE+8wMBRN
Hz16NCYmZt++fSoLlDjVuoYn4vb4vj1sxuc24+WROYNRp04dsqtdu3Ztd/HD
Dz+MHTv24Ycf5uGdIl/5dIoW6EOOHz++ceNGkkqzjBcD2zMniOOVRozDhw+v
Xr1606ZNaWlpto+jqPlbt27t37+fxsBTp07ZO5G5wZBN8tUxatQod0fg3FdU
VJQ9AQAAAABwN2ApNqfw7eDBg+wI6Vd8ACGIjQxMy5YtyYfs0KGDP+UKAocO
HeKJBXr27BlsWbI9FGPyLJcxMTHBlsWPhJ/NxMXFcRSpmeaCmTt3Lm+dOXNm
4GVTBLYHgkKPHj0crm+73K1zlJmZyZePx2mTAQAAAHA3Yyk2B9kOGxmYXr16
kQ9ZtGjRkydP+lO0gHL79m2x0sq+ffuCLU72Zvfu3TxnQpMmTYItix8JS5tZ
uHAht+jPP//Ub500aRJvdTfNRdCB7YGgsGvXLp6UxuTbt3nz5nGXxcbGBlI2
AAAAAGQvkIEJb2xkYJYvXy6+uH/00UflSUWyI5MnTx43bpyYTKBXr17Blijb
06BBA55I4cyZM8GWxS+Esc38/vvv3KiWLVvKH2tcvXo1KiqKZzp96qmnFL9W
CzywPRBI9u3bN3r06IEDBxYoUIC/CDt48KC+2rRp08QcMkWLFqWrKfCiAgAA
ACC7gAxMeGMjA5OVlSWWEyV27tzpTwH9y8WLF+XVNBo1apSRkRFsobI9ixcv
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
hgQ3A3Pjxo1jx47179+fZYiLiwuADCDs8Rib09WaJ08etrpChQo1bty4dOnS
/LNAgQLbtm0LlKTADjYyMC1btqTObdasmVy4adMm3NfM+fTTT1lFycnJwZYl
O+EuQmnatGl4ZGBw7Xgk7K8dExsIzFlgaUzgLc37DExgjCfA54KtesSSrQZS
aaHcQbArj2TTu21wMzDM33//nSNHDiqnUT0AMoCwx2NsPnfuXLK3//u//1u/
fj2/eXXr1q1hw4bxtdC9e/cACQpsYSMDExER4dB9G75s2TLz+1qTJk1ESWJi
Ynx8PA1W5ie6du0aVdu7d6/Hua2owr59+3bs2JGRkaHShMuXL2/bto1E9eGs
WWfPnqVbwNGjR919fyfua3/88YfiMa9cuZKQkECHNZ8L0VLzSbzDhw9v2bLl
4sWLimIE/kQy7iKU6tWr+yMDY2Ibqamp5L+56wvbkRSunbvh2jHvERMb8CGw
NH9YmuDgwYN08LS0NE25uYo8jhvXr1/fs2fPzp073fVFYIwnwOeCrfrWVm0r
TU96evp2F+fOnfPtuVJSUugOq/jpk7vLzRzYlZ/GQI9WocFd93kc7mQOHTpE
+qF7Pf0fFxfnwwyMRzHc5et4BuOoqCjvZQBAJTb/9ttvNRcdXdqVKlUiOyxd
urQfhQNeYyMDU69ePerZHj168M9Zs2ZVqFChYMGCPPrRPw+4oGpcgUeqZ555
hoboN954o1SpUlzznnvueeutt27cuKE/Bd0dIiMjxbtV+fLl69Chg+Gt9tix
Y61bt6YKXDNHjhx16tSJjY3VVFuxYgWJ9Pjjj9P/06dPL1CgANevW7culZco
UcLwJe3GjRvT1oiICBNtkKlHR0c//PDDjjuQBgYMGECNFXVInooVK4q55YWK
TJaRojtLu3btHBI1atT4+uuv7TWfIcemW7duoqeocuXKlUkzGi0RW7du9euJ
Ro4cySfS9CkZA5fLMw/oI5QnnniCBhayHyrMnTv3A3dYvny50xV6Fy9enH6+
9957GsE+/vhjrvnnn39qWq23jRkzZnAF8hOef/75kiVLir6g+nPmzNEc3EYG
BtfO3XDtmPeIiQ3s37+f///oo4/0Iq1Zs4a3rly50kTJHs/CFWBpNiztqaee
ogpz5849c+ZMw4YNeUeS05KK3I0bJBuNkzVr1hST3lNf0NFSU1NFHY/dqjHL
rl27siYpstM3h/Vcv359w30DY6gqjYKt2rBVS0pjw37uuec0B6GYtFGjRkIw
2vcBic6dO9s4Fzd5ypQp4uV5okyZMt99952mmsfLzRzYlT/syqlsFebdpzLc
CW7dukVDTbFixURNEmD+/Pn8U87AWHI1LYnhLgNz//33U/nEiRNNNAaAIrbX
QuJvVWhoCv115O9mbGRgaCClnu3bty//HD16tMMIilC4Ao9UjzzySPny5fXV
PvzwQ83xV69eLe6SuXLlypkzJ/9P944TJ07INeluxcOdngkTJsg12csla1y6
dCm/JcjQMM7/zJw5UyMG3Vt509ChQ92p4urVq61atTIUgFotwnzx2EWDu/va
uXPn5BvlfffdJ/6X5VRvPrFhwwZxw9KwcOFCWUsOXSzg8xO98847XKJ52kW3
RS4n/0fTd7JUnHvRs2jRItp68eJF/vnmm29qZBsyZAhvIh9Ac3y9bezatYu2
tm3b1vBcxLRp0+SD28jA4NoxFCCcrh2PPWJiA1lZWWXLlqX/H3roIf3Mfq+9
9hptuvfeew2jaQ2wNEMBvLE0obRhw4bxUwlGxK2KKjK0nPXr11N0YCgP7U4t
UuxWzcGnTp3KPxcsWKBpy4EDB3gTNcdw38AYqkqjYKu2bVVRaYbR5bZt20h7
Dlf2oFKlSv/3f/+nOUjr1q1tnCszM5MuGbFV5CiI4cOH66Vyd7l5BHZlKICX
dmXVKgy7T3G4Yy5dutSkSRPDyoycgbHkaloSwzwDM2bMGHcaA0AdexmY9PR0
dlnr1KnjB6GAz7CRgalZs6ZDWh+Bxn+KUF5//XUeqaZMmbLBhXjJk0cqpk2b
NjTIHzp0KCoqisftQoUKya/5paWlFSlShMrpL0U3NPLTuEc3nbx581IhnUXU
pLtG4cKFeeSn29Phw4cprKaa5OlxYUxMjKgsnMncuXPTLZ6GR4qvV65cSYM5
CUDl4sGfYNKkSbwLuabuVDF48GCuQzdxajKZ/Y4dOyIjI7mwbt267I7S4C+r
aMaMGfRz+/bt7g77ySefcE26faSkpNy+fXv//v3t27cnzZO7YqP558+fF8sL
du3aldpODY+NjaXLUz6mYSzgjxN5mYHZuHEjKZDtp0aNGhvuwIZkLwOjtw1+
75fsnDY1btx40aJFR44cuXDhwuzZs/mZV6lSpWTPxEYGBtdOeF87Kj1ibgOk
bS5ft26d3Ex+hEflnTp1cqcKGViazy1No7SIiIi1a9du2bKFFyBQV5Gh5Zw+
fTp//vzkzFPAsnXr1suXLycmJoq447PPPlPsVs3Bz549yx1KV4SmLSNGjOCa
SUlJhvsGxlBVGgVb9dJWPSpNH13eunXrkUceoUKyyU2bNnHh9OnT+YAU+ycn
J9N4a+Ncw4cP55odO3bkL0apMr9TQfXpnmvYBM3lpgLsyud2ZdsqNN2nONwx
AwcO5PLSpUtTH5HMCQkJ/fr1Ewkr2xkYS2K4y8CwVZCr6U5pAKhjIwNz7Ngx
cWlTtOIfuYBvsJGBYYdq/PjxcqH4dNTd17UOVxpf/vL05Zdf5vJff/1VFPbs
2dPhevFPM+zz84ucOXOK2PnVV18Vd1JNi7i8du3aolDc12iUXvX/27v74Cjq
+4HjJ62VUUofrBX7YEvRSkXrQ7XtoFRUHB9KrTqtOq2ditjRaTtOx2pr25Fe
AkQgCVBQKE8KAkLAhocACY8NGkIgPEceNAQCypOQhEiahHDH/b5zn2F/697d
3u7t3t2yeb/+YMju3u1nd7/78Pnc7ncXLdJPrw7dMkqdbfXD+/btqwZef/31
idaDulKVOxV79uypvzVUHdvlBjBFf261/nStulgNRH8HMTyCqr8P1tbiy1pV
nn/+ef3EZ86c0fdoETcXSMeMHFZghJRBYvuBSbkCE9s2ItFicmlpqWHgiy++
KB9RlxBJ40yKfUcb7rN9x/oWSdQG1ARy/a+2uH74ihUrZHpbr6ugpWnDnbe0
iG6l3XbbbVotzu4qSnTcWL169ccff6wf0tDQIHcI3HXXXfrhJps19svlfgOV
JxruSLn22msTbQ59YJlpqOYLRVs1rCJbbdXKSovNLrVXVA8fPlz/tXKP6I03
3pjavNQqkpKFdqeEaG5ulqqF/iRusrtZR7vShjtvV6m1iribz+LhToUkF36X
XXbZRx99pJ9euiQNOKjAWA8jkrgC06dPHzX80UcfjQCOWc/NVfsfNGjQnXfe
KTfjqX9feOGFNEcHp+xWYLT+xvVH7IiF85o66hqGv/766/KRpUuXyhB11pNH
UA1XcZHoj3cy8cqVK9Wf4XBYni/41re+FdtHmTqby8TyIElEd157/PHHDRNv
375dRml3X0eixXCpqKvlSrQqRowYIR+cPHmyYdSGDRtklP4WWevnNZXryZRF
RUVxJ7C1+GqtytPEX/3qV837f4u95E7TjLxZgYltG4moSOQj+pv501eBYd85
H/cd61skYtoGHn744UD0cSp9yvzMM88Eos/pmz+hb0BL03PY0iLnVprKwnbu
3KkfbmvT2zpuqAt+NeVVV12lH2irAjNnzhwZoj92aY8gFRYWmnzWfF4uNlTz
GdFWDavIelu1stIi8bJLbXkNF4oSg0rw9SvN+rxGjhwpQwxVhci5goP+SxLt
brbQrvQctqsUWoWtzRd7uMvPz5c5xna0EvddSHYrMBbDiCSuwMhDl1dccYX0
Dww4YT03f+CBBwI6Ktk5ffp0mqODU9YrMOqyasmSJVdeeWUgmo8YNm7S81rs
kUqdzuQjWpdrdXV1MiQnJ2dvDCnjy2Ow6k+Z8k9/+lNsqNoZc8aMGTJEO1Os
WLEidnrp2ebb3/629sPHq6++KtPv378/0Qp54oknZBp9V2YaWVE9e/aMXUVJ
z2vr16+X3xNlvRUXFxserre1+NpjwrEVCYPYS+40zcibFZi4bUOjPqKS+j/+
8Y/qCu2yyy6TjyRNWKxg3zHwx75jfYtETNtAaWmpjNI6E1ZLdPnll6sh6mLP
PCoDWpqBk5YWObfS+vbtaxhua9ObHzfUIVE16VGjRj300EPXXnuttO3Pf/7z
+mlsVWD+97//SU8F+geR5BEklRyphM7ks+bzcrGhms+ItmpYRdbbqpWVFndi
7UeHt99+W//xP//5z2rgpZdemtq85P4Q9fHYrSMPm/To0cPwtbG7my20KwMn
7SqFVmG++ZIe7gYNGiRz1B+phIsVGCtH3UStpaKiQmpiP/vZz1RIsf1iAdZZ
r8BMnjz5vvvu03cifd1111l8rxyyxXoFRuvET11TVVVVGcamcF7T7k/Wzmsl
JSWBZKTUv3jxYvnT8GymtlAyNhgMyhDzq1ztPKgOmDLkzjvvDMR75Fbv5ptv
DkRfixN3rDw9qg7dWk/Utq6X1BlNS/MD0d7S1JJqD1bYWnxtrSZ9QV7sWkrT
jLxZgUlUOdmwYYOhvKzR/xCTyQoM+44Jj+w71rdIxLQNaN2cqhUrQ7RLTUOf
G0nR0gwctrREK83Wpk+01C0tLSNHjtS3ZM0ll1yin9JWBSZy7lda/YNI8giS
4TZ7uxUYFxuq+Yxoq4ZV5KStxq60uBOr46dc2Pfv318bqE61UmG75557UpvX
D37wA/Oto87ySb/WFtqVgZN25UqrEBYPd2pJA9HummO/wZUKjPWjrsniFBYW
almw1g0OkIIU+oE5evTokCFDpAz4ve99z9CDNDwlhQpMv3799C/zFa6c1xYs
WCBDrr766oEJqHOffkrDo7Xi3XfftXVeU+cR6eVs8ODBkWgfa/IknVpkkxVy
ww03qGm++MUvxh179913Bz59H6at6yWJSi2d/EIhbr311oaGBruLr0386quv
ms8xdi2laUbnUQVGu+bp0qXLvffeq/7cunXrli1bZKB3KjDsO4aovLPvJN0i
EdM2EDnXzak6pcorNmT3UVeJdt8zSEszcNjSEq00W5s+7lI3Nzdff/31MvyK
K6546aWXSktL1VHrl7/8ZcBxBWblypUyUB5E2rlzp/w5derUpJ/NTEM1nxFt
1bCKMlCBiURf7CtT3n///WqlzZ07V13eB6JnRq0gYHdesshKoq3zq1/9KunX
2kK7MnDYrpy3ioidw528R6lbt26xX+K8AmPrqGuyOKtXr5ZejAJUYOBMChUY
oe2YZWVlbgcF11ivwOzZs+e5556Tp1/VYUffU1nEpfPaxo0bZUhBQYF5MNqU
cfsa0s5i8+fPNwxJlB3/4Q9/kJPU6dOnZ8yYEYh2ZBRbaNLT7ouI+7ynLHWf
Pn20IXazSKGuXYuLi3v27Kk/X9hafG3iuPfBxv2gtpbSNCPttGi4ldTdCszv
fvc7wyi7FRi1peQGVJXL6x9e1nIW71Rg2HdieWTfSbpFIskSW62bU3l1qSyR
Wu1Jv9b6XGhpwpWs1tamN7lNRVFZgL4vBVcqMOFw+Gtf+5oa+Mgjj0TOlU0u
uugiw0MKKVRg3Gqo5jOirYoMV2BUVNrLlzUqF459P7L1eckiq681XE/aWgRb
aFdxlzrlduW8VUTsHO7UIUumjO2WzbwCY+VS09ZRN9HiqItDecvVNddc88or
r3AHApxIuQKjPSn54osvuh0UXGO3J94pU6bIZq2oqNAPV4caGa51Kaaxfl5r
bGyUkr52G3Mi2pS9e/eOfdBSDpjKrl27ZEjS85rWy9nixYvl4wMGDDCPQd5T
HPj0pYtQJ3e5B0zfI3pqWaRQp7krrrgiEO3PLWJz8RsaGiQYtSH0b4SJFbuW
0jSjl19+WT6of7lAJPriodjTYqJtJ+9Q0PcgJ9Ssu3TpokY99NBDhlEqj5av
sliBmTx5sowyPJTtbgWGfUfPf/tO0i0SMW0DQro5vfnmm7W2ZzgCW0FL03Pe
0hKtNFubPu5SS4Ukts+EuLmAyWZNtEqlowb1PW1tbbfeemvgXDUm6Wcz01DN
Z0RbFRmuwEh3Iv379x82bJgKY/DgwaNHjza8j8buvLSO0w33S9haBFtoV3rO
25XzVhGxc7jTXkW9cOFCw8RxKzC2LjVtHXUTLc5zzz0XiNagTHrmASxKmpsn
ql1rPVAl7cMQWWS3AqMu2ORHrqFDh+qHT5o0STb3hAkTDB+xderXTkmxJwsD
ee2sMn36dP3wzZs3SwJ+zTXXaDc/W8mOf/zjH6sJ1NdKSX/atGnmAaiTl3zn
tddeq3/1rdoj5CpUmTlzpjbc+nltz549sd3F9+vXLxD9tSiFxX/wwQdlYn3P
sUI79UcSrKV0zOjf//63TDZ+/Hht4CeffHL77bfHnhYTbTtJqy+//PJIjB49
egSinfjpf8iYN2+e1kerxQqMdrW2ZMkS/XDtDQ5JKzBqO44YMWL37t2xQWrY
d7ThPtt3rG8RkzYgysrKZAJ5C+qVV15pOPPS0uJKX0uLmOYU1ldR3DfQya+o
N910k37KAwcOqNUViMkFTDZrolW6detWGa6yFUnBDH1pJvqs84Yaoa0mkJW2
arEC09raKu/00b8yyfm8tJdwXX/99Unf3JG0AkO7iit97cqVVmHrcLdo0SKJ
rW/fvvqrO/X/p59+WjumacOtX2raPeomWhz55gceeCDpCgGSSpqbP/roo488
8oj+/YPiH//4h7Tw119/PY3xwRm7FRjl6quvDsR0YKU9Wv7DH/5QXd2pk6mW
B9k6r6mzkjxdopLlnJwc6bpBfZv6/rvvvnvOnDnalJs2bdKmHDNmzIkTJ1pa
WubPny/PyRpOYVbOa1qPH4Fo/29NTU1JV4V2S+Qtt9yiIlenUXXO0k7N+t7J
IpbPa2pXUmv4wgsvfPnllw8ePBiJPvw7a9Ys+axaCSksfmVlpZzrlb/85S/q
nKJC3bJly2OPPaYuv7VNH3ctpWNG2jsQe/TosXr16uPHj6vrf/kp1nBajOh6
vdPeFyBuu+02GS79rKp1pb5HRmkveXzmmWeOHDmyY8eOIUOGyE9RwmIFRsWm
rfb6+np1xaLa9kMPPaR9j74CExun2pTy2hE163feeSfRFmff8eu+Y32LmLQB
oXVzqkViWHBaWiLpaGnCJCW0voriHt+kZqjMmzdPfaqxsVEt+Je+9CUZaMgF
TDarySq97rrrAtGHj9S/anO0tbUZJjDvQya1hhqhrZrKfFu1WIFRW01OoA8+
+OD+/ftVwns2yvm8tALFDTfcsH79eqlFHDp06J///Kf6Bn0PQuYVGNqViTS1
K1daRcTO4U59+U033STD77vvvvfee6+9vf3dd9+95557tHWir8DYutS0ddSV
TqR79epluLVJjn6xxz0gBea5eXFxsTTOa665RjV7dShTO8ixY8f+9re/yVVr
9+7d6YnIy1KowNx4441qyz7xxBP6geqQrvW3IOcadWknF3W2zmtKUVGRlvIE
ov34abcufPe739VPOXPmTPn9TmifUgP//ve/66e0cl7TejkLfPpNnSZOnTql
nQ4C0VO/9n+1NgznL4vnNXXK0HrxksXv2rWr/F+llhs3bkxh8SPRx8f0E+tD
ffbZZ83Xkuszipzr095AXSdIv/3606I6D8oc1b8jR47Uhk+bNk37oLQQdc0m
o5YvXx775epY9Ne//lX+b7ECo07u0qu/kJ97lKuuukqWS1+BiY1TO/sr6pCY
aIuz7wT8u+9Y3CImbUAzfPhwbQKVOxgWXBtFSzNIR0sT5imhxVUU9/g2duxY
7YOqDWsTyM8fhlzAZLOarNIRI0ZoHxk0aFBs/HE/67ChRmirpjLfVq0/hfTT
n/40EEM1TpWEDhw4UOX1qc2rpaVFXrKsfaH+GJ40Kg3tykT62pXzVhGxebgr
Ly/v1q1b7Ey1wq++AhOxc6lpKwzt2S7VXPV1QrlizM3NTbrqgKTMc3PV8NQB
RH9skWKvdnhZsGBBBoOFbSlUYKQ3cn0f9UIdbPU/fqkj2JYtWyLn7pkxvJku
ontsM/Y2TpUrqQO1/oCpEqjHH3/8vffeM0y5bt06fUE7EO2d3tBrhzJ79mwZ
q6Y3WTSVT8lkc+fOtbg21NlQ7QLSQbG24E8//XTsXWHaeU3eE2Hi8OHDv//9
77/85S/rl+vGG29Upx7DlBYXX5SVlekvdQLRW8T1d5+arCV3Z6R8+OGHcjOt
6NGjh7pqCofD8mON4Q4rdSqXyVQb0AaeOXNGOwmKxx57TBv72muvaccidb1x
2223bdu2bceOHTJEX4Exbxv19fXa+xoC0ausF198sbW1Vd7fqq/AxMbZ0dFx
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
AAA6i/8DvAztCw==
    "], {{0, 400.}, {747., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{747., 400.},
  PlotRange->{{0, 747.}, {0, 400.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251319498002*^9},
 CellLabel->"Out[12]=",
 CellID->106721366,ExpressionUUID->"6fd3aa25-ab33-44b3-9480-613c1bdf8c83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "b2044f82-02de-4c91-8cfb-b5dd1daf1c03"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"1c81b595-092d-4458-a940-5041f0e3e297"],

Cell["Search over index objects:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251366246792*^9, 3.86725137353743*^9}},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"92e58c81-ecaf-459c-b393-7f40fd651a5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleDataIndex", " ", "=", " ", 
  RowBox[{
  "CreateSearchIndex", "[", "\"\<ExampleData/Text\>\"", "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251470251603*^9, 3.867251482656488*^9}},
 CellLabel->"In[14]:=",
 CellID->1994573855,ExpressionUUID->"b468a72e-89fc-4d6c-ad10-4068f59feb79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SearchIndexObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.007142857142857143], {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{138.766,
                 61.273}, {79.874, 61.273}, {79.874, 73.503}, {138.766, 
                73.503}}}]}, {
               FaceForm[{
                 RGBColor[0.7, 0.7, 0.7], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                124.836}, {140.00099999999998`, 124.836}, {
                140.00099999999998`, 137.066}, {0.706, 137.066}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                20.453}, {140.00099999999998`, 20.453}, {140.00099999999998`, 
                32.683}, {0.706, 32.683}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                81.81400000000001}, {80.757, 81.81400000000001}, {80.757, 
                94.04400000000001}, {0.706, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                59.949999999999996`, 0.}, {140.001, 0.}, {140.001, 
                12.229999999999999`}, {59.949999999999996`, 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {53.249, 0.}, {53.249, 12.229999999999999`}, {0., 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                108.96700000000001`, 81.81400000000001}, {87.45600000000002, 
                81.81400000000001}, {87.45600000000002, 94.04400000000001}, {
                108.96700000000001`, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{118.489,
                 81.81400000000001}, {140.001, 81.81400000000001}, {140.001, 
                94.04400000000001}, {118.489, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                106.49900000000001`, 42.31699999999999}, {140.001, 
                42.31699999999999}, {140.001, 54.54699999999999}, {
                106.49900000000001`, 54.54699999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                61.36}, {43.376000000000005`, 61.36}, {43.376000000000005`, 
                73.59}, {0.706, 73.59}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{74.408, 
                61.36}, {52.897, 61.36}, {52.897, 73.59}, {74.408, 73.59}}}], 
               
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                102.973}, {51.13400000000001, 102.973}, {51.13400000000001, 
                115.203}, {0.706, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                57.12800000000001, 102.973}, {140., 102.973}, {140., 
                115.203}, {57.12800000000001, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                42.31699999999999}, {99.094, 42.31699999999999}, {99.094, 
                54.54699999999999}, {0.706, 54.54699999999999}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {30., 28.}, 
             PlotRange -> {{0., 140.}, {0., 137.066}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"d7993f0c\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 19 Jul 2022 15:31:23\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Index size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5", "\" \"", "\"documents\"", "\" \"", "\"(\"", 
                    "\"466.1 kB\"", "\")\""}, "RowDefault"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.007142857142857143], {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{138.766,
                 61.273}, {79.874, 61.273}, {79.874, 73.503}, {138.766, 
                73.503}}}]}, {
               FaceForm[{
                 RGBColor[0.7, 0.7, 0.7], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                124.836}, {140.00099999999998`, 124.836}, {
                140.00099999999998`, 137.066}, {0.706, 137.066}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                20.453}, {140.00099999999998`, 20.453}, {140.00099999999998`, 
                32.683}, {0.706, 32.683}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                81.81400000000001}, {80.757, 81.81400000000001}, {80.757, 
                94.04400000000001}, {0.706, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                59.949999999999996`, 0.}, {140.001, 0.}, {140.001, 
                12.229999999999999`}, {59.949999999999996`, 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {53.249, 0.}, {53.249, 12.229999999999999`}, {0., 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                108.96700000000001`, 81.81400000000001}, {87.45600000000002, 
                81.81400000000001}, {87.45600000000002, 94.04400000000001}, {
                108.96700000000001`, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{118.489,
                 81.81400000000001}, {140.001, 81.81400000000001}, {140.001, 
                94.04400000000001}, {118.489, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                106.49900000000001`, 42.31699999999999}, {140.001, 
                42.31699999999999}, {140.001, 54.54699999999999}, {
                106.49900000000001`, 54.54699999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                61.36}, {43.376000000000005`, 61.36}, {43.376000000000005`, 
                73.59}, {0.706, 73.59}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{74.408, 
                61.36}, {52.897, 61.36}, {52.897, 73.59}, {74.408, 73.59}}}], 
               
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                102.973}, {51.13400000000001, 102.973}, {51.13400000000001, 
                115.203}, {0.706, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                57.12800000000001, 102.973}, {140., 102.973}, {140., 
                115.203}, {57.12800000000001, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                42.31699999999999}, {99.094, 42.31699999999999}, {99.094, 
                54.54699999999999}, {0.706, 54.54699999999999}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {30., 28.}, 
             PlotRange -> {{0., 140.}, {0., 137.066}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"d7993f0c\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 19 Jul 2022 15:31:23\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Index size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5", "\" \"", "\"documents\"", "\" \"", "\"(\"", 
                    "\"466.1 kB\"", "\")\""}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"d7993f0c-55e1-4ba4-8541-48b4fafd4ffa\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/faizonzaman/Library/Mathematica/SearchIndices/\
d7993f0c-55e1-4ba4-8541-48b4fafd4ffa\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Indexed paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   GridBox[{{
                    "\"/Applications/Mathematica.app/Contents/SystemFiles/\
Components/TextSearch/ExampleData/Text\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 1, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SearchIndexObject[
   File["/Users/faizonzaman/Library/Mathematica/SearchIndices/d7993f0c-55e1-\
4ba4-8541-48b4fafd4ffa"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251483594005*^9},
 CellLabel->"Out[14]=",
 CellID->336208119,ExpressionUUID->"cc91b0db-8cef-4112-b8de-374d11c50909"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LexicalCases", "[", 
   RowBox[{
    RowBox[{"exampleDataIndex", "->", "All"}], ",", " ", 
    RowBox[{
     RowBox[{"WordToken", "[", "1", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}]}]}], "]"}], "[", 
  "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.867251499863676*^9},
 CellLabel->"In[15]:=",
 CellID->620380776,ExpressionUUID->"c767e429-374b-472e-a2ce-8fe8d1884118"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
s3CShwwZcvLkSQQDUOb/83/+D5VbztcJ3EvZ0syvxOIApSWWynb79m2MVuJc
ifeSfH196RzKlE0szCa3xL8QGdp0+fJlMedvMo8R4m8ETriCafYrGxxe+pA9
X758Yu26cFHEA9JCb29v8RIW5E7lCWQUUO+HIlGypFixYlA5YUnLLAXSF52+
+OILWbU7duywrBBOJVaeZ0fZFFyaEC/7WwV3CsbcLFsnIAVvvPGG2Fd6j1So
UIHuEceOWvoOgiW4MRXe59WystFystq1ayubkbJhAJUWIlSTKhKUAWY3b96k
z2rJlA2BsZguIN577z2xFeKGfelBDIGhGUMSoiwyEM+bMJrI+ta8eXOThbKl
mV+1+/LLL8VoLtxg4cKFIkXFJcY49corr0htcDb27t2r5uwxyqj3Q7B58+Z3
3nlHes8WL168U6dOsbGxMkv4AC1iFCD2ls33ChYsWEBhHgkCxsEjR44gjLG8
x+k7hK1bt5bVIPJlmbIpuzSxZ88eFIoOEMhNxo4dC/+UWtpqXYCwENJNrwUR
GIg/+ugjpB7ZOWqhbEFBQfRdJgI3+4ABA5TfMdSysmWT1NRU9HDjxo1qVlqm
mafOkG9u377d6ppzBFq//fbbhg0bkHQoz4/Z1UPcGrhrIFa2Rh+0hXZxFCEh
IfT2qFOaZhzwQ9x0CMuRssniEEuuXr0K3YAvKa/xTjMHPAcOHNi6dauaL/PY
i7JLCxuoMQ4K3fjL2vNN9Yg7Dkql/CkklUctlI1GcxwFImQEk2puQB0rG8Mo
wH6ofbLzTVdWNsaYsB9qH1Y2hrEX9kPtw8rGMPbCfqh9WNkYxl7YD7XPzp07
W7Ro0bJlS8tn0FnCysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPK
xhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZD
fZNTysYwDONqWNkYhtEfL1/ZHNiRYZwI+6G+YWVjjAn7ob5hZWOMCfuhvmFl
Y4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuh
vmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOM
CfuhvmFlkxIVFRUeHn7y5Mmc7gjjcrTsh0z2cQtlS01NjY6OhuxkZGQ40KJ6
fH19TSZTixYtnFhnUlISeh4XF/fkyRMnVstkE1Y2faN9ZZs8ebKnp6fJzPHj
xx1oUT2uULZJkyZR56tVq+bq/jPqUemHmZmZCOMXLVr01VdfrVy58sSJE7Ys
09LS9u/fP3fu3MDAQAzEjx8/Vq75+vXrO3bsmD59+o8//nju3Llnz57ZewiM
AhpXNriKSQIcBoW3b99uYyYhIcGBDijgCmWbOnWq6H/lypVxpzixcsZh1Pgh
/A2XzPRP4B5XrlyRWe7bt+/VV1+VmpUtW9bWDZKent6vXz9ZtXXr1r148aJT
Do15rnllGzZsGC56njx5QkJCUlJSaFz7/fffyRnwhwMdUMAVyoaxOzExccyY
MdTnyMhIJ1bOOEyWfrhhwwYvLy+6aqVKlWrYsGGhQoXoZ5UqVe7evSssEdTl
ypUL5Xnz5oXz1K9fHx6Ln/nz59+7d6+sWtw49erVo3py5879+uuvFy1alH4W
K1YMgZ8rDtaAaFzZ2rVrhyveunVraeGhQ4fcSNmIBw8ekPOvWbPG6ZUzDqDs
h3fu3ClSpAiJGAYjGlIxtnbp0oV8z9/fnywzMjKqVq2KkpIlS4o74vjx4z4+
PrT706dPpTUPGjSIavjggw9IHhHGr1u3rmDBgsuWLXPRwRoQjStbo0aN4AN9
+vSRFm7btk2Nst26dSsiIgIZq/oZDFK2li1b0k847dGjR+Pj47OsAZbIXGJi
YhQeE8B1UfnChQtVdoZxKVn6YVRUFHTs9u3b0sK///6bFK958+ZUAt0jb/zh
hx+kljt27KDy9evXi8LLly/TpHGvXr1kTpWamprNI2KkaFzZGjRoADcYOHAg
/VyxYgUGQXItgD9eMQMzsQsc5vvvvy9XrpyYwYDZuHHj1HgOKRsCxXPnzr3z
zjsiGUG+MHLkSKtzwlDO9u3bIw0hS+zi5+cnux2IwoULwyAgIEDlsTMuxeFn
o61ataJpNPoJQaNLn5ycLDWDHyLTRDnsReGIESNclG4wMjSubA0bNoQbDB8+
nH7OnDnTZA24EBmkp6d37NjRqg1U68aNG8rNkbKRQFnWgGFatuxk9+7dQmbz
5Mnj4eFBf0NXLSeZSdlmz56t8tgZl+KwstEsWc2aNenn5MmT8TNXrlyWgf3Q
oUOlGgjwN0ratGnjaK8ZtWhc2erWrQtPGDt2LP1EgHTgwAExU7Fo0aIDZsQI
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
9ujRQ0y0uuP/aideCfTw8FiyZElOd4f5f7Cy6RuNKxsRERERGBjo7+9/8+ZN
B1rMWSIjIwMCApYvX37+/Pmc7gvz/8PKpm/cQtkYxumwH+obVjbGmLAf6htW
NsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf
6htWNsaYsB/qG1Y2xpiwH+qbnFI2hmEYV8PKxjCM/uBslDEa7If6hpWNMSbs
h/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWN
MSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6
hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6xi2ULTU1NTo6OioqKiMjAz9XrlzZ
s2fPFStWONA6YW8NSUlJaD0uLu7JkycON8poClY2faN9ZZs8ebKnp6fJzPHj
x8+dO2d6wfnz5x3ogAM1TJo0ieyrVauGPjjQKKM1VPphZmZmeHj4okWLvvrq
KwyIJ06csGX56NGjo0ePLly4MCAgADWnpaUp1/z06dPTp0/HxsY+e/bM3s4z
WaJxZdu/f79JAiK3M2fO0N/58uW7efOmsJw/f36bNm2mT5+eZZ22alBg6tSp
og+VK1eGt6vsP6NZ1Pgh/A2X2/RPWrRoceXKFanZ48eP4SFwJ6lZ7ty5R40a
BfmyrDY+Ph5SKWo+dOiQE4+LITSubMOGDcOlz5MnT0hISEpKCo1uO3bsGDt2
rKyS999/H5b4V021VmtQAK6bmJg4ZswYcsXIyEiVOzKaJUs/3LBhg5eXF13x
UqVKNWzYsFChQvSzSpUqd+/eJTPcCG+99RaV58qVq2bNmg0aNBBZRvfu3WXV
jhw5UiaViAlddIxGRuPK1q5dO1z61q1bZ2nZqlUr9crmGA8ePIDropU1a9a4
rhXm5aDsh3fu3ClSpAiJGAYyGlIxtnbp0oXkyN/fnyyRddauXRslw4cPv337
NhWeP3++YsWKZHn58mVpzZ999lkxMwUKFGBlcx0aV7ZGjRrh0vfp0ydLS/Ku
bCobHBh+SCfk4cOHlgYFCxZEKwsXLsxOK4wWyNIPo6KioGNCrIi///6bFK95
8+aiEMnpzp07ZbuvX7+ehMvWg6q1a9eysrkOjSsbAntc+oEDB0oLkRe88sor
nTt3pp9vvPHGa6+9ljt3blgiC3jlBdu3b7dVrayG52ZNW7JkScmSJUWOgNTj
o48+SkpKku5YuHBhbAoICFDZf0azOPxslLKDsmXLKpsh0iNHmjlzplUDVjaX
onFlgwRRnC8t9PX1pYlc+kmaZsmmTZtsVSurAcybN0/smD9/fso6wauvvip9
dEXKNnv2bPXHy2gTh5WtXr168IGaNWsqm33zzTfkQrt377ZqwMrmUjSubHXr
1sWlHzt2rLRQpku//vrrgQMH8uTJg8I6deoceMGDBw9sVSur4cmTJ1AzlCD2
Q234mZqaiiSiRIkSGzdulO5YvHhxmE2ZMkX98TLaxDFlg2PQSDpo0CBbNk+f
PoVq0UOEatWq3b9/36oZK5tL0biyIWfEpUdAJS20jLhA3rx51c+zyWo4e/Ys
+djUqVOlZo8fP5btiJEaZr169VLZf0azOKZsAQEB5CqrV6+Wbbp27drnn38O
D6xQoQLZVK1a9cyZM7aqYmVzKVpWtoiICLr0ISEh0nKnK9t///tfDw8PlDRq
1AiDssKOAwYMgFmZMmXu3bunpiFGszigbAkJCfRA8/XXX7d8GyU6Olo6GQIn
iYuLU6iNlc2laFPZ0tLSQkNDy5cvj+vu4+Pz6NEj6VanKxsQT/MRJU6YMOHq
1atWd4yMjKQpuK5du0J4ecmu+2KvsuFa0xokEBYWZmlw69YtBPPNmjV79dVX
yQyuEhQUZKtCVjaXok1lCwwMpIteqlSpY8eOyba6QtkQg0GsxICbJ0+e3r17
Wz3ABQsWiHWYsienjBthr7KNHj2aLnr//v2VLZ89e7Z//36aIgarVq2yasbK
5lI0rmzNmze/ceOGbKsrlI04efJkjx49KDMF+OPHH3+U2cAPixUrxsrm7til
bN999x1d8fr161td6GgJ/LZ06dI0xWHVgJXNpWhT2eLj4zFE0rJY6I/slWHX
KRtx5cqVESNGUNaJf69fvy42xcXF0VPU6tWrz507Nz09XU1zjAZRr2xbtmyh
56FQqmvXrqlvAtEdjY/iVSwprGwuRZvKRgQHB9Oll72naVWX6H1k6eJbBZSV
jZg/fz61Lg3bKCUpVKhQYmKimoYYzaLSD3ft2kWTD0WKFEFIb9XG1sc6+vXr
Ry5k9cMLrGwuRcvKhrCfVqnNmjVLWm5Vl8qUKUPzcmpqtqwhJCRE9rQL/kaO
h0xEFDZr1gwlnTp1UtMKo2XU+GFoaCjlAl5eXhEREVZtIHeI5WApK09OTi5R
ogT2LV++vNUdWdlcipaVDVStWhWXfujQodJCq8rWtGlT8pPFixc/ePDg6tWr
sjf+FGpYtmwZftatWxc+RrMo586da9u2LVX422+/iR3pNecJEyao7D+jWbL0
w7CwMPFhoq+++urAgQM7d+7cIeHgwYPPzS/30azFp59+unfvXiSejx8/hiPR
i8xg3Lhxos7r168fecGXX35JBnPmzKGSs2fPuvqojYPGlY0eMCGqlxZaVbaV
K1dKn2zi36+//tpWtbIa+vbtK/ZF6kHhHyH7Cg1iQpPtNwEZN0LZDzMyMsQn
jGwBTYPl6dOnq1WrJgpz585N7kc0bNhQumZJTHFYpVChQi/hwA2CxpWN3oiH
8kgLKZBr3769tBC55NixY6V+8sEHH9iq1rKGTZs2NWnSRLo7xmvEZrIVufRU
VHzBhnFflP0wPT1dvDtsi7fffpuM09LSRo4cSe/LCIoUKTJ79mzZK34LFy5U
qLBgwYIuPWRDoXFla9y4saWyKYAMFInAvn37bt265UDfrl27hr4h0YiNjbX6
2il/xUg32LueLUsQmyF+Q0IaGhp6/vx5/i8zchaNKxut+vbz83OgIafz8OFD
GluR+eZ0X5js4nRlYzSFxpVtyJAhUBJvb29brzu9TFavXk3Kxg+zdAArm77R
uLJt376dxMTT09PX1zc+Pt6BFrNPUFCQ+PgzZJYX6OoAVjZ9o3Fly8zM7NGj
h5hizan/EU/8r3weHh5LlizJkT4wzoWVTd9oXNmIiIiIwMBAf39/lf+JntOJ
jIwMCAhYvny5Y//DKaNBWNn0jVsoG8M4HfZDfcPKxhgT9kN9w8rGGBP2Q33D
ysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2
Q33DysYYE/ZDfZNTysYwDONqWNkYhtEfnI0yRoP9UN+wsjHGhP1Q37CyMcaE
/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q37Cy
McaE/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q
37CyMcaE/VDf6FvZoqKiwsPDT548+XKaY9wIVjZ94xbKlpqaGh0dDZnKyMiw
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
LRmn4CxlE68VIEKTbfL396dNtOzn1KlTb7zxBv61rIGmbd966y27D4OxgZaV
DVStWhVXHNIhLXSFsoWHh1NJ27ZtL1++jJpjYmL8/PxML7BUtp9//pk2UfAG
bZQZnDx5kjZBn2fMmIEw77n5OdqBAwfQysaNG6XGFStWhOWECRPUnRgmu6jx
w2PHjh15wWuvvWYyf2lKlNy9e/e5+YLSaymIt9etWyd8cuvWrTS9ULZsWVrm
XaNGDZP59bpp06ZFRERg4EYN//nPf8TkquVySsZhNK5stNqnX79+0kJXKBt8
r1SpUkLHaAkHqFKlCiWVlsqGXYRPYsy1+vr85s2b6RsRRMmSJcV6zmrVqkkt
qXXktmpOC5N91PghTZ/aQsygIgwrWrQoFZYuXbpJkyb07AB4enoePXqUzA4d
OgSVE7vDryhUI7744guXHq/R0Liy0Rvxffv2lRZ+9NFHKpWNQr727dvLysUa
YGmeCGmqU6eOVIXGjx+fnp5OQ63Vd9WHDBlCxtK3nmVER0dDWqV3BLy9d+/e
Z8+elZqRSCJ/UT4ixlmo8UOhV1aRukRsbGy3bt2kSgU6d+78xx9/SCtE3A6f
Ea8SExh/ZWvRmeyjcWVr3LixpbK5jszMzPj4+J07d8ocMvsg74iKikLNcXFx
VmeJ+StGLxl759nUcPv2bURo27dvP3HihOXXdAXIQ2NiYkJDQ/ft23ft2jXn
9oEhNK5s9OVJPz8/BxpyI8SnVqVfTGJciiuUjdEOGlc2Sve8vb0tFwvpCfEZ
nPDw8Jzui1FgZdM3Glc2BPZibsrX1xepogMtapmgoCB6KkoCzgt0XxqsbPpG
48qWmZlJ39Ag9Pf/1on/lc/Dw2PJkiU53R0DwcqmbzSubERERERgYKC/v//N
mzcdaFHLREZGBgQELF++/Pz58zndF2PByqZv3ELZGMbpsB/qG1Y2xpiwH+ob
VjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiw
H+obVjbGmLAf6htWNsaYsB/qm5xSNoZhGFfDysYwjP7gbJQxGuyH+oaVjTEm
7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaV
jTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH
+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
9pKZmRkfH79z584//vgjO/VYgtQjKioKNcfFxVn9UocCSBKRGoeEhFy7ds1Z
DeFI//zzz927dx86dCjLD4+ogb9ipB6MIIjfkJCGhoaeP39ex/+FhFugcWWj
L0/6+fk50BCTTR4+fEhxhfSLT7rB6crGaAqNKxslht7e3levXnWgLSY7rF69
mpQtPDw8p/vifFjZ9I3GlW379u1icsnX1xdJpQMtMvYSFBQkPnaNYUWXc0Gs
bPpG48qWmZkpljSYXvyvfIyrEf8rn4eHx5IlS3K6Oy6BlU3faFzZiIiIiMDA
QH9/f/Wf92eyQ2RkZEBAwPLly8+fP5/TfXEVrGz6xi2UjWGcDvuhvmFlY4wJ
+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFl
Y4wJ+6G+YWVjjAn7ob5hZWOMCfuhvskpZWMYhnE1rGwMw+gPzkYZo8F+qG9Y
2Rhjwn6ob4SyOYbDLTr7OBjGPtgP9Y1QNgf2ZWVj3Bf2Q33DysYYE/ZDfcPK
xhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZD
fcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8omJSoqKjw8/OTJ
kzndEcblaNkPmezjFsqWmpoaHR0N2cnIyHCgRfX4+vqaTKYWLVq4tJXskJSU
hPMQFxf35MmTnO6Le8PKpm+0r2yTJ0/29PQ0mTl+/LgDLapH+8o2adIkOhXV
qlVz9dnQN/b64V9//RUTE4N/bRkkJyevXr165syZ/v7+u3btSklJUa7w6dOn
p0+fjo2NffbsmfpuMCrRuLLt37/fJAGRGwpv377dxkxCQoIDHVBA+8o2depU
cTYqV66cmZmZ0z1yV1T64b1798LCwvr165cnTx6c81atWlnaIH4ePXo0GQiK
FCmyePFiq3XGx8cvWrQIl48sDx06lM1jYSzRuLINGzYMlx4+ExISgkGQRrff
f/+dXAJ/ONABBbSvbI8fP05MTBwzZgydgcjIyJzukbuixg8Rocn0qnnz5jKb
O3fuYJClrblz565fv36VKlWE/Q8//CCzHzlypOmfhIeHO/G4GELjytauXTtc
+tatW0sLMcYZVtmIBw8e5MqVC11ds2ZNTvfFXVHjh9evXy/2AqiWVWWbNm0a
eeOUKVOQTVDhzp078+fPj8ISJUqkp6dL7T/77DOqsECBAqxsrkPjytaoUSNc
+j59+kgLt23bpkbZbt26FRERgYxV/TwGKVvLli1FSVxcHFJgKInyjsnJydDb
y5cvq2woSzIyMtBuTEyMrScFBQsWRFcXLlzorBaNhr3zbJQ8Wirb06dPBw8e
vGrVKlm5mDewJVxr165lZXMdGle2Bg0a4NIPHDiQfq5YsQKhfpEiRcRUxitm
YCZ2gY59//335cqVk854jBs3LjU1NcvmSNk6dOgA46FDh5YpU0ZkGaNGjUIm
KLOHcnbr1q106dKiLXRm5cqVwiA2NpZ6OH36dMvmING0FUO8KIQUt2/fPm/e
vFShl5eXn5+fCAYEhQsXxtaAgIAsD4qxirOUzRYis/jPf/5j1YCVzaVoXNka
NmyISz98+HD6OXPmTJM1Xn/9dTJA5N+xY0erNlCtGzduKDdHylahQgUxuytl
4sSJUuMuXbpYbQgEBQWRDSIuHx8flFStWtWyuR49emATspJ79+5Rye7du4Vu
58mTx8PDg/6GUF+5ckW6Lynb7NmzVZ5JRoarlW3Xrl107bZu3WrVgJXNpWhc
2erWrYtLP3bsWPqJeObAgQODBg0il1i0aNEBMyItnTx5stA6lCP0OnbsGEIg
Knz77beVHyaSshGdOnVCTHXx4kVkfDSNXLRoUWlail6Rq2/atOnSpUspKSnB
wcEUayHYE0vvRo8eTRUitZS2hapopqV3795UgsCsePHiKMG/GzduRA0Q6mXL
luXLlw+FOGrp7mQ5ZcoUlWeSkeFqZfviiy/oul+9etWqASubS9G4siFTw6Wf
N2+etHDOnDnkErJ5tnPnztHKt0qVKklXEyGLpCcRICQkRKE5oWzTpk2Tzs59
+OGHVI7sUhRCNsPCwmQ1jB8/niwPHz5MJSdOnKASmQpt2bJF1qXBgwebzJlv
VFSU1JIiVcRv0sVUNWvWRGGvXr0UDodRwKXKdvfu3VdffZVc0ZYNK5tL0bKy
RUREWJUjW8r27bffUvmKFStkVR0/fpw2de7cWaFFUramTZvKyletWkW779mz
R7nPBw8eJMt169aJwurVq1smpJSKent70/QdhJQeCkBFZXXeunWL6kQUKgoH
DBhAwaHIZBm7cKmyDR8+3NINZLCyuRRtKltaWlpoaGj58uVx3X18fB49eiTd
akvZ+vXrR+VWHxZQbQpj6HPbqz4gaFTzhg0bLPdCKLV58+ZRo0ZBEkuWLEmW
CxYsEAazZs2SJaQiFR02bBiVIJ8lmxkzZvxpAcWiyExFnZGRkbTwo2vXrhgC
eMmuvbhO2Q4dOkSXplGjRgrP5VnZXIo2lS0wMJAueqlSpY4dOybbakvZ3nzz
TZP56aTVOlu2bGkyT8s/ffrUVru2lO2XX36xqmwIBTt16mSyhvSpZUJCArm6
SEhFKiqS1t27d1utRwoOXNo6xFO8d5aUlGTroBiruEjZLly4gDgclojAz5w5
o2DJyuZSNK5scCTLB5q2lK1OnTooLFasmNU627Zti62QAoV3ye1SNpGi5s6d
u2PHjviJkOzUqVOWygYQzpkkCWnPnj3xE2GkGNN37NhBO8Kmiw2gftI6cUfg
YFnZHMMVynbr1i3xVN3WI1EBK5tL0aayxcfHjx49muadoDOykN6WsonwyerU
E6lWzZo1FdpVr2wYmumBKdQpLi5OWOJvq8q2dOlSKsc4npGRUahQIdM/l5FE
R0eTwfz585VOjaQhWuVevXr1uXPnyha6M1nidGW7f/8+LVICX375ZZYVsrK5
FG0qGxEcHEyXXvZ2JG5kKj9x4oS0nJZhmKzNhkEDKR9UfpioXtlWrFhBJdgk
tbSlbHfu3KEFITNnzhSzdtJsJSUlhVavyV4lswUtJoFCJiYmqrFnZDhX2R48
eNCqVSu6rP3791fz2gsrm0vRsrI9fPiQ4qJZs2ZJy5cvX04uIXvdWLwpX6NG
DenCM7hZ9+7daRPcSaFF9com1DU0NFRqOW/ePKvKBt59912U16tXb+jQofij
Vq1aMgNKUa0qsyXNmjUzmRfdZWnJWMWJygZHpbkO0K1bN5WfzmNlcylaVjZQ
tWpVXHpIgbTwwIED5BINGjSIiYl59OiRyAffe+892lS/fv2TJ08+ffoUaaNQ
DKufoJGiXtngjVQCl758+TLEEz3x8/MzvcBS2X7++WfaRMEbtFFmgA7TJuj5
jBkzEOahEEeH40UrGzdulBpXrFgRlhMmTMj6JDLWUOOHx44dO/KC1157zWT+
cpQouXv37nPzG77itZfixYvDVTDY7fgnYiHi9evXxe7IWGmvOXPmUMnZs2dd
fdTGQePKRu8g9OvXT1oIvapUqZLQEOhAvnz5MG4+N39NC0GR2CTeTjKZ13tA
5ZSbU69s8OdSpUqJysV3G6pUqUKNWiobdhET/kiNrb4+v3nzZvqmBFGyZEnx
FZ1q1apJLal15LYqziJjBTV+SNOhtqAZ0enTpyvYENu3b6cKsYuCGZpz9VEb
B40rG70R37dvX1k5whsKWggvL69Tp07RJuShU6ZMoacPYuuQIUPS0tKybI5C
xPbt28vKxZphaZ4IaaKnsUKFxo8fn56ejlzYqrIBdIOMkUva6kN0dDSkVerw
np6evXv3lg3oJJL+/v5ZHhRjFTV+WLRoUQUhokssvnKsgFjgvXDhQgUzOK2r
j9o4aFzZGjdubFXZnptfNsfNjlA/NjbWcmYjMzPz3LlzO3futLrVWaCV+Ph4
tPLHH384t2ZkOlFRUagZibblN0ae81eMso2982yMe6FxZaP3Pf38/BxoSMcg
9aZRXvrFJMYuWNn0jcaVjdI3b29vWx9MMCarV68mZePHag7DyqZvNK5s27dv
F3NNvr6+SP0caFFPBAUFiQlGCD4v0HUYVjZ9o3Fly8zMpG9iEPz/0In5ag8P
jyVLluR0d9wYVjZ9o3FlIyIiIgIDA/39/W/evOlAi3oiMjIyICBg+fLl58+f
z+m+uDesbPrGLZSNYZwO+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVj
jAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+
ySllYxiGcTWsbAzD6A/ORhmjwX6ob1jZGGPCfqhvWNkYY8J+qG9Y2Rhjwn6o
b1jZGGPCfqhvWNkYY8J+qG9Y2Rhjwn6ob1jZGGPCfqhvWNkYY8J+qG9Y2Rhj
wn6ob1jZGGPCfqhvWNkYY8J+qG9Y2Rhjwn6ob1jZGGPCfqhvWNkYY8J+qG+M
pmxRUVHh4eEnT550aSvJycnhZlJSUlzaEOMwrGz6xi2ULTU1NTo6GqKUkZHh
QItSfH19TSZTixYt1BivXLmyZ8+eK1assLeVNWvWmMwcPHjQ/j6+bJKSknBu
4+Linjx5ktN9eXmwsukb7Svb5MmTPT09SSiOHz/uQItS1CvbuXPnTC84f/68
Xa24l7JNmjSJelutWrXsn2F3wV4//Ouvv2JiYvCvstnTp09Pnz4dGxv77Nkz
NdVevXo1xgyH985F48q2f/9+kwREbg60KEW9sp05c4YazZcv382bN+1qxb2U
berUqeIMV65cOTMzM6d79DJQ6Yf37t0LCwvr169fnjx5cH5atWplyzI+Pn7R
okU4gXQmDx06lGXl8KsSJUqQ/bp16+zqP6OMxpVt2LBhuOhwqpCQEAxqKsdB
BezKRnfs2DF27FgHchb3UrbHjx8nJiaOGTOG+hwZGZnTPXoZqPFDRGgkaILm
zZtbtRw5cqTpn4SHh2fZh/fff1/Ys7I5F40rW7t27XDRW7du7UBDVrFL2RzG
vZSNePDgQa5cudBndD6n+/IyUOOH169fL/aC3LlzKyjbZ599RmYFChRQqWyb
Nm2SKiErm3PRuLI1atQIF71Pnz4ONGQVUraWLVuKkri4OCS5uK8dqC0tLY3m
3mUZnFA2caSwPHz48OXLlx1oJTk5GamNyn3Pnz8fERFx+/Zty01JSUmoRyGz
LliwIPq8cOFCBzrpdtg7z0Zppi1lE6xdu1aNst24cYPyUFTIyuYKNK5sDRo0
wEUfOHAg/Vy/fv0rZvbu3Ss127dvH5XPnj1bWn7//n34D8q/+uorKiFl69Ch
Q2pq6tChQ8uUKUN+hRF51KhRyMukuzds2BD7du7c2bJjmzdvrl69OgU5oHDh
wv37979z5w5tFcoG3du1a1eTJk1EUlOhQgWVs/QQqG7dupUuXVoM6+jMypUr
ZWbUyZ9++gmpU9OmTcnSx8dHGCCFX7Ro0WuvvSbqKV++/IYNGyxbxFFga0BA
gJruuTs5q2zdu3c3madw0QdWNlegcWXDbYuLPnz4cPp5+vRpcoNx48ZJzcaO
HUvliPGk5eIBxO7du6mElA3yImZ6pUycOFG6u9XUFerXs2dPy30BtI5shLK1
b99eqJ8AodHff/+tfOBdunSx2gQICgqy7OSXX35JowAh1Pjhw4f4W5R7eXmJ
v4XaC0jZZKODXslBZcOwQjazZs26ePEiK5sr0Liy1a1bFxcdwiVKKMpCudSs
du3a5B4eHh4IxkQ5rWfw9PS8d+8elZAOEJ06ddq2bRtcC/kXxVRFixaVpqVW
lQ03Pu2OaBDeiLQiISFh5syZefPm3bhxI9kIZQPFihWbO3fuqVOnkPMK8fnm
m2+UD5y0GvfRpk2bLl26lJKSEhwcjCZQiDMgXdcnPSIIO8JXpL1ojrZCvmgT
ggTKZ3G8zZo1M5mfy6BmaaPFixdH+ZQpU7K4Krogp5QNDuPt7Q0DOMPTp0/P
nz/PyuYKNK5syLNw0efNmydKBgwYgBIEQiL1S05ORkmBAgUocdu+fbswppAP
N7IoETowbdo06ZPWDz/8kMpjY2NlxlJlu3DhAoU9EAHZxNetW7fE30LZcDvE
x8dLd6cQzs/PT/nAoc9hYWGywvHjx1O10C7LI0IqighNag8RQ76DTf/617+k
5Xfv3oXeonzEiBHS8po1a6KwV69eyn3TBzmlbLj02Jo/f35yDFY2F6FlZYuI
iKCLHhISIgpFJI9wi0rgEvjZpk2bvn37Su/WtLQ0isRmzJghdicdgAjI2lq1
ahVVu2fPHpmxVNkCAgLIzN/fX6HnQtkOHDgg21S+fHmUv/3222rOgIyDBw9a
3gXUydy5c8fFxcnsMSKQPSROtunTTz+1PA80aiAmFCGujskRZSNfBYsWLaIS
VjYXoU1lgyiFhoaSCPj4+Dx69Ehsun37Nj1/HzlyJJV8/PHH+Pn111//8MMP
FCZR+d69e8lnjhw5Ina3teoDgkbG0ql1S+OPPvqIzJTX7iqs+oCmmcyr/ZXP
gOCvv/7avHnzqFGjoEIlS5akahcsWCDrZJMmTSz37d+/PzYh9/nTgn//+9/Y
hChXah8ZGUkhZdeuXTGs6HvJ7stXNiQXlO+3atVK5AusbC5Cm8oWGBhIl7tU
qVLHjh2Tba1fvz421ahRg36WLVuWHOn333+nvRISEp6/yN2KFCkifR3SlrL9
8ssvapTtrbfeMpmn45T7r6BskCCVynb8+PFOnTqZrCF9fKmwQo96q0DevHll
u0AzxbtsSUlJWXbSfXn5ytatWzfaFBUV9dcLfvvtNyoMCgrCz7t379p7IIxV
NK5scKQbN27Itoq3gbCJ3u708vJ6+PAhxkEoIX4uX778+YvoCO4k3Tebylan
Th2T+dmBcv+zr2wiO0aA2rFjR/yMiYk5deqUXcpGvQVdbID8XbYL7keagmNl
k5FNZYuLi1MeZQjHpikYS7SpbPHx8aNHj6aFo7hnZS9VHT58mNxg27ZtlIG2
adOGNtFUW69eve7fv+/h4YG/IZLSfbOpbCKIkj6BtSSbynbhwgWaIUQ+Lp09
E3eHSmWj3iJqVflWGurPnz+/ybx8Ze7cuenp6Wr2clNesrJJP7CgAPIRB46F
sUSbykYEBwfT5Za9yYjsEncryidMmPDBBx+YJIsofvzxR5M5h/2/LxZAwqOk
+2ZT2T7//HMys1wxKyWbyrZixQraHb2SlturbOPGjSP7iIgIheYEGE1gXKhQ
ocTERDX2bs3Lz0b/+9//3rHg6NGjZL9s2TL85GzUWWhZ2ZBgUugya9Ys2SZa
wo3bmZa3ibk4JFDkJzR5XrZsWdmO2VS2kydPkhmiKdlnZ27fvi0WfmRT2RAv
0e6hoaHScvGsU6WynT17luxr164tfQpjC1rnhkgvS0sdkFOrPmTwEwQXoWVl
A1WrVsVFHzp0qKwcA5wI4BG/PX36VGx6/fXXxaaPP/5YtmM2lQ288847ZAlX
h/dCfqFpq1ev9vHxQVJMeV82lQ3V0u5t27a9fPky6oyJiaF1UHYpG+jRowft
UqdOHYQHdKKuX7/+9ddfYxfpeQMVK1Y0mSNhhb7pBjV+iBHzyAvo9TRcdFEi
4iucT1H45Zdf0gmfM2cOlWB8UWiClc1FaFzZ6B2Efv36ycoTEhLEbS57RvDZ
Z5+JTZbekn1lQ8ogZuZN5rcepBp74cKF59lWtoyMDHoUQojPR1SpUoWaU69s
9+/fp+XKhJeXl3hAIDtYQI3OnDlToW+6QY0fIjE32Wb+/Plkhj8UzFCJQhOs
bC5C48pGryNZPsIDEAdyicWLF0vLd+3aJZzK8rkqBYHt27eXlYtVwdKb3ZYx
xG38+PFSt8+bN2/Pnj0xdpPB+vXrqVy6lI5o3bp1lsoGEKpJ9bNkyZJoMT09
vUaNGjJls9VJAfaaPXt20aJFpbdbpUqVli5dKktRSfSUFyHrBjV+KDtpMsRV
WLhwoYJZwYIFFZrAhSazLVu2OOvQmOeaV7bGjRvbUrYcB+HQqVOnduzYgfOg
ZhbLXjIzM+Pj43fu3PnHH384pbY///xz9+7dhw4dsvqNo+f8FSNGR2hc2ejL
k1m+Zclkn4cPH1LwoPzYVzewsukbjSvbkCFDTOb3g65evepAW4x6Vq9eTcqm
8qGeu8PKpm80rmzbt2+n283T09PX11f63QzGWQQFBdFTURpE9L1AV8DKpm80
rmyZmZli3YLJGf8rH2OJ+F/5PDw8lixZktPdeUmwsukbjSsbERERERgY6O/v
b+//jseoITIyMiAgYPny5fb+t6puDSubvnELZWMYp8N+qG9Y2Rhjwn6ob1jZ
GGPCfqhvWNkYY8J+qG9Y2Rhjwn6ob1jZGGPCfqhvWNkYY8J+qG9Y2Rhjwn6o
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
fv311z/88AOFSVS+d+9eyxHT1moKCAUZQzkVjD/66CMyU167q7DqA5pmMq/b
Vz4DdvVTgFBq8+bNo0aNgiQiEiBL6fzPrFmzqFAkpCIVHTZsGJUgnyUbjAh/
WkDvgyDPEnVGRkZSINq1a1cMRu4yX+QsZRNjzalTp2Sb9u3bR5vENK+UwMBA
2nr27Fk7+85kjTaVTVz0UqVKHTt2TLa1fv362FSjRg36WbZsWfzE+Cies9O0
BqVjRYoUkS5XsKUYv/zyixple+utt0zmaS7l/isoW5MmTbKjbFb7+dw829Op
UyeTNaRPLXFmSIVEQipSUZG04ja0Wo8U2UoGiKd4Ay4pKUn50DSCs5QtLCyM
DhyXRrZp/fr1tMnqnUKpaOHChd1lLHAvNK5scKQbN27Itor3erCJ3u708vJ6
+PAh0igoIX4uX778+YvoqFu3btJ9s6lsderUMZmfHSj3/yUrmwgbEM127NgR
PxGSIYSwVDaAcM4kSUjp/kJ4LGbzxMQRbLrYQBaEYFgpVqyYMZUtNjaWDlw8
PxIIN7b6tik9C3PiKnRGijaVLT4+fvTo0TTbg7tb9lIVogtymG3btlEG2qZN
G9pEU229evW6f/8+LVSAd0n3zaayibhI+gTWkpepbBcuXKDpGqhTXFycsBQL
42XKJp0XysjIKFSokOmfy0iio6PJYP78+cqdFA3REvrq1avPnTs3PT1dzV45
jrOU7ebNm3S6LJ8Of/LJJzTcPH36VLZJpPwTJkywv+9M1mhT2Yjg4GC6+rJ3
EpFd0lIreMUHH3xgkiyi+PHHH03mHBZN0L4I6qT7ZlPZPv/8czKTLoK15GUq
24oVK6hElg3ZUrY7d+7QgpCZM2eKWTvp7HdKSgoNCirDCVpMAoVMTExUY68R
nKVsgF6kqlWrlrQQwzFFZVZ32bVrF535tWvX2tlxRhVaVjYkmBSNzJo1S7ap
e/fudOOT84i5OKRC5DD9+/fHv2XLlpXtmE1lO3nyJJkhQJJ9pub27dti4cfL
VDaESVQSGhoqtZw3b55VZQPvvvsuyuvVqzd06FDLW/L5ixTVZOM5hYxmzZqZ
zIvusrTUFE5UNvHEXPqsSmjXTz/9ZLmLWOq2b98++/vOZI2WlQ1UrVoVVx83
oKxcOIbJ/IxAGu3TAEp8/PHHsh2zqWzgnXfeIUu4enh4OOQXmrZ69WofHx8k
xZQ4v0xlE0sL2rZte/nyZXQgJibGz89PnARLZfv5559pEwVv0EaZAQScNmFk
mTFjBi0dfPTo0YEDB9CKbEKpYsWKJjfMqtT4IUbMIy947bXX6KKLkrt375IZ
ElJ6gFK6dGmcOlwCZBk08QjntPqq7/Tp0+kS8GeTXYTGlY3eQejXr5+sPCEh
Qdy5smcEn332mdgkXcpFZF/ZcJvTcwRCvHZEbkwvNb9MZcvIyKDnJgQt4TCZ
X1ekvlkqG3YRE/65cuWy+vr85s2baXUNUbJkSfHqq6zz1DpyW+Uj0hpq/JAm
IW0hnYfctGmTOD/ivHl5edkKyejzXED2qhrjLDSubPQ6Ut++fS034f4i31i8
eLG0XGQBJvPDU9leFAS2b99eVi5WBUuVzZYxxG38+PFSt0eEgwzu+vXrZCAe
91suPm/durUaZbOrn5AmqdhChdC99PT0GjVqWFU2MGTIEDKWvqAhIzo6GtIq
vZcRmfTu3Vu2/opEUnnpsgZR44dFixZVUDbZid2yZQuFrwRGFoVMkx51AXd5
4OJ2aFzZGjdubEvZcpz79++fOnVqx44dOA/StcQ5QmZmZnx8/M6dO//44w/n
1oycKyoqCjXHxcVZfmPkuWG+YqQSZBOhoaFXr151es2MXWhc2ejLk1m+Zcnk
FA8fPqTYQ/lhsQZxkbIxGkHjykZJk7e3Nw+C2mT16tWkbOHh4TndF/tgZdM3
Gle27du3ixkeX19f6XczmJwlKChITCth6HG7+SJWNn2jcWXLzMykL1EQ7vi/
v+kV8VlFDw+PJUuW5HR37IaVTd9oXNmIiIiIwMBAf39/e/93PMZ1REZGBgQE
LF++3N7/jFUjsLLpG7dQNoZxOuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH
+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0x
JuyH+ianlI1hGMbVsLIxDKM/OBtljAb7ob5hZWOMCfvh/8fem8dVUf3x/1dZ
3HDJfS9R0TRTs1xyKU1z94Pf1DSXNM09U1NzqVQkTcgkTHPJNXOp3AAVM/qB
Igo9FDcULEEl9yQEBUTR7+t337/Ob5q53Dv3cpFh5v38g8e97znnzJmZ97zm
/T7nzEXfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q
37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHG
hP1Q37CyMcaE/VDfsLIxxoT9UN+wsqknKioqLCzs+PHjBd0RxgkUXj9k1FAo
lC01NTUmJgbCkpWV5cAenYWnp6fJZOrQoUMB9sE6ycnJOEtxcXEPHz4s6L5o
HVY2faN9ZZs1a5abm5vJTHR0tAN7dBbaV7aZM2fSifLy8irYc6V97PXDa9eu
xcbG4q+VMrdv3/7555/nzZu3e/fulJQUNc1euXIl1ozK8oxKNK5sBw4cMElA
5ObAHp2F9pVtzpw54lzVrVs3JyenoHukXVT6YXp6+v79+4cMGeLq6oqz+vrr
r+dW8uOPPy5SpIg4/0WLFl28eLH1xm/evFmxYkUqv3nzZnsPgbGCxpVtzJgx
uOhwqqCgIDzUHj9+7MAenYX2lS07OzspKWny5Ml0s0RGRhZ0j7SLGj9EhEaC
Jmjfvr3FklOnTqUCHh4ebdq0KVGiBH1duHChlfbfeust0TIrm3PRuLJ17twZ
F71jx44O7MjpaF/ZiPv371PwsGnTpoLui3ZR44dXr14t9y+IwXJTtri4OFKn
V1555d69e7DgKdywYUNYXFxccktgt23bJtVMVjbnonFla926NS76oEGDHNiR
TZKTk8PDw5ERqCxPyvbaa68JC1waCTKUxHrF69evY0eXLl1yuKsysrKysN/Y
2NjcZgpKlSqFri5dutRZe9Qf9o6zIbvPTdkoSEZ099dffwnjmTNnrIRtN27c
oDwUDbKy5QcaV7aWLVvioo8YMYK+/vDDD8+Y2bdvn7RYaGgo2X19faV2PEDh
P7B/9tlnwoiUNiAgoEaNGuJxWbt27S1bttjsDCnbm2++mZqaOnr06GrVqokR
lYkTJyITlJWPiIjo06dP1apVxY7Qk7Vr14oCJ0+epG7PmzdPubsdO3bQ1t27
dwtjYmJily5d3N3dqcHixYt7e3vfvn1bVrd06dLY6u/vb/OgDIuzlA0PlwoV
KljMLF544QXY69Wrp2ytb9++2FSsWDH0gZUtP9C4srVq1QoXfezYsfT11KlT
5AZTp06VFpsyZQrZEeNJ7WICIjg4mCyZmZk9e/YUUgNlEJ+l6mcRUrZnn32W
nFzGxx9/LC3cq1cvZRli2bJlVAY3ReXKlWGpX7++cnf9+vXDppIlS6anp5MF
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
derU+fbbb62nqBRAdunSRWYXK4qlwghpElOxpELTp0/Hrhs1amRR2cCoUaOo
sHhpQklMTAykVdpzRAsDBw5Eoi0tRiLp5+dn5XAMjho/lDmJDNlF/PHHHylU
JvAUsylrT8x+QuVRPS+Hw8jQuLK1adMmN2XLIzk5OX/++WdwcHB4eLjytzKc
tYv4+Pjdu3efO3fOuS0jD4qKikLLcXFxyt8YecK/YqQCe8fZVIJsIiQk5MqV
K05vmbELjSsb/fKkt7e3AzsyLJmZmRQGSH8xiZGRT8rGaASNKxslaBUqVOCH
oHo2btxIyhYWFlbQfdEurGz6RuPKtnPnTjGa5OnpST+PwOTGsmXLxFAPHge8
QNcKrGz6RuPKlpOTI9ZpmAr6v/JpH/FThy4uLsuXLy/o7mgaVjZ9o3FlIyIi
IgIDA/38/NT/zwJjEhkZ6e/vv2rVqoSEhILui9ZhZdM3hULZGMbpsB/qG1Y2
xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/q
G1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qm4JSNoZhmPyGlY1hGP3B2ShjNNgP
9Q0rG2NM2A/1DSsbY0zYD/UNKxtjTNgP9Q0rG2NM2A/1DSsbY0zYD/UNKxtj
TNgP9Q0rG2NM2A/1DSsbY0zYD/UNKxtjTNgP9Q0rG2NM2A/1DSsbY0zYD/UN
KxtjTNgP9Q0rG2NM2A/1DSsbY0zYD/UNKxtjTNgP9U2hULbU1NSYmJioqKis
rCwH9ljYSU5OxrHHxcU9fPiwoPuiH1jZ9I32lW3WrFlubm4mM9HR0Q7ssbAz
c+ZMOnwvLy9jnoH8QL0fnjt3bv369fPmzdu5c+e1a9dkW2/fvh1ri8zMTOcf
AGMVjSvbgQMHTBIQuTmwx8LOnDlzxBmoW7duTk5OQfdID6jxw7S0tOHDh5v+
y8SJE6XB89dff22yxZo1a/L3YBgFGle2MWPGwDFcXV2DgoJSUlIeP37swB4L
O9nZ2UlJSZMnT6bbJDIysqB7pAds+iGc7bXXXqNz/uyzz3bt2rVKlSr0tXPn
zkLc1Cjb9u3bn8YhMRI0rmxwIThGx44dHdiRzrh//36RIkVwNjZt2lTQfdED
Nv1w3bp1pEvvv/8+6Rj+jho1iowbNmygYojrLlni5MmTJUqUQMm2bdtymP30
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
c889x5mOs7Dph9HR0SVLlmzRogX8BOHZlStX4CQ0N12rVi2LT8Z58+bRhcNz
ML/6zahD48pG7yAMGTJEZhejuKb/zhGADz74QGzavHmzrOK9e/do+S5RvHhx
MSCvVBIZd+7cEXMQJvP7DlJ1pRefAwICpI3TJBr+kkTnUdlofsTHx0fFmWNs
YNMPxQ9+yq41gvbchIt+dAsgSs+XTjOq0biy0RvxFqcsxbuWsleWxFiHyTx5
qqyYkZHh6+tbtmxZk4Q6dep8++23NlNUiNv06dM9PDxERXd39/79+yPqE2WW
LFlCgkZ3ROvWrY8cOYIQTqlsJHddunSR7UUsUZYpG4mwY0uFGRlq/HDDhg20
pogoVqxYr169ZC+YSKEJLMCTOwWOxpWtTZs2uSlbHsnJyfnzzz+Dg4PDw8OR
VNpVF4HfiRMndu3ahTNgUQxTU1PR7IEDB+7eveuk/v6/8K8YORH1fojHFvwk
JibG3rFZpgDRuLLRb2R5e3s7sCOdkZmZSfGA9clZRiUOz40yhQKNKxv9hGmF
ChWuXLniwL70xMaNG0nZwsLCCroveoCVTd9oXNl27txJt7Obm5unp2d8fLwD
eyzsLFu2jGZFSeR5DMcpsLLpG40rW05OjlinYTL8f+VzcXFZvnx5QXdHJ7Cy
6RuNKxsRERERGBjo5+fn2P8sKOxERkb6+/uvWrUqISGhoPuiH1jZ9E2hUDaG
cTrsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6
hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qmoJSNYRgmv2FlYxhG
f3A2yhgN9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYY
E/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33D
ysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfaNvZYuKigoLCzt+/Hih
aJZ5mrCy6ZtCoWypqakxMTHQk6ysLLsqenp6mkymDh062FXLsWYvXrw4fvz4
UaNGXbp0ybm7s5fk5GScq7i4uIcPHxZsT7QMK5u+0b6yzZo1y83NzWQmOjoa
liVLlvTp02fw4ME26z5NZRs4cCB1ctCgQc7dnb3MnDmTeuLl5UVnjFGi3g/P
nTu3fv36efPm7dy589q1a9YLP3r06NSpUydPnnz8+LETesk4isaV7cCBAyYJ
iNxghKbRV5vO8zSV7a233qJeTZkyxbm7s5c5c+aIM1a3bt2cnJyC7Y82UeOH
aWlpw4cPN/2XiRMnWgyG4+PjAwICcMKpWHh4eL70m1GHxpVtzJgxcBJXV9eg
oKCUlBSSMm0q2/Xr1+fOnevv749+Ond39pKdnZ2UlDR58mQ6S5GRkQXbH21i
0w/hXa+99hqdw2effbZr165VqlShr507d5aJ24QJE2QCGBYWlr8HwFhF48oG
F4KTdOzYUWrUprJpjfv37xcpUgT93LRpU0H3RYvY9MN169aRm73//vukY/g7
atQoMm7YsEFa+IMPPihnpmTJkqxsWkDjyta6dWvlyJW9yoYnL33Nyso6evQo
sgabFVESmW9sbKzFvMMxZUtOTkaGcvPmTbtq5aXBUqVKoZ9Lly511h71hE0/
pKdqrVq1ZPNWzZo1g71hw4YW0/zvv/+elU0LaFzZWrZsCScZMWKE1GivssFF
z58/361bt+LFi1PFsmXLIn1A1qaskpiY2KVLF3d3dyqJKt7e3rdv31Y2K1O2
Xbt2PWPm8OHDUjs6GRAQUKNGDZGn1K5de8uWLaIAdBu1KleunJaWpuzPK6+8
gq1t2rRR36CgdOnS2IoE2fpZMiY2/RBXBGdvzJgxMjtOtZWRNFY2jaBxZWvV
qhWcZOzYsVKjvcpGAmVS0L59e9njODg4uEyZMrTV1dXVxcWFPuPBffnyZVmz
MmVD0keFf/vtN2HMzMzs2bOn2KO0G5999hmVCQwMJMvmzZtl/T979ixt+vTT
T9U3KCBl8/X1tX6WjIl1P3zw4AGd1blz58o2Xbt2jTZ99913yoqsbBpB48pG
kb9sttEBZStSpMi4ceOOHDkCt/zpp58qVapE9tWrV4vCCMzKly8PI/5u3boV
opeRkbFy5cpixYrB+N5778maVaNsUBsy9u3bl9a5/fHHH+3atSPlvHjxIiy3
bt3CZ1j+97//yfqP24qqI+ZU36CADmf27Nk2zrIhURmzSa87AdErUaKE9HEj
hZVNI2hc2ZCIwUkWL14sNdqrbMg99+7dK7WfPn2aRtfr1asnGhk5ciQsRYsW
jYqKkhb28fGBHfGbWMukUtmgOaSK3bt3l5a8e/duuXLlYIfYkoXCMBSWJaSN
GjWC/aWXXrK3QaJx48YwDhgwwPpZMiY2/bBt27Y4e4jh79y5I4yImXHy6UIP
HTpUWYuVTSNoWdkiIiLISYKCgqR2p8yNvvnmm9TI9evXn5gHr2i8XbkAGDEV
lTx48KCVZpXKBkEmCxRJ1ub48eNhx71DXxEiUklpQipS0SVLltjbIPHuu+/C
WK1atfT0dOsnyoDY9EOhUS+++CKu6V9//fXzzz9TeEz07t3bSi1WtoJFm8qG
0CUkJKR27drwECQFiP+lW52ibBSJgWPHjj0xvxtFX+fPn/+nAnoJApmplWaV
yoZnOr5WqFBB2eC0adOwqWrVqlTy/v37NCYmTUgpFUUMefXqVXsbJCIjIyk0
xT2IxwQv2ZVi0w9xukR4JmXgwIGUSlh8C4aVTSNoU9nEoHqVKlVIeaQ4Rdkg
U9TIjz/++MQ8d6D0YRkLFy600qxS2Vq0aGG9QXd3d1Gd4itpQkqpaKdOnUQZ
uxokEO+Jd9OSk5Otny5DocYPIW5+fn447Xi+4NziWnzzzTdZWVn4ivM5YcIE
ZRVWNo2gcWVr3779jRs3ZFudomz+/v7UyIEDB56Y12zQ1/r16/fKBaiflWaV
yta0aVOy5NbgO++8I6oj1aXClJDGxcXRV+kEnF0NEri/aAiOlU2GXeO9D8zQ
58TERDqfAQEBypKsbBpBm8oWHx8/adIkGviCgMgUzCnKRgNTgGYYY2Ji6OuX
X35p8xBUKluPHj1M5iFoNS9HIzyoXr06yv+f//N/8NXX15dCuNTUVFHGrgaf
mOWRZvEaNGiwaNGijIwMNbUMgl3KJmXNmjV0oWULFwlWNo2gTWUjhAvJ3nzM
u7JlZ2fXqlULm0qWLEmNpKSk0Oo12Ztc6ptVKtvUqVPJEhERYbNN8NFHH6Ew
9DwzM/OVV14RKiewt0E8HVDYw8MjKSlJTXlD4bCyvfDCCzirderUsfh+Ciub
RtCysuEGp4VeCxYskNrtVbYmTZqgKan966+/phakg8D9+/cno8X1/MpmbSqb
mNxEB2STIBaJjY2l8t9++y2N/P/888/SAvY2SBN5iPRsljQgavzw1KlTMs/5
7rvv6BJIV0JKYWXTCFpWNlC/fn04yejRo6VGB1bq1qtXb9euXWlpadeuXYNO
km4UL15c+mbB8ePH6aUqyOn8+fNpFRME5ODBg2+88cbWrVtFSRrJl/1AkMWV
uv369SNj06ZNjx49+ujRIxivXr06d+5cCCN9lULxAC1aK1u2rOy2srfB5557
DiVnzJhh/SwZE5t+GB0djZAe1xrnGeHZlStXcJLJcxDwS58sOP9H/uXTTz+l
C7Rw4UKy4HmU7wfDKNC4stE7CEOGDJEa7VU2CvxkIPdEaCQrv337dpr2IipV
qiTqenl5iWJTpkwhY7ly5YSYWFS2e/fu0QtiBLRUjOdbDA6/+OILsVX2tqwD
DdKv7vj4+Fg/S8bEph+KH/AkbxGfa9euLfuh+C+//FLpYAIPD4/8PRLGEhpX
NnojXjblN2zYMJXKRiHfmjVr/P39xQuhJnO4ldtQVUxMDIIfqWe6ubkNHDhQ
+uSNjIwUL2zGx8eT8YcffiALHtPSBjMyMnx9fRGASdusU6cOdFWZUSIwoKgA
/PrrrxZ7qL5BEj0/Pz/rZ8mYqPHDDRs21KxZU5xkxNK9evW6deuWrNjSpUut
KFupUqXy6xiY3NG4srVp00apbI6B4Co2NjYoKOivv/6yWfju3btRUVG7d++O
i4uz+JMgycnJe/bsgcSp/NcMyFv//PPP4ODg8PBw2S+HOIaaBvlXjKyg3g+R
bOI845GnZmyT0QgaVzb6jSxvb28HdmRwMjMzKWZYu3ZtQfdFizg8N8oUCjSu
bPQTphUqVECa5sC+jMzGjRtJ2XiSziKsbPpG48q2c+dOMdjl6ekpBrUYKyxb
toxmRemhwAt0LcLKpm80rmw5OTlinYPp3//Kx1hHTOq5uLgsX768oLujUVjZ
9I3GlY2IiIgIDAz08/Nz4j8R0DGRkZH+/v6rVq1KSEgo6L5oF1Y2fVMolI1h
nA77ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+
YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob4pKGVjGIbJb1jZGIbR
H5yNMkaD/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHG
hP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+w
sjHGhP1Q37CyMcaE/VDfsLIxxoT9UN+wsjHGhP1Q37CyMcaE/VDfFAplS01N
jYmJiYqKysrKcmCPeiU5ORnnJC4u7uHDhwXdl8IHK5u+0b6yzZo1y83NzWQm
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
3EjKxr9waBesbPpG48q2c+dOum3d3Nw8PT2RFDiwx8LIqVOnfHx8pk2b5uHh
YTK/qpOQkCArs2zZMjFtCvHnBbp2wcqmbzSubDk5OWKdhslI/5VPLCo2mSdw
t23bpiwjxq6RqC5fvvzpd7JQw8qmbzSubERERERgYKCfn5/D/7Og0LF48eKW
ZsaOHXv27FmLZSIjI/39/VetWqUM5xibsLLpm0KhbAzjdNgP9Q0rG2NM2A/1
DSsbY0zYD/UNKxtjTNgP9Q0rG2NM2A/1DSsbY0zYD/UNKxtjTNgP9Q0rG2NM
2A/1DSsbY0zYD/UNKxtjTNgP9U1BKRvDMEx+w8rGMIz+4GyUMRrsh/qGlY0x
JuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qG
lY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbs
h/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qmUChbampqTExMVFRUVlaWA3tU
snbt2v79+69evVpl+eTkZOw9Li7u4cOHTukAU+Cwsukb7SvbrFmz3NzcTGai
o6NhWbJkSZ8+fQYPHuzA3sH58+dN/5KQkKCmysyZM6m8l5cX9YEp7Kj3w/T0
9L179/r7+y9atGj//v23b9+2UvjRo0enTp06efLk48ePndNRxiE0rmwHDhww
SUDkBiM0jb5KnQf+1slMYmKi9TZPnz5N1YsVK3bz5k013ZgzZ47oQ926dXNy
clT2n9EsKv1w69at1apVkzphqVKl9uzZoywZHx8fEBAA96Bi4eHhzu80oxqN
K9uYMWPgJK6urkFBQSkpKSRlFpXtzJkzZMQHm83u2rVrypQp6ruRnZ2dlJQ0
efJk2kVkZKTKioxmUeOHYWFhRYsWxRUvXbr00KFDhw0bVqVKFXyFce3atdKS
EyZMMP0X1M3H3jO20Liyde7cGU7SsWNHqdGisuERqV7ZHOP+/ftFihTBLjZt
2pRPu2CeGmr8sGnTprjclSpVunTpEln+/vvvl156CcYXX3xRWvKDDz4oZ6Zk
yZKsbFpA48rWunVrOMmgQYOkRovKtmPHjrwrGxqED9MJyczMVBZAJoJdLF26
1OFdMBrBph/eu3fPxcUFl9vX11dqP3jwIIx4xt24cUNZ6/vvv2dl0wIaV7aW
LVvCSUaMGCE1ypRt9erV9erVK1OmDBnx4RkzqJtbs61atUKBnj17CguaWr58
OZ7OIpvw8PBA9pGcnCytiKwEm/z9/dUfL6NNbPrhtWvXyBMCAwOl9suXL5P9
119/VdZiZdMIGlc2SBCcZOzYsVKjTNl8fHxMlmjYsGFuzXp6eqJAhw4dhGXx
4sWiYokSJSjrBNWrV5dGhqRssoc4UxhR44d16tShwRDpnJHIDkSKKoWVTSNo
XNmaNWsGJ5kyZYrUKFO2xMREJAjvvfceGQMCAg6asZKWypTt4cOHUDNYatSo
gQcxvqampiIUrFix4tatW6UVy5cvj2KzZ8+265AZDaLGDz/55BNyquHDh6el
pT0xL+p44403YGnXrp3FKqxsGkHjyoacEU6CgEpqtDjOtnDhQvXjbDJlO3v2
LNWdM2eOtFh2drasYuPGjVFswIABKvvPaBY1fggdozksUK1aNT8/v5EjR+Iz
HnBxcXEWq7CyaQQtK1tERAQ5SVBQkNTudGX7559/aKy4devWiNasVHz33XfJ
ydPT09UcAqNZVPrhhQsXxEJxwW+//ZZbeVY2jaBNZUPkHxISUrt2bXhI5cqV
Hzx4IN3qdGUDvXr1ouqIEmfMmHHlyhWLFSMjI2kIrnfv3hBeXrJbeFHjh7jc
tICte/fu3bp1E6Ov9evXz81DWNk0gjaVLTAwkNwDfnXs2DHZ1vxQNsRgECvx
UHZ1dR04cKDFA1yyZIl4iMtmTplChE0/PHv2rLu7Ow2yIS2F5dy5c3369BHi
ZvEFFlY2jaBxZWvfvr1y1VB+KBtx/Pjxfv36UWYK8GH9+vWyMvDYcuXKsbIV
dmz64VtvvYVLXLFiRZI1waeffkpX/4svvlDWYmXTCNpUtvj4+EmTJtGyWOiP
7OXi/FM24vLly+PGjaPUA3+vXr0qNsXFxdEsaoMGDRYtWpSRkWFzX4w2semH
VatWNSnWUhLPPfccNnXu3Fm5iZVNI2hT2Yg1a9aQk8je07SobNAZMv7+++82
W7aubMSXX35JDUrDNuitybyINykpSc0hMJrFph/S2u/p06crN/Xo0QObIH3K
TaxsGkHLypaZmenq6gonWbBggdRuUdlWrVpFxhUrVthsWalsQUFBst9eg2dS
g1999ZUwtmvXDhY4tpr+M1rGph926tQJ1/r555+XvWeXnp5O0wpvvvmmshYr
m0bQsrKB+vXrw0lGjx4tNVpUNnqbD7Rs2TI2NvbBgwe5rTh6olC2lStX4muz
Zs3gjeTG58+fpwWZ4PDhw6IipSEzZsxQfbiMRrHphwEBAeQAvXr1EgOqN27c
ENPo33zzDRmvXr165F/EKNzChQvJcvbs2fw+FkaJxpWN3kEYMmSI1GhR2R49
ekTvwhAI9ooVK2bxrfYnCmV75513REU3Nzfp73H17dtXWpEe1j4+PuqPl9Em
Nv0Q3jVs2DByA3d39xdffLFFixY0ygr69Okj3E8MXFjEw8PjaRwP8180rmz0
RjyUR2oU/iabWTh+/DjFVETx4sVPnDhhsVkKBbt06SIs27Zte/XVV6UOCWFE
bCZbkUuzon5+fir7z2gWNX6Ix+XixYurV68udYyKFSsGBgZK309ZunSpFWUr
VapU/h4JYwmNK1ubNm2UymaFhw8fIvjftWvXyZMnHfifBX/99Rf6RtXv37+v
LMC/YqQb1PshHCk+Pn7fvn2hoaFJSUm8PLtQoHFlo7f2vL29HdiR00FuS09h
2e+pMoURu/yQKXRoXNlGjRoFJalQoUJuL7M8TTZu3EjKxtNeOoCVTd9oXNl2
7twpBvY9PT2RFDiwx7yzbNkyMYIHmeUFujqAlU3faFzZcnJy+vXrJwZjC+o/
4on/yufi4rJ8+fIC6QPjXFjZ9I3GlY2IiIgIDAz08/NT+U/0nE5kZKS/v/+q
VatU/n9SRvuwsumbQqFsDON02A/1DSsbY0zYD/UNKxtjTNgP9Q0rG2NM2A/1
DSsbY0zYD/UNKxtjTNgP9Q0rG2NM2A/1DSsbY0zYD/UNKxtjTNgP9Q0rG2NM
2A/1TUEpG8MwTH7DysYwjP7gbJQxGuyH+oaVjTEm7If6hpWNMSbsh/qGlY0x
JuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbsh/qG
lY0xJuyH+oaVjTEm7If6hpWNMSbsh/qGlY0xJuyH+oaVjTEm7If6hpWNMSbs
h/pGZ8oWFRUVFhZ2/PjxfGqfkfKUz/b169fDzKSmpua9NVY2fVMolA2eHBMT
g/soKyvLeklPT0+TydShQwcHOsbYi11n++LFi+PHjx81atSlS5cc292mTZtM
ZuAJuZVJTk7G1ri4uIcPH1pvjZVN32hf2WbNmuXm5kYuHR0dbb0wK5tKlixZ
0qdPn8GDB+elEbvO9sCBA+kiDho0yLHdqVG2mTNnUhkvLy/r3mLTD0+fPh1r
laSkJFmVM2fObNiwYe7cuevWrUOBnJwcOw6PcSoaV7YDBw6YJCByg/H27dud
zCQmJsrKs7KpBJpGp/Tx48fWSzrrbL/11lu0xylTpjjWZzXKNmfOHOEtdevW
taItNv3wmWeeMVmlRo0aovCtW7cGDBggK9CjR4+0tDSHjpXJKxpXtjFjxsBD
XF1dg4KCUlJS6DbEk5E8Bx9k5VnZVKJe2Zx1tq9fv45gxt/fH9fRsT6rUbbs
7GyEUpMnT6aSkZGRuZXMu7I9//zzVBL6CeUnY8uWLceNG/f666/T1yZNmrC4
FQgaV7bOnTvDPTp27Cg1hoeHs7LlEfXKpp2zrUbZiPv37xcpUgQlUSW3Mjb9
8MqVK5csMX78eOpGaGgoldy1axdZPv74Y1EdCSkZd+7cacdBMk5C48rWunVr
k2JkZseOHdbvtddee01Y4uLikMPC1a3vKCsrC8ViY2NtjjznBcQtEAqVQ+gJ
CQkRERFIBpWbkpOT0c7Nmzcd7ol6ZcuPs20FRDiHDh2yeIrUKxsoVaoUSi5d
ujS3Ao7NICAlL1myJFoeNWqUMNLgHuyIGKWF27ZtCztCOHv3wuQdjSsbYnv4
xogRI+jr6tWr69WrV6ZMGfJwfHjGDIpRAbrX3nzzzdTU1NGjR1erVo1KFi1a
dOLEiTLHI+CrXbp0cXd3p5LFixf39vYWenL69GnaxSeffKKsGxISQlt3795t
5SggUH369KlatapIZFBl7dq1smKtWrWCfcOGDdeuXaObAlSuXFkUgAoFBATU
qFFDtFO7du0tW7aoPJlS1Cibc882AhuqfvjwYZnRy8sLn/fs2YOjdnV1pUae
ffZZ2RRAbso2ZcoUahmprjCWLl0aJaUWGY4pW7du3dBsrVq17t69K4w4dhgr
VKggKwy/hb1du3b27oXJOxpXNtzs8I2xY8fSVx8fH5MlGjZsSAXoXsNNUbdu
XWUxabJABAcHizsX95SLiwt9hutevnz5iXkI5bnnnoOlevXqyuHod999F5tK
lChhZSylV69eFvsMli1bJi1Jnf/0009Jz4mePXvS1szMTHwWdiiw+PzZZ5+p
PJ8CNcrm3LMtdOm3335TGhH2UP4oBXHX33//rSwsVTaR9EFzHj16JOykbL6+
vrkdnQPKBu2lfckeZBs3blQeGmjSpAmMw4cPt2svjFPQuLI1a9bMJJlNQ3x1
8ODB9957jxwJAcxBMyJRonuN6NGjBzKpP/74AykJRQJly5aVJkoIzMqXLw87
/m7duhUJaUZGxsqVK4sVKwYj9kLFcHdQgwcOHJD2DTEJDTL369fPyiGg8yjT
vn37bdu2Xbx4MSUlZc2aNRQiIsiRrtCTdh5peGhoKPKyEydO0FbIF23q27cv
JWs4NMQDJrMmo2WVp5RQo2zOPdvWlQ2UK1du0aJFOF7ks0LbP//8c2VhoWzH
jh2ji9WoUSNpEAXoys6ePTu3o3NA2Tp27GgyT7nKTtrNmzcRsJnMYZtoEx9I
q3/99Ve79sI4BY0rG0nH4sWLpcaFCxeSh+c28gOQPErdT9zIJ0+eFMaRI0ea
zKmTLLuhWAXxG7JCfMVfulVlq79++eUXahN3tJVDQKa2f/9+mXH69OlUF9ql
7DySMkRo0vJQDLqFu3fvLrXjdoYgmOwfzFE/zuass21d2SAX8fHxwn7hwgWS
BW9vb2Vhul64Lgik8bVixYpKYW/cuDE2DRgwILfjslfZzp49S3v/6quvlFsh
XyKPRp/RVfQKn8eMGaN+F4wT0bKyRUREkKsEBQVJ7TbvNSiDzC5ylr1795IF
dyINMitXq966dYsKIz4hC8Ikk3mIWJp10ooUJLM234xQgrubdrF582ZZ56G0
cXFxsvLQdioPiZNtoqk65SFbx4nKpuZsP7GlbOJUC2rXrg37K6+8oiwMZXvw
4EGbNm3w2c3NDX6i7DYNFCAqTk9Pt3hc9iobnh3kA//884/FAsg6Tf+lQ4cO
vFi3oNCmskFAQkJCyLcrV64MN5ZutXmvKdch4BajKmK8HU95ssyfP/9PBfTW
AzJTKoygiwqvX7+eLPDYKlWqwII7SOWBI8bYvn37xIkTIQWVKlWiBpcsWSLr
/KuvvqqsO3ToUJM52VF2ddq0adhUtWpVld0gnKhsas72E1vKJhuhAtA0k/lV
AmXhI0eOULwNvvjiC4vdjoyMpKivd+/ekD6lwtilbDhLlG9aHHmAf1LOjscc
rq+YSUEHpNk08zTRprIFBgaSb0A9jh07JtvqwL0mMkdxrwUHB5tsgR1RYTGP
IFbWiXhSNvhmkejo6B49eljchXTyzsrysBYtWljvqru7u81uSMlXZVOe7Sf2
KxsU3pSLsr3zzjviwHFic+s5nhrivbzk5GTZVruUDVG08noJqD/ly5f//fff
n5gHYL/55hvx8LKYvTL5jcaVrX379jdu3JBtdcq9JlZX1q9fv1cuQP1ECzSP
gKcwzZl++OGH+Arvlc7HWUSkZkgzu3btSm8Unjhxwi5la9q0KZXPrau4uax3
Q0ahVjaCBhPA1q1bLfY8LCyMBiHzrmyrVq2idpSZ7+nTp2lTQECA1J6UlERJ
R+nSpfN1kSRjEW0qW3x8/KRJk8h1cePI7j6n3GsxMTFk+fLLL9V0W8wj+Pn5
4WudOnXwecKECdZrXbhwgWrByaWjZxZjACvKRiEfkh2bQqSSwq5sL774Ih55
FEhXrlxZ+cYWznCJEiWwtUGDBosWLcrIyJAVsEvZaDQAzyblqN3KlSupS1eu
XJFt2rBhA22y8pIXk09oU9mINWvWWHQMOCrZKfiXov5ew71Aq9dkr25ZgeYR
XnrpJaFLNj129erVVBIdkNrtVbapU6fmFjM4hnplc8rZfuJUZatWrRrJiFhg
JpboCPBkhN3Dw0P5ixyEXcrWvHlzk3kCV7kJOS/1QTad/UTy9BQDtsxTQ8vK
BlehgGfBggVSu0gNVqxYIati173Wv39/pdEKoaGhVJ6GrxGGqZeFkJAQqV3M
dapUNrHkoEmTJrL5FCWQzS+++OL8+fNWyqhXNmedbScqm3SuvHfv3hZboJV+
Vkbh7FI2en+kdevWyk2HDh2iDiBCk21CeE+b1LwOxjgXLSsbqF+/Phxj9OjR
UuPBgwfJYVq2bBkbG4s7XSR6dt1rx48fpxWz0M/58+ffuXPniXmeC+2/8cYb
ytEbMY9AzJgxw2b/w8LCqDAavHTpEmQEHfb29haNqFQ20K9fP6rStGnTo0eP
0vje1atX586diypiuC8tLY2W3yMilS6Wk6Fe2Zx1tp2obFKhSExMpKwTriKN
muhKWblG6v0Q153Ce6iocitOCNJhkzk+3Lx5szifP/30E3WsZs2aDqwLYvKI
xpWN3kEYMmSI1Ii7mIa5COhSsWLFyKvtutfA9u3bixYtKpqqVKmSWG8pvacE
n3/+uSiM29xm/+HStDiEoJepQb169ehmUa9s9+7do3fNiOLFi4vhcelxRUdH
C+OsWbNy65h6ZXPW2c4nZQMI6ckufeOATruPj09ux6XeD69fv07ti/eXZZw4
caJs2bJUBtEdek5zBybzcjs8htTshXEuGlc2estGOfGHcEsaPuE2p7eQKMbr
0qWLrLxYpKFMPGNiYnBvmiTAGwcOHIgEUNkfODmtkhLvTtoEoZqY2STxnD59
ekZGRqNGjWTKllvnBajl6+srbiICsvPtt9+KFDU7O7tr1660qW/fvrk1NWzY
MJXK9sRJZ/uHH34g45EjR6wbCXqVSapsorDM8fD4QDG6cDRzDUj2abrHIur9
8MKFC7RfKxHgyZMn+/TpI3v1tWfPnufOnVOzC8bpaFzZaJ25xSUNDx8+hPjs
2rULTpX3WfW7d+8iEti9ezdSLYs/CUJApshpkb2qbxzpTHx8PBp3ip+jtT//
/DM4ODg8PNzibxwBWjiqJl9WiXPP9lMgn37FyDq4HIjQdu7c+fvvv/MPThYs
Glc2+uVJ6cuDBQv9Lg0Sydxm3LTAP//8Qy8tyt5KMw5IlukBpPypKEF+KBuj
HTSubKNGjTKZ3ypSLhZ6+uBBTINyVrK8AgcXhYbFpD8IaTTEzwqFhYXlVoaV
Td9oXNkQ2IuxL09PT+nPQTw1Tp065ePjM23aNA8PD5N56XtCQsLT74ZKaOC9
S5cu9EMlRmPZsmViSBAPROUCXQErm77RuLLl5OSI1Q4mFf+VLz8Qq2Rp8Hzb
tm1Pvw/q2b59e0BAgLNeVSh0iP/K5+Lisnz5cislWdn0jcaVjYiIiAgMDPTz
88vLL/87zOLFi1uaGTt2rMUJU0Y7REZG+vv7r1q1ymZczcqmbwqFsjGM02E/
1DesbIwxYT/UN6xsjDFhP9Q3rGyMMWE/1DesbIwxYT/UN6xsjDFhP9Q3rGyM
MWE/1DesbIwxYT/UN6xsjDFhP9Q3rGyMMWE/1DcFpWwMwzD5DSsbwzD6g7NR
xmiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/q
G1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaY
sB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG50pW1RUVFhY2PHjx/OpfQNy
4sQJnNLDhw8XdEecDCubvikUypaamhoTEwPVysrKsl7S09PTZDJ16NDBgY4x
FunYsSNOaZUqVYQlOTkZ1yIuLu7hw4cF2LE8wsqmb7SvbLNmzXJzczOZiY6O
tl6Ylc3pKJVt5syZdDm8vLxsXhHNYtMPT58+HWuVpKQkZa2rV6/u2rVr3rx5
69evP3/+/OPHj/Op/4x1NK5sBw4cMElA5Abj7du3O5lJTEyUlWdlczpKZZsz
Z464InXr1s3JySnA7jmMTT985plnTFapUaOGtHxGRsaQIUNkZZo1a/bHH3/k
75EwltC4so0ZMwbu4erqGhQUlJKSQk/AM2fOkNvgg6w8K5vTUSpbdnY2wpXJ
kyfTVYiMjCzA7jlM3pXt+eefF4WvXbvWvHlzshctWrRhw4Zly5alr+XKlUtL
S8v342H+i8aVrXPnzvAN3FxSY3h4OCvbU0OpbMT9+/eLFCmCTZs2bSqQjuUR
m3545cqVS5YYP348uV9oaKgo/N5775Hx7bffvnv3LiwIZTdv3lyqVKmVK1fm
97EwSjSubK1bt4a3DBo0SGrcsWOHdWV77bXXhCUuLg45LG5D6zvKyspCsdjY
WHtHxVNTU6PM/P3332rKJyQkREREIKGW2bHfU6dOHTt27N69e3Z1QD0qTwU6
gDAMORRFyPRwUSobwG2LTUuXLs2X7uYzjs0gJCYmlixZEkc9atQoYYTc0VDw
gAEDZANrcI+8d5VxAI0rW8uWLeEwI0aMoK+rV6+uV69emTJlSNnw4RkzKEYF
SNnefPNNeNTo0aOrVasmEoSJEycijVLuAr7apUsXd3d3Klm8eHFvb2+l8ig5
ceJEu3btRG6CXTwjoX///lSsVatW+LphwwYkLG3btqXClStXFu0gs+vevTv2
S5sQCLVo0SIsLEy2u/T09EqVKqGpjz76SLZpwYIFtNMbN24II+133bp16k8F
pBWPEhcXF5FGff755z179sxN2UqXLo1N/v7+Ns+VBnFM2bp164ZDrlWrFgVm
xLhx43J71DIFhcaVDbcnHGbs2LH01cfHx+KIR8OGDakAKduzzz5bt25dZbGP
P/5Y1n5wcLDQSVdXV3FTw3UvX75spWNHjhxBeRIiLy+vmjVryvYFsZJ26dNP
PyWVJiAXtHXXrl2kD0r8/Pyke/znn3/IjvtI1pnZs2fTJoinMNJ++/Xrh+6p
ORVbt24tUaKExZ6YrCqbr6+vlROlWRxQtj179tDZ2L17t9ROV79Tp07O7B+T
NzSubM2aNYPPTJkyhb4ivjp48KAY0wgICDhoRjwr6XYmevTogbwVWRXSJVKh
smXLSnMxBGbly5eHHX9xXyMhzcjIWLlyZbFixWDEXnLr1aNHjyCeKINbOzw8
nIzLly+n/c6ZMyc+Pj45OVnZJUREoaGhhw4dQryHTQixEBeRPH7yySd//vkn
pAkdIIWBMSgoSOzUMWVTeSquX78uBBbPkdOnT1+9evXHH3+sU6eOFWWjs4e9
276Q2sMBZaMhRzw0pSnnzZs3ZQ8LXAWk8ziBTuwtYy8aVzaan1q8eLHUuHDh
QvKl3MbZAIRC6n6DBw8m+8mTJ4Vx5MiRJnN2FhUVJW2EIkPEb1KhkIIbn1pD
sia19+rVy2Se6LfYJaSimZmZ0k1Dhw4VEi214/yQ/aWXXhJGh5VNzalAvk9G
mUzdu3fvhRdeyE3ZGjdubDIPLlk8SxrHXmU7e/YsnaKvvvpKav/999/JvmLF
iu+//55OF9G0adPffvvNyf1m1KFlZYuIiCAPkYYuT1QoGzREZl+3bh1V2bt3
L1lws9MAOO50WeFbt25RYUSDFju2adMmKiA7EOqYm5ubdBqCugT9jIuLkxbO
ycmhsWiEf8ppCySztAvcOGRxTNlUngoPDw+TefRPOb+Q29woePfdd7GpWrVq
6enpFk6TtrFX2WgwDZcMF0Jq//XXX+l8NmnShD7gZNKVNZmHOJDDOrnrjAq0
qWxpaWkhISG1a9em2+3BgwfSrTaVTbnqA3cxVdmyZQtZLl68SJb58+f/qYCm
unKbr8eDmOr+/PPPUvtHH30EY4UKFZRdevXVV2WNYC/UyOTJk5W7EPqzceNG
sjimbGpOxeXLl8ny/vvvK3tiRdmQc9HCj969e+MxVLiW7NqlbBB/XFaTedxS
tmn37t0iSMM5DwsLw3MKp2L9+vU0K1S/fv1C/RpaIUWbyhYYGEiughvq2LFj
sq0OKNsvv/wiu52Dg4NNtsCOLHYPgQ1J3+uvvy6MUB70FsYuXbqo6RICUdrL
119/rdyFSEjnzZsn2neKsilPhXjR44svvlD2xIqygSVLloh338TQYqHALmVD
vE3HqJwIjoqKok0NGzb866+/pJvEa2hKH2byG40rW/v27aUrGQinKNuuXbvI
gkdqr1yA+uXWQwgOVUfaiGLbtm17/vnnTeasE9GLmi6JDsgG2YjDhw8/NWXb
t28fWb788ktlT6wrG0IUmgTRt7KtWrWKjlF2cZ+Y5wtoE4I02aYTJ07Qph9+
+CHP/WXsQ5vKFh8fP2nSJBoHw70pW/3oFGWLiYmxcjvbJD09XSwXEXh4eCgT
2Ny6JDowbdo0ZftiKO+nn34ii1A2Zc6YR2UTEyIWe2JF2RDJ0DRugwYNFi1a
lJGRoSyjWexSNprrwWNLOaII56Ssc/r06bJNV65coRNbSBczF2q0qWzEmjVr
yDFkbybiJiK7GF0XqL+dU1JSaPWa7NUtldC7z8hGfX19BwwYMHLkyK+++kqW
jFjvkugAshjlCFX//v2pw+fOnSNLdnY27ixYvL29ZYXFK5yOKRvuVrI0b95c
2X8ryoanD+m5xV+90Dh2KRu9E1q3bl0rW1944QXZI1gE3iEhIXnsLWMvWla2
zMxMWny1YMECqV2kBitWrJBVUX87P5Goh9SoBgQnNPklphetYOVV1n79+lEH
NmzYILUfP36cRAyx0KNHj4S9atWqMOKvdET6xx9/pLPksLI9+XfdIEBmKi2M
S1yxYsXclI1ewejRo4fNk6BB7FI2OvOtW7e2uHXjxo109nbu3Cm1i7U0CN7y
2FvGXrSsbKB+/fpwjNGjR0uNBw8eJIdp2bJlbGzsgwcPxIIKu25nCAi9VAVl
mD9//p07d2BEa2j/jTfe2Lp1a269SktLo3CrT58+CFegM4/NWCxsRdlwAkUH
kLD8/fff9+7dQ/opfiZCthpKLAUZM2bM9evXkUV+9tln4r2JvCibmOCDYuM+
ReaL+PObb74RqxcsKttzzz2HTTNmzMjtRGkZ9X6IiJpOcu/evS0WgAPQkmaE
rxC3R2ZwQenx1LdvX2f2m1GHxpWNYgmkflIj3EasjSdZKFasGC2Ctet2Btu3
byf3IypVqiTiHy8vLysdo7cpZRQvXhwJS69evaQ/V27950e+//57WjhBiM7A
qFzbL/u1OqJMmTIff/xxHpUN4LZVNg5o7Y1FZaO5YB8fHysnSrOo90M8ROhU
iPeXlRw6dIiWhYASZugzIl6LYxRMfqNxZaN3Ld955x2ZHdJBAYOQFHpfiWI8
2bqLJ5JFv8rEMyYmBre/9F52c3MbOHDg2bNnrXRs8+bNFnVACJQI+XLrkuDI
kSOvvPKKtDqqQH8sFl6+fLl4eR+BRNu2bU+ePCmmAKTKZu+pQGQyd+5cEaSZ
zLlwcHDw2rVrSd+UnaFZUdn7rYUF9X544cIFOiHWo9OLFy+++uqr0gclHn+5
vcbC5DcaV7Y2bdpYVLYn5hQA4rNr1y7c2nlfCXn37t2oqCgkZUhsLf4OhpTD
hw/DgRFWrVmzBuWPHj2KujCuW7dOvLtk7+gTEkCcltDQ0Js3b1ovmZ6ejt3t
3bs3P34hB/EwdHLPnj1qIg0D/oqRTdLS0sLCwn799deUlBSnN86oR+PKRj8O
ppwNLFioV8rl6E/MykA/M1K1atWn37GnCdJ/0nAEdQXdF0fIJ2VjNILGlW3U
qFEm8/tKmppdQpqGXg0fPly5CQEV/RLa//73v6ffsaeJmBBU/pRcoYCVTd9o
XNl27twpxr48PT3j4+Md2KPTGTBgALpUrFixzZs3S1dlIC9+9dVXaZzNyvsL
hZ1ly5aJQU48dArXAl0BK5u+0biy5eTkiEVfJhX/le/pEBMTIxZmIOvs1KlT
9+7dGzZsKKYPli9fXtB9zEfE65AuLi6F90hZ2fSNxpWNiIiICAwM9PPzszm6
/tQ4ffr022+/Tb9RKShTpszIkSMTEhIKunf5S2RkpL+//6pVqwr1kbKy6ZtC
oWyaBYnYhQsXILwIJtX86wRGO+jJDxklrGyMMWE/1DesbIwxYT/UN6xsjDFh
P9Q3rGyMMWE/1DesbIwxYT/UN6xsjDFhP9Q3rGyMMWE/1DesbIwxYT/UN6xs
jDFhP9Q3BaVsDMMw+Q0rG8Mw+oOzUcZosB/qG1Y2xpiwH+obVjbGmLAf6htW
NsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf
6htWNsaYsB/qG1Y2xpiwH+obVjbGmLAf6htWNsaYsB/qG1Y2xpiwH+obVjbG
mLAf6htWNsaYsB/qm0KhbKmpqTExMVFRUVlZWQ7s8emQnJyMHsbFxT18+LCg
+8LYhpVN32hf2WbNmuXm5mYyEx0dDcuSJUv69OkzePBgB/aef8ycOZM66eXl
Rf1ktIxNPzx9+nSsVZKSkqTlHzx4cPTo0aVLl/r7+6PltLS0fO0/Yx2NK9uB
AwdMEhC5wQhNo6+PHz92oAP5xJw5c0Q/69atm5OTU9A9Yqxh0w+feeYZk1Vq
1KhBJbOzs3H1ixUrJt1atGjRiRMnPnr06GkcDKNA48o2ZswYOImrq2tQUFBK
SgpJmTaVDe6Nh/jkyZOpb5GRkQXdI8YaeVe2559/HsWuXbvWokULshQpUqRx
48YtW7YUWUbfvn2f0vEw/0Xjyta5c2e4R8eOHaVGbSobcf/+fbg3+rZp06aC
7gtjDZt+eOXKlUuWGD9+PLlfaGgoiiHrbNKkCb6OHTv29u3bVDchIeG5556j
YqjyFA6HkaFxZWvdujV8Y9CgQVKjY8p2/fr18PBwlW6GACwqKgpVlJvOnDlz
4sSJBw8e5Fa3VKlS6NvSpUvV9415+jg2g5CYmFiyZElc31GjRgnj5cuXd+/e
LSv5ww8/kJeuXr06j11lHEDjyobAHr4xYsQIqdEuZYuIiOjTp0/VqlVFEoEs
Y+3atbJirVq1gn3dunU3b94cOHBgmTJlKLlo3rz5nj17UODRo0dz586tU6cO
NYJ04/PPP7fYgdKlS6OAv7+/ymNkCgTHlK1bt264uLVq1bp79671kpGRkeQq
Pj4+DnaRyQMaVzYIDsX5UqN6ZevVq1dugyTLli2TlvT09KRRkWeffVZWsmzZ
sufPn7fY1IoVK5Q7JWXz9fVVeYxMgeCAsuEZR9ddGaEpwYOPCgcHBzvYRSYP
aFzZmjVrBt+YMmWK1Khe2VARxdq3b79t27aLFy+mpKSsWbPG3d0dxmrVqklX
x5GyEf369fv111/Pnj0LoZPqWIsWLdBOQkICgjey1K1bV7nT8uXLY9Ps2bNV
HiNTIDigbB07dqSLbt3xEN5///33NIng5eV17969PHWUcQiNKxvNTy1evFhq
VK9sqamp+/fvlxmnT59O1Q8dOiSMQtnmz58vjPBJBGxkR8x2//59sem1114j
+99//y1rv3HjxrAPGDBA5TEyBYK9yoYnHV3xr776ymKBv/7668MPP3zrrbdE
2F+/fv3Tp087p7uMnWhZ2SIiIshDgoKCpPY8zo3+9ttvVH3z5s3CSMrWtm1b
WWEaVwGyKYMFCxaQ/eTJk7Iq7777LsWE6enpDnSPeTrYq2zjxo3DZS1ZsuQ/
//xjsUBMTIw0wocDxMXFOaevjP1oU9nS0tJCQkJq164ND6lcubJMVRxQtmvX
rm3fvn3ixInQrkqVKlH1JUuWiAKkbB06dJBVJJkCsiWXq1evJnt4eLisSmRk
JC386N27N8SZl+xqE7uUDZ5WoUIFGqnIrcytW7cQqLdr16569erkG3AD2XAu
89TQprIFBgaSb1SpUuXYsWOyrXYpW3R0dI8ePUyWkE5f5qZso0aNsqhsGzZs
yE3Znpjf/xJrNZOTk212knn62KVsiL6UPpMbcMsDBw7QEDFYt25dnjrKOITG
la19+/Y3btyQbVWvbHAqKlm0aNGuXbvia2xs7IkTJ/Jb2cLCwsqVK8fKpmXs
UrZVq1bR1UQQrrIK/JbWGrVu3drBLjJ5QJvKFh8fP2nSJFryCrWRKZhKZbtw
4YKrqyuKIauVjnhYfP46UdnQfokSJbCpQYMGixYtysjIsH6wTIFgl7INHTqU
no92jZ1SLRcXF5uL3xino01lI9asWUPqIXsHU6WyiaGwX375RWrPb2WDJsPu
4eEh+y0IRlPYpWzNmzc35bLI54k5/bRoHzJkCDnJzZs3Hesk4zBaVrbMzEwK
uhYsWCC1q1Q2xEtULCQkRGpfvHhxvipbu3btYO/Ro4eaY2QKCruUzUpeefz4
cWyV+dgT89t8FStWpJQhj11lHEDLygbq168P3xg9erTUqFLZwsLCqNgbb7xx
6dIlFI6NjfX29jb9Sz4pG70KPWPGDJXHyBQI6v0wJycHGaXJPNmt3Priiy+a
zNOg48eP37dvHxLP7Oxs+B69Jg+mTp3q5K4zKtC4stEEE6J6qVGlsmVlZVWp
UkXoGL3IDOrVq0eOmk/KRjvltwU1jno/RPRF11r2/jJx6tQpLy8v4WZFixal
RINo1aqVlR9PYPIPjSsbvRH/zjvvSI3Dhg1To2wAoVrTpk2Fm1WqVGn69OkZ
GRmNGjWSKRsFh126dJG1QMrm5uYmW5a2ZcuW3JSNZkX9/PxUHiNTIKj3wwsX
LtC1zi0OT0tLmzBhguz33MqUKePr6yt9b4V5mmhc2dq0aaNUNruAIsXHx+/e
vfvcuXMON2IX/CtGhQK7/FANiM0QvyEhDQkJSUhI4H+HUbBoXNnolye9vb0d
2FGBkJmZSY9s5Q8lMZrC6crGaAqNKxslgxUqVLhy5YoD+3r6bNy4kZQtLCys
oPvCWIOVTd9oXNl27txJQuHm5ubp6Ym80oE9Ph2WLVsmfiAaUswLdDUOK5u+
0biy5eTk9OvXT4zKavm/3Yn/yufi4rJ8+fKC7g5jA1Y2faNxZSMiIiICAwP9
/Py0vJY7MjLS399/1apVCQkJBd0XxjasbPqmUCgbwzgd9kN9w8rGGBP2Q33D
ysYYE/ZDfcPKxhgT9kN9w8rGGBP2Q33DysYYE/ZDfcPKxhgT9kN9w8rGGBP2
Q33DysYYE/ZDfcPKxhgT9kN9U1DKxjAMk9+wsjEMoz84G2WMBvuhvmFlY4wJ
+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFl
Y4wJ+6G+YWVjjAn7ob5hZWOMCfuhvmFlY4wJ+6G+YWVjjAn7ob5hZWOMCfuh
vmFlY4wJ+6G+YWVjjAn7ob7RmbJFRUWFhYUdP348n9pndAMrm74pFMqWmpoa
ExMD1crKyrJe0tPT02QydejQwYGOFQhr167t37//6tWrVZZPTk7GeYiLi3v4
8GG+dkz3sLLpG+0r26xZs9zc3ExmoqOjrRcuXMp2/vx5078kJCSoqTJz5kwq
7+XlZfNsMFaw6YenT5+OtUpSUpKy1qNHj06dOnXy5MnHjx/nU88ZNWhc2Q4c
OGCSgMgNxtu3b3cyk5iYKCtfuJQN9w4dV7FixW7evKmmypw5c8TZqFu3bk5O
Tn53Uq/Y9MNnnnnGZJUaNWpIy8fHxwcEBOCi0Nbw8PD8PQDGKhpXtjFjxsBJ
XF1dg4KCUlJS6Dl45swZch58kJUvXMoGdu3aNWXKFPUnJDs7G6HC5MmT6QxE
RkbmZ+/0TN6V7fnnnxeFJ0yYINsaFhaW78fA5I7Gla1z585wko4dO0qNeBrq
Rtkc4/79+0WKFMGRbtq0qaD7Ulix6YdXrly5ZInx48eT+4WGhorCH3zwQTkz
JUuWZGXTAhpXttatW8NJBg0aJDXu2LHDurK99tprwhIXF4ccFlJgfUdZWVko
Fhsbq2ZkPi0t7ciRI9i7snBycjKEV2VqaQVEp7iJ6NJkZmYqC5QqVQpHunTp
0jzuyLA4NoOQmJhI2jVq1CiLBb7//ntWNi2gcWVr2bIlnGTEiBH0dfXq1fXq
1StTpgw5Dz48YwbFqAAp25tvvpmamjp69Ohq1apRyaJFi06cOBGpnHIX8NUu
Xbq4u7tTyeLFi3t7e9++fVtaBjkj9kLZx/Llyz08PKjwihUrqACEKCAgoEaN
GiIZqV279pYtW2weYKtWrdByz549hQVNYReVKlUSTWF3w4YNg2ZKK5YuXRqb
/P39VZ5JRoZjytatWzec9lq1at29e9diAVY2jaBxZcONDycZO3YsffXx8bE4
4tGwYUMqQMr27LPPioFcKR9//LGs/eDgYKGTrq6uLi4u9Bmue/nyZVEMSR+M
UL+ffvqJ0kDi999/x1bEVJAmYYQ2is+fffaZ9QNUps+LFy8W1UuUKCF2V716
del0Gymbr6+vyjPJyHBA2fbs2UPXYvfu3bmVYWXTCBpXtmbNmsFJpkyZQl8R
Xx08ePC9994j50GYdNCMSEtJKIgePXogb/3jjz+QskG1YClbtqw0LUVgVr58
edjxd+vWrUhIMzIyVq5cWaxYMRixF1GSlA24ublBuKAn0DS4N2WjkC/a2rdv
X6SQsGCn7dq1I7W8ePGilQOUKRsahJqZzPNuv/76K74i+ESkWrFiRfRQWpF6
Pnv2bJVnkpHhgLJ17NjRZJ6StrKig5VNI2hc2Wh+CmGM1Lhw4UJyntzG2cAn
n3widb/BgweT/eTJk8I4cuRIkzlRjYqKkjZCkeH/be/M42u69v5/zGPNY6tq
5jFc3Koa2wfltjQefZ4Yila5RN3bq9WnNbZFzIkxaMVYc1FCDEWkLyFCQgZD
rpgSRMRQkQSJhNTv8zrfn/Xazz7n7LPPvLPP9/1HXmevvfZaa+/93Z/1/a61
9g78t9u3b1OKUDZ4UOi4pZkhYqSEH3zwgTQd0UqlSpWQPmbMGIUTlCnbhQsX
qKIpU6ZIs5nG0S1atEC2AQMGKBTOKGCrsolbs3DhQoVsrGwaQcvKFhERQUYS
GhoqTbeqbJ07d5alr127lg7Zv38/pUD3aBAeoifLfO/ePcoMb5BShLINGjRI
llkEj5A42S6aRDNtjGmDhbI9fPiQIuIOHTrAW1M4cNiwYchWu3btR48eKWRj
LGGrsqGHwgUvW7Ys7pFCNlY2jaBNZcvOzt63b1/dunVhITVq1MjLy5Putaps
pqs+IGh0iBjVR5BIKdOnT79qAr31gMiUMgtlO3z4sKzkTz75BOlVq1Y1LeSb
b77Brlq1aimcqWmDP/zwQ6oL/ur48eNv3rxp9sDIyEgagvPx8UEXwEt2bcUm
ZUM/iFuMq+3r66uck5VNI2hT2YKCgsg8ataseerUKdleO5QNiiRTtr179xqs
gYoos1C233//XVbym2++qVxIyZIlFc7UtMHwwSBW4vDixYvDUTR7qRcsWCDe
O5PNnDJWsUnZEhMT6TpbnYxmZdMIGle2rl273rlzR7bXKcoWEhJCKY0bN/7Q
AlA/yqygbK1bt6ZdlgoZPHiwwplaanBsbCzcAzFXix/r1q2T5cGzQ0N5rGx2
YJOyBQcH03WGe6yck5VNI2hT2ZKSksaOHUvjYHjqZVNRTlG2mJgYSpk/f77V
NisoW+/evQ3GlXX2vQGt/NLEjRs3xowZQ1En/qalpYld8CJoFrVp06Zz5szJ
ycmxo3ZvxiZlozGHokWLWh3VZGXTCNpUNmLVqlVkJLK3I/EgUzotJ5OiXtky
MjLII5K9umUWBWX7+uuvVfbmZlHzOhi0l6qQum1QfoNxEa/ZL04wVrFJ2dq2
bWswrvewmpOVTSNoWdlyc3NpHdqMGTOk6SI0EK8ACNQrG+jfv79polkUlE0s
BmjVqpVspkMNpg0ODQ2VvbSFZ4SqkK43oPVy8BhtrZEhbFK2WrVqGYwT1lZz
srJpBC0rG2jcuDGMxM/PT5oYFhZGxtO+ffv4+HjoCUIz2mWTssXGxtJLVdDP
6dOnP3jwAIkoDeX36NFDujJWQdmAr68v7W3duvXJkyefP3+ORESOU6dORUto
0xKyBq9YsQKbbdq0wXNBr4tevHgRjaHyjx8/Lg6sV68eUsaPH2/9IjLmUG+H
BQUF5N77+PiYzYB7feIl33//Pd2s2bNnUwr6Pme2m1GHxpWN3kEYOnSoNBFa
Ub9+fcNLoEulSpUiHbBJ2cC2bduKFi0qiqpevTp5iQbjpx1FNmVle/z4Mb0F
RpQuXVoM7Ft1CGUNHjx4sDiwRIkS4r1Xg/EFB+mBNWvWRKK/v7/1i8iYQ70d
pqen0y0Q7y/LEMMFZilfvrwz282oQ+PKRm/Em04vwt0ip0WISVxc3IuXPl7P
nj1l+cWiX1OdiYmJgbBITRGSMmjQIGlXu3nzZtqFLthsO3NycmbOnFmxYkVp
OZDfn376STlENW3wL7/80qlTJ2k50G34ZrKxaxLPgIAAhcIZBdTb4eXLl+lG
WPKQFy1apKBs5cqVc2a7GXVoXNk6duxoVtleGF+xhPiEhIQkJCQ4/k8BsrKy
oqKidu/ejcDW7CdB1ICw5erVq3v37j169KjsayG2cuvWLVwlOjuzn2Dirxg5
iE12yBQ6NK5s9OXJfv362VGRjkHoTf7AmjVrPN2Wwgorm77RuLKNHDnSYHx3
ydJLRt7J+vXrSdl4As5uWNn0jcaVbdeuXWLsq0GDBklJSXbUqCeWLl0qBhgh
+LxA125Y2fSNxpWtoKBArKkwqPivfLpH/Fe+YsWKLV++3NPNKcSwsukbjSsb
ERERERQUFBAQ4Pj/FyjsREZGBgYGBgcHq/z/pIwlWNn0TaFQNoZxOmyH+oaV
jfFO2A71DSsb452wHeobVjbGO2E71DesbIx3wnaob1jZGO+E7VDfsLIx3gnb
ob5hZWO8E7ZDfcPKxngnbIf6hpWN8U7YDvWNp5SNYRjG1bCyMQyjPzgaZbwN
tkN9w8rGeCdsh/qGlY3xTtgO9Q0rG+OdsB3qG1Y2xjthO9Q3rGyMd8J2qG9Y
2RjvhO1Q37CyMd4J26G+YWVjvBO2Q33DysZ4J2yH+oaVjfFO2A71DSsb452w
HeobVjbGO2E71DesbIx3wnaob1jZGO+E7VDfsLIx3gnbob4pFMqWmZkZExMT
FRX19OlTO2p0P6mpqWhtYmLis2fPPN0WxjysbPpG+8o2adKkEiVKGIxER0cj
ZcGCBX379h0yZIgdtbuHiRMnUoObNGlCbWa0hk12mJeXh7512bJls2fPDgsL
y8rKErvu378fb43c3FyXnANjGY0r26FDhwwSYF1IhKbR5p9//mlHA9zAlClT
RJsbNmxYUFDg6RYxctTbYXh4eLVq1aR2WLx48blz55L5LVmyxGCNVatWufZk
GBM0rmyjR48mQwoNDc3IyCBb0r6y5efnp6SkfPXVV9TOyMhIT7eIkaPSDuGn
FStWjO5jlSpV4IQXKVKENmfMmPFCnbJt27bN5efD/F80rmzvvfceDKNbt27S
RO0rG/HkyRN6CjZs2ODptjBy1NhhcnIyelXcwUqVKiF8oMT09PSePXs2b94c
XS02s7Ozr5sjISGhTJkyOLZz587stLsfjStbhw4dYBsff/yxNNE+ZYMF0qi+
gpnl5eXFxcVFR0dDlFQWiwIRI1vKX65cObRz0aJF6tvJuAc1djhq1CjcPvhs
Z8+elabDhGBOysd+/vnnOBbidvnyZQebytiBxpWtffv2MI/hw4dLE21VNsQC
TZs2FUHEK6+88sknnzx48EBkyMzMnDZtWps2bcRURdGiRdEvo3eWFfX2229X
rlx57dq1OMTPz6927doi/xdffIEgVJYfdWFvYGCgyvNl3IZVO0xNTS1ZsiRu
n6+vr62Fow8le+NOzVNoXNmgJDAPdH/SRPXKBqnp37+/2aEPaB3lOXz4MMTK
bJ7XX389JydHWmCDBg3I1Js0aWKaf8KECbIGkLLNnDlT5fkybsOqHa5evZpu
67Fjx2wt/K9//SsOxF+OQz2FxpUNfhQsZNy4cdJE9coGSaGc1apV27Rp0507
d5KTk/39/dEXb926lfKkpaUhZoQEff/998ePH0eUgQDz3XffpQOXLFkiLZCU
jejdu/fOnTuvXLmCfplGYypWrCgLS6tUqYL0yZMnqzxfxm1YtcMxY8bQjaY1
G8+ePTt9+nRsbKzVNYoRERF0II+vehCNKxt5U/PmzZMmqlS2y5cvly5d2mCc
0rp+/bp0171796Sb4eHhshTEqnRs9+7dpelC2b777jtp7aJJCQkJ0vwtWrRA
4oABA9SdLuM+rNphnz59cO9q1Khx//79gQMHVqhQgW4x+i8EETJnXgqFCdWr
Vy8sC8t1iZaVTfR9oaGh0nSVyhYYGEjZAgIC7GjnO++8g2MbNWokTSRl69y5
syzz2rVrqa79+/dL04cNG4bE2rVrP3r0yI42MK7Dqh126dIF965s2bL169en
mwuxEh57hw4dzEaat27dIgd+0qRJrmo6owJtKhtCwn379tWtW5c6zby8POle
lcr26aefUra7d++qaVh+fv7Jkychg/369WvevDnZJ6JUaR5SNoie7FgIGtW1
ZcsWaXpkZCSNJPv4+ECoedRFO1i1QxoJIcaPHw/JemGcVujWrRslrl+/3vSo
oKAg2nvhwgUXtZxRgzaVTZhHzZo1T506JdurUtnefPNNih2sNunx48cIeKU9
sqBcuXLSnJaU7fDhw2aV7YXxXTAx5YrnwmpjGPdg1Q579epFd23+/PnSdASn
NDH0/vvvmx5FoSgycC/mWTSubF27dr1z545sr0pla926tcE4d6BcV1ZWVqtW
rahAhI0TJ0787bffbt++TSbquLKFh4dXqlSJlU1rWLVDPz8/3DIEDqa7+vbt
i12NGzc23UULgWRryxn3o01lS0pKGjt2LC1zhYzIFEylsvXu3ZuyZWZmKmSj
oTAATZNOezlF2RITE2khetOmTefMmaMw7My4Gat2OHv2bNy4IkWKmI6Rjhgx
wmw4cO3aNRG9Ore1jK1oU9mIVatWkZ3I3rtUqWxffvklZVuzZo1CtldffRV5
OnXqJEt3irJBn5FYvnz5lJQUhTYw7seqHe7Zs4fu6fbt22W7evTogfR27dpZ
OmTjxo3ObS1jK1pWttzcXBrGp1ePBSqVLTY2lrIhoKBX/AT379+nZR4FBQXk
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
6O1RSzmzsrKioqJ2796dmJio/K9a1eTkrxg5HZvsEDf60qVLdI+Ul0lnZ2eH
h4fDPKRfb2Pcj8aVjb482a9fP1e2SOvk5uaSD7BmzRpPt0U/uN/yGXeicWUb
OXKkwfg+lDfPLompNzgDnm6LfmBl0zcaV7Zdu3aJAagGDRokJSW5smmaY+nS
pTQrSvLOC3SdCCubvtG4shUUFIh1GgYv/q98xYoVW758uaeboytY2fSNxpWN
iIiICAoKCggIsPV/FhR2IiMjAwMDg4ODL1265Om26A1WNn1TKJSNYZwO26G+
YWVjvBO2Q33DysZ4J2yH+oaVjfFO2A71DSsb452wHeobVjbGO2E71DesbIx3
wnaob1jZGO+E7VDfsLIx3gnbob5hZWO8E7ZDfeMpZWMYhnE1rGwMw+gP9yub
O2tkGFPYDvUNKxvjnbAd6htWNsY7YTvUN6xsjHfCdqhvWNkY74TtUN+wsjHe
CduhvmFlY7wTtkN9w8rGeCdsh/qGlY3xTtgO9Q0rG+OdsB3qG1Y2xjthO9Q3
rGyMd8J2qG9Y2RjvhO1Q37CyMd4J26G+YWVjvBO2Q32jM2WLiooKDw+PjY11
UfmMbmBl0zeFQtkyMzNjYmKgWk+fPlXO2aBBA4PB8M4779jfvsJAamoqrkZi
YuKzZ8883ZbCCiubvtG+sk2aNKlEiRIGI9HR0cqZvUTZJk6cSBekSZMmVq8J
Yxab7DAvLw9967Jly2bPnh0WFpaVlWU22/3793/99ddp06bt3r07IyPDaW1l
bEfjynbo0CGDBFjXC6P9dDeSnJwsy68/ZTN7slOmTBHXpGHDhgUFBR5sYSFF
vR2Gh4dXq1ZNaofFixefO3fun3/+Kc02YcKEIkWKiDxFixadN2+eS5rOqEDj
yjZ69GgypNDQUHSCZEvnz58n48EPWX79KZvZk83Pz09JSfnqq69oV2RkpAdb
WEhRaYfw04oVK0bXuUqVKnCShXzNmDFDZPv6668psXz58h07dixTpgxtwsdz
4TkwltG4sr333nswj27dukkTjx496j3KpnCyT548oadsw4YNHmlboUaNHcJP
Rq+KK1ypUiWED5SYnp7es2fP5s2bi3gzMTGR7tFbb731+PFjpGBXs2bNkAJV
vH37tivPgzGPxpWtQ4cOMI+PP/5Ymrhz505lZXv33XdFCqwOMSxEQLmip0+f
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
l24JYjf8RjCybNkycl3gp925c0f4byhw1qxZ/sah/tjYWKuPtqmyoSWHzCFd
HHLy5EmSDtJVBFDYhC8hMiCS8pfML6g8RzXKlpiYSMK1e/dukYho/ddff129
ejUaBjdVTOBevnxZ+fStYvaOu2H03lP1Fl4Ki7JZHSNFXOaK2QS31UvKJnpe
kgIK7gTkgNFoFTQkICAAnTXECu5KaGjojRs3aGwNGaSDWgjl8JjT0w0ZkQ3F
yzBVNojMcnNcvXqVMkDHUDgaIyYISLIgKdJCkBIRESEt2eo5qlG2/fv3k2qZ
DuIJxPwCBFmhKJXI7rjbRu89VW8hpVAom8oxUqeP6ruzXpmy0dAZdAYhm8gT
FBSERCEpiFCwCU8MfxGVkNZt3LiRiqKxdMEff/xB+bdu3arQDFuj0eTkZBwC
Zbt06ZJIxENHXqJIgf+GlPj4eOmxVs9RjbIFBweTakl9yIcPH54/f15s4iZS
Hqkb6QjijuOs3Tl676l6CyOFQtnUj5E6d1TfnfXKlA2iCoVBinhC8eSSDojR
JJoARcft/3KlFoJTZEAz0GbKA/cJjzn9xg9/46JZhWbYpGxoLdxFU8kC69at
QzrcxTzjGhXo1ezZs2WvR1k9RzXKRmvwACJQkUhOGp79EydOIEoV0SgFuU6B
7rhYUemK0Xuzb9/gdES98MDRo7nz7ZtChPaVDdaofoxUOtbqYF/m5nplykYN
mDVrFp5cxFDh4eFoCTJERkaKDGLVlvCOoqOjKYXG6qEP8+fPRxcPicYuWl9h
diEEQrm9RkgE6LfyMwLVwvmSECGE3PkSWokHsaLgF9Ex/Ar8RrxsWojyOVpV
Njz7dL5otlgIh86F9FYGwl6717OZIu6460bvtfb2TeFC+8qWkZGxYcMG9WOk
eJxXr16tvGpLg/WiL5aFVHlG216wYAE9mHhao6KiZO8ZkcN28OBB2sRDTZmF
F4T4ZdWqVeLphriZXT4BZ89UCpQ9HKGiMoSCobW0lA6ys2PHDkuCr3COCQkJ
ysomzhfqLU1HJI6gm4SXGoDLK3xXZ4E7jljYdaP3Zt++AfBIccVwW83uddHb
N4UO7StbnjFscWl+rdUrBY95eno6jNz03Un13L179/r1605/tK2CC4KWW/1G
h1PO0WyxOHH4ltJxPOfi/kvq2XoLEYVC2RiGYWyClY1hGP3BysYwjP5gZWMY
Rn+wsjEMoz9Y2RiG0R+sbAzD6A9WNoZh9AcrG8Mw+oOVjWEY/cHKxjCM/vCU
sjEMw7gaVjaGYfSHO5WNYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRjGG/h/flS78A==
    "], {{0, 610.}, {207., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{207., 610.},
  PlotRange->{{0, 207.}, {0, 610.}}]], "Output",
 CellEditDuplicate->True,
 TaggingRules->{},
 CellChangeTimes->{3.867251576350164*^9},
 CellLabel->"Out[15]=",
 CellID->1824905835,ExpressionUUID->"6b7c6148-e7d7-4c57-af16-91bbb6722057"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"fc24128b-f809-4fa4-9ed6-cda4be4aa711"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2271dab3-f4e4-4f8a-b8d1-21db651d37f4"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"d329beab-94ef-41b5-a9f5-04f7566ce969"],

Cell["Faizon Zaman", "Text",
 TaggingRules->{},
 CellID->1083795939,ExpressionUUID->"927385bb-9bac-4642-8dea-52d97d4abf8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e75123ca-4442-4682-92c4-754e71c642ef"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"02dcdd08-5633-4f03-8307-cf31fdc3171b"],

Cell["https://github.com/dishmint/LexicalCases", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.867247575944808*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"940fca56-a6ba-47f1-a95d-15f502cb8e9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f0c7f9e2-19eb-49d6-ab3a-a8f5a0622575"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"c9335256-d9f9-4889-b011-e32e4053d617"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"cc79b8d4-f8b6-4169-973a-1f2d7bd321db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "42966366-6eb3-40d4-9a5d-c4895247844c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"9fb28bce-e0cc-4eb5-8465-561e248334ed"],

Cell["lexical cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.8672507891270027`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"d74175c3-43f5-4071-b93c-ebb0d0c2a401"],

Cell["string cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250792465765*^9}},
 CellID->1995096266,ExpressionUUID->"2aaaacc6-1700-43e2-9959-ef1a563ade5b"],

Cell["string search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250796416108*^9}},
 CellID->969775666,ExpressionUUID->"35a1bbae-a10e-484c-96f9-a4a1c7946609"],

Cell["text search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.8672508000836782`*^9}, {
  3.867251745601468*^9, 3.867251745603298*^9}},
 CellID->1657720019,ExpressionUUID->"fae41bc6-1e06-40c3-8f2d-af96a8af3b19"],

Cell["text cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.8672508000836782`*^9}, {
  3.86725174684802*^9, 3.86725175043145*^9}},
 CellID->925073988,ExpressionUUID->"e2a58efc-40b0-441f-a69f-783536e09006"],

Cell["search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.8672508030060787`*^9}},
 CellID->1547162085,ExpressionUUID->"438ba183-08b6-491d-88ef-a039c528c923"],

Cell["text analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250810710026*^9}},
 CellID->1260957434,ExpressionUUID->"495f602e-1c59-422f-ae2c-0b5aed8773a1"],

Cell["text pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.8672508168203382`*^9}},
 CellID->1239550090,ExpressionUUID->"f4e14b8b-e477-41a0-bf80-b7e772bed479"],

Cell["text pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250823230261*^9}},
 CellID->882324921,ExpressionUUID->"4087c344-dc0f-477b-a578-70b76b144c0e"],

Cell["pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250825483983*^9}, {
  3.8672517619021187`*^9, 3.86725176190336*^9}},
 CellID->1516644615,ExpressionUUID->"b65d4f7d-9d78-473b-9a2c-83faf287ee43"],

Cell["lexical pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.8672517663016243`*^9}},
 CellID->629062074,ExpressionUUID->"40147839-01bd-463e-a3c2-20a2663a143c"],

Cell["lexical patterns", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.8672518013344173`*^9, 
  3.867251801335786*^9}},
 CellID->2113172454,ExpressionUUID->"2dfc0a53-28bc-48e0-81bf-1bd13e0cb480"],

Cell["linguistics", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.86725180333738*^9}},
 CellID->1094251332,ExpressionUUID->"21378409-f0d0-4332-95a5-eb529a634793"],

Cell["text mining", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8672507855818777`*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}},
 CellID->2136157625,ExpressionUUID->"1c33fae2-debf-421c-8c9d-0ac7852965c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"8ae29e7a-5587-41e3-85e9-523af7117a99"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Data Manipulation & Analysis", {
             False, "Data Manipulation & Analysis"}], "\" \"", 
            "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Visualization & Graphics", {False, "Visualization & Graphics"}], 
            "\" \"", "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Knowledge Representation & Natural Language", {
             False, "Knowledge Representation & Natural Language"}], "\" \"", 
            "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Social, Cultural & Linguistic Data", {
             False, "Social, Cultural & Linguistic Data"}], "\" \"", 
            "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Strings & Text", {False, "Strings & Text"}], "\" \"",
             "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellChangeTimes->{{3.86724758651194*^9, 3.8672476289184504`*^9}, {
  3.8677894685980997`*^9, 3.867789468688512*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->969880382,ExpressionUUID->"9f3fc8ec-c38a-43f3-bb5d-a09e193c6808"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "27fbb9e0-1124-4958-9988-39500a2d9976"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"fa35cd26-80c9-47bf-b309-1cb978146dfb"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"11488ea5-db8a-4068-a0b4-689306d6cda8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f07baab5-2671-4c04-9790-6e26ab34c095"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->53755805,ExpressionUUID->"a71c79c4-fa4a-4b4e-8536-57451a99c10e"],

Cell["Source, reference or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"9a2755b9-60ab-49cc-ae16-41a8252c8d2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "58257629-6b2a-4042-b6b5-6e658227eee2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"699d42b3-20e7-496c-97eb-15b7b562044a"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"9da1fdf5-f6f4-45a6-89e3-4ddb55c8c8a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "612d4c44-844d-456e-96a8-dec475fb88ee"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"80dddf25-2831-49ae-b91e-2f50a9ff3e09"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33110bbf-05be-459f-949b-2240f50c1c1e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"913a3ac9-1a41-4777-b9b5-898cc6502758"],

Cell["12.3+", "Text",
 TaggingRules->{},
 CellID->402052919,ExpressionUUID->"3b9a28e4-a014-4f0a-847f-aced7e397aec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8270769b-db68-4c03-8329-a9f349b17e7a"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"8ccb0211-3522-48df-b836-2297bca901a3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN2KwkAMhWFbtcLiE/\
gKfQjpKggrFbOL3k7b1B12OjNMMui8vVFo8S7JOfnysylKmAEngzCvI/vIJSyqP2z/\
seszyr81MSzO2nbuRjA/qLaGC+S/Vt+lcc840GjrPyg/\
RQFN9jGYlEz6R8hUfMFGZHEMzmPgBOvKDV6xbrTRnGopSmKvkEiGypK1Z+3si/0+\
nYptp1k1Es12yhBOwvILDb4rz0udiYOlKithtbeMwQexPMGw3NgEsSGUj3yekFwMLf4kL486qlZID5\
UKaxo="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->159509385,ExpressionUUID->"2814df8c-5307-4b39-92c4-392159b0a39c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a72a9a90-5935-44b6-bdbf-7c9fd5166add"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"d1a0c9cc-4d05-46bf-8f18-41b391665cae"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Notebooks", {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellChangeTimes->{{3.8677698258990593`*^9, 3.86776982597851*^9}},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->716444359,ExpressionUUID->"87ab5338-5c8c-4a51-8f38-e8c9d9bc723d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "31e6c398-d416-497b-b91c-e70b364cdf81"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"da12ddb4-3e60-4cfe-bdc7-f73fec43af7a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RZBhmDhmqwZydRialjG0su5O/\
nlMTJ9uSTTtzp5GOawx54VAiHk2frOYek6LG9YndJaPcliSEBJJJGwwFaJy1DBr65otOo4PkHm/\
ImlBd8nwjlsa7CRNtj5xV2kL4JbvtP0wSninGgRffyQLtzGFn1FxCZxXB+Y3+zwAoj+2+nv+\
WqPa86vxvtuPoKIxvTbHOltTMWHY/wWpjBBp9GKsnj6lrqm3RGD6inA5/\
s1KNJdHsISstOsmgC2n8IRRiJ7B0Vbpnpl4zyg6biMYeXSjM668LIPXF21GM4C2EwezojGe9a/\
B5tCF2LNij9AojVrVE="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->991332972,ExpressionUUID->"3b2a8e8a-6242-4d0b-a3e7-03afe79fa6ec"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2ce238d2-2281-4afa-8e80-88f49799155b"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"33c67e2c-075e-45c1-ac71-cdab0fe398cb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellChangeTimes->{{3.8677698033892193`*^9, 3.8677698034761677`*^9}},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->92922911,ExpressionUUID->"feec92d4-859b-43c7-881f-6f3d9c7b5074"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bd59449c-6c11-4395-95bf-711e63a860f2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"9c1318cb-21fb-4fce-9d86-644a361d0ffa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Local files\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VE1uUzEQpm3SJm1UNrBhZSGWhAOwqZrXFiKlahXnAu7zOLHq53nyT9vHlkNwGY4Al0\
AsEWdg7CQvDSp4Y3vm8/ibmc8+7Q15l4fGAN+/iqGOYcgPigWUtyDVM9+ZaE+\
W7jhA5dXOcq92fWcaDdB+b4r3aZvNO743FfcjfABPtqMZVLURAcigOksIf3mmfWnQRwd+\
gqUwF9oQuus7BRhDEQ4IfSaCUPu+d+FElU/\
vLt38826xQPTAwkJ7hnXQaJlWrMHoWC1KA4FJ7aAMpmESwTNhG4aK8MAUGoP32s6ZjC5NBoVMMzpm0\
VXCsOjFHN4f/vjylRUOiLp/\
yyRQVIpEqAqlVprWJjFnKlHP4HFVowueSSLOlMNqC5FSJLLgROLrmYNUFckCru9dUdfWB2FMhhFz2T\
IUDhg8lFDTsXd8cIkOxlbhDB7aXvjDkShv5w6jlVTG/\
gcnmgncgXEqj98nLXKQ63op3JwuLF5sImR71sJ2hO/f0vi1iXA8TdcQsynxi77otp7+\
uKIScv0JHqlin1MxQK7i/Dzx/dMYsKI8y38k0z9LVRc3tOzMXITW0Us6mIl5q0X+\
hlO7qWDrOE8LbH3+KJ1fpd4yXM3FqBi16+\
fFc7pi8BGNLJB0TBqg53B8fidMzA3KgnxVGF3ekrSSOKhJmgi4Kvv567E12sKa11UNFtwohoB2/\
TL40WSjE3644TvkvWuXJBOabfPBVRa9V3vbT/G/\
iVFX7AKcJvU8Wrapdv8yLgt9LvWyAd0LYTw81ZqlJ/0XaGJl/aO+Dvnx2AZwtSNsLkf/\
1DY83nig72QwBU9PtoRZU9O/c53l/wdcjJ+8"},
 CellTags->{"CheckboxCell", "LocalFiles", "LocalFiles-Checkboxes"},
 CellID->454797044,ExpressionUUID->"7e1f5011-041d-41c9-841d-0010633df020"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Wolfram account\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VLFyEzEQJcRO7MTjNDRQaago8A/QZOxzAp5JJhnLDLWi27OF5dOhleIcFX/\
BUPEjfAL8RIaS4RtY6eyLHQhX2NJq9+0+7Vv1Wz3e5K7UwPcuvCu86/\
H9ZAZyDmn2CBtnCsnSHDlYYLZT7bPH2Bh7DbTfHZtl2EbzDrbGYjkwN4BkO5zAotDCARmyRuXCnw4V\
Sm3QW8B3RmdWLPpSGp+\
7rImNBLQmlH2KGAonsj1snZJHRHhcHfOvu8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS\
2Yy8geWGa3NUuXTVwe3n7+\
xMXzw5IovmcfwayyjQGPTKkjlmbELETNYCFRS5kzwtbefviBbEWCjYUQb5Q6skA7ZUrlZzFe7Jtr4l\
ImKasizjl2ZIkBigXJQHSkQC6qc/\
BYmVZmi9RacjHDm6j3RxM3YEAI3IH1YV14pFNqUVDrKGaTUNiIhcF6FvcXaT1pIlaPslORaSVgbNqt\
dmWLouZhDfQd9XcwEk0Jr5J1zY2FEdzeBm1oreDAQcj61RDalFrdfW1GewTVom8Xv93Ht2Yk9Pxd2q\
nJMntwhRHvU6jbCj+/h+3WH0B2HNNTmsUiVx6RZn7RHCzEFrj7Chmr3OBUO6Qrn5zG2+\
96Z0Hj5AJn2MHRIXNGyMbEe6oNW0OhETOtZ4S849YgUtMZ5eADWGIcBY0W/rnL1nwySQb0+\
So4oTeeN0WliaNZIMzSy3ZNroX1UbRyYZ4lWck7SD2KysKlq/nyUa5XDuraLAnKwA++cydfTy4/\
uSZV3t+vu8dalNQVYV/59tH8RBxSz3e2n478kqUv5DKyiedtY1rSb94zVxZ+QMGNDmqdCI/\
yrVdVJeN+M9oscN/rc4904voUl33g17X5ecn+FQCw6Y0B6XiRMyoLeycv4yvwBt4/oNQ=="},
 CellTags->{"CheckboxCell", "WolframAccount", "WolframAccount-Checkboxes"},
 CellID->707443347,ExpressionUUID->"d3e0246e-73b5-4d4f-a3d1-db336e78ad91"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["ExternalServices", {False, "ExternalServices"}], 
            "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"External services\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uEzEQJm3SJm2UgsQTvFg8AWouwEuVbFOI1CpVnAu4u7OJFa+9eOyky0W4C+\
IIcAnEI+IMzHqTbRuV+\
mHXnt9vZj570O7zFneFAn4w8S73rs8PowXES0jSZ9i8lEiS1thBhmmjOqd72Jx6BXTen5p1eQziBra\
nYj00t4AkO55BlivhgARpszLhr88lxsqgt4CjWwdWC8XBrmRMPi1sRqAUxTkkn3PhRHqA7QsrshBjr\
1Lzb41oYQwCcwuJzOROGs1kygrjLctFrMCxRFqInSpYYgCZ0AUzKdkDS41SZi31/MPRr6/\
f2ZVYkt7CZw/\
okDnDYIOK4QYWe7twLj9laflBXJwycPG74B1ZoPoIg2Ue6b9xYbHRmtITrmDGQScMMiEV8u6VsTDWq\
ZlRom0j8Wgo4uXcGq8Tqr7z0YriElagbBrW37PashvacSXsXGqMXt5FCPIwyIcRfv4o15+\
7CL1pmYY6MBWJ9Bi1ak1nnIk5cPkF7o30gMdCQbKJ8/sMOwPvTCacjP9TTOccaATihrbNmfVQK9rl+\
GZiXhOJv+dVm7ZxnmLHNspxGWXTgBrn5h8No2G9P4lOKFH3k1FJZIiK4IAY3RuthPKizBrY9CpSMl4\
SLyzLCAWTBMNmQc/fjLWSGrboJjlosEPvnNFbcvMXo13C8Oe72Pu8fW1NDtYVjykPJ4HDmO4/\
vF9PlkrT0guw0kFyb1sX39oRVgMYJbIaTOtCKITHRlZpykfAKJ9pvDfvPu+NNYHPLdmGBnUGuuD+\
BoHeiO4UkG5gDLMip8fkOlzEf85ukpM="},
 CellChangeTimes->{{3.8672502805575943`*^9, 3.867250280665283*^9}},
 CellTags->{"CheckboxCell", "ExternalServices", "ExternalServices-Checkboxes"},
 CellID->746227322,ExpressionUUID->"442a7a72-4a1d-4ce3-8446-04ab12bb78ff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates, modifies or deletes \
symbols outside of the Publisher`PacletBaseName` context\n\
\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, 
                 CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"WL system configuration\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyFVM1uEzEQpm3SJm3VXkBInCzErY24I9Sq2bQQKSFRHKlXnPVsYuK1Vx5v2+\
VFeBkeAQ68AuKIeAZmvUmaVi3sZe3xzOdvfj6fNVq8zn2hgW8Pcp/\
lvsV3ohnEc5DJE6z1FJKl3vWQYrJR7ZNNrI1yDbTfGtnrchvMG9gYieu2vQEk294Y0kwLD2RIapULZ\
x2FsbaYO8DLHi+QcCNrEjXNnfCKVnWsRaA1ge1QYEd4kWxj48KJNABtVsf8x1Y0sxaB+\
ZlCZrMylqmEFTZ3LBOxBs+kchB7XTBpAZkwBbMJ+\
QNLrNb2Wpnpm92fX76yyAHRRJaBQyIJxjNtY6EZxjOQlKhkXuAcg3PfSpUo8r7sMQz8mXUMzJVy1qR\
lLIL3hH3P/\
e3Rq6Hws6OTY1p2AjPrinJL4ahSpYULEV2DXmhNhKVUZVpEpEoIS1cJGRgJJibQdfbHLF1eFbzIn5Z\
YpBNLWDb3qCQsCzDMJ1rhDNzHYUBuC4QPVOGPLLbGw42/\
UxfCU2lmHREw1rSyMjimLEaAVO0YBpNPlM3RSRVsquC+mFPoBRXFnxu5IBeHHuMiTw+\
uTG4mjNRUer7ftw66JrFjYrAcMtxti3g+dTY3koai+c6JogdXoF0Svj+nK8/\
9MCV94abKYPT0FiHYw5DfRfj+rfx+3yIcjMprqHkjIVWOUX110uymYgpcfYa1cd/mNCUgFzi/\
TrF5lnubUpLxI8k0O2VjxISWtbHLYXXQKKd6LKYrkfHXnIpK1Vri/Fc5S6i9EmpRhRXZxT9qR+3V+\
jA6pNv231stI0tapYkhyR+cXwmdB8igtBcRdXtOmnHURAdMEReXhnP+\
smu0MrCkOKDRBNfOvbdmqX7+/FYo8Tpf/uzBNFq8MXSWpOiLRz12BkHvmGzdfZD+\
mTq10NDEKw9ybbkqRv2eserKOUkwdKt+ITTCQ32sTspX0+o8Nbg2BC1+EKY8c+\
Qbcm6emYLnE3oiWnx/qZ9xkdHrWynxL9i8CFw="},
 CellTags->{
  "CheckboxCell", "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->406353161,ExpressionUUID->"784b8a6a-d56f-4a25-9259-fd5fbbd1f8e6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"OS configuration\""},
              "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9VF1uGjEQLgkESBDpQ5/yZPWtirhAVTWCJWmRgogwF3B2x2DhtVceO2R7gt6gl+\
kR2ktUfax6hs7uwoZEafyy4/\
n5PDPfzA47A97iPtfAj2bBZ8EPeDtaQbyGRL7C5rVC0rQmHlKUjeouD7A5Dxrofji3m+\
JaqhvYmYvNyN4Dku5kAWmmhQdSyGblws/GCmNtMTjAGY+\
skWoZnPCKpBY2I9CaYNoUMhZeyCPsXDmRlhAHlZl/\
bUQraxGYXylkNitimZIst8GxTMQaPEuUg9jrnCUWkAmTMyvJH5i0WtuNMsv3x7++\
fWdTmyipyGXGGYL3ZMDKINbbwEAvUfCHc54jNSFykIDxSujzj7w3tQ4mRtoF3NddweORiNdLZ4NJqJ\
buJyfya7gD7WR5/l7Unr2yuKlwS2UwevOAUOpLVh4j/\
PxRnD8PCP158QylPReJChi1akt3koolcPUF9vg54rHQkGxxfl9gdxi8Tan/8X+\
K6Y6BGipuSWwuXIDa0CnIWIhlPRX8HaeeExk7nBeo3oGcFCDb+us0t99oFI1q+\
TQ6pXd6n61OIktjBR5oOvuXd0KHErIcjbNIq3hNJDuWUhJMURYuLe387cRoZWCX3CwDA24UvLdmN6j\
8NY1BvJ8oP32S+YB3bpzNwPn8GVt7Vk4jysPHi/\
JincSUWYFTHpI9sa689URZNf8yURUprSuhEZ6jq7IU22x1SA3ucT3g/\
Ynx4DJHvmWd3aHJebilHRjw3hyQdimGRZ7RX+GmXKl/fRB8PA=="},
 CellTags->{"CheckboxCell", "OSConfiguration", "OSConfiguration-Checkboxes"},
 CellID->787398734,ExpressionUUID->"934eac79-334e-4172-826a-93fd7d59fc88"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "LocalSystemInteractions", {False, "LocalSystemInteractions"}], 
            "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], 
              "\"Local system interactions\""}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpm3SJm3UXpAQnKxeSw5cEaJqtmmJlNJqnT6AszubWPHaK4+\
ddHkRrjwIjwAvgTginoFZb35aRCv2svb8fP4883nOWl3e5K5UwHevvSu86/\
K9aArJDNLsGTaGEsnSHDjIMduq99k2NmKvgPY7sVlU22DewlYsFj1zB0i2gxHkhRIOyJA16hB+\
fC4xUQa9BRyaRCheIkEPtAMrEieNxqyJjQiUIrg9Sj0XTmS72LqwIg9Q27Wbf9mOpsYgMDeVyExRJT\
OZsdJ4ywqRKHAslRYSp0qWGkAmdMlMRvHAMqOUWUg9ebv/4/NX1r+DxDsK4VOCZsay+\
PYjS0yeC51iCLlFcsMd8dRCMZgL5YUzFtlcCvbupL/\
09GsHnLwPWauLIVtIN93kKzm2wkqosWMQKVanLqysWDjD0FkQeTCioWa4OnIovE6mFFIIK5QCxWYEC\
ApfM/Tj5bpKury5Rd65MhYGOjMjOnjVNdzviWQ2scbrlGrcvrSiHMIclM3C9/\
t0HdkJRb8SdiI1Rs83CMEeVPMQ4fu36vu1QTiMq2OozrFIpceoufa0B7mYAJef4J5+\
djlJAtIlzs9TbJ95Z3LhZPLIZdrnQI0WY1o2RtbD2tGqRDISk7Vq+RsOQWErnP+Q4grsoAJb1mFNd/\
mPelFvvT6Kjui8zgej0siQ/\
MEBvaLDpSoIM0j3VaRkMiMRWpYTGSaJjc2Dnx8PtJIaViSvC9Bge945o1cPir8MfBkGwpS9YcxfPHK\
VLm/dWFOAdeUTMXvXRX3xnYcv/ckCUCv1FCrlpveW65I0/zLW3emnsu5a80IohH/1s/\
ZU48gon2u8J4YuPwzEC0uxoWztM11yP0agadWJAWkIJDAqCxprN2EW/AF5ZskH"},
 CellChangeTimes->{{3.867250302065955*^9, 3.8672503021991796`*^9}},
 CellTags->{
  "CheckboxCell", "LocalSystemInteractions", 
   "LocalSystemInteractions-Checkboxes"},
 CellID->595267108,ExpressionUUID->"584dccf5-e14d-4c7b-83ca-f78ea54f8450"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"], "\"Other\""}, 
             "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJx9U9ty2jAQbRIMpmFIH/rUl2r6Tn8hAyZpmUmGjMUPLNYaNMiSRxeI+43tX/Sx02/\
o2oAhvelFq72cvZzVOB7xiPtKIe/Ogy+DH/FessZsgyJ/5ToP0pEmmnksXH6xf+eXrpMGhfS+\
Ss2ufjbqCxensJuYZ3Sku15gUSrwSIq8s3fhb6bSZcq4YNHN/RptHrlOgkpRcI8cp+\
Ah77r43kLRBF7uzdyNhWAghPTSaFDM47Nn4JhGFCiY1AxI3rGMnNkSldkxb5gwWShQk6euzqPFqQrm\
10B2i0wbzxQVSXCwNFv8yAePxuJM52ZB2Y5du9cTyDYra4IWVHX/\
k4XqAbeobN6cn7et56Bp4xHsSmqXvD0hNPpm6i8Rvn2tz48TwjCt00i9SkHI4JKotfRnBayQyy94Nv\
8uz0ChOOB8v3X9cfCmAC+zfzTTn6JCD0sSOwsbsDXE9dgXsGpZ5+85ZvX8jjh/\
UHkMva5DD123xR3uZJJMWvkmuSH0wWejRGJoWdAj7dzwbgsqQJ2qof5domS2YbmxrKDUxDWJRWPnH2\
ZaSY3HkuYlarST4L3Rx/XjUVPd4Rrx+MmaEq2vWk1vXtZgLr96ud//\
bYQI0BQtaV3OxLa16DflfqZ3tIHNrKN7UA7/xsLeUn9Co0Kh3RmFIz6caY+\
2tOTbtN8f64qHpUP6o4MUnQk2w0VV0md+gowgfwHj7V7a"},
 CellTags->{"CheckboxCell", "Other", "Other-Checkboxes"},
 CellID->641642549,ExpressionUUID->"2ed40db4-8db6-4cf4-a78c-b0077545efa0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cffd07e5-1264-4289-a782-f19021ddd27a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"d7829688-ff71-48ce-b68d-c41422f9890e"],

Cell[TextData[{
 "I\[CloseCurlyQuote]m a Lexical Programmer at Wolfram|Alpha and began \
developing this functionality for a particular work task. I needed to look at \
adjectives that precede certain phrases, so I gathered article text from \
Wikipedia of relevant domains, then searched for the desired lexical \
sequences. I initially tried using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "55a6d6dc-eb35-49eb-9885-28728417b2c1"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2ece4776-7e00-481a-8ecb-a0bf034d4f85"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c2f74db4-ebe3-487e-a2e6-9ceabd0cde7d"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "35f8831e-3d69-4f40-935a-8833483ea273"],
 " for example), but it was slow. So I designed some lexical tokens I could \
use in a StringExpression to perform lexical searches with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "badc9e05-7048-4737-998f-5573d5b2e50a"],
 ".\n\nAlso, thanks to Swastik Banerjee for helping improve SearchIndexObject \
support."
}], "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250094577227*^9, 3.867250207482535*^9}, {
  3.867778469328055*^9, 3.86777850437639*^9}, {3.8677785407651854`*^9, 
  3.8677785669650297`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"b3e36472-f3e6-4c8f-8455-501eb357d0b9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{856, 847},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowTitle->"LexicalCases | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791539629535`16.34003804825544*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791539629535`16.34003804825544*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791539629535`16.34003804825544*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791539629535`16.34003804825544*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
              "\"Found 1 suggestion\"", ItemSize -> Scaled[0.75], 
               StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
            With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2d984b89-d565-4a2c-ac3d-16ca35ee9646"]]]]]], Appearance -> 
            None, BoxID -> "2d984b89-d565-4a2c-ac3d-16ca35ee9646", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791550814603`16.34003804951136*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5Bd1AP7hy5dSmCDnpmRg4M2OescSrD6\
WF7T543sWnBS9y+Bx8h6wFz3M/bB1xlBkOKkoNoRI3PePlGW1NEHBw8fNXLC+\
MDUsNpveuBwtOnvCN5GtsZIadKYGOwMgyHZPrmPzBozVUTbkopr7eJptkl9RQEoZYrYZL++\
bZWnRBifsXjXlEIg=="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2089c5bf-b38a-4209-95dc-a544c42fd0eb"]]]]]], Appearance -> 
                   None, BoxID -> "2089c5bf-b38a-4209-95dc-a544c42fd0eb", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.867791550814603`16.34003804951136*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5Bd1AP7hy5dSmCDnpmRg4M2OescSrD6\
WF7T543sWnBS9y+Bx8h6wFz3M/bB1xlBkOKkoNoRI3PePlGW1NEHBw8fNXLC+\
MDUsNpveuBwtOnvCN5GtsZIadKYGOwMgyHZPrmPzBozVUTbkopr7eJptkl9RQEoZYrYZL++\
bZWnRBifsXjXlEIg=="}, "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2089c5bf-b38a-4209-95dc-a544c42fd0eb"]]]]]], Appearance -> 
                   None, BoxID -> "2089c5bf-b38a-4209-95dc-a544c42fd0eb", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.310661`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.310661`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "d913fa7bc58e5fd60b9654501917ad33d6ffd1b32a719d96191c52852\
7ef92ac"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "d28cc9d3b3098d63f93ceefbc86ef788361e083fe45e954fdc98a95fd\
9431f6f"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "5f40d9dcb0c930ab06afd8de8cffe9d16f08b8374e9ffeece9a0b5c35\
9d12a33"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "2561a31d4cf300c04d0307e54c8b54fc937d8932b39a4bbde9fa5ae15\
0d140fc"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "809f307ec7b8c1e9cbc49b502be01d1021fdaf48745985db47b875bd0\
663f62a"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "b2d7f6e2957d4e533c3f2e99aab8d1827a4a8b4a74c6dbb4901fb61cf\
7e955b8"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1a26ec75e3a3ba1000281df3db2cde975accffa8ac25f6ee92180a6bd\
4cb4e9b"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "b978db651f5edffed0fc5ed0d335aaf24a5f1d51d42b67511f6b2f051\
3892f3b"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "a82abb0a74d61788c51c2210d2fef9c7be417ffbc851fcd70f08dfdd3\
5dc7db5"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "2a06d7bacbdd34535aacf8f430e5796dd5288b5dcaa73b070f56ee4c7\
b0c3159"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "c879245eeeb6636d3b4f3d01014b84d83498e8bc24b9dc3e42546f10a\
b7d64cd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "5d69dc945fe5d34409fafa403659f4f3d6f86d8619c4fc73cd452277a\
dea24fb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "59d0b23f2b79acc7ed63aecdae2633860037f25631b0fe687a2197ff9\
4f4305c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "ab8252d40e826697b9a2c021c39a217fbe842d2f2f699222e97768f82\
f6c0bd9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "7871b2279f0c7f1eeba1c5014088c1eccf5372b176a33874c59f37385\
74b85c9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "fbc7016a3100756d95ffc7a85f3fdc78d2228cfc56338c2e08a7ea779\
498b6d8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "a5b81d3a957b6cea6d680cfd7cc7a633a5265bb59a06829454df6136c\
506f9c3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "2197aa3c0b451f25dae8bc0ab843eace7f5e56bafd9f6bbabd5cef479\
1943375"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "acec0b04c29153d8eaea5170f37b815fb37898b9cf19580d1fe3ae7d7\
5ac1cda"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "627c37d71f14ac5dd38c758947ff1748f1af2650c671662b0b1be2fe8\
0920ced"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "d3f2a7c194084e86060f57b23b3a8c4727811fa0fbe90f3911f3f430b\
11e7fe9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "05d10c25f404737d701638343392fe7e38f919c513d292a580d187b0c\
07ec760"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "241a6e8a5781dbe4b39c424cc72d5f53b0b5d239a745d3f5f4dde280b\
b11d16d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "081eea634298b562473a1a9878a33c3f7cc6a4938e4588042081a576a\
8977661"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "a84c304abdb68d9059b42506fbd8a3abf35e34492e4cc47b0a5a479ee\
c8f512e"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d913fa7bc58e5fd60b9654501917ad33d6ffd1b32a719d96191c52852\
7ef92ac", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d28cc9d3b3098d63f93ceefbc86ef788361e083fe45e954fdc98a95fd\
9431f6f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5f40d9dcb0c930ab06afd8de8cffe9d16f08b8374e9ffeece9a0b5c35\
9d12a33", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2561a31d4cf300c04d0307e54c8b54fc937d8932b39a4bbde9fa5ae15\
0d140fc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "809f307ec7b8c1e9cbc49b502be01d1021fdaf48745985db47b875bd0\
663f62a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b2d7f6e2957d4e533c3f2e99aab8d1827a4a8b4a74c6dbb4901fb61cf\
7e955b8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1a26ec75e3a3ba1000281df3db2cde975accffa8ac25f6ee92180a6bd\
4cb4e9b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b978db651f5edffed0fc5ed0d335aaf24a5f1d51d42b67511f6b2f051\
3892f3b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a82abb0a74d61788c51c2210d2fef9c7be417ffbc851fcd70f08dfdd3\
5dc7db5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a06d7bacbdd34535aacf8f430e5796dd5288b5dcaa73b070f56ee4c7\
b0c3159", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c879245eeeb6636d3b4f3d01014b84d83498e8bc24b9dc3e42546f10a\
b7d64cd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d69dc945fe5d34409fafa403659f4f3d6f86d8619c4fc73cd452277a\
dea24fb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "59d0b23f2b79acc7ed63aecdae2633860037f25631b0fe687a2197ff9\
4f4305c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab8252d40e826697b9a2c021c39a217fbe842d2f2f699222e97768f82\
f6c0bd9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7871b2279f0c7f1eeba1c5014088c1eccf5372b176a33874c59f37385\
74b85c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fbc7016a3100756d95ffc7a85f3fdc78d2228cfc56338c2e08a7ea779\
498b6d8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a5b81d3a957b6cea6d680cfd7cc7a633a5265bb59a06829454df6136c\
506f9c3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2197aa3c0b451f25dae8bc0ab843eace7f5e56bafd9f6bbabd5cef479\
1943375", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["27 total \:203a ", ""], 
                    Style[
                    Superscript["27 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001947`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001947`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfdtz3Mh6nyjeKUrU7azP2a3EDE2n7ORQwq2BxuY4WmpIrhTrw\
hW4u47t1KqvJKIZYAxgKHGTVDlVeXWlkpOXVPnBf4dfXJX8BX5w2Y/JOVVJ+\
SXnyeVU5WHzNYDBADNDaTDD1WpIzgM5AzT6+/q7/L6vL+iWM/HSC/L6YfhGxHI+\
vvU4SETUjkRCEj8M4LKciRdehKqAnIvnnvhxIq/GCwfkEK54i16HMRHH3jWv02qR6OSRINyb+\
QM5G9/cOQlIy2dPQ95pCvX41eLxWU8k8Y2Dk7aIRfIybItgczOe3yPNWHTv3u3eFS0quAfsiM1Nb/\
4F1H8CZa4diFa7CRczDrOKZ+O1fRIITzQFS8KoSnPuBbDRJTIfL34e+bz6cPf/\
oqpE3VqIlx92kqQrhpW8RVm9H+/t7kf+\
MbDwci8Kg2Q34C9EHHYiJrzlvd2HftIi7di7mQsGHnoO7RSRYl6xsiOa5ETw+\
EZGYq8TMCXx06QzdxB1RNGMle12W5CIBCD8uWdh0Luz/\
JDEwktOmkJe6Wv78u4xaXYISCZe3u4kYQtUzIq7C09FchRyb2U/EiDbxD8uVbrd9A+\
DlgiSrkDjhYZQltL93yv6uEUOhed/K0Bii7nEiqcqdOcP/JaIoyvpZ/Wz4go8uNroRBFU/\
BUwLLzreyDfBmk/Ev7hkWJhfj98DTRn4rvbNA6bnUSUy8fXn5LDwJc+\
S2248R2oe2kvIq1UqbPxUioeZb7zG7/\
4059vQIXLO34ENqPaDPdffP6wETbDKPq19PPXD6I76eeXD6LfSz9/86Dxk6LFq14S+\
e3nweOg3Ul6VpzdvNEA1oGxfcK5Hxz2315J2Ur56dPjanrnKYkO/SAum7H637jSuNL//\
XReFnrG3q1npvjf9e3Zft/ud7L8UW9tY5+wpki2I3YE8trw5jY+Xd/wVqCeHSFJp5l4P8pt/\
nEiWttBEGZY4s3+6k/+rIQdf7Rx/8sYLOi+JP63YfAtaZHg/o44Fk0w+ej+E/EGFNhsgDnH9/fSIr+\
fFqncoB2/ycu3v/mmfH9Lv6fds+61U443CpRSjE0ig2sbB9CoprLWsdsP1Cp15+\
DqLRv3TF2zbf2lN7sRb3iLsWBhwGNvecPLvm14S190SJD4yUnPkLyTICFv9sKoFc8C5Fab2i11M7eD\
AXfulvAWwfA7rSAuSSfz3LknQvaKzUFrB8sMQZUVdQmgTiSi3/\
bXcmYUhylejMzLIJ3RGepS9cAmlEOOTLVxtT6xEhjP9YHxXe8ofK28NThsHAGSMwWm/\
SK69qwD0S8CFHg1cO8GRB/AFYAtP1YoN9vTclp1ag8ZsvQ/+j2bwexB2P5wDeCm0knTD8R+\
GPt5xM0UPNOYKUpl4fYHSRMazTAeO03ojy+XecJlnjBGnjB/\
mSdcxDxhgqbezNX9lIBHiTgZv73zpZZ3vy0M6U4uV7uTWwoJvZMY6n75DBgQXBnzS+\
DqFQBNF4M346wnuX17y7v2OIAAQJo7JCHbM1ve/J4PEpKfZPVuX93y5tQVJRX13/\
vod0UUiGbFsO69bkKxRyQ+\
8j7jrm5K4lCGsECS2xp1bWQhTXd1h3DT5LaUXKemQRzd5a4N1xkyMDIcIV2DsEGKP65S3CcJQGhQoU\
kNyV3DlLZmAT2X2pS5jgZETNfCmGg2QcjVgKCBme26hk4pdiS3XEQdTTMGaa7lNPebYVJtHtTAXG5S\
U3Mxt03pmkwISRm2hXQwNm1daNiUwkLCRZbkzMXEBUG4lqlLWw6SupWT8gjYU1WWrmFpYN5SMiyww3\
VLIMw1Tl2MOSbC0nSkIUfjgujYlZZtUIId4ghsSYmZGCLLOzmxLxO/\
CWqvkkPS0rjLGdWYa2qEgtgkx1xgJqVwuW5LDVNsOpZw4YJgwiUaRcxEcM8gpjlI7m5ODiKNz1M7L9\
MzkK0TU+cWk6amMc3imqk5AlkMUxAdMOFw7JoGNV1iUcqBLEFEQKNBFJoc0ryPD8Dm466lALx3WNKJ\
BBBNCqpYc6UiwxyKmS5cRpnlUqQZVGg61zVDl5xICzsWcjHi1IJyDqIcUAYMzCBDXKJCtesRPYrU4I\
60heEih4MKTZOZ0hCuSwjFXMeGQyyCqUUci9mcUsvVdEltnUkHTAhRPESuGcWKWHv0dGLY0DwkTGJS\
omtg4Vjn0gQ3YSBEBxEGGiWYMAMBXwL8AWvEpqAICrqlg/RuZ/Ry1+\
trnetgTm2kSyQ42AUHzcA3DXwdESINiyCpcwRqNqjtIB28ANxVQ7qJXUOaQ6jdyaiVbbRHjmCDUKqB\
sLitg8MxpDPD0DVuSAAQUKqwdEcqhwSOGHc0MFouOTcRZw6naJDcT3dC1lHpWirJ+7vBYdOPj+5/\
3vG56NNqQHvGC6jCHUoYhbotpNrKJJaWqQnkuDbnAGpgxpwR4phUAz4QiNoCBjVm6sgd5OPT4Xy8EF\
JAtsbEPiB4fN87adGwGd9/GHYCfhC+\
EkGZK4YdAA0khKBgrjbglAV613RNtyi2ODYtF6CEMsOi4OimsAxk2VIHZ3e4bTE+\
yNVuLa4awFWSB7gnKu1kILcyg4jbQNi1kBQI5GaBMxJJAOZsBAgmVXjANscQFhgggGMybiHDcCB0CG\
JYcoi1/E4tBnfftEnAuzGkzJjLNQohxKCOC/\
7hCAB3IhgnwrBNE9uaZjoSEMvUqSaFDThr6C4YmmspnaMhYPSzWoydZmeAEQYyuKUJbNi261CXGAxA\
igEoGmDpFNDeAOM3pApsBuCK49hYYvjNNMqH2Fk9jeZ87fgx5Jmqj61CYplBBzs6BRW5UmOO1MHyCE\
R0MDgNK3wFqEGmY1DdsSFEAKoyULTpmBg5YJKIDWHwn4/\
D4BCVAgg4mg5kAQIdZHMIw2BSBCNpQlwG1AJxQWxjSCmYGRC3IXYSx3HBSSgY4SBnn43DWS8MldUKu\
K5zE1IDh9pMEJvbWGOSO2B6BPghyLARpQhCrI0N8BeLS1s3bZCsDTA3JNaOJbXcVSvABmZNiAnGYwG\
CGgg8AAADEAJbpiBMOIDzyKaQGriA5JRQjpiQluPqkOKYzhCAreehz9uqFPQX+\
rENaANTmsUMV0cmx4IIgnQAVhMitI4kNR0MinOZ1F2EIUeQEACFw1W808GRBxnDtRjzADhe++\
yozJNtOAyyFEeXukUYglCAIfBi1wJk0B0LSx0ioI00Zju6DfmZRnUqIFJBEmJoTAzB23o8HYg3iUr5\
yzxxADHiMFCHhi0ByGVD7HEA26hJMLMcw8EQhIkG0OGC8Fz4YSoMo7oOyhVDHLKe2R+\
Ep7ukhiDDUmmHpVmOEhz4pwlRyTQhFxCOMLEEO4KYbnIDegOpGrEKmWnCZmuDvLm1ePs6jAaDpmHpx\
BaYIBAMh/wB8k1mGRZ4osERoBdoDXHoSkDOATFLAvOcCwNrFCQGWfHEQXOzjP2eiI59Vo0BGgZYBVS\
wDLBvZBsgOqITFzuYpMkkgIZNLNfE0OvAWLMMeABaYxOsgoGtDzLoDGfwoJOEEXQGq+Ho+\
bHiSbyuOCO2mKlZ4P3UxtzVkEshlwBsotAzMQmVJqSfluUakPKAzUHChghgBPQasES6Iba8G9vNZvh\
6V01spoM96WDjlrea90e9I9JWAzy/\
UerR5t1Yj4Vt8VJNsoooLbY9u9Xto8ezUG36B9q6ftqzvytOdgD5TtRo55BHM2Gdcku1vzEj5+\
JfP632J37Lh543MHAq89mYbreNv/\
kWPrNBvbTgTPyPTiu4nYSttFA0kw4QPvnsDBkcqaZTZf0ifJ0pqWSE725H42e5qY3W6rTRf/\
zvP4PSN7PRScEfB9IHW1JKvlqMqRaKbNwdXrY3gK8KzZxSKB8t7g2fKBbVfH+J1e04Dhk8v1a+\
BhzHC9mMB/\
B0q3Trq3S6vu9iljsU40uZ82Zy6c1iDhDoivk0yo1PwLa9uaciIdtXtrxlUNEBiQ5F0rgLDpipPr+\
wsuXNX7ripStOgSvOTaMPQo501GvCLdXNSqe6QFVpX1oVultczUwhuwE6XFWDtuWSa+\
pCX6FlL4wSRSbu0bmhruWzOGFQvvHIh9wmUGPT8VPSjueedZrNLW/\
lyzYniVBNaczE2miDzGEnaXeSxzubm93R6Z+O9mAbmIWHrlSHtkd8+Hg/\
jDc300nMOo8djffYIVwEVmfj65WR+\
f5VXvpItUFqCDCa3VOzDzui3QxP5Hw8n01RLsZz6a2PBmZh59KJC/ivZmPh/\
0pvYkHN1z0NO7EIIYtT83WfR6R95LN4cMazmIxsLLxlohgY8yAzFDwy089//4tKrT2XWIZrJ0/\
UFFVe8pcP1Cznftg8OYR6SmsB8v/ZRGWKEEsvSNYLbHyX/\
s7mOhvfvb3UKBWN8PRItM6uotGaNqmK4OJoVrjpNaH/\
oVZbpJPG90Z6qBkCvUdhk48BDgOBPZ6DYBt7S93UIOsaePOpGQ+bO++f8FW9HMCtYRP3q+\
lTp80Uz2cLSNLvc4353oThQ2D/MFJDrlXDlunn/zx42+R/ulokXupq6Z3uurp7DI8/\
IgFvpksF1tJ299YwVDw6j+NXc4wofubcpGsB1Ox8Zab+P/8n9fnLB5Gefv7ng+hfpp+/\
feAtPfGDV4p239KLIvytpqQbYCOvIB4pvLz6WIJQnJH0zo4Ee5WuriVqAQFE8JpTlvKqXBjRxjppzE\
oXzdYkUi9Q1YtM9QJSzThU211/\
GAfvJvVThUp54pd3j7IuzyUyvQ2Z8hS5i0zdjPkSmS6R6cNFpnxMYbqQKR2TPefINFJXpx5C5WudCo\
gqfl9i1CVGfSgY1VuOOAsdotxGP2yEGspyOsycg1O21nZ0dCqGUj9okLr6VnB6xwLKD1mfs6eYYP47\
HxFNBw3rarbxs7NW6VL/mxRDCZyuqMmXsE6zKtNMYjxVFiP/\
P4BGuznRda9Ngr0obG3T8HhUjzx1gfH0KfLqufXJCZd4T7MqL6JP9i/\
Anz79zZ5bV5zwFYhpVuVFdMXBF1SmT4Nz59UZJ31FaJpVeRGdcdgLXNOnw/\
nz6o6TvkI3zaq8iO449AXH6VPiwnn1x0lfMZ1mVV5Ef3zLC8DTp8rF8+\
qVk76CPc2qvIheecoL8tOnxqXz6pGTblEwzaq8iB45dAOJ6VPi8nn1x0m38JhmVV5Ef7w9uMHK9Klw\
5bx646Rb3EyzKi+iNw7bgGj6dHjtvLrjpFtATbMqL6I71tqga/qUu3pe/XTSLdKmWZUX0U8n2MBu+\
lR9/bx67aRbCE6zKi+i157NBo/Tp/\
Ub59WBJ91ic5pVeREdeLINUKdP22vn1nEn3IJ2mlV5ER13og2Cp0/ZN8+r3066RfM0q/Ii+\
u3ZbKA9fVq/dV4deNItzKdZlRfRgSfcYH761H37vHrupFv8T7MqL6LnTnwAw/Qp/\
M559d1Jj8CYZlVeRN+d8ICS6VP33fPquZMeETPNqjxfnjuXK/rqWeynBj+\
ueR3Vy2WR306864aznqijP9d/8cd/vu6pg1fznazfXfByB7bLHdhGcPD3AgnDd2C7+\
iGj2PAd2N4GW+MhT+kA7b5HKg67n37+x4PBL42loq5r6enPb5KnIugUZy9DLep3CnD/\
QB3pvq6vPw0jsf4CvpJk/\
eDIj9fTLdugrdezt3F33wjWSRS4jaYdwv91J07S8zNi8M4MKC897qyM0eueSr9UOrfdqKuZhyfKqL1\
mmB1RXz4apLCg68pUhp7bXjajf5iaESrMKL60o4tqR/M17ShehnQiPWcnGmJS+\
vqeeC2iS2i6yCb13STQ9Os5NBV2dIlNF9aQ/l9dQypyspF2qk2Lnrr97R/+x//2d7/1h796EK92+\
4uqhmFpX+kYn8EsbiZezM9Fgvu3G2GrrUjtvmlHIlZToTEeTdCsV+dB5B8eAvwuxPNfH/lMnSiw+\
GUQk5b4YkSBbzZJnDzPVfdesvHeSUvzXsro2M2OfzZ6ExuDT6Oxns72kh+uQZmfcDUZX+ObQU5+\
vIYphTwExb4q+kv1qjtshpQ0PRaFzSYAU+Fu3yP0KRpf+8mRXK5yPKIRQ/\
vVUXCbI5bf7D7QJTOah3WfUoU363hl96F65Pz4iSAy21p8M/\
60HrnHpYfrkT1Kn8kOzEuPuNtOR50WnpKEHdUCo1KzV7ebapYZAP24smV69XSHkYNLmccv6iq99tBW\
Jr37o4W9ZrMnupqPfGAtCU5qt6T7yPtqiTnSU3H5VEg1FD4aLrPsgNLKkZJ18WWmZsPKx1rWfrb/+\
MtaGHpEjoU6ZlPllbPPwiRN+\
ojf7ETii5HHkTlUEIskPzxYVTemYkdLRvy4e5ZewTWEvr1IiPoGmB7Op+YT/kXoB8V0yWw6jA5/\
n0c5hTHFWdvp6osgXgQ6R+r011LfCwSykp3Mqtrlzac9MbnUyzLnd/+oQ5rjRMBs3DWb/xi/\
klIsmIWvk1VWiSbeQvYrPzPoymAvU01a2DUmLUqnyF52Mn/AqYu6aaG3EIlWPqP/\
zmEL5fBzkzj8qNFS6Xq31U5Ovu9oOQaaZmlf7ZxnnBRzJNiCsuISti5h62LB1izhvO7ofQZfqffWB6\
56nbyKEQ908qpG3Tv1eIzOb80cqtcFm6ukcaUhtXE6Dt7ydsxEwPugyptTafdwLx2N4XxFBNRy6Z4/\
nLOVtPtulyvFrLOwrJUdMdS0Vl+IYxHFYv3SxM6DiZXV/\
L5tLJ57FqYr4XrWtQD1XdrV9NtVrtrRLaqcMXQncYatTPq4EbZP1kFKvjKh9SRcbzT9Ng1JxAeNZmb\
EnDQJG50oEkHSrXdEy2HAiyI/aieudvpTbvlHacvV9Xe0etQR66LVYwyKnbmAhhpCRfH7YFuip3k/\
WH8mXq83RHPIXP34ih9NQwyopvy8H81nTU9V/\
9ZmvxfNn7mEelGlmCxXi5H3SMtvnnhrXtiJGKQbJIjX96OwtxRbFVJLsRs3qg9+LfzDoySe328SP+\
gV3/GPfXUibnWSf2UvgviVTbBX5uX/79+rz//uHUu75LUJUwZaLM+80iitny6WAmRLAIZN4M/2TeB/\
H81ce+IH4mEkyCs1d+kH+RrU4YsGrvSvKHjWaVERqdWzcf+DN9QwrdJZ2pbS7XRwfDQb8rNB+C+\
Kae7SmoXRLDcWSaf9lS9ep2NOtQI2hJPhs+rZqvS0N1evGWnvNOSdypLcGuJIWm11eTNe3FTTGunS+\
XqPd4fzR4vn+\
VTIOHMgs29bkVCvtXnuWJrLqdneEddhAb6Bu2f35MzI6WP2mLpzmT6eXfpY06LLTjmepWSmlhtofYO\
p68FzzzppUBkHDDMk/V6Xsgy63Dg+FP+o9BBEwygW+Y3V0o1H3o9/\
SyHNehCuN8PgUETrCjAgMv72OFSrLxfFNw4iot4nyl9efE8LgSos3MmDVgb9X0FCI+\
JSKK0xwb2ZhO2HJEpJFKFwZsRQ2CKvRJq8cKgCKvjHpafyoh7k3+Kl16HdiElBZ/\
WC5uUrVD8kbr7L+mfqWX+u01qouEnDBBL1rpnmrxUuxAuZ7VWTuMUXot0kTIzY/\
WqlrzgWb0FubvavcZVXP9gXv3LIv6LWNZLgVTp5V3kN8gN+Zw0U1T3/4p+MPC+8WbS1/\
PxozLaLKZlhdYwz/VLUszA0M4Wu3OOARSLtkE285rXuXHgdodZaCFlZw1hb9jmpCZZtjqWq+\
i18r0vGR+16qnibij6CHKqOikdc49ytf7eZWW0/9md4MxMvqHEIETVW+\
gGncInTy5waQMbF6yHDKH1Dv5W3XUsDJqvpE4PXSwMpswdhb+Rw8GX/\
0hBSY23IeMmog4DDWnUrj2lfR6TdFtHD8I1a/pFfzH4tHoTwBVK/5fijnaxn/TL/\
n46xBEnjapcrby5fejmXGmndcJ3XkSfbterIc5VuHfNphlZUUnslZM7JV2oNfk1OjotV9Vkdj8ao46\
hax8JBmj8XtdTPurN6lh92c5yiqrGSo6y2pRJ8zb23hRyroNmAk4jvhVFr1F7T95OpFzaX4v64Tnil\
uwVGeZeMaqvyRb3+t93bNRbqVt8aWmlEAq5++\
SVorV53b2CUd6bv1ukjshUyN9VM6rHgX5HIJxSeK7C5vi0s7EAaHp4ULNzcEZJ0mknBpNctMRP/\
uItd6V4bkEAlXRCb6aG7J5qCJSlbfcPCS7vcH3rjdvaManMOh3G+\
fOxavtNQuqiut33CwovwtULW3ij5wgE5zLD22oFoQcciEdnPbH+RTzYq2xw97PhN/kLE0M54w5vb+\
HR9w1uBOvO2ez8qkS1tsTP7qz/5sxKtAT68mX8j5+NbhXQyWpWSc/0ce4teh0EvKC7aqnIhb+\
YPoNKbFXMqtadrvjfS3A4UAn138IO+gfa73buiRcGf82X28y+g/pN+\
Qc0U86drasuZTCFhVKWZaSsnMh8vKtuqPtz9v6gqUbcWwNw7gHu5GKph8eO93a5J7kWg+\
N1AKSWd3PCW93Yf+\
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\
3IT/TqE4FRCpIQgyNiSF4W4+nA/\
EmUf2fMk8cQIw4DNShYUsActkQexzANmoSzCzHcDAEYaIBdLggPBd+\
mArDqK6DcsUQh6xn9gfh6S6pIciwVNphaZajBAf+\
aUJUMk3IBYQjTCzBjiCmm9yA3kCqRqxCZpqw2dogb24t3r4Oo8GgaVg6sQUmCATDIX+\
AfJNZhgWeaHAE6AVaQxy6EpBzQMySwDznwsAaBYlBVjxx0NwsY78nomOfVWOAhgFWARUsA+\
wb2QaIjujExQ4maTIJoGETyzUx9Dow1iwDHoDW2ASrYGDrgww6wxk8gH5y5JO+\
cPT8WPEkXlecEVvM1Czwfmpj7mrIpZBLADZR6JmYhEoT0k/\
Lcg1IecDmIGFDBDACeg1YIt1QCxZulpZFb8dxqN6cXStfgz57vJCNvUCf9lbp1lfpOti+ixnOFuN0+\
Umiit1ixGIIga5cTqPc+KQxowZaf3LqWuViNONy+PcDHf79/7cSMes="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.867791550814603`16.34003804951136*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", True -> 
                  StyleBox[
                   "\"FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
               SystemOpen[
                 File[
                 "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/"]], Appearance -> None, BaseStyle -> "Hyperlink", 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5Bd1AP7hy5dSmCDnpmRg4M2OescSrD6WF7T5\
43sWnBS9y+Bx8h6wFz3M/bB1xlBkOKkoNoRI3PePlGW1NEHBw8fNXLC+\
MDUsNpveuBwtOnvCN5GtsZIadKYGOwMgyHZPrmPzBozVUTbkopr7eJptkl9RQEoZYrYZL++\
bZWnRBifsXjXlEIg=="}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2089c5bf-b38a-4209-95dc-a544c42fd0eb"]]]]]], Appearance -> 
             None, BoxID -> "2089c5bf-b38a-4209-95dc-a544c42fd0eb"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.310661`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-1.0.4.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.310661`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "d913fa7bc58e5fd60b9654501917ad33d6ffd1b32a719d96191c52852\
7ef92ac"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "d28cc9d3b3098d63f93ceefbc86ef788361e083fe45e954fdc98a95fd\
9431f6f"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "5f40d9dcb0c930ab06afd8de8cffe9d16f08b8374e9ffeece9a0b5c35\
9d12a33"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "2561a31d4cf300c04d0307e54c8b54fc937d8932b39a4bbde9fa5ae15\
0d140fc"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "809f307ec7b8c1e9cbc49b502be01d1021fdaf48745985db47b875bd0\
663f62a"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "b2d7f6e2957d4e533c3f2e99aab8d1827a4a8b4a74c6dbb4901fb61cf\
7e955b8"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "1a26ec75e3a3ba1000281df3db2cde975accffa8ac25f6ee92180a6bd\
4cb4e9b"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "b978db651f5edffed0fc5ed0d335aaf24a5f1d51d42b67511f6b2f051\
3892f3b"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "a82abb0a74d61788c51c2210d2fef9c7be417ffbc851fcd70f08dfdd3\
5dc7db5"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "2a06d7bacbdd34535aacf8f430e5796dd5288b5dcaa73b070f56ee4c7\
b0c3159"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "c879245eeeb6636d3b4f3d01014b84d83498e8bc24b9dc3e42546f10a\
b7d64cd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "5d69dc945fe5d34409fafa403659f4f3d6f86d8619c4fc73cd452277a\
dea24fb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "59d0b23f2b79acc7ed63aecdae2633860037f25631b0fe687a2197ff9\
4f4305c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "ab8252d40e826697b9a2c021c39a217fbe842d2f2f699222e97768f82\
f6c0bd9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "7871b2279f0c7f1eeba1c5014088c1eccf5372b176a33874c59f37385\
74b85c9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "fbc7016a3100756d95ffc7a85f3fdc78d2228cfc56338c2e08a7ea779\
498b6d8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "a5b81d3a957b6cea6d680cfd7cc7a633a5265bb59a06829454df6136c\
506f9c3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "2197aa3c0b451f25dae8bc0ab843eace7f5e56bafd9f6bbabd5cef479\
1943375"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "acec0b04c29153d8eaea5170f37b815fb37898b9cf19580d1fe3ae7d7\
5ac1cda"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Sandwich.nb"], "Hash" -> 
                    "627c37d71f14ac5dd38c758947ff1748f1af2650c671662b0b1be2fe8\
0920ced"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TextType.nb"], "Hash" -> 
                    "d3f2a7c194084e86060f57b23b3a8c4727811fa0fbe90f3911f3f430b\
11e7fe9"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "05d10c25f404737d701638343392fe7e38f919c513d292a580d187b0c\
07ec760"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "241a6e8a5781dbe4b39c424cc72d5f53b0b5d239a745d3f5f4dde280b\
b11d16d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "081eea634298b562473a1a9878a33c3f7cc6a4938e4588042081a576a\
8977661"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "a84c304abdb68d9059b42506fbd8a3abf35e34492e4cc47b0a5a479ee\
c8f512e"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 27], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d913fa7bc58e5fd60b9654501917ad33d6ffd1b32a719d96191c52852\
7ef92ac", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d28cc9d3b3098d63f93ceefbc86ef788361e083fe45e954fdc98a95fd\
9431f6f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9240310ffc8e87d14e58d0db988d8ae40150570dea189f462ba87a7e8\
4ff8cec", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5f40d9dcb0c930ab06afd8de8cffe9d16f08b8374e9ffeece9a0b5c35\
9d12a33", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2561a31d4cf300c04d0307e54c8b54fc937d8932b39a4bbde9fa5ae15\
0d140fc", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "809f307ec7b8c1e9cbc49b502be01d1021fdaf48745985db47b875bd0\
663f62a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b2d7f6e2957d4e533c3f2e99aab8d1827a4a8b4a74c6dbb4901fb61cf\
7e955b8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1a26ec75e3a3ba1000281df3db2cde975accffa8ac25f6ee92180a6bd\
4cb4e9b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b978db651f5edffed0fc5ed0d335aaf24a5f1d51d42b67511f6b2f051\
3892f3b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a82abb0a74d61788c51c2210d2fef9c7be417ffbc851fcd70f08dfdd3\
5dc7db5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2a06d7bacbdd34535aacf8f430e5796dd5288b5dcaa73b070f56ee4c7\
b0c3159", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c879245eeeb6636d3b4f3d01014b84d83498e8bc24b9dc3e42546f10a\
b7d64cd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d69dc945fe5d34409fafa403659f4f3d6f86d8619c4fc73cd452277a\
dea24fb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "59d0b23f2b79acc7ed63aecdae2633860037f25631b0fe687a2197ff9\
4f4305c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ab8252d40e826697b9a2c021c39a217fbe842d2f2f699222e97768f82\
f6c0bd9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7871b2279f0c7f1eeba1c5014088c1eccf5372b176a33874c59f37385\
74b85c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fbc7016a3100756d95ffc7a85f3fdc78d2228cfc56338c2e08a7ea779\
498b6d8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a5b81d3a957b6cea6d680cfd7cc7a633a5265bb59a06829454df6136c\
506f9c3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2197aa3c0b451f25dae8bc0ab843eace7f5e56bafd9f6bbabd5cef479\
1943375", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["27 total \:203a ", ""], 
                    Style[
                    Superscript["27 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001947`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001947`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfdtz3Mh6nyjeKUrU7azP2a3EDE2n7ORQwq2BxuY4WmpIrhTrwhW\
4u47t1KqvJKIZYAxgKHGTVDlVeXWlkpOXVPnBf4dfXJX8BX5w2Y/JOVVJ+\
SXnyeVU5WHzNYDBADNDaTDD1WpIzgM5AzT6+/q7/L6vL+iWM/HSC/L6YfhGxHI+\
vvU4SETUjkRCEj8M4LKciRdehKqAnIvnnvhxIq/GCwfkEK54i16HMRHH3jWv02qR6OSRINyb+\
QM5G9/cOQlIy2dPQ95pCvX41eLxWU8k8Y2Dk7aIRfIybItgczOe3yPNWHTv3u3eFS0quAfsiM1Nb/\
4F1H8CZa4diFa7CRczDrOKZ+O1fRIITzQFS8KoSnPuBbDRJTIfL34e+bz6cPf/\
oqpE3VqIlx92kqQrhpW8RVm9H+/t7kf+\
MbDwci8Kg2Q34C9EHHYiJrzlvd2HftIi7di7mQsGHnoO7RSRYl6xsiOa5ETw+\
EZGYq8TMCXx06QzdxB1RNGMle12W5CIBCD8uWdh0Luz/\
JDEwktOmkJe6Wv78u4xaXYISCZe3u4kYQtUzIq7C09FchRyb2U/EiDbxD8uVbrd9A+\
DlgiSrkDjhYZQltL93yv6uEUOhed/K0Bii7nEiqcqdOcP/JaIoyvpZ/Wz4go8uNroRBFU/\
BUwLLzreyDfBmk/Ev7hkWJhfj98DTRn4rvbNA6bnUSUy8fXn5LDwJc+\
S2248R2oe2kvIq1UqbPxUioeZb7zG7/\
4059vQIXLO34ENqPaDPdffP6wETbDKPq19PPXD6I76eeXD6LfSz9/86Dxk6LFq14S+\
e3nweOg3Ul6VpzdvNEA1oGxfcK5Hxz2315J2Ur56dPjanrnKYkO/SAum7H637jSuNL//\
XReFnrG3q1npvjf9e3Zft/ud7L8UW9tY5+wpki2I3YE8trw5jY+Xd/wVqCeHSFJp5l4P8pt/\
nEiWttBEGZY4s3+6k/+rIQdf7Rx/8sYLOi+JP63YfAtaZHg/o44Fk0w+ej+E/EGFNhsgDnH9/fSIr+\
fFqncoB2/ycu3v/mmfH9Lv6fds+61U443CpRSjE0ig2sbB9CoprLWsdsP1Cp15+\
DqLRv3TF2zbf2lN7sRb3iLsWBhwGNvecPLvm14S190SJD4yUnPkLyTICFv9sKoFc8C5Fab2i11M7eD\
AXfulvAWwfA7rSAuSSfz3LknQvaKzUFrB8sMQZUVdQmgTiSi3/\
bXcmYUhylejMzLIJ3RGepS9cAmlEOOTLVxtT6xEhjP9YHxXe8ofK28NThsHAGSMwWm/\
SK69qwD0S8CFHg1cO8GRB/AFYAtP1YoN9vTclp1ag8ZsvQ/+j2bwexB2P5wDeCm0knTD8R+\
GPt5xM0UPNOYKUpl4fYHSRMazTAeO03ojy+XecJlnjBGnjB/\
mSdcxDxhgqbezNX9lIBHiTgZv73zpZZ3vy0M6U4uV7uTWwoJvZMY6n75DBgQXBnzS+\
DqFQBNF4M346wnuX17y7v2OIAAQJo7JCHbM1ve/J4PEpKfZPVuX93y5tQVJRX13/\
vod0UUiGbFsO69bkKxRyQ+\
8j7jrm5K4lCGsECS2xp1bWQhTXd1h3DT5LaUXKemQRzd5a4N1xkyMDIcIV2DsEGKP65S3CcJQGhQoU\
kNyV3DlLZmAT2X2pS5jgZETNfCmGg2QcjVgKCBme26hk4pdiS3XEQdTTMGaa7lNPebYVJtHtTAXG5S\
U3Mxt03pmkwISRm2hXQwNm1daNiUwkLCRZbkzMXEBUG4lqlLWw6SupWT8gjYU1WWrmFpYN5SMiyww3\
VLIMw1Tl2MOSbC0nSkIUfjgujYlZZtUIId4ghsSYmZGCLLOzmxLxO/\
CWqvkkPS0rjLGdWYa2qEgtgkx1xgJqVwuW5LDVNsOpZw4YJgwiUaRcxEcM8gpjlI7m5ODiKNz1M7L9\
MzkK0TU+cWk6amMc3imqk5AlkMUxAdMOFw7JoGNV1iUcqBLEFEQKNBFJoc0ryPD8Dm466lALx3WNKJ\
BBBNCqpYc6UiwxyKmS5cRpnlUqQZVGg61zVDl5xICzsWcjHi1IJyDqIcUAYMzCBDXKJCtesRPYrU4I\
60heEih4MKTZOZ0hCuSwjFXMeGQyyCqUUci9mcUsvVdEltnUkHTAhRPESuGcWKWHv0dGLY0DwkTGJS\
omtg4Vjn0gQ3YSBEBxEGGiWYMAMBXwL8AWvEpqAICrqlg/RuZ/Ry1+\
trnetgTm2kSyQ42AUHzcA3DXwdESINiyCpcwRqNqjtIB28ANxVQ7qJXUOaQ6jdyaiVbbRHjmCDUKqB\
sLitg8MxpDPD0DVuSAAQUKqwdEcqhwSOGHc0MFouOTcRZw6naJDcT3dC1lHpWirJ+7vBYdOPj+5/\
3vG56NNqQHvGC6jCHUoYhbotpNrKJJaWqQnkuDbnAGpgxpwR4phUAz4QiNoCBjVm6sgd5OPT4Xy8EF\
JAtsbEPiB4fN87adGwGd9/GHYCfhC+\
EkGZK4YdAA0khKBgrjbglAV613RNtyi2ODYtF6CEMsOi4OimsAxk2VIHZ3e4bTE+\
yNVuLa4awFWSB7gnKu1kILcyg4jbQNi1kBQI5GaBMxJJAOZsBAgmVXjANscQFhgggGMybiHDcCB0CG\
JYcoi1/E4tBnfftEnAuzGkzJjLNQohxKCOC/\
7hCAB3IhgnwrBNE9uaZjoSEMvUqSaFDThr6C4YmmspnaMhYPSzWoydZmeAEQYyuKUJbNi261CXGAxA\
igEoGmDpFNDeAOM3pApsBuCK49hYYvjNNMqH2Fk9jeZ87fgx5Jmqj61CYplBBzs6BRW5UmOO1MHyCE\
R0MDgNK3wFqEGmY1DdsSFEAKoyULTpmBg5YJKIDWHwn4/\
D4BCVAgg4mg5kAQIdZHMIw2BSBCNpQlwG1AJxQWxjSCmYGRC3IXYSx3HBSSgY4SBnn43DWS8MldUKu\
K5zE1IDh9pMEJvbWGOSO2B6BPghyLARpQhCrI0N8BeLS1s3bZCsDTA3JNaOJbXcVSvABmZNiAnGYwG\
CGgg8AAADEAJbpiBMOIDzyKaQGriA5JRQjpiQluPqkOKYzhCAreehz9uqFPQX+\
rENaANTmsUMV0cmx4IIgnQAVhMitI4kNR0MinOZ1F2EIUeQEACFw1W808GRBxnDtRjzADhe++\
yozJNtOAyyFEeXukUYglCAIfBi1wJk0B0LSx0ioI00Zju6DfmZRnUqIFJBEmJoTAzB23o8HYg3iUr5\
yzxxADHiMFCHhi0ByGVD7HEA26hJMLMcw8EQhIkG0OGC8Fz4YSoMo7oOyhVDHLKe2R+\
Ep7ukhiDDUmmHpVmOEhz4pwlRyTQhFxCOMLEEO4KYbnIDegOpGrEKmWnCZmuDvLm1ePs6jAaDpmHpx\
BaYIBAMh/wB8k1mGRZ4osERoBdoDXHoSkDOATFLAvOcCwNrFCQGWfHEQXOzjP2eiI59Vo0BGgZYBVS\
wDLBvZBsgOqITFzuYpMkkgIZNLNfE0OvAWLMMeABaYxOsgoGtDzLoDGfwoJOEEXQGq+Ho+\
bHiSbyuOCO2mKlZ4P3UxtzVkEshlwBsotAzMQmVJqSfluUakPKAzUHChghgBPQasES6Iba8G9vNZvh\
6V01spoM96WDjlrea90e9I9JWAzy/\
UerR5t1Yj4Vt8VJNsoooLbY9u9Xto8ezUG36B9q6ftqzvytOdgD5TtRo55BHM2Gdcku1vzEj5+\
JfP632J37Lh543MHAq89mYbreNv/\
kWPrNBvbTgTPyPTiu4nYSttFA0kw4QPvnsDBkcqaZTZf0ifJ0pqWSE725H42e5qY3W6rTRf/\
zvP4PSN7PRScEfB9IHW1JKvlqMqRaKbNwdXrY3gK8KzZxSKB8t7g2fKBbVfH+J1e04Dhk8v1a+\
BhzHC9mMB/\
B0q3Trq3S6vu9iljsU40uZ82Zy6c1iDhDoivk0yo1PwLa9uaciIdtXtrxlUNEBiQ5F0rgLDpipPr+\
wsuXNX7ripStOgSvOTaMPQo501GvCLdXNSqe6QFVpX1oVultczUwhuwE6XFWDtuWSa+\
pCX6FlL4wSRSbu0bmhruWzOGFQvvHIh9wmUGPT8VPSjueedZrNLW/\
lyzYniVBNaczE2miDzGEnaXeSxzubm93R6Z+O9mAbmIWHrlSHtkd8+Hg/\
jDc300nMOo8djffYIVwEVmfj65WR+\
f5VXvpItUFqCDCa3VOzDzui3QxP5Hw8n01RLsZz6a2PBmZh59KJC/ivZmPh/\
0pvYkHN1z0NO7EIIYtT83WfR6R95LN4cMazmIxsLLxlohgY8yAzFDwy089//4tKrT2XWIZrJ0/\
UFFVe8pcP1Cznftg8OYR6SmsB8v/ZRGWKEEsvSNYLbHyX/\
s7mOhvfvb3UKBWN8PRItM6uotGaNqmK4OJoVrjpNaH/\
oVZbpJPG90Z6qBkCvUdhk48BDgOBPZ6DYBt7S93UIOsaePOpGQ+bO++f8FW9HMCtYRP3q+\
lTp80Uz2cLSNLvc4353oThQ2D/MFJDrlXDlunn/zx42+R/ulokXupq6Z3uurp7DI8/\
IgFvpksF1tJ299YwVDw6j+NXc4wofubcpGsB1Ox8Zab+P/8n9fnLB5Gefv7ng+hfpp+/\
feAtPfGDV4p239KLIvytpqQbYCOvIB4pvLz6WIJQnJH0zo4Ee5WuriVqAQFE8JpTlvKqXBjRxjppzE\
oXzdYkUi9Q1YtM9QJSzThU211/\
GAfvJvVThUp54pd3j7IuzyUyvQ2Z8hS5i0zdjPkSmS6R6cNFpnxMYbqQKR2TPefINFJXpx5C5WudCo\
gqfl9i1CVGfSgY1VuOOAsdotxGP2yEGspyOsycg1O21nZ0dCqGUj9okLr6VnB6xwLKD1mfs6eYYP47\
HxFNBw3rarbxs7NW6VL/mxRDCZyuqMmXsE6zKtNMYjxVFiP/\
P4BGuznRda9Ngr0obG3T8HhUjzx1gfH0KfLqufXJCZd4T7MqL6JP9i/\
Anz79zZ5bV5zwFYhpVuVFdMXBF1SmT4Nz59UZJ31FaJpVeRGdcdgLXNOnw/\
nz6o6TvkI3zaq8iO449AXH6VPiwnn1x0lfMZ1mVV5Ef3zLC8DTp8rF8+\
qVk76CPc2qvIheecoL8tOnxqXz6pGTblEwzaq8iB45dAOJ6VPi8nn1x0m38JhmVV5Ef7w9uMHK9Klw\
5bx646Rb3EyzKi+iNw7bgGj6dHjtvLrjpFtATbMqL6I71tqga/qUu3pe/XTSLdKmWZUX0U8n2MBu+\
lR9/bx67aRbCE6zKi+i157NBo/Tp/\
Ub59WBJ91ic5pVeREdeLINUKdP22vn1nEn3IJ2mlV5ER13og2Cp0/ZN8+r3066RfM0q/Ii+\
u3ZbKA9fVq/dV4deNItzKdZlRfRgSfcYH761H37vHrupFv8T7MqL6LnTnwAw/Qp/\
M559d1Jj8CYZlVeRN+d8ICS6VP33fPquZMeETPNqjxfnjuXK/rqWeynBj+\
ueR3Vy2WR306864aznqijP9d/8cd/vu6pg1fznazfXfByB7bLHdhGcPD3AgnDd2C7+\
iGj2PAd2N4GW+MhT+kA7b5HKg67n37+x4PBL42loq5r6enPb5KnIugUZy9DLep3CnD/\
QB3pvq6vPw0jsf4CvpJk/\
eDIj9fTLdugrdezt3F33wjWSRS4jaYdwv91J07S8zNi8M4MKC897qyM0eueSr9UOrfdqKuZhyfKqL1\
mmB1RXz4apLCg68pUhp7bXjajf5iaESrMKL60o4tqR/M17ShehnQiPWcnGmJS+\
vqeeC2iS2i6yCb13STQ9Os5NBV2dIlNF9aQ/l9dQypyspF2qk2Lnrr97R/+x//2d7/1h796EK92+\
4uqhmFpX+kYn8EsbiZezM9Fgvu3G2GrrUjtvmlHIlZToTEeTdCsV+dB5B8eAvwuxPNfH/lMnSiw+\
GUQk5b4YkSBbzZJnDzPVfdesvHeSUvzXsro2M2OfzZ6ExuDT6Oxns72kh+uQZmfcDUZX+ObQU5+\
vIYphTwExb4q+kv1qjtshpQ0PRaFzSYAU+Fu3yP0KRpf+8mRXK5yPKIRQ/\
vVUXCbI5bf7D7QJTOah3WfUoU363hl96F65Pz4iSAy21p8M/\
60HrnHpYfrkT1Kn8kOzEuPuNtOR50WnpKEHdUCo1KzV7ebapYZAP24smV69XSHkYNLmccv6iq99tBW\
Jr37o4W9ZrMnupqPfGAtCU5qt6T7yPtqiTnSU3H5VEg1FD4aLrPsgNLKkZJ18WWmZsPKx1rWfrb/+\
MtaGHpEjoU6ZlPllbPPwiRN+\
ojf7ETii5HHkTlUEIskPzxYVTemYkdLRvy4e5ZewTWEvr1IiPoGmB7Op+YT/kXoB8V0yWw6jA5/\
n0c5hTHFWdvp6osgXgQ6R+r011LfCwSykp3Mqtrlzac9MbnUyzLnd/+oQ5rjRMBs3DWb/xi/\
klIsmIWvk1VWiSbeQvYrPzPoymAvU01a2DUmLUqnyF52Mn/AqYu6aaG3EIlWPqP/\
zmEL5fBzkzj8qNFS6Xq31U5Ovu9oOQaaZmlf7ZxnnBRzJNiCsuISti5h62LB1izhvO7ofQZfqffWB6\
56nbyKEQ908qpG3Tv1eIzOb80cqtcFm6ukcaUhtXE6Dt7ydsxEwPugyptTafdwLx2N4XxFBNRy6Z4/\
nLOVtPtulyvFrLOwrJUdMdS0Vl+IYxHFYv3SxM6DiZXV/\
L5tLJ57FqYr4XrWtQD1XdrV9NtVrtrRLaqcMXQncYatTPq4EbZP1kFKvjKh9SRcbzT9Ng1JxAeNZmb\
EnDQJG50oEkHSrXdEy2HAiyI/aieudvpTbvlHacvV9Xe0etQR66LVYwyKnbmAhhpCRfH7YFuip3k/\
WH8mXq83RHPIXP34ih9NQwyopvy8H81nTU9V/\
9ZmvxfNn7mEelGlmCxXi5H3SMtvnnhrXtiJGKQbJIjX96OwtxRbFVJLsRs3qg9+LfzDoySe328SP+\
gV3/GPfXUibnWSf2UvgviVTbBX5uX/79+rz//uHUu75LUJUwZaLM+80iitny6WAmRLAIZN4M/2TeB/\
H81ce+IH4mEkyCs1d+kH+RrU4YsGrvSvKHjWaVERqdWzcf+DN9QwrdJZ2pbS7XRwfDQb8rNB+C+\
Kae7SmoXRLDcWSaf9lS9ep2NOtQI2hJPhs+rZqvS0N1evGWnvNOSdypLcGuJIWm11eTNe3FTTGunS+\
XqPd4fzR4vn+\
VTIOHMgs29bkVCvtXnuWJrLqdneEddhAb6Bu2f35MzI6WP2mLpzmT6eXfpY06LLTjmepWSmlhtofYO\
p68FzzzppUBkHDDMk/V6Xsgy63Dg+FP+o9BBEwygW+Y3V0o1H3o9/\
SyHNehCuN8PgUETrCjAgMv72OFSrLxfFNw4iot4nyl9efE8LgSos3MmDVgb9X0FCI+\
JSKK0xwb2ZhO2HJEpJFKFwZsRQ2CKvRJq8cKgCKvjHpafyoh7k3+Kl16HdiElBZ/\
WC5uUrVD8kbr7L+mfqWX+u01qouEnDBBL1rpnmrxUuxAuZ7VWTuMUXot0kTIzY/\
WqlrzgWb0FubvavcZVXP9gXv3LIv6LWNZLgVTp5V3kN8gN+Zw0U1T3/4p+MPC+8WbS1/\
PxozLaLKZlhdYwz/VLUszA0M4Wu3OOARSLtkE285rXuXHgdodZaCFlZw1hb9jmpCZZtjqWq+\
i18r0vGR+16qnibij6CHKqOikdc49ytf7eZWW0/9md4MxMvqHEIETVW+\
gGncInTy5waQMbF6yHDKH1Dv5W3XUsDJqvpE4PXSwMpswdhb+Rw8GX/\
0hBSY23IeMmog4DDWnUrj2lfR6TdFtHD8I1a/pFfzH4tHoTwBVK/5fijnaxn/TL/\
n46xBEnjapcrby5fejmXGmndcJ3XkSfbterIc5VuHfNphlZUUnslZM7JV2oNfk1OjotV9Vkdj8ao46\
hax8JBmj8XtdTPurN6lh92c5yiqrGSo6y2pRJ8zb23hRyroNmAk4jvhVFr1F7T95OpFzaX4v64Tnil\
uwVGeZeMaqvyRb3+t93bNRbqVt8aWmlEAq5++\
SVorV53b2CUd6bv1ukjshUyN9VM6rHgX5HIJxSeK7C5vi0s7EAaHp4ULNzcEZJ0mknBpNctMRP/\
uItd6V4bkEAlXRCb6aG7J5qCJSlbfcPCS7vcH3rjdvaManMOh3G+\
fOxavtNQuqiut33CwovwtULW3ij5wgE5zLD22oFoQcciEdnPbH+RTzYq2xw97PhN/kLE0M54w5vb+\
HR9w1uBOvO2ez8qkS1tsTP7qz/5sxKtAT68mX8j5+NbhXQyWpWSc/0ce4teh0EvKC7aqnIhb+\
YPoNKbFXMqtadrvjfS3A4UAn138IO+gfa73buiRcGf82X28y+g/pN+\
Qc0U86drasuZTCFhVKWZaSsnMh8vKtuqPtz9v6gqUbcWwNw7gHu5GKph8eO93a5J7kWg+\
N1AKSWd3PCW93Yf+\
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\
3IT/TqE4FRCpIQgyNiSF4W4+nA/\
EmUf2fMk8cQIw4DNShYUsActkQexzANmoSzCzHcDAEYaIBdLggPBd+\
mArDqK6DcsUQh6xn9gfh6S6pIciwVNphaZajBAf+\
aUJUMk3IBYQjTCzBjiCmm9yA3kCqRqxCZpqw2dogb24t3r4Oo8GgaVg6sQUmCATDIX+\
AfJNZhgWeaHAE6AVaQxy6EpBzQMySwDznwsAaBYlBVjxx0NwsY78nomOfVWOAhgFWARUsA+\
wb2QaIjujExQ4maTIJoGETyzUx9Dow1iwDHoDW2ASrYGDrgww6wxk8gH5y5JO+\
cPT8WPEkXlecEVvM1Czwfmpj7mrIpZBLADZR6JmYhEoT0k/\
Lcg1IecDmIGFDBDACeg1YIt1QCxZulpZFb8dxqN6cXStfgz57vJCNvUCf9lbp1lfpOti+ixnOFuN0+\
Umiit1ixGIIga5cTqPc+KQxowZaf3LqWuViNONy+PcDHf79/7cSMes="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.86779156944381`16.340038051603138*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.86779156944381`16.340038051603138*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.86779156944381`16.340038051603138*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.86779156944381`16.340038051603138*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"No issues found\""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"], 
               ItemSize -> Scaled[0.75], StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["\"\"", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
            With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "7080c8cb-288b-4b09-86d9-aed4930dadc1"]]]]]], Appearance -> 
            None, BoxID -> "7080c8cb-288b-4b09-86d9-aed4930dadc1", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.5.62", "CreationTimestamp" -> 
  3.867247344922814`16.3399769391228*^9, "UpdatedTimestamp" -> 
  3.867247344922849`16.339976939122803*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "PacletResource", 
    "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged"}, "ToolsOpen" -> True, "StatusMessage" -> 
  "", "SubmissionReviewData" -> {"Review" -> False}, "AutoUpdate" -> True, 
  "PacletBuildData" -> {"FileHashes" -> ByteArray[CompressedData["
1:eJwBAgX9+iFib1JiAQAAAPUEAAA4Qzp4nJ2Wf1AUZRjHhQsVmDB+CEQyKD8F
3UMgR/kVohyBHnDx3gGFA+ztvQc77O1eu3t3HKQEqRQWFiCZKDlNocM45hBk
zWRUmj/+qLEGJmmkIoVSayonZ8KxqaO7eO+Wc7nlr5t5br+f77v7PO/zPLkb
MLA+jyFMBkjzOE8ydLKCrqVIri75SROpg1yyEjaQBE5twznIyWltrjcGlgLG
xBJQeXNsCgLLBxW2iBpnayGv7PTt+TuMfSYcA9HuoYW0DjYkV2+QE3rOCcU9
VMzQEHGmplNn7vh8ZMFAvBiHg7Wzf3HVKSKsMwmXTj26rH6pp6w0EVZ7nsHY
6g1zMbDWE5a8FtIitJeqJr9o6p1ag4EM97RSqIcspAmowmttqQBWg5ahuOSt
jInWqZl6SAsSonr6yNWJtBAtssiobF5Wk9ivwYBCksU2mwUPTAYDzlqVjAWy
hC3/Arfvn32lI09ZH4fcznU/V7KHlpkxkC3JTdFgxGmdCud5yArfydzSNROW
X25ALrfOrmQnfF82YiBLkotIJY9U+rXfHMFVyKTr/vL+rPff2i71wzlM8kjO
CFnOJlBRDC9w87UkHMq81lGG3MoHG5sOxMTY6uqJxbi5/3L1J6xX9n79agay
Ib/T5+BJBisGtizGBvCsieBNrLAQtAHhiZpfRqKQUVtCxaGL2T2Zi3wfR+EJ
bM41evW1de5TIBvOapXp3/hWL7XeSoyzT+GUuzsUGXnxQPe+uyuRy8nTv3v9
EXR7MwY2S3IBtpq2kESdwOBTo1/O0HTcamRgHnj3no+mpkqqgRo28GqrUZiO
5Zfuaya1R6uQQbB/fcvBvz6TS827mhEtsO0/H8+J76pIQkZ3ouP6xo5iXhhI
l2RUzrBuGxq3q+P1nbJ7ThNGO5Q/xa/b3yT1XsY6334AWTNJzOsCaXzzKVlr
vD9y+2b85NbD4YGxGEhy7wYgzhJ19q6/0T7XoEjHz28tOjIRN6ySwhObk1EZ
flGczw8rMJDoIY8jRXBBo9UpvQfP2sYu5glOT0JKx8ktlAhy+LG69jf1JIaB
xz1BkrO/RZDHdTiPi5P7P/Ze3bmHbcSA3BPy3HxPFds7FC2K4JjQpzxkWliS
h3KKIepFmKSmJLriR80ODCQ8gGmEFOXhYtSzuym3akzrGSxtAdiZsqFVnC+d
6BFs4wKw8IHgwfHzv63CwLoFYR7tbVdN12+pPwSpkoBiy9vg9G2lImAgQxIw
XQR4Yyx7fcQnzaWSgDoR4OXrgVlvZ5bFPvj+zQd6vGNuco9Um3iGJXHBflRi
nm2R0CLokL+mVoxek4XUIH7p89jhC8rMHAyE7rBNCEi5rlkuN1jp352QVTB+
fieSo0i4q/z/ieMKeFH/XuGV2pndCIAiKxyA2YVLaLx/y+jaYq4tH+lQJNCh
A7jBSM07ct5PMDY4P3YJUqJIsEOp4UmK5Ml52qglZbuIf6hip349FwlxaMtw
itT9lxGBuEDbt0l/450SJEaRh1U4QUG+kNYzAlXY8anT8V9GmpEKRQLtqiKc
JvWQ48W7a2/KzbsFKRdsO12o2vYwJ0wr7+zaXVj41bHL1lwkR5EIFzlaIQWI
qjUvNFPHJmUIgSJBdoSjJOa591ZFwBRZnsbp8HORYLvUOUMu2tdOBGgf+bPE
6eQoEmLXumTIRTycXu5TmfR5iNO0c0T+BV40l9iiaH25
      "]], "LastBuiltArchive" -> 
    "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases/build/\
FaizonZaman__LexicalCases-1.0.4.paclet"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Closed, "1" -> Closed, "2" -> Closed}, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed, "8" -> Closed}}, 
  "TryRealOnly" -> False},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.015385], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 
                    56.875}, {32.5, 64.492}, {45.703, 56.875}, {32.5, 
                    49.258}, {19.297, 56.875}}, {{21.328, 56.875}, {32.5, 
                    63.324}, {43.672, 56.875}, {32.5, 50.426}, {21.328, 
                    56.875}}, {{33.008, 33.262}, {33.008, 48.496}, {46.211, 
                    56.113}, {46.211, 40.879}, {33.008, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                    56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                    FaceForm[
                    RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 
                    8.8868}, {4.5703, 16.504}, {4.5703, 31.738}, {17.773, 
                    24.121}, {17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 
                    17.113}, {5.5859, 29.961}, {16.758, 23.512}, {16.758, 
                    10.664}}, {{31.484, 32.5}, {18.281, 40.117}, {5.0781, 
                    32.5}, {18.281, 24.883}, {31.484, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                    8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 
                    8.8868}, {47.227, 24.121}, {60.43, 31.738}, {60.43, 
                    16.504}, {47.227, 8.8868}}, {{48.242, 10.664}, {48.242, 
                    23.512}, {59.414, 29.961}, {59.414, 17.113}, {48.242, 
                    10.664}}, {{33.516, 32.5}, {46.719, 40.117}, {59.922, 
                    32.5}, {46.719, 24.883}, {33.516, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                    8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                    FaceForm[
                    RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                    "]]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                    29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                    31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                    35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                    33.902}, {7.1094, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                    53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                    54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                    58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                    57.769}, {20.82, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                    38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                    39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                    43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                    42.027}, {20.82, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                    21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                    22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                    26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                    25.777}, {20.82, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                    6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                    7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                    11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                    10.035}, {20.82, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                    46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                    47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                    51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                    50.152}, {35.039, 48.75}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                    29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                    31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                    35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                    33.902}, {35.039, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                    13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                    14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                    18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                    17.652}, {35.039, 16.25}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                    53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                    54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                    58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                    57.769}, {49.258, 56.367}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                    38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                    39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                    43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                    42.027}, {49.258, 40.625}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                    21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                    22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                    26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                    25.777}, {49.258, 24.375}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                    6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                    7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                    11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                    10.035}, {49.258, 8.6329}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                    29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                    31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                    35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                    33.902}, {62.969, 32.5}}}]}, {
                    FaceForm[
                    RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.015385], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19.297, 56.875}, {
                  32.5, 64.492}, {45.703, 56.875}, {32.5, 49.258}, {19.297, 
                  56.875}}, {{21.328, 56.875}, {32.5, 63.324}, {43.672, 
                  56.875}, {32.5, 50.426}, {21.328, 56.875}}, {{33.008, 
                  33.262}, {33.008, 48.496}, {46.211, 56.113}, {46.211, 
                  40.879}, {33.008, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.70196, 0.60392, 0.78824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 33.262}, {18.789, 40.879}, {18.789, 
                  56.113}, {31.992, 48.496}, {31.992, 33.262}}}]}, {
                 FaceForm[
                  RGBColor[0.53725, 0.40392, 0.67451, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.773, 8.8868}, {
                  4.5703, 16.504}, {4.5703, 31.738}, {17.773, 24.121}, {
                  17.773, 8.8868}}, {{16.758, 10.664}, {5.5859, 17.113}, {
                  5.5859, 29.961}, {16.758, 23.512}, {16.758, 10.664}}, {{
                  31.484, 32.5}, {18.281, 40.117}, {5.0781, 32.5}, {18.281, 
                  24.883}, {31.484, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.63529, 0.73333, 0.83137, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{31.992, 31.738}, {18.789, 24.121}, {18.789, 
                  8.8868}, {31.992, 16.504}, {31.992, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.2902, 0.40784, 0.57647, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{47.227, 8.8868}, {
                  47.227, 24.121}, {60.43, 31.738}, {60.43, 16.504}, {47.227, 
                  8.8868}}, {{48.242, 10.664}, {48.242, 23.512}, {59.414, 
                  29.961}, {59.414, 17.113}, {48.242, 10.664}}, {{33.516, 
                  32.5}, {46.719, 40.117}, {59.922, 32.5}, {46.719, 24.883}, {
                  33.516, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.6, 0.6, 0.37255, 1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{33.008, 31.738}, {33.008, 16.504}, {46.211, 
                  8.8868}, {46.211, 24.121}, {33.008, 31.738}}}]}, {
                 FaceForm[
                  RGBColor[0.39608, 0.60392, 0.30196, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIGYC4qvPs7S/hYs5LHLd9vlvi6MDjL/imLd550d3
B9O4XZ48hwwcQBSTtjecH2G55UTZPhcHdP1zFinv/OMuBNG/0AHOL86Y+LbG
3sPh5rnvwY+PGkL08/nA+b3T84SaC1ww9F9fXGDLZe4H50+WYAnjm+sOVw/j
w8yDqYfZh64f7M4tvnD3Pr2gdPunnAfcPzA+zL8w9bDwQNdf+VLNkMPH2IEB
BBwUoLSDwzTn7pzn1foOLkDq9003DHmZy8LTKhwe2KPrbxcDhYgphnpwOKnq
OuwpAfr4miuGfKiB1krhC7/s0fUDAHimvy8=
                  "]]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{7.1094, 32.5}, {7.1094, 31.098}, {5.9726, 
                  29.961}, {4.5703, 29.961}, {3.168, 29.961}, {2.0312, 
                  31.098}, {2.0312, 32.5}, {2.0312, 33.902}, {3.168, 
                  35.039}, {4.5703, 35.039}, {5.9726, 35.039}, {7.1094, 
                  33.902}, {7.1094, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 56.367}, {20.82, 54.965}, {19.684, 
                  53.828}, {18.281, 53.828}, {16.879, 53.828}, {15.742, 
                  54.965}, {15.742, 56.367}, {15.742, 57.769}, {16.879, 
                  58.906}, {18.281, 58.906}, {19.684, 58.906}, {20.82, 
                  57.769}, {20.82, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 40.625}, {20.82, 39.223}, {19.684, 
                  38.086}, {18.281, 38.086}, {16.879, 38.086}, {15.742, 
                  39.223}, {15.742, 40.625}, {15.742, 42.027}, {16.879, 
                  43.164}, {18.281, 43.164}, {19.684, 43.164}, {20.82, 
                  42.027}, {20.82, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 24.375}, {20.82, 22.973}, {19.684, 
                  21.836}, {18.281, 21.836}, {16.879, 21.836}, {15.742, 
                  22.973}, {15.742, 24.375}, {15.742, 25.777}, {16.879, 
                  26.914}, {18.281, 26.914}, {19.684, 26.914}, {20.82, 
                  25.777}, {20.82, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{20.82, 8.6329}, {20.82, 7.2306}, {19.684, 
                  6.0938}, {18.281, 6.0938}, {16.879, 6.0938}, {15.742, 
                  7.2306}, {15.742, 8.6329}, {15.742, 10.035}, {16.879, 
                  11.172}, {18.281, 11.172}, {19.684, 11.172}, {20.82, 
                  10.035}, {20.82, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 48.75}, {35.039, 47.348}, {33.902, 
                  46.211}, {32.5, 46.211}, {31.098, 46.211}, {29.961, 
                  47.348}, {29.961, 48.75}, {29.961, 50.152}, {31.098, 
                  51.289}, {32.5, 51.289}, {33.902, 51.289}, {35.039, 
                  50.152}, {35.039, 48.75}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 32.5}, {35.039, 31.098}, {33.902, 
                  29.961}, {32.5, 29.961}, {31.098, 29.961}, {29.961, 
                  31.098}, {29.961, 32.5}, {29.961, 33.902}, {31.098, 
                  35.039}, {32.5, 35.039}, {33.902, 35.039}, {35.039, 
                  33.902}, {35.039, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{35.039, 16.25}, {35.039, 14.848}, {33.902, 
                  13.711}, {32.5, 13.711}, {31.098, 13.711}, {29.961, 
                  14.848}, {29.961, 16.25}, {29.961, 17.652}, {31.098, 
                  18.789}, {32.5, 18.789}, {33.902, 18.789}, {35.039, 
                  17.652}, {35.039, 16.25}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 56.367}, {49.258, 54.965}, {48.121, 
                  53.828}, {46.719, 53.828}, {45.316, 53.828}, {44.18, 
                  54.965}, {44.18, 56.367}, {44.18, 57.769}, {45.316, 
                  58.906}, {46.719, 58.906}, {48.121, 58.906}, {49.258, 
                  57.769}, {49.258, 56.367}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 40.625}, {49.258, 39.223}, {48.121, 
                  38.086}, {46.719, 38.086}, {45.316, 38.086}, {44.18, 
                  39.223}, {44.18, 40.625}, {44.18, 42.027}, {45.316, 
                  43.164}, {46.719, 43.164}, {48.121, 43.164}, {49.258, 
                  42.027}, {49.258, 40.625}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 24.375}, {49.258, 22.973}, {48.121, 
                  21.836}, {46.719, 21.836}, {45.316, 21.836}, {44.18, 
                  22.973}, {44.18, 24.375}, {44.18, 25.777}, {45.316, 
                  26.914}, {46.719, 26.914}, {48.121, 26.914}, {49.258, 
                  25.777}, {49.258, 24.375}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{49.258, 8.6329}, {49.258, 7.2306}, {48.121, 
                  6.0938}, {46.719, 6.0938}, {45.316, 6.0938}, {44.18, 
                  7.2306}, {44.18, 8.6329}, {44.18, 10.035}, {45.316, 
                  11.172}, {46.719, 11.172}, {48.121, 11.172}, {49.258, 
                  10.035}, {49.258, 8.6329}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{62.969, 32.5}, {62.969, 31.098}, {61.832, 
                  29.961}, {60.43, 29.961}, {59.027, 29.961}, {57.891, 
                  31.098}, {57.891, 32.5}, {57.891, 33.902}, {59.027, 
                  35.039}, {60.43, 35.039}, {61.832, 35.039}, {62.969, 
                  33.902}, {62.969, 32.5}}}]}, {
                 FaceForm[
                  RGBColor[0.96078, 0.5098, 0.20784, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Mac OS X ARM (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9582c273-c0a7-442e-9b38-5f365bada852"
]

