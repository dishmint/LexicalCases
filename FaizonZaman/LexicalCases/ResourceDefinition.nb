Notebook[{

Cell[CellGroupData[{
Cell["FaizonZaman/LexicalCases", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->199157558,ExpressionUUID->"7e47b526-6c8d-4bdf-a411-74224bc9a67e"],

Cell["Extract lexical patterns from text", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->1461555280,ExpressionUUID->"9aa5979c-83e1-49fd-9867-78b5fafdbb07"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"d1f373e8-4e70-44b1-80a1-cfa815069ce7"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "/Users/faizonzaman/Developer/LexicalCases/FaizonZaman/LexicalCases", 
   "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"e78794cd-70f2-4353-8094-2c452aa4999a"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1240635904,ExpressionUUID->"b62644ad-d8b0-4415-becf-7a3a3e830a84"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"7653a313-5768-4c0d-9e39-0841386e3c48"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1675393764,ExpressionUUID->"533d2e8e-a511-4975-979d-39482be79ae3"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"37f54aea-b691-433a-a47e-a1da4d400a1b"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->537412084,ExpressionUUID->"3e556f3f-4461-4ca4-986f-9d09033a4f79"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"80b80e8e-cd89-4430-87e1-9793638dcb29"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2116160153,ExpressionUUID->"fbdf04a8-e5ae-46d5-826e-d95fec3f2e16"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "LexicalCases.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "LexicalCases.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1827013504,ExpressionUUID->"0c5ea38a-1802-4e51-80f9-e64b28a7c323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"06a50e48-070d-45a0-8eb7-b404905e802c"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1894776922,ExpressionUUID->"8ab70f3a-6d14-4f5e-b8c3-56912d64e6ec"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"20dcfa5c-a8bb-4d99-af1b-330652adc38f"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->480726691,ExpressionUUID->"280c276e-add7-48ed-ba0f-5c436fa56fc4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BoundToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "BoundToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "BoundToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->740015623,ExpressionUUID->"308568a1-af4c-4014-81ba-265e84db0908"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CountSummaryLowercase.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "CountSummaryLowercase.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "CountSummaryLowercase.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1364775984,ExpressionUUID->"6741af3f-93ae-4d1e-813e-8d3218be8a1e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DataJoin.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "DataJoin.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "DataJoin.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1421559643,ExpressionUUID->"611ff87a-d5cf-4898-b7c1-733172db8edf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ExpandPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ExpandPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ExpandPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->517129481,ExpressionUUID->"4b32c627-f178-4f56-92c2-82b4bccc8355"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FormatLexicalPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "FormatLexicalPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "FormatLexicalPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1397347026,ExpressionUUID->"ceeddacf-0085-441c-9458-62070d2c40de"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"HideMissing.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "HideMissing.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "HideMissing.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->330302390,ExpressionUUID->"1ed2c43f-b4d4-4881-8c5e-7fdafd0245f8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalCases.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalCases.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->528867758,ExpressionUUID->"56800f5c-0b77-484f-9008-3e8820e6a183"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalDispersionPlot.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalDispersionPlot.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalDispersionPlot.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->245593773,ExpressionUUID->"6b45979b-cb57-423e-b780-a88842d270c3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalDispersionSmoothHistogram.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalDispersionSmoothHistogram.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalDispersionSmoothHistogram.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1269254869,ExpressionUUID->"6ec98cde-a9e1-4627-a2ff-c825990dc353"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalMap.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalMap.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalMap.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1024412750,ExpressionUUID->"30fc5d21-5323-4cfd-8041-fef564f6153f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->230973277,ExpressionUUID->"56e05af6-2e49-4a11-9dc7-e3ad5ea2b579"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPatternQ.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalPatternQ.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalPatternQ.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->147041235,ExpressionUUID->"3278c04b-142e-44d6-8d9b-a006dcd6b54a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalStructure.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalStructure.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1464916410,ExpressionUUID->"fb466080-bb1a-475a-b400-65e367bc42c1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalSummary.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexicalSummary.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexicalSummary.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->2097573662,ExpressionUUID->"414f06fb-fb56-46e4-9425-58c99d576425"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexigramCount.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "LexigramCount.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "LexigramCount.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->246441829,ExpressionUUID->"fd220d33-5462-4c31-8e93-c7ccb07e322a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"MaxCategories.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "MaxCategories.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "MaxCategories.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1715842595,ExpressionUUID->"73f00f61-9010-401b-8337-4cf9c3e61fda"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"OptionalToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "OptionalToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "OptionalToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->828988082,ExpressionUUID->"6de12ddb-207d-4ba6-89a5-694f9a7094c4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"StopWordQ.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "StopWordQ.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "StopWordQ.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1756082249,ExpressionUUID->"b9a3f2a4-7ca0-4a16-b75e-bb7f9aad9afe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SynonymToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SynonymToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SynonymToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->937208025,ExpressionUUID->"0c55bce1-346c-4be0-a9e7-63899b35b627"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ToLexicalPattern.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "ToLexicalPattern.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "ToLexicalPattern.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1708221504,ExpressionUUID->"a5b5f9ba-7c9e-4e0a-9b8d-17594ec4035a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TypeToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "TypeToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "TypeToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1681880580,ExpressionUUID->"6c28cb36-e129-4c03-8f28-9461515b4dfe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"WordToken.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "WordToken.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "WordToken.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->369940985,ExpressionUUID->"c89089d2-3131-49e9-8907-66c5b70b6cfe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$FilterableProperties.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$FilterableProperties.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$FilterableProperties.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1606598222,ExpressionUUID->"9f573c8b-8314-4c80-8951-146888337732"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$LexicalCasesServices.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$LexicalCasesServices.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$LexicalCasesServices.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->632976830,ExpressionUUID->"12322c84-5441-4e5d-8fa2-a0fe9005cdcd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$SampleParagraph.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$SampleParagraph.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$SampleParagraph.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1784423423,ExpressionUUID->"1342f27a-1eb2-4bec-95cf-2b3339b94e88"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$SampleSentence.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$SampleSentence.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$SampleSentence.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1195340006,ExpressionUUID->"32314391-ff36-41ee-92ae-304ce6c6c561"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"$SampleStringExpression.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "$SampleStringExpression.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "$SampleStringExpression.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->369963157,ExpressionUUID->"c1c88aa0-39ab-494c-a2b1-af86020f9ec8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a93cf394-e6db-46c8-b5f7-d42d3b679bf6"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1955078219,ExpressionUUID->"acc952d4-d5f2-46cb-8f53-976cd5cf8dde"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCasesOverview.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Tutorials", 
       "LexicalCasesOverview.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials", 
    "LexicalCasesOverview.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->352343986,ExpressionUUID->"6db2863e-0fbc-43c1-a672-6ea3b88715cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"85e41613-8799-41fc-a1d3-561be9feeb57"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1232957923,ExpressionUUID->"dfbed877-2b7f-48fc-9756-5da54843460e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Abstractions.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Abstractions.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Abstractions.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1944259556,ExpressionUUID->"a39b5018-22c2-46f7-9ad7-4cc74407a76f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "LexicalCases.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "LexicalCases.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1254101958,ExpressionUUID->"082124b5-4b19-4275-8c44-64bafe5b408d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalPattern.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "LexicalPattern.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "LexicalPattern.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->139612801,ExpressionUUID->"9be004c6-b39e-4b9c-8458-369e26ff3305"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Plots.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Plots.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Plots.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1420203883,ExpressionUUID->"829815d5-0333-4836-bb39-f2c57e4fbea6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Samples.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Samples.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Samples.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->85925176,ExpressionUUID->"5fe5d6b5-edd0-436a-bf7d-db3dee88c964"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Utilities.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Utilities.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1035422248,ExpressionUUID->"1802c4a8-ee6a-40f0-afa9-544cc261b3e3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "Validation.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "Validation.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1281730495,ExpressionUUID->"fed8a68e-cb66-4722-9e54-4dd587cb62dd"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->635966408,ExpressionUUID->"5de8a9a1-de71-4473-be29-d7dcd07145e7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->49311844,ExpressionUUID->"3a610e4c-a8e2-4705-b711-2afbecb39d30"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tests\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"da191f7a-6f5f-42e2-8e4f-a01fafbac7ca"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->661308137,ExpressionUUID->"74722bae-2468-4575-8f44-6e76e1dca189"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Abstractions.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Abstractions.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Abstractions.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1056952604,ExpressionUUID->"d09be22a-87d1-4c36-96b5-dc4296f7fc72"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalCases.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "LexicalCases.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "LexicalCases.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1377985334,ExpressionUUID->"b03d8b28-3997-49d6-abbb-a6bc768a4d3f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LexicalStructure.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "LexicalStructure.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "LexicalStructure.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1335859290,ExpressionUUID->"cbc33ddb-20e1-44b8-ac0a-d7357ffb97eb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Patterns.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Patterns.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Patterns.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1993041292,ExpressionUUID->"d127a01c-08cd-4d12-b266-0c2ac0857d3b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Utilities.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Utilities.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Utilities.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->595068738,ExpressionUUID->"ebb7c723-db38-408d-8825-5c6c7c017c7f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Validation.wlt\"", 
     FileNameJoin[{
       NotebookDirectory[], "Tests", "Validation.wlt"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Tests", "Validation.wlt"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->488935487,ExpressionUUID->"d1ffbdfa-6115-4499-a253-157df97a0618"]
}, Open  ]],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1266296587,ExpressionUUID->"9fbeb499-16eb-4903-bb02-bb92e1f36702"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7ad9fe76-0c7e-4142-b6bf-b0a0d5102dfd"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"f0f82ee6-156b-486e-90c8-c4954b6c92e3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dfcff3d5-8d8e-4861-93e3-26a2199d5538"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"82c8f9f9-2153-478c-b409-0d05deaedabc"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"theory of evolution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12589928057553956`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of natural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05204033494515863],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {1.5, -39.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of the\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03258049298266305],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, 38.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of inheritance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022408302865904],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, 54.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of molecular\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.022408302865904],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, -62.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of transformation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {52.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of recapitulation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {2.5, 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of modernization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-0.5, -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of transmutation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-0.5, 79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of electromagnetic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-0.5, -88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of punctuated\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-84.5, 20.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of sociocultural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-0.5, 90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of pangenesis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 101.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"theory of associationism\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-0.5, -101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of discontinuous\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {101.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of consciousness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-103.5, 34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biological\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02108149545937021],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, 113.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biodiversity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {102.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of continental\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-0.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of interpersonal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-106.5, 46.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biogeography\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {103.5, -58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of bureaucracy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-102.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gravitation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-97.5, 66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of alienation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {101.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of evolutionary\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-102.5, -68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of anticyclones\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {100.5, -72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of intelligent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {100.5, 71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of heredity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-0.5, 125.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"theory of exploitation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-99.5, 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of neuronal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {96.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of distribution\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-0.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of universal\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-99.5, -82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of descent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020639226323858947`],
     FontColor->RGBColor[1, 0.75, 0]], {98.5, -85.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"theory of commodity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-96.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of organic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020196957188347686`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {92.5, 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of adaptation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-0.5, 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of knowledge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-97.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of envariance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-0.5, -138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of divergence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {97.5, -99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Darwinism\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-95.5, 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of diffraction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {94.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of relativity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-89.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of diseases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {88.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of cultural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-90.5, 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of derivation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {90.5, 118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Darwinian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-0.5, 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of chemistry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {145.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of branching\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-0.5, -150.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of education\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-88.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of genetics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {144.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of emotion\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {85.5, -125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of species\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019754688052836422`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-85.5, 129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of sexual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02108149545937021],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {84.5, 130.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"theory of economic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-0.5, 161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gradual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-84.5, -136.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {83.5, -139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of emotions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-0.5, -162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of historical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-161.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of clinamen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {84.5, 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of business\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-85.5, 141.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of society\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-81.5, -151.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of human\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {80.5, -152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of mankind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-0.5, 173.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of common\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-0.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of higher\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-79.5, 155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of complex\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {82.5, 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of history\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-173.5, 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of value\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.020196957188347686`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-78.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of creation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {79.5, -165.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of humors\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {79.5, 166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of geology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-0.5, -186.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Charles\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-80.5, 166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Forms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-0.5, 185.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of social\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-178.5, 58.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of general\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {183.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of memes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-185.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of cosmic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {189.5, 33.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of biology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {76.5, -177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of George\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {76.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of mind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.019312418917325158`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-189.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of honest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {181.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Gustaf\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {175.5, 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of fitness\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-75.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of magic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {168.5, 94.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of linear\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-184.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of island\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-74.5, -178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of group\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-176.5, -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of how\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018870149781813894`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-178.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Lewis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {175.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of race\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-161.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of body\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {185.5, -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of Ernst\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-174.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of early\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {161.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of gene\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {-173.5, -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of 1809\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-0.5, 196.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of man\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-162.5, 112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of atoll\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {168.5, 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of kin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-185.5, 43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of an\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.018427880646302634`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {153.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"theory of a\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017985611510791366`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-149.5, 126.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  ImageSize->{633.8671875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-280., 276.}, {-195., 203.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8672490849354277`*^9, 3.867249101873516*^9}, 
   3.867249183387917*^9, 3.8672520845880423`*^9, 3.872268095919383*^9, 
   3.872268269840005*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"7d577cfb-6896-47b0-b322-096306ed5e39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "489ddd6a-0b93-4509-84fa-2829105e9cad"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"6d3cbf98-5787-46aa-ba92-4ba7bac67e08"],

Cell[TextData[{
 "Search text for lexical patterns. While similar to ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a6718430-fbc0-4e0e-a725-e72908d81de4"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6ecdecb1-4117-4b83-8bca-7a3c13fe0834"],
 " etc., content types can be used freely in a StringExpression (as opposed \
to expressing complex lexical patterns in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "707866ba-f851-474e-a517-402c00aad77a"],
 " wrapper). Files, search index objects, and Wikipedia queries are \
supported. Results are returned in a summary object which supports several \
subvalues. Consult the documentation for usage."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867249288040543*^9, 3.8672494722485037`*^9}, {
  3.867251889550839*^9, 3.867251893349916*^9}, {3.867251924252048*^9, 
  3.867252040200535*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"0513d90e-45e4-407d-8e87-889b4c0190e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7430aa47-9b6d-4ad0-98ab-d7af5f922754"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"12006bca-6dbc-460a-8a26-b12ec442cb0c"],

Cell[TextData[{
 "This functionality came about when I needed to find adjectives before \
certain phrases. I initially gathered article text from Wikipedia, then used ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "657c3d98-698d-4a9b-9a0a-9cdf6a9dfcf1"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f719ea67-ee0e-448c-8327-cc80f8dbd597"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "11e789b4-ecf5-45ac-b72f-0436b7eb8010"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "82f9a55b-d8ee-4a0a-b55e-b030463a8377"],
 " for example), but it turned out to be slow. So I implemented some lexical \
pattern objects for use in ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox[
     StyleBox["StringExpression", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"], "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cd466345-9b99-4104-bd5d-d917d216bab5"],
 "'s. This way I can search for the string pattern with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "97dd67d1-d58f-448b-95ae-5a49e42e99c5"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867791235048098*^9}, {
   3.867791269135138*^9, 3.867791355006954*^9}, 3.867791480276322*^9, {
   3.8828185148804393`*^9, 3.882818727724704*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"066f6fd1-b550-4a7d-b4c5-903ab168d6cc"],

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e6d11956-aa6b-4e3d-9b37-db99af17ce1d"],
 " is used internally to extract examples of a content type from the source \
text. These examples then replace the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TypeToken", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7ee4cb2d-8537-4346-9075-a1075a0756b5"],
 " in the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringExpression", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringExpression",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fe3a6864-281f-42a5-bb15-f81f8341cb02"],
 ". You can see the lexical pattern generated from a piece of text with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ExpandPattern", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:FaizonZaman/LexicalCases/ref/ExpandPattern",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "05553b1b-0ff8-454a-aba7-ff6547178a07"],
 ". Note that this means, for example, if you have ",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["TypeToken", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:FaizonZaman/LexicalCases/ref/TextType",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   TagBox[
    ButtonBox[
     StyleBox[
      StyleBox["\"\<Adjective\>\"", "TextContentsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"], "StringTypeLink",
      StripOnInput->False],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"ref/textcontent/Adjective",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "650d9146-21c1-462f-bed4-c004cba6c374"],
 " in your lexical pattern, the token will be replaced by all text snippets \
identified as adjectives in the source text."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, {
  3.867791371520297*^9, 3.867791424085564*^9}, {3.92559967685968*^9, 
  3.925599697319278*^9}},
 CellTags->"DefaultContent",
 CellID->95094794,ExpressionUUID->"b691f1d8-83c9-4aef-8a84-6d37dc743602"],

Cell[TextData[{
 "I'd also like to say thanks to Swastik Banerjee for helping me improve ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SearchIndexObject", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/SearchIndexObject",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9ad6c6f4-bfab-4cd8-bf5f-83e60ee211c6"],
 " support!"
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.867790957736844*^9, 3.867790979271399*^9}, 
   3.867791366308352*^9, {3.86779144799393*^9, 3.867791450914543*^9}, 
   3.879713261083514*^9},
 CellTags->"DefaultContent",
 CellID->601398866,ExpressionUUID->"63301e25-efae-4d57-a6c4-9395a8ee4813"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "38404330-47ed-4f4a-8d2c-03ff5873c7c8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"1e6b1f47-e1e0-4a76-91f9-e61c67fceadb"],

Cell["FaizonZaman`LexicalCases`", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.91537554390294*^9, 3.915375549069252*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->310388821,ExpressionUUID->"5bd10f6f-0119-4f33-a950-ce18d87608ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4f6b8890-f89a-4078-a1af-db8ac9592265"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"a389a1c8-4b3d-48a7-8b5c-a854b299e046"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "MainGuidePageString" -> "Documentation/English/Guides/LexicalCases.nb", 
   "Refreshing" -> False, "Relative" -> True},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"de41ca4e-8d9a-478e-ac3b-1e6a581326ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c367b6d4-5a8a-418d-b116-32c121943307"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"aa306085-a169-4a3d-aad4-9f971c72a9fa"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{{3.91522334954283*^9, 3.915223351147139*^9}, {
  3.915491425748333*^9, 3.915491426774502*^9}},
 CellLabel->"In[29]:=",
 CellID->926712916,ExpressionUUID->"c66c6b20-67c9-4124-89b9-e9a2d883ad93"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "131a5004-07be-4173-97b5-0eab59552511"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->468286435,ExpressionUUID->"fcc31bf9-c68b-46d3-af7a-1743e523210d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->633295841,ExpressionUUID->"cf5cc426-5100-46c4-b0d1-d1710f1b6093"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}]}], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.933090698942905*^9, 3.933090704377036*^9}},
 CellLabel->"In[2]:=",
 CellID->256310072,ExpressionUUID->"eb55145d-350c-418c-b293-88b0e494e9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{{3.882937778205875*^9, 3.882937778932868*^9}},
 CellLabel->"In[4]:=",
 CellID->1340259360,ExpressionUUID->"6fc9babd-7c71-4f1a-bee4-9a83f055a042"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tests", "=", 
     RowBox[{
      RowBox[{"PacletExtensionFiles", "[", 
       RowBox[{
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Expression", 
            StyleBox[
            "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> 
             False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Symbol", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]},
           "IconizedObject"]],
         PacletResource`DefinitionNotebook`$PacletDirectory,
         SelectWithContents->True,
         Selectable->False], ",", "\"\<Resource\>\""}], "]"}], "//", 
      RowBox[{"Values", "/*", "Flatten"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"QuietEcho", "@", 
    RowBox[{"TestReport", "[", "tests", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{
  3.882937822011593*^9, {3.882937870592862*^9, 3.882937898936121*^9}, {
   3.915322483631161*^9, 3.915322484346751*^9}, {3.915334420271572*^9, 
   3.9153344242710943`*^9}, {3.915414414238249*^9, 3.915414415187216*^9}, {
   3.91598883821037*^9, 3.915988849604813*^9}, {3.915989031567638*^9, 
   3.915989032111862*^9}, {3.91598915160536*^9, 3.915989175970685*^9}},
 CellLabel->"In[1]:=",
 CellID->980444637,ExpressionUUID->"e69dc852-d732-4961-b281-adac06945d92"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: LexicalStructure.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["78", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Test Report: LexicalStructure.wlt\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["78", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["78", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.2787629999999999999`5.056294485504408", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> "Test Report: LexicalStructure.wlt", "Aborted" -> False, 
    "TestResults" -> <|
     7362047492108827778 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684116230000000000001`15.64928332615971*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "3045aa2b-57e4-46c6-bd4c-fb9db5318829", "TestID" -> 
         "LexicalStructureTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalStructure.wlt", "EvaluationID" -> 
         "ffcaa3dd-e3da-4634-9c66-cc9ef735f1a5", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalStructure[
            StringExpression[
             Alternatives["computer", "computers"], 
             FaizonZaman`LexicalCases`TypeToken["Verb"]]]], "ExpectedOutput" -> 
         HoldForm[
           TextElement[{
             TextElement[{
               Alternatives[
                TextElement[{"computer"}, <|"GrammaticalUnit" -> "Text"|>], 
                
                TextElement[{"computers"}, <|
                 "GrammaticalUnit" -> "Text"|>]]}, <|
              "GrammaticalUnit" -> "Alternatives"|>], 
             TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TypeToken"|>]}, <|
            "GrammaticalUnit" -> "StringExpression"|>]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           TextElement[{
             TextElement[{
               Alternatives[
                TextElement[{"computer"}, <|"GrammaticalUnit" -> "Text"|>], 
                
                TextElement[{"computers"}, <|
                 "GrammaticalUnit" -> "Text"|>]]}, <|
              "GrammaticalUnit" -> "Alternatives"|>], 
             TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TypeToken"|>]}, <|
            "GrammaticalUnit" -> "StringExpression"|>]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000185`2.417686726235008, "CPUTimeUsed" -> 0.0001870000000003813, 
         "MemoryUsed" -> 5952, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4467045581974425864 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568423847`15.649283326161056*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "bc749d0e-4f16-4682-83d2-e32f3e2fe0cb", "TestID" -> 
         "ShortStringTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "3b17981f-ece6-4306-a399-21e7e05d3d75", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleSentence, 
            FaizonZaman`LexicalCases`$SampleStringExpression]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "best key lime pie", "Position" -> {{5, 21}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "best key lime pie", "Position" -> {{5, 21}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.444526`6.310240360941881, "CPUTimeUsed" -> 0.14219000000000026`, 
         "MemoryUsed" -> 1208632, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 6693745743710863926 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568424091`15.649283326161083*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "97e1c567-a9ff-46bc-a545-5cd8de174464", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "85d6f695-8685-45d7-85e4-31b419fd32ad", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["great ", 
             FaizonZaman`LexicalCases`BoundToken["machine"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00451`3.8046915397099546, "CPUTimeUsed" -> 0.004516999999999882, 
         "MemoryUsed" -> 13872, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 6643067399705885820 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684242570000000000001`15.649283326161099*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "2c0a9681-f202-4ef4-ae4c-75487b766a82", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "30d7a972-234c-443e-ae5a-3c84c19e19a7", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["great ", 
             FaizonZaman`LexicalCases`BoundToken["machine"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00413`3.766465049488395, "CPUTimeUsed" -> 0.004140000000000477, 
         "MemoryUsed" -> 7608, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5286372863470977613 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568424416`15.64928332616112*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "1d9b2b95-e8bd-4732-843c-4720f37de592", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "6320876d-fef2-41b1-bfa3-f0651b612cb8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["weak ", 
             FaizonZaman`LexicalCases`BoundToken["machines"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004186`3.7723142218346615, "CPUTimeUsed" -> 0.004220000000001001, 
         "MemoryUsed" -> 8056, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 308812363314278494 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684245670000000000001`15.649283326161134*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "6d563f0d-8eef-4c86-968d-f974372d1926", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "8034f7de-b94e-405d-9cea-86fcfdba8bc4", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression["weak ", 
             FaizonZaman`LexicalCases`BoundToken[
              RegularExpression["\\w+"]]]]["Data"]], "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "weak machines", "Position" -> {{30, 42}}|>}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004252`3.779108253683253, "CPUTimeUsed" -> 0.004260000000000375, 
         "MemoryUsed" -> 8616, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8239482898412596007 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568424711`15.64928332616115*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "3a0dd525-0c6f-4e0d-81ec-45d36c206f77", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "946c9c01-a8a1-4143-a840-23775965d4f8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases["He was number 1!", 
            StringExpression["number ", 
             FaizonZaman`LexicalCases`BoundToken[DigitCharacter]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "number 1", "Position" -> {{8, 15}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "number 1", "Position" -> {{8, 15}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004413`3.7952489252791866, "CPUTimeUsed" -> 0.004420999999999786, 
         "MemoryUsed" -> 7808, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 112048745854094428 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684248590000000000001`15.649283326161168*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "825781fb-81d5-4a89-8e75-e772c0cd408a", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test5", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "e295c57c-69e2-4f41-a2c7-886aaaebd905", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "The great machine whirs. The weak machines sputter.", 
            StringExpression[
             Alternatives["great", "weak"], " ", 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["machine", "machines"]]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>, <|
            "Match" -> "weak machines", "Position" -> {{30, 42}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "great machine", "Position" -> {{5, 17}}|>, <|
            "Match" -> "weak machines", "Position" -> {{30, 42}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005401`3.8829891751131878, "CPUTimeUsed" -> 0.005411000000000499, 
         "MemoryUsed" -> 27912, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 39160000590931452 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568425045`15.64928332616119*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "edb4e6c8-21d6-4e5a-ac25-4f8657fd4d49", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "48a24d92-9afa-4e25-b55a-8aa63c8e2554", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[2], " screen"]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "a blank screen", "Position" -> {{144, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "with the screen", "Position" -> {{480, 494}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "a blank screen", "Position" -> {{144, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "with the screen", "Position" -> {{480, 494}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00787`4.046489730191059, "CPUTimeUsed" -> 0.004844999999999544, 
         "MemoryUsed" -> 14688, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 2182569609262038572 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568425195`15.649283326161205*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "5beb035f-10fa-4ea0-bf09-51ad30d8e2c6", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "3f1e40f6-6e62-436e-82cb-7e6c040320d4", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[2, 4], " screen"]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "sat with a blank screen", 
             "Position" -> {{135, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "would end with the screen", 
             "Position" -> {{470, 494}}|>}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "sat with a blank screen", 
             "Position" -> {{135, 157}}|>, <|
            "Match" -> "That blank screen", "Position" -> {{176, 192}}|>, <|
            "Match" -> "would end with the screen", 
             "Position" -> {{470, 494}}|>}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.005142`3.8616470701388357, "CPUTimeUsed" -> 
         0.005148999999999404, "MemoryUsed" -> 13432, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 417563417626590212 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256842536`15.649283326161223*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ad29f833-4ae6-44df-9ab0-2f9fd9d56013", "TestID" -> 
         "LexicalCases-DocExamples-WordToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "a19c152e-74b4-40f3-8683-52de39fb2e5c", "Input" -> HoldForm[Length[
             Composition[Join, Flatten][{
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[2], " screen"]]["Data"], 
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[3], " screen"]]["Data"], 
               FaizonZaman`LexicalCases`LexicalCases[
               FaizonZaman`LexicalCases`$SampleParagraph, 
                StringExpression[
                 FaizonZaman`LexicalCases`WordToken[4], " screen"]][
               "Data"]}]] === RightComposition[DeleteDuplicates, Length][
             FaizonZaman`LexicalCases`LexicalCases[
             FaizonZaman`LexicalCases`$SampleParagraph, 
              StringExpression[
               FaizonZaman`LexicalCases`WordToken[2, 4], " screen"], Overlaps -> 
              True]["Data"]]], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.016796`4.375720863797896, "CPUTimeUsed" -> 0.01686199999999971, 
         "MemoryUsed" -> 18168, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 9051416689422506145 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568425539`15.64928332616124*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "238a5c69-64bc-4d79-9464-a025c6a360b9", "TestID" -> 
         "LexicalCases-DocExamples-OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "fa4eefb8-812a-493d-8cd3-ade716f017d4", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "this is a cool string. this is a string.", 
            StringExpression["this is a", 
             FaizonZaman`LexicalCases`OptionalToken["cool"], "string"]][
           "Data"]], "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "this is a cool string", "Position" -> {{1, 21}}|>, <|
            "Match" -> "this is a string", "Position" -> {{24, 39}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "this is a cool string", "Position" -> {{1, 21}}|>, <|
            "Match" -> "this is a string", "Position" -> {{24, 39}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00449`3.8027613388353174, "CPUTimeUsed" -> 0.00449500000000036, 
         "MemoryUsed" -> 9816, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5945893656793066161 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568425719`15.649283326161262*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "88dfebb6-8d41-4a67-b8da-df90f6ae65ee", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "bdc87c51-3db5-48d2-b17f-23ea7173ef7f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`WordToken[2, "KeepContractions"], 
             " he "]]["Data"]], "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "but here he sat with", "Position" -> {{123, 142}}|>, <|
            "Match" -> "understand why he couldn't even", 
             "Position" -> {{266, 296}}|>, <|
            "Match" -> "eight hours he was prepared", 
             "Position" -> {{404, 430}}|>}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "but here he sat with", "Position" -> {{123, 142}}|>, <|
            "Match" -> "understand why he couldn't even", 
             "Position" -> {{266, 296}}|>, <|
            "Match" -> "eight hours he was prepared", 
             "Position" -> {{404, 430}}|>}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.006628`3.971897497579293, "CPUTimeUsed" -> 
         0.00666000000000011, "MemoryUsed" -> 10776, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 9072621057043268309 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568425887`15.649283326161278*^9, "SameTest" -> MatchQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "04a5898a-a717-4a8c-af3d-c2fb9e125233", "TestID" -> 
         "LexicalCases-DocExamples-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "664427f5-7ebb-47d4-8dd7-44530c909d89", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "a nice car is good.", FaizonZaman`LexicalCases`BoundToken[
              Pattern[$CellContext`w, 
               FaizonZaman`LexicalCases`WordToken[1]], 
              FaizonZaman`LexicalCases`BoundToken["car"]] :> $CellContext`w]],
          "ExpectedOutput" -> HoldForm[
           Blank[Failure]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Failure[
           "ConfirmationFailed", <|
            "MessageTemplate" -> "Message issued while calling StringCases", 
             "MessageParameters" -> {}, "ConfirmationType" -> "ConfirmQuiet", 
             "Expression" :> Hold[
               StringCases[
               FaizonZaman`LexicalCases`Private`s$20753, 
                FaizonZaman`LexicalCases`Private`rx$20753, IgnoreCase -> 
                OptionValue[
                 FaizonZaman`LexicalCases`LexicalCases, {}, IgnoreCase], 
                Overlaps -> 
                OptionValue[
                 FaizonZaman`LexicalCases`LexicalCases, {}, Overlaps]]], 
             "Information" -> "Message issued while calling StringCases", 
             "HeldExpression" -> Hold[
               StringCases[
               FaizonZaman`LexicalCases`Private`s$20753, 
                FaizonZaman`LexicalCases`Private`rx$20753, IgnoreCase -> 
                OptionValue[
                 FaizonZaman`LexicalCases`LexicalCases, {}, IgnoreCase], 
                Overlaps -> 
                OptionValue[
                 FaizonZaman`LexicalCases`LexicalCases, {}, Overlaps]]], 
             "HeldMessageName" -> Hold[
               MessageName[StringExpression, "cond"]], "HeldMessageCall" -> 
             Hold[
               Message[
                MessageName[StringExpression, "cond"], $CellContext`w, 
                Pattern[$CellContext`w, 
                 StringExpression[WordBoundary, 
                  Repeated[WordCharacter], WordBoundary]]]]|>]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.032737`4.665553876232852, "CPUTimeUsed" -> 0.032267000000000046`, 
         "MemoryUsed" -> 8768, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8138041654009908707 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568426062`15.6492833261613*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "28f02a79-d28f-48b7-b1a3-d2029eeeac98", "TestID" -> 
         "LexicalCases-DocExamples-TypeToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "0d8d08f3-43c1-44e3-b3da-215cadf7b444", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, StringExpression[
              Pattern[$CellContext`adjective, 
               FaizonZaman`LexicalCases`TypeToken["Adjective"]], 
              " screen"] :> $CellContext`adjective]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         2.730022`6.58668114466766, "CPUTimeUsed" -> 2.4359910000000005`, 
         "MemoryUsed" -> 52048888, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7735113545884152269 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256842621`15.649283326161317*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "9b301229-b6bf-466a-9b4c-ba652d2ff36e", "TestID" -> 
         "LexicalCases-DocExamples-TypeToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "018279ed-f4de-4ad3-ac3b-59a70d21c967", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           FaizonZaman`LexicalCases`$SampleParagraph, StringExpression[
              Pattern[$CellContext`adjectiveOrDeterminer, 
               FaizonZaman`LexicalCases`TypeToken[
                Alternatives["Adjective", "Determiner"]]], 
              " screen"] :> $CellContext`adjectiveOrDeterminer]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>, <|
            "Match" -> "the", "Position" -> {{485, 494}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|
            "Match" -> "blank", "Position" -> {{146, 157}, {181, 192}}|>, <|
            "Match" -> "the", "Position" -> {{485, 494}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.021911`4.491177196687603, "CPUTimeUsed" -> 0.053589999999999804`, 
         "MemoryUsed" -> 28840, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 2953953235522807985 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568426393`15.649283326161335*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "129f082e-ceb3-4f65-8237-b8e745670b07", "TestID" -> 
         "LexicalCases-DocExamples-SynonymToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/LexicalCases.wlt", "EvaluationID" -> 
         "8551f4d7-c78f-4a38-9822-1dcd45fb91e0", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalCases[
           "cool person. nice mortal. great soul.", 
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken["Adjective"], " ", 
             FaizonZaman`LexicalCases`SynonymToken["person"]]]["Data"]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "cool person", "Position" -> {{1, 11}}|>, <|
            "Match" -> "nice mortal", "Position" -> {{14, 24}}|>, <|
            "Match" -> "great soul", "Position" -> {{27, 36}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "cool person", "Position" -> {{1, 11}}|>, <|
            "Match" -> "nice mortal", "Position" -> {{14, 24}}|>, <|
            "Match" -> "great soul", "Position" -> {{27, 36}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.86399`6.420958575937688, "CPUTimeUsed" -> 1.8107799999999976`, 
         "MemoryUsed" -> 162167944, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4930815828353883015 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568437853`15.649283326162601*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "caee9f7c-2752-4a44-a030-9257e2d59f38", "TestID" -> 
         "LexicalMapTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "f575f0ee-80fd-4359-8f2f-55436daa1820", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[ToUpperCase, "This is cool", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Verb"]]]]], "ExpectedOutput" -> 
         HoldForm["This IS COOL"], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm["This IS COOL"], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0069`3.9893640885692494, "CPUTimeUsed" -> 
         0.005785999999998737, "MemoryUsed" -> 5640, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8041696850144999069 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568438059`15.649283326162623*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "732cd6d8-a464-4dab-b3d9-d920666062d9", "TestID" -> 
         "LexicalMapTest2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "936aad91-85af-4b63-b86e-18207230290e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalMap[
            RightComposition[StringReverse, ToUpperCase], "This is cool", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Verb"]]]]], "ExpectedOutput" -> 
         HoldForm["This SI LOOC"], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm["This SI LOOC"], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.006173`3.941011274799103, "CPUTimeUsed" -> 
         0.005378000000002103, "MemoryUsed" -> 5888, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 322466845752533450 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568438217`15.649283326162639*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "7d3c7c73-51ca-4143-9189-c101b2abed18", "TestID" -> 
         "LexicalMapTest3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "9d6f6b3f-6c15-40ff-a255-5ca6f3563654", "Input" -> HoldForm[
           
           FaizonZaman`LexicalCases`LexicalMap[("**" <> #) <> "**"& , 
            "This is cool", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Verb"]]]]], "ExpectedOutput" -> 
         HoldForm["This **is** **cool**"], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm["This **is** **cool**"], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00618`3.9415034729208096, "CPUTimeUsed" -> 0.005418999999999841, 
         "MemoryUsed" -> 5768, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8579059752606972407 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568438366`15.649283326162656*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "64705c99-4f0b-4177-afe5-378aab411f94", "TestID" -> 
         "LexicalMapTest4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "5fb9599c-0498-4328-8872-5c4908c84c72", "Input" -> HoldForm[
           
           FaizonZaman`LexicalCases`LexicalMap[("**" <> #) <> "**"& , 
            "This is cool", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Verb"]]]]], "ExpectedOutput" -> 
         HoldForm["This **is** **cool**"], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm["This **is** **cool**"], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00566`3.9033314290202656, "CPUTimeUsed" -> 0.005008999999999375, 
         "MemoryUsed" -> 4480, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5222135392752475867 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568438542`15.649283326162672*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "c2ab8aab-bb0d-44ce-8345-96a4b277478a", "TestID" -> 
         "LexigramCountTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "bd42affd-3a02-4a83-bd9c-e87bb2a294e5", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TypeToken["Verb"], 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[3], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[3], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000153`2.3352064286495926, "CPUTimeUsed" -> 
         0.00015400000000020952`, "MemoryUsed" -> 4048, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4953254132395351482 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684386890000000000001`15.64928332616269*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "118fe518-ee92-456a-8094-eb87fe651fcd", "TestID" -> 
         "LexigramCountTest2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "36d8e8de-1aad-41d5-a22d-e1f16579a291", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TypeToken["Verb"], 
             FaizonZaman`LexicalCases`OptionalToken["away"], 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[
           Interval[{3, 4}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{3, 4}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000471`2.82353590496089, "CPUTimeUsed" -> 0.000321000000001348, 
         "MemoryUsed" -> 4544, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8489871958917406551 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256843883`15.649283326162708*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "c4e7d025-ef00-4d6b-a5e3-92a59b0422af", "TestID" -> 
         "LexigramCountTest3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "a9d54f38-51a4-43a9-bc7f-febed7fa6b73", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken["Adjective"], "hello", 
             FaizonZaman`LexicalCases`OptionalToken[
              FaizonZaman`LexicalCases`TypeToken["Verb"]]]]], 
         "ExpectedOutput" -> HoldForm[
           Interval[{2, 3}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{2, 3}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000218`2.488971491436599, "CPUTimeUsed" -> 0.00021799999999849717`,
          "MemoryUsed" -> 3752, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 6592181290596033303 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684389700000000000001`15.64928332616272*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "94434b4a-de51-4eee-8a40-8e25fa3a0931", "TestID" -> 
         "LexigramCountTest4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Abstractions.wlt", "EvaluationID" -> 
         "458ed02f-5bc3-42ee-8d1d-4dd885841717", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexigramCount[
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken["Adjective"], "hello", 
             FaizonZaman`LexicalCases`OptionalToken[
              StringExpression[
               FaizonZaman`LexicalCases`TypeToken["Verb"], 
               FaizonZaman`LexicalCases`OptionalToken["there"]]]]]], 
         "ExpectedOutput" -> HoldForm[
           Interval[{2, 4}]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Interval[{2, 4}]], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0004370000000000001`2.790996434802416, "CPUTimeUsed" -> 
         0.00043699999999979866`, "MemoryUsed" -> 3960, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5928518352032832196 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568451311`15.649283326164081*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "22a4d797-e4f6-4961-a37e-2f5e2bc1fd4d", "TestID" -> 
         "LexicalPatternQTest1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "c2cf9c08-3ad3-4b39-98fb-357ccf8ab15d", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
           FaizonZaman`LexicalCases`$SampleStringExpression]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000094`2.1236428514316925, "CPUTimeUsed" -> 0.00009399999999892827,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 6822546096943165455 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256845152`15.649283326164106*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "5ca835b3-e7a0-4a3a-9353-c0ae7d9f7661", "TestID" -> 
         "LexicalPatternQ-UnvaluedSymbols-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "db32f475-82bc-4f86-b4df-11064634781c", "Input" -> HoldForm[
           FailureQ[
            FaizonZaman`LexicalCases`LexicalPatternQ[
             StringExpression["Alice", $CellContext`xxx, 
              FaizonZaman`LexicalCases`TypeToken["Adverb"]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000119`2.2260619592245243, "CPUTimeUsed" -> 
         0.00011899999999975819`, "MemoryUsed" -> 4528, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3452914156035574024 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568451693`15.649283326164124*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "9e2712ad-1213-4492-8a59-9c3c5f92d7a2", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "bd7c1b94-f670-45ff-8fce-0ffa30a850ac", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression[
             Alternatives["great", "weak"], 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["machine", "machines"]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000181`2.4081935727011787, "CPUTimeUsed" -> 
         0.00018099999999954264`, "MemoryUsed" -> 3464, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5247263513186225746 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568451828`15.64928332616414*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "08bca045-ac38-43b7-af5b-7b23dfa8c788", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "d028cbd7-8cdd-4dae-a6db-a2702506d456", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["weak", 
             FaizonZaman`LexicalCases`BoundToken["machines"]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000124`2.243936682994229, "CPUTimeUsed" -> 0.0001239999999995689, 
         "MemoryUsed" -> 3584, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8946601301110794291 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256845196`15.649283326164154*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "6a7d564a-4bc1-4a4d-ad06-97c4ddaa7e9c", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "d2a2bf4a-1a4e-48df-8915-0472f5990613", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["weak", 
             FaizonZaman`LexicalCases`BoundToken[
              RegularExpression["\\w+"]]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000128`2.257724967479862, "CPUTimeUsed" -> 0.00012900000000115597`,
          "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5279049013091164431 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452089`15.649283326164166*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "479aa85f-04cd-43a0-a33f-12d0da301480", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "497edc22-7f11-437f-af21-ed12c5f14069", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["number", 
             FaizonZaman`LexicalCases`BoundToken[DigitCharacter]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000126`2.2508855429495567, "CPUTimeUsed" -> 
         0.00012599999999984846`, "MemoryUsed" -> 3464, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4114576011105012319 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684522150000000000001`15.649283326164184*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "a047df85-96f3-4fdd-90a7-09e49056abc3", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test5", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "76871896-8b7d-4373-8d9d-877e10671491", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            FaizonZaman`LexicalCases`BoundToken["outer", "inner"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000168`2.3758242795578566, "CPUTimeUsed" -> 
         0.00016899999999964166`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8078855922026468847 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684523400000000000001`15.649283326164197*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "c2a770f3-bc80-49f6-9458-09e6194e3270", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test6", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "4bb14afe-6f21-4c88-8a62-bcd4ea01af32", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`BoundToken["outer"], "inner"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00027`2.5818787619909815, "CPUTimeUsed" -> 0.0002689999999994086, 
         "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4946066894588043695 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452464`15.649283326164209*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ee02a6d0-5deb-473f-ac39-8d0bd2f3d6e6", "TestID" -> 
         "BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "2ce4bd31-d82b-4428-ae16-548a4b93a388", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659124, "CPUTimeUsed" -> 0.00002200000000129876,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8981516007338415547 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452588`15.649283326164221*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "df75c1b0-6b3c-4e00-9445-cb2ae8892700", "TestID" -> 
         "BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "06945cae-5e08-42ed-bd46-884eeefb61d5", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000021`1.4727342925659135, "CPUTimeUsed" -> 
         0.000021000000000270802`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 7953192617158452742 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452714`15.649283326164234*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "e624f295-4e1d-40fc-a88d-6513afecd308", "TestID" -> 
         "BoundToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "18f0a6c4-7e62-43ee-bd11-6c53d791b9c1", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["A", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ActualMessages" -> {},
          "AbsoluteTimeUsed" -> 0.000021`1.4727342925659124, "CPUTimeUsed" -> 
         0.000021000000000270802`, "MemoryUsed" -> 3416, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3178684048820881750 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452839`15.649283326164252*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "0370c5c2-9ba8-4b31-9b90-b1aea0973da3", "TestID" -> 
         "BoundToken-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "1de2ded4-40dc-45b1-a03c-af712c982904", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["outer", "inner"]], 
         "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["outer", "inner"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["outer", "inner"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000020000000001019203`,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 4051779532048455603 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568452992`15.64928332616427*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "c3cb775b-ae4f-4850-843e-10882c703aa0", "TestID" -> 
         "LexicalPatternQ-WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "78931cfc-0429-463f-a20b-b25679ed1caf", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["pattern", 
             FaizonZaman`LexicalCases`WordToken[1]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000083`2.069593090208068, "CPUTimeUsed" -> 0.00008300000000005525, 
         "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7533213457815559895 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453117`15.649283326164282*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "eaa557de-fc03-4be5-9758-60f2422741b5", "TestID" -> 
         "LexicalPatternQ-WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "04fa2190-24b7-4bac-a337-e0f85ce3fb86", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["number", 
             FaizonZaman`LexicalCases`WordToken[1, 2]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00008`2.0536049848239375, "CPUTimeUsed" -> 0.0000800000000005241, 
         "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1503811630220519023 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684532410000000000001`15.649283326164294*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "f3ca561e-af34-4892-a0cc-6476b8dc47de", "TestID" -> 
         "LexicalPatternQ-WordToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "7e7612ef-25a8-4c8a-acc9-d7ad27d708a8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this", "is", 
             FaizonZaman`LexicalCases`WordToken[1, "KeepContractions"], 
             "place"]]], "ExpectedOutput" -> HoldForm[True], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[True],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000083`2.0695930902080675, "CPUTimeUsed" -> 0.00008400000000108321,
          "MemoryUsed" -> 3520, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 7649746762692750214 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453394`15.649283326164312*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "7c0922ce-4fa0-40ea-bd93-c49a1088e7d6", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "5614eb12-3af0-4f2a-82ac-2abbdd9ebb4e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this is a", 
             FaizonZaman`LexicalCases`OptionalToken[
              FaizonZaman`LexicalCases`TypeToken["Adjective"]], "string"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000141`2.299734110487374, "CPUTimeUsed" -> 0.00014100000000105695`,
          "MemoryUsed" -> 3584, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3770453374826065973 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453516`15.649283326164324*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "fff05373-04e7-4cf1-aa5e-71b0a202e2dc", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "aafda4a7-4a52-4f77-b12d-70670018275c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["cool", 
             FaizonZaman`LexicalCases`OptionalToken["crazy"], "computer"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000131`2.267786293487758, "CPUTimeUsed" -> 0.00013199999999891077`,
          "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 877110483297367862 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453644`15.649283326164337*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "26bde218-7dda-473a-8a26-97d5ea768788", "TestID" -> 
         "LexicalPatternQ-OptionalToken-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "0e0f56dd-9638-4f59-88c4-5b7b48c0348f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression["this", 
             FaizonZaman`LexicalCases`OptionalToken[
              StringExpression[
               FaizonZaman`LexicalCases`WordToken[1], 
               FaizonZaman`LexicalCases`TypeToken["Adjective"]]], "place"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000136`2.284053906202211, "CPUTimeUsed" -> 0.00013599999999946988`,
          "MemoryUsed" -> 3480, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 9193668707820935708 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453798`15.649283326164355*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "623a4163-d408-4067-9778-5195edfb58fa", "TestID" -> 
         "LexicalPatternQ-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "ac07df99-557a-4c62-a924-8912dd170b3f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`WordToken[1], 
             FaizonZaman`LexicalCases`BoundToken["car"]]]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0003`2.6276362525516563, "CPUTimeUsed" -> 0.0003010000000003288, 
         "MemoryUsed" -> 3584, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 113884564295358422 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568453954`15.649283326164372*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ecb5014d-6a04-4f29-8e2d-8e014cd5a077", "TestID" -> 
         "LexicalPatternQ-TypeToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "ac69db3d-e6dd-4198-95bf-fd044a88e457", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[StringExpression[
              Pattern[$CellContext`adjective, 
               FaizonZaman`LexicalCases`TypeToken["Adjective"]], 
              "sentence"] :> $CellContext`adjective]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000181`2.4081935727011787, "CPUTimeUsed" -> 
         0.00018199999999879424`, "MemoryUsed" -> 3456, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 1938317537617362843 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684541110000000000001`15.649283326164388*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "acc64a0e-5e67-401d-a20a-8b445a1873d7", "TestID" -> 
         "LexicalPatternQ-SynonymToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Validation.wlt", "EvaluationID" -> 
         "598fa083-c3af-4b53-81d9-84150894e4c2", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPatternQ[
            StringExpression[
             FaizonZaman`LexicalCases`SynonymToken["cool"], " sentence"]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000112`2.1997330205021752, "CPUTimeUsed" -> 
         0.00011199999999966792`, "MemoryUsed" -> 3456, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 7253812645591842241 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256846562`15.649283326165659*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "c99f2625-fa17-4923-8d3a-4ddf95ebfdf2", "TestID" -> 
         "BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "b516c2cd-4a62-4cc1-9e41-50d49ee1a8e9", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken["machine"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000024`1.5307262395435999, "CPUTimeUsed" -> 
         0.000023999999999801958`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 6986154076067112683 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684657930000000000001`15.649283326165676*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "603b6b7d-6f2a-4ef4-bad2-d13aa3c50ba7", "TestID" -> 
         "BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "67cb5e1d-3814-437a-8efa-1c0c54337122", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`BoundToken[
            Alternatives["machine", "machines"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000023`1.512242833849586, "CPUTimeUsed" -> 
         0.000023000000000550358`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 6266150768099164970 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684659600000000000001`15.649283326165698*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "a4a5e792-10f5-4ece-a01b-29468a3021c7", "TestID" -> 
         "WordToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "85ae5da8-69b8-4100-aad8-3857ef634cad", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[3]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000021`1.4727342925659135, "CPUTimeUsed" -> 
         0.000021000000000270802`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 515440805860387417 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568466091`15.64928332616571*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "56aba196-e193-480e-98e5-367142b84b0f", "TestID" -> 
         "WordToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "ea79e9f7-f313-4065-a699-eba21264ed2f", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`WordToken[1, 4]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000022`1.492937678654201, "CPUTimeUsed" -> 
         0.0000219999999995224, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4329624689027405222 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684662500000000000001`15.649283326165728*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "9895dc28-94f7-4041-a18b-86a28a0d965a", "TestID" -> 
         "OptionalToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "4611ec71-0a8c-4057-95be-ede366374615", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TypeToken["Adjective"]]], 
         "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TypeToken["Adjective"]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            FaizonZaman`LexicalCases`TypeToken["Adjective"]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659124, "CPUTimeUsed" -> 
         0.000020999999998494445`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4454767882120496001 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256846638`15.64928332616574*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "0fa6a8da-6afa-4330-a4a9-19edd35cf682", "TestID" -> 
         "OptionalToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "6ded00ce-ffaf-408a-b2b8-549b402a41d8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TypeToken["Adjective"]], "sentence"]]],
          "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TypeToken["Adjective"]], "sentence"]]],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`OptionalToken[
            StringExpression[
             Pattern[$CellContext`adjective, 
              FaizonZaman`LexicalCases`TypeToken["Adjective"]], "sentence"]]],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000021`1.4727342925659135, "CPUTimeUsed" -> 
         0.000020999999998494445`, "MemoryUsed" -> 3432, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3551985802961337668 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568466532`15.649283326165758*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ca044905-d0a9-4302-93bf-e7ddf5a35d38", "TestID" -> 
         "TypeToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "4ceb79b7-431b-4bae-a252-7bd6d4589a7b", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`TypeToken["Adjective"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`TypeToken["Adjective"]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`TypeToken["Adjective"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.00002`1.451544993495975, "CPUTimeUsed" -> 0.000018999999999991246`,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8866369715668707575 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568466655`15.64928332616577*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "db82ffcf-bb6a-4b55-bde2-e2ac7721c2ec", "TestID" -> 
         "TypeToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "0b17a42e-8755-4bcd-9d63-4b9227b15c56", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`TypeToken[
            Alternatives["Adjective", "Noun"]]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`TypeToken[
            Alternatives["Adjective", "Noun"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`TypeToken[
            Alternatives["Adjective", "Noun"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000019`1.4292685987848222, "CPUTimeUsed" -> 
         0.000018999999999991246`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 225594909919173518 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568466805`15.649283326165788*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "e00852f8-f9d3-46e7-998e-27e8e64b904a", "TestID" -> 
         "SynonymToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "5aba0aa4-343c-4c65-91ed-6ecaf18823fd", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`SynonymToken["good"]], "ExpectedOutput" -> 
         HoldForm[
           FaizonZaman`LexicalCases`SynonymToken["good"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`SynonymToken["good"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000019`1.4292685987848222, "CPUTimeUsed" -> 
         0.000018999999999991246`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 274424456231345531 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568466925`15.6492833261658*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "513a0ad9-9170-4532-a352-4d2f7892020e", "TestID" -> 
         "SynonymToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "c5119023-414d-4eb2-a585-6a51dfdff892", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`SynonymToken[
            Alternatives["good", "bad"]]], "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`SynonymToken[
            Alternatives["good", "bad"]]], "ExpectedMessages" -> HoldForm[{}],
          "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`SynonymToken[
            Alternatives["good", "bad"]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00002`1.451544993495975, "CPUTimeUsed" -> 
         0.000019999999999242846`, "MemoryUsed" -> 3408, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5910457642525920299 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568467087`15.649283326165822*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "3b87f888-0866-45e8-94a0-269fbc1ce727", "TestID" -> 
         "LexicalPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "5a1bffd9-a969-4a6c-ad61-c55b8f256f41", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TypeToken["Verb"], 
             FaizonZaman`LexicalCases`TypeToken["Adverb"]]]], 
         "ExpectedOutput" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TypeToken["Verb"], 
             FaizonZaman`LexicalCases`TypeToken["Adverb"]]]], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[
           FaizonZaman`LexicalCases`LexicalPattern[
            StringExpression["Alice ", 
             FaizonZaman`LexicalCases`TypeToken["Verb"], 
             FaizonZaman`LexicalCases`TypeToken["Adverb"]]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028115, "CPUTimeUsed" -> 
         0.000026999999999333113`, "MemoryUsed" -> 3416, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 2666139660203696194 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568467244`15.64928332616584*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "30354ebf-2a32-499c-afef-08cfeac3e279", "TestID" -> 
         "ExpandPattern-BoundToken-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "5d006004-8923-43c7-ad6f-baa11ad5cd6c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern["", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`BoundToken["outer"], "inner"]]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
           WordBoundary, "outer", WordBoundary, "inner", WordBoundary, 
            "outer", WordBoundary]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           StringExpression[
           WordBoundary, "outer", WordBoundary, "inner", WordBoundary, 
            "outer", WordBoundary]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.002585`3.5629755452619554, "CPUTimeUsed" -> 
         0.0025890000000003965`, "MemoryUsed" -> 3784, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 5978718917455664422 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568467377`15.649283326165852*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "f1522f9b-2fa7-4779-b52b-fb5146cdd7ee", "TestID" -> 
         "ExpandPattern-BoundToken-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Patterns.wlt", "EvaluationID" -> 
         "ec87f179-391b-40f5-aee8-f0bc85fe29c1", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern["nice computer big", 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Noun"]], " computer "]]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             Alternatives["nice", "big"], "computer"], " computer ", 
            Alternatives[
             Alternatives["nice", "big"], "computer"]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             Alternatives["nice", "big"], "computer"], " computer ", 
            Alternatives[
             Alternatives["nice", "big"], "computer"]]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.005221`3.8682686910427098, "CPUTimeUsed" -> 0.004559000000000424, 
         "MemoryUsed" -> 4216, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5202153321697176744 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568480612`15.64928332616731*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "6e5dad50-02ed-4c1b-8a6e-49aaa462f922", "TestID" -> 
         "Utilities-ExtractHeads-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "49c9835f-e024-4c35-b18c-dca17f5734e9", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken["Adverb"], 
             FaizonZaman`LexicalCases`TypeToken["Adjective"], 
             FaizonZaman`LexicalCases`BoundToken[
              Alternatives["specie", "species"]]]]], "ExpectedOutput" -> 
         HoldForm[{
           FaizonZaman`LexicalCases`TypeToken, 
            FaizonZaman`LexicalCases`TypeToken, Alternatives, 
            FaizonZaman`LexicalCases`BoundToken, StringExpression}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           FaizonZaman`LexicalCases`TypeToken, 
            FaizonZaman`LexicalCases`TypeToken, Alternatives, 
            FaizonZaman`LexicalCases`BoundToken, StringExpression}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000033`1.669028937709881, "CPUTimeUsed" -> 
         0.000032999999998395424`, "MemoryUsed" -> 3504, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 2107517012260374201 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684808000000000000001`15.649283326167332*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "5029a2b1-b2c3-45d7-8cf5-68fb1772c5fc", "TestID" -> 
         "Utilities-ExtractHeads-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "66bcd130-51bd-4b08-9352-86cb820a12ee", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Determiner"]], "screen"]]], 
         "ExpectedOutput" -> 
         HoldForm[{
           Alternatives, FaizonZaman`LexicalCases`TypeToken, 
            StringExpression}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           Alternatives, FaizonZaman`LexicalCases`TypeToken, 
            StringExpression}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000027`1.581878761990981, "CPUTimeUsed" -> 
         0.000026999999999333113`, "MemoryUsed" -> 3480, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8543622516842411926 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568480953`15.64928332616735*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ca8170bc-2e69-44b0-abf3-fb390dec1cff", "TestID" -> 
         "Utilities-ExtractHeads-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "4b365c5d-e9c6-48e6-b4c7-3888d5dc6ee9", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`ExtractHeads[
           FaizonZaman`LexicalCases`$SampleStringExpression]], 
         "ExpectedOutput" -> 
         HoldForm[{FaizonZaman`LexicalCases`TypeToken, StringExpression}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{FaizonZaman`LexicalCases`TypeToken, StringExpression}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000026`1.5654883458028126, "CPUTimeUsed" -> 0.00002600000000185787,
          "MemoryUsed" -> 3464, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3114714574091188636 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568481132`15.649283326167366*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "699c784f-986b-4666-af9c-bb2dcd14fb5e", "TestID" -> 
         "Utilities-GetFileExtension-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "cc198e15-f7b8-4ca1-8aa2-caffa469cd80", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`GetFileExtension[
            File[
             
             FileNameJoin[{$TopDirectory, "SystemFiles", "Components", 
               "TextSearch", "ExampleData", "Text", 
               "AliceInWonderland.txt"}]]]], "ExpectedOutput" -> 
         HoldForm["txt"], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm["txt"], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000311`2.6432753868588317, "CPUTimeUsed" -> 
         0.00031300000000022976`, "MemoryUsed" -> 23968, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 3278599112882408247 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568481337`15.649283326167392*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "9d3736db-e2a4-49df-9eea-c640ba4984bd", "TestID" -> 
         "Utilities-MatchTrim-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "d403b7b1-a012-4027-a69a-ce9d515ca7f1", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`MatchTrim[
           True, {<|"Match" -> " past", "Position" -> {{49, 53}}|>, <|
             "Match" -> " few", "Position" -> {{54, 57}}|>, <|
             "Match" -> " blank", 
              "Position" -> {{145, 150}, {180, 185}, {505, 510}}|>, <|
             "Match" -> " single", "Position" -> {{304, 310}}|>}]], 
         "ExpectedOutput" -> 
         HoldForm[{<|"Match" -> "past", "Position" -> {{50, 53}}|>, <|
            "Match" -> "few", "Position" -> {{55, 57}}|>, <|
            "Match" -> "blank", 
             "Position" -> {{146, 150}, {181, 185}, {506, 510}}|>, <|
            "Match" -> "single", "Position" -> {{305, 310}}|>}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{<|"Match" -> "past", "Position" -> {{50, 53}}|>, <|
            "Match" -> "few", "Position" -> {{55, 57}}|>, <|
            "Match" -> "blank", 
             "Position" -> {{146, 150}, {181, 185}, {506, 510}}|>, <|
            "Match" -> "single", "Position" -> {{305, 310}}|>}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000257`2.560448121163289, "CPUTimeUsed" -> 0.00025599999999847967`,
          "MemoryUsed" -> 5784, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 2031687623572510462 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.94165256848154`15.649283326167414*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "e41ba228-55ad-4f0f-90e3-7ce18c2b6c2a", "TestID" -> 
         "Utilities-OptionsJoin-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "f07471ac-0786-4105-853e-f1a3085d0ae7", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`OptionsJoin[
           FaizonZaman`LexicalCases`LexicalCases, 
            FaizonZaman`LexicalCases`LexicalDispersionPlot]], 
         "ExpectedOutput" -> 
         HoldForm[{
           "Service" -> "Wikipedia", "StringTrim" -> True, IgnoreCase -> 
            False, Overlaps -> False, MaxItems -> 50, 
            FaizonZaman`LexicalCases`MaxCategories -> 5, Language -> 
            "English", AspectRatio -> GoldenRatio^(-1), ImageSize -> 
            Automatic, PlotRange -> All, PlotTheme -> Automatic, PlotLabel -> 
            Automatic, FaizonZaman`LexicalCases`HideMissing -> False, 
            FaizonZaman`LexicalCases`DataJoin -> False}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "Service" -> "Wikipedia", "StringTrim" -> True, IgnoreCase -> 
            False, Overlaps -> False, MaxItems -> 50, 
            FaizonZaman`LexicalCases`MaxCategories -> 5, Language -> 
            "English", AspectRatio -> GoldenRatio^(-1), ImageSize -> 
            Automatic, PlotRange -> All, PlotTheme -> Automatic, PlotLabel -> 
            Automatic, FaizonZaman`LexicalCases`HideMissing -> False, 
            FaizonZaman`LexicalCases`DataJoin -> False}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000036`1.706817498599281, "CPUTimeUsed" -> 0.00003700000000073089, 
         "MemoryUsed" -> 4144, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8903207845384533819 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568481709`15.64928332616743*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "58bbc67d-4a27-4bb9-92d9-a6f0414fad03", "TestID" -> 
         "Utilities-ReplaceEmptyListWithMissing-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "5581fbf3-7ab5-469b-ac13-055976affbfc", "Input" -> HoldForm[
           
           FaizonZaman`LexicalCases`Utilities`ReplaceEmptyListWithMissing[{{}}\
]], "ExpectedOutput" -> HoldForm[{
            Missing["NoMatches"]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{
            Missing["NoMatches"]}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.000022`1.4929376786542, "CPUTimeUsed" -> 
         0.000022999999998774, "MemoryUsed" -> 3448, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 8989337047826912535 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568481878`15.649283326167447*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "b5c4e7fa-15b3-4def-b039-f9b936e5e396", "TestID" -> 
         "Utilities-SupportedFileQ-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "5a59efbd-2f09-4ac5-8bd4-70c7d8a9101e", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`SupportedFileQ[
            File[
             
             FileNameJoin[{$TopDirectory, "SystemFiles", "Components", 
               "TextSearch", "TextSearch.m"}]]]], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000154`2.3380357186684573, "CPUTimeUsed" -> 
         0.00015499999999946112`, "MemoryUsed" -> 4208, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 2124912635609429805 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568482041`15.649283326167469*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "69002f17-cf22-4a45-96c7-0a54ac456657", "TestID" -> 
         "Utilities-UnwrapAlternatives-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "6d6d467e-5c58-4617-94c0-383e69130917", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`UnwrapAlternatives[{
             Alternatives["A", "B"]}]], "ExpectedOutput" -> HoldForm[
           Alternatives["A", "B"]], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[
           Alternatives["A", "B"]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00002`1.451544993495975, "CPUTimeUsed" -> 
         0.000020000000001019203`, "MemoryUsed" -> 3400, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 7116722518602375262 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568482201`15.649283326167486*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "ca4d7c72-f047-4854-b77b-b9ea27b0bcfc", "TestID" -> 
         "Utilities-WrapAlternatives-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "a2697202-cd6a-47fe-b355-8a9a09e0bc4c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`Utilities`WrapAlternatives[
            Alternatives["A", "B"]]], "ExpectedOutput" -> HoldForm[{
            Alternatives["A", "B"]}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{
            Alternatives["A", "B"]}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.00002`1.451544993495975, "CPUTimeUsed" -> 
         0.000019999999999242846`, "MemoryUsed" -> 3448, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 4058911016571700575 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684823570000000000001`15.649283326167502*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "5c3127b0-ca31-48bf-9ab8-51aa19f74b3c", "TestID" -> 
         "Utilities-StopWordQ-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "220b4d6c-381a-444d-a78b-839a65298fd8", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`StopWordQ["the"]], "ExpectedOutput" -> 
         HoldForm[True], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[True], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.007488`4.024880833562043, "CPUTimeUsed" -> 0.007493000000000194, 
         "MemoryUsed" -> 5968, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 5499043419684617855 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568482485`15.649283326167517*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "dfec4a78-dac3-4bbd-a3b6-4ce33ab00005", "TestID" -> 
         "Utilities-StopWordQ-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "0da10d1d-c3ba-484d-a8a2-0d62bb091ce0", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`StopWordQ["math"]], "ExpectedOutput" -> 
         HoldForm[False], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[False], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.000035`1.6945830421822692, "CPUTimeUsed" -> 0.00003500000000045134,
          "MemoryUsed" -> 3400, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8331758758574563836 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684826690000000000001`15.649283326167538*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "e19ea402-5007-42e2-a132-f8e6e14dc6cf", "TestID" -> 
         "Utilities-ExpandPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "ac2c3e83-d09f-4626-b530-cc8094996f00", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern[
           FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`BoundToken[
             FaizonZaman`LexicalCases`TypeToken[
              Alternatives["Adjective", "Noun"]], " computer "]]], 
         "ExpectedOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             Alternatives["past", "few", "blank", "single"], 
             Alternatives[
             "words", "fingers", "weeks", "writer", "block", "screen", 
              "front", "day", "mind", "type", "word", "process", "hours", 
              "computer", "today", "blank"]], " computer ", 
            Alternatives[
             Alternatives["past", "few", "blank", "single"], 
             Alternatives[
             "words", "fingers", "weeks", "writer", "block", "screen", 
              "front", "day", "mind", "type", "word", "process", "hours", 
              "computer", "today", "blank"]]]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[
            Alternatives[
             Alternatives["past", "few", "blank", "single"], 
             Alternatives[
             "words", "fingers", "weeks", "writer", "block", "screen", 
              "front", "day", "mind", "type", "word", "process", "hours", 
              "computer", "today", "blank"]], " computer ", 
            Alternatives[
             Alternatives["past", "few", "blank", "single"], 
             Alternatives[
             "words", "fingers", "weeks", "writer", "block", "screen", 
              "front", "day", "mind", "type", "word", "process", "hours", 
              "computer", "today", "blank"]]]], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.014154`4.301394189101233, "CPUTimeUsed" -> 
         0.01919299999999957, "MemoryUsed" -> 5152, 
         "IntermediateTestsTree" -> {}, "Outcome" -> "Success", "FailureType" -> 
         None|>], 2949627495802036964 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568482799`15.64928332616755*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "eefdd33e-c83a-44d0-b561-85fb997aa408", "TestID" -> 
         "Utilities-ExpandPattern-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "2f2b5612-64e2-457a-aab0-8aec7d3c7e9c", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern[
           "this is the best music ever.", 
            StringExpression[
             FaizonZaman`LexicalCases`TypeToken["Adjective"], " music"]]], 
         "ExpectedOutput" -> HoldForm["best music"], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm["best music"], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004229`3.7767526829788944, "CPUTimeUsed" -> 0.0034600000000004627`,
          "MemoryUsed" -> 3712, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1674766146717871421 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684829320000000000001`15.649283326167566*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "4c3d5f5c-3a4e-4668-b777-ca731e5682a8", "TestID" -> 
         "Utilities-ExpandPattern-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "fcbbaea4-da75-4903-bad4-fa23f3ea0879", "Input" -> HoldForm[
           FaizonZaman`LexicalCases`ExpandPattern["to be.", 
            StringExpression[
             FaizonZaman`LexicalCases`WordToken[1], 
             FaizonZaman`LexicalCases`TypeToken["Verb"]]]], "ExpectedOutput" -> 
         HoldForm[
           StringExpression[WordBoundary, 
            Repeated[WordCharacter], WordBoundary, "be"]], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[
           StringExpression[WordBoundary, 
            Repeated[WordCharacter], WordBoundary, "be"]], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004756`3.8277568437786478, "CPUTimeUsed" -> 0.004229999999999734, 
         "MemoryUsed" -> -5320, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8038238170699046069 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568483092`15.649283326167584*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "7d186b11-fdf3-407f-a1a3-c740d2620de1", "TestID" -> 
         "Utilities-LexicalPattern-Test1", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "e0b5da08-1bfe-4a10-891a-c610c9895c6b", "Input" -> HoldForm[
           StringCases[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TypeToken[
               Alternatives["Adjective", "Determiner"]], " screen"]]]], 
         "ExpectedOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.014986`4.326200726094076, "CPUTimeUsed" -> 0.033714000000001576`, 
         "MemoryUsed" -> 4664, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 1730614785699171155 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568483221`15.649283326167597*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "39dfe5ea-e562-47ce-8727-21ef36902fdb", "TestID" -> 
         "Utilities-LexicalPattern-Test2", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "a09f616e-baf1-4f54-a16a-634b7deaecc4", "Input" -> HoldForm[
           StringCases[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TypeToken[
               Alternatives["Adjective", "Determiner"]], " screen"]]]], 
         "ExpectedOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{"blank screen", "blank screen", "the screen"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.014572`4.314034160401873, "CPUTimeUsed" -> 0.021635000000001625`, 
         "MemoryUsed" -> 12512, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 8851649309124455093 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.941652568483353`15.64928332616761*^9, "SameTest" -> SameQ, 
         "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "2c6ffa2f-e27d-4f17-bcea-4fe7acfb5a26", "TestID" -> 
         "Utilities-LexicalPattern-Test3", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "c51042e8-4f52-4301-adf7-42199010f295", "Input" -> HoldForm[
           StringPosition[FaizonZaman`LexicalCases`$SampleParagraph, 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression[
              FaizonZaman`LexicalCases`TypeToken["Determiner"], " ", 
              FaizonZaman`LexicalCases`TypeToken["Adjective"], " screen ", 
              FaizonZaman`LexicalCases`TypeToken[
               Alternatives["Preposition", "Verb"]]]]]], "ExpectedOutput" -> 
         HoldForm[{{144, 160}, {176, 201}}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[{{144, 160}, {176, 201}}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.014867`4.322738339259747, "CPUTimeUsed" -> 0.0178130000000003, 
         "MemoryUsed" -> 7584, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>], 3403690592333606343 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 
         3.9416525684834810000000000001`15.649283326167627*^9, "SameTest" -> 
         SameQ, "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
         DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
         "CreationID" -> "a6d01a89-30c2-479c-94bc-ff1e3220bd90", "TestID" -> 
         "Utilities-LexicalPattern-Test4", "TestFileName" -> 
         "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/Tests/Utilities.wlt", "EvaluationID" -> 
         "4dc9d057-0dd3-4ed6-87ab-8d4c9f626e27", "Input" -> HoldForm[
           StringMatchQ["Alice walked quickly", 
            FaizonZaman`LexicalCases`LexicalPattern[
             StringExpression["Alice ", 
              FaizonZaman`LexicalCases`TypeToken["Verb"], " ", 
              FaizonZaman`LexicalCases`TypeToken["Adverb"]]]]], 
         "ExpectedOutput" -> HoldForm[True], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> HoldForm[True], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.004807`3.832389119960641, "CPUTimeUsed" -> 0.004212000000000771, 
         "MemoryUsed" -> 3976, "IntermediateTestsTree" -> {}, "Outcome" -> 
         "Success", "FailureType" -> None|>]|>, "FailureResults" -> <||>, 
    "TestsNotEvaluatedKeys" -> {}, "TestsFailedWrongResultsKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, 
    "TestsSucceededKeys" -> CompressedData["
1:eJw1lU1u1TEMxLvgAsAJuEH8bR+hEmLBEVggsWJR7i9++SdPqqrXvMQez4yn
3379/fn7x9vb28cnfn3/8/Hv/SsfylKXl4/K6taq6ufcPWt5RMuUu0anP+eZ
Y+VRbsWDtNG8524ry2ZqRXe0ruc8lEu1f3mtqUqx9y+cG91ELc3EtdrnlG+1
8daedtGYXKue6yKgbBp3+BoA9fvnXWWEK2vFrKFQ6FNEpTWSx4DTZR2lTxGX
CnBIpSYvVM71WSEumT2uGiupc6AP7cYysobZUlLu/aKurIAg02xbc7CL9aIQ
CNfM6gL7Q3FZiFhQjalCNc99nTB+1IKzXjV9+jrdWmCwLawpL+f8KT7ZscR9
6ECdh0pVBz2ihIaZx2GesZlsOExulvqFQzMFDcrxlRfK1m0LlnABEJ+gpA89
7ahRMnAh5SsjDg1QCNGiu0kuM1t2adMOATvUM4LKXIc07Dqi5LhtluKMBWAd
BAiKBMZa6henwzNATDp5Wn7qIFPmEmgRgTTn8b3PvD77mxFJp8mZSxC08rkO
dWpy5VqFT0GrS9MTbV48APJxA3qhcM6lfxBl263Mto5x7xdsCU6TQjNmKT+8
mVSjCrZlFzB7XV0cu9V+tB0NCXl5K7RDGLDSB1x9+0pgYQayBdIQfHvvp7Oa
uc28pcTOhzervbjGlvZWHgecjesqGHAU4STBdt0vWDy3WYE5hqn7bhze80jf
NmUwPde53UwWxibv7Gi/aLAeZkgGGtm3/bpkOoWNQICk/16Xc64sVHDc7Irs
UdbTNrjsq8kQeGHh5YoC6sTmzfhYZHv4xhQyMEzrDoidF6ctThL2qRfPBC6Y
8IjYmSiKVGdmduZpi79Y99lYcDmmOyTozj56JK5BmbiWYsS1PUUuElL4Z+5G
J0PZYE+8z6rKTTU0YIOe/UFvrHnRsyIqj+wbEnO43wADmRRmRUGE1DsV4Wd7
FQRfQbC8wteweG2X+7Y+M9o9J1mDkUQhCFb1WhZ0lMA5yE215dcLsIsrSWO0
3Bbq16pgRkjk/wSWGoLZ4uJU50+WlLXGKMh2zIBda+NERLWdQPqyPiTIYvsZ
l9ium7TEGZvmREU7vuobDW3bas0PoxHdfedSpEq0mS3ww/Thja64gQDHaptx
18sbVlKmKYKQRjsPz/2yHff045z9lVdfAix3DDMc6gd7caNqNyPvlLijirn9
By2wTYs=
     "]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{
  3.933090205649231*^9, 3.9330904420148706`*^9, {3.933090690381926*^9, 
   3.9330907175028677`*^9}, 3.936228060670979*^9, 3.941645496788391*^9, 
   3.9416516809549828`*^9, 3.941651838186666*^9, 3.941652269660158*^9, 
   3.941652574808415*^9},
 CellLabel->"Out[1]=",
 CellID->1016709158,ExpressionUUID->"8be3a836-8d32-4956-9623-627a40a4eb12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"76a92072-a72b-4a37-a162-12d1635b0072"],

Cell["\<\
Search for verb phrases beginning with \"Alice\" in \"Alice in Wonderland\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251031141988*^9, 3.867251071471037*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"786f2166-a1a5-484a-8c41-7fb12e2f2581"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alice", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867250923402269*^9, 3.867250945044845*^9}},
 CellLabel->"In[4]:=",
 CellID->222665312,ExpressionUUID->"f8385797-7cb8-48be-a17a-473d630f70fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "=", 
  RowBox[{"LexicalCases", "[", 
   RowBox[{"alice", ",", 
    RowBox[{"\"\<Alice \>\"", "~~", 
     RowBox[{"TypeToken", "[", "\"\<Verb\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
     RowBox[{"TypeToken", "[", "\"\<Adverb\>\"", "]"}]}]}], "]"}]}]], "Input",
 
 TaggingRules->{},
 CellChangeTimes->{{3.867250886366906*^9, 3.867250907934865*^9}, {
   3.8672509485911818`*^9, 3.867250992716366*^9}, 3.915989465847641*^9, {
   3.92395424029682*^9, 3.923954243212612*^9}, {3.925599700101746*^9, 
   3.925599702268506*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[5]:=",
 CellID->593829399,ExpressionUUID->"4488b8e6-f913-4b73-ac5b-a381b9f08e31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FaizonZaman`LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "Alice had not", 
       "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
      "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
      "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
      "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
      "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
      "Match" -> "Alice was so", "Position" -> {{18290, 18301}}|>, <|
      "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
      "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
      "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
      "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
      "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
      "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
      "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
      "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
      "Match" -> "Alice got up", 
       "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
      "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
      "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
      "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
    "Dataset" -> 
    Dataset[{<|
       "Match" -> "Alice had not", 
        "Position" -> {{1349, 1361}, {36142, 36154}}|>, <|
       "Match" -> "Alice was not", "Position" -> {{2548, 2560}}|>, <|
       "Match" -> "Alice went back", "Position" -> {{4360, 4374}}|>, <|
       "Match" -> "Alice took up", "Position" -> {{8488, 8500}}|>, <|
       "Match" -> "Alice had no", "Position" -> {{16084, 16095}}|>, <|
       "Match" -> "Alice was so", "Position" -> {{18290, 18301}}|>, <|
       "Match" -> "Alice could only", "Position" -> {{22528, 22543}}|>, <|
       "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}|>, <|
       "Match" -> "Alice could not", "Position" -> {{26380, 26394}}|>, <|
       "Match" -> "Alice was more", "Position" -> {{29462, 29475}}|>, <|
       "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}|>, <|
       "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}|>, <|
       "Match" -> "Alice was just", "Position" -> {{35021, 35034}}|>, <|
       "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}|>, <|
       "Match" -> "Alice got up", 
        "Position" -> {{38307, 38318}, {51619, 51630}}|>, <|
       "Match" -> "Alice was very", "Position" -> {{43702, 43715}}|>, <|
       "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}|>, <|
       "Match" -> "Alice was too", "Position" -> {{44958, 44970}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 18], <||>], 
    "Source" -> "Text", "SourceData" -> 
    "1:eJydfdtyI0mSnT5Bn5DkC7tlAE2XB5k1H8rYVexp7lRX1RY5UxqzNYMFgASQzbxgMhNEoz9\
RXyU/x90jIgHWaiVdplkkkBkXD78cP+5xtey+Pv3n//2f/tPjfP7h87dPxfOvD8XX+59/fnye//\
r540NxX1ersjiGoViW26ptq3ZbjF2xLcfitexPxVj15broNsVQjSP+uDwVu7KXfw6j/\
Kdri3FXFsvQvsyK0PKTu/CKD7bduLOnrbvb4nMr7+n6YjzihYN8aRfWxb4s9/L8qpVP8UFd95I/\
HwPry7CWB82K5WEsqpHfa7tiX63GQ18OeOiqa2W0Qxirrh3kafKxWXGN8Rx3Qb408OGHocT4At8yu5\
bfdYftbtQ1kM8fK/xm/P6T310XTx3HjnHJn4ZqXfaYpLwSo+6ObdFU8tof5O/Hsq4L+S8+v+\
oO9XpWbLAA8s91OBVNWJf80qYsa13soZblOHEdh/Gwr9Y/\
zmQC5YhP4Wv7ugyDjAyzaMILXhzkWdVwmq92QcZwxGtkJ+\
WHftzxO2PfHZY1vyKbyi087PkKmSYfoQOqhqoc+Lq2GA7rddnWMpLi264ay+\
JrWC5l5bFA8rX2pShPsjx9aItV3cmqqlDcFs/yv7o4vvtDp1Pryyb0LwEjqSAzQTaoldVYV2uTQXz+\
BfvrX2kOq12B/ZChj1zzE4RpVwZdDRvUoL+\
uxqGsN7KLn3fFWj5yVcQfHmULguyFrMvYdUUdxvLquvhZnszZZs8KsvHySTxQ5DDIK8c0BnmD/\
ELkctWFcb7vVi9ySLCQtXxYhDhQOvGLEY/dHfq+wtlpZzbDYQz9KL/\
hJLjvo4qEfG1TB5ETeciq74aBf6cgYaXiaWlLWRiZhnxHnlbKS4JsQtqasqKohIthziDKPh0ctfBSp\
mnx5OJ49Tz+fNTq0FednPnTjG/HVtvQsFybqhQ5CxscUZszNv33wzBye6sGS40h4s/\
7bi8q4IjR1qHfljbm+a6r5dgd2rWJt8x/W94Wj/JBiA+WoGvKVsbHbx/lR1tJf/MVJC5/\
nH5oGPtQ4WSLeqormWooxkPbyjHDag/yUApT3Kp1tYcWimKP180gh/\
E33AZ9t6ofmbSNjutJ2Q1LLOkwdvs91lEmAJGM+\
4V162S28Q8bETV8UGfHjS7LRgVkiUHzGKxFJ1CX3BYPVVQFVC5Y8/gZ7jFfgj+\
ZPumO9UllLGrcWsZ84pmSXZq5guK66bzl7TXFn9Phuf6l6odRJWGkUMtnGpeho4uoKsVGlX5U1/\
gtjt1azr8LRWhPVA93uv74cjpEmB4U6xAPPhVpy2WXHbBDIX85yZ96SGNdy29NbvfLLvTrgV+Aop/\
L0+vXcrgrqJxs021DhnCUiewHV4iq93cHakmRnn25HW6Lp12pGsGk+HfRQJu+a0S+Sh+kvcXXcx+\
GoVyLMOsC1GFZYozXn7/ef/rLQ/Hb/dff7j/ef3gQMyTrNHOdsBVjJ/tQDWG/\
78QqqvjbKpbNfjzd8fFQmxBCSjcsbC9nDMOQoVFym9CGrW7UXveBNjYbcLZSQ5IbGTc+fVt8oCys4/\
9eFd9oXHj8oU1VGa06PeqiH8p2/e4NC1DWgw6x48BMFXayuOJxyNfGUL+Yn2AH47a4/\
lC1YXcjb2kqUTnyimQRxm7e4nDPqNdtTHL8RKX/wK+pxGGGYbz9sbh+\
LHbdvqS84IliicpmKUOnmxEOK9htsadV/ULpK8McJ0NWAA+\
bFc2JZgSvO1bDrjh1BxU7CoNOF5LXwKjo7GQlx6S5MZx19yfm2G02ZyZWdn53aPZX/h8+\
lB5DkFlTBgNM3p4+mIj/i8rqWpZDvIFX2GwTad0WvK17xaFNrp2qK5gJMUqq7vmO3+\
WVIiPiD1Rt1Gcq7nYcD/vJOcYLeI7xBhnV+\
s61286cNdfcdSfTxSEQKYwDnDoTELtRji5ePuiOwmaeokqEGE7kaaJzlxjkIB+\
5hy7PjIOeCSw8DOj3bBPdCHUfqATlRzn8LVSQCLX80NOX4P7LR3XVj7tqeBEhlZF2RzoS8r2bwT0rE\
YAn14PqF5U7jKEyT4P6U19C+\
bTXYIEzJ0QnyxWEsudMYex1Y6YmhPuGT87kf48F3BwIWLXSU1DL42R3l/\
Dkevm7yFAdGlF3u9Busc7UYnh333WbuNoq3V2vG37T85W00Hy+\
jde0Lz5Sw8sQYdA1kpkmU7mkmyKfcReOWws9BB3PbxxUdVFw5DyoBJRq2GQUMztFNQRyCGsz0PxOU6\
3XcCKOXWueODbGTx01lEUzsFRhK06yLKNb9fNzJss1ig8xwk2dcdB00nHyulo07lactOEtL7eDsHJd\
xNOo2lOx7Wp5RfFSnvS0cT1EUDYwpIVMPJiWoiGT+\
KShvyJGolNVmClq3Qn7B3bgTk1GkNFcuc838sxCO3BT1M8VX4teAf74gv0yUzw0vo8zqDyxxuJDjaU\
aGmpUHDZRmi3/pq9ubotfuyOWdOZh31BKDLTWI6VSMrtcU9kPcSZHhCfRj5Wnuy1X/\
aGrlB0XqBLfDyyAeSObSjw/GVbVrnYw1LJqZp7VLcEq6JfSDmjAoctjynJibMtalQ+\
8cPluub4y8cUC2EN1CPLVjZ0FdfZrj12DrqlrvBmnSHPFXcAWBPXW1U9VK/\
7SwlCoU5HFESoD5kRAf8bwuBa9W0ucNhZbsdwyPRgjSrk4Mtwf86Vas/0u+\
dxCTBbKm8GQ6kX63rq0odHXqt5aU+KWPcVyI5tYmgrUD6y6ruZaYF8HVQkxzuXkZVQtX7+\
jqQ34Zo94O66nKINbqthrGb2HgaJ0cYLN1j7aA4fdgYrMnXnxpYaVbA9iO/\
W9Hz3Erjbyc4fTLat7pDqgChV1d+\
v2mcZiGVYvha2rnXhZmA2cBQau1C6cvZoRtWuQp07xBUhEfngUV8Cy9QcZn3ndB42592UnnnecQ5wB\
1QnwCZyhFCJE2V92/I8qmB+uVbWLy4J1r0/RMFIj2VHKl/NHE3gcjkyPt+\
XqxTWKvUFP3D7sYbzhrc7UraHa7uAmXn/4+vjpr8VvD+\
KyluEwVpsDQuW9qN2Rca56mRbj1WISRWZkhz+J4/d4Qyshy0MNiDHS+67WhtMgKnCogyYVcAEGvRA/\
eOjaxQ3WW6YqX83DGfVC5TdbmUbpyIIIAU7Guodo0MYFn6c991ofK0+riA+FuhFnwleW/\
qo44aIhzLuTx83otcJb7Gn6+\
0whUodnK7mQkS4u3xX9XzkcCDXWGowP9CMsDIe4EVIyBK7F538w3Ev0TNeP6q/+IV/f1OG1o/8q+\
lB8pzkghpkoXGAN8jARZfEd9xDuvoNrL2+lURrFFdUIeNfRcsl8OBz50I+\
qxTWEhKMuQ6qITlR4tfgJ/yX+3+tvUCtB8YLDQDBLPaEkhLfwwRv4X/Bk/\
ES8dZzlgEIWOjcBshQl9LF7VS18GMbjUxugUk5QJchqqdqi8gbWpd6Vo30TvxwPpPvDkz5Uf5aUrm2\
nwFhSWLkpMnUsj6E+PpkyFk+\
UsESQQ4oF943kJ91TaOgsy5ZgdLrO63IlDgEPkL43qntT8gFAxqrMzD4HucdYuMASm7l7KcfAlVryn\
VSn+JHJD8sb5nKWvLgIDFzoSoOtzh+f1P++G4ZqWQP4C6KxqvGn7AOGC/\
3zgHBgX6sqy1ebjlYMU9S27wh9DZzeqq6aJfY2c5NqCdX9Z9PnZwjEUAPn6c9niDVRmNu9aqIaVH70\
RWdqjLHc7iEqthky473CIEXS33dAVYgw3NCPB+osGmWlbq0FJ2GcnJAs+IUxYWS6C/2+\
PvHshPVrJU+BSgM4g7AP59A9x/ZAQBOHZCti1RPB3OJD/kwe5W3Xrfko6BM9Ddk5L+\
u1qMlNV8PW46Sb6QBaBuOkGIEc03qdrRQwMmhAnAKuMs4eZJ4hEwUZkwFcLH4adIn9U9GG3OvWPV92\
f+iBYfjCJUsAIbdVBcl8MwMfVQKJ+ztspv7YKryUdFfVcGbG7OH+\
mabsqJYz2TNT2tgyiUZDO8KGfSvhMNOKlXT9zp0WjKICmEpcjJDFtmeMCPcP4MFKHEA9DOaOa7j01p\
c49vStVQ8IMC0DDvZPWHrz/\
RFVcWhwt86Uh27io3ynvRHzFhC4cClUBw0mN4hkk89hq8oJhvYPKPb6lMnoDGpfY8zTuyL9eC3GpF4\
b9okYc+2RwtgRwEi+YKdpDw9VT1EjYwGIDPrpxy9VUwyHXpyNQa3mZoKOI71QubM+IPyALr/\
1dM1QUm3I1r/wuW+YNj1PJSXmtnh8nM+RKvvy+fPH4vMvxfPD/dcnOdxq5UqNBVb+L1lEHn87zD/\
4sIHDIQbIBo4BexbIsAx8Wieomtl91mFfhhc9tQ/ttpZh/\
khvSrzjm4YHgKHnYUyIB6UNKtItqr6QPtIR0eJf5GnzJSDhshyRIiG+\
kas2zUo8WkQtGyTLBpAGKGLHgAO6qStNPY8dk0hqkaCgxKLOCJgN7/\
LES4jRVqipjDeh1zXvYoqqOVGnaDgizxJ//V/gNcQYWdcrCtEw9gexS4zqhzHCGNNQWc6x+\
ATjbGLyTcfSGDMyk6XUqWfuxMBzQdOr6K/hFJcBJp0PT/fYnJL5xnG9Lb5k1tpAYfl/\
FI88R0iYtE4YWJewkoTMu6k8dxRos/BxUbB3CtNoCOhfwFvVAxHZEBEZdPYl8cInHp3MpBk+\
28F2RezEXYKOxnPN076VlUbiFQuPnUdSZ6xqw9ktlmdUsEfcmIFKOztKVIxUHAjBIryDLYxulSUsaL\
LlLVmQtA9wXxVg1V20kF98+DFg/0L0fwA5nhAZmEvBTKalJY5ueDSLEdH7C+\
yyL0dNlslwkFBZV0Sl+hKgvwVOCKYquuZHfvWlWs+3cBiZoMYuUUEGjfa4OpvQ+\
sgZbUqAYWCKHBH1mhUcIOynB4qQqZzigy8B1HTVxGToFR/34QBfeZjl/\
8DxvyoWR1iGBVcH7nl4JeIgUfTNK8zUfjRstzKE89tZzpTja4GmEr5TFUjRmTk8KRpB9k6MyWun1vJ\
R4zPms7GlVT+fXzOX50ldS5W+Vh3yVcDJkeLYm4a/\
WNEEgavoDi92HANsSzwngD9aiH0ABAoRQqrVTt62u43eWDrt/\
sTsRYRusDDytzbP9DnMGYN5PymW40Big6kEzUsDrvnnoYQQwiCpUwksoJuvw+mKsZBIp+wr+\
AL88xAfSTxbhn8YDkHOyOJbGBZEQ8z+0b19ZDzAmVB/UmbfMfXNHW7oq/t3ZoYN/\
AHXXN5bIaQXmbn5JkbA5FJMKDK/TfH47qa4F025gIW5kXdTD1Ek94c//\
6wZzA0xzOcIZnmmT9XMGF2FIUL1EzuPczlJgpshyjx/lZmbwdXBhXQwIIsGIG0GNmAhHhYWbgd/\
eY2n4m3vFKCwmHESwJqDYg6mqkVzvnWtOY2YGPaACRlTY2/\
ExPBp6r9eRKZqCcdjl0xTXCQNFamFgXLgH33YQw+ZJqd3w+fyIZYyleNqNBiKhGs3SLm/2X04F3U/\
eIQgqD5nl5n+\
PNog4JKGxSMY6rHblqrUrp8xmMUREhuKNvTwecVfCUQAcrc6qPtDp2GTgnpPEhPHL1ZIZli0p4FOHZ\
KLGCMVTzWVf4Ba1BKWuGdS+Rg9MrWjDkPslPeg2ly+\
LA4ZAOssFs5QgQkof44YUKp3noGI2urSk0hRjznOGhWpCJGkBYiPS0htQH++\
64cyGfKM2BTDVrGtwEavMc9Hw8zMQTUxHgzCMjSeH7k4weVg4dNMsZZOBF6D6rW6TNUldUPsYxjEzr\
h0QRlpUAiDz9yfyMb8aIAaHvtGjsQPP6JRuMdIdRICso0YypChcYPLv6ZvDmegj6ky+\
iLuslgk4u85Qr0nDATnceIh3qpnGtkL6pAwVlZogLOm9PMM56+\
MbgvOBTPCftKGoyhWmFJNW0WXRDGMn743L4M4OmVsNQhJ9A9cMd0fArMIE1KOXfP5FZUaaHHtCVjFj\
B78JTkuBiRKdxn0Pe+Kh4npEoGSYc27zVymO4/pPvqBHNI0Z6/\
nFeOqqQtXxge4myLrGZoiVrvhahJOuY2EPHM4rj8Xv3Wcxbqji/\
HiCB8X2zMhMlJsBSIUWfEzouOxapq0c3j1rLDHXqmTwp8zxgqk2UKKqpVQbhBficCgIdtNIn0hCsXE\
o6tuxDITCXijEbfiqTPgUPbrS9nvQFWp4KKXA+J5YgJwcWOIeL5zNF1rqAnw5GglQ/FLL/\
pvpzs4UwpHR5WAQX0TPVkFzQq/72Q6ZS/xy3ShVY/9JMv9b//jv/6Pf/vv//O/FQg7mwBlLI6omM+\
UhFbCGM70IBoBmtfpkjYOBCJdO0f25DZbXyJYwbV8TQ5EzgYcLXZICyxLj2lAoaX5qN3QTJPst4xfg\
9i9nNiuPQvdo4ELm151XqZ8QJ5IOjW0lajOmwh5D1zqSSDPHES1xk7x7K3COMhKSgyf/\
SKOYIwzp9sMAwrQCUlA8cSA0NB9jid3IY9fpOfErAcRrQZ7YLDV3gRHsycZ6qjv6SJRt5Wo8VqRIoT\
s7RZxn+ov8Czojo6XuTk5YXgvFlUGoryZ25iZkz/drJVxGOBnrIgkTUasD6L+\
gs7beTQKhcIA2Rg4srgMZvXkJ0khfVk8xrHWEMm239Uq6Tie2QHYZp6cOKsA/\
EQFSwRH8PYb7BumDyWUFABVUUPDqCOWCdl5lzW95ULPPFlxsZ0zBVFwEvqyWSbKn9muUmnT0AIywhp\
uyYD3LB4Xlo3naODq6WIMh+Xv5QrwzQEJjwYBbahFwQ3FQuS1XC+\
4vPN5K9J8mmkA9nqotyTOQlSvig+\
cZi3L2ZSJUtsicuDZlmlcP9pixInlrtl5CMpNpSdmvhnHyMxURqHG5Hoi2fN50B/ksLTrOUyG/\
H9ZmO3gLLK0/a3yesyh2mq4CXnb6QJHq+\
J8OBdKYi0vco6GGJzJxjHUkNftLBKb6gA7FfBKN4eaxwJHW4IlUwqMjF1q6MLbiv1ibmSSymRMYH/\
oGFOeUvgJq2fhpzoCRuxWRQIuUtN0GorlPgS/\
eFS6VmekC7Igh24zQh6MISsmUUejIeeHTtU9nVgO25Ihbwi+HlFwtGVPDGtOqdUuajVwQ3JcQN+\
nHpFGfYlbZbAPTyacHWWoRp9a3nDHg8A0XkJ+96E2ioiZxQm0EE+VwwsfRawPgyJf5h/\
uusT9bBUtH5GBwFyak/h0w9j1arBxvuUvmW097k6WJkacOKq+\
VRqeLI2cf8OJGKB5SIT99LiCe8aozSj4Oq2ViNjamavMxVfOXFXrMiQ/Lvd4q/\
HOsTUysIDovBiS9KEDghiKjz4dsdYPYVuXzvuDiyzhlHrpnrZd4SCD++oQSO1IS+JJQ40RbOvHk+\
5evrjAzB/n8/vi/f3f3v/taf71/v1Dcf/pQ3FffPz86S/F8/\
3HB5xrY42pTpFxEgCZw5ciTYIP56RBoJV9LWMOAUUm83laJq7aug/\
bLT60KamQDeLy5fOVrURRwjxBTPAepefp+BtdGHIb+0q520csl/\
LdyVBr5dTIZjIOUx9FPRrHSWaq6A491T2D6KODr+uEnnL+msdH9cihHqkVPdCHX8qhGOC5KY+\
W3tNDZJ6OCk+\
LDSOYnnKIk4jXibW0EFXoQRex5WiU8riJrg3cZK5yw3Ugg7PayFTv5ZAHA9cza3ZGVBcPYwAms1Fyf\
TiID9pXspNOKsIbTUF1CJOvnyqnm9Ncb5RgQRYUw3PFS67ECMpZXHjU81Iar+\
MkVhNerjrkJw3PI3atoL3rCC05IFgbD1r0s5iHIYkQpkk1mUe7rscZ/8vRa/aQgFZEs+\
qTIeO7UaN0eqdUHqs2AsQ8mLciegMrLLq6qukAJwg8alQFQ6+\
KmzcdcC774PANJGwD5gfwiJOpmL2JHtdK7G9DMhv3SD/\
iIYL5I2TtyEvXPDXMYThfkzxRkTFNT6xAJ+lsvw9A50xqkQPjAEHDfVgfDdr4retXodeD+\
CByx8TAb2W/qgL//gnFSYdGPLZwA9z3+m/cyLjsUF0RRJcomtmJ6/\
n8Bh4oeWVPY7UlWYYzD6MosbFaFaFf7ZYyQ002vscM++WhZwXEQY0HU+k4xfrmX/\
j7BaLsxbtsCFCot/HP1bhgXOUS0Zf7Gv6C+YDUE/VJfOdMCcTgkxH8jURewP9a+v+Pb/\
5F6xxUro0lDhdQ6WcqR7OzIcorjX/\
saf8AJ2Nr5T5d36iymsC5fO3anpItGV70LnervchAqZqqnpLCQ5BqSa/65LC0nGxZ2MvVVoOoe/\
qwhiN6L2+vLV/RAFZxsdcqwg1Q4UoPAcxkeyvPBV7rXqNbUpkUU45G0393rR5VK388AJayRE1Sk+\
o6DfvupVRX+1gSSDfs7Dw8aspaYhaxfCcPkLL4G2pQyy9O8KNhteqaO6xMNDmuQznZNLHOIBOXDbn/\
ErPY2Oj0MPUKqFnCl4TYYnXoQq5/F9lqk1chrmW5rpi6X3d77i+IYfB0IA+\
yQnImUO6wFk1EcX8igmN6ID9y6iEoWEDPLuImEE3LrDE3p/\
xPZqEMCuRBPDILYEGSP2QJsuqr6WynKyCy+\
KZQUMKxCSGfLlaKCiW52tgAWaBqSIuzTDrWzK14M9iOWAoZRBEcRIPNe/Epb/3li4rgc/and2eUtW+\
7i/EABvN3WjVi+Qf5S+YesswFwfK1lkwptYN8ElJsC7xo7irCAw2Nkqp+\
5U4ufVSPV9QlotMkr1pNCML+pGll05ShXlx/xqqNxw7qsi/\
1g4hHrq4TlV9hnf6gCS2vi1RsTv31utyQ/Xf+R1b15Dgk2b9h4PKYnrPIoHevXgtUIl6bnhgtkI+\
EMicj2yHaY/GexSu9kyaiezXLTpgz/Cc+x7MPodIRyPxtzdSBcHfcghQET/\
vQjp4LCcMLnYhrrRwFFjkgaqLOzFRjGkaiw4l6PxogpYKQsSEIaFmeyd2tGOZcLwiwLrv1aeEvVCFZ\
BDhGxDKYu9r31Z8lzYuPTwVyW71qSK4fkNHG0FKctAONMwMnZEVfFAYR0S8W4hsucr/\
24jCwQm2iWyOqKbZki1jurdDBORVny83ocmUlkdwwng9R5ZsDcoFHFOpcf+\
Ekrgr773VWaSKirkkD6gYtOLOkxLocmIxnZd4h5RwTQy0r590fXGbIGv5Dl6DZQEX/\
UIvVrWr1p1LiIlY1APWzEO1Hc6lUc8Gz9uB38L3Kzmn5R1ghbsfihfm+KldWgaJfUjPO1KwqO+\
U0koymioDju1MjTSdR0xEyKlAHzVWTlaTtNlRWXWONpuQJ1GST8sokwEpSZiSVVZxp8kjGPECYXFPs\
gkcGJGZkARycqnjqPW1BqM7kPp7H5MwzY0ZR6P0kirLaTgBTBHKl6ssmy8I0miv7B7zrvms8pcyPNq\
XCwBb5J4ftLWZfAgDwKUAA8/l7DuWDUdnDeq1JlsAisT0mqLorA5Jjec0yw48sNLz+\
DQmmarB6Lovmh0D0r7yISt5ybBDdV1vLFjxGG6fWIlT1LBUOnE3Sw2+tRMYhNvpXyCK/\
m8Gecr2kgjl5jgWHVjUW/EdPnZIhgRJasAGyTNho6fgzoAyeiRJqzJowm4LzHDm9tbPqfH8NfqqGn+\
ZzcdYPIPVxlTrPg82KZ32W7HfMwhloeGMw0bKT+YpzCnZVOP6kuCspb+\
LXlyuJvhVqv5WXKLtX4SNEo6JzxNBUof6p+\
FZmypgDlvimviMoaEhzzsJQFHHaJOOmePJNbqJc43QfRJpunhQL5WMVuARxZiaOs4xfBvI75i8v+/\
2w3rIkzntBIKdBndoXS5idnbzohnNYlv7p9E85Cze6jCuzwZ08B4t7Z98a+\
1Om1KlsZq5h1uLZOlF5re+61hMIx52mENTzdVYjMDnGJpBOKr71AgPz+plSUHf0HQOps3TO1IFnYg+\
RJnztaz2665wij3KynTwDHqzlK97ZcCvCM1ATiJ4NSiEc3XbtULbDW2fyrMPG0b4WtNTpCyP8HIAF9\
YMEVONVQhNFm2a+\
iyO5moDBywjdKaD9e0eNDbIyjblM8x8AixRMEJmyRhdpjTXLsgPDCQaNRMqqQURPnlUcd5nx68RhEO\
vYMzyw3A8W0gqkLe+\
jXuhZ4cdzZo5C3gQEK2goQpPK3cQ9AJ7dRGqP2qacWxnBHVWQEuSHPvfzVAdfYMIWYpEI0YMWTaI+\
dybGjgOyBTc5jBvTaUG5I0umQT63xWtQ3HTfl6MY5SE5kYjdbKSty2FEZehDw30vz9YS0RL4ErIgpS\
3sVfGpg9vHIJPG3vP3WU6d5O6bpiCvSLTuzZCiIuTictaWjDyRUN8gd6Y+EUyYaWpexmNCUXfH+\
bCvevEd19qkI+NbsXoup1+o2f53eZpdN4pPsY98jAuyZqxBFzdHvElog8e/Ky9bWxgVTw+\
fPjwVj58AMj8+P398KH5+/\
Pjxe7TNWaJR5nmHxMlxM5g471YaGbMtjptaORYK0JM9unNnlLNmojEjZcYGNc+7jII5+\
cfn1G5A1uqYfgPsOq8/Z0WUM/5FTss/aKfW2s4DsgCAsOxFOpUjZD+zUEj+\
OSW9JWJlk5jf71wNbQ9kteYtAibhni+aoxJOmNQT/R0GrG9xLEyZE84mlKSSuTtY5KV1v/\
rw5rz4XPw15ZbEKvn5PCNTZtwLzFTzk/\
CS2pWeJOTn8sRacm0ttakF9Q4bT9hYUxKXVltBKF6DlRTQpRb9AMH9e6w4wHeM5eo10M52gwlVRaZR\
ycwAEM3EG/\
rB4Ow3KL37tjU0byF7vDCYxYsCsC7viq8HxM5N6b4Ht492p0QvoKbMeMrZ3jBTf1X8KxQ/\
GUFAbX41Zmyj5V94IF2pRhT+\
OXFviPQ5FgySapl4nSq8S2Op0hCDANpZ4ApWznfpo3lxeYs9sg0wr85WmLQ7lTyjoQSvZl722MQ9Ae\
64s8x8X3+7Nc1yXZSy5uGV6qfTVhSR+\
l61MZCXgGH14mGJm6nDXhQZ4yT5pMrRBke6hlYeNGEG34ywJ3ERwAC+\
pRbheMY0o7xwhnk7Ia3m86LeKVP5tvjZHE6lzac4OXaQKCI3Gtz69clXsu+\
6xuH3MbXs0oYawFqtsIfFVvG4HzttNQCECRKl5QBohnB++rX4/S2SdZJFPW1RHmMHjwgXahUcV0+\
GO3NJMkI/q8umXR2sOlcZPSNopa3THkyFza2/AzYaGT+tA3NQgArP0IK62kMaw2nauGam+\
Kn2m6lG9q9BlDApBsuM7cwCgxltuMIykYe2LKPHaU0l8uJD+HVTQVj3h/\
bFMVqfbl6gGetm9qhToNBmlTOrsqoZf2URPJZpn9N7tXCcNAYd3rIXE21lIV5bgaWKFRw+\
DHX9FD97VqxY56v5jvncuvSwZOgG7hBXzIk3LN0PQyyd8T5uyqcbdtzWq0l1ivO0eSSyn1PtVyz+\
BE6JajSvuKFI1izbeSJteLh8ruHeVtsyoCZkEE94ZUuuLHXkV5oJa40nyA5QqQxaOwPimjatl996GJ\
sEi3VfJEiKgEm0p0g7tD/ZvFbOd1souo34dSF7tDJfmnSwj4ZdbdwJnOUGrAnbauWnRPGsI//\
L1MQBqanNBpQet92i2Y5sVMMSx1Smk2WtJ8U69MSxGLHxC1ulqbXTrC9gEFODV1Eh5nGWM+B+\
cevVnFxNZAZOs8Ktmop/\
p0rI25hQWzvzgW0jquRBepmLNzazNgZdH4uXtEbZyApRXjTGyvCGRA20KPE7fP9AOHigUmXhLfuHUX\
NMRuQHVbZA1Ajy75aOV8SJlLLb4ovIpUZ2+WTUhuaV4qrEvbkbe7+AZrJU9zeZVKu7bY+\
xyZr3tinrJcB+wpvqMirHyZQM/W/G8rINzX4EvPJaqqtR1QcgdWfu83lnx+\
dI3dl2OZNIy14dq9IjBhx8AUWjbhHJTVdn3Ni7jGxh9U1p+8BUxGIkCc7Wj6YoFeS6XeS2x+\
ZCe5AC3BVLxV7kbodiaNmM0SwrGQVPu5RzZecUAC/\
KzNbsb2yzchZXgSpavkTHzbq7BAntgqhG9nGBmlb3dab6O/HdVxJP14d1mYGUbm2tir/\
0eCcnIaHnw+qATmpzEbimLKy1onVEsoYzSG/dFp8AXOtpdG+WJ1npPF6/M59ff4EW5/\
9ooGK4j8GKmhczRTLtAKIr4uUL108HEs4R6MO0EpmQsHq79UiFTTFkLU74btd2vTq4+\
JgCAzSY9R46JqONIyg/OoA8w0hj6lMXL3eUACVhIDPjXbewBmevVIauJvGZapc9FtuspZmknmdM+\
DsIPs8pvAqoAM3ipTSCob2D00wo25FXZLhSYtuS+Gl4takgW2bDVwyWp2C/\
Jc8xdFapttqPN2Q7NbkZE3FtIU7jYirEOlDmsAcc8OFcfG+Nl6rFyZaogE6AWRQxOz/\
kmuNnv4yD5pbyHU1n15oGmTMh8eWC67SIPd2Ae6T+\
oZyKRwFYRnUvTnniwZN5Zob6g0FSYNfonFehH+\
fiuZZ1KmEctGZr48VPDXbfE3TEnb1fotdTYXxZRYjV6PyEUFHrJiJoKONZI7YvfhY1ZyIX/\
zif47dXqMERsdOfQcpwJxsuaejfzeffdt3NYIyO6OiZ+yJ//gRIDSC6eXJXxeIfYKozMz59/\
DNHzk7PA+jLoF6+xiYmbzw+gqNrOB+xCIl0qP7i09PKao0juI1Ry58pUqUNFoMozlHrkWnf5Z+\
2dZNqHn+LkgnlT+okZ01NWcLA+\
m1085AQyEBfH0ZedswxqhtHQc5phoZmxAHrUTfWT5bHvVZNsEV5Plf4WseSa1lTn0QhReO+\
51GVmWgGzKhibMXrblTUJlEF2zmPGcWUQ5Yn/\
gqzJc4F8QFRGSJXvXz1BP0ynyvxnNlCvBXSRJxlb83WOtP3H7OTk1oTsK3L8M+\
DJosi4dfac9DhYOcvvOmTO8kojXsRtXtLW7BkYyodDM6TkbEIL0TzBb95gPprSu9S9C9h9TKvWhY2I\
StMXuieJbbl4B8aXk7znqlkSKo5xOoMa/PzTnupc0FnRUa9aLrXJGAZMzv3iTIPhG0rr++\
LZXCeOlNWyHl7uzOqJ/hB+afk7ZHtdqYnfz6kUhf2lu08MXVYjol1xCS0A0kk2msDVfeyy+US3c+\
4dXKMtCbj3D3Tc5WAfjHRlaX8LPwCWccmbzCZ4XD8lkNJs5isji+\
OeL0nSOmtRIX7og41V74Op0m4Z26T4URMPnIakSUAcb5l+fojU++pCHmwZ88mhcMz4+cRkh2tZ/\
ICM1h4sYTMV2IYdiuJNVbDMVgbnrxfrw7dwBDrWvhWLxSVp1R/u676EtyCWwJqCHy95zP+ywy+\
BuHn3SLc6U8twC/AKCKJNFiRVAJWRyYPzsQmqqW8bXO1LRK8TQxec41Fme2K2G9bs6GxUwoUhXiF6+\
QMG8iYF1VMlX5WCh2rgcPG+H1y3kUpH8XS3io0n2vcx8waydH6Tsum1EQbZA/\
ANxMzgWcba61TVAOScMp7jvG8J7aM99VMDQF0i5tTkbUzuOw/9iiCtt/\
DGIk3oxXAShFBEQd74WUOeu8NV739rCKVGVUUhf9hfHfjNjf2p5T4ImvfMfoBynpEihSKq6EtvLc9o\
47LFpF5J3CfD98Q+9noEsUU+\
WQqKfwCde7QaPJoQqpx8ncjAkVQ03Gg1K7CmffWNWFX8o1sC2F1siyml/BezGTW+Iq9x8SP2I+\
dngK7yYJsFjwOBtSiCMMkI10TTaZ4zDq/kMKIOPWBpSVlvxddrgxqa0jit2+\
kdkqmDSsmeBp4uGjMZTVyCD8by2WpHgcYEXYePHANvPMDm00NkeZrbZoUPo/bgy7et8Xf5/P7D39/\
fP9Q/PL1828Fij2eH75+efz48f7rpFTgfZqFAr2qMjiG7DqFRn7WQYlfaqBBxr2tRUMewIKzizFi/\
eOuY2RIWkZO285e68bDuNqz1FftRDbAIyHH5C/\
MlEzxuzUc2itsIi4CquQwrUjaRn5Cmxd8v8eGintqTpqYITEHZXU41luNGSk4V5GhauQa8G/\
VK9OuFG9MVYYuP7dkSzwYH/VEzl690Tq+VYDT5VzVhTZaWmhsrHCRTv+M+\
rQstdzAG4Xo99RRlMM7nxtG3WmQsq5A26aiBr1N9xCtSyq7psD8Ra3b3iUn3k9URD41LYj8i+\
5VEUtJk15zFhc2REthQ8+ui6K+dRFP3xeNYRIL61HAG6wOnoGXgWqu0HKRnpS/\
cJoLDHkhSonMi8BLKIBPs1On90X2BuNKB3nvPBD10icvmHA/\
tGkGbVHS36kaRbnTMTLylzCZOCn1k4f8FZ3kyDUBBpcI7xcrdP1oiIYM5N1ULMw7iXwxhUG3WtZ4ce\
mNNoD93mseAaOp6oqqbPYf0BjJPzaa7FOX+EEMI/\
t41LwXAAlDmcAjy3gp9rfpvMSbAqz1TkD9H6gsohXa1FTvBWsaLUjsIYoiJofBPVaP3Hd+\
yk74MXhDexkhKbhvbAeL1+\
0YgidTrQ6QE2WB4mmzRIXVNExUfNcENuBJetmC1ox7D3j0bBA5axMF8vayoJZE+\
oX6dIvY1ZAq08vO8XnyWCDvZ0v6zLSgdWxNdb3HZFYrO9ZLcvQftSlv1rjSPjGtRT4/\
NoAWWb7fGyKj2LHolt7tutd+sKVuzrwd8yGCAvSjsVwm4dvs4p3Q/\
po4sg6C0dvgEezDsb7oQ2UuUaONM7PcWM40AW9fm+QztIvVb+pCWodI104GvH3n06jQRH+V6+\
yhKRIk0JA94LsxYubzQiSn0/3OGZ/FTlVZuaFKeUUu1MHuDXijd4wzhPX4D9rHwc26NXx0+\
okNVHt4euWM7wQRX9vIeMPAOLnDhjQBbVNSMk6PV9BUGS9/\
OHcG1fmKFQOORHmEeZyUdhPH1FiFTTYtlKKrqBc4BXbmBN879ibSoVXWoeZd6pw9jUDw6WrJFFQETO\
z5lP35TiMwtZ3G4NSMXkYuzwItksCCd2AT51TGQp8bpItd7OAzn1tuwLoxOiaXmjZ/p4nT0ugJmo+\
dtnLKA9Tz9lZ37Fq0O2vqGfs0MkjIkAUT7CV28VfvOpQnqYZOAbz6FFNVEVd0cMHiCXMXKVKeJFN5F\
aN0FyMc5HCqccJpz67jMfNJMhU2L/Uv3qRNupX/472EG+\
L0a3QaYfWOPnZCuLE8nYGascmy3zWzmzRdm9lFLQxIWhRzle12ZJ4I6X2/\
PyT5OABaIsClvSj0RAb0XdIQr9QWLZqI5RBPPAi40eJoHoxxz+AGLwh60MQgaNQQ+\
x2TPF3Wk5R94fSylYqa0U0zQkc16S5l3wFEImnB6dCtR+\
fipsFMVnrHhYIkLI7wmYoGi9fhQMCpx8RwrcQAxQbBr2pl7MIazYttUWQEsO3Pavtn2EbMJnJX1ijJ\
qXLqq1/lc9QMl8LFO9595NcErsWSqDNHh5NNN8QR8caa1bZEd2Uk6eo4lp13RPchLOV0VNqxMPVWTJ\
Hk0frYPOncJ71MvvAN1glD+9vHRbo6q5tcV9s2tMSc2IyhMbyZ0Qj82HRdRw8aKM+AyJCVlmQfQdH/\
5W8JTw9Wk6sDyypQFdBAcG3DU56lt5Cih15ZWXp0m2Nr1Jh/\
0jaG69iPRa0Rm2RYw1qDzXaeLKBK3W6H3BTq6GxUqYtg53eSdC9zJzj6aGdFq96KjCQ2gnQr+\
mjNdKyUQT7ICkj1XRLedJ1qYCfD6IOWnGK3NRFAkdXkm1W7xFcZB8L0b/\
QJZfjURA7dmkYyOJszbMtSa4pkOKLyt6npTbxxaHiRmf0Npc5J2li69oZ8kZ1v7TourhaASy/\
BfPaf2Fiv6utJfY5hAES06SkkpqL5+rZcLRPbeq8CTNIQXZettoh0hJR3qpy0yAgxR86GpSg4bsA+\
mYtJjfeFlNxld5bCV9fyUaYrWCUdb8iwAGcyUa35tgV7pz60fnlqguVJi6ZcTMFMCxruTEwt0LicjP\
qnRjay8rqNCkrqwoMjwqBmQRRiAaTlrF+M7MTxNqa/tRyK8jNh+9jJ1jrZQ/\
3iHFhz40vM3RuJWpmY8fxbtiSwGF/2iu6afjDqXCqcN2PWWaT30HSwkslJO7K4IhB0s+\
KTln1g2KALojdX5cn0nGkGzpPmjtrxWNlle/\
nFEZfiGNzvrNiawy7hY40gNWd0c62tmllNpyblfpLCMKEvTfrpMnKLiXpbSiMl+\
rL08GzCpEvXAmgkEhM6flcAAw5vBB3bN+bWkzcFmDFilOZNsTAHtrW1oC/\
2YR46pze0GQFEbxhzoDKSOjN43XktdGmtl/zYM/0Cbi4RIwX/swpLw+tTS/0wpnsCDHKfz+\
GasM5utKrTpXaRnRLpv09kjnQhJau26lSy0Du2wMgJzn7JgbHiD33ekxLAKNkwdaWOWMnrgM5bOSoz\
VXkza9a9UVFzBDycCwxywbW7Q6Ff1mDLHXj9YMoHVSxu9usEnMVk19xYMj9ujc4kJeEDQyOO8VwW2H\
ZzctvX3x/n8y+Pf2FvoS8PX748fGWJ3XmaVU8MtF6s6hjTyy8vOoa/32j/\
bawejwkymF4DlzFG8NAfUDdHBiybR6mX1bGpAyMXy+a/\
xjIuNLOQt6CLv8JHfSD3EQFwili1Wyy2HQ99aSWiqpHTsANg7Dvc52eh8sWwo9RoSBq9P3UTmYgwBx\
eNQjT0+0VGNf/FnqTpwyUudurWhxWVA2y25ltIJeqbWMGu1zw5DsGMv9c8d3b7XqZBlDEdOx+\
gDYaXNXjvNCuGQbWbfOy1sg5J0W3410Op3YH2CDFEt//zUI7WDfAXmVGcR1/\
uy8CaGPOLFJ6bvnTy1It3Tof09kutcQGLSJfM2dZJ81fssFVrgJMsR6LufEuXJVL1eBbpoN7UdGc0h\
mjLc9TnjQTRVnc/\
njhL446Kiunl4lQ6WQvdl1O8M5Q1PujYrp85p4my6qG0hKm71d7IwpSUV0bkXo5NxNzMdBfG0RmsQ7\
xqOE89dPn+GUCVxqM12WLS7ixvijPoX8fewFOypnreTpA18VWrtyq0etuiRs3x3iJS4/\
QSCrjf6co1hQO8ezVvDZOd60PXryvWIurTY39uHEfAJNryi4i9GI06kovEVf4zEu/\
f8B38pJHM6fVnAdVyO+i6lzIStmkIjSsHWaWDYLU36Nie7FkEmt2JXtx7AVH8TDEF/7P9u40U/\
nF32QgtgsgeWb11jaLV0aj64W9xLox3oVG0KqyXClBbm19qSi468MAGaFq8hxmRfa5t7iZn9+\
yMBIV757V2EoChqKftwEQuxHfVDOoyLE/6uBUyE6x687Y4nu+VZUBuZKz63tKuHL9o/3Uf7x+\
a5I3iPLrDPjtKmaR1dn/MvsS9VTo+oluHfYxbL5HANxxaDS9N0m7Rs7mdrA7/\
BL2zWgU2m61ru54oDFENYhUiJusP0xS3y3ONPKRmuFOrE8UUZWZ7HEndcr3E7dilxoO++\
rbhFlrJ3DQU1BEmhJYboXQdX+\
gxF5Kt7EIbbRfVIKDBPpVhq4mmyBud97z3vNfbqCIUrYWeBydvc4s3DOk+L4242F75vazpTsRh/\
j6MZx279BKOqP5ugOqetCWYNQq2xkvygvwxgzd45bxw1W681+aNb7I9pfFX+Y3zdMw/\
YgdPfglC9n8daOD7/\
E6e0WmF3IiYsHNxN7GOORE9HUYpJlKbRyUIpxlVZKWbqja1tTZhcfOQXGQjz0SkUmnkeMe86nERDV0\
3KiYjY8Z7zXLGGi//3oeW9fJhNHYVFKvRSDLLL/\
Nru4wiMbIYlc3osu5FymGbTQbn7SBrT5XTBtXsGFjkjHsNTJDXNdK9JnZj0M8HyiwGbURdjXYjpmUH\
F1rzv2D+TTEEgwlYEzptcjvj3d9ZqwLDL0lSFx9DL/0te7T+\
dl48hKaR8UAvKvu8YFG15f9wEiyTHdWK6SZ75ca7b8alMYDWVJX3ZDOUzLjusEa2WFP/\
KxVv0nubXceIN/\
YLSE474uMICIR4O4JuUKQVgsGAzOoY7wTXBIY2KR12gR67UQlNc3mpgHUfcD4OfW5cSVhpK68IMA9O\
IFxbw13rYaK9CTRRaBfKv9WG3xwaZxS+VNp7JXIt1J8Sz9KRGG3w3xz6tbrjWjjJ3+\
60499Tik1LTVnoHXm8WkzCk/NSZz2gWwmNRo3kkWo+3fq1Pjd9maBusBHcou+\
rbaxvP6easKyH8dLkpkxtqOY3sN4Wv1WaFZvAtr8rpro1jU8nADSA8/\
o5K5Z2V8gfrItvuzmLpJ6SS4faaXazZz1UnLTCTXKaE4jOozwhyqWcQGxpzC8RDQ/\
am3FaFbFyfFWMHg7yoG3TrXEOU22sFbOL/7hELZ0nv8qLqzxNkaWNiyIbr/jKEJFem/\
VFVnpFnFtrTCKrLEYLSphMe5BqkXBzU61BqjzGj3tuzKaO2JJIKrNJRLG1gPDE8jLWjj9rQll9BrN/\
cUOG4Nml+IYvhwEIvMaxJl8G/GamPFp/a5WS6ER+I2HGoRRV5L272Vf/sXU8N+\
WNIonHKCnH8OqTV792L0P1nq/XitCE4lcitDED/sZTs+\
douCfPyR7wGzp4ymNQcPJ33Dzht0K6Tr6LQRBj1CasvUecqyAnoEDhEtNsUCTMC6sjq0Q5Coz5YGy0\
7RO+zCIp3ro8zf/fyRqXN0bFxgO1M+GHzhb9u3q80OuvtL1PzkLxC5FzbyUy1Tgd6A/tO1laIF/\
yyoJb7ekDFQPJ9uN2NmI12969IVYjxs5urfXD3YiAM6Wc6q+\
NJa4UhSlD2v6RtukuutCdl3U6IOZIr8NnTr6J2FmOmHm2n/qEmuCtRHKODwM7Y4vu3+4/4EbL+\
Zf7r8//mPBlR2vOo7fGK+\
QTYnZJzkA7nV5yddIE469UttVn35kUl6GgxyMSL7LQN6kBmOmEZTkeS8MXxWVgAp30T1UEOsCc3EtA\
xDnMSuKJJQDeYtABFwe4V13fqg8I9F1sA/\
0DFPfpD9fqz62iF5F8PCgc5w7qJYExcoMH1o6nBZ5rj3k7K5ph82FMrpeLQ9/\
MVzv0QbDR2gURo09fV8JW16JrGBKCezwiR6IkbSxMU9DZOQJu7rGKoEkq1Qpsy9axwWNPjv58XQ4vz\
pvTa7WgS15ZZHBorSWm6DdEzAPyPN7yVUvV2TsmaoeYhiPrB5fhZRTX0RzWIlE98QRm8p2ibV00aVB\
zXCLXgdcPxucauksSWqm9yUyrqHNtr8UgvMlzEmVLKltj3O9x7JC3M5rwhDDMiR3t2qPAMCXCJkSzr\
Kw3g0wYmjVUI56GZTSv3XF1+ehi29m5ZGssy1giyFzBoOxp+o7oN/1oTeDiFYH88423LU/jwrtv7M/\
+Wfvq1c116jB49i131nLtqrLqt7QX++7Q5zwlXEEPzWCtVgAnOlAQdcT/\
pWWZ2VwDHfxyXHxcr1QCW8275caWpne6xsc3uhGrvTPGM/\
bl12CNjL0fkhp2CD5MzLvrXOXpaC47NBoL91OHsJ2NWStQxzMrS3myrncmKSr1ag/\
dwnHNlfBid6VdLjdf1BePs++cFGvvpLcsHUtAl4OmkXK+\
tcoiu1Y79dgq6KLZZoOZxEtTSWtj30GLTiaqorB7Lejv2wzZu/YZDm8yaSMndnYoz8JKajwZPnK+\
GoZAQZnd5oBlf86X+DutpYcuUozoelvvET2VOM3J8eHfF/C8F5dr743ZbWzaDFm/\
gUcu1Fn3u72uwS9UHW2bkt0kqb34oiccD8RGQT6ezkqBZTsLHh7kBLghYTSqnabVHpT7WZHdCm8xDA\
lHBGwYWJJrFsPEeM8pjKIa7DG25kosy72p7zj0GEXI9s73RDDu8/veHlN+UlyfBZ21Rbxl540+\
U3v0J0w9jfICNqvseox6l7kPvSRbXs6OxI/xhuxCa/\
jps554BcaVX0L9Zg7XO3hRnLNiPeUW6E0fBm+Htcp/\
hLirMQHpmnDUy1iuLu8ejWUk4RQtwrYzkB67Y1mKqo2tam6Lz9i1xl3Uaf1b5fSjli22tWFEfilKZJ\
akjmcif+HFQ5GLqyt1PQ5tzdRQQvuVDViui7PLqm+\
ttng3hQIjIeGcwvtDvKoEbIyg2Q314Jz3oD2cf0xuMjfUeqqQz4kMclaebWcrlo3HRjHDELbWHgTS1\
y7m88s1dH6nreU5N2A2IYhw27VGbr4s1wm/XCHzgAcD9B/ootvd8//6t4eHTzdPxfuvn+XH5+IvXz/\
/jffp2I0msllzeuZn3axk83v2UfQ2WhzOncFgQzlEEof28OJpZY+u6Ef3EWnH8/\
UB5BFpGxe0qECjp+D9v8nogd168oT6yOQnPVIwqFbGywzelmt6fnUGx4xH18Rr7nKE3m+M/\
o8i9awSy4YJ+eYSvEOD/lcNVZ6I4uaXLeo6pPsdnwGoyf+cX2ud6s/BkSAGLb4nS8mtRGpW/\
FbptdtMjSNIc0yBxk+5K8Wix6VtcUfjnVx7iq72T+tIhACsYrjQnXagqjZZ7Gxtwek1V6PmkY+\
x4VxwjI2Nr0UjyeYQIt3ktR9WSpONXgN5by3Ys70orkiM4S+q5VG2g0smzJRFEj/WeWb98iNZx/\
trRm6G3rWUxPXsuqBnn6H2jNAfY/v+CzlN9hB/UdskZxaIyaYOY6S6VEqPPSsajR04WNWW+\
pSmcnwTDUdz2J7UcbO4GZbLtgvcIWK4WBnDW4VejeOqPiyH1F+yym/\
CJq8ntndHvDr85PwkfR6c2BEP5Nke7MzKRwNW3ip100WY6woKaT043Wy0qvXG2+id2EtCG+\
ROLhgb9UogtfB8aHqHklVE94xD3ueHO4mcMMpcOjhmxV+1iEqmxuUxhlq6ISo6aKtu21Z/\
mhHJG7iazYjJHPz9ry0FelP8yjHM0uLyr/\
IDcqq9dXZDfXrVoKzvFeIggxX7UnVWe0113vk97hUUJUt7+\
25V8hJOnRuU818fPykFKWrq4vMvxa8P91+fn27TXXjnX+\
1Qnl2NeavrMd5fZd3QOJL8btkEsughp6ryDtkzLYettAFajuZXsc31xRrhNBJOVcYKA6imqqdo/\
m8n7YpZDbHyr3O09B9QA7+\
F30tcMHnZc3vfiUYukUP2mgiLXHNE3pUmsUm7vHhPd3ODTSSFUXmRbGRy/\
d7c7xw7ZDlMdxjLdX7uoCJiHTtrvF7F5aM+gBM/pg54t+\
yXPQVqlJHlBZpdG3mpfRf66YvoVgKWv4nFahsQ1tasx+\
Qzg1qlRLa293rdgvcIt8Yr037FfnEoaEGabHfFOaH3y0DQX/Yc78jb/1hKDlHkrwfcx83/\
zeIWP2HXT+wirdBfvLBXtkR7DOMOTy9ilFU8vzQHs1p2f+SrhM5woef9Q+\
k9aknlC39R309buIP1qO7v2ZaqxbUGglBEHN7MCu8BVJ9dYBMbMExTb4jJrZMPwisr92F6mVFSdjsF\
j+W2O6MZV28UBPrh3LLaVuflrSvU2k9blQ08w8pESvcvUpznxtsyhxbxR4SLec1chboHNQ8HtHSxPL\
Uj6cuAm06ps5Ef0DqJXbfNruxgtT8vnH5F04YADLPLu0+\
ZjTK68lorHTID6nXavBkzmtGp3ZrF4joCGP0qZtRxeL15PX+OjICE3niDEBJPDj227Z8H0eplHe/\
3VfiqsjbMG3jX8Ru7bN6ptNDqzMBLto64U6+\
Jn9nYdtidy4mqJLPVdLmFE4Rv5Sc6i9efcSuSkzbhV4kMy0iy31vvGLgsfEDXxvvFKEyKTlITrpHs1\
jJG3IyrrWB3Fj6asL9F7L3Ty6mULGYN0rKbsqgJxJ+\
BG2lt6EUCrlIBVXTFYsNtwjB6SX1RDquwzwvKPPJNMqydWYLNjBvPexJj6H3Oi9ldsJdkDi37nA676\
KtiFOyDTwSlRlqXeNybd8GdVfxnF5pZShinmgZE2W3oPdnzOpTEpjL/3i/\
3s3txFMvgBXB2VtRqm2TCNmY7xySD5cdwVXFbatsZ3HKi9F8+QIfmt8hxukRBDrUSolKlt0/\
ZasZjhxQK8Nmsz+\
KTW71wXCd8ZiMu9VTjhdIOMsSbKng1t90KR12XAFMg5Na7SBHzDSGGoSRoZxiTH0pVBP4vtc/\
tluWRegg5Art1U1Oe/uFLtNuvvhHztCprVqrCx+\
rHQ4v7RyHGphx1nKlqKcKXGVuQXkgigVj9k7FUXFlGHm6MWjLW4YSg6qGM9qjPO07EBHvGh0YmlYl8\
Z9LybgpEcxlTV5Nx6j5kPJY4NorWYeXl1Ti9RtzWWmXrKYPCIi4zL2vj2XZ0OtG7zB8HqyCFZ87t+\
cF9ExxYI9qgJVfX/qijs1HYe8WV26gRVnogJ+OdY+\
N5SGBnxpFOJAPtBlCHVONpHcPMmsbeG9rc4jYrQT5jJ2S3VUSNlnqsZY5GmnBEx9jQh0xCq/\
mKFXKqOiNQnsguReQ7N+zipdee935Btcya2LcdrJt0rFwLpaZ1Z6pqeXIN/WI+oreTzm5dj/\
OXMd88o/1C9wbdL2k2oIZ+MR2ERZy3G2T9b8ZqYM+p7Md8Woq39qx4t+CYmaInV+Ecc6TuaN/\
Rcu2pKbrRKJ7BrEq/9o58NpYJ4do+\
8cG8QSpignvclFqilSSq3XiLKnP04zTD9ha3cW3dYLUpEOptnSWz80oyl08vVI54lUYzl8tl9A0uGD\
MZKLVyQeKlQZmjxe6mbNYwnn3UXC1cnfScRqGWPe98F2dzo0UZsV2U+EkvZbrdbki3vVif6tspkGE+\
nYb8CsZNfO888d/Mkk8z6Ty1QZCNFbUcsnnpuNSouTIClmW9KP/IcB+Dtkt6w+\
efJadrWtSQswVFdDK6S9fbnW7IEMZK280mO3+VX7bNRvltR1+QyLbdB7fa4fBr68sp/\
1M7HnTxqo5oBrKbUbTemQfYuf/RXloiK4vhXcTuMmjJu9sr1SS1SzAyKG/\
19eZ3eolNhEOoKGCtzSBNgwpsuTrOTjhLt4qeLPvjo9NAJd74aT5OzO4maxfd+f9/h/\
hna0Whru7lfZ+zdBOqvmxGW78fI8CTjzwu5MzvmS94e/X6FI+\
hRzhahPn9MDdW99ijfTm8k7sZPU2Ju0joxVmRwzlxs5KB+Su5wOF05qnFjROfk22o/\
FrnWbpCjYET7zorQeTKAXde5UQr8ow74m6GRIq8ulYasrZWn963lPcZpbHXy30nG40StP81n3/\
79XPx9Pz54wNhr2eAXdo95q9eCqBLFaEm3YSBhVgpWER+\
ri0zUo2Il6iFdaxd84oXtJKUUMxa68defY12boWfNGStJrW9JIlPSHEOk1oIjRj1FtIMY/\
opA8hIQ0JYq0luwtuq8Hi/GsCCdC25ShHmRPiAbh+\
oWges8K5q7iwVa0kZLtDbl1L5TSv9QZwWaigsTuwXH9B/\
uNNSkT386cbuoImbwz5F9FtIj1NOgncNBUack7tSVSmzSFpGJJ/lbsW7bvxyMsJza+\
sKalcaan3r9TR2sFoBjtq64RBULje9BH0NmzCoTrULBw3voo/r6xKlSP2IslBmLrHbVys+\
tPi22k6rkHBvIdryvhEVq+6n83aEXc1qTn7QEFdvUkt9StNvKVI/\
Zo01TVxLf2lH2sK0JCLf3oxDdv1kfZS9fTS2xtrOBxSds7864+\
aV6Cx6bjlC91eyzT63haafL94km4vgDJmQJZDsIXaLVMlSHFNUHqTJLG0UqLkJGStTy2CFPzAsaCT+\
HJVgBiIzWkR3Em2Irr+8532wrNdvGtQXh9OdaohzDFrTfsSWuLAUwHsWcSlRwW/EsSb31+/\
dDmjFmYgxvMDZ2QqlLqr/T4tj/fKylNMv+VtMdidvjmLrdJtfExHUz7ToBkZu50c6Zq+\
XutjQWbws7uxgU+1PU4Z6YWS5Pp+4Ar4tyaPs5A3d/+465wqmrAK+\
lBg1KT2XfAneixbtkUjqjC5mxUsMknVwTgfuZMGnREa0lRCfDodvwfBoYTCmjNpgH4C/\
5gv2BtCvyvNJmVrx6+RFn/avHa65BLEplgxgun4FXqwWBa/\
EbuZ2Pq0DLfImeWnY6in27VSA5A7jI8dg2FWbMZaQxet6phXNjpodWusnZItrLqxmaFtVZOn+\
ZaDkLKDx5j3lKvoTLAlwuRlG3rlgVzqdyYrF6mGScDW17N27Ml5JunNT2QzaDyirmkh3VPUOBjwTER\
pEQQEFNjHyCwOzkXJQ56Ic0VO/\
VwlriJuWvGuLNnliRfBZQmkXkXQPsmOLTX5nQSSt7BdvnAKvU9p2l9J0Rk22QiEkouHcRVm/\
zbQNU65JDZy97fnsE1EppMgMFXIO2PSx75HWdLKTfNa2Iw7QgN5JAbd39o6ll9DXxv/\
5jxwm5md4JUP+Fx1edOJcR6QrMMe3fJZdl2OlORci30kNwggezcs/AFGV3lzC1is1gWEfGXx+5v+\
9zn3lylmRan1pLfTSC94E/IXL6bnmy/n94nh2bMkZ/\
cHkIsHNi1caUJBPZwETm5hc9J2ZxRfpTWzV4F3Kgb0ylgKIcS49slirt6TsNhU3aZ/\
BC2tGV77YHNQvjjXIuERLnEHc5NXa/\
ZaGFsSLFv0Ol5nvK9rRmNZBEygZjnnTfnHuzi9H5JhkDhIH3H98fP9w81Q8/\
P3xw8On9w9WIjgpMVSRR5mhAgwJpmPrsiJWO4zVftI5O7pyuEjRkH1fJvytKfWSNtXDSmNxb5cRA3v\
Oec/UYiGnZpHfEW38Ogki61A1jjqPhg2rfylb2LCt03P0elehZfNVZPQvra/\
spba6OR8ppNW7tmn0I0/Yl57tnM8X8o2FqjxvWaHmVUdSNvudWJYhmRptcj9mad7ULfolXSNGm+\
BY2buzs5QlopEcUOK23SV3liKImoHeI+VHa6HweBmSuIdfDzV73o6nOWsPF/\
ACcaUQanGVx6u1aeAY2PXK+Q2OPIELXtkldmGh14SnD5/ntT/J0bLycXxmmHwoGt/\
bdC1IvFKwm1yn9N2Jagflfaj9LmLgRRWg7hF3f/CYswCAJAG2kTDkSZZvXa3G5OW4mPJe9agsZ+\
cXVGdVJFwvV+GxOQ8ozP8e+eJSRWcFvlXqIsGzx7dVSHPuaXdiCSVaDymVFi0JHsd09zT7/9ZG/\
O4r3OHu2lFRfxKg5vOxiwk72c9fy9TeWcONvZb7On6n7vCa+KE2/cU+\
hdRWxgkgd3aHltYmbbDQQ0nroeX8Fx5EOp0IPGZZhT2GX/q9ntTqmqnjfXSqlvhZo0Bpd5NWm49s2+\
Q/l+3aqeEL2KuFOqPKMDFbM6x2Vbmhu4oO+iyPtb5A9jCKDZ+usCmgLzDZ6Ra95W5Emlq8/\
qcWa0OYdONpeD39ss1fLaRsVCJtpbPChHO5yV+\
xxpeHN4JWpt6HS78gWhdHIwb2H8nCdLZLSa3LYxgU5f1YkrxPnEpp++\
cuDG6W8nhAa418m6BiRrjqG25CrICRh1gjqqxr4Cbf3fOPn6t2tVVBKy41w8GOlSRHJO6kAU7sfqh9\
Ik8xUyVK57b4aDgKtAHbwVR2h0UVVQdECvUhbXf1hkZ7cqSSkeh8bl/Sc8IrGfH9p/Fg98+\
38g6kHb7DcILK4zU3FJ1YZzpM3kKIoqtNVMVObg/lxdiSUO3F5ahLv6btZtob9PZtDDg+\
JqYBzrwTtCtVPfmp06QQ7o60qyCQOdE2JZMLIXSukTe+7bP2cuy9wt5wy+\
yW5B9TuOGlI6yZm0KGV1m5xhmqCAavKVziOFVvuALaUdRkJdJrJM7GrHO8JSylKAFPNTNFwnFTaR+\
bgfqv2G3fghm/sROdXRU1iQmPKV1dX2/\
RMdqqzqbbEGsCQlzyAZey9omGtlUO3RIX9NArA86tjRPwgLz/\
rzaiZRzornJs4aXFEb4GzmD7hhTMYe8lMMibuuiksdwabVAL+a0bYG2XGljZD+RV2+W/\
xq6DOdcKNI3mTCrvrR5zhJznU3+zm052MYAzYkeSaWNXwbUpnMGW0lYFioLKP9nb3pg9dNpiUVaq/\
7HbjUgh1yxz1iUSkXOsENwZeSOujpKAUJHAKfslnnjt7f8B545dag==", "TotalMatchCount" -> 
    20, "LexicalStructure" -> TextElement[{
       TextElement[{"Alice "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{"Verb"}, <|"GrammaticalUnit" -> "TypeToken"|>], 
       TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TypeToken"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.867250913373678*^9, 3.867251001476802*^9, 3.915337692891929*^9, {
   3.915989461722063*^9, 3.915989467597506*^9}, 3.9239542670349*^9, 
   3.941669754047186*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[5]=",
 CellID->592120880,ExpressionUUID->"66431299-8082-4b2e-b72e-9f78751ee070"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251005246372*^9, 3.86725101515628*^9}},
 CellLabel->"In[6]:=",
 CellID->1085443159,ExpressionUUID->"737ac56f-dd0c-425f-8e53-5f7e7017fbac"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4FUX7/r8QadIJEDoCUgQpCgKCIKAoRRCpooCgFEGUoihRmnQJJRQV
Qbo0EUgoLyXEH4FQEt7QQyeBQL4JhBJCCxDI/37P82eucXfPnj1nUw7H53Nd
cOXMzs7OzJl97nmmnXKfDmrfN6uiKF/nxH/te33XdOjQXr4dCuBDp6++7t/v
qz69W371TZ9+fYbW/9QLgX8ibg/8+9/fqXZ48ODBoUOHHj58aC+CC/w/hmEY
hnFvDFTs4sWL//3vf2NiYlgZGYZhmH8P9iQMDmNERASUEf/j77RVxiSGYZh0
gC0MYxFjZSSH8dChQ/gff7MyMgzj/rCFYSxioIzkMB4+fPjhw4f4Pw3dRm63
DMOkH2xhGIsYKCM5jHFxcfgb/6eh28jtlmGY9IMtDGMRe8ooHMbHjx/jY0pK
Shq6jdxuGYZJP9jCMBaxp4yyw0ikodvI7ZZhmPSDLQxjEV1lVDmMRBq6jdxu
GYZJP9jCMBbRVcYLFy7APYyPj1eFp5XbyO2WYZj0gy0MYxGtMuo6jARC0sRt
5HbLMEz6wRaGsYhWGe05jATCcRVxWBkZhnFP2MIwFlEpo4HDSKSJ28jtlmGY
9IMtDGMRlTIaO4yEdbeR2y3DMOkHWxjGIrIyJicnGzuMhHAbEZ+VkWEYd4Mt
DGMRWRnJYQTRjqBoLruN3G4Zhkk/2MIwFhHK+OTJE3iC/3UGxMddrIwMw7gV
bGEYi+juZ0xvuN0yDJN+sIVhLMLKaJ2zZ89utHHx4sXMzgvDMKyMjFVYGa3z
22+/KTY2bdqU2XlhGOaZUcY5c+a0a9du1qxZJuMfOXKkd+/ePXr0OH78eHrm
i3FrZZwwYUIrG2g/9uKgqbR6SppWjBOwMjKMW+GshRG8//77n3/++Y8//rhh
w4Zbt26layb/+9//Kk+JiIgwc0uHDh0ofseOHdM1b4w7K2Pnzp2pGVSoUMFe
HF9fX9G6XK6E8ePHN27cGEm5djsrI8O4Fc5aGF3Kli27Y8eO9Mvkvn376EHZ
s2c/f/68CI+Ojm5s4+jRo6pb2rZtS7d88cUX6ZcxJukZUUYQHBysGweiaV0Z
qb3hf9duZ2VkGLfCWQvzrY1hw4b17dsXbmP+/PmFZu3fvz/98rlixQpo3ObN
m+VAPJGern302bNnhw8fPm7cOF7SkN48K8rYp08fbYS///5b7uO5XAlvvPEG
KyPDeAzOWhjVwOmVK1d69+5Nl9q0aZNu2dTnP//5jz1lZDIMoYxO7WSUSW9l
zJcvH/4vVKjQ9evXVRH69esnIhgoIzpaaGwGc9ZVq1Y1o4yxsbFBQUHh4eGJ
iYlyuFBG0fdDzK1bt/IsOcNkChaVEdy8ebNcuXJkeXTvvXHjxt69e4ODg+Pi
4gwegZRhB2AZQkJCrl69aibzf/zxh8vKaDJXMmysdJGV8f+cJwOUsVmzZgUK
FMAfq1evlq+iDRQuXFixTUbrKuOWLVtatWpVtGhR4VQiHdVinmrVqhUvXjxL
liy4+txzzxV4yvLly+VoixcvrlixokgnT548H3744YULF+iqUEbo5sqVK+vV
q+fl5UUhpUuXhmPryhfDMIyrWFdG0K5dO7oK7ZDDjx071rx58xw5cgiDUKtW
rY0bN6puR5rTpk3z9vYW0XLnzt21a9eTJ0+KOHXq1IG1effdd+njrFmzypcv
nzdvXoqPP8gc1a5dmyKsWLGCQrZt26Z6nMlcUQovvvgi/mZjZYD7K2PDhg17
9uyJPz744AP56l9//YXAMmXK/Pjjj1plbNGihWIHPz8/EY00UcuiRYsoAhxV
8YKogFZSHKGMTZs21UZ7/vnno6OjrX5PDMOYJk2UsWXLlriULVs2ebQKyoKO
sa5BGDt2rHw7PopLOXPmFH8XK1ZMPO6FF15ASIMGDejjDz/8YNLUqCZuzOdK
pDBkyBA2Vga4vzK+8sor8P6odV2+fFlc7dSpEwKHDRsmlqfK937xxRcIef31
16FxR44cuXjx4uzZs9HIEejj45OQkEDRNmzYEBgYSL2ml19+OfAp8fHxFGHk
yJGUeKFChebPn3/u3LmjR4+iASOphQsXUhzR2ED+/PnHjBmze/duFBA9PQoc
NWpU2nxbDMOYwLoyXrp0iYak4HmJQLz+YnEOLM/hw4fPnDnj7+8vhG/VqlUU
88aNGxRYvHhxGBl8RIJwCWFGhN1I0igjbAuMT/fu3Sm1yZMnkzkSw6q6ymg+
V0lsrEzj/spYpUoVtNuyZcvi759//pkuxcXFoXuj2PYBDR48WKuMaIdr165V
JTho0CCKuXXrVjmcFFM7z3jw4EEanShYsKBqHD4qKkr8LRpbuXLlUCHy7RTe
unVrh4VlGCatsKiMZ8+efffdd+nSl19+KcI//PBDoVly/M2bN1N4zZo1KSQs
LIxCvvnmGzmmarGEShmJ0aNH073aeUZdZTSfqyQ2VqZxf2WsVKkS/h4+fDj+
btSoEV2aN28ePr722mtJkt45TBDNiWLC+5PD7SnjuHHjKL5qREKFaGzo3aku
lSpVCuGvvvqqw7wxDJNWOKuMcLVo10avXr3eeeed7NmzU3i1atWuXLlCkRMT
E3PlyqXY5uPgA6qSat68Od2yc+dOfIyJicmaNSvZKPTS7WXAujI6laskNlam
eVaU8fDhw/g7S5YsNH9N3/j06dOTHCnjmTNnFi9e3Ldv33r16onZ8AkTJshx
7Clj165dKb68D1eLwa4NNDOE03w3wzAZQ5rs9IdBiIyMFJHJBIEBAwZok/r5
55/p6ty5cylELHUoUKAAbNSJEye0d1lXRmdzxcbKJM+KMoL69euT+xYdHe3l
5QU5o9Wh9pTx77//RvdPt83DGZRj2lPGWrVqKbZdIcb5NGhskGNubAyTwTir
jG89pVWrVv369UPPOSwsTBV51apVFPmnn37SJiWGLsVRWjCPtIaHgMnq0KFD
SEiIfJd1ZXQ2V2ysTPIMKePs2bMV2/jGzJkzFWkHrq4yis4S3Ew0eHwMDQ3d
vXu3U8r48ssvK/Y3NAm4sTGMW5Ema1NVrFixgiKrpvOIbdu2qTSI2LVr1/vv
v08jqwB//PLLL+KqdWV0NldsrEzyDCnjpUuXaLWVj48P/l+5ciWFa5Xx4MGD
tNy0VKlS4eHhIhx/O6WMwuU0mClI4sbGMG5GeigjEqTIX331lfaqMAJLly7V
Xo2MjPzss8+E/3j69GkKt66MzuaKjZVJniFlTJKOmpePxNEq46xZsygkICBA
TtCeMtKEu9hvK+jfvz/FN/ixjyRubAzjZqSHMl68eJFcv4oVK6pOwUqSjgU4
cOCAvRTGjx9PcYTbqKuMY8aMoWhi2YxAa2qczRUbK5M8W8q4du1a+lr79u0r
ArXKKJrWn3/+KSco9t6qlJGc0CJFiqgysGvXLooP31N1hG90dLTYuMGNjWHc
ivRQRvD+++9T/F9//VUOh6GgM0MgTzdv3qTAVatWqRaLbty4kW6fOHEihegq
I80WKU9XGMromhqncsXGyiTPljLi+yUVk2/XKqNogW+++ebx48fR7ENDQ1u3
bq08RaWM1CQU2yx2fHz8iRMnxEEQb7/9Nl0qV64ckr169SouzZ07t3Dhwo0b
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
L9asWROJVatWNS0PwiIcEorgiTL26dOHauCJJ56wV8ZPP/2UDD744APqRk5P
T1+wYAHC2xkzZpieolIJqamppJioAaE1MTExxYoVo1u7e/euyBCPjE4fP378
3wb++ecf+eqDBw8mFba6d+9XxnXr1lEFJiQkUDtk2LBhRjP3lBGNmejo6Pj4
eDxHGzO0YbZs2aLYJSuUUdwjrrJ161bxbluBVxqNPTx33UM05ejRo3/++ef1
69fxd1RUlHvKiBuPjY11ejk0Tvbs2bNjx44bN264lD/DZAnqHqZevXr4cDp0
6GBjQ32JVspIPVqIGfGNyOlwKaax0vnz5xH+4JSePXvK6e+//z4S4eJu3rxJ
KfjcKBQdM2aMbEmjS3CJZ8+eNeY/fPhwCtwaNGjgoTIK5s+fb6OM8Gw0UNu+
fXtd7/HVq1dNM1SsBOHZIJqyWUhICKUvXLhQJO7fv58SV69e7fSOJkyYQBey
MvB+Zfzkk09wCwii8TdqHn8///zzRjNTZaxbt26hQoVatGhhtEdwXbFiRdHp
QZ0VCLRlGzzlwMDAUqVKiQZY2bJlFy1aZF9goYzQ3LCwsPr164uejXLlyhmH
+PHyjBo1qnr16mIaAN5qNDjR7DRmjjYSGgZiRAOWr7zyinhv7ZWRamP27Nm4
4meffSa6MpBJ7969TQejT548+fbbb4vee1TXSy+9ZNVuZBgvQd3D1KlTBy82
nIyNjY0yos1MHr5t27aKZZsyZQp9TZGRkXL6ihUrKB2hFqUkJSVRSlBQkGx5
6tQpSt+8ebMu8507d5K3gV5THPcQlPGLL76go6a9eaYoVoKIInXOEJ7Z399f
u3/wF9EHGcuDxVZMmjRJc4zYWhl4uTIijEIsj1sYOXJkhvSAdu3apbM0VUbT
REgABfJGoJXC7NatW5BUcUge2x0xYoRNmYUyQt3k0V4Cz+LixYvCeOPGjVAr
08KUKVNGtB6Ja9euNWzY0NSYsFdGqg18wmhaGM8dPHiwzh4NMzQYTC80fvx4
mwsxTNai7mHQXNQMkYsOG2X87bff6IuAW1YsGwkW3JrcE5jhmPBDojZkyBCR
+Mwzz2iOzl65U2vlypV0UV03FLxllSpVkP7UU09duHCBhp8egjKWLl0ahxo3
bqyeoWIlBAQEaI4GuXEiE9r2mmMqjkhBGEKFRMvBaQFIGXEtKwMvV8bw8HC6
2b/++ivD0cdO3Qvyy0OoK+OYMWMoT0ReaJmcPXv2xIkTo0ePRttv8eLFwkxM
7mrTpg29gUePHkWARvV5/PhxqzILZaRH/9NPP8XFxaEZQ61T8MMPPwjjxMRE
aCUEaPjw4du2bUtJSYmPjxfyN3XqVDnngQMHUjrCWHwd586dQxOxV69eQn9V
lJFo3rw5csAdofFGr+KTTz4pd6uiWqhNgswRpR47dgwt2BkzZjz++OOUuGrV
KptrMUwWou5hqlevjve5X79+NjY2yijCJTSkMxzjDvBU+Crxh1Vub7/9Nuwh
YcZDxYsXx6EuXbqIFHx6lH/Xrl2pbxZS8sYbbyAFvkh3+rfffkvG9G126NDh
ISgjvJCuaQ1HERUVBc9mk6FiJYiYMSEhQWcGj605+rtEZ9ecOXPE7Q8dOhQ1
BmGdN2+e6RgQwnAytlq44eXK2LlzZxQedSXaDKRNxpFTRWU8cuQIRX+FCxfW
tbjOnz8v/oZk5MmTB2Z4grINojbSC3wRVmUWyogP6tChQ/KlScJat24t2+Nl
ky+d4Zg9RYWUm2E4nfptihYtqtsFbu7cuS4pIz43uQ0mpjbt3r1bJFLNg8DA
QDkTPDhKr1mzps21GCYLUfcw1GMzbtw4GxsbZaRupWLFiiFG++CDDwoUKEBf
B9qZiEN1fT4ETaoxXQPywgsvaI6+JpECHaQ5QqBEiRLjx4/v1q0buS80oeVz
ocjUxBU9ww9HGXFdOgQVg9mLL74omt+4U6tZiIqVINbr6eaWrFu3jproQAQp
kydP1swoUqRIaGio7irLly+no1brPb1ZGVNTU+lN6969u0jEu0F3RFGkQFEZ
aeBVc9YfiC+FzIyLcRCjIb1BgwZW5wplxGPVHaLFO7Vr17a5NIEy695qUXL8
oTNWnJtKtWEs+ezZs+n0NWvWUEp6ejrNRitXrpyx9UvtPeMjYBgvQdHDiA/H
vgPERhmpoY6Phbo9NUfDVfjkevXqGaf20bKL9957z5gbLqEZIik0icUMBIFO
ceAqSVDgYcQOAw9HGTdv3kyHqCMX5MuXT8xlhVibLr1UrAQ0DCpWrKg5Jjh9
99138MZ79uyh/j1RFWKvbKGMyOGbb74ZMGAAdQhQMXTd3SdPnqRDEydONL1l
b1ZGCD0VPjw8XCTiPaHEgQMHysaKyoggnU63n2hKERMaG8cMUJcmwlirc21W
bUATNYsZRAjqt2/fDr1GRFm5cmVq/uXPn18Y0EwkYOymcEkZjdN3IYh0uphc
hNuklK+//tqYj1BSm3WyDJOFOPUwKSkp8CrUUkXEd/v2bRtjG2UUvhfAG1Nn
zunTp19//XWrb4Qu2qpVK2NuNFH2pZdeEilRUVEkImiONmvWTIybVKhQQe5g
FONxsnI9HGUUXlpzdOXBAG1ptAfmzJlDHV8oqrF1rV4JiC/y5s2r3Q8i/Q8/
/JD+loMXeDA5HkExhg4dSmbG+PStt97SHK2amTNnGqc7erMy0pMFUIqaEpSI
cEY2VlRGVLhmO1lXNrMBjRarc22UsX79+kZlvHHjBkJUuakpkKdOvfzyy5pj
IpDxih4q48aNG+l0oYxoQlOKbqCTEB2qVvsRMUzW4tTDiGEm6M6OHTvsc7NR
RvKumiH0uHDhAs1eg5zpTqE5P3AFxtxo7V7Lli3pv/v376fgqGvXrjRT5cCB
A1ATuiKMqXkfGxtLsy/atm2bJIE2NhKffvpp+q/TjdpssFHG6OhoOuTv768b
5RkyZAgdMtaweiVQPbRv355WtcPt9+jR49ChQ2IE1n6vPIijWN2pW56G0lKn
LujWrZvuRK9Vxps3byIqt5cnBFnCXlEZqSr8/Pzsry5qrKUFHTt2tDrXJWW8
du2a6IUoUaIE3qV169bhNabZs7Iy0gQe1InxipmujGK5kG6Qkdi2bRsrI+PN
qCsj9M50VaCMjTLSDElEQMZDJGHw87p0Eix5GrygcOHCOIQ86b+0uA/OSjeB
k1YsgrFjx+K/EER7P0mIsRI3sFFGsbQEQaLuUFxcHB2SVx26WgkCKLs8l4Z6
/xA8Oi18//79qRi6RSWpqakff/wxHcpGyigWtvTu3ft/90OzkrT7+/oUlbF5
8+Z0rtUSVNmsQIECbjS0XFJG8WigiXKfg1EZ33vvPbI0TrXKdGVEK5RSdF3W
uhukrQgZxttw6mEQdPTt25e66fBF2H/mNsr4448/ao5uTNpzQ4YWJhi7p2g6
a548eXSnIIShz4pWqGXcm6VputYSkaB2b3Mz0a9ojzwm5So2yoiqo17TQYMG
6Q4lJCTQWVOmTHG7EkxBU4H6Y9944w2nhRcNCXmGYYY0soYaRmtfd5bXKiNJ
Q65cua5cuaI7hGdBG8yWKlVKvNKKyvjVV19RbdjsOpghNTN0C1FVcEkZ6UaM
vQpGZRRLNozzrDJdGS9fvkz9M/7+/sYpBGI1aKZs488wmY7ieM3MmTPpTY6K
irIxs1FGsYZu2bJlukO0toK2KJFZsmQJnYLGv5yOj1enPjT/0Kg4Gfea7jTb
AbHPJTPeeecd2DzzzDP0X5vflXCK/XpG2jH1xRdf1DUwROeSUZTVK8EUMbPU
3o0TLVu21BzjX3INnD9/nuZyfPnll6ZneacyIiyi2U3yBGaZnj17Us0IrVdU
xp07d9KJaHLotjS8cOGCWD0hNhqqUqWK/ei8EXVlhOjQ3GO8WrLZqVOnaEaW
rIziG0QmcnSJv7t37565ypghddHMnTtXNkYF0jaSKKGuk4dhvARFZbx16xa5
R9N9vwU2yohPgMbF8AnLn8OxY8doQikiR90pEDLqMGzatKmQEnzFNFwCIROJ
jRs31hy7bdNiSQHiLJqW89Zbb9kU22oGTnx8/NixYw8ePGhzrg57ZZw3bx4d
DQ4OltPFpEHjakT1SoClLtaD36ahw3Llygmxi4uLQyL+1V1o69atNG1JnteU
IU2ptdowxzuVUbQodNvlCWgzVdCnTx9KoTkzeIflGMdUC5o1a0bnwhgPGm8d
NBEPt1ixYngVxRMR0lCtWrXt27fTa5+YmIgwHxnaiIJLMSNNUdYcbU5IMB76
7Nmzxa44sjKiYGI3e9wCtBvvDBoGaDxo98hEZcSTpdF/uI4pU6ZcvHgRzRU0
1cQW+g9tv3SGcRX19Yyka8ZRrR07dvx5D9ofEu5CpMi/vYiwhb4IxGjUtD5x
4gR9qjlz5jT66gyp52rAgAEpKSlXrlwRjVtZowMDAykRUY/4+YmzZ89SEASm
TZtmc2umyojL0dQglM1+3x74OnG/okPyxx9/pBT4H2EJRaNFK/ny5YM43nUA
p0FN6DZt2pjmr1IJcHrt2rWDCxo3bhxuHB4PZaZ94XTurnLlyppjguKwYcMi
IyPh1fGMfvvtN1p+DiAZ8tXFGnDTNacZ3qqMqEzN0XtvtZECRISeb/HixUkK
+/XrR3cq7zhkqgWXLl0SE2zoDRF/FyhQQPwyMoSAJlARqHNRyToR0eGSMoqX
ny5B7xL+pQ9Wt63fli1bTGcl0aCDlqnKmOFoKMq721HZ6LkMHTrU5kIMk7Wo
KyMtu+jUqZMu3X76nzwTFWGL2CuD/I/4OyAgwPSiEAJyBeKDoj/Q4oXzF2bQ
BTEWhmYqYiK0/8UK91atWtkPj5oqY0xMjNPiEbhHmxrQTQWEYNHcUc3x+1Ci
kH5+froJqy5VwqlTpyg6JmRfDWGVu87gG2mTOmEp+y6Ir+7q1G0Ln2Z1+16o
jNA16kqFMNlkQruLa/fWm0dFRYmtTcXOM6Qvxi5ZiOOgQYPklx8vHhonOiFG
c2LMmDEiSiLQOkKt2nSxLly4kCzRstIdolVOulUbkyZNEqKDB1qvXj2ciBBS
M9vw9sCBA/ISKlTUxx9/fPXqVfq5McSbNjVmVRtimNIo9ygJrcEUIBMoqc1V
GCbLUVdG6r4zTjXXffU6jLttjB07lroHiUKFCtmv9oUuvPvuu7TRFn3IKIMs
iwScIcIl3e/2Qm6CgoKcjht27dpVcyx5kxNxVtOmTSkfq2iOEJt+m2J0TceP
H4fSCVcGWrRokZSU5GElJCcnow0gbDTHXqmIPoy5wasj6hTbEBEIB0y3caCQ
BFe0KpsXKqPbnD59OiwsDBJpfMFMQVQYFxcXEhKCu7BROsSkx44dW716NZol
9mtn3AbShsw3bNgg99LYcPHiRRjjTj0ZVVfnypUreF7r169X/B0uhsla1D0M
LRO2WYSlDiK4w4cPh4aGOv1VO8GtW7e2OrCfzIDgCK39tWvX4hs8efKkYuY2
0LzZb775xsN8jEDsIiIiNm/ebPrDlKaoVAIOIdqFE7bfjpVy27VrV3h4OOrK
KlzN8IlfoWIYhnEJdQ9Du5LqtjL2bdDQpZ+x+y//KADtQlCmTBkrA1ZGhmF8
DHUPQ7M+ihQpYpw/6ZPAY9NsmYYNG2Z1WbKM69ev0+xWm1+6Z2VkGMbHUPcw
wcHBNCCVK1eu8uXLyz+O45PQpJcmTZrYjwD6KmlpaVWqVBEzTGx+V4KVkWEY
H0Pdw6Snp8u7q8XExDzgomUxS5cuDQwM9GQP1WxNamqqeNb+/v42O6GxMjIM
42O46mEiIyODgoIQQfAcM98GDaGJEydOnjw5NDTUfvoiKyPDMD4GexjGQ1gZ
GYbxMdjDMB7CysgwjI/BHobxEFZGhmF8DPYwjIewMjIM42Owh2E8hJWRYRgf
gz0M4yGsjAzD+BjsYRgPyUJlZBiGYRivhZWRYRiGYWSyRBndOJFhGMYp7GEY
D2FlZBjGx2APw3gIKyPDMD4GexjGQ1gZGYbxMdjDMB7CysgwjI/BHobxEFZG
hmF8DPYwjIewMjIM42Owh2E8hJWRYRgfgz0M4yGsjAzD+BjsYRgPYWVkGMbH
YA/DeAgrI8MwPgZ7GMZDWBkZhvEx2MMwHsLKyDCMj8EehvEQVkaGYXwM9jCM
h7AyMgzjY7CHYTyElZFhGB+DPQzjIayMDMP4GOxhGA/xGWWMjo6OiIjYuXNn
5mbLMEy2g5WR8RCfUcby5ctrmvbaa6/JibNmzWrXrt2vv/6auddiGMabcdXD
XL16NTY2Fq3r1NTUB1YoxivAU8azvnDhgr1ZtlDGu3fvQuBaOThy5IipjVEZ
Dx48qN3j8OHDbpSTYZjsiEseJiAgIFeuXOQoYmJijAZJSUm7du3CvzaZXL9+
fc2aNRMmTPjpp5/WrVvn1PGmp6dHREQEBgaOGDECDfi//vrLxvjAgQNz5swZ
NWpUcHCwfTHgKuGTJ0+ePHXq1N27d//777/2xVAE2e7Zs8dphvv27Zs7d+7I
kSNnz56NGsM9Os35zJkzy5cvx60tWLAAvt0mf1TpihUrYBkaGnr58mX3CoyW
Dz3oHDlyDBgwIC0tzSqHbKGMmzZtEhqHmjG1MSrj3r176ZQ8efKcO3fOjXIy
DJMdUfcwGzZs0CQQTYhDEDtoXKdOnR599FEcatSokVUmixcvLlGihJxP3rx5
w8LCrOxxlWeffVa7H/iuU6dO6SxTUlK6du2qs+zdu/edO3eM2UJZypYtK1tW
rFjx9OnTKvVgxaFDhyDforRbtmwxNTt//nz79u115WzevDnKb5VzXFxctWrV
dKeUKVMG6UbjwYMHP/LII8IMujZu3Dg3Cnz79m05n3nz5lkVL1soY48ePcS9
VKpUydTGtDc1JCSkX79+POLAMP8p1D3M559/Dr8B7Vu1ahUiERFiIDQjQRS8
+uqrpjkg9IOjhkH+/Pk7d+7cpUuXp556irw3gkGj/aJFix577DHKE5Z169bN
ly8f/fe55567du2asERhGjZsSIfKlSvXtGlTyhm8+eabOnGEIgh1hpOsUKEC
/Q3H6LY4fvnllzrlws0azRAbNm7cmAzq1KnzxRdfoBVB/61SpYqpOE6bNi13
7txk8+STT6JuS5UqRf9Fbfz555+ycf/+/cWhl19++fHHH6f//vjjj24U+NKl
S3g3IMFUjVb37v3KiBegSJEiuIuPPvqIbhYxu9HMVBkZhvkPou5h4BvhN15/
/XVdemJiYsF7kPBZKSMFPkWLFv37778p5eLFizVr1kRi1apVdcZwywUKFCAR
jIqKIiGGIrds2ZKc2/jx44Xx7NmzKRGhAekg/u3evTslzp07V865Xbt2SERA
tGTJEkqZPn06Wfbq1UulKoz06dOHauCJJ56wUUYEIHQUkZ2x8MHBwcZTUHgc
Kl269MaNG6nT9e7du8OHD6dTECYLy/j4eEqsXbv2jRs3qLr8/f2RkjNnTl3f
smKBMxxBKDUbrO7d+5Vx3bp19MQTEhLQusDfw4YNM5q5p4xoz0RHR6Py7bvE
0ehCVP6Qu2QR+MfFxcXExPzzzz82ZtevX9+5c2dkZKT4MJ2ifsr58+dhduLE
icwasGCYh4C6h6lXrx78RocOHWxsqGvOVBnhq+GfcXTMmDFyOg0AwWudPXtW
dwocDnRQNxAJMSXFlK9Cqo3oRjcvqHr16kiHOgivhe+UQrCePXvKlu+//z4F
ZTdv3rS5QafMnz/fRmiGDBmCQxAj3bBdgwYNkI4Q0jTPhQsX4q7lFDiZ559/
HqcgfhSJX3/9teYI6s+cOSMSERxZhY0qBQYTJkygmrG442ygjJ988gluoVat
WviburJRe0YzU2WsW7duoUKFWrRoYbRfunRpxYoVRZ8z9YSgRSfb4EkFBgaK
MB+ULVt20aJFNqVFKxFXbNiwoS4djVKkFytWTPeKjho1CukIiqFWlHL16lUk
4uUXswLQZG3SpElycrIuz6NHj77zzjty1wGar3PmzLEpnuIpuPFp06ZRhwOB
z7Z///4om03mDOMlqHuYOnXq4PWGk7GxsVFGxCz0gQQFBcnpp06dovTNmzcr
lpl6IBFGiRS4C6R8/vnnOku4IMpcDKJNmTKFUtCOlS1XrFhB6QsWLFAshin2
QvPZZ5/hEJyYLp1c9yuvvKJ+IWoMQOURQmZIHYbGoP7FF1/UHKG3GwUGkyZN
0hzDwVYl8XJlRNyE0Bi3MHLkyAzpfnft2qWzNFVG00Q0bKjnwQi0UpjdunUL
kioOiaEBMGLECKsCt2nThrTsypUrIhHhP3XIgPXr18v2L7/8MhJfeukl+u/G
jRshlKZlg07JqormlqxcovcAzJgxw7RsiqfgKk2bNjUtA+rT2AZmGG9D3cOg
8awZQi0dNsoInnnmGXLdcr/TypUr6ZNR78mpUaMG7F944QX6L1wf5UCuT0bI
8W+//UYpn376Kf4LV0mCIkB7m0ZLEdYpFsMUe6GZN28eHf3jjz/k9CpVqmj3
d43ag4a3n5+f7A8TEhIoZwiZzpgCVQBH7WqBM+4pIyrHqjBerozh4eF0gzSr
Gb6d+i6MD1pdGceMGUN54imgKQVXf+LEidGjR6OhsnjxYmEG+SMziB293gi4
0P6h+jx+/LhpgSExdFZoaKhIFJ8JGDBggEg3vreJiYloxiCAHT58+LZt21JS
UuLj48Uo/NSpU8W5P/zwAyV+9dVXp0+fRpS3d+/ed999F8Gm6auifkpAQACZ
+fv7b9q0Ca/rjh07ELRSYu3atVUmYzNMFqLuYahnsl+/fjY29so4bNgw+jQg
ATTbBPL0xhtvaK6ES/jKqPEMjROJFDPKKQREk2ahwEtQyttvv605prsYcy5e
vDgOdenSRbEkptgLzblz5yiyw7+i2vEH9cgpRs0nT54UTmbmzJmUGBMTQylw
oTp74WnhvV0tMECMTwZWCze8XBk7d+6MwuPhinEu0ibjyKmiMh45coSiv8KF
C+uac+fPnxd/QwTz5MkDM7xyss21a9cohrXqPMfzFeojEtEipTJr9w/K0xCq
7uXBo5RLkuEYtacyN27cWCS2bdtWc3Q76EYhbVboqJxy8OBB6sVFS1heNAQb
6ugAq1atsroEw3gD6h6GumislgAQ9soIHRSfRokSJcaPH9+tWzfyMGjWKhaY
hr20+9cR0DhdgQIF5FEeNGJJBwHcIyXSLCDTdSUIQnEIoqNYElOcCg08mJjK
27p1699//52iP2NXsI65c+d+8skniLgp5MG/AwcOFEfF3B7japHly5fTId1E
VsUCi9MPHDhgauDNypiamkqj0t27dxeJePHojnRrYxWVUbyB8hwwI/hSyAwS
qTvUq1cvpOOltTqXBpHl9ttzzz2nObo+KE/RIUnzo9D8c7rzBm5Bu79TXcxk
Xrp0qf25Lp0yduxYsjFuHCTab6bjtgzjPSh6mMjISJXGnr0yZjja22JWgEDX
tWgDoh4a2vD395fXYgj3juY0cjtz5syKFSsoNCDeeecdsqTVHO+9954xcxRb
swgn1XEqNMC47hJey2n/UvPmzeVThg4diohYHP3ll18ofe/evboTURI6ZAwn
VQosQpiJEyeaGnizMoaGhlLhw8PDRSJeQkqUmxYZysrYpUsXOt1+oinFqkWK
FDlmANfVHGGs1bl9+vTRHNPSKPRDZKo5dhtAY49eYDw1sqTRf9PmHGK07du3
Q77RAKtcuTK1x/Lnzy8McFQ00nCDwcHBTl9ClVM6depEBqaTbWgdMcJJ+wsx
TNbi1MOkpKTAq9D7XKxYMdkbG7FXxqioKPquEco1a9ZMTOqrUKFCQkKC06Li
GxQh57p163SHRHgo8+GHH1Ko+9FHH5El3UirVq2M+dPkWzFy5x72QoPao4FO
BDK9e/cWyypRFT/88IN9zmiBo9LkCYcvvviicM5i6Ydx+f/69evp0OrVq10t
MPHWW29pjukWM2fONM5v9GZl7NChA90dpKGmBCWWK1dONlZURrwhmu1kXdnM
hty5c1udK8ZGly1bhv+i2sVnRZOoqc//2rVr1IGgi15v3LiBiLVo0aLGi+pm
UqEBKZvhZqdOnWq/xMPpKVS9+O5MT6cRT8irbqCfYbwKpx5GDDNB1Hbs2GGf
m40y7t+/n5ZLIGKij+LAgQNQKMoc4uh0qVffvn3JWHSNykAc4R/gjnLkyIEL
NW7ceNq0aampqTQo+eWXX5IZzSOqX7++MQda8t+yZUv7YthjLzQdO3bUHL3H
1I+HVj0KKfzM5MmTVS5x9uzZESNGULuiUqVKNNtQjDdt3LhRZ79w4UI6ZKpB
KsqIGFxswtOtWzfdUa9VRtSM2BrCCgRBwl5RGakq/Pz87K8uaqylBXgZrM6F
tMlriz744APt3gQzWntbsmRJ/L1mzRq6hNwcglzShC7NMWYxZMgQvBtJSUk0
mdY4xxiiFhgYKG8JVbt2bd3aE5dOoRsvWLCg6bk0rwCtO9PNqRjGS1BXRuid
0+nWNspIbV34E11bUSxaHzt2rE3OUA0yq1WrltXEOeK2A/r7xIkTdBY+ZEpp
3bq1dv/UegEEC4c+++wz+3u0x0ZoxCacojDEyZMnycnkz59f3V2MGjWKcqM5
/Lt376b/ynMjCfEETTeSVVFGNDA+/vjjbKeMYiUOwvP/3c/o0aPp0Ndffy3s
FZVRdGvbL80jswIFCri3wp32SqK+fZpgtnXr1gypKxgNS5p1jG9KvoR4Ujgq
v05WykjgqwwODqbZ44pfgdUpon7E+koZqk8xsZxhvBOnHubQoUMI1vBBkX+w
/8xtlJFmfpouh3z66ac12/3Hli1bRqEfMpGXsTuFuqHAtm3bKOWLL77QHEM2
us8W2ZKlcemHS9gIjZgjauw6po1uQFRUlOKFjh8/TqcMGjQowzHrlf47dOhQ
nSVtGYoKNO2/UlFGMbKGxydqUuC1ykhagPBEXhhI4DVG2KU5tkoQr7SiMn71
1VdUG6ZbGgrEZBXdyllFaAIPntpff/1Fiibmf5YrVw4pCB6pZxIRpXwi3Zex
V8ReGQl8FNTDr+tndumUfv360Y0bNzTYt28f9XW0b99eMX+GyRIUx2uExNi7
bhtlpCmC5MZ1UCPTakJCWFgYjawhB1d/VZYWuaNZKxrPS5YsoRtBQCFbihks
NgKhgo3Q0MJAzWxdYWxsLB0yrrC2aoocO3aMThGT/2kjONyy7nRyXFaDv06V
8fz58zTpQvRI6/BOZbxx4wZN1rKabEzrIORWk6Iy4iWkExHp637K5MKFC2K5
xP79+8kMcZ/96Lwpe/bsodM//PBD/NusWTNxiLY9bNOmDbVXxcqdDMeYAi1T
qlGjhpzbqVOnKlasqFNGNHqNc8JpHhq+NdNSqZwitl2qXLmyPP6IV5E2MdCk
GUQM450oKiOcObnH77//3sbMRhmpd6hSpUo6XUCbk6blvPXWW8azwsPDacDl
scces297w5PochZT3OXZ46mpqdRr2rRpUyE60E2a4wcNlZUITmDs2LEHDx60
ua4OG6HZunUrHdLt45ohrSOIjo7WHULr+r333jNuNv7tt9/SKbNnz6YUsZpA
Xp2BdoXVRZ0WmNi8eTMZyL+uIuOdyiiaQIitTA3EyGyfPn0ohebM4B2W51ua
yiV0is6FMeoNLx40cd68ecWKFcN7Ll4hWv2nOfZP2759O8XsiYmJI0eORIb2
U1BEk4bAwzXeGqFbU0k6pTlm70CRod14Q8SuOEIZ8UZVqFABbc7hw4dTJwZU
bMGCBWT2xhtvGIukfgreWEqsVasWGhK40yNHjohdg2x+i4dhvAT19Yw0QcU4
ALFjx44/70H7Q8JdiBTxixiBgYH0XbRs2VL8pMXZs2fFDuHTpk3T5QzfRWul
NcduWps2bQoNDQ2REMs9YmJiECDAs8H/QObw2cL5UL9NmTJldC120Rs2YMAA
fOxXrlwRe4/Luo9D+fPn1xwrB2mIxwr4OnG/Ytj0xx9/pBTEDmSGYtCAUb58
+eBPhP9cvnw5tfNLly6tW5UWHBxMuaHBj6gWSo2zzp07FxAQQN3LaKiLykQ6
BdeIvuGOYIkAnxaVw0xuvSsWmBA9vVY7ynqnMlJ4gncAN2tqgMdBzxfVRVIo
ugHlLZJMlfHSpUvy74LRBFECVS1+GRlxK834ItC6o8dB2O+emiGNGGr3z7GB
Cot53cZN/8SHRlek9wT/0vcrlBGfjFyYokWLis3r8BaZtoLUT0FzlzaqMtYP
Gp9WvxzNMN6DujLSHjidOnXSpdtP/xOL4OCoxXAVwsCqVatCyMTPJLVq1cr4
y7nyPpOmiM1AxAZous+wbNmyxg5YSF79+vWFjXAyCARkYRKrkgGUyKZmcI82
hUT9CEv4N/qtB83hkFEMMcEPvkWeJ0nAPw8dOlT+nUTxi1RUcjQPZHtEE2K5
mdhmE9Wo22lTvcAZ9/qZkZvV7XuhMqLeqCsVwmSTifihTJoqjIaEeOUOHTpE
NiQoxi5ZiOOgQYPklx+PBmGRTojRnBgzZox46ATUAbXqtItV7PpbpEgR3bJB
oTumG+lMmjRJPH18DvXq1UODByGkdn9valJSUq9evagLRYDP3OqnRV06BS0x
vLrU3yveQzRBbX6HlGG8B3VlpP5G41Rz3VevQ+4Fgr8aN24czRAQ+Pn5BQUF
GTekgkuRFcGU2rVrC3uENoi5xCEEm4hGdXtkCfB5vvvuuyIghRfFfeniNRRJ
7IqMAMSmZsQu5abo5jzs3r0bzQDdrbVo0cJqh5kMR+wshx5Ew4YNTRfRwAHS
jCYCMYVOFl0tMMUgqCKr4nmhMroNAvCwsDBIpNMtZQhEhWjtoH2Cu7BROuja
sWPHVq9eDQXR/XbMA+Lq1au41oYNG+SfMTWFfqkKd71582baCtVp5uqn4MYP
HjwYGhqK156XaTDZCHUPQ1v62yzCUgQfCBrka9euhcc+efJk5u4tjBY7/E9s
bKzKnIdbt25tdWBjTAvzv/nmm0wsZIajQwwRYnBwMKIVxVY0bm3btm0rV66M
jo62X26W4ViuEh4errJ/glN84FeoGIZhXELdw9D+M61bt37AJfIirly5Qpua
/pc3QKae6jJlylgZsDIyDONjqHsYmqZSpEiRTIlEvB94bFrFbPwN2f8O169f
r1q1qmb7S/esjAzD+BjqHkbMk8yVK1f58uXFFAVfhWbpNGnSxHTrGJ8nLS2t
SpUqYoaJze9KsDIyDONjqHuY9PR0sT4LxMTEPOCiZTFLly4NDAx0b2svHyA1
NVU8a39/f5ud0FgZGYbxMVz1MJGRkUFBQYggnG4AzmRr0BCaOHHi5MmTQ0ND
bX7KNoOVkWEYn4M9DOMhrIwMw/gY7GEYD2FlZBjGx2APw3gIKyPDMD4GexjG
Q1gZGYbxMdjDMB7CysgwjI/BHobxEFZGhmF8DPYwjIewMjIM42Owh2E8JAuV
kWEYhmG8FlZGhmEYhpHJEmV040SGYRinsIdhPISVkWEYH4M9DOMhrIwMw/gY
7GEYD2FlZBjGx2APw3gIKyPDMD4GexjGQ1gZGYbxMdjDMB7CysgwjI/BHobx
EFZGhmF8DPYwjIewMjIM42Owh2E8hJWRYRgfgz0M4yGsjAzD+BjsYRgPYWVk
GMbHYA/DeAgrI8MwPgZ7GMZDWBkZhvEx2MMwHsLKyDCMj8EehvEQVkaGYXwM
9jCMh/iMMkZHR0dEROzcuTNzs82OJCcnRzi4fPmyin1cXByMt23b9qALZoWr
BWYYe1gZGQ/xGWUsX768pmmvvfaanDhr1qx27dr9+uuvmXstL+f333/XHPzx
xx8q9q+//jqMn3rqqQddMCtcLTDD2OOqh7l69WpsbCxa16mpqQ+sUIxXgKeM
Z33hwgV7s2yhjHfv3oXAtXJw5MgRUxujMh48eFC7x+HDh90oZzaFlZH5j+OS
hwkICMiVKxe9gTExMSI9PT09IiIiMDBwxIgRaGP/9ddfVjmoWxJwy7ssSEhI
8CTz69evr1mzZsKECT/99NO6deuc+n+nJCcnz5s3b/To0ePHjw8LC7Pp1VG3
JFyqBBkcJTPTS9y+fXv79u1TpkxBJeAdSElJkY+i5UMPOkeOHAMGDEhLS7O6
SrZQxk2bNgmNGzVqlKmNURn37t1Lp+TJk+fcuXNulDObwsrI/MdR9zAbNmzQ
JBBNUDr+ePbZZ7X7gXs5deqULgd1S8HYsWM1C1544QW3M1+8eHGJEiVky7x5
80KkVOrByJ07d/r27fvoo4/KGRYoUGDq1KluW7pXCTLw5H5+fmS2YMEC+RBk
7ttvv4W3l7OCAvbu3RuxFdlANx955BFxFFJudaFsoYw9evQQ91KpUiVTG9Pe
1JCQkH79+v3XRhxYGZn/OOoe5vPPP8eLB6++atUqxCD//vsvEhctWvTYY4/R
O4nvom7duvny5aP/Pvfcc9euXROnq1vKDB482EoUZP/mUuaIK6ECOJQ/f/7O
nTt36dIFp5A0INJ0tQIvXbrUuHFjIS61atXCFUUhp0+f7oale5Wg4/333xdm
sjImJSW99NJLlA7tg7bWqVNHdAW0adNGLjDejTJlyiD9zTfftLqQ9ysjGiRF
ihTBXXz00Ud0m/v27TOamSrjfxNWRuY/jrqHgW/Ei4dPQKTAcyLeIfWJiooi
rYRotmzZkt7S8ePHu2qpg5r6JUuW/NtAYmKie5lXq1YNiUWLFkUmlHLx4sWa
NWsisWrVqq5U3v9n2LBhdJWhQ4eKLtnQ0NDHH38ciYjabt686aqlG5WgY8mS
JbKAysqYkpJSpUoVJPbs2VMU4/Dhw08//TQZi2ohSJehGlY14P3KuG7dOmoG
JCQkPPnkk/gbz8Jo5p4yoj6jo6Pj4+PT09NtzE6fPr1lyxY3umTxPh87dmzr
1q1XrlyxMTt//nxkZOSJEyfo/fcQp0Jz48YNfGtHjx6ly5FzcEkZ3SgwKjk2
Nvaff/5xo8AM4xLqHqZevXp48Tp06CAnwidAgHSDdBAakqpXX33VDUuZtm3b
4ihiHPuyqWeOLzpnzpxIHDNmjGxM41BwnmfPnrW/lo67d+9269Zt9uzZuvRv
v/2WPlWEqK5a6lCsBAFugfpRceNGZQSnTp2CIuvOWrhwIRnr5mFOmDABiRAU
q8t5vzJ+8sknuAUE6fi7ffv2+Pv55583mpkqY926dQsVKtSiRQuj/dKlSytW
rCj6nKkLAu002QZuPzAwsFSpUqKVUrZs2UWLFqkUGzLasWNHeofp5fT39w8J
CdHlP23aNIrrCdj379//6tWrutxGjRpVyIHuM0lLS6P0fv36iUQbodmzZw9c
AX1EoGDBgj/88APqR1EZ1QtMNY/vBYc+++wzMfxB3f66gW9dgffu3Us3ZdoE
Cg8Pp6PGr4BhCHUPU6dOHbx4cDIqxo0aNYJx6dKlPbSk7sfmzZurXFQl86Sk
JPqCgoKCZEuIBaVv3rzZvWvpQIBAGf72228eWrpaCW3atNEck0bwZE2V0RSE
AGQ8evRoOX3SpEmaYxzW6kQvV8bbt2/De+MWRo4cif/Onz+fbnPXrl06S1Nl
NE2EW27Xrp1mBrRSmN26dYskgxAd/mDEiBH2xUZTTQwT61i8eDHZ3Lx5s2nT
pqY2KLaujffVV1/RIV3cinuhdKiPSLRSRlyaujhMcaqMLhWYah7NQjRjjPaD
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
DPYwjIewMjIM42Owh2E8hJWRYRgfgz0M4yFZqIwMwzAM47WwMjIMwzCMTJYo
oxsnMgzDOIU9DOMhrIwMw/gY7GEYD2FlZBjGx2APw3gIKyPDMD4GexjGQ1gZ
GYbxMdjDMB7CysgwjI/BHobxEFZGhmF8DPYwjIewMjIM42Owh2E8hJWRYRgf
gz0M4yGsjAzD+BjsYRgPYWVkGMbHYA/DeAgrI8MwPgZ7GMZDWBkZhvEx2MMw
HsLKyDCMj8EehvEQVkaGYXwM9jCMh7AyMgzjY7CHYTzEZ5QxOjo6IiJi586d
mZutGyQnJ0c4uHz58sO5It37rl27HsK14uLicK1t27ZlVoamD857niaTHWFl
ZDzEZ5SxfPnymqa99tprcuKsWbPatWv366+/Zu617Pn99981B3/88cfDuSLd
+1tvvfUQrvX666/jWk899VRmZWj64EwTGUYRVz3M1atXY2Nj0R5LTU19YIVi
vAI8ZTzrCxcu2JtlC2W8e/cuBK6VgyNHjpjaGH3pwYMHtXscPnzYjXK6Byuj
S7AyMpmOSx4mICAgV65c9M3GxMSI9PT09IiIiMDAwBEjRqCN/ddff5meDh+7
y4KEhASnV09KSoIl/lUpalpaGuV84MCBzC2GFcnJyfPmzRs9evT48ePDwsKs
+sH27dtndXWU2elVFCshMTExJCRk1KhRc+bMgXv/999/Tc1QFStWrIBZaGio
rsBo+dCDzpEjx4ABA2zKli2UcdOmTULjcL+mNkZfunfvXjolT548586dc6Oc
7sHK6BKsjEymo+5hNmzYoEkgmqB0/PHss89q94MX8tSpU7ocxo4dq1nwwgsv
WF33+vXr69at69Sp06OPPgrLRo0aqZQWGk05P/fcc5lSDBvu3LnTt29fKp6g
QIECU6dONRo/9thjVldfvny51SXUK+HmzZsw0+VcvXr1o0eP6iwHDx78yCOP
CBso4Lhx48TR27dvy0ch+lZXzBbK2KNHD3EvlSpVMrUx9aVoYPTr1+8hjziw
MroEKyOT6ah7mM8//xxvGjzzqlWrEF9QGLJo0SLh6vGq161bN1++fEKSrl27
JucAV2wlClbOCsGRTnFeffVVp0WNi4sTZxmV0Y1i2HDp0qXGjRsLcalVqxau
KDKcPn26bHzr1i2rS4OlS5d6WAmwrFGjhiiMv7//k08+Sf8tWLBgSkqKsOzf
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
DxMZGRkUFIQIInPnuTHeBhpCEydOnDx5cmhoqP3OPKyMDMP4GOxhGA9hZWQY
xsdgD8N4CCsjwzA+BnsYxkNYGRmG8THYwzAewsrIMIyPwR6G8RBWRoZhfAz2
MIyHsDIyDONjsIdhPISVkWEYH4M9DOMhWaiMDMMwDOO1sDIyDMMwjEyWKKMb
JzIMwziFPQzjIayMDMP4GOxhGA9hZWQYxsdgD8N4CCsjwzA+BnsYxkNYGRmG
8THYwzAewsrIMIyPwR6G8RBWRoZhfAz2MIyHsDIyDONjsIdhPISVkWEYH4M9
DOMhrIwMw/gY7GEYD2FlZBjGx2APw3gIKyPDMD4GexjGQ1gZGYbxMdjDMB7C
ysgwjI/BHobxEFZGhmF8DPYwjIewMjIM42Owh2E8xGeUMTo6OiIiYufOnZmb
bXYkOTk5wsHly5dV7OPi4mC8bdu2B10whnk4sDIyHuIzyli+fHlN01577TU5
cdasWe3atfv1118z91pezu+//645+OOPP1TsX3/9dRg/9dRTD7pgDPNwcNXD
XL16NTY2Fq3r1NTUB1YoxivAU8azvnDhgr1ZtlDGu3fvQuBaOThy5IipjVEZ
Dx48qN3j8OHDbpQzm8LKyPzHccnDBAQE5MqViz6ZmJgYkZ6enh4REREYGDhi
xAi0sf/66y/7fG7fvg2XO23atB9//HHTpk3Xrl2ztz9z5szy5ctHjRq1YMEC
uLV///3XyvL69etr1qyZMGHCTz/9tG7dOhuvDlcJnzx58uSpU6fu3r3bJk9F
kpOT582bN3r06PHjx4eFhTnthkpMTAwJCcFNzZkzBx7YaQEUKyElJWXDhg24
/aCgIFRyWlqaSuETEhJ2ORDFRsuHHnSOHDkGDBhgk0+2UEa8ZkLjUIemNkZl
3Lt3L52SJ0+ec+fOuVHObEp2VMaJEyc2btzY6uEyjEuoexj4W00CXpfS8cez
zz6r3Q/cy6lTp0zzgYb6+fnJxo8++ujYsWNNXX1cXFy1atV0mZcpUwbpRuPF
ixeXKFFCtsybNy9EymgJZSlbtqxsWbFixdOnT6vUg5E7d+707dsXdyFnWKBA
AWiuqf3Nmzc7deqku6nq1asfPXrU1F69EtavX1+yZEnZrHTp0k6lBz5fPBHI
LiWi9fLII4+IfCD6VqdnC2Xs0aOHuJdKlSqZ2pj2pqL10q9fv//aiEN2VMb3
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
    "], {{0, 341.}, {303., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{303., 341.},
  PlotRange->{{0, 303.}, {0, 341.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.867251009916374*^9, 3.8672510155337677`*^9}, 
   3.915337696125381*^9, 3.915989469042534*^9, 3.923954270397921*^9, 
   3.941669756324565*^9},
 CellLabel->"Out[6]=",
 CellID->667452104,ExpressionUUID->"477a2bb1-47bf-470b-af9a-a39cd56740af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVbAvb", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251023389432*^9, 3.867251025207808*^9}},
 CellLabel->"In[7]:=",
 CellID->186843028,ExpressionUUID->"42018ff3-a66e-4f3d-86c3-55a7c8ae4031"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
wv5/revE5Q==
    "], {{0, 81.}, {249.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{249.5, 81.},
  PlotRange->{{0, 249.5}, {0, 81.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251025602577*^9, 3.915337706687479*^9, 
  3.9159894726638937`*^9, 3.923954273661921*^9, 3.9416697595828342`*^9},
 CellLabel->"Out[7]=",
 CellID->199013378,ExpressionUUID->"291faf21-7320-42b5-9b2d-7b6338e78317"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"cebb1ec7-2d16-42f8-aba6-3820d0a10891"],

Cell["\<\
Search for a lexical pattern in Wikipedia articles containing \"darwin\":\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251098096149*^9, 3.867251107978134*^9}, {
  3.867251186252664*^9, 3.867251196349597*^9}},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"3e693496-5bf7-4057-87fe-11795dc2ea2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"darwin", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<darwin\>\""}], ",", 
     RowBox[{
      RowBox[{"BoundToken", "[", "\"\<theory of\>\"", "]"}], "~~", 
      "\"\< \>\"", "~~", 
      RowBox[{"WordToken", "[", "1", "]"}]}], ",", 
     RowBox[{"MaxItems", "->", "1000"}]}], "]"}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251109517704*^9, 3.8672512099533*^9}, {
  3.915985309682274*^9, 3.9159853249693527`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[8]:=",
 CellID->978490832,ExpressionUUID->"662d8154-fa39-4a14-aa92-9b98569039f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"darwin", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251315746311*^9, 3.8672513188938837`*^9}},
 CellLabel->"In[9]:=",
 CellID->2047610439,ExpressionUUID->"1288863a-2f6b-422e-96af-8a84979eb93c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
s3Pw4MFLly79/vvv7du3r1mz5t3+Lj8AAAAAADJkJT348ssv5d55/vz5Fpsd
PHiwzmRWrFgRGxsbGhqqJ37UrVvXuNSMZzFRhvnA3r171a579uwp5RMnTpQ4
Qj999tBDDxlTIyv03vPmzZs/f/6RI0du2rRp4cKF8tDZsWPHVJekwkcffbR7
9+4jR47MmDFDz/xZtGiRZ0eddCcmEm+++ea6detU4+qMyHNzysyZM+077FlM
VL169UuXLlWsWFF9/uqrr2TTqVOn7r//flWyY8eOgQMH2sdE6iwHBwebGnz/
/fel5tq1a43lEh/Zr020c+dOmepTrFgx04OE0dHR+rM+Ef7+/tu3bzd+Xcqf
f/55Xbhr1658+fKpwrZt2xob/Ouvv+R89e7dW0o6depkS48BdWYl7NdoAgAA
AADA91hJD95991259d68ebOVNtVte968eVX9ihUrnjhxQpere22ZwJOZwMSt
fEAZPXq0lJvWJoqLi5Py5557zspBmfauLFy40LT1tdde05GUsXz16tVSXrt2
bc+OOulOTFSkSBHTekG///671K9UqZL9OkWexUTyVN3QoUPV52bNmsmmOXPm
qB/r16+fZAh/Mmxw1apVUvO7774zljuLicaNGyf1TZOvTPSJWLFihWnTww8/
bEuPInWJakoq79q1y1S5T58+qrxhw4byo77U586dm+GhAQAAAADgY6ykB126
dJF7Z+N0Dhf0wjX281v069SfffZZXehZTGQlH0hyHhNt375dyvVMErF27dqq
/834wJHee9euXU17T0xMlKVsypcvb7+iddu2beWL+vE0z2Kixo0bJ9lp3bq1
fOXo0aOmTZmJiXbv3q0+58qV6+DBg/oQZBUm1zHRkSNH5s6d27dv34YNG+rJ
Tp999pmxjrOYqFu3bg6HxUSfiFWrVpk2qQvAlv50ni6R+K548eK77QwYMEBt
KlWqlNTcsGGDXupKDfWPP/5oesMaAAAAAAA+zEp6oJ/b+uOPP6y0+eqrr0p9
+9Wqk+6EORUrVtQlnsVEVvKBJOcx0YEDB6TctEpzcHCwzc7JkydNe1++fLlp
7xKqKG+//bb9UX/11Veydfbs2R4cdZLLmEivwhQaGmralJmYSJHVe8aOHRsT
E5MnTx4/Pz9515izmGjjxo3PPPOM/QAq48aNM9Z0FhPVqVPHlj5pynU/XVwG
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
7SrtDxo0KHM9zdiIESP0tVq5cuW/87ADAAAAwN+fxfQgMjJS3YLZ/lvz5s1P
nDjh+oujRo3Skyvsty5cuLBs2bLGNgsWLLhixQrPjgX2PIiJ+vXrp05E3rx5
Q0JCEhISbt26JeVy7+9wegwxkQgMDJTLODg42Nt9cSVLYqJ9+/ZJI+qDadOp
U6dGjx49ZcqUHFj76MaNGzExMQMHDpTOhIeHZ/ceAQAAAMCHWUkPFixYUKBA
AbkLK126dMOGDQsVKqTDn0uXLjn74s6dO/PmzessJgoNDc2dO7faVLhw4Z49
e77xxhuqcfWjKgwKCsr8oeG2RzFRmzZt1Flo1aqVqbxly5bERK59/vnncrUf
OnTI231xJUtiok2bNjmLiXLelStXcuXKpTqjDs3bfQEAAACAu1iG6cGFCxeK
FCkiOU94eLjMLUlISOjQoYPcJE6ePNnhF69fv16rVi09Tcg+Jqpdu7Yqf/DB
B/U6t+fPn69bt64qVF/MgmODRzFRQECAw1Vlatas6TomatGihS6JioqKjIxU
N++u9xUbG7tp06YzZ85k2KuzZ8+GhYVFR0fr2U2uHT58WNXPwmcYb968uWfP
nm3btiUnJzuro2OiI0eOWG/52rVraqx27dqVVYswZ9jVLImJgoODPY6JrAym
SVJS0ubNm12siS0rh0+fPt3dzgAAAAAANCvpwdatWzt06GC64z5//rzER82a
NXP4rZEjR8rUoCZNmtjHROr2ME+ePKp8/PjxxvL169erwly5cp0+fdqT48F/
8yAmatCggToFb775pi6pVatWuXLlZOqXn59fsTuWLl0qFSQmeuaZZxITE/v2
7asfJFRfeffdd2/cuGHaxa1bt2bMmKHa1ClihQoVFixYYN8ZVTMwMLB8+fK6
prrqBg8erHZkqtmwYUPVpblz58bHx8slp5QqVap79+6qXH1w+ACUunrV1oCA
ABcDEhMT065dOz2hTl2c9erVCw0NNdZRP1atWlW/40x1UobI9XvioqOj27Zt
my9fPvmW2kXnzp31L9ru3bulEYfrQQUHB8vW5cuXu9XV205iIrUXadD0m65O
n5TrhYbmzJmjfp3l1994sOrKkQrLli2Tki1btngwmLqFRx99VH1esWKFOqF6
XmLFihUdLlVduHBhtXXKlCmOxxoAAAAAYEFm3nQmTyE9/PDD9pt27Nght3X/
+te//vnPf9rHROpeXm76Zs6caSw/ceKElG/YsMGzXsHIg5ioYcOGavz79++v
SyQgsrdo0SKpIDGRun+3X8BKGTJkiLH9lJSU559/Xm/ViYEyatQoY82rV68+
++yzDnet9mgKEqUPI0eOlJhLqB0FBQXJ59mzZ5uONDo6WjaNGDHC2WgsW7ZM
8gd7xnl0emqNiYuYaOXKlTppUb8skpoq5cuXlyW/bt68Ke9Nq1q1qv3XX3rp
JbXp/vvvv3z5sltdve0kJnr//fel0DS568aNG1Let29fKRk7dqzDvVSvXt1F
+571cOjQofI0mVHBggXPnz9vGhBp2RQ7AwAAAADckpmY6Mknn1T3ZTVq1DCV
X79+XR5QKl269Llz57p3725z9NCZv7+/LX0NHOPLifTttounS2CdBzFRnTp1
bP/9jqoNGzasX79ecr/atWuvv0M/UyYRjWjfvr06iUePHp0+fbp85YEHHjA+
faZXNX/xxRflLKvKTZs2lbTk+PHjuuawYcN0/qB2l5iYuG3btrZt20ph/fr1
jVeOsQ8BAQFr167dvHnzzp071a5VB1Rho0aNTEc6depUqb9//36HQ3H69Omi
RYva0ie9fPLJJ8eOHYuPj589e/Z9990nhSEhIVLzzJkzqoeSiCpff/21+nHr
1q3OBln9XhQvXlzVVP8uXLjw2rVrV69eVS3nz59fFap2pNqAAQOkwV27dhm/
rg7q/vvvV+Wvvfaau129nemYKDo62niwM2bMkOtBP33msH3Peqiob02YMEGd
ysjISJ0BfvbZZ6YhlfEcPny4szEHAAAAAGTI45hI3bPLJBN9S6vpV1TLfV+3
bt0cxkTqVlGq9erVKykpSZWkpqY+/fTTqqRp06aeHAzseBATFStWTJ2CSZMm
mcrl2SgXaxMp6pwa1w6ShFDZvXu3lBw9elSSkHbt2hlbuHTpkmQIb731lpQc
PHjQz89Plfj7+xufF7tx44Yssq0vMFMfmjRpkpKSYmz87bfflk1q78byxo0b
q8KaNWs6G4qePXvqJMRYrkZSyuvWrWsst742Ue/evW3pD+WZoiSZqJMnT574
+Hj14x9//CENmtKPxYsXm0bAra5mMiYyHaz92kQO2/esh5UrVzauB64GViYX
de7c2bTTGjVqqPJXXnnlNgAAAADAUx7HRFOmTJH7uHnz5hnL1Y2tzCHRi9s4
i4lSU1P1/X7ZsmUnT54s987FixePiory6Ghg5m5MFBYWZp/AiAxjoiZNmpjK
v//+e2lt9erVUjJp0iSHic3tO2GObmTixIlSc86cOaaaERERsun555839SF3
7tz2F8+ePXuk/siRI3VhXFycBA6ff/65w6FIS0uTGTsVK1a0X1y6Xbt20qa6
4HWhxZjo1q1bsopR9+7dTZvOnj0rLaxfv15KqlWrZrN77kyeOCtRooSs++Ru
V3M+JvK4h3octAoVKtjS55KZyv/xj3/IXxL9FB4AAAAAwF2exUTR0dFy01e9
enXjTd+1a9fk/9NXt3KXLl2SQmcx0e30uQEyY8QoM29fgon1mCgpKWnVqlVy
D16qVKnr16+bKmQYEzVv3txUvnr1ajmnenlqmVJSokSJY3Y+/PBDtalMmTJS
s0ePHvJd+9Wqb9/JCvz9/U19aNy4scOjkwWXHnnkET3ZKTAwUNqPiYlx+BXV
JakwcOBA+606ATPGpBZjouPHj0u1Tz/91H4c5DdCr6Q0btw4qayfO9NPnPXr
18+zruZ8TJQlPRT169dX5bK6tVF4eLjkfi+88EJYWJjxgUQAAAAAgEUexETq
/kvPAlqzZo1xkywmo27WjK8uchYTqdu60qVL29KfP3ruuef0QrVVq1Y9efKk
pweE/2I9Jpo5c6aMvzop27Zts6/gQUy0bt06U0xUr149m0tqL1Kzbt266sdi
xYo57G2LFi1s6WsZpaamuu6D0EFEWFiYlLRq1crmaMEiLSQkRL7y5Zdf2m/V
j0oZX0NmMSZauXKl60GwGeY4RUdHy6+Gfu5MP3G2efNmz7qa8zFRlvRQyKOC
9jGRMm3aNB07x8bG2lcAAAAAALjmQUykl9Xt2bOnsTwyMlLe1vTSSy/FG3Tu
3NmWPpFDfpTpHPv375fYoVevXnKnf+DAgY4dO0rLVatWNd2rwjMexETNmjUz
vURMZElMVLt2bSnp4MTrr79urFm0aFGHvZU1rPz8/PRkNtcxkV7Iunfv3rfT
V5CWa9X0oj2jZcuWSVdNa+mILVu2eBwT6ZbVde5sHFauXKnrN2nSxGZ47uzl
l1+2pU/Y0zOj3O1qzsdEWdJD4SImCg0NlRWuiIkAAAAAwDPuxkRffPGF3IU9
9dRTpoWCZb2UDMkyNV27dlWfS5YsqWeDiJEjR0q1iRMnZsXx3eusx0SHDh0a
MGCArJnTvHlz40rUIktiovbt26sfixQpYt++idRUHC41I3s0vmXPdUykvPPO
O5I7Xb9+fd68ebb0laIdBmIiMjJSOvDhhx/ab9U5xpIlS3ShxZhItzx16lQX
1bRvvvlG6u/du/fatWuFChVSn4cMGeJxV13HRHFxccavZ0lMlCU9FM5ioqio
KHlpWrVq1SZMmHD16lX7HQEAAAAAXHMrJlq8eLG83axMmTJ//fWXaetrr71m
JSZatWqVqqxasBmWuTZ65JFH1KY2bdpk7sjwf9xdwvq7776T0xQeHm7aJG8o
M64arVmPiQYPHiwl+uEvZwYNGmT6rrZv3z55Dsv4WqsMYyK9kHVISIhMyHF9
jSUkJMiMo+rVq9svdCMtKAcOHNCFFmMi3XKrVq1cVNMuXLggGd3YsWP1ck97
9+71uKsOQxid0OrX0onExESHMdGECROk3LiIt7P2s6SHwllMJLMcCxUq5Gyx
KQAAAABAhqzHRCtWrJB1P4oUKbJjxw77CteuXbvgyAsvvGBLX21YfpR3M6lG
VOFHH31k345MI9FLGSMz3I2JUlJS5EV148aNM20qW7asLX3lIvtvWY+J9u/f
LyU1a9a0XyXbaN++fVLz8ccfv3Llii6/devWiy++KJt++OGHDPtgFBAQYEt/
KFIuv6CgIBeVbxsmyM2dO9dYrq5/yUurVatmnA5nMSa6bQhG7EMwhzp16qQq
P/nkk3379lUfnnjiicx01WEIM3v2bCmcNWuWLkxKSmratKnDmOjbb7+V8q+/
/trUGYftZ76HwllMJP1Ufz0cDB8AAAAAwBqL6cGqVatkPkOBAgUynAdi4nAJ
69atW6vCxx57zPTk2uXLl2Vd62eeecatvcAhd2MipWrVqvaZwO07K+TY0lch
vnLlysmTJ8+dOyebrMdEtw1xQe3atX///XdJBuLi4kaPHq1aMKYuXbp0kZpP
PfXUjh071KYjR47ogKVly5bGfVmJifRC1rb0tbIvXrzoeii2b98ul33evHmn
T59+/vz55OTkJUuWyDJH9iGG9ZhIHY5u+dNPP71w4YIqvH79+vr1659++umF
Cxea6v/888+62+rfCRMmZKareg1t42vaIiIipLBMmTKhoaHq5KqdymvFHMZE
qqtS3qBBg127dqnOR0VFySaHIY9bPfQgJpJZiB9//LHrkQcAAAAAuGAlPViz
Zo08cKSMGjVK3R4uX758mYHrV9g7jIlmzJghDXbo0EEvNnv69Gn1o5QHBgZm
7sjwfzyIierUqaPGv0ePHqbyoKAgnRjIjKPRo0fLJrdiouTkZHk9vShQoIBe
dthU8/Lly08++aTeJE8tCX9/f1MUYyUm0gtZK506dbIyGj/88IN+B58i815s
6a/z068e06zHRMpPP/2kW1MefPBBGVWHGci1a9f0KKld//nnn5npakJCgmxV
/06aNEmXN2rUyGanS5cu8tY5U0yUmpqqzoLxklB/JST1dRbyWO+hBzGRxMtj
x451MeYAAAAAANcyTA/U/am6kbe/eTSqVauWixYcxkS3bt1644035Ov58uVT
LdSrV09WoFU6duyY4RLHsMKDmKhBgwbqFOg3jmk3b97U6wWJV199VTbJBKS2
bduavhIWFiY1TY9WXb16dfz48TqxEf7+/t98843pSbQrV64MHz5cFtYW6mrs
06dPUlKSaV/O+mDSv39/aWfRokVWRkP57bffjJNqbOkvHVu3bp19TR0TnThx
wkrLkZGRzZs3N7bs5+f32muv7d+/376yOmqp07Rp08x3Veexane6MDY2Vp7L
E2XKlBk2bFhaWppM67KfYLZjxw6Zw6NPzc6dO1X5jz/+KCWqP5710EULrVq1
sjmKiSRGmzx5srPBAQAAAABkKMP0QN3RGycAOKTu+1y00KtXL1v6CjOm8tTU
1EmTJj300EPGpkqWLDlz5kxZvwiZ50FMJFNK7GMice7cudDQ0LVr1549ezaT
fUtLSzt27NjKlSs3bdqkn19zVvPgwYPLly/fvXv3zZs3M7NTuRoLFixoXO/I
iosXL6oBVAduel985l26dGnr1q3q6KKiorLkyrfSVTWM4eHhISEhpolJt27d
io6OVuV79uyxEtWqdvbv379s2TK3Tk12DKZkidOnT8+qBgEAAADgHuTWm86y
g7q1PHTo0C+//KLuGWNiYuzfgoTM8CAmatOmjbrd7ty5c7Z2zCuOHj0qy+P0
7t3b231BVkpJSZGcOcNlyQEAAAAALng9JkK28iAmkoebSpQocfLkyWztWw67
detWx44dJUzYs2ePt7uDrDRv3jw5s6Ghod7uCwAAAADcxYiJfJsHMdHSpUv1
OjmVKlU6dOhQtvYwB0ybNm3ixIl6FaA+ffp4u0fIMrNmzdLrI5UoUeLq1ave
7hEAAAAA3MWIiXybBzFRWlqafme9EhERka09zG4XL140vlCsadOmycnJ3u4U
sszQoUPlzObJk+err77ydncAAAAA4O5GTOTbPIiJRFhY2MyZMydPnpzlKzbn
sOPHj3fo0KFGjRqdOnVSR5SamurtHiErhYeHT5ky5dtvvz18+LC3+wIAAAAA
dz1iIt/mcUwEAAAAAADuNaQHvo2YCAAAAAAAWER64NuIiQAAAAAAgEWkB76N
mAgAAAAAAFhEeuDbiIkAAAAAAIBFpAe+jZgIAAAAAABYRHrg24iJAAAAAACA
RaQHvs0UEwEAAAAAAOBeRkwEAAAAAACA/+WhMwAAAAAAYAHpgW8jJgIAAAAA
ABaRHvg2YiIAAAAAAGAR6YFvIyYCAAAAAAAWkR74NmIiAAAAAABgEemBbyMm
AgAAAAAAFpEe+DZiIgAAAAAAYBHpgW8jJgIAAAAAABaRHvg2YiIAAAAAAGAR
6YFvIyYCAAAAAAAWkR74NmIiAAAAAABgEemBbyMmAgAAAAAAFpEe+DZiIgAA
AAAAYBHpgW8jJgIAAAAAABaRHvg2YiIAAAAAAGAR6YFvIyYCAAAAAAAWkR74
NmIiAAAAAABgEemBb8uZmGjr1q2hoaE7duzIpvbvLsePHw8MDHzvvfdGjBix
ePHi1NRUb/fIy7g8AAAAAOBuQUzk2zyOiRITEyMjI9UN/rVr1zKsXKlSJZvN
1rx5c0+76TuCg4MLFixou6NAgQIpKSne7pSXmS6P2NhYdV1FRUXdvHnTux0D
AAAAAJgQE/k2z2KiYcOG+fn5SdARERGRYX1iIpGcnFyqVCkZtypVqjRq1Khr
167e7pT3mS6PoUOHyhA9+uijVq4uAAAAAECOsZIe7N27d5dLMTExpq9cvnx5
9erVU6ZMmTBhwpo1a86dO5dN/YdrHsREv/76q80gMjJSyqdOndq6desxY8bY
f4WYSKxatUoGrVevXmlpaV7pg/pda50uOjraKx2wZ7o8RowYoa+uypUre2ug
AAAAAAD2rKQHxYoVs7lUrlw5Y/2FCxeWLVvWWKFgwYIrVqzIxsOAEx7ERP36
9VOnLG/evCEhIQkJCbdu3ZLyrl27qnKH02OIiURgYKBc8MHBwd7qw759+6QP
6oO3+mBiujxu3LgRExMzcOBA6Wd4eLh3uwcAAAAA0LIkJnrsscd05dDQ0Ny5
c6vCwoUL9+zZ84033ihdurT6URUGBQVl78HAjgcxUZs2bdT5atWqlam8ZcuW
xESuff755/IbcejQIW/1YdOmTX/zmEhcuXIlV65cqnz+/Pne6hgAAAAAwMRK
enDy5Mk/HXn77bflhnTt2rW6cu3atVXJgw8+qCpIyfnz5+vWrasKa9WqlX0H
Aoc8iIkCAgLUyerWrZupvGbNmq5johYtWuiSqKioyMjIK1euuN5XbGzspk2b
zpw5k2Gvzp49GxYWFh0drWc3uXb48GFVPwufdrx58+aePXu2bduWnJzsrI6O
iY4cOeJu+0lJSZs3b9a/Nc5cv359586dERERzsY2ODg4m2IiZ0OaYZecpYiy
1vf06dOztp8AAAAAAI95vIS1umG///771V1enz59dKG6g86TJ48qHD9+vLHy
+vXrVWGuXLlOnz6dyQ7DLR7ERA0aNFAn680339QltWrVKleunEwS8/PzK3bH
0qVLpYLkAM8880xiYmLfvn31I4fqK+++++6NGzdMu7h169aMGTNUm3pCWoUK
FRYsWGDfGVUzMDCwfPnyumaRIkUGDx6sdmSq2bBhQ9WluXPnxsfHN2nSRCqX
KlWqe/fuqlx9SEhIsG+/WbNmamtAQICLAYmJiWnXrl2BAgWkTXUZ16tXLzQ0
1FhH/Vi1alX9jjPVSRkiZ++JW7Zsmdr66KOPqs8rVqxQHc6bN698t2LFivYL
O6vjHTNmTJ06dfTS4mps27Zte+rUKV1nzpw5VapUUbs29UGdUKmgWpASU9Sj
TpCUDxo0yMqQWu+ScBYTFS5cWJVPmTLF+dgDAAAAAHKUxzHRc889p27x1P37
pUuXdKG6nZQbxpkzZxornzhxQso3bNiQyQ7DLR7ERA0bNlRnqn///rpEAiJ7
ixYtkgqSA1SsWLFy5cr21YYMGWJsPyUl5fnnn9dbdfyijBo1yljz6tWrzz77
rMNdqz2aIkfpw8iRIyXmEmpHQUFB8nn27NmmI42OjpZNI0aMcDYay5YtkzTD
3uTJk3U1PYfHxFlMNH/+fKkwdOhQefbKqGDBgufPn9eV161b5+zBT/ULqEZJ
qo0dO9ZhnerVq0uF999/X0pM07du3Lgh5X379rUypNa7ZGzHWUxkipQBAAAA
AF7kWUy0YsUKuSVcvny5aZO/v78tfWUb4wuM9E10hs/UIGt5EBPVqVNHnSnj
xJINGzasX79eprvUrl17/R36ISPJAUT79u3V6T569Oj06dPlKw888IDxcaRR
o0ZJzRdffFGuB1W5adOmtvR1s48fP65rDhs2TAcdaneJiYnbtm1r27atFNav
X994jRn7EBAQsHbt2s2bN+/cuVPtWnVAFTZq1Mh0pFOnTpX6+/fvdzgUp0+f
Llq0qC19BtEnn3xy7Nix+Pj42bNn33fffVIYEhIiNc+cOaN6+M9//lMa/Prr
r9WPW7dudTbIOiZS1C4mTJiguhoZGakDmc8++0xXjouLK1iwYOHChUeOHLll
y5akpKSoqKgWLVpIzS+//FKqRUdHG/swY8YMOU366TPPYiL7IbXeJWM79jFR
8eLFVfnw4cOdjRIAAAAAIId5FhO1atXKlv4ya/uFYtTdtNwq9urVS908qpLU
1NSnn35alTRt2jRL+gzrPIiJZJbIpEmTTOX58uWzuVybSFFn33hJdO/eXcp3
794tJUePHs2fP78qadeunbGFS5cuSSDz1ltvScnBgwflaSZ/f3/j82I3btyQ
RbYVndIY+9CkSZOUlBRj43oRLbV3Y3njxo1VYc2aNZ0NRc+ePXXkYixXIynl
devWNZZbX5tIx0Tql8i43rX6okwu6ty5s7F+aGjo2bNnjSUXLlyQiVitW7d2
2Af7tYk8jonsh9StLjmLiWrUqKHKX3nlldsAAAAAgL8HD2Ki/fv3y83jF198
Yb81NTVV38WXLVt28uTJvXv3Vp+LFy8eFRWVNZ2GZe7GRGFhYfYJjMgwJmrS
pImp/Pvvv5fWVq9eLSWTJk1ymNjcvhPm6EYmTpwoNefMmWOqGRERIZvkAShj
H3Lnzm1/me3Zs0fqjxw5UhfGxcVJIPP55587HIq0tDRZfatixYo3b940bW3X
rp20+ccff+hCD2Ki9evXmzZVqFDBlj5XynULSvPmzVXNKlWqGAuzPCZyOKRu
dclZTPSPf/xD/kpcvnzZYvsAAAAAgGzlQUz01ltvqZs7dQd98eJFhxXUPbJe
1VbbuHFjFnQXbrIeEyUlJa1atUoyilKlSl2/ft1UIcOYyD4HWL16tZx9vTy1
zM8pUaLEMTsffvih2lSmTBmp2aNHD/mu/WrVt+9kKf7+/qY+NG7c2OHRyYJL
jzzyiJ7sFBgYKO3HxMQ4/IrqklQYOHCg/VadgM2bN08XehAT2f9e1K9fX5XL
6tYmN27c+P333ydPnty5c+fHH39cnukrXLiwsU6Wx0TOhtR6l5xdHuHh4ZLU
vfDCC2FhYcZHCAEAAAAAXuFuTKTustU9vrqze+mllxxWULd+pUuXtqU/VfTc
c8/p5XmrVq168uTJrOk0LLMeE82cOVPOlDp927Zts6/gQUy0bt06U0xUr149
m0tqL1Kzbt266sdixYo57K0sg5M3b97U1FTXfRA61QkLC5MSeXDSfsEiLSQk
RL5iWmlH6OfOxowZowuzJCaSR+FMMVFycvKkSZMefPBB+xErWLCgsWaWx0TO
htR6l1y0M23aNB0px8bGOtwRAAAAACDHuBsTRUVFyT2dw9dY79+/X8KEXr16
yf37gQMHOnbsqJMi0/0pspsHMVGzZs1MLxETWRIT1a5dW0o6OPH6668baxYt
WtRhb2W1Kz8/P/04mOtMQy9k3bt3b/XjuXPn8uTJY7N7JZ/RsmXLpKumhYnE
li1bciwmunTpUs2aNaV+2bJlhw4dumbNmvj4+JdfftlbMZFbXXLRTmhoqKxJ
RUwEAAAAAH8H7sZE3377rdzT6VkZRl27dlWbSpYsqed4iJEjR8q3Jk6cmMkO
wy3WY6JDhw4NGDBA3eDLHb394uRZEhO1b99e/VikSBH79k2kpuJw4RrZY40a
NTLsg/bOO+9I7nT9+vV58+apz3ny5HEYiInIyEjpwIcffmi/Vec8S5Ys0YXZ
FBPJGj7K0KFDjaskeRwTxcXFGcs9iInc6pKzdqKiouSdcdWqVZswYcLVq1ft
dwQAAAAAyEnuxkSytkzu3Lkd3ryXKVNGbX3zzTftNz3yyCNqU5s2bTzuKjzg
7hLW3333ndz+h4eHmzbJG8qMq0Zr1mOiwYMHu4gZjQYNGmT6rrZv3z55mNH4
kqwMYyK9kHVISIikGa6vxoSEBJlxVL16dftlc6QF5cCBA7owm2Kihx56yOZo
jSCHmcyECROkZePa2kKntfrFcyIxMdHdmMitLjlrZ8CAAaq8UKFCzpaHAgAA
AADkMHdjoieffNKW/hZvh1uLFCmitn700Uf2m2RyiF6gGDnD3ZgoJSVFViEe
N26caVPZsmVt6SsX2X/LekykX5NXs2ZN+1Wyjfbt2yc1H3/88StXrujyW7du
vfjii7Lphx9+yLAPRgEBAbb0ZbXkQg0KCnJRWVE1ZUdz5841lu/YsSN37twy
DcY4cS47YqK0tDSZcqN+9YzVTpw4ofZun8no+X5ff/21qeXZs2fLplmzZunC
pKSkpk2buhUTudslZ+3IftVfBrvhAQAAAAB4h7sxkcwXUrfbDre2bt1abX3s
scdSUlKM5ZcvX5Z1rZ955pnM9BbucjcmUqpWrWqfGChNmjSRMOHLL7+8cuXK
yZMnz507J5usx0S3DdlL7dq1f//9d4lZ4uLiRo8erVowpi5dunSRmk899dSO
HTvUpiNHjuhpPC1btjTuy0pMpBeytqWvle3sVX3a9u3b5VG7vHnzTp8+/fz5
88nJyUuWLJFljuxDnmyaTdSsWTOpvHjx4uvXryckJKgDKVasmBSaMpn169dL
eYMGDXbt2qXq69fZR0REyCb1WxwaGqpO388//ywvVnMrJnK3S7JueeXKlU2T
smSG4ccff+x6rAAAAAAAOcatmEjd5cljOC+88ILDCjNmzJD7xA4dOugFaU+f
Pq1+lPLAwMAs6TYs8iAmqlOnjjpTPXr0MJUHBQXpPEFmHI0ePVo2uRUTJScn
y+vpRYECBfQixqaaly9fltlrQq494e/vb4pirMREeiFrpVOnTlZG44cfftBv
67OlP24pH1Th8OHDTZWzKSbSv1YyXNIH9a8EeqZMJjU1VQ2O8Uzlz59fx7aN
GjWy2enSpYu8V856TORWl/Tzg+pEG2NAiY7Hjh3reqwAAAAAADnGrZjo1KlT
crvncPWh2+kPBL3xxhtSJ1++fLVq1apXr548n6J07Ngxw4WLkbU8iIkaNGig
TpZ+45h28+ZNfb8vXn31Vdkk4UDbtm1NXwkLC7MPf5SrV6+OHz9eJzY6+fnm
m29MT6JduXJl+PDhsrC2DiX69OmTlJRk2pezPpj0799f2lm0aJGV0VB+++03
45QbW/o7+9atW2dfU8dEJ06ccN3mjz/+KDVV46ZNrVq1MsVEt9NfHK8Tqjx5
8gQEBKgvLl682D6TuZ3+TJxM1NEjtnPnTtkUGxsrT96JMmXKDBs2LC0tTSZu
mWIi10NqvUvh4eGqD1Lz0KFDulziwcmTJ7seKwAAAABAjnErJjpy5Ijc67l4
TiQ1NXXSpEmywq1WsmTJmTNn3rhxI2s6Dcs8iIlkwol9TCTOnTsXGhq6du3a
s2fPZrJvaWlpx44dW7ly5aZNm/Tza85qHjx4cPny5bt37za+V8sDvXr1khzD
uN6RFRcvXlQDqA7c9Db5HJOYmKgG6tdff7106VKGldUo7d+/f9myZfYjduvW
rejo6JCQkD179mQytrXepdjY2BUrVoSHh1+7dk0XSvo3ffr0zPQBAAAAAJCF
3F2byCJ1Z3ro0KFffvlF3VbHxMTYvygKOcODmKhNmzbq5r1z587Z2jGvOHr0
qKw11Lt3b2/35V6XkpIiGXKGC4kDAAAAAHJMNsVE+JvwICbq06ePunkvUaLE
yZMns7VvOezWrVsdO3aUaGLPnj3e7s69bt68eXIuQkNDvd0XAAAAAMD/Q0zk
2zyIiZYuXSr3735+fpUqVTIuJnOXmjZt2sSJE5s3by7H1adPH2/36J42a9Ys
vXRSiRIlrl696u0eAQAAAAD+H2Ii3+ZBTJSWlqbfWa9ERERkaw+z28WLF/VK
y0rTpk2Tk5O93al72tChQ/XC11999ZW3uwMAAAAA+P8RE/k2D2IiERYWNnPm
zMmTJ3trxeascvz48Q4dOtSoUaNTp07qiIwvZIdXhIeHT5ky5dtvvz18+LC3
+wIAAAAA+C/ERL7N45gIAAAAAADca0gPfBsxEQAAAAAAsIj0wLcREwEAAAAA
AItID3wbMREAAAAAALCI9MC3ERMBAAAAAACLSA98GzERAAAAAACwiPTAtxET
AQAAAAAAi0gPfBsxEQAAAAAAsIj0wLeZYiIAAAAAAADcy4iJAAAAAAAA8L88
dAYAAAAAACwgPfBtxEQAAAAAAMAi0gPfRkwEAAAAAAAsIj3wbcREAAAAAADA
ItID30ZMBAAAAAAALCI98G3ERAAAAAAAwCLSA99GTAQAAAAAACwiPfBtxEQA
AAAAAMAi0gPfRkwEAAAAAAAsIj3wbcREAAAAAADAItID30ZMBAAAAAAALCI9
8G3ERAAAAAAAwCLSA99GTAQAAAAAACwiPfBtxEQAAAAAAMAi0gPfRkwEAAAA
AAAsIj3wbcREAAAAAADAItID35YzMdHWrVtDQ0N37NiRTe3fXY4fPx4YGPje
e++NGDFi8eLFqamp7rbAeAIAAAAAvIKYyLd5HBMlJiZGRkZu3br12rVrGVau
VKmSzWZr3ry5p930HcHBwQULFrTdUaBAgZSUFHcbyfLxjI2NVacyKirq5s2b
WdUmAAAAAMD3EBP5Ns9iomHDhvn5+UnQERERkWF9YiKRnJxcqlQpGbcqVao0
atSoa9euHrST5eM5dOhQ6dWjjz5q5YQCAAAAAO5NbqUHf/3115IlS8aMGfOf
//znyJEjt27dcl0/Pj5+165d6t/M9hKe8iAm+vXXX20GkZGRUj516tTWrVur
s2//FWIisWrVKhm0Xr16paWlua6ck+M5YsQIfUIrV66cYd8AAAAAAPcmi+nB
zp07a9eubftv5cuXV+X2lS9fvrxmzZoePXrkzZtXVWvZsmXW9xvWeBAT9evX
T501de5CQkISEhJ0GNi1a1dV7nB6DDGRCAwMlF+N4ODgDCvn5HjeuHEjJiZm
4MCB0r3w8PCsahkAAAAA4EuspAfq5jdfvnxyg/nAAw80a9asXLly8mOhQoV+
++03Y+X4+HhJhzRVPxsPAC55EBO1adNGnbVWrVqZylu2bElM5Nrnn38u1/yh
Q4cyrJzz43nlypVcuXKplufPn5+1LQMAAAAAfIOV9GDu3Lnq1vLhhx9et26d
PK6Smpo6cuRI/XyNsXJcXFzRO3Lnzk1M5F0exEQBAQHqrHXr1s1UXrNmTdex
RosWLXRJVFRUZGTklStXXO8rNjZ206ZNZ86cybBXZ8+eDQsLi46OzvBRR3H4
8GFV/9y5c1YqW3Hz5s09e/Zs27YtOTnZWR0dEx05ciTDBr0ynrK89vTp0zPs
HgAAAADgHmQxPfjxxx/Pnz9vLFF3648++qi65SxXrpyzb1WuXJmYyLs8iIka
NGigztqbb76pS2rVqqXOsoR+fn5+xe5YunSpVJBY45lnnklMTOzbt2/ZsmUl
LVFfeffdd2/cuGHahbp4ZsyYoeekKRUqVFiwYIF9Z1TNwMDA8uXL65pFihQZ
PHiw2pGpZsOGDVWX5s6dGx8f36RJE6lcqlSp7t27q3L1ISEhwb59dXGqrQEB
AS4GJCYmpl27dgUKFJA2c+XKVa9evdDQUGMd9WPVqlX1O85UJ2WIHL4nzovj
WbhwYbV1ypQpLo4XAAAAAHDPysybzuTppHz58qWmpjqsQEzkdR7ERA0bNlRn
rX///rpEAg17ixYtkgoSa1SsWFHOuMmQIUOM7aekpDz//PN6q45flFGjRhlr
Xr169dlnn3W4a7XH06dPGytLH0aOHCkxl1A7CgoKks+zZ882HWl0dLRsGjFi
hLPRWLZsmUQr9iZPnqyrBQcHO6zjMCby1njevhMTjR8/3tnxAgAAAADuZR7H
RImJiSVLllS3nPXq1XNWh5jI6zyIierUqaPO2qBBg3TJhg0b1q9fL0tO1a5d
e/0d+hkoiTVE+/btg4ODjx49On36dPnKAw88YHxaatSoUVLzxRdf/PPPP1WJ
qty0aVNb+rrZx48f1zWHDRsmNatXr652py65bdu2tW3bVgrr169vfGOXsQ8B
AQFr167dvHnzzp071a5VB1Rho0aNTEc6depUqb9//36HQ3H69OmiRYva0mcQ
ffLJJ8eOHYuPj589e/Z9990nhSEhIVLzzJkzqof//Oc/pcGvv/5a/bh161aH
zXprPJXixYur8uHDhzvsGAAAAADgHudZTBQTE6Pv1r/77jtn1YiJvM6DmKhY
sWLqrE2aNMlULsuYu1hLR/nkk0+Mawd1795dynfv3i0lR48ezZ8/vypp166d
sYVLly5JIPPWW29JycGDB/38/FSJv7+/8XmxGzduyDQ2Rac0xj40adIkJSXF
2Pjbb78tm9TejeWNGzdWhTVr1nQ2FD179pQvzpgxw1iuRlLK69atayx3a22i
HB5PUaNGDVX4yiuvZNg9AAAAAMA9yK2YaO7cuW+++WarVq3y5MmjbjbVvx9+
+KGL+sREXuduTBQWFmafwIgMY40mTZqYyr///ntpbfXq1VIyadIkh4nN7Tth
jm5k4sSJUnPOnDmmmhEREbLp+eefN/Uhd+7cUVFRpvp79uyR+iNHjtSFcXFx
8tqvzz//3OFQpKWl3X///bb0h79u3rxp2tquXTtp848//tCFWRsTZe14in/8
4x+qsGzZspcvX86whwAAAACAe41bMVH79u1tBsOHD79+/bqL+sREXmc9JkpK
Slq1alWFChVs6Ss/25/ZDGMN+xe4r169Wi4VvZyyzM8pUaLEMTsffvih2lSm
TBmp2aNHD/mu/WrVivTT39/f1IfGjRs7PDpZcOmRRx7Rk3MCAwOl/ZiYGIdf
UV2SCgMHDrTfqhObefPm6cKsjYmydjxFeHi4hGMvvPBCWFiY8ak9AAAAAADc
ionmzJnz3HPP1alTR54GUp544gkXb98mJvI66zHRzJkz5ZyWLl1627Zt9hU8
iDXWrVtnijXq1atnc0ntRWrWrVtX/VisWDGHvW3RooUtfe0dvXy6sz4IneqE
hYVJSatWrWyOFizSQkJC5Ctffvml/Vb93NmYMWN0YXbHRJkZT23atGn69zc2
NjbDfgIAAAAA7h2erU10+vTpUaNGybSExx577OrVqw6rERN5nQcxkTpfppeI
iSyJNWrXri0lHZx4/fXXjTWLFi3qsLdPP/20Lf1t8vpxMNcxkV7Iunfv3urH
c+fOyYOT6qidDciyZcukq6aFicSWLVv+DjGR9fHUQkNDZdkiYiIAAAAAgInH
bzpT1A2y3GyuXbvWYQViIq+zHhMdOnRowIABBQsWlIDCuHKyyJJYQ55bLFKk
iH37JvoJR4er6Mgea9SokWEftHfeeUdyp+vXr8+bN8+WvriWw0BMREZGSgcc
LsA1f/582bpkyRJdmPMxkfXxFFFRUfKatmrVqk2YMMFZwAsAAAAAuDdlJiY6
fvy43LR+9NFHDisQE3mdu0tYf/fdd3JOw8PDTZvkjVrGVaM167HG4MGDpUQ/
/OXMoEGDTN/V9u3bJzPZjG/syjAm0gtZh4SEvPzyy+pDmzZtXHQgISFBZhxV
r17dfg0faUE5cOCALnQrJsrh8RQDBgxQlQsVKuRsRSYAAAAAwL3MSnrgbKKC
XuPX9NJtjZjI69yNiVJSUvLmzavO2rhx40ybypYta0tfucj+W9Zjjf3790tJ
zZo1Xa9/vm/fPqn5+OOPX7lyRZerq/HFF1+UTT/88EOGfTAKCAhQdV566aUi
RYqoD0FBQS4qK6qm7Gju3LnG8h07duTOnVvm5OjFkW67GRPl8HiKpk2bqsrt
27fPsCYAAAAA4B5kJT145ZVXunTpkpSUZCofMWKE3KJ+//33Dr9ITOR17sZE
StWqVdVZ69u3r6m8SZMmcrq//PLLK1eunDx58ty5c7LJeqxx25C91K5d+/ff
f5eYJS4ubvTo0aoFY+qirjqp+dRTT+3YsUNtOnLkiJ7G07JlS+O+rMREeiFr
W/razhcvXnQ9FNu3b5dHw/LmzTt9+vTz588nJycvWbJEljlSNm7caKzvVkyU
8+OpPPLII6rmxx9/nGH3AAAAAAD3oAzTg6VLl8pNaLVq1b755puoqKhbt26d
OXNm2LBhMqGiSJEixoVwt23b9tsd5cqVUxUqV66sSy5dupTthwQDD2KiOnXq
qLPWo0cPU3lQUJDOWGTG0ejRo2WTW7FGcnKyvJ5eFChQQK+obKp5+fLlJ598
Um+SR8CEv7+/KYqxEhPphayVTp06WRmNH374QR5wE3LNK6pw+PDhpspuxUQ5
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
LrNQEhISOnToIP/BPHny5Ow4BLjgQUwUEBCgTla3bt1M5TVr1nQdE7Vo0UKX
REVFRUZGXrlyxfW+YmNj1f2UlWdMzp49GxYWFh0drWc3uXb48GFVPwuXYL15
8+aePXu2bduWnJzsrI6OiY4cOeJu+3/99deWLVsSExMz103HLJ4ONbbHjh3b
vHnzxYsX7be6uAA8durUKXUB/Pnnn84qWNypxQtJnTv1p+no0aNyFUki6nFM
FBwcnGFMpH/pkpKS1MC6OFJx7do1daZ27dqlrjfXNa1ckEaqA7/99pvqaoYt
W2flt1Jiotdffz2rduriYvb4D5H1Yb9t7W+Li2vD6Pr16zt37oyIiMiwh8Li
VSQ1t27dqg7fxdOvGR71lClT1CE88MADVvoGAAAAn+HB2kTyTJnD2UTqv0s7
dOhg+u/n8+fPS3zk8CvIVh7ERA0aNFAn680339QltWrVKleunMSDfn5+xe5Y
unSpVJC7s2eeeSYxMbFv375ly5aVWyT1lXfffdd+BVR1UzljxgzVpp6cVqFC
hQULFth3RtUMDAyUZx+EupYGDx5sH6c0bNhQdWnu3Lnx8fFNmjSRyqVKlere
vbsqVx8cvppcXZNqa0BAgIsBiYmJadeunZ4mlytXrnr16oWGhhrrqB+rVq2q
33GmOilD5Ow9cYsWLVJbq1Spom7QJkyYIAMojdeoUUP9HhkrX758+cEHH1T1
P/jgA1M748aNkx2dPn3aNBTff/+9xdOhnDlzRt3Iy++pdKN69erLli2Tra4v
gDFjxsiPpl98tSMpHzRokGl36i67Y8eOZcqU0adVVQsKCjLWyfCqu+3OhbRn
zx51lvPkySPVihYt+tlnnz3//POexURz5sxR504Plz7d6ndHKuiYSJ3KFStW
NG7cWM/GdLaGc3R0dNu2bSVUsaW/I69z584OswgrF+Tt9IehVJcee+wx9fmr
r77SEztHjBghvf3kk0/sG1+1apVsXb58ubPDt/hb2aVLF31q1HFJs59++qmz
ZuW6VSfFvtDixezuH6Lb1obd2d8Wh93O8Nq4nf4eSfVbU6dOHf2mANVD1Y1T
p04Z9ytn8NFHH1Wf1VWkdp3hVaT89NNP1apV04sLFS5cuGfPnhcuXHD3qJVp
06aprerPmsMdAQAAwFdlbUzkjDw58vDDD7vXOWSaBzGRuutRJ6t///66RG7V
7S1atEgqyN2ZunOxX5ZKGTJkiLH9lJQUuT3Xdyj686hRo4w1r169+uyzzzrc
tdqjMRjRfRg5cqTEXELtKCgoSD7Pnj3bdKTqXkk2/X/svXl8FMX2/j8sERTZ
ZLmgFxTZIsguGDZBBBFFBQTFiyIICuKOqCCGTZCERRAjIlxUrnjZZAsgS4hf
9pBAAkFiwr4TJWQhCQFCwvzOb86HetXtnump7sxkwvC8/+AVqmuqT1edrqnz
TPcpCpxd9QZFahRnObVBfjpOPDygwZVMJGQEChX1nypVqpSQaIj09HQuf+ut
tzTtfPbZZ3xITinPXdG7d28KMPWNa4aDiIiI4AQyehYtWmR35wDvv/8+/1fz
MA9F5VxOAbtcLh4v1PPNN9+Iam69Tt2R6CruvPNOVye1IBNNmDDBaVOBgYFc
QYwvBeNyNmCG4u6LFy/KDa5Zs0YICyVLlhRyVo0aNTRZ3RQdUthwxx13LFu2
TLYhOjr6gQceoD/uvfde/aMmr732Gh2i7srMzHR67ep3JT8JpmHkyJGuetXp
K2OmnNnURKTe7a7mFqdmu/WNTZs2VaxY0WkdOi91r2YEudNUvIjuuD59+jht
uX79+mav2n5TJqI6roYMAAAAAAD4JYUjEzVr1ow+0rBhQ3PGgQJjQSZi4UJ+
AmTz5s0RERH8Q3aTJk0ibiJelBAPwxBPP/308uXLjxw5MmPGDP5I+fLl5Vcq
KITnmj179uS3J6hyu3btOB45duyYqDlq1CgRYdHpMjIydu/eTXE3F7Zs2VIO
cmUbgoKCNmzYsG3btri4ODo1GUCFrVu31lzptGnTuP7BgweddgXFvBUqVLA5
Htj4/PPPjx49ev78+Tlz5rDmQIXh4eFc8++//yYLX3/9dW5w9uzZ9F/NQ0Ey
IgAkKGZfsGDBmTNnyNoBAwZwIYW64k0QazKR4nCkpqZWrVqVK7/88st79uy5
dOlSZGRkixYtyBOuXLni1gHMykTkWjyBLF68mIY7LS1t3rx5/GBD9erVhbDm
1usUHSk5OVnoKkOHDj1w4MC5c+eWLl1aq1YtLrQgEx0/flwe7pkzZ7Jt4g0j
eXzJhSZPnkyDGxMTI3SGSZMmidZSUlLuueceKqR/Fy1aRD2Qk5NDblaqVCkq
pLOImuoOKdsQEBBQunTpiRMn0uCuWrWK/Ir+5kMbN27UDBkrGL1793Z17ep3
ZVRUlBhBKucu0qi7MgYykaIzm6qs3u2u5hanZrv1DXK/MmXKkE8GBwdv3749
MzMzISGhQ4cOXP/rr7/Wj6CKFxFiWCtXrrxw4ULqajJmwoQJdHOx3mvqqolZ
s2Zxg04fxAIAAAAAAP5KIchEFEfwgwGaJSgoBCzIRBwnhoaGaso5kDfITURQ
6CpnKenXrx+X79+/n0soauN4pFu3bnILly5d4vhXKCGJiYn8RgaF8/L7YhSw
cEoZQg6KhQ1t27ZlcUMwbNgwPkRnl8vbtGljM9yD6dVXXxWxnlxOPcnlzZs3
l8vVcxOJALBXr16aV3XE8wA///wzl1iWidwOBzFo0CAuHD58uNzy9evXNRmK
XDmAWZmIrnf9+vWaRj7++GOuTAG4yknVHWngwIHcMvWVXDM7O/vhhx+2FSA3
kRhug9xENFvK+czJMfixkB49eohCHgKaJDW6Ij+XUqJECTG4phxS2EBnXL16
tVxfbElALiGXb9q0iT/iaqs+s3el3UxuImOZSMWZLXi+SrcbzC2uzDbwDbvj
HdULFy7IJampqfw4XKdOnUShKS+iQm7hnnvu0SQvks+lftXEsmXL2IA///xT
fxUAAAAAAMBfKQSZiNNgEgsWLDBtHygYZmWirVu3Oo317AoyEcVQmvIffviB
W1u3bh2XhIaGcolGsbHfFHNEIyEhIVxz7ty5mprR0dF8SE5jwjZQ+JOQkKCp
Hx8fz/WDg4NF4blz5zjUooDOaVfk5+ffddddtv99sEfQrVs3bnPPnj2i0IJM
pN8Ji8I3PjRkyBAusSYTqQwHhdKcsqZq1apuMyF7SiZyCvUDV164cKHKSRUd
Sb5AfZbgAu50piITRUREaA7VrFnT5ni6hv9LFnJKK41iY3dE93IjZh1S2OB0
l7GePXvSIWpQfrmMXM7mSKfj6mVJs3el3UMykYozm6qs3u12w7nFldnGMpFT
qAWbYwMIUaLuRXbpe9ZgqwhTV213ZMHiwmnTpileBQAAAAAA8AO8LRMdP36c
Q5vAwEAP7rADFFGXiShaXLt2LUcfFFNfu3ZNU8GtTKTfh5qCMo4yRFZhfhyi
UqVKR3WMGDGCDlWrVo1rvvLKK/xZp5t/sZ21atXS2NCmTRunV8cJlx544AHx
jEFYWBi3T6GQ04+QSVzhgw8+0B8VgacsfnpEJsrPz+cnPZ566ikusSYTqQyH
yM6kb1mPx2UisnnJkiXvvPMOxfVVqlThytOnT1c5qaIjnTp1ipt944039AYU
gkykH18K7amc8xITx44d45rjx4/XXws/usNptcw6pLBh06ZN+vrr16/noz/+
+COXkONRV1DJa6+95uqSzd6Vdg/JRCrObKqyerfb3c0tlmUiukGioqKmTJnS
o0ePBg0a8F1ftmxZUUHdi4j+/fs7vQ1lTF018+STT9occuK8efM0GbYBAAAA
AIC/4lWZiOIO8SaC/jUTUAioy0QiDQWFirt379ZXsCATiXdYRHTWokULmyF0
Fq7ZvHlzm2MDLKfWcioPCqzy8vKMbWBEEL1161YuYYlAn7BIEB4ezh+Rs4UI
xGs+48aNE4UekYkI3gJM5PLylEykH441a9ZwyYwZM4wNtntUJoqOjn766aed
OsDUqVNVTqroSBs3buT/hoSE6K/IJzIRv+ooAnwxBAbwA29mHdLYx2hy5kTW
1AlcIp4k1CQskjF7V9q9JhPpndlUZfVuN2jW4KixTJSdnR0aGiqkURl5WzF1
L7LfvCOMN683ddXM2bNnmzRpwocGDRpk0DgAAAAAAPAbvCoTvffee7y8fPXV
Vy3aBwqGBZmIRtZpmlmPyEQi4ujuAhFOcs0KFSo4tfaJJ56wOXLzikfUjEM5
kciaI52UlBTe34eu2lWHrFy5kk3V5IFhtm/fzke9IRPxe1JBQUH8X+/JROIa
w8LCjA22e04mEpJd8eLFu3btSv/dt29fXFwcFyrKRIqO9Ntvv3E1p2/NFAWZ
SAxB3bp1XV0LRfd28w5p7GP2mxmPixUrxvtb8ThWqVJFFnk0mL0r7UVVJlLv
doNmDY4a+MalS5fEHnDVq1cfOXLk+vXr6f7lpGSWZSIemsqVKzs10sJVM1ev
XuXN72yQiQAAAAAAbhu8JxN99dVXvLZ85JFH9Gk/QeGgLhMlJSW99957nLmC
Qh45ASzjEZmInyEpV66cvn0N4mmTrKwsV2eU984zDuWIt99+myPca9euLViw
wObI12qw71JMTAwbMGLECP1REcEtW7ZMFHpEJhJJQsS7P0Im0r85VUCZSFyj
0/eYNLiVic6dOyeXO5WJqGf45ZqaNWvKmV7ob66sKBMpOtKBAwcMBrEoyERi
CNymfzHrkG5lIpHImrPZ8NZvdJsY2GD2rrQXVZlIvdsNmjU4auAbQnUZOXKk
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
CoQFmWjIkCE0uCVLlgwPD09LS7tx4waXc0Tp9PEYyERMWFgY3xrLly/3tS2F
RwFH/48//uBOoz80hyATCSpXrkz90KhRI7c1TQ1HcnLy2LFjp06dajmzUCGP
0cqVKz/88ENvPwGr6cPc3NwTJ0588MEHfKU7duzw6tkBAAAAAADwLYrqQWRk
ZPHixWmFXLZs2VdffbV///7/+Mc/6L9UOH/+fO+bCSxiQSbq3Lkzjezjjz+u
Ke/YsSNkImO+/PJLDiSTkpJ8bUvhUcDR37JlC2Qit9xxxx3UD3379nVbs5Bv
Rr8cI6d9ePny5WLFilE5XbKvDAMAAAAAAKAQUFQPmjRpQsvjKlWqiEynFy9e
bN68ORU2btzYuyaCAmBBJgoKCnKaq6RRo0bGMlGHDh1ESUJCQkxMDAVWxuc6
c+bMli1bVN4fuXDhwtatW48fPy6ebjLm0KFDVN+D70Vev349Pj5+9+7d2dnZ
ruoImejw4cMqbdK10A1F47J3717jTNfqHeVxrl27FhcXFx0d7Wo0C6hLLF++
3K1MJFw3MzNz27ZtbvMtX716ldxv3759bnMOqwyrDBmwc+dOMtWD2YxVfJtl
on/9619uW9PcjNQVUVFRSUlJijeOBrf941YmMtXDGRkZuxzQ94sFa+2OAeJ0
0wavhll2ac5OP2PGDGu2AQAAAAAAcEugoh7Q8r5EiRK0PJ44caJcHhERweky
/vrrLy+aCAqABZmoVatWNKwDBw4UJY0bN77vvvv4cbKAgICKN1mxYgVX4Kjq
ySefpCjvzTffFC8n0kfeeeed3NxczSkoYp05cya1KV5grFmz5n//+1+9MVQz
LCysRo0aoma5cuWGDx9OJ9LUfPTRR8mkn3766fz5823btuXKVatW7devH5XT
H05fq2nfvj0dDQoKMuiQEydOdOvWrXTp0twmOXyLFi0iIyPlOvTfunXrij3O
yEjuIlf7xNF1ffvtt1WqVBHXdffdd/fv3//MmTOmOmr79u18ogEDBsgfTElJ
+ec//0nlrVu35pJx48ZxTY10RqPD5ZrsNNTD9JGmTZuKZOY0ml26dElOTtZc
i2WZaO7cuXXq1KG+0nQaeSBXEBIEBf6rV69u06ZNyZIlucRVDufjx4+TkSyq
2Bw7zfXo0cOpWqgyrHbHW05k0kMPPUR/05DRMHH90aNHs7Wff/65vvG1a9fy
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
aex+/fVX3i+MkUe8ffv2XLh06VJqgaJv6rqKFStyoSam5hzCtWvXFo+OZGZm
li1b1uZ4rW/btm3GnRwREcHNtmrVat++fXS6hIQEPmRKJiIPEYM1fvz41NRU
KqTWqH3q20WLFomapoZVRSYSiayZTz75xPiS7SZ9225eJrI5NnlfuXIljcX5
8+e/+OILfkipdOnSnEPJ4OpM9Y9IHi5v+WeqBbKQnz567rnnTpw4cf369RsO
DK5Oc5s/9dRT3Cw5Id9T5N5kT9WqVenLi5sqoEszPMoq4wsAAAAAAMCti4p6
MHPmTF5Ld+/eXSTt/Ouvv8Sm3mFhYV43FFjCgkzUtGlTGtNXXnlFUz5//nwR
CPMTR2PHjuVDpmQiChh5e3qG4laRElZTMysrq1mzZuKQSPVsc2wXrpFiVGQi
kciaeP7551V64+effxb7+tkcj+jwH1T42WefaSorykQU7IsGAwIC+DEtpmfP
nqY6Kjk5ma+oUaNGssJGQ8PVxBgR/NCRhl69evHGW7JMJG55Pi9fNf3LEqIm
phavUJF5bIOQpIhRo0YZ9zB9hPP5MORapUqVYvXMlExELFmyRAyQzZFHmh1V
X1N9WFVkImLSpEmitX379hlfst2kb9vNy0TiwmXoLN99953K1an3T1pamnCP
0NBQCy0QzzzzjN5acrzatWvTt0xsbKzm6jS3eWpqqkj5runMcuXKcWcW0KUZ
/llkwoQJbkcBAAAAAACAWxcV9eDGjRv9+/fnZTNFK40bN27RogU/w29z/ASs
mGUXFD4WZKJWrVo5DUivX78uoifmpZde4kMcamm2rrZLm4Nr3gPKycmZOHGi
UGxEdEwxrOYFq8uXL1NQyYm1RYg3ePDgzMxMzblc2aBh6NCh3M7ixYtVeoPY
uXOn/NSNzbGd1qZNm/Q1hUwkP7DhFDo7Cx2CUqVKffLJJ5qcxm476o033uBC
TZh/9epVfpuGbliR4+XMmTP82h1TrVq1UaNG5efn85MtmufHpk+fLkJ7irvp
g9QPS5cu1cfUO3bsoEHhmklJSXZHGpyuXbtyiSx8uSI2NlZ+Godai4uLo/Jf
fvmFS+jUmo88/vjjNp34Y3fkT37sscfk7goICOjbt+/Bgwc1NRWH1cAGmeTk
ZFZFAgMD3V4vo+7b9psykdMEcRr4Rpg3b97UqVPlvNC1a9fW57kyuDp1txe/
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
XLmyrCGULFkyJCTkxo0b3rQRWMeCTDRkyBAe2fDw8LS0NDG4L7zwApU7fTwG
MhETFhbG98Xy5ct9bUuhsnLlyg8//NDsc4mpqan0kRo1alCPde7c2TumAQAA
AAAAAAAwgbp6QCFwiRIlOAq+55576tWrJx4G+OKLL7xsJrCIBZmIAnYa08cf
f1xT3rFjR8hExnz55Zd8RyQlJfnalluGTz/9lHqMXMjXhgAAAAAAAAAAUFUP
jh8/XrJkSYrmKlSosHHjRi5MTk7u0qVLgwYN0tLSvGslsIoFmSgoKIgG+uWX
X9aUN2rUyFgm6tChgyhJSEiIiYm5fPmy8bnOnDmzZcsWlTeVLly4sHXrVvJD
xUfXDh06RPU9mB75+vXr8fHxu3fvzs7OdlVHyESHDx/2bMsymZmZO3fu/OOP
P+iDcnl+fv6RI0d+//33gwcPun3l7dq1a3FxcdHR0W7HSJx027ZtJ0+eVKns
9OO7du0ir9AbNnXqVOqx8uXLW2sZAAAAAAAAAIAHUVQP3njjDQrlSpQoQfGs
XE5BHwWA3jIOFBgLMlGrVq1orAcOHChKGjdufN999xUvXpzKAwICKt5kxYoV
XIFloieffDIjI+PNN9+sXr26yE78zjvv6LMT37hxY+bMmdSmeHuxZs2a//3v
f/XGUM2wsDB+L4kpV67c8OHD6USamo8++iiZ9NNPP50/f75t27ZcuWrVqv36
9aNy+sOpmNm+fXs6GhQUZNAhJ06c6NatW+nSpbnNYsWKtWjRIjIyUq5D/61b
t67Y44yM5C4y3idOpWW745Uuauqhhx6iv7/99tu7776b68+ePZsr0FkmTpxY
tmxZ0Ut33XVXRYm9e/dyTeq3cePGNW3aVKQopzHq0qVLcnKy/oz16tWjv1ev
Xk39ySoxcf/99+uzmnPnP/PMM/prXLJkSf369cWTh2Tkq6++mpqaKipMnz6d
yqnrDDoKAAAAAAAAAEDhoKIenDlz5o477qBQrnfv3oViFPAYFmQiCvlprIcO
HSpKWCDSs3jxYq7AMtH9999fu3ZtfbVPP/1Ubv/KlSvPPPOMOCpEEmLMmDFy
zZycnK5duzo9NZ3xr7/+kiuzDcHBwSxzMXSi+fPn899z5szRXOnx48f50OjR
o131xsqVK2X5RWbKlCmi2vLly53WMZCJFFsm/vOf/1Ah3YPLli2T0z7v2bPH
7lDSRH+WL1++UaNGpUqV0jS4e/duqrlp06aKFSs6PWONGjWotzVnJEaOHCmf
kSlTpszFixf1na956zA3N7dPnz5OT1e/fn1RjWWikiVLuuooAAAAAAAAAACF
hop68O9//5uDu23bthWKUcBjWJCJmjZtSmP94YcfipLNmzdHRETw8yRNmjSJ
uIl4X4lVAubpp59evnz5kSNHZsyYwR8pX768/GbTmDFjuGbPnj35JSaq3K5d
O9YKjh07JmqOGjWKawYGBtLpMjIydu/e3aVLFy5s2bKl/AaTbENQUNCGDRvI
XePi4ujUZAAVtm7dWnOl06ZN4/oHDx502hV//fVXhQoVbI7nfD7//POjR4+e
P39+zpw5d955JxeGh4dzzb///pssfP3117nB2bNn03937drlqpPVW7ZLok1A
QEDp0qUnTpy4Z8+eVatW8Utn4vbs27cv9/Pp06ebNWtGJZUqVdq/f39SUtKV
K1eo/Ny5c2XKlClbtmxwcPD27dszMzMTEhI6dOjAH//666/1Z7Q53jOdPHky
9WRMTIyQ4CZNmiRfjlOZiOzkypUrV164cCFd8vHjxydMmHDHHXcsWrRIVJs1
axZX0z91BgAAAAAAAACgkFFRD9566y2O4zjYpOCUotTY2FhNahRQBLEgE/ED
J6GhoZpyfqLMIDcR8fnnn8u5g/r168fl+/fv55IjR47wsy7dunWTW7h06RLL
JuRsXJKYmMgvRtWqVUt+Xyw3N5eTbBOyliJsaNu2LTuqYNiwYXyIzi6Xt2nT
hgobNWrkqiteffVV/uDMmTPlcupJLm/evLlcrp6byFTLQrQpVqzY6tWrNU31
6tXL5sgqn5WVJQr37t3LH1m1apVcOTIy8sKFC3JJamoqP9DVqVMn/Rlr164t
p+Om6+KHi3r06CE3opeJqCY3S4ZpMhppDFi2bBmf688//3TeWQAAAAAAAAAA
CgsV9YBfaalatWpKSspLL71Urlw5DuvKly8/dOhQ+V0VUNQwKxNt3bpVr8Aw
bmWitm3basp/+OEHbm3dunVcEhoa6lSxsd8Uc0QjISEhXHPu3LmamtHR0XxI
TobDNhQvXjwhIUFTPz4+nusHBweLwnPnzrHi8eWXXzrtivz8/LvuusvmeJlO
r4h269aN2+Q3vxhFmchsy0K06du3r741ff5wu+NNNJbjxo8fb2AJ89hjj1HN
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
bNiwQXOJt8dXb1kmkB+jxO5b4s1DM/gUVMXIU6UxmRe2Tz/9tM88CMQuavHx
8dz1WrZsaZGBtLQ0Nu9q1arpt9bhFJS/bg7vbKnOiKMhxUsdZiUiL46/97z9
9tt5qBdZFS+4mnHu3DmuOkrc+twx/Zgv33Z6aKIpV66c4t2Mzu5vPS7Znnwt
2bU9n/OjXdtzkAcXbc+W5ctblL6lZsyYwUlpPmYPkEyEEUyNnyOYRXPIV5FY
qM6aNcsiWvny5RWjzShsyUT6YdOiFGamQonkzZtXMfJ53n77bU7Kp0xkqzi2
jNYtk/NfJjLLtq3ldhD7Gu9AW7duXTEW6T0iNQ76WiCW2/JzHDFq1Cj+ueY8
u4yMDA6XlInslt2WDdiaI/yUiSZOnMhpqjfFdZBnSbt1YDOwW4tkPXZGDN6H
h1i6dKnmkrxMZGEwjN3msCbEHRjX3eDAOTC0HuFoderU0V91IBOJZNXLHFtW
bcsrcPG+Hu++1qxnmmmY/shE27Zt46pWv/QFQgq7MtHly5fZYMaPH6+5xHao
6TuM/BglzuOuWbOmfpdsNTQQcczq1aur97QhD5/HXmLevHk+86AmKiqK4nTt
2pW3ZLdem3hunjxIzJkzRx2enJzMi4WqVauq3yCVX2TROKnZuj8hIYF/+9FH
H6lLRBWlOfTz448/5pjqmVqMmT4d+w4dOnBM9d6PjHq81Y/58m23d+9e/SEU
TZs2VbxPMUQIxZk0adKePXusM+xxyfY80rVk1/ZkFAy7tmc3D+7ani3Ll7Qo
fUsJL2v58uXqX4nDOHzKRNQ1vvnmm9mzZ1srVAxGMIH/I5iFzctXEWWDY1as
WFF95K7H+1I6Hw5L/uHtt9+u6Dy6o0ePUuYVE5lIctg0K4WFqZQtW1bx7vOp
7kQLFy4Uu0pay0R2i2PLaN0yOcPB05W+Zmu5HcS+tnLlSv4VnyxM9unz4bvd
vhaI5bbHjicgtur69NNPReCFCxeaNGnC4ZIykd2y27IBW3OEYUXJ2+2//vUv
TvPzzz/XXAqQ3dq1GditRbIeOzX//fffc0xqPvVITn/37duXL/mUiSwMhpFp
jlx2gwM3qAbCDQ6cA1O7dm2O+b///U8dvm3btlKlSunrWV/DMsscSau25RW4
eF/mxx9/5MhJSUmGEWTUAxoQBg8erD+QrlWrVpy45jM3EDrYlYmIKlWqKEYf
BzVu3JibmzfLOnbsGHnyfMnWdCA6fq1atTZv3sx9/OTJk2PGjKEU1F1evBda
v359GhboEvV9Yf/NmjVT30tmkSU+cle8G7Wpt2Q3hEYMnhNpCTBt2rSzZ89m
ZWUtWrSIv7HVj4eSYxS7ZzRM0fKc1zI0R/CnvoR45Y9LpHgPQ1yyZAn5b7QA
GT9+PMv4hQoVOnLkiEiT6kdkddy4cfyNKs0Ca9asoZS//fZbEXPTpk08wBJD
hw6lgYgqNiUl5ZlnnqGUhZEYjvkybUf5JBMqUKDAqFGj+BQtspavv/6af0iZ
4aQoWpEiRRTve6fr16+3bgi3bE++lmzZnsz8aNf27ObBXduzZfmSFqVvKSFP
UQbImMn92L59e6dOnURFqZcAYl8+9cEWY8eO5UCajHzWJ0Ywt0Ywj/Sy0WcV
tW3blmNWrlyZbZIahZq4TJkyLVq0YKeaXSBi4cKF1FvT0tKoHooXL86BhjKR
IjdsmpXCwlTEObyvvvrq6dOnd+7cOXr0aLHHl/JXmYj3C6WiqR+G2iqOXaN1
xeQMzd6VvmZ3X5pg9TWxAy1Dw5rPItvtawFabsvPceJU67Jly1LXowb67rvv
+NwuRl4mslV2WzZga44w7G7ydktVxDEfeeQRugtVmliOBchu7doM7NZnJUjW
PBkSLck5Js1Bu3btys7OJv9HrGoVCZnIwmAYn80RFDc4QINqINzgwDkwS5cu
5Zh33HEH+RuUkxMnTsTGxtJ/OdxaJpJc5shbtaRX4Pp9iTlz5vDPL126ZFhX
PtUDyjOnQIPhvHnzDh8+TP2L+oL4bpFM1/GWXCDQOJCJWGV9/vnnNeGzZs0S
HZyfnNKowpdsjVHUzflsRIb89mLFion/qmNmZmaKkZwHUvF3pUqVNOOAzCJL
7KJGdOzYUaY2yOZ5fcGI5TAFjhgxQhNZcoyiGVYkSP2dnxEwnTt31pTIEKoK
9RTGLFiwQGRP8e6VJx5wa3yYmTNnqgulrth+/fpxHMMxX6btyPlUB1I2KJoo
rNCrhY9KDB8+3LoV3LI9+VqyZXsy86MD27OVB3dtz2PT8mUsSt9S5JjxEbGM
mKBpgc8pqJcANG9yHujfyZMnc6BYs1NZ9JsMaMAI5rMd3ZKJ5KuIHBixqaam
iooWLcrZmD59ujopYQb8RMNMJtKjHzbNSmFhKuKQFDWU1XfffZf/VstE4r19
Kr5wk2wVx67RumJyhmbvSl+zu9wOYl/74IMPRAq0BrQuL2OrrwVoue2x4wnw
eU8aaG3IhxzJy0S2ym7LBmzNEYbdTd5u6Sdilw/Fa7cFCxbkhymBs1tbNgO7
tUiWka/5tWvXFi5cWNEhhB2fMpGFwQismyMobnCABtUAucEBcmAI9YG/anhf
aGuZSHKZ45G2akmvwPX7EmTnfC+zivKpHly6dIkmC3UdUmbE36VKlTp06JDP
5gDBwoFMxEcA6GeBa9euiVmYeeaZZ/gSW7L+YY34yFczHZBRTZgwQQwXDA07
ZK6a1yBpVKGhgDfWFj2ob9++Fy5c0NzLLA8aaNHK6cyfP1+mNoiNGzeqH7Ep
3g3kNV/KM2KM4qMNLKC7s3choPll6NCh6s3ieFxq0aIFOUL8iiZTuXJlmuAM
k6VRgsYxTW/t3r37rl27NDFXrlypnikU79iofoP0m2++4XAqvvqHMm1HC6X+
/fuXKFFCHad27drqbF+9erVNmzZ8SSNQ6HHR9uRrSd72zOpKgwPbk8+Du7bH
yFu+R8KiDFvqyJEjapWA5rIhQ4aQjVWvXl356xKAaN++PUejxuKQZcuWiUlz
x44d1gXHCOazHeWtyKfNy1fRuXPnqNHVHjutRLp166beWTcmJkb4POSsRkVF
0X35GZahTCQ5bJqVwsJUiM8++4zXSpyZxo0b//LLL2JXTLVMtGHDBuHF7d27
10FxHBit/yZnaPau9DULs+EdIfSHoQerr50+fZqXJ9WqVbMurBr5vsYm1Lt3
b59pBm6OO378OH8GwpQtW5bWqjk5OfwWgVomkpnjJMtu1wbk5wjD7mbLbpOT
k9Wvf1BqKSkpDvLssWO38jYDu7VIViBf87/99pv4+EjxipAvvvhiRkYG72I3
e/ZsEdPMAMwMRmDdHMFygwMxqAbODQ6EA+Pxvus1ZswYoTwr3k/YaLhgOY7c
V3VkfQ3LLHMYydFY0itw/b6sUFE9mFWUpHqwePFifr4goFKQqZw9e9bnb0EQ
cSAT8QMms4cFqampCQkJtCTkjSP8gTrpgQMHqFeSeYuXJ81i7tmzZ+nSpeSN
6z9+tEWvXr2406k/tpUhPT2dKpAKrjk91h9OnDhBacbFxVG59Pnh9Q6/2Mlf
8cTHx9NPfCZ7/vz5TZs2UXXt3r3b+nt8csB+/PHHH374QXPWiU9k2o6mG8rz
999/T7cgd9TwG/mXXnpJkXs12uOq7XmkaykUbM/FPAisbU+NLct3YFFUOnLp
qXTqjYwMobLTQoB6gfq7oWPHjineR0s+33BgMIK5OIL5RL6KqPlouCCD3LZt
m+GeCeS9UyKrVq2inmuRjuNhU4+FqWRmZtLoQXZufUabx7sSpzGQ7DY7O9tB
cXzmxIxADBq3VF+jQYZ93XHjxtn9bVD6mh6ZOY7m5UOHDlEf2bFjh60zTM0I
RNnl5wjD7mbLbslmaBnFM6P/HUfebt2qt1vEbn0iX/O0jKVxmGzG2b2sDUam
OYLlBsOB8XidhJ07d9Kg4cxJkFnmMDJWLe8VuHjfKVOmUIvcddddZinY2sKa
MrN+/frFixcnJydr3qwDoYkDmahly5ZKhJ5et3//fn4U0qdPn2DnxTd+HtsR
+tCwz5vFkY8a7LwEnPCyvTBiwoQJivcwkWBnJDeAFfkk4ofNIHJL9bXevXvz
89DDhw8HOy/AL2C3IFj4bA64wSC4DBs2jFrknnvuMYvgz0lnIPRxIBPxPv8l
S5bkDbIihhs3bogjmXy+exwKRPZ6Z9u2bfxZ9+OPPx7svAScsLO9sODq1avi
dFeLz+EjBliRDJE9bAaLW62v/fzzz/z+v88vQUAoA7sFQcRnc8ANBsElMzPz
4YcftnaZIBNFNg5koiVLlojPGMnlVu+oEKbExMRMmjRJfKTZt2/fYOdIishe
7/D2OK1atVJv5RF5hKnthQW8PWORIkW++uqrYOclsMCK5InsYTNY3CJ9jRYv
77///uDBg3mnrDvvvHPfvn3BzhRwDuwW5D7yzQE3GASLq1ev1qxZU+wJGR0d
bRYTMlFk40AmysnJEQcmElu3bg1oDgNNenq6er/3Jk2aSO6rEHQie72zYMGC
6dOnu7IZQsgSvrYXFly/fr1nz54HDx4MdkYCC6zIFpE9bAaLW6SviTdPFO9O
rfKbrILQBHYLch/55oAbDIJFdna2aJRq1apZ7LIImSiycSATMevWrfvkk0+i
o6ODu5ed/5CH0L59+xo1anTs2JFKJI5JDX169OjRokWL0aNHBzsjwCHha3sg
dIAV2QLDJnDM5MmTH/HSr18//fGgAIQmsNuQAs2hBg5MaJKTkzN16tSPPvpo
6dKl1pu3QyaKbBzLRAAAAAAAAAAAALjVgHoQ2UAmAgAAAAAAAAAAgCRQDyIb
yEQAAAAAAAAAAACQBOpBZAOZCAAAAAAAAAAAAJJAPYhsIBMBAAAAAAAAAABA
EqgHkQ1kIgAAAAAAAAAAAEgC9SCygUwEAAAAAAAAAAAASaAeRDaQiQAAAAAA
AAAAACAJ1IPIRiMTAQAAAAAAAAAAAIBbGchEAAAAAAAAAAAAAOD/8NEZAAAA
AAAAAAAAJIB6ENlAJgIAAAAAAAAAAIAkUA8iG8hEAAAAAAAAAAAAkATqQWQD
mQgAAAAAAAAAAACSQD2IbCATAQAAAAAAAAAAQBKoB5ENZCIAAAAAAAAAAABI
AvUgsoFMBAAAAAAAAAAAAEmgHkQ2kIkAAAAAAAAAAAAgCdSDyAYyEQAAAAAA
AAAAACSBehDZQCYCAAAAAAAAAACAJFAPIhvIRAAAAAAAAAAAAJAE6kFkA5kI
AAAAAAAAAAAAkkA9iGwgEwEAAAAAAAAAAEASqAeRDWQiAAAAAAAAAAAASAL1
ILKBTAQAAAAAAAAAAABJoB5ENpCJAAAAAAAAAAAAIAnUg8gmd2SiTZs2JSQk
JCcnByj98OLgwYOxsbFvvvnmyJEjFy5ceP369WDnKLw5ffp0gpe0tDTXE4fp
qpExXdEcGRkZuZ9DBwTUfsKOnJycuLi40aNHDxgwICYmZv/+/cHOEXAfDGtq
3J2RMZ4AAAC4RYBMFNk4loloDZiUlETeZnZ2ts/I999/v6Iojz32mNNsRg6L
Fy++8847lZsUKlTo8uXLuZyHWbNmdevWbcaMGbl83wDxn//8hyvzp59+cj1x
mK5A0nRFc9DgYJ0grc769+/ft2/fI0eOBCbLUgTUfsKLixcvtmjRQlExduzY
YGfKTVwxuQgYPzGsCVyfkc3Gk3A0m1zL8/Hjx2m+2L1797Vr1wJ9LwAAAG4B
mSiycSYTDR8+vECBAuwLbd261Wd8OKVMVlZWmTJluN4eeOCBhg0b/vOf/8zl
POzZs0e4xPv27cvluwcCyES5gLzpystE3bt355jPPvtsALIsC2QiQXR0NFcF
De8tWrS49957zYb3U6dOdfgrPXr0iImJSUxMvHjxYi5nWx7/TS4yxk8Ma0wg
ZmTD8SQczSY38zxs2DC+0YMPPijjUgIAAAgFnMlEV69e3e7lt99+C0CmgGs4
kIlWrVqlftyclJTE4VOnTqWVheHTZzilzPLly7nSevXqlZOTE5Q87Ny5k/NQ
sGDBP//8Myh5cBf/l/kwXZ/Im668TEQrMo75zjvvuJpZY8xaGTKRoH79+lQP
efLkOXDggHXM/fv3Kybkz59/zJgxofktrf8mF0bjJ4Y1nwRiRjYcT0LZbMzs
JDfzPHLkSDGAVK5cOVjeEQAAAFs4k4lGjx4tHtAEIFPANRzIRK+++iqvBeLj
49PS0m7cuMHh7IEbPoyDU8rExsZyv1i8eHEQsxEXF0erpIh5S9D/ZT5M1yfy
pisvE50+fXrMmDFTpkzJnU08zFoZMpGgVKlSVA81a9b0GVPIRI0aNRo6dOjr
r79OK03xYgbRsGHD4H5LaIgrJhcu4yeGNZ8EYkY2G09C1mws7CTX8nz16tXD
hw+//fbbXHUbNmwI9B0BAAD4jwOZKCUlJX/+/JCJwgIHMlHLli2pZZs3b64J
b9asGZxSaz788EPuF3v37g12XiIH/5f5MF2fyJuuvEyUy5i1MmQiwW233Ub1
0L17d58xhUw0evRodfjy5cvLli3Llx5//PFAZRRIgGHNJ4GYkcNuPLGwk1zm
4sWLefLkocxQHQY7LwAAAHxjVya6cuXKww8/LB4pQiYKcRzIRFFRUYrR3g41
a9a0dkrVq4bdu3cnJSX53MXi+PHja9eulXnh+cyZM+vWrTt06JB4u8maffv2
UfzU1FSZyDJcu3Ztx44dW7ZsycrKMosjnNLff//drfsacuHChfXr1wf6ab58
63iMKpxainJIVrdt2zbrXUNpVElJSdm6dauhwfjvlsN0XTRd12UiyQr3iVkr
iwyLAVC++0RYK7NM9Nxzz/lMzUwmIs6ePVu9enW+Gh8fb/hz6x6tx/XasMbZ
+Ck/oDFkPFQD+q/z+O6nTp2ydXc9GNYCNCMHaD6yNZ/Km+jp06cpWYuYFnZi
jUwN67G2NN5OfNq0aXYzAwAAIPexKxONGjWKBvm8efM2btwYMlHo40AmeuSR
R6hle/fuLUIefvjhChUqUKMr3r1Pi99kyZIlHIGd0tatW2dkZLzyyivlypVj
P4p+8sYbb1y9elVzC3Isp0+fTmkKvbFixYr//e9/9ZmhmLGxsffcc4+IWbRo
0YEDB+oP43700UcpS3PmzCH3m42TKFOmTI8ePSic/jD8DKFp06Z0NSoqyqJC
Dh8+3K5du0KFCnGaefLkqVevXkJCgjoO/bdKlSriRBXKJFeR2TlxY8eO5Qga
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
gkzEdLqAmmKY2jkmF0GI2/msWbO6des2Y8aMYGfkL4TLOBk4Ow+XGsgFLl68
2KJFC0XF2LFjg50pH6xbt46z+sUXX+TC7fTWQqsAWgukpqbmwt0BAKEGZKLI
xplMNHz48AIFCvBksXXrVp/x4ckzWVlZZcqU4Xp74IEHGjZs+M9//jPYmQI+
6N69OzfZs88+G+y82ADOPxNJnS6gphimdo7JhQlxO9+zZ49Yeu/bty/Y2fn/
hMs4CZkoF4iOjuaqIP+2RYsW9957r4x/G1yCKxNlZ2fzf/PmzTto0KCrV6/m
Qh4AAKGDLfXgxIkTixYtGjt27Ndff/3777/fuHEjkFkDLuBAJlq1apX6aUtS
UhKHT506lSZWw4cv8OSZ5cuXc6X16tUrJyfHOrJFfQI1rlRUampqCy+HDh3S
XKLVFrfaO++8488tAoFFtuH8M7Y6XYjjvymGqZ1jcvFJiNv5zp07OXsFCxb8
888/g52d/4/ZOBlq86+fdo6ZQob69etTPeTJk+fAgQPBzosswZWJrly5QtUl
lgNz587NhTwAAEIHSfUgJSWlVq1ayl+55557KDzweQTOcSATvfrqq9S4+fPn
j4+PT0tLE2IgrzIMn2DCk2diY2O5ayxevNhnZIv6BGpcqahff/2Vm4b+0Fw6
ffr0mDFjpkyZEoIf41tkG84/Y6vThTj+m2KY2jkmF5+Evp3HxcW98847ofZ2
utk4GWrzr592jplChlKlSlE91KxZM9gZsUHQPzo7d+4cdWpa7lFgy5YtcyEP
AIDQQUY9IP/ktttu46Hjrrvuatq0aYUKFfi/hQsX3rhxY67kFDjBgUxEEwG1
bPPmzTXhzZo1gydvzYcffsj9Yu/evT4jW9QnUONKRa1du9bMiw5lLLIN55+x
1ekinjC1c0wuPoGdO8NsnAy1+ddPO8dMIQMvZLp37x7sjNgg6DIR8+6771Ig
WWku5AEAEDrIqAdz5syh8eFvf/vb6tWr+W3n69evjxo1igeTXr165UZGgSMc
yERRUVGK0f4VNWvWtPbkH3/8cRGye/fupKSkixcvWt/r+PHj5N7IvKN+5swZ
mi4PHTok+anjvn37KL6L2+5du3Ztx44dW7ZsycrKMosjPPnff//dZ4IW9anB
rCxXrlxJSUnZunWrz3oW+GyXzMzM5ORkup3MPrdXr17dtGnT6dOn9ZfIWaW8
UQ4lM2aBZEVRNsiWzLK9ePFix8tnmabXcOHChfXr1/u/V7BFtoU7J/q15E2z
s7PJBrZv307lso5pt+CUgY0bN1JWfaYsj8+Ob6vTMbaM/MSJE4mJiRkZGT5j
yo9mVFHUcagz2v16yGeXD1M7D6/JxXU7d31yIags1C40OGzbts16p2tbxac4
Bw4coEZPT0+XyUZQbqTGbNkrP//awsLxsJ6h/JSJwmum8ATAQ5OxLpaJnnvu
OflkaeTf5OXs2bMy8R0bgJr9+/fTCEPzFP29YcMGd2Ui62yY9ZcpU6Yo3vcE
XMkDACBckFQPvvnmG80gSUPxgw8+SONGhQoVApU54DcOZKJHHnmEmrV3794i
5OGHH6ZWzps3r+Ld+q/4TZYsWcIR2MNp3bo1TamvvPJKuXLleKKhn7zxxhv6
Xe/IeKZPny7eSSMqVqz43//+V58ZihkbG8vvuzJFixYdOHCgftX26KOPUpbm
zJlz6tSpxo0bc+QyZcr06NGDwukPw08tmjZtSlejoqIsKuTw4cPt2rUrVKgQ
p5knT5569eolJCSo49B/q1SpIo6hoUxyFRmeE+ezPs3Kwlep7GPHjq1du7bY
ZpySatWqlV6u4XRmz54t0y7kmTz11FOKilq1an311VeGCdLiq3v37lRMrpA6
dep8//33Hq+APGbMmEqVKnEKlMMPPvhA7baR51O6dGlKZNCgQZrcjh8/nuvh
jz/+kKwoj/dZW4cOHcqWLSuyTRFmzZolIsyYMeOBBx7grKqbhuycI8TFxXFI
YmKig6YXKdB4SH9TPVCT5c+fn3/ieJNMn9kW7hx5sHTTRo0a+bwpudBkJ+LV
UCpXp06dDB1aWwX/+9//Tn9/9tlnhQsX5vgjR47k3L733nv6xJcvX85Xly5d
alZ8mY5vq9MxPo18/vz5lALVPC18Jk6cyCMb10CNGjWoqg2zKjmaEQsWLKha
tarY7aFIkSIvvPDCuXPn1PWpN0WZLh+mdh4Wk4uZnTdo0CDUJhcuF2WShllR
Lspwz549jx8/7qz4DI35tL4WBkZZrVatGtWMiMCzwz/+8Q99fly8ka0ZxGO0
7LU2ObvpW0/WHokZinEsE4XFTGFWUSVKlMiFmYLo0qWLGBOoXJzsuHHjLCo2
JSWlSZMmIlkymOIqunXrZlEuBwbg8bpPVA/8ZRzfkTIwb948/q9aJqLpgLOh
aRQaDzlcvwGdZDbMZKKYmBgKpFHIosYAAJGHPyed8ddJNOTS4OZqpoBrOJCJ
aNajZu3Xr58IYYdKDy2pOAJ7OORyVK5cWR/t3XffVad/+fJl8iTFVeFgEKNH
j1bHvHTpUps2bQxvTXdUu2oiD6NGjWKZi6Eb0TzIf3/55ZeakpIvxJdoVWtW
G+Sd0lLOMA/R0dEimniWp8HQk5esT31Z6NLq1atpcjf8OXlKVGP6OunatSsr
uhrU7XL27Fm1o3XHHXeIv9X1xgl27tyZ2lqT2l133bVnz5727dvrb/T555+L
FNLT0znwtdde01TLiBEj+BK5W5IVZXg75tNPP+U477//vmEEWnpwBDO/SLLp
1SkMGzZMvd8jQ56V5ININfLZJn9e5qbLli0TSwlaJuTLl4//pnY/evSoPwWn
KWDRokXqPNDS47777qM/ypcvr39h5sUXX6RLt99++4ULFwzLLtnxbXU6j5yR
i1qtXbu2PuWCBQuq18UeO6MZOfC0sjDMcNWqVTV3V5uiZJcPUzsPi8nFzM5p
Tcd/hM7kQkyePFnEoV4mMkydUSj2topPrFmzRqxeNXz77bfqltIIHa7fyNYM
4jEye2uTs5u+xWTtkZuhLGpPhrCYKcwq6sknn8yFmcJz8+UxDTSOmdXqxo0b
WUyjGiP36W9/+5vmt+3atbMolwMDOH/+/OOPP24WWfmrTPTWW29xoOZtSZpl
OPyVV15Rh8tnw1omojoxqzEAQETiWCbKyMjg2bxevXpuZwq4hgOZiNdH6ocR
P/74IzlvPGnWqlVrzU3Ea//imbvinffJrd2/f/+0adP4J3fddZf6AwFy1zlm
586d+cVXisxPbSj+wYMHRczhw4dzTHJ46HZkclu2bCFXhwMbNGig9ivUeYiK
ilq5cuX69etTUlLo1pQBCmzYsKGmpFOnTuX4u3btMqwKcjOKFSumeF0FWhEc
OHCA/ENaEZDfwoHx8fEckyZryuFLL73ECX7++ef0X8N3D+zWp7osdOnkyZPk
15FvRm5JYmIiuU+7d+8W3sXHH3+svpF8u3zwwQccjdyP48eP02pi586dHTt2
JGNQf7CgTrBr165UEKo6ake110EDAvnb+/btGzNmDIfQ+k6kYMsJ91lRZKV0
qWnTpnRHspy0tLSZM2fyM9By5crxMorWa+qmmT59OiciXs439Ivkm16dAkG/
mjhxIjVWUlKS8Bupeg0twQL5bMvcNDU1tUSJEor36S2ttqhmyMGm4hQsWJAC
6S5+FrxAgQK0JJ8wYcLPP/+8dOnSa9eu0d98adWqVepy8eNOth+zskt2fFud
ziNn5OpapfXL3LlzKSZVbK9evTjw3nvvVX+CIT+aiQqhefPrr7+meqYmpiUe
matYaBuaomSXD1M7D4vJxczOaWUXapMLGSenUKFCBapb+i8VbcaMGWR1wszs
Fv/cuXNlypThS88++yyVnQqekJBAQ7267xgKHa7fyH+ZyNrknMlEjGay9sjN
UBa1J0NYzBQWFZULMwWxefNm0egUzlWkVymZ69ev84MwGnXXrl3LgZ999hkn
O3LkyL1794p389wygMGDB3Mi1HNplKNen5yc3L9/f6Hs+SMTyWfDTCb65JNP
OFz/AicAIIJxJhMdPnxYDMU02gQgX8AdHMhEPDVPnjxZE85zisX2EYr36ar6
C6MePXpw+C+//MIh5LSzvyGexTDkDbLLIXyzPXv28BcWlSpVUr/ST5MUv8ZG
qP0QkYfGjRtrtmKgqZYv0d3V4Y0aNVIsj7144YUXhOulDqea5PC6deuqw21t
HyFTn/qyeLzfIJw5c0YdQt41Pzdv0aKFYTo+24U8McX7uFyz44fGJRAJqt/W
zsrK4rUS0b59e3UKYjErnlfadcKtK4rcwhUrVmgChwwZwumQtyYCRdNI7vBp
q+lFCpUrV1ZvMEtmwD5ep06d9JmXQSbbMjft06eP4n2JXbO65CfR+fLlE3Xu
rOB0R/7qUEAJsk9OxqYOX716Nf/E7MAmux1fvtPJGLkoUZcuXTSfLYh3gebN
m8ch8qMZ5Y17KC2+NJtCqPuymYsu3+XD1M5DfHKxsPNQm1x27drF0TRvMamN
3G7xefQgBg4cqE7z2rVr6o2D9EJHIG7kv0zEmJmcY5nIcLKWn6H83JsoxGcK
j3lF5dpM4ZHem2jnzp38c43uze/k1K5dW6ZcjKQBUFtw3kqXLn3ixAl1ZN4b
VvFPJpK3Q7P+smjRIg7/7bffPACAWwZbMhGNV717927evDm/hkr/Dh48OJC5
A/5iVyYSpypoplePhCdPs6QmfPbs2ZzaDz/8wCHifXiNU+256W+LRCZNmsQx
Z8yYoYm5detWvqTeBoHzQO7N7t27NfF37NjB8UeNGiUCT548yT4S+VeGVZGT
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
8/PDXQsAAAAAABEtmJho7dq1Npvt7rvvDmlFCKVgYqLt27fb7fbs7GwzCltI
MibKzc0NdyEAAAAAAES0gGOi4eHhZcuW2Wy2F198MdRFIWQCjommpqYcDofd
bi8qKjKptgWzdetWsSF79+4NdyEAAAAAAES0gGOixMREOYT1u+++G+qiEDIB
x0Tnzp2TF+GcP3/epNp8m5njOd3lcvX39/f19Ym/KK4qMzNTbEhsbOzQ0FBI
awQAAAAAwFICi4m6urpuvPFGm822Zs2a6elpE+pCaAQQEw0NDVVUVMTGxtrt
9vj4+MnJSVMrdDM+Pt7U1LR//37x6mlpaW5zW1tbExISZH4VFxdXXV2tss62
tjb5X3bu3FlbWzs1NWVC4QAAAAAALHoBxEQul+uJJ56QlxKdOHHCnLoQGgHE
RKWlpTJUiY+P7+rqMrU8T6JI+3V79uzRz+rv74+OjnY4HOKoKykp2bJli1hG
MSnSr7avr8+c2gEAAAAAWNwCiIl+85vfyIzo5z//uTlFIWSCiYkSExN7e3tN
Lc/TwMBAa2vrmTNnPGOio0eP6p9r39fX53A4tm3b5nQ6/a62qqqKmAgAAAAA
AN+MxkTbt2+XGdEDDzwwMTFhWl0IjQBior6+vuPHj8fExNjt9qSkpLDconXl
yhXPmGjXrl1i4uXLl7UpBw4cEFM6Ojp8r629vV0GRGJzSktLF/g2OgAAAAAA
FgtDMdHBgwfl081Wr17d09NjZl0IjYCHsC4vL5fRSmNjo0m1+eA1Jtq5c6eY
KGZpU9577z2V+86ysrLEYtHR0f39/aaUCwAAAACAJainBzk5OcuXL7fZbKtW
raqtrTW5LoRGwDHR2NiYjIny8vJUlvcxkvl8s2ZmZua7X8xrTCTTnsLCQvnP
gYGBbdu26W9Dm09KSopYbPfu3b4XAwAAAABgiVNMD44fP/7JT37SZrOtXLny
1KlT5teF0Ag4JhLkM8WysrL8LllVVRUbG5uSkjI8POw2Sz6z7PDhw27TBwYG
kpKS4uPj6+rqPFfoNSbq6uqSydXf/va3zMzMzZs3y38WFRX5Lk+8iljs2LFj
fjcEAAAAAIClTCU9OHHixIoVK+SQRJs2bRJn5dnZ2Ud1Tp48uSDFwrBgYqId
O3bY7faMjAy/SyYlJcnEprKyUj+9t7dXGzh6cHDQrTA5PTU11XOFXmMioaGh
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
P6eaWsQ=
    "], {{0, 347.}, {774.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{774.5, 347.},
  PlotRange->{{0, 774.5}, {0, 347.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251319498002*^9, 3.915337991548825*^9, 
  3.915489946858872*^9, 3.915985463202304*^9, 3.915989624316309*^9, 
  3.941669858308652*^9},
 CellLabel->"Out[9]=",
 CellID->1139800636,ExpressionUUID->"76657f9c-71a2-44a0-8ee2-3114c083440d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "2d86eeef-c858-41a5-9b89-4c020f3de5c8"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"ab97169d-6074-40b1-bf1e-caa009ced4a3"],

Cell["Search over index objects:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.867251366246792*^9, 3.86725137353743*^9}},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"201c53ad-32db-45a9-ae55-03c97f5b87c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"index", " ", "=", " ", 
  RowBox[{
  "CreateSearchIndex", "[", "\"\<ExampleData/Text\>\"", "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.867251470251603*^9, 3.867251482656488*^9}, {
  3.872267862223223*^9, 3.872267862612677*^9}},
 CellLabel->"In[10]:=",
 CellID->1994573855,ExpressionUUID->"e0798fd0-1353-4ef7-893a-47d1d4e27125"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SearchIndexObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.007142857142857143], {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{138.766,
                 61.273}, {79.874, 61.273}, {79.874, 73.503}, {138.766, 
                73.503}}}]}, {
               FaceForm[{
                 RGBColor[0.7, 0.7, 0.7], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                124.836}, {140.00099999999998`, 124.836}, {
                140.00099999999998`, 137.066}, {0.706, 137.066}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                20.453}, {140.00099999999998`, 20.453}, {140.00099999999998`, 
                32.683}, {0.706, 32.683}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                81.81400000000001}, {80.757, 81.81400000000001}, {80.757, 
                94.04400000000001}, {0.706, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                59.949999999999996`, 0.}, {140.001, 0.}, {140.001, 
                12.229999999999999`}, {59.949999999999996`, 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {53.249, 0.}, {53.249, 12.229999999999999`}, {0., 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                108.96700000000001`, 81.81400000000001}, {87.45600000000002, 
                81.81400000000001}, {87.45600000000002, 94.04400000000001}, {
                108.96700000000001`, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{118.489,
                 81.81400000000001}, {140.001, 81.81400000000001}, {140.001, 
                94.04400000000001}, {118.489, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                106.49900000000001`, 42.31699999999999}, {140.001, 
                42.31699999999999}, {140.001, 54.54699999999999}, {
                106.49900000000001`, 54.54699999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                61.36}, {43.376000000000005`, 61.36}, {43.376000000000005`, 
                73.59}, {0.706, 73.59}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{74.408, 
                61.36}, {52.897, 61.36}, {52.897, 73.59}, {74.408, 73.59}}}], 
               
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                102.973}, {51.13400000000001, 102.973}, {51.13400000000001, 
                115.203}, {0.706, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                57.12800000000001, 102.973}, {140., 102.973}, {140., 
                115.203}, {57.12800000000001, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                42.31699999999999}, {99.094, 42.31699999999999}, {99.094, 
                54.54699999999999}, {0.706, 54.54699999999999}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {30., 28.}, 
             PlotRange -> {{0., 140.}, {0., 137.066}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"d8e0fafe\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 26 Nov 2024 23:17:58\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Index size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5", "\" \"", "\"documents\"", "\" \"", "\"(\"", 
                    "\"466.1 kB\"", "\")\""}, "RowDefault"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.007142857142857143], {
               FaceForm[{
                 RGBColor[0., 0.502, 0.761], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{138.766,
                 61.273}, {79.874, 61.273}, {79.874, 73.503}, {138.766, 
                73.503}}}]}, {
               FaceForm[{
                 RGBColor[0.7, 0.7, 0.7], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                124.836}, {140.00099999999998`, 124.836}, {
                140.00099999999998`, 137.066}, {0.706, 137.066}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                20.453}, {140.00099999999998`, 20.453}, {140.00099999999998`, 
                32.683}, {0.706, 32.683}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                81.81400000000001}, {80.757, 81.81400000000001}, {80.757, 
                94.04400000000001}, {0.706, 94.04400000000001}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                59.949999999999996`, 0.}, {140.001, 0.}, {140.001, 
                12.229999999999999`}, {59.949999999999996`, 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.}, {53.249, 0.}, {53.249, 12.229999999999999`}, {0., 
                12.229999999999999`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                108.96700000000001`, 81.81400000000001}, {87.45600000000002, 
                81.81400000000001}, {87.45600000000002, 94.04400000000001}, {
                108.96700000000001`, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{118.489,
                 81.81400000000001}, {140.001, 81.81400000000001}, {140.001, 
                94.04400000000001}, {118.489, 94.04400000000001}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                106.49900000000001`, 42.31699999999999}, {140.001, 
                42.31699999999999}, {140.001, 54.54699999999999}, {
                106.49900000000001`, 54.54699999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                61.36}, {43.376000000000005`, 61.36}, {43.376000000000005`, 
                73.59}, {0.706, 73.59}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{74.408, 
                61.36}, {52.897, 61.36}, {52.897, 73.59}, {74.408, 73.59}}}], 
               
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                102.973}, {51.13400000000001, 102.973}, {51.13400000000001, 
                115.203}, {0.706, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                57.12800000000001, 102.973}, {140., 102.973}, {140., 
                115.203}, {57.12800000000001, 115.203}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.706, 
                42.31699999999999}, {99.094, 42.31699999999999}, {99.094, 
                54.54699999999999}, {0.706, 54.54699999999999}}}]}}, 
             AspectRatio -> Automatic, ImageSize -> {30., 28.}, 
             PlotRange -> {{0., 140.}, {0., 137.066}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Short name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"d8e0fafe\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Tue 26 Nov 2024 23:17:58\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Index size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "5", "\" \"", "\"documents\"", "\" \"", "\"(\"", 
                    "\"466.1 kB\"", "\")\""}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"d8e0fafe-2726-497e-accc-c2b1a7a23a27\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/faizonzaman/Library/Wolfram/SearchIndices/d8e0fafe-\
2726-497e-accc-c2b1a7a23a27\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Indexed paths: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   GridBox[{{
                    "\"/Applications/Wolfram.app/Contents/SystemFiles/\
Components/TextSearch/ExampleData/Text\""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 1, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SearchIndexObject[
   File["/Users/faizonzaman/Library/Wolfram/SearchIndices/d8e0fafe-2726-497e-\
accc-c2b1a7a23a27"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.867251483594005*^9, 3.872267868883519*^9, 
  3.879868719351593*^9, 3.879874131117103*^9, 3.915338010784877*^9, 
  3.915489958236157*^9, 3.915985476443064*^9, 3.915989807302819*^9, 
  3.941669881362563*^9},
 CellLabel->"Out[10]=",
 CellID->90953388,ExpressionUUID->"84121a6e-bb81-423a-9cd9-6b9847404572"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"indexResults", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"index", "->", "All"}], ",", " ", 
     RowBox[{
      RowBox[{"WordToken", "[", "1", "]"}], "~~", "\"\< \>\"", "~~", 
      RowBox[{"TypeToken", "[", "\"\<Verb\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.867251499863676*^9, {3.872267873063178*^9, 3.872267888482976*^9}, 
   3.925599704768205*^9, {3.941669924231744*^9, 3.941669925605486*^9}, {
   3.941669981856402*^9, 3.94166999252422*^9}},
 CellLabel->"In[13]:=",
 CellID->620380776,ExpressionUUID->"22d3a9aa-fdef-4b28-b50a-c56331f58832"],

Cell[TextData[{
 "Visualize the results in a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["WordCloud", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/WordCloud",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2c60a7cc-e37c-412a-8ce9-8f95687aae28"],
 ":"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.872267978586767*^9, 3.872267986970823*^9}, 
   3.872268799898808*^9, 3.872268927002496*^9},
 CellID->149245661,ExpressionUUID->"ed55cf9b-2347-455e-8931-2c5d198a668e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"indexResults", "[", "\"\<WordCloud\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872267962036769*^9, 3.872267973205229*^9}},
 CellLabel->"In[14]:=",
 CellID->1313440369,ExpressionUUID->"35f493ed-fbc5-4dab-ae05-b5f741728db7"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"the s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.23972602739726026`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"natural select\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08986507364301163],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-4.5, -36.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"to be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14733752188690905`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {11.5, 30.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"the go\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09326398187248944],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-0.5, -58.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"have been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06638170769389226],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-0.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"It is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1189102894221856],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-69.5, 36.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"organic be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05062313317540426],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-0.5, 72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"And s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09048305695746214],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-8.5, -83.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Which have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05556699969100834],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-4.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"The be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07657843238232567],
     FontColor->RGBColor[1, 0.75, 0]], {74.5, 47.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"I have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07997734061180348],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-67.5, -54.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"we may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05556699969100834],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {63.5, -53.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06452775775054073],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {90.5, 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"which are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05742094963435986],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {57.5, -75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0688536409516943],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-73.5, 59.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"the ground\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04567926665980018],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {66.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05989288289216191],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-93.5, -2.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the st\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07194355752394685],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {94.5, 0.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"the present\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03857245854361932],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-93.5, -18.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"species have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035791533628592026`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-64.5, 72.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"same genus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03919044185806983],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-66.5, -71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the form\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053404058090431555`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, 102.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04722422494592646],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {94.5, -16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"species are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036409516943042536`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-96.5, 15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"with s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06236481614996394],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {95.5, -34.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"We see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.052786074775981046`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-0.5, -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the do\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05649397466268411],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {59.5, 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the fight\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038881450200844575`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {44.5, -90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the inhabit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04042640848697085],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-69.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"The Latian\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041971366773097124`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-73.5, 84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"they have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037027500257493046`],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-47.5, -100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the man\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04506128334534967],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {52.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"The rest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04629724997425069],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-10.5, -114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05062313317540426],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-54.5, 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"in regard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03610052528581728],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-100.5, -31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"and be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0496961582037285],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {45.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"may be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03795447522916881],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {11.5, 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it would\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0435163250592234],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-30.5, 116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"their own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03919044185806983],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {54.5, 112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"He said\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04660624163147595],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {87.5, -90.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"my s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.050314141518179006`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-109.5, 29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the land\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04104439180142136],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-59.5, -113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05989288289216191],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {99.5, 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I think\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04629724997425069],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-72.5, 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"would be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03610052528581728],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-93.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the view\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040117416829745595`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {89.5, -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of differ\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037645483571943555`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {95.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Which is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03795447522916881],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-99.5, 97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of man\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04382531671644865],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {98.5, 110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"there are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03610052528581728],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {88.5, -116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"not be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04289834174477289],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-99.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"This is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04722422494592646],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-113.5, 40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"and have\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03424657534246575],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {114.5, 31.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"We shall\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037645483571943555`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {112.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it may\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038881450200844575`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-114.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07132557420949634],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {104.5, -62.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"the wind\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034555566999691006`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {33.5, -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his hand\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03548254197136677],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-6.5, -127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to show\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03671850860026779],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {10.5, 127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"be give\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034555566999691006`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-113.5, -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the win\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037645483571943555`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {116.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034555566999691006`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-112.5, 71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his head\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03548254197136677],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-45.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"their s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0435163250592234],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {48.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"has been\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03424657534246575],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-27.5, 128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the shore\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03548254197136677],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-70.5, 128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"and see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035791533628592026`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-114.5, -71.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of Heav\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037027500257493046`],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {85.5, 122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"our do\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03857245854361932],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-115.5, -84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"To see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03980842517252034],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {69.5, -127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"this view\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03486455865691626],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-88.5, -125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05000514986095375],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-119.5, 55.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it has\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04537027500257493],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-118.5, 83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"we are\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.037645483571943555`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-108.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"and st\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041971366773097124`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-109.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054640024719332575`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {121.5, -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it was\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0373364919147183],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {119.5, 120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"will be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.035791533628592026`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {102.5, -128.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"in arm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0373364919147183],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {123.5, 42.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the fir\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.040117416829745595`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {29.5, -133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to find\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03857245854361932],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-6.5, 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"his own\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03486455865691626],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-10.5, -139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"That is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03424657534246575],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {25.5, 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"her s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04444330003089916],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-56.5, -137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the see\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034555566999691006`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {57.5, 137.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I am\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04475229168812442],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {130.5, -62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"the act\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03486455865691626],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-40.5, 139.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Of be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0373364919147183],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {130.5, 70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03610052528581728],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {130.5, 82.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a go\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036409516943042536`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {130.5, -12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"of s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04444330003089916],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {131.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it can\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03424657534246575],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {132.5, -26.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"it be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03671850860026779],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-132.5, -6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"T is\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04382531671644865],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-132.5, 5.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I will\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.034555566999691006`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-133.5, -19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"in s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.041971366773097124`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {133.5, 12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"I do\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03980842517252034],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {122.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"to s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038881450200844575`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-135.5, 17.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"a be\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03486455865691626],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {126.5, 93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"d s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03424657534246575],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {33.5, -7.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-146., 146.}, {-146., 146.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.872267964127241*^9, 3.872267991215858*^9}, 
   3.879874223247648*^9, 3.915338174218568*^9, 3.915985535655867*^9, 
   3.91598987980453*^9, 3.941669915232252*^9, 3.941669952157146*^9},
 CellLabel->"Out[14]=",
 CellID->533571053,ExpressionUUID->"1e4b5863-8ed1-47d1-b119-3a21bbc9aa96"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d1ad5506-4cdf-4962-9414-f345896f7796"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->605696627,ExpressionUUID->"aa328f3b-aed0-4d4f-b9e7-aac3e08d6788"],

Cell["Format a LexicalPattern for labeling:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.923954207460184*^9, 3.923954215606344*^9}},
 CellID->1291403005,ExpressionUUID->"1fabe327-8d93-441d-acf2-567a9932a752"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormatLexicalPattern", "[", 
  RowBox[{"\"\<Alice \>\"", "~~", 
   RowBox[{"TypeToken", "[", "\"\<Verb\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
   RowBox[{"TypeToken", "[", "\"\<Adverb\>\"", "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.923954218694126*^9, 3.923954231679824*^9}, {
  3.925599707168235*^9, 3.925599710168194*^9}},
 CellLabel->"In[15]:=",
 CellID->870723209,ExpressionUUID->"101910ad-46ca-4dd0-a664-dd21f7d5e8b7"],

Cell[BoxData["\<\"Alice VERB ADVERB\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.923954222991897*^9, 3.9239542320452013`*^9}, 
   3.941670006353952*^9},
 CellLabel->"Out[15]=",
 CellID->1432060742,ExpressionUUID->"99f89c71-8fc4-489f-ab6e-776de51f7d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormatLexicalPattern", "[", 
  RowBox[{"\"\<Alice \>\"", "~~", 
   RowBox[{"SynonymToken", "[", "\"\<walks\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
   RowBox[{"TypeToken", "[", "\"\<Adverb\>\"", "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.923954334431684*^9, 3.923954338529845*^9}, 
   3.925599712734936*^9},
 CellLabel->"In[16]:=",
 CellID->1388865209,ExpressionUUID->"672f69ce-3a1e-442d-b610-1b28df268c3f"],

Cell[BoxData[
 TemplateBox[{"\"Alice \"", 
   StyleBox["\"\\!\\(\\*SubscriptBox[\\(walks\\), \\(syn\\)]\\)\"", 
    RGBColor[0, 0, 
     Rational[2, 3]], StripOnInput -> False], "\" ADVERB\""},
  "RowDefault"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.923954342751691*^9, 3.941670022527915*^9},
 CellLabel->"Out[16]=",
 CellID->690976945,ExpressionUUID->"7a8e9d33-80cf-46e2-beac-54b4a7d28b69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormatLexicalPattern", "[", 
  RowBox[{"\"\<Alice \>\"", "~~", 
   RowBox[{"SynonymToken", "[", "\"\<walks\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
   RowBox[{"OptionalToken", "[", 
    RowBox[{"TypeToken", "[", "\"\<Adverb\>\"", "]"}], "]"}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.923954334431684*^9, 3.923954355970632*^9}, 
   3.925599717318187*^9},
 CellLabel->"In[17]:=",
 CellID->1419143357,ExpressionUUID->"bdce83f9-672b-4db9-b41c-db21af315710"],

Cell[BoxData[
 TemplateBox[{"\"Alice \"", 
   StyleBox["\"\\!\\(\\*SubscriptBox[\\(walks\\), \\(syn\\)]\\)\"", 
    RGBColor[0, 0, 
     Rational[2, 3]], StripOnInput -> False], "\" \"", 
   StyleBox[
    TemplateBox[{"\"(\"", "\"ADVERB\"", "\")\""}, "RowDefault"], 
    GrayLevel[0.5], StripOnInput -> False]},
  "RowDefault"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.923954356540968*^9, 3.941670023524469*^9},
 CellLabel->"Out[17]=",
 CellID->221513784,ExpressionUUID->"71ce848b-bb72-4baa-876c-e6eba9d77205"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"573c4d71-47dc-41be-baaa-04586df828ef"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4d166ce9-cf1e-4730-b84f-ea24b6772d56"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->57534933,ExpressionUUID->"bdd133fd-dc09-4661-bbe2-f50150e9e279"],

Cell["Faizon Zaman", "Text",
 TaggingRules->{},
 CellID->1083795939,ExpressionUUID->"f6cc3633-8b44-4a7c-a468-88bce75b74a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3ab920b3-f48f-4f31-8f15-25c315022075"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"5a89d02b-604d-4fdf-b83d-4419983a2364"],

Cell["https://github.com/dishmint/LexicalCases", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.867247575944808*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"2cddba57-5039-4f7e-8017-92a653112114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aa645ab7-61f8-45fe-99ed-9ff29663f0d2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"b302d505-4b47-485e-9172-8cb3744a90d2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"a730aa4a-685f-49a8-8083-50fa89e3484d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "35e81700-1c8c-47b5-af70-7542bc824def"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"944b5222-1a84-4c26-9ffb-d2b6b5091c3b"],

Cell["lexical cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250789127003*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"75b6969f-d76e-4166-86a3-f5a342eb47e8"],

Cell["string cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250792465765*^9}},
 CellID->1995096266,ExpressionUUID->"cda2b2c4-6411-4453-b5d6-c412f1f7c6ec"],

Cell["string search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250796416108*^9}},
 CellID->969775666,ExpressionUUID->"31fd8248-3c4e-40d9-a223-aea58dfbbac1"],

Cell["text search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250800083678*^9}, {
  3.867251745601468*^9, 3.867251745603298*^9}},
 CellID->1657720019,ExpressionUUID->"64c1cb14-4bb4-4c6f-8e5b-ffb60f40ddb1"],

Cell["text cases", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250800083678*^9}, {
  3.86725174684802*^9, 3.86725175043145*^9}},
 CellID->925073988,ExpressionUUID->"de5b44d9-8417-43c7-86be-4044f3fcae03"],

Cell["search", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.8672508030060787`*^9}},
 CellID->1547162085,ExpressionUUID->"c806bf9c-0bd2-4fd6-bf65-3df58a4a44d4"],

Cell["text analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250810710026*^9}},
 CellID->1260957434,ExpressionUUID->"ed5c1322-57a2-4d9a-85b0-3e95db0843b4"],

Cell["text pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.8672508168203382`*^9}},
 CellID->1239550090,ExpressionUUID->"6970b472-aa2d-48bd-af9d-af0de36e751a"],

Cell["text pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250823230261*^9}},
 CellID->882324921,ExpressionUUID->"65b93f71-5613-4dfc-b7f6-82e132eba4cd"],

Cell["pattern matching", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.86725176190212*^9, 3.86725176190336*^9}},
 CellID->1516644615,ExpressionUUID->"374fd611-4aad-4cfc-91e5-bbc00cd1852e"],

Cell["lexical pattern", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251766301625*^9}},
 CellID->629062074,ExpressionUUID->"6a571711-9aaa-4aff-8664-1e5933891810"],

Cell["lexical patterns", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801334418*^9, 
  3.867251801335786*^9}},
 CellID->2113172454,ExpressionUUID->"1c00e6a6-2982-4c78-90ac-5e95c965f8c7"],

Cell["linguistics", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.86725180333738*^9}},
 CellID->1094251332,ExpressionUUID->"b916d629-7ac3-4814-8072-82b9f879e97d"],

Cell["text mining", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210309921728*^9, 3.872210309924004*^9}},
 CellID->2136157625,ExpressionUUID->"15cbcb0a-52d6-4582-bf9d-c82b657ab70a"],

Cell["lexical dispersion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210311194353*^9, 3.872210314498335*^9}},
 CellID->2086878829,ExpressionUUID->"29940b9f-61a6-4bef-bf1b-1f18e31f21e3"],

Cell["text dispersion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250785581878*^9, 3.867250825483983*^9}, {
  3.867251762532044*^9, 3.867251769749071*^9}, {3.867251801749998*^9, 
  3.867251805466688*^9}, {3.872210311194353*^9, 3.87221031711361*^9}},
 CellID->1074669460,ExpressionUUID->"810f966a-107f-4f95-9754-b55ae84e25a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d47fd2bd-cc48-4a2b-8fe6-167578c7d52e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"8961b87c-6f2a-4f77-a071-a74db57d45a9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Data Manipulation & Analysis", {
            False, "Data Manipulation & Analysis"}], "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "External Interfaces & Connections"}], 
           "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Visualization & Graphics", {False, "Visualization & Graphics"}], 
           "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Knowledge Representation & Natural Language", {
            False, "Knowledge Representation & Natural Language"}], "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Strings & Text", {False, "Strings & Text"}], "\" \"", 
           
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdkD1Pw0AMhpeE0oI6MzBkYkH9EVEQKKK0VV2xm9SkJy6+09kWhF/PAaoQXd8P+\
9FbzxZQgo6e4GxtGk0XMGkO1L3R/rWQYulE4foOFasnZBfNo7rA1U1VM/\
pRnMDVsxND7z6PzkPCeHCdwO0jh3dP+56qLcVEQqzH0ArVEvpqidwb9gRz0OS4l+\
zt6CNjlK3SIDKtTcOQa90CzjcpREo6wqxBpT4kR5KB1/H76v/spAnehhNx3rJSyii/HDCteQR7Ecr/\
LhqTHGw5jyDlPXqhP/EHpVgFztrlliRY6mg3xjzbBjtP+gUpJ3Si"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->727039701,ExpressionUUID->"d588e2b6-eb66-4f87-a3ac-e616c672e461"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7394acc8-7ad2-4e75-80bc-592b689b02fb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"13125726-24fe-4902-b8ee-f632fc1a3eb3"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"71b0c1a4-dd7e-4439-adad-cce22eda8c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9789bb3f-d1a4-45bf-930d-70b54d1389cb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"3fa65a98-3217-4e8d-95e6-211612003daf"],

Cell["Source, reference or citation", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"687fe21d-7ac8-4c4a-a634-8fcdabb117fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e2f53aca-5f66-4466-a168-c608e9b03421"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"1ff55bb7-c3c4-4264-a40e-fc79f2ed690d"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"3203ec5a-ebf4-4aee-8ee4-0c4b2b5415fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6fcb10b2-ede1-4438-9008-11434c710a45"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"47c5af80-d808-4288-a0d4-501a547634a7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "06004c09-85c2-4c88-ba47-4d80caab5d12"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"0a561a65-d463-47ac-8220-4d58a6800659"],

Cell["14.0+", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.882818799151093*^9, 3.882818814903826*^9}},
 CellID->402052919,ExpressionUUID->"97e46064-b1f8-46db-b6b2-4c245587e769"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d563fd9f-51bd-47b3-9a72-c497faae53dc"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"1aeac77b-3406-4234-be3d-de08bcf594a2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->174303277,ExpressionUUID->"535fc4ff-5911-41bd-b4d5-253770bf228b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "59981230-44e2-4574-984a-83fa66b34aaf"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"bc39759a-d37b-45b7-83f3-947e00b337ae"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlbYWym4fsXc+gqJOYppWVE/aMwRXRA1JFDuV+PsFtYR2Tz4+\
jo99nOIphzXwqBCSvWfrOYe07FGcsDumtPqSxJACEkmj4fUX2925Ub7hKd1sGxb9p2khAeGkZUjCg6\
KuIAPfntBpVAGKHjuvsAuTKsaBZt3jA60OobDozyBWou4lRv5Of4ax+m/N+\
3TRvu56jTfa88I3MFYXzxHlsKmdseh4hPfSDDbMaaWSPC5Td/\
osndED6unAeztxRFnh2QzhgZiubpQfNJWPObxVmtFZh3xxkBV6DDYJQ/Nz6Sk0VTr8Fa0/\
GkW4kNN5afVtdOBeDkjGO4E/ow1u60Yo5D9Skaw8"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->347482031,ExpressionUUID->"8a93fd62-e2c4-491e-b42f-f042087c43d1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c24bfe51-795c-40bb-9932-37a88c8559ba"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"6d742ac0-250d-4228-acd0-2bebcd868671"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj9FqAjEQRVV2a21LH3zzzR/IR9iAsFCqOP5AzM7S0GwmZGYe9u+\
bRcHHuZzDvXN4M9CCTBHh5aSSVQys7S/6P+\
yHBTffgWvSdoIjD8v7Pay4uWg1tqA5UxHs9yHtfSTtubkWRQOv50IZi0ywszRmJ+\
EWYpDJztBDq02nLIES8+agQmOl/FxPUcfEdmngs0uCJRcUN4Ow/\
iKK6JKBd6tclS7VydweXWR8hvNabn4o1ezjgkxaPF6nXJ88Ox9R/gH0QlZ0"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->1122458824,ExpressionUUID->"24a98d89-7b5d-4ab3-aafc-85c16b10fe83"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2f0cf05e-cfb0-41e0-b06e-a3ac7316de0e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"5ced32a4-7a0a-42e8-a947-3ff812c292dc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Notebooks", {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAQRGnjNHUbSi+95wf8EUYQMC2JyfYHZGVNRWSt0O4e/\
PeVKSQtve3OvDnMtE8NrEHmgPBwVEkqDWzMF7oLnsc7rj48C9QHEhyILlzgTnDicfVjjfdcnbSEb8i\
v8+q+9jbbEDDs3jFHDPxfubJbE0jPu9Y5ZP77NfDYZ0qYZYY3Q1Oy4gcfvMx7tKIZC7E5JvEUmetWh\
aZCuKURBZ0im1UDL10UzCmj2AWEuo0z6MBYmj8b5RLqYtmB13sbGG/i0purA8WibU/\
IpNnh55zKcr11AeUb42dz5g=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->1669099720,ExpressionUUID->"2cbd7b9b-439c-442d-b928-2f28a3b7bf7d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "27334686-102d-4339-a9c1-548ea173ed6b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"ecbc873a-ee4b-4060-a4b8-f788a9f9d2e0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0+VN7AQ6cLMSR8ABcqmbbwkotreK8gLs7m1j1elb+\
abpceQhehkeAl0AcEc/A2Mlu0qpI+GJ7PD/fzHzj4+GE97irFfC9S+\
8q7yZ8P1lCdgN58cR2z6UlSS91UNri6fpedGx35hXQ/dkMV+EaxHx0jplQrJAKgm5/\
JlZTvKNzx47mUFZKOCBB0d3ovziRNlNovQEbTc+iZc92E1CKPOyT9olwotiz/TMjymjdWT/\
zL51kiWiBuaW0DCsnUTNZsBq9YZXIFDiWSwOZUzXLESwTumZYkD6wApXCldQLlnsTNoUiDzsaptGUl\
Ia3YgHvhz+/\
fmOJAYJu37IcyCt5Iq0Sc1lIOqtt0lE5LSs0zrKcgLPCYHlPI6RIYMGIgNcyA6EqOXPYxN1Al9o6oV\
RUI+R5i1AYYHCXQUVm7/j4Ag2kusA53LWNscOpyG4WBr3OqYyDD0bU53ALyhRx/\
TlqNcexrhfCLChg8nzrIcojMe57+PE9rN9bDwezEIaQzQift0mvfRmkJZWQy8/QUIRc7XEqBuQbP7+\
O7ODYOywpz+wfyQxOQtXFNR27c+OhfegHHszFoiUmf8Op3VSwxs/jBGvsR8F+k3qLcLMn02Tang+\
TQwox/ogqT5B4TByg2Tg4vRXKxwZFQr5KlMxuiFqBHNQkSQBMGd/\
561QrqaHBdVmBBjP1zqFuJoMPtxAnvH9lAktczUc7SdBsXkai22aI/\
isZ6oRegpHEmJ1jm17vgXBd3NNcroveOxPKwmPtePDS9oO/3MW8m9Z+\
gsqX2u50fcIPUu3AVIa8xmINjnXN/bUF+nlGibekmGr6mTbxtsLwKdnuJ9QkG8/A0uRnMK8r+\
suu4hT9BTvOvf8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->2127596926,ExpressionUUID->"8d80ebe5-ae7b-494d-8b6d-0a305224c42e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQBpq0SRO1Fy70ZHHiQF6AS5VsWojU0ioO4ux6ZxMTZ7147KbLibdAnHgRHg\
FeouKIeAbGTnabRlRiD4k9nvnm75vp7/d4k7tSA9+98K7wrsf3khnIOaTZI2ycKSRJc+\
Rggdnj1T17go2x10D3nbFZhmsQ88P3RmdWLJiQ0vjc0XtrLJYDcwNISp0JLAotHJAga6xtng0VSm3Q\
W8C1eX9t3cRGAloTyh5ZDIUT2S62TkkjIjxZPfNvO8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLl\
lqAJnIS2Yy0geWGa3NUuXTV/u3X76zMXz0pIovmcfwaywjQ2PTlZHKM2MXInqwEFJJmTNB195+/\
oqsyn80jGij3IEV0iFbKjeL/mrVRBufVoUKfrZqFwESC+SD4kiBsqDISW9hUpUpOt+\
DkxHOXH2gNHHTNpjADUgfziutFAptSgod5QxS6iMlIXC+\
MnuHtZ60kCpH3snJtZJQCTajXYui6bmYQ12Dvi5mgkmhNfLuubEwotpN4KYmD+\
4PhJxPLSWbUovbr60oz+AatM3i9+e41uzGnp8LO1U5Jk/vEKI8kvc+\
ws8f4ft9h3AwDm6ozWORKo9Js35pjxZiClx9gorGBLXLKXBI1zi/jrHd986ExssHkmkPQ4fEFR0bE+\
uhfmgFjk7EtB4e/oJTj4hBFc7DA1BhdALGOv06yvV/\
MkgG9fkwOSQ33TdGp4mhWSPO0AwfnFwL7SNr48AcJVrJOVE/\
kMnCJqv581GuVQ5VbBcF5GAH3jmTV9PLD+6H2eOtS2sKsK7knY1kaI9cxGHEatj/\
KyHqSD4Dq2i2No51is0t4arIJ0TCWPzmqdAI/\
2rL1kvdF360GfN2anuJ0X6R4wYDevwgDnZhCTkWrd3PS+\
6vEMigk3gkxVFOm3Tt804Ylig23pqcZN0xIG0oCZOyoN17GRfVX7KLBoc="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->771329085,ExpressionUUID->"d873cb89-4cce-409d-802e-37473ba74799"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["ExternalServices", {False, "ExternalServices"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVF1u00AQpiVpkyZqQeIJeFjxBKi9AC9Vs20hUkurbC6w2ONklfWu2dltay7CXRBHgE\
sgHhFnYLyx3RAKwg/2en6++flm9mjnQHSFLzWIrYvgi+\
APxDafQ7KANNvAzplCLx6c3HhwRmoB7kolgOQz9pBjY5FtYmcSNND//\
Ym9rn6j48PGkWHtSRa9ibwe2Rs6b+\
JgCnmhpQcSZJ3a68mxwkRbDA5wPXLWxQ4HrQlnm3yOpZfZFvZOncwjxuZSLT5t8Lm1CMzPFTJbeGUN\
UxkrbXCskIkGz1LlIPG6ZKkFZNKUzGZkDyyzWttrZWavdr59/MzO5YL0Dt4HQI/MWwbrZbHnc++\
LfZZVL8T5PgOfvIje3AHVRzk4FpC+\
tQtLrDEUnvKKZgJMyiCXSqMYnlsHY5PZKQVqeos7I5ksZs4GUzHTf+1keQZXoF0Wn5+\
HreUwtuNcupkyyB/dIkR5ZPt3hK9fqufHLcLupApDHZjIVAXk3VbTH+\
dyBkJ9gIZlgtoSidSQ1jjfD7F/FLzNpVfJX4rpHwNRIN/\
RsTN1AVpFr6JvKmftbImXYtmmBudf09GgDCqUugFtnvWXj/ioPe/\
xPQo0fGN1yi2NInjI7uHuyZXUQVZR4zQ95lolC5oLx3LKgilKw+\
VRL56NjVYGmuwuCjDgRsF7a5rhvmuBepfOFuB8KQYrBdHyXcRZxWYb/\
qskYsXMwSkP6cqxLbK7Jlw2+\
iRVSwK6p1Ij3EXNmqblRjxdzfnP4ra51SE3uDIHB2J3bMiucIQdG9c/\
MqUI7xDoyhnwgGQ4NnQB1VFvhdVNg5231pBsOAGkFU5gWhZ0ZV3GTf4F7Wq3wQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->1516638303,ExpressionUUID->"e30a0c55-65ce-4f09-9e8e-5ef67961162f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQJlk7sZPIQShIwKlBgDistbc97AErnsS7lhxiuSMixGHpzNTYjXu6R109yc\
4+BhceAIkLB16AE2d4AK6IGz/PQHXbM5lEu4JDDntYX9zTXfNV1ffVVNfhTp+3uSsV8K3TwuWF6/\
PtaAHxEpL0DWxNJNJOe+wgw3Rj9ZxuYmtWKKDnezNz5R/9Nv/\
o3KjUioxNhJ4XYg4MS6QXWWx0KueFFU7SagM7M3E1NM8A6dXdM8hyJRzQRtpaI7EjibEyWFjA8wkPK\
NENkDa2IlCKwLbpxSPhRLqFnRF5D0Cb9XHnDJ65cL69Bv9xI1oYg8DcQiIzucdjMmWlKSzLRazAsUR\
aiJ0qWWIAmdAlMynZA0uNUuZK6vmjnd+//\
YlFFih0ZDlYJGzQjikTC8UwXkBCHCXMCVxiMD4xiUwlWZ9PKmaMZaAvpTU68+\
8iOEfYt8w977eTvYedoNoq2a0zMV/\
x1x0Wzhm9eqhNePvDqXAL3uNldmEUziCdSL2shMQDvjBX3FnyHS2EFbGjfLB1ZguobXZGRruRyKQq+\
T4nrmJgXGhkU2tqo+5QIASvPtijUpN9TMHujY6nVl4SV1+\
NUzraiwprKePPhSqAd09MgXB6CbaupdaN+Lred2SUsT7x2eNhWNvnD3/49PzLPwf2E/H930+/+\
G1g3/mYt7/75udBVaq3cHZW7HgG+\
ZsrqR9ZSB8EdmqrHpWal3IqksSr0R4JhT6ht0Kch3kOxJGOgVjnHe/gidDJnZHJN+/\
fheTdo1DDxpavZW/IftCQvWbolZH+\
6X3fElDSqbChC4w1OqEUNSGKyLcqai6rFNCbJpCDTkDH1ChudCQ6k1luLJlpo/\
t5caFkfBd11ZsBhqhPL74m9l4XV6O43m0U102aXpkKG/\
jb2AewumPEkmplRPePO9YJy8KVE4crFtflRw58zS0oCkW++N6JsTDWqfEXa4MFES/\
n1hQU6wZ2H1tRTuASlE3D759BbbkXLukTYedSY3TQiNrvVzo3EH79xf/+\
ukbozbwbYmAmEllg1L7WdJzR2MHlc6hEJ6gtThcyJGucPwbYPSycySjJ+CXJdI+AVBQXtLzJbMd/\
OyRMPQrxB5zEJbYqnP8cXCqoXQ+\
1ZqEOdv0fDaNhvd6P9n1xPzEqiQyNSuCABrPe8SWVeYD0QPy9iD7vJY0nlkS0wCTFYrNwzj8YayU1V\
CGeUscAu6raavjib78w2j7vUM3QcONKvttIjWbE0zA3YTWy/a+8SB+\
9ACsdJI1lnWn71uaK8mNqe0GK9ZfyApFundQq8febMb8kw2367otMY6Ms+\
rwX6j635CBQ2D3UJS8uaD7r892oQDIcaxqW166vN/2cjK3PjKa9vaoFnJU5jdfT0Bv+BeV+FzU="},
 
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->1656552278,ExpressionUUID->"f699c6da-ef40-4156-9eac-bad7c74bad9c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiW/\
TSa9cCoXwY1DeIVO4v6QmZR0osz0imKvEk1lyaOV2pon4OHgLTgyPANrJ3ZCCgy+\
eLUrffvzfdLoZMib3OcaeGsWfBb8kLejNcT3kMgX2JgqJE9z4iFFebRZy2NszIMGWr+\
c28diWbj5mzurpRMpmwqzCmIFbBmU9kNlGObp0uoCoTMXj2P7BEjHegtIMy08kEM2tihnFwpjbTE4w\
Lspz5FS8+3xJjYi0Jpg2nTkQnghW9i5opwlxPEmzL8cRWtrEZhfK2Q288oapiTLbXAsE7EGzxLlIPY\
6Z6lNlFSALAGpjCr20hn5rHaGIV4zgQRaQFNgU9snZh2zfg2OfB6cEZrFlqwnj+95/\
8Y6mBhpF7SuBocnYxHfr5wNJqFeutdO5FN4AO1k+f08r3f2y+ZuhFspg9GrHULpL4n7HeHb1+\
L7sUMYzIs0yqzmIlEBo2Yd6U5SIomrz1BRSFAtHgsNyRbn+zl2R8HbVHgV/\
6WZ7gXQQMWSzMbCBagDnYKMhVjVwuHvOM2cBlzh/IPqCqRXgGz7r8vc/qNxNK7t0+iU8vQ/\
WJ1ElmQFHkjAg8sHoYMokpbSOIu0iu+ZJM5SKoIoIzMt4/\
ztxGhloCpuloEBNw7eW1MJlZ8e1DnknVtnM3A+5729dugWzUrdYSXs/+\
qIODGkJOUh2TPrHpsHzs2YLxO1GX/zSmiEPxFzEKmZ4a/\
3a37WWzuyOqQG90Qw5INJIfPMEXQ5tu7I5DwsEeih6EUBaePE0EOyTbpzFm8INj5aQ77+\
HJBuYwyLPKOn57a8lL8AfK6hNQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->1696136638,ExpressionUUID->"66f216db-98b2-4f59-92d2-9dfd49b6d6b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpkiZqJeCEBLI4k75ClWxaiNSSKo7E2V3PJla89uKxmy7vw9vAW3BEPA\
Ozm91NKAWxlx3PeL75+\
zyj4yFvc59r4Eez4LPgh7wTrSBeg0yeYOtKIWnaUw8pJgfbc3KIrXnQQOenc7spjoWaP78RsQbPJGR\
gJJhYQeHTnYvN2N6TfIj9BaSZFh5IkbQqv1cThbG2GBzgFmKyj9DGVgRaE1KHvCbCi+\
QIu5dOpCXK4dbMvxxEK2sRmF8pZDbzyhqmEpbb4FhWZaYcxF7nTBn0Qmu651jIJCWETJicCSlV4Sh0\
5YJnbJsSEq7wTDgg51gHCZJtlF+\
RGthHqxPKh2GO1CgmLTPWMwefAgVkguLWBZ7xwbV1MDWJXcB900o8Hot4vXQ2GEmF9t45kV/\
BHWiXlN/P8+bmoKz8WrglFRG92CGU+nKUvyN8+1p8P3YIJ/\
MijDLLuZAqYNRuLL1pKpbA1Weoh0pQRzwWGmSF8/\
0ce6PgbSq8iv9STG8C1DFxS2Jr4QI0hm4xqYVYNlTibzkNhBpe4/\
ybCjVOv8CpWtBkWv2jcTRu5NPolEIN3lstI0vMAw/\
E6pOLO6GDKOKW1HkZaRWvWUJkSG05YBLT0s7fTI1WBur8ZpQNuHHw3pqay/zZn6kOeffG2Qycz3l/\
ryh6XbOSmljT/7+KosmYFTjlQe6JTZntB8ptsy+Iy+\
UQ2pdCIzw2ngeWZj789X7Oj5XXiawOqcE9Ngz5ydR4cJkj9LJ5vZHJebhFoB3SjwLSxamhHVPF3SmL\
9YKtD9aQbjAHpDcbwyLPaCttg/8CfOuqyQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->1270544588,ExpressionUUID->"645240f6-f284-486e-a833-21a35b9bfda0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCMgIXgd0cXARJQaRL4SKEeBJtAlIocIgEQYpkdTdHLri3e9jZk3\
x+DDd+AANu8gqpXNsP4DZw559nyOwd70QxP0gRNtydmZ355pufO9ofQBtcoRB2p7nLcjeAvXCJ0Qrj\
5DNqnUpiSXviMKVkp7ont6g1yxXy/\
fbMXPmrF8OdKQSR0Ylc5FY4yacd6szE1cg8QWKrgzmmmRIOWZC01o/\
uHUuKlKHcIk0hvPG8Ta0QlWI3e/\
zkWDiR7FJnbEVaurjVqDtzfOJKfY3FhUtjCAO3lBSYzLsLZBIUJrdBJiKFLoilxcipIogNUiB0EZiE\
7TFIjFLmSurFw/0/nv8enJlYJpJNOD1C51hBlUKs1g9zjsSPPUHbgG9Tp6S3Arw7F4sq++\
4od87o6tKYwB0oiLkOLcaonRQK+lCkF0bRDJNTqVc1+\
XQXluYKnGU44VJYETm0RK25zbGx2R8b7cYilaqAQ+DcIwxAaArOrWmMuiNBWALwuI8LzfYR4+\
6NT86tvOR6/TpJWNULc2sZ1A9C5QjdM8NZTy/RNpy3buDr+tihUcZ6DmaPRuXZPv32t+9+/\
Pn90H4lXn785ae3Q/vFl9B+8ezVsG6vLT/7FVGeTLhfle6hxeSbbaKaB31uIseycxHHvlbtsVDkc/\
u8hHyUZch06Qi5FtDxsR4LHf9vvELvzFic6MT4ptxIQ0SrhTU5h9qh7iMrilO8RGWT8vdp2Fj2ygY/\
E3YhNYV3N4J6eV2oDQ9vXvvfh2sP/ZkPwwnMRCxzCtvXRZmkYoEgn2JdNXa1C5FQGK/\
9vBtS9yh3JuUZjP4hme4xchnEBR9vEtPx7c+8NrsCvgYeMp6+2s+/jHvt5MA7WeffwFz/\
h6Nw1JwPw0Pfl4+\
NikPDqwUd8s7qn1xyh5YuvSO4FyoZrXiqbZAyiEAyCpuWengw0UpqrMFNM9Roq4arlxUcbuEcQIfLn\
KF1BRxspMOLc1ouGqqX23/KiGuil2ilw3jj2OTY3hJWNJ/EsqJ/3dx/U5gtTVMZuL+J+S+\
57fGY5qmmjSYYQH/\
CE2Uzy65L2rpHuoD8grfhAA7CnNhwovnbsQ56LfSfDWp9bzTLejOkclTmRcZfm/NylP8EK/RQTg==\
"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->1612988395,ExpressionUUID->"9ee42fa7-e3e3-41c3-bef0-fe5a7d34c432"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[
           "LocalSystemInteractions", {False, "LocalSystemInteractions"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVU1vKzUUpa9Jm7RRitCT+NpYDwmxoEJsWLwFUTNN+iKlr9E4BSEW4MzcSax47JGvJ+\
m8JUuWbPgBSGz4C6xYww9gi9jx8Ru4nkmmaUWfWJBNPPb18bnnHl+\
fHZ3yJneFAn5wlbssd6f8MFhAtIQ42cPGWKLjr49NJBQv0EE60g6siJw0GmnriKZwG5g8wkaYK6Dv/\
dCs/We5/81yP8MSgMkdBIpshWLdNzeAFH48hTRTwgFNJI3N7ifnEiNlMLeADxBJmtgIQCmCO6St58K\
J5ABbQyvSEupRvdyawo0r1/c38F/\
vBQtjEJhbSGQm84BMJqwwuWWZiBQ4FksLkVMFiw0gE7pgJqF4YIlRyqylnj89+\
u3bH9ngBqLcUQhf0HHMWBZeP2eRSVOhYyxDrpGWiQNYTZLASqhcOGORraRgXsj7eexjq6xPlcfBVMw\
rcdr93Dmjq486hL862GAPKmjgXV6kM6MwhGQs9XJbJHzMF2bNnSX2wUJ4KcEiNqY2hzrmaGi0G4pUq\
oKfcFIkAsaFRjaxpg5q9wVCScDzPi80xUfEuzMcTKxcEYcvRwktdYLcWtDuEyIGvH1pcoSrFdjaJ40\
7/Nr+7MAoY70G4UW/HNsXH/3w8aef/9Gz74nv//\
ris1979o13efO7b37q1X69i3NUCeXF5G9XBX1qIfngvlD1hm5ABxPPiYhjEgebQ6HQ5/\
ZaSfksy4Dk0hFQLXjLn/WMyvu/6cq/2iudsjU4srV0i1vPKDmzwkqo/\
BSCiNE7bW2ld54zDJ0FkZaTaOgiuypyLHIdLSgkI1JKgWJLAgSF7zPMZ5ux33QxuUbeuTQWRjox/\
sLsaCmi5dyaXPvu0L6wohjDCpRNyt/fvTqyU16+S2HnUmPweCdzP791yw7CLz/735+\
3CN3QH0MqhiKWOQbNW2eMUjEHLl/A1joEdcCpNUC8wfm9h+2z3JlUOBk9kEz7HMgLYkbDu9Vp+\
TtIxa0bG/+QQ9lptjj/oSVtwY492EaHmu7mP+gH/Xp8Epz4S/\
LMqDgw1AaBLPkKdjf2JEwPxN8KlIyW1HgsS4kMdVMapuU6fzLSSmrYkrzKQIOt3L9trC/\
p5S3yXgbWFfx4Jz16Dq6yKqPG3S7/0syoRnoB3pLxzrDOtXlvspJ9EMuqHJsb9y+FurdSV4q/\
s8v5wRwPqYfkqcYdc5zybhmTWTqilLF9pguezxDoLTwOcqTAkaaXcXP47aR/+\
7Dx3Gia64SA5T2eFhm9pZOyz/wDaCmntg=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->1809878684,ExpressionUUID->"cf22e92b-d31c-4880-b9c9-a83d8aa1348d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUhpH0Z606kLjiBov78gpTm24j0kanuC/gxietVceO/NMuPCO8BZeIZ+\
AkTdIyQMI3OT4/3/n7nNnllIbUlRJob+ld4d2U9qMtpDvg2Qsb3AuLmjB2kNvs5fGeXdgg8RLw/\
irRh+paqWm4dFswqB0k7DDXT2DRNFpBXkjmABVZ0Hi+\
XgibSm29AXsMCm0QgZQY3EfHBXMs69nBrWF5HXhxNFM745wwzoUTWjFJHDw5wixRABw4EYowlA8kRW\
eyBqkPxGnCdepzUOipyvNofqqCuC1DuwGitCMSi0Q4ttZ7+EjHD9pArDK9wmxt8/\
ZyztLdxmivOFY9vDOsvIc9SJPV5+\
d15zmu23hgZiOUjd6eEGp9PfzfEb59rc6PE8IkqdIItUkYF95GYWcZxjnbABVfoF0DQvVoyiTwBuf7\
tR3OvNM5cyL9RzPDBUhwbI1isDIeOsOgGvuKbbrl0/cU0mp+Lc4fq2xDR1Vo03VXXPON5tG8k6+\
iK0Qff9KSRxrJAg6QepObPZOeVanq1b+\
LpEh3JNOG5Jgad41iXtvph1hJoaAtaVmAAjP3zmnV0q9h55QOHo0uwLiSjs5KR9YviwrLtiT9rz5w/\
gpRBbLlTOw6C58pjyO9QQLWow5vmbTwtyU8s3RboG/Oa2466kda+\
lzZszVP6SRWDkxhELAe0XCmSurXFvA5jyJv0TFW+NybVCdl9dJt8Fkr1I0TsNqbFFZlgT+\
IR5Zigb8A9Fp9HQ=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->1672665880,ExpressionUUID->"ed69b425-a188-4b99-870e-6f5b9e217e02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "02966ea7-f762-4e5a-b2e1-1a4eb22a6dbb"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"25ad1df8-02e1-4619-aeff-7e38634a4f16"],

Cell[TextData[{
 "I started work on this to find adjectives preceding particular phrases. \
Initially, I gathered article text from Wikipedia, then searched for the \
pattern via ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bf81e2c5-f424-4833-bfca-6f01b8362391"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TextContents", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/TextContents",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dc40c040-0872-49de-be03-e1737ca85c6d"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Containing", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Containing",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5a9d191e-4c22-44a3-a15f-58b85b33e4dc"],
 " wrapper, (",
 Cell[BoxData[
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Containing", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Containing",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox[
       StyleBox["\"\<AdjectivePhrase\>\"", "TextContentsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"], "StringTypeLink",
       StripOnInput->False],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"ref/textcontent/AdjectivePhrase",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], ",", 
    RowBox[{
     TagBox[
      ButtonBox[
       StyleBox["Verbatim", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Verbatim",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]], "[", 
     "\"\<\!\(\*StyleBox[\"music\", \"TI\"]\)\>\"", "]"}]}], "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8b8828ba-e293-4beb-90ea-f0109e62ebe4"],
 " for example). This approach was slow for my needs, so I created some \
lexical pattern objects which expand to plain text and string patterns to \
perform the search with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["StringCases", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/StringCases",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c429e007-263f-4c25-8d44-f1698eec65ed"],
 ".\n\nThanks to Swastik Banerjee for helping improve SearchIndexObject \
support."
}], "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.867250094577227*^9, 3.867250207482535*^9}, {
   3.867778469328055*^9, 3.86777850437639*^9}, {3.8677785407651854`*^9, 
   3.86777856696503*^9}, 3.88293650496817*^9, {3.924025684301218*^9, 
   3.924025777863595*^9}, {3.924042763238492*^9, 3.9240428922192507`*^9}, {
   3.925595059678334*^9, 3.925595165111828*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"d7bc51f5-c590-4090-890d-16843d8efdea"],

Cell[BoxData[
 TagBox[
  FrameBox[
   TagBox[GridBox[{
      {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[ToBoxes[
             ResourceSystemClient`Private`$submitProgressContent, 
              StandardForm],
             ImageSizeCache->{143.4375, {2.080078125, 7.5}}],
            StripOnInput->False,
            FontFamily->"Roboto",
            FontSize->10,
            FontColor->RGBColor[0.5, 0.5, 0.5]]}
         },
         AutoDelete->False,
         FrameStyle->Directive[1, 
           RGBColor[0, 0, 0, 0]],
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
         GridBoxBackground->{"Columns" -> {{None}}},
         GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
         GridBoxItemSize->{"Columns" -> {{24}}, "Rows" -> {{All}}},
         GridBoxSpacings->{"Columns" -> {0, {0}, 0}, "Rows" -> {0.6, 0.6}}],
        "Grid"]}
     },
     AutoDelete->False,
     FrameStyle->Directive[
       RGBColor[1, 0, 0], 
       Dashing[{0, Small}]],
     GridBoxAlignment->{"Rows" -> {{Top}}},
     GridBoxFrame->{"Columns" -> None, "Rows" -> None},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{0.3}}}],
    "Grid"],
   Background->RGBColor[0.9529411764705882, 0.9803921568627451, 1.],
   FrameMargins->{{5, 5}, {1, 2}},
   FrameStyle->Directive[1, 
     RGBColor[0.788235294117647, 0.8509803921568627, 0.8980392156862745]],
   RoundingRadius->3,
   StripOnInput->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 TaggingRules->{},
 CellChangeTimes->{3.882976156084852*^9},
 CellLabel->"During evaluation of In[8]:=",
 CellID->877671757,ExpressionUUID->"50d98849-fce7-4930-b5e9-b31ac965966d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 846},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670094480073`16.348255261527893*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670094480073`16.348255261527893*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670094480073`16.348255261527893*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.941670094480073`16.348255261527893*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 4 suggestions\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "1aecc97b-e94d-4875-b371-4225fd16f3ab"]]]]]], Appearance -> 
           None, BoxID -> "1aecc97b-e94d-4875-b371-4225fd16f3ab", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670145543851`16.348255267154112*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670145543851`16.348255267154112*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670145543851`16.348255267154112*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.941670145543851`16.348255267154112*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Found 1 suggestion\"", LineBreakWithin -> Automatic, LineIndent -> 
           0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False],
          "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "6cd8050a-df00-4182-a71e-de354d245376"]]]]]], Appearance -> 
           None, BoxID -> "6cd8050a-df00-4182-a71e-de354d245376", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670211943508`16.348255274470052*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5UVfQD65cObUpQk52JgbOODJnTPPqQ\
2lhuw+ed/FpwYsc2oPrkLXgee6GrSOOMsNBRakhVOKmZ7w8o60JAg4ufv6J5YXRs9Rgelf1YKGSJ3w\
juRq9bB1pD1Zm2JkS6AiMLNMxvY7pHzwaQ88pF8XU19tkk+ySGkrCEKvVcG3vX43FKihx/\
wLc4kdR"}, "ClickToCopyTemplate"], LineBreakWithin -> Automatic, LineIndent -> 
                   0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8dce64f1-ab40-4bee-8e53-c9893aef5e17"]]]]]], Appearance -> 
                   None, BoxID -> "8dce64f1-ab40-4bee-8e53-c9893aef5e17", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941670211943508`16.348255274470052*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/"]], Appearance -> None, BaseStyle -> 
                    "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5UVfQD65cObUpQk52JgbOODJnTPPqQ\
2lhuw+ed/FpwYsc2oPrkLXgee6GrSOOMsNBRakhVOKmZ7w8o60JAg4ufv6J5YXRs9Rgelf1YKGSJ3w\
juRq9bB1pD1Zm2JkS6AiMLNMxvY7pHzwaQ88pF8XU19tkk+ySGkrCEKvVcG3vX43FKihx/\
wLc4kdR"}, "ClickToCopyTemplate"], LineBreakWithin -> Automatic, LineIndent -> 
                   0, StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8dce64f1-ab40-4bee-8e53-c9893aef5e17"]]]]]], Appearance -> 
                   None, BoxID -> "8dce64f1-ab40-4bee-8e53-c9893aef5e17", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.522983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.522983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"],
                     "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/Abstractions.wl"], "Hash" -> 
                    "4d70ca678d9a7f4aafde2d251f99dfd38f171e0d876762c8b53b1803b\
ef00047"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "8bb9af03b494bdbfda99cc47240696d926227871daad347d86cb1a0c4\
e053338"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "2ddd1eefab4153b52e3400a00abcca7e140470119829a4d4e9b693f29\
38d472f"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "7c53fcc3ec16538a74d0e3079e15b85e3dd83c4b8cb08255e6b203ae7\
0351572"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "4190004e2c5cfb6d4b9dfe1479903cc5a2cfa26b8ba3a9b95533dfded\
8324ae9"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "843a4f85a2e10e96bceb3b18a68a720b9274f2fd27424a61e045d6fe4\
e28f7f4"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "006fb7bef3fbd426ebe4c9f46433ca011f4151fa09ed4eecf6d4f9582\
1c11b35"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "cabed78f3b5c5a98881dc47058cb2eb6329bb127b7749c621d90ac928\
5a52785"|>, <|"File" -> File["Tests/Abstractions.wlt"], "Hash" -> 
                    "9ea8a65f7bc5b695f9c3bbb06fba9cf1ba830c0e561f74db5a6a42db4\
d3d6690"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "5ff45a60ddb1290cd3fdabd8cb203ba91134112ac3f239407cb5ee38d\
421300b"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "3fd277d65a27ed97387419f5c32a7699a095c74234aa09a6c4dc447cd\
289b2f0"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "e506fca3735e1b438b8d19fbfabbca2970b2c472123de00c7b29137b1\
80b9b0e"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "81f72bdcb302e7feb4f76078793774e15877c702f61317988d7e5e485\
9016c7d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "ebbef934339d58d09445bd910d5dd0eecb63a0790cc321643e5ea97e4\
31c062f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "a1e23e472a17ae3f6c6afdb4c620cdbb18fc7e1184b4314972fe0beb7\
1c97f9e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DataJoin.nb"], "Hash" -> 
                    "b944fcc29c947934a1d3f71e94993217e25b28166c8eb0b49df653db7\
f89a3c2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "64b2db7c4529ee4fe690076f7b9c3c58d4e3380033ff79c1646032705\
c155381"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
FormatLexicalPattern.nb"], "Hash" -> 
                    "4c1a0ac565b41a864bcf9808236183c8aea81621bb1799940e3501458\
743ca66"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HideMissing.nb"], "Hash" -> 
                    "57c5ce10e05f0a0514f9765ce9fe69272ce4a044a9c205e278c6db6ca\
b68139d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "9374ec1bafae35b5a9736c633252225690d299415998272129fede994\
7ecee1a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "15d56c0de5d9b4879709483958e849691df8bf1b0da6e58148992eabe\
24ac868"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionSmoothHistogram.nb"], "Hash" -> 
                    "647bc36a3957ae85b4faa8a8c27553eafaa5ce18bc9a3b255ee883736\
d8040e0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "b93c49262afa94948d9d46219d8b3ed36379eb6947cae34b94e1b08c1\
0796555"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "6867301c35bd59b6037e7e61f92bb3302fce15e0859412e407f749025\
4df69e5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPatternQ.nb"], "Hash" -> 
                    "875951f3742cfccd2c3606378d7c79740431e3d6d525bef719255c84b\
a076061"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "0279029769d6932c47f67583546b9b9f405ad05bc6f0a6cf9cbd14816\
f9f7977"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "093d36457bc2a12bc8e592aa873a4cb68e47536f3c666032686d2f9da\
d1b2072"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexigramCount.nb"], "Hash" -> 
                    "bca9e2588b05d4ff8cb9a7af00f0bd940aa40c75e100312276ee91b88\
17a8536"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MaxCategories.nb"], "Hash" -> 
                    "c0fabe0b6d6f3267019a6bca725d840cdb9cae229693c07df66a1619f\
e9c1110"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StopWordQ.nb"], "Hash" -> 
                    "a53671e2dabd7b57490285cb289b469beeccc61a73f0f10e3adb40eda\
9966461"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SynonymToken.nb"], "Hash" -> 
                    "d1ffaba3d170650a45f3bf35b5f9f73d6d0d10f443deea4753e297696\
1b881de"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "2206ed2763d260a895d830c579970c75f96c6a5cd5301e421ae14f066\
a23d99d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TypeToken.nb"], "Hash" -> 
                    "e2e502faddef64f6f2856b675fca777d03bd5beb8448c1e644d1152f4\
24898a0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
FilterableProperties.nb"], "Hash" -> 
                    "1b79dd5d13593e85c5c16cc3527271c5675c390271c9541acfe4d0cf7\
66d3322"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleParagraph.nb"], "Hash" -> 
                    "ed1f89e278e03d66fd34ffd5d4a7a7d5d4ab960798cd2db47a098a93e\
578280f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleSentence.nb"], "Hash" -> 
                    "cb078c3aeeec5130017bf682f667d291824454cbecb190185800fd580\
b95bd4e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleStringExpression.nb"], "Hash" -> 
                    "f5a683c6ddad68c6d8f6e1c14ea42f5bfc2417f438d0facc56fdb7bab\
90cb9a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "690911783fd720636f3819c8cf3bc3dee0e7e09b5519ced50ff3ef75c\
19048ce"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 42], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 42], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4d70ca678d9a7f4aafde2d251f99dfd38f171e0d876762c8b53b1803b\
ef00047", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8bb9af03b494bdbfda99cc47240696d926227871daad347d86cb1a0c4\
e053338", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ddd1eefab4153b52e3400a00abcca7e140470119829a4d4e9b693f29\
38d472f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7c53fcc3ec16538a74d0e3079e15b85e3dd83c4b8cb08255e6b203ae7\
0351572", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4190004e2c5cfb6d4b9dfe1479903cc5a2cfa26b8ba3a9b95533dfded\
8324ae9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "843a4f85a2e10e96bceb3b18a68a720b9274f2fd27424a61e045d6fe4\
e28f7f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "006fb7bef3fbd426ebe4c9f46433ca011f4151fa09ed4eecf6d4f9582\
1c11b35", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cabed78f3b5c5a98881dc47058cb2eb6329bb127b7749c621d90ac928\
5a52785", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Abstractions.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9ea8a65f7bc5b695f9c3bbb06fba9cf1ba830c0e561f74db5a6a42db4\
d3d6690", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5ff45a60ddb1290cd3fdabd8cb203ba91134112ac3f239407cb5ee38d\
421300b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3fd277d65a27ed97387419f5c32a7699a095c74234aa09a6c4dc447cd\
289b2f0", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e506fca3735e1b438b8d19fbfabbca2970b2c472123de00c7b29137b1\
80b9b0e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "81f72bdcb302e7feb4f76078793774e15877c702f61317988d7e5e485\
9016c7d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ebbef934339d58d09445bd910d5dd0eecb63a0790cc321643e5ea97e4\
31c062f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a1e23e472a17ae3f6c6afdb4c620cdbb18fc7e1184b4314972fe0beb7\
1c97f9e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/DataJoin.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b944fcc29c947934a1d3f71e94993217e25b28166c8eb0b49df653db7\
f89a3c2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64b2db7c4529ee4fe690076f7b9c3c58d4e3380033ff79c1646032705\
c155381", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
FormatLexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4c1a0ac565b41a864bcf9808236183c8aea81621bb1799940e3501458\
743ca66", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HideMissing.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "57c5ce10e05f0a0514f9765ce9fe69272ce4a044a9c205e278c6db6ca\
b68139d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["42 total \:203a ", ""], 
                    Style[
                    Superscript["42 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868905`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868905`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztfVuPHEeWHpt94f0mcbSz8mXb7R5jPJ4mIy+\
RmaGdXapZJCV5RKnFbEm7s7sYxbW7ltWV5coqki3DwNrYt8XAsGcf92Hgd/+BfTFg+w/\
4aRfwiz0DY+EHW0+GDRjG+IvMrKqsqmyqsrpFsclqCOpmZWbEiXP5zncioiLNUnr+\
EX96N3mmU7Oa3vig3dPdTlf3eK+ZtPGxWUrXHiX2BrOSrnzYTHvmbLq2y/fwSXwu7kup0zS+\
FPcPDnj38H3NVbz0B2Y5vX7vsM0PmvJhovotbR8/\
O3x8Oda99OruYUenuvdF0tHtzc109QFvpXpw9ebgqj4QWsUQR29uxquP0P4h7rm0qw86LXyYS5g3vJ\
xe2+FtHeuWlr2kO97nyiOIMehkNT33Xrepxh8e/D5nG7GX1tILd/u93kANF4sR5e2+/eD+\
Trf5BCJ88aCbtHv32+qRTpN+V+r4woP7d5u9A95J4+uFYvDQxxin7lrhrSj3dIsfapVezbt40G9Lq/\
GjtLOy2+3r4TAubnc6mnd5G8pf+Shpj65cuMtTHfcOW9qcmRj7hftPeKvPoZn0wna/\
lxzAxHJ4de2h7u0nKr6409XQba/5pNTodqu51z7Q7d5AoelaQ1tPGfwe3frBAd/\
TcfNLDY2dKzQ2fGqs39Xd5oFOu2eyn8vvDj/Bg5cb/W4XDX8GgXV85QH02+Cd93Vzb9+\
KsLqTPEWfS+nNbZEmrX5Pl+9Przzke+2macrMhxu/hrnPP+jyg8yoy+\
n5TD3WfVc3fvkXP99AgxfuNbvwGTtmXH/03t1G0kq63d/Ifv7qTvfN7OdXd7q/l/\
389Z3Gbw5HfDnudZudj9sftDv93siL84tXGxAdgu1wpZrtvcnLFzOxMnkm7Hg5u/KQd/\
ea7bTsxvZ340zjzOTfR8uyNnL2QTtLw9+\
D2F6ejO3JICseja9t7HDZ0r3trtyHvjbilY131jfii2jnnja83+rF3yl8/oOePthut5McS+\
Llr372ixJ2HG7c/jSFB902vPll0v6SH/D27Xv6iW7B5bu3nyYtAxXc/lA/\
gyFbDbh1evtBdutPslvHLoh+s6XKl3/60/L1LfcWueXd6mSSbwzRygp4HF1c2tjF4FrWa+\
fWA3oba7sA2fiiQ25R12WR90W8vJFuxOdSLZO2SuMLG3H+10Z8/pM+b/eavcORR8WH7R5/\
9iDpHqTLwN7xsQ7uul44xFRcD+6IzyEC+\
gfttKSePIRXPtRmdNsKhjt9TwW8XLQfAfN0T08GwbVCGCthBhwzyzLdz+\
wCDXqN4RQ2MmfutXG2fmclVF6ZQOWb8X7y1IZte6+\
xD0iXFlUnVXTpoz7SYBdw8Hjq2lWkIQAM8KuZWrhbHlk5azrzhxxiJh/\
9ht1geTfpvLwOcN3apNVs650kbRapNzfwUmNpeFeed78VvtBoJencfGEy0SwIw4IwzEEY1haE4bUmD\
McY61sbd62Oc+Pn4ZJ0D+cf9lQdGq88aALwUW1W14Nx6wU6zEZ82Uqz3d3rW9iLl/\
7oxBR5vQighxwYpdPe/CpcLfnQ4K+1ikr9wnilvmVzS3yYou0vPoIAWll4+\
AJSPQZ0D7LaZpoX6dtvbMWXPmgjpfLWPd7j20tb8arVTWp+\
kLe7fXYrt53VSmbDt36su23dug107lkKBNnTW09buO19nu7H7/\
oqJJIHYaQYD43PuVHaVS51DGPKKC8yTuhooqIwCANXRoJ6womIJ7QhhPjh0T2WbVjuMRKCcYMWfOYL\
JYzijEnph65PAhYo5gauG0ahozhXnh+\
qKJDC4UT6mlDP86LpHr873uMO7yENtst9KuEatOyZgPhEMCYCIVlIhOd6zI8iTgJOKSOhw9xIBoy5j\
hBRaJTPqAgJcaf7vFb0udNKemPDc5VSjobzCN+BrqirPZ8Qjv+ElDzUjg+\
tEcdhkcu4r3wNYZhnXOZFCkow013dKLqKOTx4XJehpJ6R0tPSCagX8dBXRHskZNqhIqLaUyrypC8iK\
UjkUqoD4RKP65B41KFhxbjeLDr7tNdswdHGu/\
MdZo2uXUmlEYHyBXwEIwoZI56UlLvScDcQkeAeZ4JRGAxOpCGE63PNpru7WXQHttBUWWSNuYrvcd9E\
aFc7RDMYTQvrfjzAUF0Y0g19A8viF9oP4Kc+VYHRkDAy8Obp/t7eRZSlA09Biu7LXr+\
r0Wlv2CshgREhHNwzQvluoIX2JTN+4Hue5DCdgWUdwwnTMJ+\
WBoowjEauIx1HeLQiJMZ6HUTEqEfJhVZhZOAuUCKLoshRiAhCYTdXi8BzmRCOG4ow9JkMXEcxwiV8l\
XKKWDm6x4moH/XINIcWqQmFpPA/\
apj0hBB25JxJ4wgeeUQSTQPHwKkE5QH3XSV85akgYKTCknmPY4Yc9UeN8dEGUQrjYEQqD3EvlB0fkI\
Azx/F8x3G5RCQgJEkoBdXahoTreISI6f7eyPsrgn18dJ51iVAFcJxQKxZ6UQjXNVR6Lg8R3jAdlfAZ\
D3hHGA+kD3X7oVRuxIAUFaN7M++tHBWj7jSF3iT3Qo9qR/\
heJCKF7gQwQEjuWqBxLcA5rqc0ITIULnO80OKoYILo6e5+eC+RWbbLNHn7fnuv1Uz3b7/\
Xbyo94UdtMQoX2MoVSgqPuDo0WvgmDAiwlHlwHEBCFIYyJK4JHM8J4WYq1FT7EZDPCWSopuV4p1qOR\
9pocHypd5Cl0tvx4YFIWuntu0m/\
rXaTx7pdlkoLhBLzEDxM0UgR5vtUKOYQRRXQSkv4NwdkEeCY6yDIIBNnofY9R5KgChDv15KqAal6RR\
L/0BYrEnorC8gd7Xoa9uFOyDVyhAyQBYWPQIOjIvAiI4HbTuTDto7PANKaCC1CBznEsArzRbUEtKn8\
HyfNMaUJaAnA7jLJgK7wUwcRg0TMfMagpVC7VLiREwQy0oIglSqDBKBEaCLGPVkB7L9TS6b7zzq8rQ\
aZtCRY4AvAQCh96jKtfaMBBiQMACRAEAn7+ho5mhDPMyZkSEt+\
QDwXUCYdZIPImRbsXi3BLJvmvYlMX5LPl+AKXNKAIv/\
yCOJKwyIkPy9wkAojDuBzApvfEQEMSKM9ShwfoeED3INgWr7friXf+\
4jQh800RYVZFosiU0ubxAg1IAPUQcYIA3zErAbd0JXa58T3Ab4uoRqgLgMlAiSGIHIQONNi/\
aiWWEdBBpDBB3kQ3MDzKWAeYAn/\
9zwXBY9LYVzlQksOZeArFsEgr9L4JNRSa4cfNzgLue41U9QNdpLN8qmygA5VNJBEaaqY8AFlIQAk8p\
BudeSzgDnKRAL5iigeaBo5fgT2ppFPQQhkFFSwxZ3jCRgfJElv/\
32Q7WQPNc54bCCdegGHdACSCB5oONJsJN0Qvq+\
hY26dIAL35J6wdExHEbJGoCLQUl2RdurhbyHrQ94ZhxIwQMuq0T/gwwfTVz4igKlIeFp5gQe6CA6A/\
AcfAKVDpgBblA4wOaC0glz87jxSVWFJFIQecSQcT1HQYOKFOtRgHMwVwkMSM9AW1QQJyndcDVYALsK\
IS32gHdMVkt05hmSfjKXSkDJwPEQHKK0EMYBdCTSFlCnhg+\
DwngN2HSgKINbGFg6USmQIZDLcWAFz784j2oiglmQjLpIlWEXAFCoHyyxMENLIo34AOgGiSihXhAoZ\
AGoCwJ8UCnHhBIYBksOKkm0ugxYpdUwy5sGffIowQDJ1BZITZS5iIASPR56PkGWpFxhPBoFNC3AA5R\
qmuHLAA6vKkXpZy0pmgzJL+WMxIDlDyowiQSjIugHvRLmLKpQYAi7iE8598DLQN2QuB/\
VnoDVzBHh4yCNIfFzBHvJnDZTwe0m3OY6/koAkgk0EKFugDxSGoKOQNnSpinxLPxii0nWBdJ4kIfw+\
4E4AcqmRWx2nAjLqCfZxx97FW1OszUcaQiaNPEsMoTHUBATlTgjMCCVU5BNkT/\
iVMKjtJMpJ5rDA9SmTyqD+qyi9WC3B4l7S+\
TzpqrGo5DAFSJBrS4dQ0AwMIooaArTdD5gAmZQycHjoGWLl9ThoHMTmjAUgIhVRWS+\
LxoftpH14MKUs5RiYkXvKCUlACfcpSjlj86kNOQsTRDnE+D74v+\
Y2BnQWv0HmYqqCQdZDi93kaJB1XRJolEOBp9yA8IjBsVDaUbCf0Lq8YZbvUqkooFij3OIo6A2Bn6Fa\
YVXMo54h7QzXdE3gomZyDVdKm8A3gYEZAwEUQxkVonJDTaiAqyLyfSQiHfi+\
chzqGpT5EYt4hdvXE8p61pRQwnNdEGgjiesHGiCBItsh0nUi4H/\
oMgW3oi5cPiI8pIK7FKYVyJewJqrZCu+\
qx4U28Qysx0VL73TtPGpvAiwcETKFqslBtHngF6CUqNuQPiEdihEK/\
UkPIWELEwr2K432FZEoAgMFRlcBrzUFLLPIWHefNOW4gG6IQhokAiyW+07kmgg+H/\
JQCTf0HHAdkDShwSxR2fvcRNCenSbyBMIGeaIiM9WLg818imyHdznSQGd/\
zOUQpBGzzFoTO4dhlAdYgzZ9biW0vwVDtcystQEbISfwNOiZhpEbkYoytB7ZKGSL7RodLo4lAYEiXX\
pcA7+one5wQmECqC8IQtBvKBIlM/InSmUHpXpEUV9Bcjt7AObkV8DHe3OJli2Vo/\
Lr6tQy3bKIhvIA5VOgkKsDW5tEJtCOdHzAmWuoMNL1ndD4Hgp8wyV8ERV0KKBSkqXaaRHDahF3+\
z0kST5Rsnz8xHqbfjrGHhlhjhNGnlEhMM7SishhMpLAXmmBloBMEiYoxadaUWKMB6aGmGEEqKK34qv\
brVby9L7dBpetCGYr0lvx5WKKPd7nHbsK+PdLk/TFzHwsEZ9f2C15upvdtr28NVh2SJfRbPY/\
jHX9qGd/rA/vgUAd2iXxikdzZR1xyY6/sWRW0t86qvUPmwfNnlYQ4Ejh84X/wRi/\
9xw585Xf7Mal9O8ddeN2LznIbuouZavIH757ggLO1NKRun6UPM2NVHLCrx9H40eFq8026mzQf/\
LP38Xd1/M1Oa0+aJsmfMka+exw4X1oyMbN6ntHuzzsTUtH3FRsKRitCFkR7e7QkqjbaZpIPH+t/\
BkkTtfyWIdMN0qXPssWEic+\
zEuQ4ZJZHry5XkZ73qY6GKj5qJ4bP4BvxysPdY9vn9mKL8BEu7y7p3uNmwjA3PTFBxe34tVFKC5C8R\
SE4sppjEHUDPujIdywM13ZfiiYKquj7U03h5/mrpBfgA0v28nr8p3X7AcTN12Ik27PdpOO+\
rlqPyu2+iTt8oX3m6gK2na5PX3IO+nKR/1Wayu++GlHoYK2Q2kspWS2dfOk3+v0ex/c29wcLLj/\
cLYHOxAWD50ZX62f8eEnO0m6uZntdKvz2P58j+\
3hQ4i6nF4Z22xQ2qeUtebM1BrIIWA0v2Y3VNzTnVZyaFbT1Xwf27l0Jbv01tRWvZVsLwZ+2y17+\
H1xtFfCbup6mPRTnYDF2U1d71lu3pTp9La44Y61xtpzdhNCsBjMUKuul/\
38h3831uooJC7gs8MP7baU4s5f3bFb4XaS1uEe2iltGC1+57vZMoQ4/4jnUyONX2f/zjfENX79/\
LtmaWiGp2fq6+\
Qamm1oxzURPpzNCzfjFipLuyU321l4a6aHWgn6ez9pqTnAYSqxpytItml8fkAN8tIgXs3cuGqD5eSu\
QFvlALeqdndezp46ajvhar7LOPt7pbE62kx2F+Lvde0K67hjm+znf9553g7RbEtxen5gpa8N18v3n+\
Dx93lbtbL9pNeycY82uo5FdJHHzxYYMfxnIU22YdRu4Rzbzvmv/5X9+U93uk7281/vdH8/+/nvd+\
LzHzbbj23fE/tzh+nvctZ1Az7yGPnI4uXZDwyUEs5kd7mv5ePsu1h2X8QTZPCau7DMWbM2o4/\
1s5yVfcWqZif1ElW9zFQvIdXMQ7XD9dsJ8AGpP1WoVBC/\
ojzKS54FMj0PmQqKPECmAWNeINMCmV5eZCrmFE4XMmVzsq84Ms1U6tRDqGL79hCihv9eYNQCo14WjB\
p9w2IZBVHhoy83QlWKnE0zF+CUfyFrdnQaTqW+1CB19rng9DXfCXmZ7bl8hAsW/\
y5mRLNJw7qWbfzopE16fvLrtpUdHG2o438r5zSbMmMS85lyOPP/\
LVh0wImuxB3eftBNDrZF8qRuRE58Q+T0mfHsqxqRx/3W2mk25esYkUd+p/\
D0GXL5VY3J436r8zSb8nWMycnv3J4++\
628qqF43G89n2ZTvo6hOP2d9NNnwdVXNRiPeyrAaTbl6xiMVWc2nD4brr2q4XjcUzNOsylfx3CsPNP\
k9Bnx3Ksaj8c9VeY0m/J1jMfnnPlz+kx5/\
lWNyuOeunSaTfk6RuURZ2KdPjNeeFUj8rinkp1mU77GETl5ZtzpM+\
PFVzUij3tq32k25esYkZVnKp4+I156VePxuKdanmZTvo7x+\
Mb0maOnz4SXX9VoPO6pr6fZlK9jNFadyXv6bHjlVQ3H456KfJpN+TqGY60zq0+fca++\
qnF63FPDT7MpX8c4PcaZ7qfP1Nde1ag97qn6p9mUr2PUnsw7D06f1a+/\
qgF83LdOnGZTvo4BPPc7QU6foW+8qjF73LeynGZTvo4xe7x35pw+a7/xqgbucd9adJpN+ToG7om8U+\
r0Gf3NVzV+j/tWr9Nsytcxfo/zzrXTZ+ubr2rYHvetd6fZlK9W2K4Uhj57Eqee4R+\
X4n5Hd1PZbXZ68RXfXe/Zt7ev//JP/\
nI9PmMGx6HNcOPinLTFOWkzBPgLgYTqc9LOvswoVn1O2vNgaz7kuWCPKBvE9NgjYwG7k/\
38lzvTfzTOD9u61ECw62e9h7rdN6ujVuy/M4D7O/F+8nTdWX+YdPX6I/zJe+u7+\
810PTtYDWO9kn9D7/4zLfs9C26zWYerP+6nvewtFymiMwfKRcSdlDPGK7BVip7OP+\
i3ZZFY3LqWuXtonTpuJT37PhdTfoHH0IOuWFe5/4S3+ryXdMfT38iN/\
m7mRnToRunCj15XP1qt6UfpBdCJ7G043QqXctYf6Ke6u4Cm19mlfn0caPqtApqGfrTAptfWkf5vXUc\
acrKZzpPNbj3ykNo//Jf//n99/w+/\
upNeHtSLtoUq2ld62c40i1tKzxVvL8L1NxrJQcd2NXoVZRrNpmg5anO329zbA/yupauf7zelPff/\
3KftlB/oT2ZU+GaLp72PC9O9EDY+eh/SapwJOvew0x/NPsTG9NN0rqfzE9+\
rLWiK91AdT6753aDofr6BWYPchWEfD+ules3ttRLBW7HsJq0WgGkYbt8g9Nk+Pm/\
29s2FcYlndGKM376wbXPG+zcHDwy6mS3CBk/\
ZmzfrROXgoXrdNdMPNTf5AeCb6Tv1uvug9HC9bvezZ/\
LX2mUvotvOZp3WHvKe3K8FRqVhX96274puA9CfjB1sPv4OhpmTS1nGT+\
oavfbUVq6927OlvVZrpLqaj7xkI2kf1h7J4JEXNRJvpqfS8rsb7VT4bLgs89eIjr34sS6+\
LNUcWPnlk7WfnXxJZS0M3edPtN3GZXnl8kdJLyN9vNnqd/UnM88jKzSQ6l7xil/b3JyGnY2MNNPBG+\
+GUiP1PehqXd8Bs1fo2fUEu49tuFyynE2j4/8fd4se5lRn7aCrr4L0HPrZt+9oLdVeUMjF/\
P2pdlzxalaJmfMjlrl6/5/0eWueDJjPu+brH/M3UsoFy/\
jzeI2NZZN4Lf9X8WafM9NVpl20CGosWpTe9booMr/FpYu6tDBe6+qDYjn/\
a6ctbMCvHCfgZ82W1tb3Dzq9w286W86Bpjntq8155qGYM8GW3TOxgK0FbL1esLXMlao7e5/\
DVxa99YGrXpE35sRTRd64U4/eTTxH8VuTQ41KsJUxGleaUpuncIgvbKdSt9UEVMUrlnZXR+\
lsAhc7ItDKIjy/\
vWArWffrQ66Us07Csy7e05WudfmRfqK7qV5fuNir4GJlM79oH0tXPkqynXAj71pDewu/Ov1+\
VZh2do8qM4bBIk7VzqS3G0nncB1aaloXWu8l641WsyMS3lXTTrM0IyftJY1+t6vbvUG7M3qOhCy2+\
1mLuNr0pzzyt7KR28+/ZtSzzlgPRz3HpNiJK6jSEcYMvwPf0iPLN9vrH+mn6w3dqlirn9/\
ws1lIotdMnhdj+XzomemfO+wXYvkT19AoqwwXy+1m5Af8oNk6jK/\
FSb8rQTd4O13f6Sajrdj2JrsVu3F1/MHPdXNvv5eu7rR4sz26/V7zSdO+t3Z8kf/igy7yV77APrYu/\
3/+t/35m9HLY8/HHS6tgw63Z55plPZPD7cC5FsAqhbwlycW8L+\
JYV77sNnWd7uaP7Zrl812sQe1etPAmckdBR/1D4Tu2t2z6eSDV+\
00rbVZNpbS5WxyfDYfauaT8J8Ml7lLexZm89xU9/\
qdz5r6aTbnVCthI51Ur6rnu9Kzaq7eMLLqNFH9sS25NdTRO+jYjzfTc5t2WSPbOl/v8cF0/\
mz5vFgKmWcNZPl5OxLqjbbgjqW1nJrjnXEfFvAN4Z5fM0sz08f8MXtlQR9Pjj7W9OhyUM7nKbmrFQ5\
a32HqRvDKR/0sqcwDhjmSfqNbWaZDbp4YSr9TegjZsJvq4sLl0oX34+9+\
3yLNejtZbyXtPd1dt4CBzPgP5+l1/MtF6dXdLrffJyq+\
ufiCNgKNifBmkbRy6P8MhEanpVRaY4F7s5d07vJu1sUwFS7NmAoP+GOdkReFJtDAPyg9Vdwag3/rL+\
K+GGRMAZvVS5qLr1B9m7j5dd6/VM/7C5vWQsVNkfRA1KfcFH8+0p0Wz76ZOPhzxrLrIPtq4/\
Dbj5ubk3tbzdmX9gtfBdSfsfsZeftxtmg39vXHl/i7ajDU4OTtH8y8Hrw5HGv5+\
dmE7QyXYqramGfZZdjOWiUjRQn3QVt2dVaIHXuva9018DpKrbUBcmzvYm3dF10dY7vmXKaqP8IXulV\
81pLT5tlM9V1wpzomnnFv86D9+63caycxP8ebpXTNzj/obuPiJOAMQ+I595Si7vszSQWmYNu7/\
0zqTm9yIRVX8i4HHWZbAmbE/iFtGRCS2QWaMRvOmYTmTl5n0xtFVvy8yzsd3b2bPLO7RYoP83+\
d203wB3R3IX3rXl6If1H8zqZk2r3G2UH6i1eKnZormW/\
Xze5FGwU3r9VGQW0GbaxmhG7YSO2Nk4Ukn9kt+zUleTLchJ+\
38f4cbeyPt7G2m9HtYSv1SXrezoW7A0o0bGouLpW3dr6EeisvbN/HZVi2rXhX2aObZi2yvhliP/\
S5LF3MG4RnBidmlA/VGB9VsQe4+eXgco19veNfMrrY6Gp8+\
umnsFq96nBqUnhp4tLRE7hj3Vy3C69PtPqMd5tctPQI/\
er7wto9sPfkcCjC9Xva8H6rNxQyHtyxlH53gF3Z0RzgXb0BiC2Npqdj3dKyl4k1MYt8/r5qVl54I3/\
GjrmAw7TYbXapOIU324M3Om1h7VHy1CLraFJ9bZfv5Vh7aVcfoB7p6fyf+XEkf2tj7Eiku/\
1mSz3SKcaZbsQrG++sb8QX0WYx9vg7pW5LJ/Isf/\
WzX5T6mpIjXvqnZjW9MdRO3tfYnSuTEsfn4r5E8ZQOx2opVLz0B2j0+pg7lcYzcN+\
rGSWEQVDq2yQ2Pi9/c3BVHwjEc7Erf/UR2j+cVNTScLn1mj2hJjdI0h3vM7dW0clqes761vjDg9/\
nbCP20hrcvQ/cK9QwnhbffnB/4JIPujD8/\
bY1SrYWEl94cP9us3fAO2l8vVAMHvoY49TTXCDvovSd0ErtDBYeCkcdHa8zsWBdCtCp2H3uV0LXHur\
efqLiiztdDd1aulSxRjRE1LWGtp4y+D26dXS00dg3O/Onxvpd3W0e6DQ/8ejM5XeHn9hpuWKZL0Oh+\
Ep2xA/vvJ8tHNn7duzB1rjv5rZIk1a/p8v3p1ce8r120zRl5sONX8Pc5zPmlrv7+Uw91n1XN375Fz/\
fQIMXir0dT/TYmSS/kf381Z3um9nPr+50fy/7+es7jd8cjviy3Vvb+\
bj9QRuwNLX4VGDCDld2p8rk5dIi3oQdL2dXjjprpVjAm1rMq5RlbeTsZ4coNDcaXdh4iICHjefGnnh\
rHNDWhUW0dYmiuKWB+utpDioG5cPhrY0Tw9FLG7v2ACnrY/Pj5vJ42ysDrTi3oiBihH4RL28Als+\
lGtW5SqGuOP9rIz7/SZ+3e83eKF9djA+hg2eWyaTLAMrxoQ6zWmG9qSAcMrFzxS7nknZKX+\
oeUdHiC+jj91RgwUX7EQAK1pj02GuFMJPHiX29LNP9zC7QoNfJleyv7bVcmsza2XO+uX7TriXne+\
kb+9we8GXX5SdXqp+3GI2cATQA2DTttE9+ZFJu5azpzB8mF6pfiBsso8Z4eR3g+uBcgsF+\
lyH8LZX4W54kv5Xk3mgl6dzJfTIrLLL7IrvPkd0vLbL76cnuxxjqjY2H/FnzoH9gj+\
w73oAry8BpkZ6jF+qEoXs8vSz9MP7Z0sbtTwGg6W3Dm18m7S/5AW/\
fvmc3tAEju7efJi2DkBl7l9ztB9mtP8luHbtQ6wjh3WTq+O+NeOmfnZi1rm/\
sdBPr8VplRyyepLGWv/rTn1d8/LJpc/mrP/83i8mFxeTCgn68yvTjBCYXzm9sZ446P/\
s4t5HNj54cr1jb+MYoxQmkzsWEwWLCYDFhsJgwWGTsRcaun7GXx+NokbFfdMY+xihXN3B9fq2/\
OapKP0p6WiTJ440Fm1iwiQWbqM8mRpltMlFX5MFS8/HlIt4sxWhNUoHn7ceJl/\
4Itw8nSG5MxfL22a14LUfmeDXD1614xcIiHhuCVPejL975t//5F//vTnyuQLASbJ3kTpjlr/\
70z08M+N7YyL9zmL9ixb7ten4UXCInKNaOBtuz796GUbTS6sQz0KpDyC2bfb6H7NMpersw6HcjvjYw\
LLy0Z5rPvvkk9J2Juc3jmsM5Mcne2oiH6wwvmWhvbsSPmyDsL5sH/20wiu6e7n2ezw5/\
htyCDvNsMr+AZx3/ZeE8Nys20i1Iz4L0LEjPaSQ9b0wH8/bFrfjCcBl4jOp88OP/9j/O/\
02J6mzF1yZWUUtafQ5Fiv9s6SVaW9uKr45n4O2lrZdLwm+Ep27F1ydJYOMMPpykYGOt5DNLv/\
9ufK64bSt+s4K+NKDBm1XkwV64MZW6bb/Xik0Tg5wV/\
6MaWyC24rePzrvls1NOlJKf4AL3MbPylY0dLqGXRTpepONFOj616fhSKYq3V7fiK/m/t7tyv/\
lEx09PMCVlcFq+/NOflq9vubfILe9WJ+v/SELwk7/8Fwf/8dL33i3llJuZ8Lnc+QpA0s1et5W9m/\
uPX+AIkNUzKR7ydtPofB2q+LqSTfD5u1rND3JD2ByaiTgU9a38dLXb2yLtZW8htufDPW1tFa+\
mftdXIZE8CCPFeGh8zo3SrnKpYxhTRnmRcUJHExWFQRi4MhLUE05EPKENIcQPj+\
6xPIpyj5EQjBu04DNfKGEUZ0xKP3R9ErBAMTdw3TAKHcW58vxQRYEUDifS14R6nhdN9/\
jd8R4HhKPUpxKuQcueCYhPBGMiEJKFRHiux/\
wo4iTglDISOsyNZMCY6wgRhUb5jIqQEHe6z2tFnzste5R9qStXKeVopD3hO9AVdbXnE8Lxn5CSh9rx\
oTXiOCxyGfeVryEM84zLvEhBCWa6qxtFVzG3pGGss1BSz0jpaekE1It46CuiPRIy7VARUe0pFXnSF5\
EUJHIp1YFwicd1SDzq0LBiXG8WnX3aa7YALePd+\
Q6zRteupNKIQPkCPoIRhYwRT0rKXWm4G4hIcI8zwSgMBifSEML1uWbT3d0sugOeNFXGCcZcxfe4byK\
0a18fz2A0Laz78QBDdWFIN/QNLItfaD+An/pUBUZDwsjAm6f7e3sXIZQOPAW5qy97/\
a5Gp71hr4QERoRwcM8I5buBFtqXzPiB73mSw3QGlnUMJ0zDfFoaKMIwGrmOdBzh0YqQGOt1EBGjHiU\
XWoWRgbtAiSyKIkchIgiF3VwtAs9lQjhuKMLQZzJwHcUIl/BVyili5egeJ6J+1CPTHFqkJhSSwv+\
oYdITQtiRcyaNI3jkEUk0DRwDpxKUB9x3lfCVp4KAkQpL5j2OGXLUHzXGRxtEKYyDEak8xL1QdnxAA\
s4cx/Mdx+USkYCQJKEUVGsbEq7jESKm+3sj7294lke5N8+\
6RKgCOE6oFQu9KITrGio9l4cIb5iOSviMB7wjjAfSh7r9UCo3YkCKitG9mfdWjopRd5pCb5J7oUe1I\
3wvEpFCdwIYICR3LdC4FuAc11OaEBkKlzleaHFUMEH0dHc/\
rC613us3lZ7wI1v4DcIFtnKFksIjrg6NFr4JAwIsZR4cB5AQhaEMiWsCx3NCuJkKNdV+\
BORzAhmqaTneqVXy3bUHmewmj3W7LJUWCCXmIXiYopEizPepUMwhiiqglZbwbw7IIsAx10GQQSbOQu\
17jiRBFSDeryVVVpoVzOZDuztAQm9lAbmjXU/\
DPtwJuUaOkAGyoPARaHBUBF5kJHDbiXzY1vEZQFoToUXoIIcYVmG+\
qJaANpvb13GUZRLQEoDdZZIBXeGnDiIGiZj5jEFLoXapcCMnCGSkBUEqVQYJQInQRIx7sgLYf6eWTP\
efdXhblScXCsECXwAGQulTl2ntGw0wIGEAIAGCSNjX18jRhHieMSFDWvID4rmAMukgG0TOtGD3aglm\
Fy54r2LyY5CiJLgClzSgyL88grjSsAjJzwscpMKIA/icwOZ3RAAD0miPEsdHaPgA9yCYlu+\
3a8ln36jysJmmqInKYlFkammTGKEGZIA6yBhhgI+Y1aAbulL7nPg+\
wNclVAPUZaBEgMQQRA4CZ1qsH9US6yjIADL4IA+CG3g+BcwDLOH/\
nudS13UpjKtcaMmhDHzFIhjkVRqfhFpq7fDjBmch171m2snnOiyfKgvoUEUDSZSmigkfUBYCQCIP6V\
ZHPguYo0wkkK+I4oGmkeNHYG8a+\
RSEQEZBBVvcOZ6A8UGS9PbfB9lO9sDyx2MD6dQLOKQDkETwQMORZiPphvB9DR1z6wQRuCf3hKVjOoq\
QNQIVgZbqirRTD38LWR/yzjiUgAFaVo3+AR8+mL7yEQFMRcLTygs80EVwAOQ/+\
AAoHTIF2KJ0gMkBpRXk4nfnkaoKS6Ig9Igj4XiKggYTL9ShBuNgrhAekpiBtqgmSFC+\
42qwAnARRlzqA+2YrpDszjEk+2QslYaUgeMhOkBpJYgB7EqgKaRMCR8Eh/\
ccsOtAUQCxNrZwoFQiQyCT4cYKmHt3HtFGBLUkG3GRLMEqAqZQOVhmYYKQRh71A9AJEFVCuSJUyABQ\
EwD+pFCICycwDJAcVpRscxm0SKljkjEP/\
uRThAGSqSuQnChzEQMheDzyfIQsS73AeDIIbFqAAyjXMMWVAx5YVY7Uy1pWMhuUWcofiwHJGVJmFAl\
CQdYNeCfKXVShxBBwEZ9w7oOXgb4hczmoPwOtmSPAw0MeQeLjCvaQP2vwnt5Lus1x/\
JUEJBFsIkDZAn2gMAQdhbShS1XkW/rBEJWuC6TzJAnh9wF3ApBLjdzqOBWQUU+wjzv2Lt6aYm0+\
0hAyaeRZYgiNoSYgKHdCYEYooSKfIHvCr4RBbSdRTjKHBa5PmVQG9V9F6cVqCRb3ks7nSVeNRSWHKU\
CCXFs6hIJmYBBR1BCg7X7ABMiklIHDQ88QK6/HQeMgNmcsABGpiMp6WTQ+\
bCftw4MpZSnHwIzcU05IAkq4T1HKGZtPbchZmCDKIcb3wf81tzGgs/\
gNMhdTFQyyHlpUrgYN5iNcEmiUQ4Gn3IDwiMGxUNpRsJ/\
Qurxhlu9SqSigWKPc4ijoDYGfoVphVcyjniHtDOR0TeCiZnINV0qbwDeBgRkDARRDGRWickNNqICrI\
vJ9JCId+L5yHOoalPkRi3iF29cTynrWlFDCc10QaCOJ6wcaIIEi2yHSdSLgf+gyBbeiLlw+\
IjykgrsUphXIl7AmqtkK76rHhTbxDKxnF292unYmsTcBFo4ImULV5CDaPPALUErUbUifkA7FCIX+\
pIeQsIUJBfuVRvuKSBSBgQKjq4DXmgKWWWSsu0+\
aclxAN0QhDRIBFst9J3JNBJ8PeaiEG3oOuA5ImtBglqjsfW4iaM9OE3kCYYM8UZGZ6sXBZj5FtsO7H\
Gmgsz/mcgjSiFlmrYmdwzDKA6xBmz63EtrfgqFaZtbagI2QE3ga9EzDyI1IRRlaj2wUssV2UzwujiU\
BgSJdelwDv6id7nBCYQKoLwhC0G8oEiUz8idKZQelekRRX0FyO3sA5uRXwMd7c4mWreSMDiIti2goD\
1A+BQq5OrC1SWQC7UjHB5y5hgojXd8Jje+hwDdcwhdRQYcCKiVZqp0WMawWcbffQ5LkEyXLx0+st+\
mnY+yREeY4YeQZFQLjLK2IHCYjCeyVFmgJyCRhglJ8qhUlxnhgaogZRoAqdj//9dIxY9tpmtiDq6+\
VP+slB+larhdzNr1RuvRZtiQw8WFO14aroflAM3GH60IVHQz0clTPjR80lrbPbMW/\
eeTZX8M1o8WeiMWeiMWeiOPvifj/pgl+aQ=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.941670211943508`16.348255274470052*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    True -> StyleBox[
                    "\"FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/"]], Appearance -> None, BaseStyle -> 
                 "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"],
                 "OEM6eJxVzs0KgkAUhmEmJIK6Cvc5UVfQD65cObUpQk52JgbOODJnTPPqQ2lh\
uw+ed/FpwYsc2oPrkLXgee6GrSOOMsNBRakhVOKmZ7w8o60JAg4ufv6J5YXRs9Rgelf1YKGSJ3wjuR\
q9bB1pD1Zm2JkS6AiMLNMxvY7pHzwaQ88pF8XU19tkk+ySGkrCEKvVcG3vX43FKihx/wLc4kdR"}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8dce64f1-ab40-4bee-8e53-c9893aef5e17"]]]]]], Appearance -> 
             None, BoxID -> "8dce64f1-ab40-4bee-8e53-c9893aef5e17"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.522983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases-2.0.3.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.522983`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/build/FaizonZaman__LexicalCases\""}, "FileArgument"],
                     "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/Abstractions.wl"], "Hash" -> 
                    "4d70ca678d9a7f4aafde2d251f99dfd38f171e0d876762c8b53b1803b\
ef00047"|>, <|"File" -> File["Kernel/LexicalCases.wl"], "Hash" -> 
                    "8bb9af03b494bdbfda99cc47240696d926227871daad347d86cb1a0c4\
e053338"|>, <|"File" -> File["Kernel/LexicalPattern.wl"], "Hash" -> 
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002"|>, <|"File" -> File["Kernel/Plots.wl"], "Hash" -> 
                    "2ddd1eefab4153b52e3400a00abcca7e140470119829a4d4e9b693f29\
38d472f"|>, <|"File" -> File["Kernel/Samples.wl"], "Hash" -> 
                    "7c53fcc3ec16538a74d0e3079e15b85e3dd83c4b8cb08255e6b203ae7\
0351572"|>, <|"File" -> File["Kernel/Utilities.wl"], "Hash" -> 
                    "4190004e2c5cfb6d4b9dfe1479903cc5a2cfa26b8ba3a9b95533dfded\
8324ae9"|>, <|"File" -> File["Kernel/Validation.wl"], "Hash" -> 
                    "843a4f85a2e10e96bceb3b18a68a720b9274f2fd27424a61e045d6fe4\
e28f7f4"|>, <|"File" -> File["Tests/LexicalStructure.wlt"], "Hash" -> 
                    "006fb7bef3fbd426ebe4c9f46433ca011f4151fa09ed4eecf6d4f9582\
1c11b35"|>, <|"File" -> File["Tests/LexicalCases.wlt"], "Hash" -> 
                    "cabed78f3b5c5a98881dc47058cb2eb6329bb127b7749c621d90ac928\
5a52785"|>, <|"File" -> File["Tests/Abstractions.wlt"], "Hash" -> 
                    "9ea8a65f7bc5b695f9c3bbb06fba9cf1ba830c0e561f74db5a6a42db4\
d3d6690"|>, <|"File" -> File["Tests/Validation.wlt"], "Hash" -> 
                    "5ff45a60ddb1290cd3fdabd8cb203ba91134112ac3f239407cb5ee38d\
421300b"|>, <|"File" -> File["Tests/Patterns.wlt"], "Hash" -> 
                    "3fd277d65a27ed97387419f5c32a7699a095c74234aa09a6c4dc447cd\
289b2f0"|>, <|"File" -> File["Tests/Utilities.wlt"], "Hash" -> 
                    "e506fca3735e1b438b8d19fbfabbca2970b2c472123de00c7b29137b1\
80b9b0e"|>, <|"File" -> File["Documentation/English/Guides/LexicalCases.nb"], 
                    "Hash" -> 
                    "81f72bdcb302e7feb4f76078793774e15877c702f61317988d7e5e485\
9016c7d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
BoundToken.nb"], "Hash" -> 
                    "ebbef934339d58d09445bd910d5dd0eecb63a0790cc321643e5ea97e4\
31c062f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], "Hash" -> 
                    "a1e23e472a17ae3f6c6afdb4c620cdbb18fc7e1184b4314972fe0beb7\
1c97f9e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
DataJoin.nb"], "Hash" -> 
                    "b944fcc29c947934a1d3f71e94993217e25b28166c8eb0b49df653db7\
f89a3c2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], "Hash" -> 
                    "64b2db7c4529ee4fe690076f7b9c3c58d4e3380033ff79c1646032705\
c155381"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
FormatLexicalPattern.nb"], "Hash" -> 
                    "4c1a0ac565b41a864bcf9808236183c8aea81621bb1799940e3501458\
743ca66"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
HideMissing.nb"], "Hash" -> 
                    "57c5ce10e05f0a0514f9765ce9fe69272ce4a044a9c205e278c6db6ca\
b68139d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalCases.nb"], "Hash" -> 
                    "9374ec1bafae35b5a9736c633252225690d299415998272129fede994\
7ecee1a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionPlot.nb"], "Hash" -> 
                    "15d56c0de5d9b4879709483958e849691df8bf1b0da6e58148992eabe\
24ac868"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalDispersionSmoothHistogram.nb"], "Hash" -> 
                    "647bc36a3957ae85b4faa8a8c27553eafaa5ce18bc9a3b255ee883736\
d8040e0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalMap.nb"], "Hash" -> 
                    "b93c49262afa94948d9d46219d8b3ed36379eb6947cae34b94e1b08c1\
0796555"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPattern.nb"], "Hash" -> 
                    "6867301c35bd59b6037e7e61f92bb3302fce15e0859412e407f749025\
4df69e5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalPatternQ.nb"], "Hash" -> 
                    "875951f3742cfccd2c3606378d7c79740431e3d6d525bef719255c84b\
a076061"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalStructure.nb"], "Hash" -> 
                    "0279029769d6932c47f67583546b9b9f405ad05bc6f0a6cf9cbd14816\
f9f7977"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexicalSummary.nb"], "Hash" -> 
                    "093d36457bc2a12bc8e592aa873a4cb68e47536f3c666032686d2f9da\
d1b2072"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LexigramCount.nb"], "Hash" -> 
                    "bca9e2588b05d4ff8cb9a7af00f0bd940aa40c75e100312276ee91b88\
17a8536"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MaxCategories.nb"], "Hash" -> 
                    "c0fabe0b6d6f3267019a6bca725d840cdb9cae229693c07df66a1619f\
e9c1110"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OptionalToken.nb"], "Hash" -> 
                    "42051a0836c7d4ffcf10ed478b37c31240999bd1bf832c03591962459\
cdfb8b4"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StopWordQ.nb"], "Hash" -> 
                    "a53671e2dabd7b57490285cb289b469beeccc61a73f0f10e3adb40eda\
9966461"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SynonymToken.nb"], "Hash" -> 
                    "d1ffaba3d170650a45f3bf35b5f9f73d6d0d10f443deea4753e297696\
1b881de"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb"], "Hash" -> 
                    "2206ed2763d260a895d830c579970c75f96c6a5cd5301e421ae14f066\
a23d99d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
TypeToken.nb"], "Hash" -> 
                    "e2e502faddef64f6f2856b675fca777d03bd5beb8448c1e644d1152f4\
24898a0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
WordToken.nb"], "Hash" -> 
                    "b322b7ffc0246eff890a10c218cd2729d73f52d1b80a75ba2573dbb94\
3e2fda1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
FilterableProperties.nb"], "Hash" -> 
                    "1b79dd5d13593e85c5c16cc3527271c5675c390271c9541acfe4d0cf7\
66d3322"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
LexicalCasesServices.nb"], "Hash" -> 
                    "274dcae3a9ca4182f8f447a7db2731883da6be522e384af8dbba9b93b\
70692a7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleParagraph.nb"], "Hash" -> 
                    "ed1f89e278e03d66fd34ffd5d4a7a7d5d4ab960798cd2db47a098a93e\
578280f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleSentence.nb"], "Hash" -> 
                    "cb078c3aeeec5130017bf682f667d291824454cbecb190185800fd580\
b95bd4e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/$\
SampleStringExpression.nb"], "Hash" -> 
                    "f5a683c6ddad68c6d8f6e1c14ea42f5bfc2417f438d0facc56fdb7bab\
90cb9a7"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/\
LexicalCasesOverview.nb"], "Hash" -> 
                    "690911783fd720636f3819c8cf3bc3dee0e7e09b5519ced50ff3ef75c\
19048ce"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 42], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 42], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Abstractions.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4d70ca678d9a7f4aafde2d251f99dfd38f171e0d876762c8b53b1803b\
ef00047", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalCases.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8bb9af03b494bdbfda99cc47240696d926227871daad347d86cb1a0c4\
e053338", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/LexicalPattern.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "db2fd923f6040b99b6bc970b3239488a06a559071928c69921bb87fd4\
95b7002", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Plots.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2ddd1eefab4153b52e3400a00abcca7e140470119829a4d4e9b693f29\
38d472f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Samples.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7c53fcc3ec16538a74d0e3079e15b85e3dd83c4b8cb08255e6b203ae7\
0351572", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Utilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4190004e2c5cfb6d4b9dfe1479903cc5a2cfa26b8ba3a9b95533dfded\
8324ae9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Validation.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "843a4f85a2e10e96bceb3b18a68a720b9274f2fd27424a61e045d6fe4\
e28f7f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalStructure.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "006fb7bef3fbd426ebe4c9f46433ca011f4151fa09ed4eecf6d4f9582\
1c11b35", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/LexicalCases.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cabed78f3b5c5a98881dc47058cb2eb6329bb127b7749c621d90ac928\
5a52785", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Abstractions.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9ea8a65f7bc5b695f9c3bbb06fba9cf1ba830c0e561f74db5a6a42db4\
d3d6690", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Validation.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5ff45a60ddb1290cd3fdabd8cb203ba91134112ac3f239407cb5ee38d\
421300b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Patterns.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3fd277d65a27ed97387419f5c32a7699a095c74234aa09a6c4dc447cd\
289b2f0", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Tests/Utilities.wlt"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e506fca3735e1b438b8d19fbfabbca2970b2c472123de00c7b29137b1\
80b9b0e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/LexicalCases.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "81f72bdcb302e7feb4f76078793774e15877c702f61317988d7e5e485\
9016c7d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/BoundToken.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ebbef934339d58d09445bd910d5dd0eecb63a0790cc321643e5ea97e4\
31c062f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CountSummaryLowercase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a1e23e472a17ae3f6c6afdb4c620cdbb18fc7e1184b4314972fe0beb7\
1c97f9e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/DataJoin.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b944fcc29c947934a1d3f71e94993217e25b28166c8eb0b49df653db7\
f89a3c2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExpandPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "64b2db7c4529ee4fe690076f7b9c3c58d4e3380033ff79c1646032705\
c155381", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
FormatLexicalPattern.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4c1a0ac565b41a864bcf9808236183c8aea81621bb1799940e3501458\
743ca66", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/HideMissing.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "57c5ce10e05f0a0514f9765ce9fe69272ce4a044a9c205e278c6db6ca\
b68139d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["42 total \:203a ", ""], 
                    Style[
                    Superscript["42 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868905`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.868905`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/Users/faizonzaman/Developer/wolfram/LexicalCases/\
FaizonZaman/LexicalCases/Documentation/English/ReferencePages/Symbols/\
ToLexicalPattern.nb\"", "\[Rule]", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Action\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Build\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.851772`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ProcessedNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztfVuPHEeWHpt94f0mcbSz8mXb7R5jPJ4mIy+\
RmaGdXapZJCV5RKnFbEm7s7sYxbW7ltWV5coqki3DwNrYt8XAsGcf92Hgd/+BfTFg+w/\
4aRfwiz0DY+EHW0+GDRjG+IvMrKqsqmyqsrpFsclqCOpmZWbEiXP5zncioiLNUnr+\
EX96N3mmU7Oa3vig3dPdTlf3eK+ZtPGxWUrXHiX2BrOSrnzYTHvmbLq2y/fwSXwu7kup0zS+\
FPcPDnj38H3NVbz0B2Y5vX7vsM0PmvJhovotbR8/\
O3x8Oda99OruYUenuvdF0tHtzc109QFvpXpw9ebgqj4QWsUQR29uxquP0P4h7rm0qw86LXyYS5g3vJ\
xe2+FtHeuWlr2kO97nyiOIMehkNT33Xrepxh8e/D5nG7GX1tILd/u93kANF4sR5e2+/eD+\
Trf5BCJ88aCbtHv32+qRTpN+V+r4woP7d5u9A95J4+uFYvDQxxin7lrhrSj3dIsfapVezbt40G9Lq/\
GjtLOy2+3r4TAubnc6mnd5G8pf+Shpj65cuMtTHfcOW9qcmRj7hftPeKvPoZn0wna/\
lxzAxHJ4de2h7u0nKr6409XQba/5pNTodqu51z7Q7d5AoelaQ1tPGfwe3frBAd/\
TcfNLDY2dKzQ2fGqs39Xd5oFOu2eyn8vvDj/Bg5cb/W4XDX8GgXV85QH02+Cd93Vzb9+\
KsLqTPEWfS+nNbZEmrX5Pl+9Przzke+2macrMhxu/hrnPP+jyg8yoy+\
n5TD3WfVc3fvkXP99AgxfuNbvwGTtmXH/03t1G0kq63d/Ifv7qTvfN7OdXd7q/l/\
389Z3Gbw5HfDnudZudj9sftDv93siL84tXGxAdgu1wpZrtvcnLFzOxMnkm7Hg5u/KQd/\
ea7bTsxvZ340zjzOTfR8uyNnL2QTtLw9+\
D2F6ejO3JICseja9t7HDZ0r3trtyHvjbilY131jfii2jnnja83+rF3yl8/oOePthut5McS+\
Llr372ixJ2HG7c/jSFB902vPll0v6SH/D27Xv6iW7B5bu3nyYtAxXc/lA/\
gyFbDbh1evtBdutPslvHLoh+s6XKl3/60/L1LfcWueXd6mSSbwzRygp4HF1c2tjF4FrWa+\
fWA3oba7sA2fiiQ25R12WR90W8vJFuxOdSLZO2SuMLG3H+10Z8/pM+b/eavcORR8WH7R5/\
9iDpHqTLwN7xsQ7uul44xFRcD+6IzyEC+\
gfttKSePIRXPtRmdNsKhjt9TwW8XLQfAfN0T08GwbVCGCthBhwzyzLdz+\
wCDXqN4RQ2MmfutXG2fmclVF6ZQOWb8X7y1IZte6+\
xD0iXFlUnVXTpoz7SYBdw8Hjq2lWkIQAM8KuZWrhbHlk5azrzhxxiJh/\
9ht1geTfpvLwOcN3apNVs650kbRapNzfwUmNpeFeed78VvtBoJencfGEy0SwIw4IwzEEY1haE4bUmD\
McY61sbd62Oc+Pn4ZJ0D+cf9lQdGq88aALwUW1W14Nx6wU6zEZ82Uqz3d3rW9iLl/\
7oxBR5vQighxwYpdPe/CpcLfnQ4K+1ikr9wnilvmVzS3yYou0vPoIAWll4+\
AJSPQZ0D7LaZpoX6dtvbMWXPmgjpfLWPd7j20tb8arVTWp+\
kLe7fXYrt53VSmbDt36su23dug107lkKBNnTW09buO19nu7H7/\
oqJJIHYaQYD43PuVHaVS51DGPKKC8yTuhooqIwCANXRoJ6womIJ7QhhPjh0T2WbVjuMRKCcYMWfOYL\
JYzijEnph65PAhYo5gauG0ahozhXnh+\
qKJDC4UT6mlDP86LpHr873uMO7yENtst9KuEatOyZgPhEMCYCIVlIhOd6zI8iTgJOKSOhw9xIBoy5j\
hBRaJTPqAgJcaf7vFb0udNKemPDc5VSjobzCN+BrqirPZ8Qjv+ElDzUjg+\
tEcdhkcu4r3wNYZhnXOZFCkow013dKLqKOTx4XJehpJ6R0tPSCagX8dBXRHskZNqhIqLaUyrypC8iK\
UjkUqoD4RKP65B41KFhxbjeLDr7tNdswdHGu/\
MdZo2uXUmlEYHyBXwEIwoZI56UlLvScDcQkeAeZ4JRGAxOpCGE63PNpru7WXQHttBUWWSNuYrvcd9E\
aFc7RDMYTQvrfjzAUF0Y0g19A8viF9oP4Kc+VYHRkDAy8Obp/t7eRZSlA09Biu7LXr+\
r0Wlv2CshgREhHNwzQvluoIX2JTN+4Hue5DCdgWUdwwnTMJ+\
WBoowjEauIx1HeLQiJMZ6HUTEqEfJhVZhZOAuUCKLoshRiAhCYTdXi8BzmRCOG4ow9JkMXEcxwiV8l\
XKKWDm6x4moH/XINIcWqQmFpPA/\
apj0hBB25JxJ4wgeeUQSTQPHwKkE5QH3XSV85akgYKTCknmPY4Yc9UeN8dEGUQrjYEQqD3EvlB0fkI\
Azx/F8x3G5RCQgJEkoBdXahoTreISI6f7eyPsrgn18dJ51iVAFcJxQKxZ6UQjXNVR6Lg8R3jAdlfAZ\
D3hHGA+kD3X7oVRuxIAUFaN7M++tHBWj7jSF3iT3Qo9qR/\
heJCKF7gQwQEjuWqBxLcA5rqc0ITIULnO80OKoYILo6e5+eC+RWbbLNHn7fnuv1Uz3b7/\
Xbyo94UdtMQoX2MoVSgqPuDo0WvgmDAiwlHlwHEBCFIYyJK4JHM8J4WYq1FT7EZDPCWSopuV4p1qOR\
9pocHypd5Cl0tvx4YFIWuntu0m/\
rXaTx7pdlkoLhBLzEDxM0UgR5vtUKOYQRRXQSkv4NwdkEeCY6yDIIBNnofY9R5KgChDv15KqAal6RR\
L/0BYrEnorC8gd7Xoa9uFOyDVyhAyQBYWPQIOjIvAiI4HbTuTDto7PANKaCC1CBznEsArzRbUEtKn8\
HyfNMaUJaAnA7jLJgK7wUwcRg0TMfMagpVC7VLiREwQy0oIglSqDBKBEaCLGPVkB7L9TS6b7zzq8rQ\
aZtCRY4AvAQCh96jKtfaMBBiQMACRAEAn7+ho5mhDPMyZkSEt+\
QDwXUCYdZIPImRbsXi3BLJvmvYlMX5LPl+AKXNKAIv/\
yCOJKwyIkPy9wkAojDuBzApvfEQEMSKM9ShwfoeED3INgWr7friXf+\
4jQh800RYVZFosiU0ubxAg1IAPUQcYIA3zErAbd0JXa58T3Ab4uoRqgLgMlAiSGIHIQONNi/\
aiWWEdBBpDBB3kQ3MDzKWAeYAn/\
9zwXBY9LYVzlQksOZeArFsEgr9L4JNRSa4cfNzgLue41U9QNdpLN8qmygA5VNJBEaaqY8AFlIQAk8p\
BudeSzgDnKRAL5iigeaBo5fgT2ppFPQQhkFFSwxZ3jCRgfJElv/\
32Q7WQPNc54bCCdegGHdACSCB5oONJsJN0Qvq+\
hY26dIAL35J6wdExHEbJGoCLQUl2RdurhbyHrQ94ZhxIwQMuq0T/gwwfTVz4igKlIeFp5gQe6CA6A/\
AcfAKVDpgBblA4wOaC0glz87jxSVWFJFIQecSQcT1HQYOKFOtRgHMwVwkMSM9AW1QQJyndcDVYALsK\
IS32gHdMVkt05hmSfjKXSkDJwPEQHKK0EMYBdCTSFlCnhg+\
DwngN2HSgKINbGFg6USmQIZDLcWAFz784j2oiglmQjLpIlWEXAFCoHyyxMENLIo34AOgGiSihXhAoZ\
AGoCwJ8UCnHhBIYBksOKkm0ugxYpdUwy5sGffIowQDJ1BZITZS5iIASPR56PkGWpFxhPBoFNC3AA5R\
qmuHLAA6vKkXpZy0pmgzJL+WMxIDlDyowiQSjIugHvRLmLKpQYAi7iE8598DLQN2QuB/\
VnoDVzBHh4yCNIfFzBHvJnDZTwe0m3OY6/koAkgk0EKFugDxSGoKOQNnSpinxLPxii0nWBdJ4kIfw+\
4E4AcqmRWx2nAjLqCfZxx97FW1OszUcaQiaNPEsMoTHUBATlTgjMCCVU5BNkT/\
iVMKjtJMpJ5rDA9SmTyqD+qyi9WC3B4l7S+\
TzpqrGo5DAFSJBrS4dQ0AwMIooaArTdD5gAmZQycHjoGWLl9ThoHMTmjAUgIhVRWS+\
LxoftpH14MKUs5RiYkXvKCUlACfcpSjlj86kNOQsTRDnE+D74v+\
Y2BnQWv0HmYqqCQdZDi93kaJB1XRJolEOBp9yA8IjBsVDaUbCf0Lq8YZbvUqkooFij3OIo6A2Bn6Fa\
YVXMo54h7QzXdE3gomZyDVdKm8A3gYEZAwEUQxkVonJDTaiAqyLyfSQiHfi+\
chzqGpT5EYt4hdvXE8p61pRQwnNdEGgjiesHGiCBItsh0nUi4H/\
oMgW3oi5cPiI8pIK7FKYVyJewJqrZCu+\
qx4U28Qysx0VL73TtPGpvAiwcETKFqslBtHngF6CUqNuQPiEdihEK/\
UkPIWELEwr2K432FZEoAgMFRlcBrzUFLLPIWHefNOW4gG6IQhokAiyW+07kmgg+H/\
JQCTf0HHAdkDShwSxR2fvcRNCenSbyBMIGeaIiM9WLg818imyHdznSQGd/\
zOUQpBGzzFoTO4dhlAdYgzZ9biW0vwVDtcystQEbISfwNOiZhpEbkYoytB7ZKGSL7RodLo4lAYEiXX\
pcA7+one5wQmECqC8IQtBvKBIlM/InSmUHpXpEUV9Bcjt7AObkV8DHe3OJli2Vo/\
Lr6tQy3bKIhvIA5VOgkKsDW5tEJtCOdHzAmWuoMNL1ndD4Hgp8wyV8ERV0KKBSkqXaaRHDahF3+\
z0kST5Rsnz8xHqbfjrGHhlhjhNGnlEhMM7SishhMpLAXmmBloBMEiYoxadaUWKMB6aGmGEEqKK34qv\
brVby9L7dBpetCGYr0lvx5WKKPd7nHbsK+PdLk/TFzHwsEZ9f2C15upvdtr28NVh2SJfRbPY/\
jHX9qGd/rA/vgUAd2iXxikdzZR1xyY6/sWRW0t86qvUPmwfNnlYQ4Ejh84X/wRi/\
9xw585Xf7Mal9O8ddeN2LznIbuouZavIH757ggLO1NKRun6UPM2NVHLCrx9H40eFq8026mzQf/\
LP38Xd1/M1Oa0+aJsmfMka+exw4X1oyMbN6ntHuzzsTUtH3FRsKRitCFkR7e7QkqjbaZpIPH+t/\
BkkTtfyWIdMN0qXPssWEic+\
zEuQ4ZJZHry5XkZ73qY6GKj5qJ4bP4BvxysPdY9vn9mKL8BEu7y7p3uNmwjA3PTFBxe34tVFKC5C8R\
SE4sppjEHUDPujIdywM13ZfiiYKquj7U03h5/mrpBfgA0v28nr8p3X7AcTN12Ik27PdpOO+\
rlqPyu2+iTt8oX3m6gK2na5PX3IO+nKR/1Wayu++GlHoYK2Q2kspWS2dfOk3+v0ex/c29wcLLj/\
cLYHOxAWD50ZX62f8eEnO0m6uZntdKvz2P58j+\
3hQ4i6nF4Z22xQ2qeUtebM1BrIIWA0v2Y3VNzTnVZyaFbT1Xwf27l0Jbv01tRWvZVsLwZ+2y17+\
H1xtFfCbup6mPRTnYDF2U1d71lu3pTp9La44Y61xtpzdhNCsBjMUKuul/\
38h3831uooJC7gs8MP7baU4s5f3bFb4XaS1uEe2iltGC1+57vZMoQ4/4jnUyONX2f/zjfENX79/\
LtmaWiGp2fq6+\
Qamm1oxzURPpzNCzfjFipLuyU321l4a6aHWgn6ez9pqTnAYSqxpytItml8fkAN8tIgXs3cuGqD5eSu\
QFvlALeqdndezp46ajvhar7LOPt7pbE62kx2F+Lvde0K67hjm+znf9553g7RbEtxen5gpa8N18v3n+\
Dx93lbtbL9pNeycY82uo5FdJHHzxYYMfxnIU22YdRu4Rzbzvmv/5X9+U93uk7281/vdH8/+/nvd+\
LzHzbbj23fE/tzh+nvctZ1Az7yGPnI4uXZDwyUEs5kd7mv5ePsu1h2X8QTZPCau7DMWbM2o4/\
1s5yVfcWqZif1ElW9zFQvIdXMQ7XD9dsJ8AGpP1WoVBC/\
ojzKS54FMj0PmQqKPECmAWNeINMCmV5eZCrmFE4XMmVzsq84Ms1U6tRDqGL79hCihv9eYNQCo14WjB\
p9w2IZBVHhoy83QlWKnE0zF+CUfyFrdnQaTqW+1CB19rng9DXfCXmZ7bl8hAsW/\
y5mRLNJw7qWbfzopE16fvLrtpUdHG2o438r5zSbMmMS85lyOPP/\
LVh0wImuxB3eftBNDrZF8qRuRE58Q+T0mfHsqxqRx/3W2mk25esYkUd+p/\
D0GXL5VY3J436r8zSb8nWMycnv3J4++\
628qqF43G89n2ZTvo6hOP2d9NNnwdVXNRiPeyrAaTbl6xiMVWc2nD4brr2q4XjcUzNOsylfx3CsPNP\
k9Bnx3Ksaj8c9VeY0m/J1jMfnnPlz+kx5/\
lWNyuOeunSaTfk6RuURZ2KdPjNeeFUj8rinkp1mU77GETl5ZtzpM+\
PFVzUij3tq32k25esYkZVnKp4+I156VePxuKdanmZTvo7x+\
Mb0maOnz4SXX9VoPO6pr6fZlK9jNFadyXv6bHjlVQ3H456KfJpN+TqGY60zq0+fca++\
qnF63FPDT7MpX8c4PcaZ7qfP1Nde1ag97qn6p9mUr2PUnsw7D06f1a+/\
qgF83LdOnGZTvo4BPPc7QU6foW+8qjF73LeynGZTvo4xe7x35pw+a7/xqgbucd9adJpN+ToG7om8U+\
r0Gf3NVzV+j/tWr9Nsytcxfo/zzrXTZ+ubr2rYHvetd6fZlK9W2K4Uhj57Eqee4R+\
X4n5Hd1PZbXZ68RXfXe/Zt7ev//JP/\
nI9PmMGx6HNcOPinLTFOWkzBPgLgYTqc9LOvswoVn1O2vNgaz7kuWCPKBvE9NgjYwG7k/\
38lzvTfzTOD9u61ECw62e9h7rdN6ujVuy/M4D7O/F+8nTdWX+YdPX6I/zJe+u7+\
810PTtYDWO9kn9D7/4zLfs9C26zWYerP+6nvewtFymiMwfKRcSdlDPGK7BVip7OP+\
i3ZZFY3LqWuXtonTpuJT37PhdTfoHH0IOuWFe5/4S3+ryXdMfT38iN/\
m7mRnToRunCj15XP1qt6UfpBdCJ7G043QqXctYf6Ke6u4Cm19mlfn0caPqtApqGfrTAptfWkf5vXUc\
acrKZzpPNbj3ykNo//Jf//n99/w+/\
upNeHtSLtoUq2ld62c40i1tKzxVvL8L1NxrJQcd2NXoVZRrNpmg5anO329zbA/yupauf7zelPff/\
3KftlB/oT2ZU+GaLp72PC9O9EDY+eh/SapwJOvew0x/NPsTG9NN0rqfzE9+\
rLWiK91AdT6753aDofr6BWYPchWEfD+ules3ttRLBW7HsJq0WgGkYbt8g9Nk+Pm/\
29s2FcYlndGKM376wbXPG+zcHDwy6mS3CBk/\
ZmzfrROXgoXrdNdMPNTf5AeCb6Tv1uvug9HC9bvezZ/\
LX2mUvotvOZp3WHvKe3K8FRqVhX96274puA9CfjB1sPv4OhpmTS1nGT+\
oavfbUVq6927OlvVZrpLqaj7xkI2kf1h7J4JEXNRJvpqfS8rsb7VT4bLgs89eIjr34sS6+\
LNUcWPnlk7WfnXxJZS0M3edPtN3GZXnl8kdJLyN9vNnqd/UnM88jKzSQ6l7xil/b3JyGnY2MNNPBG+\
+GUiP1PehqXd8Bs1fo2fUEu49tuFyynE2j4/8fd4se5lRn7aCrr4L0HPrZt+9oLdVeUMjF/\
P2pdlzxalaJmfMjlrl6/5/0eWueDJjPu+brH/M3UsoFy/\
jzeI2NZZN4Lf9X8WafM9NVpl20CGosWpTe9booMr/FpYu6tDBe6+qDYjn/\
a6ctbMCvHCfgZ82W1tb3Dzq9w286W86Bpjntq8155qGYM8GW3TOxgK0FbL1esLXMlao7e5/\
DVxa99YGrXpE35sRTRd64U4/eTTxH8VuTQ41KsJUxGleaUpuncIgvbKdSt9UEVMUrlnZXR+\
lsAhc7ItDKIjy/\
vWArWffrQ66Us07Csy7e05WudfmRfqK7qV5fuNir4GJlM79oH0tXPkqynXAj71pDewu/Ov1+\
VZh2do8qM4bBIk7VzqS3G0nncB1aaloXWu8l641WsyMS3lXTTrM0IyftJY1+t6vbvUG7M3qOhCy2+\
1mLuNr0pzzyt7KR28+/ZtSzzlgPRz3HpNiJK6jSEcYMvwPf0iPLN9vrH+mn6w3dqlirn9/\
ws1lIotdMnhdj+XzomemfO+wXYvkT19AoqwwXy+1m5Af8oNk6jK/\
FSb8rQTd4O13f6Sajrdj2JrsVu3F1/MHPdXNvv5eu7rR4sz26/V7zSdO+t3Z8kf/igy7yV77APrYu/\
3/+t/35m9HLY8/HHS6tgw63Z55plPZPD7cC5FsAqhbwlycW8L+\
JYV77sNnWd7uaP7Zrl812sQe1etPAmckdBR/1D4Tu2t2z6eSDV+\
00rbVZNpbS5WxyfDYfauaT8J8Ml7lLexZm89xU9/\
qdz5r6aTbnVCthI51Ur6rnu9Kzaq7eMLLqNFH9sS25NdTRO+jYjzfTc5t2WSPbOl/v8cF0/\
mz5vFgKmWcNZPl5OxLqjbbgjqW1nJrjnXEfFvAN4Z5fM0sz08f8MXtlQR9Pjj7W9OhyUM7nKbmrFQ5\
a32HqRvDKR/0sqcwDhjmSfqNbWaZDbp4YSr9TegjZsJvq4sLl0oX34+9+\
3yLNejtZbyXtPd1dt4CBzPgP5+l1/MtF6dXdLrffJyq+\
ufiCNgKNifBmkbRy6P8MhEanpVRaY4F7s5d07vJu1sUwFS7NmAoP+GOdkReFJtDAPyg9Vdwag3/rL+\
K+GGRMAZvVS5qLr1B9m7j5dd6/VM/7C5vWQsVNkfRA1KfcFH8+0p0Wz76ZOPhzxrLrIPtq4/\
Dbj5ubk3tbzdmX9gtfBdSfsfsZeftxtmg39vXHl/i7ajDU4OTtH8y8Hrw5HGv5+\
dmE7QyXYqramGfZZdjOWiUjRQn3QVt2dVaIHXuva9018DpKrbUBcmzvYm3dF10dY7vmXKaqP8IXulV\
81pLT5tlM9V1wpzomnnFv86D9+63caycxP8ebpXTNzj/obuPiJOAMQ+I595Si7vszSQWmYNu7/\
0zqTm9yIRVX8i4HHWZbAmbE/iFtGRCS2QWaMRvOmYTmTl5n0xtFVvy8yzsd3b2bPLO7RYoP83+\
d203wB3R3IX3rXl6If1H8zqZk2r3G2UH6i1eKnZormW/\
Xze5FGwU3r9VGQW0GbaxmhG7YSO2Nk4Ukn9kt+zUleTLchJ+\
38f4cbeyPt7G2m9HtYSv1SXrezoW7A0o0bGouLpW3dr6EeisvbN/HZVi2rXhX2aObZi2yvhliP/\
S5LF3MG4RnBidmlA/VGB9VsQe4+eXgco19veNfMrrY6Gp8+\
umnsFq96nBqUnhp4tLRE7hj3Vy3C69PtPqMd5tctPQI/\
er7wto9sPfkcCjC9Xva8H6rNxQyHtyxlH53gF3Z0RzgXb0BiC2Npqdj3dKyl4k1MYt8/r5qVl54I3/\
GjrmAw7TYbXapOIU324M3Om1h7VHy1CLraFJ9bZfv5Vh7aVcfoB7p6fyf+XEkf2tj7Eiku/\
1mSz3SKcaZbsQrG++sb8QX0WYx9vg7pW5LJ/Isf/\
WzX5T6mpIjXvqnZjW9MdRO3tfYnSuTEsfn4r5E8ZQOx2opVLz0B2j0+pg7lcYzcN+\
rGSWEQVDq2yQ2Pi9/c3BVHwjEc7Erf/UR2j+cVNTScLn1mj2hJjdI0h3vM7dW0clqes761vjDg9/\
nbCP20hrcvQ/cK9QwnhbffnB/4JIPujD8/\
bY1SrYWEl94cP9us3fAO2l8vVAMHvoY49TTXCDvovSd0ErtDBYeCkcdHa8zsWBdCtCp2H3uV0LXHur\
efqLiiztdDd1aulSxRjRE1LWGtp4y+D26dXS00dg3O/Onxvpd3W0e6DQ/8ejM5XeHn9hpuWKZL0Oh+\
Ep2xA/vvJ8tHNn7duzB1rjv5rZIk1a/p8v3p1ce8r120zRl5sONX8Pc5zPmlrv7+Uw91n1XN375Fz/\
fQIMXir0dT/TYmSS/kf381Z3um9nPr+50fy/7+es7jd8cjviy3Vvb+\
bj9QRuwNLX4VGDCDld2p8rk5dIi3oQdL2dXjjprpVjAm1rMq5RlbeTsZ4coNDcaXdh4iICHjefGnnh\
rHNDWhUW0dYmiuKWB+utpDioG5cPhrY0Tw9FLG7v2ACnrY/Pj5vJ42ysDrTi3oiBihH4RL28Als+\
lGtW5SqGuOP9rIz7/SZ+3e83eKF9djA+hg2eWyaTLAMrxoQ6zWmG9qSAcMrFzxS7nknZKX+\
oeUdHiC+jj91RgwUX7EQAK1pj02GuFMJPHiX29LNP9zC7QoNfJleyv7bVcmsza2XO+uX7TriXne+\
kb+9we8GXX5SdXqp+3GI2cATQA2DTttE9+ZFJu5azpzB8mF6pfiBsso8Z4eR3g+uBcgsF+\
lyH8LZX4W54kv5Xk3mgl6dzJfTIrLLL7IrvPkd0vLbL76cnuxxjqjY2H/FnzoH9gj+\
w73oAry8BpkZ6jF+qEoXs8vSz9MP7Z0sbtTwGg6W3Dm18m7S/5AW/\
fvmc3tAEju7efJi2DkBl7l9ztB9mtP8luHbtQ6wjh3WTq+O+NeOmfnZi1rm/\
sdBPr8VplRyyepLGWv/rTn1d8/LJpc/mrP/83i8mFxeTCgn68yvTjBCYXzm9sZ446P/\
s4t5HNj54cr1jb+MYoxQmkzsWEwWLCYDFhsJgwWGTsRcaun7GXx+NokbFfdMY+xihXN3B9fq2/\
OapKP0p6WiTJ440Fm1iwiQWbqM8mRpltMlFX5MFS8/HlIt4sxWhNUoHn7ceJl/\
4Itw8nSG5MxfL22a14LUfmeDXD1614xcIiHhuCVPejL975t//5F//vTnyuQLASbJ3kTpjlr/\
70z08M+N7YyL9zmL9ixb7ten4UXCInKNaOBtuz796GUbTS6sQz0KpDyC2bfb6H7NMpersw6HcjvjYw\
LLy0Z5rPvvkk9J2Juc3jmsM5Mcne2oiH6wwvmWhvbsSPmyDsL5sH/20wiu6e7n2ezw5/\
htyCDvNsMr+AZx3/ZeE8Nys20i1Iz4L0LEjPaSQ9b0wH8/bFrfjCcBl4jOp88OP/9j/O/\
02J6mzF1yZWUUtafQ5Fiv9s6SVaW9uKr45n4O2lrZdLwm+Ep27F1ydJYOMMPpykYGOt5DNLv/\
9ufK64bSt+s4K+NKDBm1XkwV64MZW6bb/Xik0Tg5wV/\
6MaWyC24rePzrvls1NOlJKf4AL3MbPylY0dLqGXRTpepONFOj616fhSKYq3V7fiK/m/t7tyv/\
lEx09PMCVlcFq+/NOflq9vubfILe9WJ+v/SELwk7/8Fwf/8dL33i3llJuZ8Lnc+QpA0s1et5W9m/\
uPX+AIkNUzKR7ydtPofB2q+LqSTfD5u1rND3JD2ByaiTgU9a38dLXb2yLtZW8htufDPW1tFa+\
mftdXIZE8CCPFeGh8zo3SrnKpYxhTRnmRcUJHExWFQRi4MhLUE05EPKENIcQPj+\
6xPIpyj5EQjBu04DNfKGEUZ0xKP3R9ErBAMTdw3TAKHcW58vxQRYEUDifS14R6nhdN9/\
jd8R4HhKPUpxKuQcueCYhPBGMiEJKFRHiux/\
wo4iTglDISOsyNZMCY6wgRhUb5jIqQEHe6z2tFnzste5R9qStXKeVopD3hO9AVdbXnE8Lxn5CSh9rx\
oTXiOCxyGfeVryEM84zLvEhBCWa6qxtFVzG3pGGss1BSz0jpaekE1It46CuiPRIy7VARUe0pFXnSF5\
EUJHIp1YFwicd1SDzq0LBiXG8WnX3aa7YALePd+\
Q6zRteupNKIQPkCPoIRhYwRT0rKXWm4G4hIcI8zwSgMBifSEML1uWbT3d0sugOeNFXGCcZcxfe4byK\
0a18fz2A0Laz78QBDdWFIN/QNLItfaD+An/pUBUZDwsjAm6f7e3sXIZQOPAW5qy97/\
a5Gp71hr4QERoRwcM8I5buBFtqXzPiB73mSw3QGlnUMJ0zDfFoaKMIwGrmOdBzh0YqQGOt1EBGjHiU\
XWoWRgbtAiSyKIkchIgiF3VwtAs9lQjhuKMLQZzJwHcUIl/BVyili5egeJ6J+1CPTHFqkJhSSwv+\
oYdITQtiRcyaNI3jkEUk0DRwDpxKUB9x3lfCVp4KAkQpL5j2OGXLUHzXGRxtEKYyDEak8xL1QdnxAA\
s4cx/Mdx+USkYCQJKEUVGsbEq7jESKm+3sj7294lke5N8+\
6RKgCOE6oFQu9KITrGio9l4cIb5iOSviMB7wjjAfSh7r9UCo3YkCKitG9mfdWjopRd5pCb5J7oUe1I\
3wvEpFCdwIYICR3LdC4FuAc11OaEBkKlzleaHFUMEH0dHc/\
rC613us3lZ7wI1v4DcIFtnKFksIjrg6NFr4JAwIsZR4cB5AQhaEMiWsCx3NCuJkKNdV+\
BORzAhmqaTneqVXy3bUHmewmj3W7LJUWCCXmIXiYopEizPepUMwhiiqglZbwbw7IIsAx10GQQSbOQu\
17jiRBFSDeryVVVpoVzOZDuztAQm9lAbmjXU/\
DPtwJuUaOkAGyoPARaHBUBF5kJHDbiXzY1vEZQFoToUXoIIcYVmG+\
qJaANpvb13GUZRLQEoDdZZIBXeGnDiIGiZj5jEFLoXapcCMnCGSkBUEqVQYJQInQRIx7sgLYf6eWTP\
efdXhblScXCsECXwAGQulTl2ntGw0wIGEAIAGCSNjX18jRhHieMSFDWvID4rmAMukgG0TOtGD3aglm\
Fy54r2LyY5CiJLgClzSgyL88grjSsAjJzwscpMKIA/icwOZ3RAAD0miPEsdHaPgA9yCYlu+\
3a8ln36jysJmmqInKYlFkammTGKEGZIA6yBhhgI+Y1aAbulL7nPg+\
wNclVAPUZaBEgMQQRA4CZ1qsH9US6yjIADL4IA+CG3g+BcwDLOH/\
nudS13UpjKtcaMmhDHzFIhjkVRqfhFpq7fDjBmch171m2snnOiyfKgvoUEUDSZSmigkfUBYCQCIP6V\
ZHPguYo0wkkK+I4oGmkeNHYG8a+\
RSEQEZBBVvcOZ6A8UGS9PbfB9lO9sDyx2MD6dQLOKQDkETwQMORZiPphvB9DR1z6wQRuCf3hKVjOoq\
QNQIVgZbqirRTD38LWR/yzjiUgAFaVo3+AR8+mL7yEQFMRcLTygs80EVwAOQ/+\
AAoHTIF2KJ0gMkBpRXk4nfnkaoKS6Ig9Igj4XiKggYTL9ShBuNgrhAekpiBtqgmSFC+\
42qwAnARRlzqA+2YrpDszjEk+2QslYaUgeMhOkBpJYgB7EqgKaRMCR8Eh/\
ccsOtAUQCxNrZwoFQiQyCT4cYKmHt3HtFGBLUkG3GRLMEqAqZQOVhmYYKQRh71A9AJEFVCuSJUyABQ\
EwD+pFCICycwDJAcVpRscxm0SKljkjEP/\
uRThAGSqSuQnChzEQMheDzyfIQsS73AeDIIbFqAAyjXMMWVAx5YVY7Uy1pWMhuUWcofiwHJGVJmFAl\
CQdYNeCfKXVShxBBwEZ9w7oOXgb4hczmoPwOtmSPAw0MeQeLjCvaQP2vwnt5Lus1x/\
JUEJBFsIkDZAn2gMAQdhbShS1XkW/rBEJWuC6TzJAnh9wF3ApBLjdzqOBWQUU+wjzv2Lt6aYm0+\
0hAyaeRZYgiNoSYgKHdCYEYooSKfIHvCr4RBbSdRTjKHBa5PmVQG9V9F6cVqCRb3ks7nSVeNRSWHKU\
CCXFs6hIJmYBBR1BCg7X7ABMiklIHDQ88QK6/HQeMgNmcsABGpiMp6WTQ+\
bCftw4MpZSnHwIzcU05IAkq4T1HKGZtPbchZmCDKIcb3wf81tzGgs/\
gNMhdTFQyyHlpUrgYN5iNcEmiUQ4Gn3IDwiMGxUNpRsJ/\
Qurxhlu9SqSigWKPc4ijoDYGfoVphVcyjniHtDOR0TeCiZnINV0qbwDeBgRkDARRDGRWickNNqICrI\
vJ9JCId+L5yHOoalPkRi3iF29cTynrWlFDCc10QaCOJ6wcaIIEi2yHSdSLgf+gyBbeiLlw+\
IjykgrsUphXIl7AmqtkK76rHhTbxDKxnF292unYmsTcBFo4ImULV5CDaPPALUErUbUifkA7FCIX+\
pIeQsIUJBfuVRvuKSBSBgQKjq4DXmgKWWWSsu0+\
aclxAN0QhDRIBFst9J3JNBJ8PeaiEG3oOuA5ImtBglqjsfW4iaM9OE3kCYYM8UZGZ6sXBZj5FtsO7H\
Gmgsz/mcgjSiFlmrYmdwzDKA6xBmz63EtrfgqFaZtbagI2QE3ga9EzDyI1IRRlaj2wUssV2UzwujiU\
BgSJdelwDv6id7nBCYQKoLwhC0G8oEiUz8idKZQelekRRX0FyO3sA5uRXwMd7c4mWreSMDiIti2goD\
1A+BQq5OrC1SWQC7UjHB5y5hgojXd8Jje+hwDdcwhdRQYcCKiVZqp0WMawWcbffQ5LkEyXLx0+st+\
mnY+yREeY4YeQZFQLjLK2IHCYjCeyVFmgJyCRhglJ8qhUlxnhgaogZRoAqdj//9dIxY9tpmtiDq6+\
VP+slB+larhdzNr1RuvRZtiQw8WFO14aroflAM3GH60IVHQz0clTPjR80lrbPbMW/\
eeTZX8M1o8WeiMWeiMWeiOPvifj/pgl+aQ=="}, "ClickToCopyTemplate"]]}}, Alignment -> 
             Left, ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], 
            FontColor -> GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941671163280156`16.348255379288616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8509ff0b-13e5-46f4-a120-758a21893fc6"]]]]]], Appearance -> 
                   None, BoxID -> "8509ff0b-13e5-46f4-a120-758a21893fc6", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.941671163280156`16.348255379288616*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                  "\"\"", LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8509ff0b-13e5-46f4-a120-758a21893fc6"]]]]]], Appearance -> 
                   None, BoxID -> "8509ff0b-13e5-46f4-a120-758a21893fc6", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"fb49afa5-9eeb-4cbd-91b5-0a87d0b776fe\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"fb49afa5-9eeb-4cbd-91b5-0a87d0b776fe\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2.0.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0523\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWN1uG0UUjuO/2HHd0AYhuLJWEYgLV6E0hHATnE3cRmpay+\
MWUFWps7tn7RG7s6uZ2aTmHbjilgveCq7hAXgEOLN/\
dtapFJwguPDerLXn75sz55zvyG5JbgzpxVHwFqRble+\
dcgUiFKCoYgHHz25J1oaBVnArsvKUSeWuy9qIjvELqZPItkFKskki36di+\
gSoQ0qv3LLcOp5y6jP7LHAiD7T5em5eJqBkezQNQYJ6E4TAd3ZktU89CZl0O5OCb4FDEA7s7JDqEP1\
PUWdzBH7o4ccEYeK4LO8OKAcCHtgqEJdjVoYIIwtSlfXHgjmXjbN3XTvRoppsHEVKZWlopidK/\
H7UPxkIdo4Q3vRFwNUJd4Ygg0jYQBr9kyOmfBpKspUmBo2e4zlBaPAayjF4dAqObCch+\
hG3dcbflZ3KSESQH6PZC0OggnJMfuVZwGeSxhGVQNTUA3etcPbGyTn1IoqZkY1epAIfr9jOpbUzUJP\
AIc2BAMytYudzTnseG3MfuMoSKmsm6ErJ3jPVU5+OgbAfADNWTzOWW12KWx0xH6RYi5/W1/\
kXNGyZkRDo+CUCBnKnj/k1afgE2HiiIVQHwQXGLMntniUDL1Iwry/vnNExZy6z4xo2/\
8Lr3ugL6seXWpYbcXp0+VaN33/+yUCHjWMmsGb0mVE+fHxkBl4gxAfx8+uhuB8/fxyKb+Pnt0Pzw/\
zELaIEC5/zUx5GalbFibBtInQENqCOw/i4KG7GsGI8hXtsxZIzKsaMy/ky1m9zzVwr/n43ltqs2DM/\
pfyd9Xa52NvFJktNSdvIylxXqEEqxlcdgzTRzTG4NPIUeT8t+VMFfo/zIBklpPznj7/\
MjY4NY0BtD5SRzw6tfxNkNePFi9Pj5RF9bLjWowPq0r3uAYDVfWRbTvfgM2uvu0u/\
3Hd2rf39L1wo4M0yv5WmeKFTMg1Sx5qKfC7njpg0ReUpuDO1CuJe1LmiYZv6E04RUFAsq7spGI0wbs\
VrY1mMc31AWVQSUlvX+rWjmuv/PNjcnKsU5tw2mQQXuhH42JzgkLT1nCqmaPNZhMQisMG+\
X5C1cbBjy+JEYFIPkPLslmPXU67o26Rpi6b/chmUR0H4/\
y2ALX0nHuMwCCRLySy54JJZyrUSJvtPGNj0Ark0AxdH94qCVxS8BAXXVxR8yxR8A7wN4yU2EAJZHnL\
dePhg98Hnt4epbZDI8pnUsG6Sy5qxu/fwFnFtGUmHmgLieMsjixngFu/\
wDHkYJ97ygD41vsN26oRxN3RE2lwdJjsW4MjohJHlMTkB5/\
ayWTVQvjzi7XwEzIpltZmuNtPVZrrEZjrbkopL3xU71Zx70kr7Ta+rXnGtvH/\
pD7BkLcoWQlJ6jer5v2f3Fpu5V+uS1jzNk1pC1l1S0RxLdq7DlF1STwmOVGOa6mrMM3YhFc0RXdK+\
PNqTHR2N08lKPrnmfJxVQPInHLW8hQrYOHHYlYJ7ic03TE3SlU0mQP4GyOD5nQ=="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"FaizonZaman/LexicalCases\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztHGtsHMX5znc+\
v50HgZZA6WnjttDWsZM4cYJU7uzzK22cHF6HVxLw3N2cvXhv9zKzZ/\
tSCbktVKLQNC1QKC3BoQVRflSAVClQwI5oRREqrWigaWnBIbyilCSqeARES2dmX3N7d/\
bGuE4q3YC8mZlv5nvM9818+32zl/Tiyj4w2q6OQZwsx0s2KhpEaQQ1oEmqQpqTXhzoUylA0o/\
9mySsJctwoB8Mkhaxvg9iNYPicEvsehjXxBoxk0oBlO2BICF6tyV9eHFHVgEpKd6rJjIypLOUWbP4R\
Kjh+v5sGmKoDahpqDQ04PIuIGNo9i4ze2EqBhMioQo2NIjlfWT+\
LIGp6YeptEwadUL1iX14URQoUIQyIUlFuTj9fYQME0k5ruhGUiJ3sPmsoJPQrgCuas9omimNaoMjfd\
7lXZ1RJI0QEga6kKponUrClIlY1dXZLmkpkMbiYkMwZNAWwidElHhKSgeUQRYmcL2OoiujxKngi0nH\
348y0GKjui2dhgABJQ6xf7Oq2D1V7QBDUcvKMOlx8F7VOQLkDCCSwVVtGU1NkZWOW72BXqgNqQmxOo\
ogka0mjXCTtsnSoJKCimYKFAcikCqM+\
bRBN6bAIBSlXZBIrMKQmDUqB295v5SCGHlYqQ1bLWRgbSSDEJn4CkIwFOu6iHwjIN0DpcEhSkJ5VB0\
lOL14WVsMq3JGgzw8rusFg4qUlOJMlSOfkDWtZCLRV66mG4H0kBTHtLrEEJIXV/WTtmEFYoy+\
uexX3Yd3JUKW+hBb6QJx2KWilNVGJu3rbo+osorQ5FO0HA+hZlamQ+h8Vp4NUSlsSYO4pGUNTk/\
Saeu7JFmGCUL2COQs7ICnrNznKfN4vPb/RdoCzja9uY42e30+UnP8dVQtlCvKAmWMsAkpTP5Ol/\
1yXZirb7/3O9fTZ/q2KYXVUTbF4IQlo/Sp7GzEfP3QM1ftCDvns5C88M5l/KA9cijOT+\
rxDAzxSM26RZQx3kLCz0eQVOiceBjm3Xt/ntUpOzBCn8979mOdkyDj5OM9u5UwB3/hU3cN60S9Gs/\
pP/p+Gz8+Z36C9MIyhuRmxv7unn8bQFEdqKdzF31+dMNFrL7yRyKrB751eIivezwPD/\
HwnhdSrTnzPXd4LSPiP8exwXkLfW6+/WBO3SLSqF/lm9jO18d+3bidn2+\
s5rfbeHx3vf69bTw94w1XrqDP4Sd+z+oD3UhgeGOvs3pwuUfghWLWH73nAr4+fkekVeLHm/\
Ix5zflZ+KPHtk3ytM3LTwyytNv1k3+zLrJv1k35WPOZ8ovZ71c2/mjj9ByOIR+fActb4TQRx/\
SctSlnR/w+Lz+\
HMM9sMLnLde1dryTEfaDF3XBPvrONUxgH12S4Ovh3fdvDXPw4499fG3YOd41Q8tYORhCn2PlHyF0+\
220HPn0DI2/fCjJM2TWTYKn/Tfu4Bky6ybDOeNdM/ThKVreDqGf/ZSWYyF0LSvHPz1DEy+\
vZ6o2cepeti9Md61hBJ685l2mymb/+O96IFsR8byeQv1svGuGzmPlzRD68wu0vDaPKjd+\
PDxACZr62+EMY+ihq9lK/WL8FszXF+97ku3OJvyDX167M+\
wc75qhvffQQjTtM6z8ZT5V7sQraZ4hs24SPCHcL/EMmXWT4Zzxrhnazso/Q+\
jxx2g5GkI3sDIPKjed/\
IStQPiJZ8YYwUtuZQQ2xHayI83sv7j2Ao0x8NCbA4X62XjXDK1l5Q2OodWsvDYPK3THGnbGTu/\
Uj49obK++Mr8JJ/i6Z++/\
2KZgwk9VX3pd2DneNUP6XvByCImsHAkZVvXSp2coPNo9wjNk1k2CH361HfEMmXWT4ZzxrhnaxgrZ3C\
5jhTied/+Elvk4h/adZCsQPud+tsvtWf8esyXPDq/ukhn9Uw/sYLvc9NJDw4X62fgFVTmfzRDlxk+\
5mRrRxTt+5ylGXfPNNzLx73+vTw1z/XsiB3eGnfBnnHpL+4M3spMjun87ozKa+\
KPIW4PnOz1dYSf8gjo1Bamvu0X3TL52J6N26rt/0A/0WzsYNw9++\
zlWn7r7ed2T4eHPOPXT4PDVlJrgiZW6pjx9H6OyufsQ06TgwYdYfQw/zdYkB35BT/dC1E/\
c0MpkOXXoKLXeiTda1rD6w1t/qO+3dVdups9Df3+SnXw58Gee+vcho3JAu40+76qvGmT19AfH2F50+\
7sXs2dPelKnnodPVjjiHjVtOA3jWh+NBkS8VrO/\
bYy861tRJyOw0g7iw4NIzSgJR2ClvAuBlDPaUs0a+\
6X4MHbGYc7GOEgB4vIpiqyw4OoiID4EzXCJU1a1ooak9BZlo5LOaGZnwI6s+\
ex1MLTJjCfaPWY8sVLYTAR5aVAQzzUCZhs1mGpTFFWPR4q+E9+\
fsOG5fxUI5RkIxeVCF5B2qco1IAWUpk1wjEhCjgAMsUDotEJCYrVw8cjqlc0rmy8RuJUlsu4iiyZnR\
UJ2TNVUq6+\
S9hnSM5aqjAZTKaEEQW2kjkhYGYJI0mDCGrVMHFJHqciUwcgQQCBOw2dOmVaxJabGRSNSRPLZTXAEy\
sbxfjg0s/DNzsWGRPLCdiaEWEFwZFIKtmRmPMlfmLTB/\
GTB8mEqaYxRlng7oNrTAWWoQSctiwxa6HryGjc7KflByiL0FIhmmlhFugcpg5jXjRmxGmb4p5Dop1N\
YgW1KPqevZYLg7HKj5DSo61rJCXwUxIlMc1ERqN2Pu8K3SOiAOE7UhE7uHm2D0DmmUf0MyrrJBNNAI\
8qq4GASqamgBseKkbQQ2ldgtc9+9XOLNVJ2+si4kL8/\
F427PadmcyYVg6gXoOG8vvooGatFEYxLmJ4hPnuV2dRZRQNjDHfe0P+\
xGvj61fTZqwCLzS0yqmLJyOvoC+\
zlXRCW1DkjyaiIrOI5J6OcTlMpG1XKRpWyUaVsVCkbVcpGlbJRpWzU3FaolI0qZaNK2ahSNqqUjSpl\
o0rZqFI2qpSNKmWj5i8bVVPKRpWyUWdLOqCUjVqIbNSsJNUK34DZURUl8Fxs3Z75XMPEFwkmjXFm16\
L3q2K9gJmVcU2LzCYMAYoPsbY6gTLCt9TqLdawfE4IaffsE73r6PM+\
OmSp4JSRMTcxj8EMGUH2TR5bSlJIB2tZZg1NSOSAQjTbwzqW6KBcKy4newfScmXucSXwJUKHGs/\
QPQCclhYkHV/8mHsqFIY0LY0vbWpCRroDrxxV5SQ5B+OymkmsjKupJl1t+\
2CapmJUlLVhm5Kxlg0gCdY2boAw1tgSjyUaN6yKrW1sButbE82x1tZ1SdgkiPEFwCLW9hBzRGSlhrf\
2bZqLcJcJW5A0KJFNP9hHNj+iN+6trE5YtSH49YwcXN28erUwt6XdRBYHa8Gt6QT5x+\
mgXr022AuyFHXLnFBXClu3buxwj/GLgpsVmRMpSwXmpCSCI7qxuCeqQmCH/\
hyxGrKfI9biK25bYAVxNKh7qeeH8r/uM6jCgpV4zGIyV0SWiLUPmNnJmDrW0IBXzAhDt5qGhqSRe/\
zCzPOxfCWBrsQBPXdJxlX1qhkMVSIMQmmAUc0cH3qEOt0yAlFpupTEe7PSb7azox/\
Bb9OXiOo2hNTRIQgS9klt8I0+f9Oxy/df9GJI9+mNaXKSe2R8VJWzg3oK159LR+QTA9G0leeLeCKe/\
O7JAiN4GrnE4RpWnqat5YxySlE73CVBxN55nDe0LG/DGHkk5Oh5e3KGHt0p/\
Ovk6WKz5px0zhmaocfAZrugBV+g7FeLSL3dGJVV8v6lDOZ4f7pI7dUj4k2y8maIuOflzD0XA/\
rmJtZ0SEBWB/XMdo63LMpAIR5wVAaS4tKPftZmwpWfH6mx20yP0lo6q6u+j742kr4+\
kJAymLu5ob8m6rQX1nTLrWeQvQCRUwXnCcunz2moatkcbS3/Df4lMxj/Vghdx8qJkvGVjG8ejI/\
XtQtZeSKE7t1LyyshdOoDWt46g9bo0hbmap5LI2oqTenoHEsT7xRzN3xcnsiFzZr/\
JYFCroFNGcN10Yy4RpgWMMCvzAiIDJemF5CXqbFkrYOoXKU9aZqpx+Po8Xj4kGDuWLar3HQslGf+\
tvGbIEXw2hCTRWctNtamzIm3ADdOvJOz450sxu/k7PzmjzVJnV3Os+\
N1bnAFuCkKEZqdm9k1oDg3s2tAcW5m14CC3FRvIZ6sDLK8KZXjmjZFSgHjZy7soO5s1mUeBBFvpJYL\
Py+1r/B1ypC+oOO8G3uLOmASZGStI4P0EK49PD+Ey+45+\
nPP4DK8vBuqKUjsNd5PcOGkilLWz42cQefbudx5C2KpSJ5anyxqLNxss7sIlYw5ndB67twu8B3FvDk\
Kc8D5Kd2F3NxDFKDT2+\
Nn1e2FcEesEz1CHACCPgoS9Fy3seVcqD0n5zDUEyH5V2HtW7KOwHCRnIflEtUwl4igf238gVn9osBG\
Dcj8vfEibyW8DcyTH4QdvxdEQFfOuJYZ5uqZIEQj3cQVxAY3cZ3TcXncRh8KrKRzkRcbu2dxiBmuUb\
u6Kx24PAMzXIqnol9VZU1Ki1/\
qhlpQG4JBOSdKFFSTpFXCQTNSmXetnMzAvDp3sqoVNaAkAEoYGdrcm+UbFUkj+\
intYgZNNpgZvFEXa02kV2dIxTg/5n9ZySpkZHlOJl10dyjguesvmno726Py2/\
mXhDLOVskpawPlf3PgxQExDmSYyLfpQhm7AkHA0gc9pQ96FkgN/p8/\
6OH8b8e3MgXcD256sdawOPqVz2ntNKJ3B3Xbco/VtspG0U+\
vLoifLXbXgADQZIm7o7JRrDURUK7EgJ7kahQrrtCPELGcJS0aie9h53ZFFxnbRnGpnSrbpOp3QghDP\
pr7ajXTbaOjo/\
mJNjV2vZ1bY9t3E0hLTasoGdU6gV0Sc6VqInSQ8QuFnbNOur4ZtsLmZEvjuuT6ViKRlmQjiK1raQQt\
5L/E2g3NEKxqFKkB0RVjG/yYJp7PSXqAl/SArcz6LxKCmJynzJWdCalgx1J9zJWSNmQcJVj/XOy/\
jDjs+w=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.941671163280156`16.348255379288616*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{
                Annotation[
                 Grid[{{
                    Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                    "Heavy"], "", "Your paclet resource is being published"}},
                   Alignment -> {Left, Baseline}, 
                  Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
                 DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
                 "Your paclet resource is being published"]], ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style["", LineBreakWithin -> Automatic, LineIndent -> 0], 
            ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "8509ff0b-13e5-46f4-a120-758a21893fc6"]]]]]], Appearance -> 
             None, BoxID -> "8509ff0b-13e5-46f4-a120-758a21893fc6"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"fb49afa5-9eeb-4cbd-91b5-0a87d0b776fe\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"fb49afa5-9eeb-4cbd-91b5-0a87d0b776fe\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"2.0.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0523\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWN1uG0UUjuO/2HHd0AYhuLJWEYgLV6E0hHATnE3cRmpay+\
MWUFWps7tn7RG7s6uZ2aTmHbjilgveCq7hAXgEOLN/\
dtapFJwguPDerLXn75sz55zvyG5JbgzpxVHwFqRble+\
dcgUiFKCoYgHHz25J1oaBVnArsvKUSeWuy9qIjvELqZPItkFKskki36di+\
gSoQ0qv3LLcOp5y6jP7LHAiD7T5em5eJqBkezQNQYJ6E4TAd3ZktU89CZl0O5OCb4FDEA7s7JDqEP1\
PUWdzBH7o4ccEYeK4LO8OKAcCHtgqEJdjVoYIIwtSlfXHgjmXjbN3XTvRoppsHEVKZWlopidK/\
H7UPxkIdo4Q3vRFwNUJd4Ygg0jYQBr9kyOmfBpKspUmBo2e4zlBaPAayjF4dAqObCch+\
hG3dcbflZ3KSESQH6PZC0OggnJMfuVZwGeSxhGVQNTUA3etcPbGyTn1IoqZkY1epAIfr9jOpbUzUJP\
AIc2BAMytYudzTnseG3MfuMoSKmsm6ErJ3jPVU5+OgbAfADNWTzOWW12KWx0xH6RYi5/W1/\
kXNGyZkRDo+CUCBnKnj/k1afgE2HiiIVQHwQXGLMntniUDL1Iwry/vnNExZy6z4xo2/\
8Lr3ugL6seXWpYbcXp0+VaN33/+yUCHjWMmsGb0mVE+fHxkBl4gxAfx8+uhuB8/fxyKb+Pnt0Pzw/\
zELaIEC5/zUx5GalbFibBtInQENqCOw/i4KG7GsGI8hXtsxZIzKsaMy/ky1m9zzVwr/n43ltqs2DM/\
pfyd9Xa52NvFJktNSdvIylxXqEEqxlcdgzTRzTG4NPIUeT8t+VMFfo/zIBklpPznj7/\
MjY4NY0BtD5SRzw6tfxNkNePFi9Pj5RF9bLjWowPq0r3uAYDVfWRbTvfgM2uvu0u/\
3Hd2rf39L1wo4M0yv5WmeKFTMg1Sx5qKfC7njpg0ReUpuDO1CuJe1LmiYZv6E04RUFAsq7spGI0wbs\
VrY1mMc31AWVQSUlvX+rWjmuv/PNjcnKsU5tw2mQQXuhH42JzgkLT1nCqmaPNZhMQisMG+\
X5C1cbBjy+JEYFIPkPLslmPXU67o26Rpi6b/chmUR0H4/\
y2ALX0nHuMwCCRLySy54JJZyrUSJvtPGNj0Ark0AxdH94qCVxS8BAXXVxR8yxR8A7wN4yU2EAJZHnL\
dePhg98Hnt4epbZDI8pnUsG6Sy5qxu/fwFnFtGUmHmgLieMsjixngFu/\
wDHkYJ97ygD41vsN26oRxN3RE2lwdJjsW4MjohJHlMTkB5/\
ayWTVQvjzi7XwEzIpltZmuNtPVZrrEZjrbkopL3xU71Zx70kr7Ta+rXnGtvH/\
pD7BkLcoWQlJ6jer5v2f3Fpu5V+uS1jzNk1pC1l1S0RxLdq7DlF1STwmOVGOa6mrMM3YhFc0RXdK+\
PNqTHR2N08lKPrnmfJxVQPInHLW8hQrYOHHYlYJ7ic03TE3SlU0mQP4GyOD5nQ=="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"FaizonZaman/LexicalCases\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztHGtsHMX5znc+\
v50HgZZA6WnjttDWsZM4cYJU7uzzK22cHF6HVxLw3N2cvXhv9zKzZ/\
tSCbktVKLQNC1QKC3BoQVRflSAVClQwI5oRREqrWigaWnBIbyilCSqeARES2dmX3N7d/\
bGuE4q3YC8mZlv5nvM9818+32zl/Tiyj4w2q6OQZwsx0s2KhpEaQQ1oEmqQpqTXhzoUylA0o/\
9mySsJctwoB8Mkhaxvg9iNYPicEvsehjXxBoxk0oBlO2BICF6tyV9eHFHVgEpKd6rJjIypLOUWbP4R\
Kjh+v5sGmKoDahpqDQ04PIuIGNo9i4ze2EqBhMioQo2NIjlfWT+\
LIGp6YeptEwadUL1iX14URQoUIQyIUlFuTj9fYQME0k5ruhGUiJ3sPmsoJPQrgCuas9omimNaoMjfd\
7lXZ1RJI0QEga6kKponUrClIlY1dXZLmkpkMbiYkMwZNAWwidElHhKSgeUQRYmcL2OoiujxKngi0nH\
348y0GKjui2dhgABJQ6xf7Oq2D1V7QBDUcvKMOlx8F7VOQLkDCCSwVVtGU1NkZWOW72BXqgNqQmxOo\
ogka0mjXCTtsnSoJKCimYKFAcikCqM+\
bRBN6bAIBSlXZBIrMKQmDUqB295v5SCGHlYqQ1bLWRgbSSDEJn4CkIwFOu6iHwjIN0DpcEhSkJ5VB0\
lOL14WVsMq3JGgzw8rusFg4qUlOJMlSOfkDWtZCLRV66mG4H0kBTHtLrEEJIXV/WTtmEFYoy+\
uexX3Yd3JUKW+hBb6QJx2KWilNVGJu3rbo+osorQ5FO0HA+hZlamQ+h8Vp4NUSlsSYO4pGUNTk/\
Saeu7JFmGCUL2COQs7ICnrNznKfN4vPb/RdoCzja9uY42e30+UnP8dVQtlCvKAmWMsAkpTP5Ol/\
1yXZirb7/3O9fTZ/q2KYXVUTbF4IQlo/Sp7GzEfP3QM1ftCDvns5C88M5l/KA9cijOT+\
rxDAzxSM26RZQx3kLCz0eQVOiceBjm3Xt/ntUpOzBCn8979mOdkyDj5OM9u5UwB3/hU3cN60S9Gs/\
pP/p+Gz8+Z36C9MIyhuRmxv7unn8bQFEdqKdzF31+dMNFrL7yRyKrB751eIivezwPD/\
HwnhdSrTnzPXd4LSPiP8exwXkLfW6+/WBO3SLSqF/lm9jO18d+3bidn2+\
s5rfbeHx3vf69bTw94w1XrqDP4Sd+z+oD3UhgeGOvs3pwuUfghWLWH73nAr4+fkekVeLHm/\
Ix5zflZ+KPHtk3ytM3LTwyytNv1k3+zLrJv1k35WPOZ8ovZ71c2/mjj9ByOIR+fActb4TQRx/\
SctSlnR/w+Lz+\
HMM9sMLnLde1dryTEfaDF3XBPvrONUxgH12S4Ovh3fdvDXPw4499fG3YOd41Q8tYORhCn2PlHyF0+\
220HPn0DI2/fCjJM2TWTYKn/Tfu4Bky6ybDOeNdM/ThKVreDqGf/ZSWYyF0LSvHPz1DEy+\
vZ6o2cepeti9Md61hBJ685l2mymb/+O96IFsR8byeQv1svGuGzmPlzRD68wu0vDaPKjd+\
PDxACZr62+EMY+ihq9lK/WL8FszXF+97ku3OJvyDX167M+\
wc75qhvffQQjTtM6z8ZT5V7sQraZ4hs24SPCHcL/EMmXWT4Zzxrhnazso/Q+\
jxx2g5GkI3sDIPKjed/\
IStQPiJZ8YYwUtuZQQ2xHayI83sv7j2Ao0x8NCbA4X62XjXDK1l5Q2OodWsvDYPK3THGnbGTu/\
Uj49obK++Mr8JJ/i6Z++/\
2KZgwk9VX3pd2DneNUP6XvByCImsHAkZVvXSp2coPNo9wjNk1k2CH361HfEMmXWT4ZzxrhnaxgrZ3C\
5jhTied/+Elvk4h/adZCsQPud+tsvtWf8esyXPDq/ukhn9Uw/sYLvc9NJDw4X62fgFVTmfzRDlxk+\
5mRrRxTt+5ylGXfPNNzLx73+vTw1z/XsiB3eGnfBnnHpL+4M3spMjun87ozKa+\
KPIW4PnOz1dYSf8gjo1Bamvu0X3TL52J6N26rt/0A/0WzsYNw9++\
zlWn7r7ed2T4eHPOPXT4PDVlJrgiZW6pjx9H6OyufsQ06TgwYdYfQw/zdYkB35BT/dC1E/\
c0MpkOXXoKLXeiTda1rD6w1t/qO+3dVdups9Df3+SnXw58Gee+vcho3JAu40+76qvGmT19AfH2F50+\
7sXs2dPelKnnodPVjjiHjVtOA3jWh+NBkS8VrO/\
bYy861tRJyOw0g7iw4NIzSgJR2ClvAuBlDPaUs0a+\
6X4MHbGYc7GOEgB4vIpiqyw4OoiID4EzXCJU1a1ooak9BZlo5LOaGZnwI6s+\
ex1MLTJjCfaPWY8sVLYTAR5aVAQzzUCZhs1mGpTFFWPR4q+E9+\
fsOG5fxUI5RkIxeVCF5B2qco1IAWUpk1wjEhCjgAMsUDotEJCYrVw8cjqlc0rmy8RuJUlsu4iiyZnR\
UJ2TNVUq6+\
S9hnSM5aqjAZTKaEEQW2kjkhYGYJI0mDCGrVMHFJHqciUwcgQQCBOw2dOmVaxJabGRSNSRPLZTXAEy\
sbxfjg0s/DNzsWGRPLCdiaEWEFwZFIKtmRmPMlfmLTB/\
GTB8mEqaYxRlng7oNrTAWWoQSctiwxa6HryGjc7KflByiL0FIhmmlhFugcpg5jXjRmxGmb4p5Dop1N\
YgW1KPqevZYLg7HKj5DSo61rJCXwUxIlMc1ERqN2Pu8K3SOiAOE7UhE7uHm2D0DmmUf0MyrrJBNNAI\
8qq4GASqamgBseKkbQQ2ldgtc9+9XOLNVJ2+si4kL8/\
F427PadmcyYVg6gXoOG8vvooGatFEYxLmJ4hPnuV2dRZRQNjDHfe0P+\
xGvj61fTZqwCLzS0yqmLJyOvoC+\
zlXRCW1DkjyaiIrOI5J6OcTlMpG1XKRpWyUaVsVCkbVcpGlbJRpWzU3FaolI0qZaNK2ahSNqqUjSpl\
o0rZqFI2qpSNKmWj5i8bVVPKRpWyUWdLOqCUjVqIbNSsJNUK34DZURUl8Fxs3Z75XMPEFwkmjXFm16\
L3q2K9gJmVcU2LzCYMAYoPsbY6gTLCt9TqLdawfE4IaffsE73r6PM+\
OmSp4JSRMTcxj8EMGUH2TR5bSlJIB2tZZg1NSOSAQjTbwzqW6KBcKy4newfScmXucSXwJUKHGs/\
QPQCclhYkHV/8mHsqFIY0LY0vbWpCRroDrxxV5SQ5B+OymkmsjKupJl1t+\
2CapmJUlLVhm5Kxlg0gCdY2boAw1tgSjyUaN6yKrW1sButbE82x1tZ1SdgkiPEFwCLW9hBzRGSlhrf\
2bZqLcJcJW5A0KJFNP9hHNj+iN+6trE5YtSH49YwcXN28erUwt6XdRBYHa8Gt6QT5x+\
mgXr022AuyFHXLnFBXClu3buxwj/GLgpsVmRMpSwXmpCSCI7qxuCeqQmCH/\
hyxGrKfI9biK25bYAVxNKh7qeeH8r/uM6jCgpV4zGIyV0SWiLUPmNnJmDrW0IBXzAhDt5qGhqSRe/\
zCzPOxfCWBrsQBPXdJxlX1qhkMVSIMQmmAUc0cH3qEOt0yAlFpupTEe7PSb7azox/\
Bb9OXiOo2hNTRIQgS9klt8I0+f9Oxy/df9GJI9+mNaXKSe2R8VJWzg3oK159LR+QTA9G0leeLeCKe/\
O7JAiN4GrnE4RpWnqat5YxySlE73CVBxN55nDe0LG/DGHkk5Oh5e3KGHt0p/\
Ovk6WKz5px0zhmaocfAZrugBV+g7FeLSL3dGJVV8v6lDOZ4f7pI7dUj4k2y8maIuOflzD0XA/\
rmJtZ0SEBWB/XMdo63LMpAIR5wVAaS4tKPftZmwpWfH6mx20yP0lo6q6u+j742kr4+\
kJAymLu5ob8m6rQX1nTLrWeQvQCRUwXnCcunz2moatkcbS3/Df4lMxj/Vghdx8qJkvGVjG8ejI/\
XtQtZeSKE7t1LyyshdOoDWt46g9bo0hbmap5LI2oqTenoHEsT7xRzN3xcnsiFzZr/\
JYFCroFNGcN10Yy4RpgWMMCvzAiIDJemF5CXqbFkrYOoXKU9aZqpx+Po8Xj4kGDuWLar3HQslGf+\
tvGbIEXw2hCTRWctNtamzIm3ADdOvJOz450sxu/k7PzmjzVJnV3Os+\
N1bnAFuCkKEZqdm9k1oDg3s2tAcW5m14CC3FRvIZ6sDLK8KZXjmjZFSgHjZy7soO5s1mUeBBFvpJYL\
Py+1r/B1ypC+oOO8G3uLOmASZGStI4P0EK49PD+Ey+45+\
nPP4DK8vBuqKUjsNd5PcOGkilLWz42cQefbudx5C2KpSJ5anyxqLNxss7sIlYw5ndB67twu8B3FvDk\
Kc8D5Kd2F3NxDFKDT2+\
Nn1e2FcEesEz1CHACCPgoS9Fy3seVcqD0n5zDUEyH5V2HtW7KOwHCRnIflEtUwl4igf238gVn9osBG\
Dcj8vfEibyW8DcyTH4QdvxdEQFfOuJYZ5uqZIEQj3cQVxAY3cZ3TcXncRh8KrKRzkRcbu2dxiBmuUb\
u6Kx24PAMzXIqnol9VZU1Ki1/\
qhlpQG4JBOSdKFFSTpFXCQTNSmXetnMzAvDp3sqoVNaAkAEoYGdrcm+UbFUkj+\
intYgZNNpgZvFEXa02kV2dIxTg/5n9ZySpkZHlOJl10dyjguesvmno726Py2/\
mXhDLOVskpawPlf3PgxQExDmSYyLfpQhm7AkHA0gc9pQ96FkgN/p8/\
6OH8b8e3MgXcD256sdawOPqVz2ntNKJ3B3Xbco/VtspG0U+\
vLoifLXbXgADQZIm7o7JRrDURUK7EgJ7kahQrrtCPELGcJS0aie9h53ZFFxnbRnGpnSrbpOp3QghDP\
pr7ajXTbaOjo/\
mJNjV2vZ1bY9t3E0hLTasoGdU6gV0Sc6VqInSQ8QuFnbNOur4ZtsLmZEvjuuT6ViKRlmQjiK1raQQt\
5L/E2g3NEKxqFKkB0RVjG/yYJp7PSXqAl/SArcz6LxKCmJynzJWdCalgx1J9zJWSNmQcJVj/XOy/\
jDjs+w=="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.867247344922814`16.3399769391228*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.915223362797099`16.345331532683705*^9, 
  "TemplateVersion" -> "2023.03.03", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "PacletBuildData" -> {"FileHashes" -> ByteArray[CompressedData["
1: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
1qc1O2AzsXzauIfDWk8lm6SHMfIfX019yiyPSnU=
      "]], "LastBuiltArchive" -> 
    "/Users/faizonzaman/Developer/wolfram/LexicalCases/FaizonZaman/\
LexicalCases/build/FaizonZaman__LexicalCases-2.0.3.paclet"}, 
  "Openers" -> {
   "ExampleSection" -> {"1" -> Closed, "2" -> Closed, "3" -> Closed}, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed, "8" -> Closed, "9" -> 
      Closed, "10" -> Closed}}, "Paclet" -> "None"},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], 
                    Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; 
                 If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X ARM (64-bit) (July 16, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"9582c273-c0a7-442e-9b38-5f365bada852"
]

