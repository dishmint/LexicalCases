(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    815691,      14762]
NotebookOptionsPosition[    795840,      14362]
NotebookOutlinePosition[    799152,      14437]
CellTagsIndexPosition[    799070,      14432]
WindowTitle->LexicalCases Overview
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "FAIZON ZAMAN/ LEXICAL CASES TECH NOTE", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "c863211a-9dcc-410d-9ad9-336d20bcfac5"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "882c9e93-9257-49aa-bcf8-53ea5a67ceef"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "126fe923-1e81-40c7-8498-63bf527e206e"]
        }],ExpressionUUID->"2de6f9c3-d92e-42d0-b201-1146052559c4"],
        StripOnInput->False],{
       "\"FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview\"" :> None, 
        "\"Copy Wolfram Documentation Center URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell["FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview"]},
               Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
        "\"Copy web URL\"" :> 
        Module[{DocumentationSearch`Private`nb$}, 
          DocumentationSearch`Private`nb$ = 
           NotebookPut[
            Notebook[{
              Cell[BoxData[
                MakeBoxes[
                 Hyperlink[
                  "http://reference.wolfram.com/language/FaizonZaman/\
LexicalCases/tutorial/LexicalCasesOverview.html"], StandardForm]], "Input", 
                TextClipboardType -> "PlainText"]}, Visible -> False]]; 
          SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
          FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
          NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        "\"Go to web URL\"" :> 
        FrontEndExecute[{
          NotebookLocate[{
            URL[If[TrueQ[False], 
                "http://reference.wolfram.com/system-modeler/", 
                "http://reference.wolfram.com/language/"] <> 
              "FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview" <> 
              ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "0af45682-d551-428e-a0c0-c1ace3d9f4f4"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "fb25cd97-f5e1-4a20-bcd4-9a3b879cd714"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"cec06e71-0cbf-4b9a-a051-447ce4dd00ea"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "LexicalCases Overview", "TechNoteTitle",ExpressionUUID->
      "68f3ff42-903b-4fc9-b431-e75cddac99c6"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"7cd8559c-3629-4af8-85a7-8ac9056b4036"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "c8051069-17f3-4a38-96a6-59203418f263"]
    }],ExpressionUUID->"94baa76f-21df-46f0-a1af-b184a88aa6bc"], Cell[BoxData[
     TooltipBox[
      StyleBox[
       TagBox[
        StyleBox[
         GraphicsBox[InsetBox[
           StyleBox["\<\"NEW IN ??\"\>",
            StripOnInput->False,
            FontFamily->"Source Sans Pro",
            FontSize->18,
            FontWeight->"Bold",
            FontSlant->"Italic",
            FontColor->RGBColor[0.968627, 0.466667, 0]], {Right, Center}, {
           Right, Center}],
          ImageSize->{125, 24}], "NewInGraphic",
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"], "NewInGraphic",
       StripOnInput->False],
      "New in 14",
      TooltipDelay->0.3]],
     Magnification->1,ExpressionUUID->
     "1b99049b-1d94-478e-aa3c-14c2f8f22a2f"]}
  }]], "ObjectNameGrid",
 CacheGraphics->False,ExpressionUUID->"1319610f-9d53-49fa-99d6-7d0a5d18f41e"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Installation"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
580651078", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Built-in String Functions"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
323829644", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Introduction"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
652844990", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Abstractions"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
739144260", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["LexicalSummary Properties"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
1668282004", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Conclusion"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
2118948183", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Searching Files and Services"], 
      "paclet:FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview#\
156924819", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TechNoteJumpBox",ExpressionUUID->"d3c45db2-bca9-4214-880f-\
35627ef2d637"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Installation", "TechNoteSection",
 CellID->580651078,ExpressionUUID->"81206874-2ab9-4eda-8571-5bfd19c17f2a"],

Cell[TextData[{
 "This paclet is hosted on the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Wolfram Paclet Repository"]], 
    "https://resources.wolframcloud.com/PacletRepository/"},
   "WebLink",
   BaseStyle->{"TechNoteText"}]],ExpressionUUID->
  "51a6f342-eac5-41c7-8a43-d63f8abd4bd9"],
 ". First install the paclet from the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ResourceObject"]], "paclet:ref/ResourceObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fe563f33-3e15-4aec-b20a-006b46f4e201"],
 ", then load it with ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Needs"]], "paclet:ref/Needs"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d2cac54e-cde5-4c74-93db-653af3b7de66"],
 "."
}], "TechNoteText",
 CellID->1692548,ExpressionUUID->"2cd2e377-4f73-4e7c-9697-b1fb9044cb72"],

Cell["Install the paclet and load its definitions with Needs", \
"TechNoteMathCaption",
 CellID->803553206,ExpressionUUID->"fbedece9-bbff-4d2e-a657-3f0a6861f437"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletInstall", "[", 
   RowBox[{"ResourceObject", "[", "\"\<FaizonZaman/LexicalCases\>\"", "]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<FaizonZaman`LexicalCases`\>\"", "]"}]}], "Input",
 CellID->700096613,ExpressionUUID->"2a140a42-8a9b-4152-941c-64e7b79828b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "TechNoteSection",
 CellID->652844990,ExpressionUUID->"323f2b7a-e2fe-480c-9276-87fa003c04b7"],

Cell[TextData[{
 "Where ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StringCases"]], "paclet:ref/StringCases"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8e967469-b55d-422f-a9da-9573b222a3a7"],
 " aims for character patterns and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TextCases"]], "paclet:ref/TextCases"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5290c32f-4ed3-4ba8-a6e4-0ceab708e89d"],
 " for text patterns, LexicalCases aims for lexical patterns. This is \
accomplished by expanding the scope of StringExpression where types can be \
expressed anywhere within. Listed below are the pattern types one can use \
when searching at the lexical level."
}], "TechNoteText",
 CellID->293313137,ExpressionUUID->"cc9fa8cd-9370-4fec-979f-018e02af5085"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["TextType"]], "paclet:FaizonZaman/LexicalCases/ref/TextType",
        "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     "\"\<\!\(\*StyleBox[\"type\", \"TI\"]\)\>\"", "]"}], Cell[TextData[{
     "Represents a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["TextContentType"]], "paclet:guide/TextContentTypes"},
       "RefLinkPlain",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]],ExpressionUUID->
      "dce0c492-102e-4254-bf50-02768e002d61"]
    }], "TechNoteTableText",ExpressionUUID->
     "f20f6b53-7101-4690-9a75-2be41da47e71"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["TextType"]], "paclet:FaizonZaman/LexicalCases/ref/TextType",
        "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["t", "TI"], 
       SubscriptBox[
        StyleBox["", "TR"], 
        StyleBox["1", "TR"]]], "|", 
      StyleBox["\[Ellipsis]", "TR"], "|", 
      SubscriptBox[
       StyleBox["t", "TI"], 
       SubscriptBox[
        StyleBox["", "TR"], 
        StyleBox["i", "TR"]]]}], "]"}], Cell[TextData[{
     "Represents any of the ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["t", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "1f5149a7-fd19-4d7d-9ceb-ffcb9cc54376"]
    }], "TechNoteTableText",ExpressionUUID->
     "3cabbde1-9b6d-43d9-a1f0-8dd84ac474de"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["BoundToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/BoundToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     StyleBox["lp", "TI"], "]"}], Cell[TextData[{
     "Represents a lexical pattern bounded by ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["WordBoundary"]], "paclet:ref/WordBoundary"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "901be9ee-57d3-42cf-ba89-01be4728f78d"]
    }], "TechNoteTableText",ExpressionUUID->
     "e8ea36d1-6ab2-4130-ae54-001fba32f4c7"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["BoundToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/BoundToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["lp", "TI"], 
       SubscriptBox[
        StyleBox["", "TR"], 
        StyleBox["1", "TR"]]], "|", 
      StyleBox["\[Ellipsis]", "TR"], "|", 
      SubscriptBox[
       StyleBox["lp", "TI"], 
       SubscriptBox[
        StyleBox["", "TR"], 
        StyleBox["i", "TR"]]]}], "]"}], Cell[TextData[{
     "Represents any of the ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["lp", "TI"], 
       SubscriptBox[
        StyleBox["", "TR"], 
        StyleBox["i", "TR"]]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a149c80d-5ac9-4743-89f8-9066d7ee0e6a"],
     " with explicit boundaries"
    }], "TechNoteTableText",ExpressionUUID->
     "000117ad-2417-4748-aab9-90fc9cb85734"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["BoundToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/BoundToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["outer", "TI"], ",", 
      StyleBox["inner", "TI"]}], "]"}], Cell[TextData[{
     "Represents a string with ",
     Cell[BoxData[
      StyleBox["inner", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "92fe8f4c-04a5-4730-b64d-2498aec4e40f"],
     " bounded by ",
     Cell[BoxData[
      StyleBox["outer", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "80ce3626-7e25-4771-a87d-c10c745904ca"]
    }], "TechNoteTableText",ExpressionUUID->
     "2ed83f9b-8115-4d70-be8e-01258dac6271"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["WordToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/WordToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     StyleBox["n", "TI"], "]"}], Cell[TextData[{
     "Represents ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "d96ba8e6-1cff-461f-848b-dfbd5cbd2b08"],
     " words separated by whitespace"
    }], "TechNoteTableText",ExpressionUUID->
     "5024a56b-cddd-4f07-a10e-e1c28b038d13"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["WordToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/WordToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["n", "TI"], ",", 
      StyleBox["m", "TI"]}], "]"}], Cell[TextData[{
     "Represents ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "5d9d517b-3760-494a-a3c3-bdd8189f9d7c"],
     " to ",
     Cell[BoxData[
      StyleBox["m", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fb5cc1e8-a5a9-4052-9b0b-cab197bbef7b"],
     " words seperated by whitespace"
    }], "TechNoteTableText",ExpressionUUID->
     "6517dfe9-5bd5-4f38-be46-b7c1c7493cca"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["WordToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/WordToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["n", "TI"], ",", "\"\<KeepContractions\>\""}], "]"}], Cell[
    "Considers contractions as a single word", "TechNoteTableText",
     ExpressionUUID->"82f89a3f-ebc6-42b9-9ae3-d21b02833a1f"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["WordToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/WordToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     RowBox[{
      StyleBox["n", "TI"], ",", 
      StyleBox["m", "TI"], ",", "\"\<KeepContractions\>\""}], "]"}], Cell[
    TextData[{
     "Represents ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8e4d8284-9bf4-4232-8f4b-8aaf17c23216"],
     " to ",
     Cell[BoxData[
      StyleBox["m", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "5c768597-9a2e-40c2-b0cd-34705157fb8e"],
     " words with contractions as single words"
    }], "TechNoteTableText",ExpressionUUID->
     "94827886-77b6-45e9-a08b-43fcca5ea367"]},
   {
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["OptionalToken"]], 
       "paclet:FaizonZaman/LexicalCases/ref/OptionalToken", 
       "FaizonZaman Package Symbol"},
      "PackageLink",
      BaseStyle->{"DefinitionBox", CellFrame -> 0}], "[", 
     StyleBox["lp", "TI"], "]"}], Cell[
    "Represents an optional lexical pattern", "TechNoteTableText",
     ExpressionUUID->"35d30113-36e6-4ce0-865f-b16308e2e442"]}
  }]], "DefinitionBox",
 CellID->1238923694,ExpressionUUID->"31414309-8b06-40ba-86ca-84d7c1e4868f"],

Cell["\<\
Additional pattern constructs made available by the LexicalCases paclet.\
\>", "TechNoteCaption",
 CellID->589083746,ExpressionUUID->"856dbd55-977a-4328-8b6c-ceb453c2d31b"],

Cell[TextData[{
 "Here we can search the Origin Of Species for adverb~adjective patterns \
ending with \"specie\" or \"species\". Note the whitespace string between ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["TextType"]], "paclet:FaizonZaman/LexicalCases/ref/TextType", 
     "FaizonZaman Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\"\<Adjective\>\"", "]"}]], 
  "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2b562dc9-62c5-459d-9f70-bf9058cec52e"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BoundToken"]], 
    "paclet:FaizonZaman/LexicalCases/ref/BoundToken", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "54fe4608-108d-4616-9576-059a5a0c85e4"],
 ". Whitespace is given \"for free\" between some tokens like ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["TextType"]], "paclet:FaizonZaman/LexicalCases/ref/TextType", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6faca5bf-120b-4ea6-adc4-f25236220cc1"],
 ". ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalCases"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalCases", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b8d740d7-e8eb-421a-b4a2-c77fd57a850e"],
 " returns a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalSummary"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalSummary", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8768d44b-05ce-43db-a998-44df45387a95"],
 " object with several properties."
}], "TechNoteText",
 CellID->1092979763,ExpressionUUID->"8b5c74c4-1d2c-4ee2-9b0a-30498b50912c"],

Cell["Search the origin of species for a lexical pattern", \
"TechNoteMathCaption",
 CellID->830906352,ExpressionUUID->"36e47171-b37e-4437-baa6-676d8dd9ffcd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oosp", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<OriginOfSpecies\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->1445746235,ExpressionUUID->"bde1c105-5cdc-4295-9501-2dcc16518afd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "=", 
  RowBox[{"LexicalCases", "[", 
   RowBox[{"oosp", ",", " ", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
     RowBox[{"BoundToken", "[", 
      RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[25]:=",
 CellID->1493889061,ExpressionUUID->"10f149e4-2d2f-4099-8305-cb7787387d53"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FaizonZaman`LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "generally extinct species", 
       "Position" -> {{9949, 9973}}|>, <|
      "Match" -> "aboriginally distinct species", 
       "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
      "Match" -> "as well-defined species", 
       "Position" -> {{39968, 39990}}|>, <|
      "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
      "Match" -> "extraordinarily abnormal species", 
       "Position" -> {{43663, 43694}}|>, <|
      "Match" -> "as distinct species", 
       "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {207958,
         207976}, {450417, 450435}, {464593, 464611}, {542018, 542036}, {
        544853, 544871}, {549985, 550003}, {611433, 611451}, {676879, 
        676897}, {685573, 685591}, {690461, 690479}, {723909, 723927}, {
        735758, 735776}, {737225, 737243}}|>, <|
      "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
      "Match" -> "as undoubted species", 
       "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
      "Match" -> "as independent species", "Position" -> {{95992, 96013}}|>, <|
      "Match" -> "closely related species", 
       "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
      "Match" -> "as incipient species", "Position" -> {{102609, 102628}}|>, <|
      "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
      "Match" -> "most vigorous species", 
       "Position" -> {{122687, 122707}}|>, <|
      "Match" -> "already existing species", 
       "Position" -> {{193555, 193578}}|>, <|
      "Match" -> "as new species", 
       "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
      "Match" -> "nearly extreme species", 
       "Position" -> {{221865, 221886}}|>, <|
      "Match" -> "widely diffused species", 
       "Position" -> {{224108, 224130}}|>, <|
      "Match" -> "more ancient species", 
       "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
      "Match" -> "most ancient species", "Position" -> {{232133, 232152}}|>, <|
      "Match" -> "very distinct species", 
       "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
        498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
      "Match" -> "most distinct species", 
       "Position" -> {{304406, 304426}}|>, <|
      "Match" -> "as representative species", 
       "Position" -> {{325002, 325026}}|>, <|
      "Match" -> "very same species", 
       "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
      "Match" -> "more aboriginal species", 
       "Position" -> {{463660, 463682}}|>, <|
      "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
      "Match" -> "extremely close species", 
       "Position" -> {{469855, 469877}}|>, <|
      "Match" -> "particularly distinct species", 
       "Position" -> {{470144, 470172}}|>, <|
      "Match" -> "together various species", 
       "Position" -> {{480798, 480821}}|>, <|
      "Match" -> "widely distinct species", 
       "Position" -> {{495622, 495644}}|>, <|
      "Match" -> "nearly related species", 
       "Position" -> {{500963, 500984}}|>, <|
      "Match" -> "still existing species", 
       "Position" -> {{535639, 535660}}|>, <|
      "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
      "Match" -> "now extinct species", 
       "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
      "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
      "Match" -> "more dominant species", 
       "Position" -> {{593129, 593149}}|>, <|
      "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
      "Match" -> "all peculiar species", "Position" -> {{635730, 635749}}|>, <|
      "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
      "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
      "Match" -> "quite distinct species", 
       "Position" -> {{694106, 694127}}|>, <|
      "Match" -> "only herbaceous species", 
       "Position" -> {{713843, 713865}}|>, <|
      "Match" -> "extremely few species", 
       "Position" -> {{782509, 782529}}|>, <|
      "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
      "Match" -> "yet distinct species", "Position" -> {{870851, 870870}}|>, <|
      "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
      "Match" -> "already recorded species", 
       "Position" -> {{885795, 885818}}|>}, "Dataset" -> 
    Dataset[{<|
       "Match" -> "generally extinct species", 
        "Position" -> {{9949, 9973}}|>, <|
       "Match" -> "aboriginally distinct species", 
        "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
       "Match" -> "as well-defined species", 
        "Position" -> {{39968, 39990}}|>, <|
       "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
       "Match" -> "extraordinarily abnormal species", 
        "Position" -> {{43663, 43694}}|>, <|
       "Match" -> "as distinct species", 
        "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {
         207958, 207976}, {450417, 450435}, {464593, 464611}, {542018, 
         542036}, {544853, 544871}, {549985, 550003}, {611433, 611451}, {
         676879, 676897}, {685573, 685591}, {690461, 690479}, {723909, 
         723927}, {735758, 735776}, {737225, 737243}}|>, <|
       "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
       "Match" -> "as undoubted species", 
        "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
       "Match" -> "as independent species", 
        "Position" -> {{95992, 96013}}|>, <|
       "Match" -> "closely related species", 
        "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
       "Match" -> "as incipient species", 
        "Position" -> {{102609, 102628}}|>, <|
       "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
       "Match" -> "most vigorous species", 
        "Position" -> {{122687, 122707}}|>, <|
       "Match" -> "already existing species", 
        "Position" -> {{193555, 193578}}|>, <|
       "Match" -> "as new species", 
        "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
       "Match" -> "nearly extreme species", 
        "Position" -> {{221865, 221886}}|>, <|
       "Match" -> "widely diffused species", 
        "Position" -> {{224108, 224130}}|>, <|
       "Match" -> "more ancient species", 
        "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
       "Match" -> "most ancient species", 
        "Position" -> {{232133, 232152}}|>, <|
       "Match" -> "very distinct species", 
        "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
         498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
       "Match" -> "most distinct species", 
        "Position" -> {{304406, 304426}}|>, <|
       "Match" -> "as representative species", 
        "Position" -> {{325002, 325026}}|>, <|
       "Match" -> "very same species", 
        "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
       "Match" -> "more aboriginal species", 
        "Position" -> {{463660, 463682}}|>, <|
       "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
       "Match" -> "extremely close species", 
        "Position" -> {{469855, 469877}}|>, <|
       "Match" -> "particularly distinct species", 
        "Position" -> {{470144, 470172}}|>, <|
       "Match" -> "together various species", 
        "Position" -> {{480798, 480821}}|>, <|
       "Match" -> "widely distinct species", 
        "Position" -> {{495622, 495644}}|>, <|
       "Match" -> "nearly related species", 
        "Position" -> {{500963, 500984}}|>, <|
       "Match" -> "still existing species", 
        "Position" -> {{535639, 535660}}|>, <|
       "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
       "Match" -> "now extinct species", 
        "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
       "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
       "Match" -> "more dominant species", 
        "Position" -> {{593129, 593149}}|>, <|
       "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
       "Match" -> "all peculiar species", 
        "Position" -> {{635730, 635749}}|>, <|
       "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
       "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
       "Match" -> "quite distinct species", 
        "Position" -> {{694106, 694127}}|>, <|
       "Match" -> "only herbaceous species", 
        "Position" -> {{713843, 713865}}|>, <|
       "Match" -> "extremely few species", 
        "Position" -> {{782509, 782529}}|>, <|
       "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
       "Match" -> "yet distinct species", 
        "Position" -> {{870851, 870870}}|>, <|
       "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
       "Match" -> "already recorded species", 
        "Position" -> {{885795, 885818}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], <||>], 
    "Source" -> "Text", "SourceData" -> 
    "1:eJyUvVmSI9mRLdgb6D2A8ZOkCNylWPVe9+\
v0D0pkZJAZVTlQMoJFqU8DYACMDpiBNrgnuJreSu+sVc9R1atmgCfridSQ4QBsuFevjkeP/mbT/\
fz5//t//8//49OPX37+6du/fPjy6acfH1d/PdbtqmtXm67qd6vvHn94/Py4+\
uqbujqc6vVXq2pYtdU49dWpGcb16tPqVf5ynrbH1TD20/Z59dqMx9W27seqaVf7ajsOK/\
mP8VivdvKLvtlMYyOX7/b4W9Meq00zVq18Tf70uZvk1+/Pdd9sq/Wqanf+40PdnbqD/\
PW06utTpdcY/CKXvh7qdlyNHf9ZDePywuOxGlfbrh2bVr75uPpylJ/Y4w11fa53+\
utzzWv03etq6ORfp+ZwHHU19Lpd3xwaPPlwqbdNPTw84LLn6zDW/VU/4H/KR2tdqGZcHeX/\
bWpZUXnwk9xkI19ra/1qN/WrQ19XYy1Pezk2p27oLse6Hx5XP7VyIXlNWeZ2dZTnWOuluu126nt/\
0LUuzO//17/932u+mz7ueGzaw+qMZ77U/bG66M1X52ond5zsPZph9fdJ7qmbIE9zkaWUFTldV5Vc/\
zzp0spFdOX7en+qt/infFeeX27Sczm5cK/HRvZ9202n3erSDUOzkcscq5dafn6VO1e9/baRFX+/\
l5VZ7Rv59CqfDF+tXrv+WQRILty9ymvJ2tWnvb6dLq8+\
SO0rP0ybv8mTUCB2ff26mi7coOEoj7RqO1nFJ/2qbOqnVd2eqv5Q77hE/+N/yP+\
Xq1ar4bke5YFNakQatqdpUEFa26uMKvszcbj03abanOqvV/u+\
O3OpZWmbbhfSZsK3q65ya7y9yEC1a2QtLlM/THotfYdKLtfhPR71i92l5uU+yQbpaq3qX7bTIN/\
ed728gsoRV4+\
vJXcdulbEf1fL0TpRwj6tDrqg8o0zFu4ogmsXxZPIwlD8RA7Hq67HtjvrZbEeO5Fiff/\
H1Q9X7oYIRyuXaGWD5PH3TdsMx3r3tJJDawL92ogcjNVzjcPy2smp0ANTy7+\
73rZWry73uZxq2cLGtk3VhEhHXZ3khMt99lXPNRWl0LWHtT8yHnfC9sllLtNGFM2Rcvt+I9+\
tbP30u7hljdMoUnTlb5t2N235612HH2KpfuhFt8m3qm2t2935uw7jtLtiSWSTTLWt5EdjxyOtf/\
6hOskWVf322FxE+Ry6NQ521fey+\
vJqsjincyfnuP5FHk8eJDb8ULe1XjAJ22yD3lItj6vvVYvpcq70Wqbe5IqV/J9z1/\
RxmuNwQPNWcmxxvv02rzieIlOvqs8bXOaz/PzDUfa4HlbfX+\
vTiSuCuzShR79vWhGEVpSyPNF4NXU86sLZttShnuVJ5Oov3Wk6175q/y4qTgXW1a9d55G3f+\
SdcdFvZW++67rnuueDbDp5k+dWzjl0KmRTla0o5GpUNSJrp1sm6lP1RjrYetwfHo5dK/\
dWnVKrjlO9+Kzfl4evdi/NoCc6SZctXZKQrwY9jfJ4uiJc7zUVzka0+14+\
hCAOlGB5gnPVTsO2by7joMYlCavrlk+QtrjjeZItauttPQyiJiG7q+\
Ysh3xvCmJbtXp6xSLUPOSijuW/W/kFz5NYShEb0d4DNIYuQ/\
0CYRtG0Z1neXTRifrVT7yb2OchNleXThayr0Vx69Lg5URK981O76H7eqZNkJeQPftRT9O0ERHv+\
06OOPQARHgr11B7q4aomw5HV24m4dXptbqGEVTjP9Ej0KcxVXTouvkLVSexkrYKaQm61s7WvWMlEuY\
rzRvzdMa52Is4hT8iTz/p/\
qgZXEO94bdre3hYV5zobTXU9rbDtN832xproUZcn21f1yeqITk8agCh1Fu5jOgeOwfc5WaEOtGXqWA\
KTRQgl61pdVhZ/Q0e1B69bPxaDz1fUjYnv3xRnYe+\
m9qdKm1uPfZCbiALMIlyq6noi3J8XP1RpEfM8Hn1ivMoesIs07AVlVera7BSGZF3u3RNCwUgvpwYq8\
EVgPzFz74/IJfapFiEu9pBLcsryNvL41wuch84Hie1lhSE/Eq7pq+\
hTLuLyuhovlkntvCNrRYnQ27bqFQP02nEBm3U6KovKo8K8RF9sJ/UWOgpcVdnIwq+\
3boV4KPjkPWHCQeJHrFsxiDnAy5QXcn93ZPiYmMd7I3DH5IHgADvTKLhK/e1uH6mol/\
FR6XmF8Wj7sQLbni+upajMRmbQZ/LfOdq+yzqRDzKg38DR0LPViU3lnfTQzxbJFnNGuYKOutFPdaz+\
mnFnR9Mx1Fuz+FyyFtMrd6vpQ0q6knsoPhuL6q3T3gfWQDdrn6cWhV4ccUHCLG6n/\
Uv6itB28jL7er6IlsjHrY583LppR3Yw7lQrS8ncd+I4Ijk0MWA/\
ZW9gI4XGazxQrbq8uYVdlqfB77gSu05N84Xrsae6TeKqv/btDucESB8Ulep1d3ufYV/\
CiP9mUZ6bdbw75NKp8quLHBlOkBMzSxSmnvTer2znEfRYdVe/SyoPQ0L+kPVNlsRG/\
kmD7x8V2S6Pm/6620MtLaPJT469JXEEfppjrTWOXQapi10kf5Z314kWjTRMPl5XVv0sO08FMp+\
Ml8Lgm9uimzDrjiZ4nnVl1r+\
D471FsHNjtpVvycHZ6ufyp9OjTiQL2L46hHrCJG0h3EH6EfdUvmTOCkqmPqMVXqYtW653HNPtbWn1l\
ubvyOnbmrj0Igrt5Z/j6Jgm9EClg2Ch1cNsF4tFG3lrPfYP389iyIpAbLTojvlp0XZnrtds2/\
0tkOnTqa61VsRB9egZs/t0CJChg7Wtd921a66jNhGV+\
pqcf4mhkmWT4RSpGpAnFjtzg1tlSxLOa4W0E44obAS+gDim9Twu+TTXWNCwuWTX5yas+\
yKrLiYXFnCcfsI7xhOqKrHOEFiqweoAt0mu/enFoYPR00uJM+\
3g92rcY1XXVE1YMXGSSy15spZjCMrUDOcMEcSDshIzaWrN1Jwa2oade/vvQ5Uoq/\
mGnqiaan01m52X+\
UNZRupTNSONuqv1bWcRTW1aw1Qn3kMRglAppqbiKVWxY3dYRyxrdS9lDvUahhU0KiXNpWYUr2dxD8D\
lgcHphrCBz43YiRPY1e7G7jrq9cBj6Iuqth/VTeUf0+a4Gr+\
fdVzsoo7CxvgyGEdq3ZQPcucgv90I174wHcqP99rfN1TD8u1xO5qaD3Uv6ijtRnEbo81BEgF15VdJf\
ZkC4/Fr+2vL+uxwdcunSpNO7siFryPqw2cZteQcmkI6c12b+Uw6vuboi8nBOunAiJPq8Y/7WHJ/\
2jIaz6vqrym3Y43CnRDj7He7/H03f6+RMkDqHemp93/oT8Tr6bJ+arLqUKMpKkKZJHMbfXPv/\
pPdQgO1OUfVAPKj7+iUlLnUi3gpNmbobpiR2WzcFKqWGc3taKNNjUuTG/\
XTzKiEI22VKeqW4xtl7VBTJ+lXsUAX+dT28YkkaTTUo2WYtALQq1d+\
o4xtOkvO90Il2umG3iIsUVi46fzBaukuZOhZNI2+hu1+3J/c7VxVEf1+\
V7q4ea4ZJ14xxxCvan5oang0TUDeDleB9i4sqt6gVOzr6H7O9GAGqvLb6YWj6Q+oRxaFVBoFNGgXV/\
0x1EsocbREpXJOYM/\
paFKBV96e9LIXI4EzCXyS1hbiZdxWxqGLZX7UtuLnzra657P6thDBzDU7TZD3b/YAshC3c1GuX8h/\
nktzixzGHqBney2yN9WDa/cVnT9iY6snmNxicU90U8gD4OZym6/d3Wmr7s94lX1aSoEzZ3vszzaVo+\
mPsWpPmsc1NMWfqLYyBkUt15DBA0/PDCwJK4aBm6bCNXlVP+\
i12Z0ZQ5q08LUqO6FNedbqv0Ll21dYmSPNhvVh+uZoTINXRaD/\
s5etndn2Ti8Ks5HtcdbnyZ653Is1f/W94Qthctq0dZLs826QAVEbiq/\
hHFnDnzaMft7sseTL16TwwDTqdsOY9vWB/UJqcOTHy4xGbONeirdDXUF8Mms7K5+6caaAUvTc+\
cuY92H6vQMhL7Ify7W5tu8No+rv7rpHo/TYGccEkbnuTpDS1v4Kqer0uAhi3iD+FsOxRChD/\
WL2rFqZgM0V6EBs58rzZD47fXO6o8hMa4/gs6FWYFAtpCknKg2J/9zfTI/\
y11czcMyfR9yoSbaEpia6EVw0rWuFyl8zckC9eICavg7Ihu95yaZB2Mbodplj4inUjuqfgWynzUS/\
npxvEzO1SH5OXYds0n6GyZXLWAd6TnrQRNh1yWzwFW0vb7zqcPRGStx66e6JOTLPqa4TBPLrSoNZkQ\
Zt3NTtk0vK0m3SbOZNR3QffUih85zZHP3j/mMX4qw6R8+i9U+aHpAlfvHX0SCkUISqRGdPfLkL/\
T4sdfTQdVS0612j0fU8otIGNWA1gYGz72rmsehk4jmXI891P2Fzo2sgZh/\
WbgBroLcMi1kt7eknEnUrtvKr1mH+UGP6qRH9nI5NXXk9SX+\
PNWmQ6EpXupDPWJVVC2KcpH1fj8whqZAi915aXaT6lxPELgU6eJuur5ldkj3ORIEw9S/iLQ+\
WZZ8jQOvOVyNosww4XzJMvifNZifenhhQ1782hcfjpcvH88ySjKNZtolZmpwLK4uJnZUTigR4IUkvF\
dV3Xf7ZnRRoNuzTg4ws/y/hKcxNqJWcGVo9zuWuOQNK3kcJHOLxeFS4BnpmkwoYP34/stffn7//ff/\
tfr88fuPH758/LYoSCsfyJPK9jfyMJQEWbTGwgF9naE2PcuY82paoKYDoeesOlQoVohfXr/\
i7h7b6cKeTX728uqVWmvE0jzLcj+\
LyZIWWkqgVehEQ7YHdWN5ksTMqeNmZ4kS8FpUMYtRUIi3d7CKQzotiNisGPvxF3jDyVppGK06t+\
9e7J1iV8xEq8tnmsEsshUtvxXx7A+\
1bZIWDkTb1P19hRDmyTTNUkxEv456huDjnjQYmplud1a63t18eMB99zoe44a6blT0NTKHdm8LDLEun\
l/EBQ+9epujPJNmcNUPqgfPwsj/aqXHNwwO9dei58/Q5bCsvOz8x3uGYCl8aMy2qj7FU+m+\
aeZU351HT78Wf4FKdJWvZ+\
Bg7qk5OMitwqdXnXfSjNlLfRKLsCsXkyUSrQK7A7WB8EkVnl77SaRHj6DXo4q8fmoZLK1XFneZSBdd\
ar7jmoUdXYnvrmKsZFPP8aOmFcdxvDGYPLmySfnDyPWIfCFTJNu17TvNIFPseRRM4RUvLwnwn0oa62\
d5r3736/LnbtNqgR4oKbB78UWyS6LKnvygyqlTr/DIl3sVLTge/\
2nmLV8Nyd24nC6q5jLLRbYnTduGO6U+0jI7uGYCGut3riKNBIVt2UF9k1C6sTzIni6XB/\
WUyspZYk2qSzNO5cAVC6jlAqvgooTCDNyO5bdz1T8PURDRl4W3iaqIKHNRyszWW9L7LMETUu7D6lqP\
OQ7T1+jrg5YoPX+wLInSCJecYaPeqAYp8tFuqokjgCVRS6gaQq0XAonm0MopsbLW/\
Da2zDNMiRdhTCjolpywYCiurCZ1tY4dDq+9gnyL0A5/2l4PtCZddqig6FMMdP+\
RZuymyNPopxbQnuCBlOTqgCRyr3gUXM+v04tu+8Pqv2qP3MvjV32d45N5ALv2RIsqE5GGs/\
pAGcSgkl317rkDYLCp5Zleap5LKyHZGUpmchuSw0R8gd9EOAIn71GcRdW0sEa7Tq2dWoJIl93ZjWVu\
9gbZY/6jCEFkr+CUAQeUTn596bZHVv/kp1biFx/OQ7UkpBHs2h7hkTsTeZVK/\
5QVSqA1kLxprUzqaZ2wRyIFzaZm5g3ROqAszaBBiLyp/t2LD/\
pWXrmpznKDS4VoyjM1q5dGzmHKGKfIsTxKzgJ+gr1HKBGf17uHB7dy9/L6w6/\
k9B8eNJ4TsWzrbkJUJc/JqhrC5Bb4C5QQk/+rdYLmLFusr+P5I7yS1vREzmSBrQ4IJ0R/Yx7IAk+\
Bj07yDoDDoKrg4sACVqSHrFCMfDrzg0PUbtpyWXN3LRFeimt10jg0i/NDzlJpvXyI/\
Oriqqplk8PWUWB0S+eLdOvcxfJTmDWzOwHmpGUBrX+8vJFrelx9+O79n798/Hn1+8fVf77/+\
dN7RfWt/vLjt/Knb3/64ePnL58+vCfS7wP9RbnCf5bQ93H1sWRKv9ODJl+cO2N/\
CmcsvOzH4hXqNzy7gAtj8R7FiTT3iYkqpGsPkxXAJRJ41deN72PzPvsKlsrb7ZVL/tkTC/Gz+\
PKfG1EDpVamj5KhFLz84+rPOYZInrb8keLPgErLPapBbKEeVz/UIsI76Bi93F9a9T22ADrEVR7lz/\
R5y8uojSrPiJyrpSk+zCLzeUD+Q9V+NZSkSLoDoJuiUU9d9+z2bRGUhsR7INSpI715iH/\
yqbqTek63GUO4Ae4aGpCxJKCQ+\
nN7qX6Qmma1c0ywUntd05ncYSOoeLF12MuS4V0zXN7dfZXlWZQ38be4l7Mpy2OVWA8AXipEBmK2HKM\
Rif7ZC0dFxXN5ZXnmFZcXW92wSOpPVOoMlMCZNsHkcPSynDnPqmTVEKi2AHZJn1pVza5Huj+\
AErval1X0McGk/SyPpSknjTau8JDkd7q5nhe1NP/oABIeRLl+XzWK7ODT3gbx0ENDJ583alaQs/\
AEABR3eS/dz7UpeKh1Q1muGJw9FHPjiyruVFdu7lv3xZIgmlgdulgXq4YwLW5v3BYTqXE9y8KaPHvf\
Ajn6H61mOtZp4fKCWZlSHm+kMWsZiaH4pDiBgem2rmPpgAUPcZ9G+TGLAsxaz+\
MKL9v525lgePEqFXj83LZ0tZdLj2KkFmZV+\
iXG7RX6qIqhpGgjlnZQCtAytQMN9bmGKqyMghbkyQ5Ta8m+K1JH5Yxajbke/HOizfT+\
6bERA6CS0yCy7hGh4Zja+kYMvK2rwcz8pi4fmrTZmYI++8k0kYYvS1VUStryblpGG+\
BXElx0bWrxB3UJw3p/HXpND97dMok6triIeVz69BLYNTtPm9A56xcG91NCeatDN1m+\
5zVhhWP7jrWnaXynKHhMkyMVBx1JOVynfRDj+\
qTvCtcmubqE6spTATBd7mfZAnco8VUEiYjfzZNk0XxkxkUk4cJXklB7L0f3Ks764+\
q7RuKbnpBIvTzxUAVqPLWOmg3FNb9hJKaQoFAoV1MbMnH2pwQW8yo1Dq6KGo/\
WyXK2XuxVISYCU9VDzvN/g/x85ehiJDa3J0SaWjSeVPGE++l5b0uvLqAPc80QAIUSQVYnxmX7Gv/\
Z165XX5A44Hpl/VrtLb8j8XEXBfNqe7MPn00/\
aFpbtcDZcNcWk3mJzX1pTSNpOK9W0TLdDNEhzayAB2i/3ctquESnY2dawcK9djuLw2bvNmizw/\
nJKhv4h6okg/3zeGuhg/DIacBrBUIS5pv1QFG2foOsn9ZpZRz2pqKAVJkr+\
lsdqaqInRAKOwFCvBquvKleUL0f3F+P/dp27hUG5WA/iFRf/\
OpQOzJ609fA0NU1YHFmIn0xHZXknrs+LxGkx/Dm5+KiQLlaYW+v/LqrI+\
b9VSlxxxCD4njoAwTY9pRKQmYz5TssM566oZ7tdONgMq3Ga35XbUZ//\
U0UR5K6mcn5iyxxxYwkT57J3NGf+tZVVFV4qph6nEYcsJfmIEqYS675H81iUHe1LELIi/\
1Gs1aw6rop0PFcwNxMw6xO5wEk3lYed3+yZLBmXoqBqDznjL1VTalW/BXOkuflVQZ1x6s+\
qVBmna1mURImroQ7rnWBhQy1eox4jSWCG2G3H6ttd0FwYJ0cc5jmVlE1TOJaAX0ryl6/bglcO+\
3W7aH/q+YUj85s3+uQxGae5ynn188The2OHLMWrmA0ZIcD/ret+\
rZ56Qg19VAAQu9VOtkKecGtJixxVhwIYNLm3tLbRwjOFuzHL6YKZ155c+irHR1+\
7TESHXNuTlcYR1WU69kjGiIqLqkyh0YNu/KgrRya4UbiaqUSy8S13P1w0OBOxbv+\
pYPDTNHGPhn6adIS1gktCuORUMWcWEBDSFFSqPO2xeSgW0xudURyfWCMso6ukFYxOaih16gEvQnvcJ\
/IlAK9oNe6eqZj3myfNc2jZw5boseEoNW3NsFqUbOngdDPnidFZHFv7Q0SD0z2+\
kCJuInE1l7h0MKELJLiQUV9PZwI1wcqF21C19VvUyqMsE3krT2DGqC/\
4Xd8u4KYBgr8xlhp2DLUOE6q49wOb3QF5KEMIG3+\
CvGce4XlA3UwojCpOCiVavdULMu9W0WNH3daW6FDnU291na8J+m8KK7F/ehrnOSTddvwBVDs2e+HS+\
9fLgsIJK0hoBBTRSCsRl/\
TrSph6sCE9hyqZmfmGVnuik6VdtLB6AXAwRUQ843ypdc5SsLMMwSdPhP3yuBjg4m3fPUpkvcpMsVvx\
SCwrOhJ9+2xa7boiUzRqR1/TdzXreN0qt3OwjjFSCLvR+/hbA0bVD/u2xU5j+\
NXXNfkRvx2jial0thsmtGsdq/I/Wf2vKyO07g9QvxUG1P26FO+\
IYC6CwGYRoHbpfBJhZONJt25vnO8ocRQXZxDmxYO3NrX+krD6KX9hwfvCTWFB3MIB+d+\
vuQ9vQrNK9vh08iNLQ3EHcqX3wGFCjgoHvLpnXVcyf6K4bEt06qi5itLJ8lm2hFmuR/\
q6JEapp18WU+mQgprVD+sGp/QBfpSKXUSicfSoRne6jDOLIccB/\
UJ5N6DF16j9g8tIJZlz2NuyOjZnTdXs+1fUHThqw/vYG21I6w+A0er/\
8zpCyLgo98xfZ527ak0O6OJRA9TXZBYNKuL8Moq3CgTuSqrliurl3U3pXuZTjSctF6Mk5pAWonZbs3\
a4nwAU4n6iZYW/EEIR1Fg56BFowZlT8+oRiqXD8L8GW9c3E+NWZsa9q8yrKxmkmwhhm5FZKw1kK/\
LSg8TmksUj6dKyY7/nTANuLUbN/beGrCczZ7D9f0wzSDEb63/\
P4viKC30YsWZgMcW0XNBPjRUDLknMPJP61BxhBubD4LlGKLHLd2/pGY0iqx3JwQ34aFBZe/\
7yZtz9W802TlHrG5zbY2PPAGWsA1IIkBatzlbOAKoVpcL+\
23MSrEnd5Id6CHADFT1VQgOKu1hs7QgMJmLHtvbEDC1Y+lKD/CSJdByxCFrNugvy8Dw+/Ekjjc7p+\
WZmgHoHns1x69kv3rtGBYPH+\
yfCZT0hByawq3n4e3iASyl1KO7t7GM9z6tqV6BqeY17CcBvYYSvs5S0bfVLhHMDjVHIow0CR++\
q2Oy9Y4hoYbTxD1mfRppNcu7MCt37kR1QAeemHbNfSeIzzMs52s92JpsM4BG1A3YwmkWkXGd4pEidR\
yAdWtNQbg32+AQyyRZhtqbvTGtmFZr6CloCwKaHjUdBJWjbcLfTNvnM+\
ow2lXXjrPUmDy4GWzNDifLoFhhemUoRRAX6c327v/kKkeSeu8OSOKhchk6Ku/\
va2UwGkuVVKMVaJidGcz5iwZLqw0w2I7rW5uOReMRhJvdZO8UNoeea3Rppie0bdEaRKPxqYXmqNN6p\
8e80ctYHQjcLTlte5Gzvljk/\
u9m427k8P6hfnioGKmVl1sHgFQjpn9YMao8AyVXwnNNJOOzlDR4lm2LygAdRf2GCb2huuB8Gf5n+\
9x6LcEvZ0WgR5ZdUekwCIgSNeywyfvTRHhnCSRLvoINOGq/\
cF7ca0TmKfULRcHUbojGESJQgBnyc2YZl4rnhOrZTtPTouXqk3JFhBBGgWmnhDDhv2zkngWygcesFc\
17cijJzZdO9WHFsnnTsprTMxGRIbrDs0jOiHRhKhbiIPBi9lTiWu8e9Im8M9p6cValElTEDCJe7e+\
7EPP3258AdkURkwkAhM7VCd0TfHx62XDhVUFDAbF9iEh3+\
n6wD1oduk3dq2PcDzRDr1ytQ1eN9hfNqxi2joCEK5QDcDIE3cv5g3F9w46F7z/\
CV0EchWsz6I87QGc7Wsm3P7L9TDDLvyQURBa2uPuxZAaoNi2iAJTcqgaIiB9KSxft+\
k790oN6jcNTCAqC0mE6iD4xHy37RwktE79vBtd0VBTDlPr0pmF7KoInt1oXb8kPBOO22OxKDv6Zt96\
p3KinZOVAtul43RLIejWlcBcY4iNkSqY1Up6R8bAl2jXnE+\
KONmGRrKmcGCNrIvA0HZOPxFnr3dE8IEKAarFBa0zCDV3zBtj2/\
U2y3eo5KDb1LxVvYkBkM1CEGGnOxJV95MINsqhrCT0zK/\
6YwSpPMkQkQfsSDX6qdWn8mOVmdtTqSbrKkRTClxipykN8EpdVFdkbxS0eRJAjLJhVxNxrIkHPnxde\
IFwWHZ83Zoq5DsZ3oZ2Ncs7axmtYK+CbEGiKa6RAuO5cp2ddgJ71inxxkYYzOtuemC/\
YVpYKWG209ai+2oum9qmdSMaTmyp2n2nefgQsVXG+yq/\
UVEa2cZAD0R1qOu8hfljKVD6iAxC901zWaPG4SVYkhL4xQUReW5bju3pSxWANouGWsFStLz0clR4Al\
2sOfL8I+XPmjoYTLwr7WHyn1BVbOjfElRtQH/xOdt0wiAfzIVNnWS2L8cSk5FHFY+ctfP1Ql7+\
UsnF1QUJeL0PLjKbIuh89t7nykrnoJvWsLgQkcRv3Injoq0J3skV2z4r5sgPAoLmbACjs6uXvyYGl3\
cweFp7VmWSrM9WlFoLwXTwMv8rWLv2WLIf1jLDH6tARHs+uiXk7RjUBo2h/\
vCZREteMVvaOSpgKJOpknWO5+legSaWn27JpVmMlr5qmfD3kWqiLrLi+\
MPej9Tv7op4MIG55pKzFFqF/0a93uhG0KtYCgE2EfWljMMCQNohYDyl5CFAHUCHGkUF75gmZUqI+\
8ZJW1UU+odFTVeiUujYoOAyvcA/\
6UCq0x2u1bYAjv3RiwzsrxcDAVUfZGMZall3CY8pdT2w70sS1LXLrrYR1u8O5MCyXGuMFa0HRJKumT\
ZCeApRE1ixAZU3JG0SX0SJnwC2jOzdDqEQ/sQGEttbNrK6ECWWtjrd2ttWoI7v3wDOwU56V+\
jYzSA9M9+B6qWnpyqZbG5p7I+6VNcMshaAO8GRIA72ktWsn2SCYzMN+VT/i2DUF2JyE3XIlHR0SD3/\
i6DKh5CmXOuXlFHOY8d2Ky+UOPoJN5c9iX0Wtrb6fRH+LlXOZY6T/2pkWIHkP3TsW/\
kVZD2PxypFJXZrFH60ajl7baTMyz2INWXalEdjhLY5AyoB8zcJFVArwrwao7FmTFQzu/\
uu4fuDEQNLYxjOV9i8m68TQj1icV928PhilGHiXjQjbo3s9taXDbh3NWFrn8tK52LLRocVbOeMshVm\
hd8T5t+JwQyfLqkTJ7yQPIDCg8IMB5gpeGBWEJ+OjSvZ1VmhLGYyUILiTDqOGhpeEpHO89TpC/\
u7M1HXV9Tt5IDYnb5o2dOqsR3Qdy+WxJ2F8D4MG5l1u+\
nQlJ4HHiaoi3kBibyojkcX55WxJofHJmVT6NNklOIRtQYetwkvntCEkiOB1vWe/\
yUDlj1gPDX8ByoNEiUNGsBqdHFSjNkp+eF6rZGn1FBZZk5ON/HrTscvbigSBeVHl4+\
9dqzqYY25ZqBZzgbMf/RzzvZmrBiLM+wkAJtNEa0bM+\
RLsKNdzWC5jPr5VvpTXZLQYdlNnrSRKIqUmYFIVJlRdPeXlSDMLt4Nu0FxBwHQAOQ5QWSx3aQgpZZo\
AuhnaXl6u9jJF+5B/7HD8thNlfqWRgI0+\
dPL7liuevh4us9n3Jy1SOFObEm5or03sRvJcQMAWFaW3INPROWCVmsX3ygVKi8GQcufFksyrSkTTPs\
XD4RBYCb9HaoxRvicAfSEHa8nVolW7M8XU9fznufN/8j8KxFpcerX1OExj1/O+\
1Xw1Brs9skYmN5E1GsQDsnqJkciw+uGfQdOuebNgOrhpXzhF+\
RiqX37oblSFgCF6OSyZO2fhmDzAn0cys5M4GthqcGcqchAwWt4qtXzPusGCpQf17s6Kq+g4a/\
oWkH7exkzM+7TYxV2glDuWgajuwok04Fg3gxW+DD2KU7JAkM53apbWRSwV/hD/\
6AtR4AMkDtFTPlw6NqpWhzrS40UuWaRjSjAB2RzKcwoIBCTsVZyKrxkiJB0ACpm8Q/\
Y4CIOocLG7vJ49MgTm5rlhDy1XfjYWhrvXHprT8ytw6b23GZflqMai5eL9FU/TX8RQVTgx227bqe+\
ptUn6d4n1YifvaZW8XW42YpC7BGhGEkq337Kpr+hKVRKithCxzVDaUWCNJmYCQO8cVS/\
HxNux8S3y0tjaq1MNOhrFG99/RUaSmoT8BeViMy8mlNKDZzU/pbfXcGM6ORfQm32JIPBjH6UbG4/\
Fgvbu6oVU6zr1TkcRnb7AHMMV4jO+//OfP77/+f2PHz6G55/j1aiNU5HKy5/\
hAqlTto48iHNaF1BeriIDxGkwXzT4mowuqm0pYW99z2m9HSelgfyDng0k5V6ROLI0BP+4mZTbY/\
S8sQLWSChA/E6bq1ymCQELlzuTfkHP7okPmHzS/\
A6aG3mxrpVpl3zL0j4Oq0TZJRIHIhsEdFUhoDX9CgbyOcXNovlwpp9Tky+ORD+BUEE0pCL/\
mNBWg1LyC7STq2weCzOUtsibuy0Wb6sNy9+R4zZBSpXp0/\
vxtImzDuyR52H76tUwjvGgcif2RfwaWcxj4TeSN1NJl4gIHV2FkkX9GVKnavsMaLlfPHEGF2jTvdRp\
WcEK19nqUhOJQT7tvFyuC+7Z5yBEZIZzV/rwWFR5ITOyxobTePxaAxrdU6t+zBuNCmuo582JYiTG/\
sFqRLcbmQxG8J6goRoLhqIIXm5pbF41BsDP0CX86up0uaU6hcDROules4jM4Lp2PD3XF7KMYrqo5Mk\
SOrFsdCkdlnFF5KxEUj2pQ0AMkOofRkXj/\
AZIlFHE28yk661qpsDVDZhwxMWTHmpvUlb0kw4AWLJhVuSFTOsbR0F5h7eyeo0xt5ajkbhdm37hR9I\
d1MAFzCBrpx5zMjf27nphw94I3Ju23MbGAQXopxzvLsv+\
WpNNKzJZa29gWbYRrWcJMhyvN9gdt9VmA+PWGKnWpdNWxq45rX4baakt2ICCConRrrVB4KlxLmmc/\
pul5LjN73JLI68G3ceECsw7+\
TWQkNPYSZWd7YYXMFXwl7KMJEWWWMhW4AvsXrbea89TIf0J0qxiVZ0HwdtmnM2Y1VsnRixXJr/\
P6n7FnO3YpClBCHvLpPormlx3utmzVFd5iijnhopNsakawH5oYDk4vtWYVXdJdGGkT4PhMQmqm1onU\
5lnQnaz75LFLyfVJKi/rh18hrB5foydGvdYb59BKyk/ao242qsn4Bpi9u7NXF/\
TlrYGNaAarzkVtJ8mmB+cumP4B3cWdcZmEf3mlpF0LxJVWFFuZFmQpwqCd/\
YVU7IN5vs1hBi1i8UjResJdniruVYmL7a1eicAUKC6AC0882Tg4xsKQq419kEJA4Q+ojF+XA+\
iI1QUo2Rj579KhEfMx7/Fjxl6u7tEbkxTwZTzGjmgJX4YXkaGbL51BkS5UrjWqduM6+\
DyO1iyyryQAGNRL089s3uOOx68e5sMul60tcJuvQqClJsuFE217q3nA82iSZ+\
jUGPJfdK9bIzjowdN+r1G8RTjJMqD3nycZQh9r/nAElEXI0U4W3XKXCN0I7ESTZY1PzOvdWo7chA+\
IgKtD8x8LSxSddLZBdeEGEQ6zLqRLeue3EADOCvzcDkj385duPtpHrQa08cyxrJocbba9TSUOz2pTv\
AAX8HOa4/mnWCEGaI40BkzGYghBBdjIsKePZss1GS4pSgiWdtTjzkobAKpr/\
bYVncxjiAC0bwoEh5By/anzC9k27jDhwa+S0+6nLsy/w2/b3C25Bn70Up94MSpqEtWkygQ5bS/\
GixlSB1Aw+q3RD/go1TJMT/\
u19imLOASy1JFGFNOmYPhbKCB2PXdPxUOX9jFPt7nFFlHRiNNlID9UcGNTBIkdQ0Vw6PysKADuhGEN\
8MNppfIu22d557/tZDqtSZiK2G6iRhCZ4CasfkirD0vtqz4K47azn/\
iP4gOB7Ftzwmdg6z96Ez77LGJ3l0L+XSbN9dAHt3+AL7ZnHCl+FBglRhmVC/wVkhqyPAkdQ+\
TMHEXpfbF1sOWuT5g8SsaVjgOpRhH8RyU2bYenY9dlH10h/M4sv1mRC0XK7+4ncU6bwtXUvJu9+\
AQGHst9/0Nx4yPHyFkE30glvKfGSYA/p2eQ6XWeKyaNkwQk3LVmB/\
KcjKzB3vi6DB1eQCAdXCPJZqceqo+\
Xxowej6ufhD10sFjd4qOpg6KqMILZlxArnJp6OxyJ5Cl1rAuJpGrvjF6MnUFtp6bQHxTG8TYH3yXGG\
L0ZlM/7727ZLIWt6Y6muhMJIh+k9DKY6ZmcC/wfsfEmKGFv2KXjAxk6FBWe+\
lOL4y7jHgKYuMhs2VOIT9jUBHHJIYZeY6blDk3hzFfAg/g1KEhXsglKVvHJTle8Jpr8Ps8yQ+\
WAdyb4okMxfWovb1ii8Q32dl/y+\
VEO2gAB0CVNW1rLuxh1x1c8byCAo6JgsLoydBB4blw7bWStraAdJbyNLC7RefpzNdtmo+\
Rw0YDjNXGAO502drXC80gOsmgAUZ6FeaJKTcvzS4cI+Qk3Tv0OYN3Q2BcYt/\
9ol9IgypKHervk5j1VIQ0BrZPrmeC2i0PbygHyIY3VMbgizPgYKmFBDkXDzM5fGrok5uOgpQyX1qYi\
FkIzL2MOMAeQfuYuH8SwNzTuOwmM5WrACf9fKvIihayOe+mu9N4Z11B5kOVWjmqHEj/\
pEiWHCqkOn2utS4Cl6f07gEdEujrIW2I0YfEgUDb0KXasr5BH3Sni+\
7tTUFdbSTkUNULX32psErnvlVdRL28VIe6ZOb0CJmfEJl0NOpm3oQEdOCheOGKZF7WWWBmDcXzH8m6\
YdoDjb2tyB9W35mZt+LfgpobSnWA73GYlAVOzsfrKXhJCf0JgizcwovRr1V/VuQkcx+\
9GKGHXQ1L07OYcIp2L9YuZQPOqnEs0UcuumYhM38o3f48+\
54ecyK622AJbOjwihnGLriZlptmKi9z5DmfepEnjdsHC8MCsE1dh6bst9qx7RdUycjVF54Lxt582rs\
R932y/ZQVg1zgXK0qNTAHFPajQW9IxaPs6upqwDuDTntjWXKL0838lXwYCofbP+\
2hj9MY3hTMn43FAffW2XomFGlr2Yg8mOh/1+AmS1tHkg60f/\
AjYRY4rdWQnDoiMVPAKJblNJK5bsYudxOvl46qetayQegyF8nIm4b1TZzng6u61qei7VcfD9eLNnqp\
jSzAN7ssczuJiCrloL0M7/ZP7c4ZyWVvlQGqWZknieRqSJerK0CeJhcPgHowCmrkwC/\
QigNFAOknXQhpaJQ1fjRC1pJ2QHIAmYLbCSYuUjbJAAVUzY4fVUkGiWVGbdqLWUhiOoNziiZkdfcc2\
tpNA6lQFAJVHbo/IHX3A4ag9fJoaC8bap076uq/VylC0bWk9C18nA8HUTPHgYUm99vmRRToP5gQ4/\
TUqp10kVCIunQjhhh7QOQ8atohEEr3x+ZUyIvxIsraTN91+TLOIGE97Ur6YVVnReKo+\
TEs8p5t6DVIzSiArDkrhQss07B2mgMDQ34Rb7BXFN9p9cepPqAj4T3mOQLxqjfVA4u+ItnRc/\
NQWnbUYXRkHpYhvTFk+Q8JjOrZAo2iU+eZscDKs2l4085KM5/\
YpeZD7wr7i89RhtawEb5UxUwTQTPMyKTROGph8HIGSCgnIwef7/7s7L/ptbn+yV4btGhKKgcOn+\
1G5LsF7Z9iq9gv/ojoiyUQLhAu77h/8X5b07c8V6LI0ER5uuqJdiSz+q/yai9K/+\
A2qWCNHWznGALxD+V6n9pdAxJ1ZpgXs4yWTmpyjW8KiNTLsmwfJ526ERelGPtK3aQjlkCPIY+\
o5VMUmoXwkB0q8VeO9zQysm7leXTyBBjpV/\
Cf0MEAAQrVCQjO4HAQZZ4pzsK3V2PA1kzrnPN3mXdKeb6OcedbRssqtahSpS185cGkNNjjl9GLwdu9\
uzeFcV2Eh25sWS/P83lnDYOMNYVsmD+369x9lBi8MVid0TplV82vw6uY/\
Kj7uPrtnxTxMCgfynPzUv1ucRK0189S/WADsVplua/\
xLf3zDvkZqD75G8l1ZGrUJ2UsNmL5EuhCLA9GNyJDZ+\
dpE8xO8Klp83TDTCvcwCbWeZp939usFHXrNsMki+T55UUrHp7nOj8ptYGSY0apLaPaYR8lWlq+\
QFVWkkxaFgFdWGe1Nj6YnrXSYtl3Y2fgfkt99ZYO6DPy15V/DC8Se7HtmMVKziiuGXUsG/\
oC3bie6YfoyaQWcSxk/grLwY3K8OpPSCF8owBW5R/+\
qY1xcrZaM9KNwuFdLNbsCjamYKbP8SJQ4o58ItrpN5G22hgE7Bz5YL8cOzJfPU+\
IQoFf5Fydgz7vjwyvwHJSv5b8q0mrGe0/1b0R3EGzI2hxnP3AAHn13dQeED5/voDCnDo/\
nCyeIe9S9TE8buuVcMhTWP6Y5Xj67tmu8cqvJgvIjofjlJLf9nvOai/+XOwwS+kaKm+\
9UDrOJ37pANkXY/\
Dgcxdj4n27pgCKz1IirXiToBwfZq2QyNTheP5h9bmzaEW7HVWzuWN8O5dy7hx4fsgHPpRhTJ+\
M1p0L5CrVKpr/3JtY3w2MKc4FetVqhkzHiKZUaQGQpgFUPnNhpks8tFnEEQ4k/\
DSqU9jm3CL0ds4v6r8jmyj7+c2plts355JwVHF5eADpMVxRsG3oi36QL+yq+uEBKslPpoHu79Vn/\
nAnQQXMj2bcwMyVM26RBi5O3HxCoycrHKSg5hKnMKvvlJBDX6R/\
mb0rILdEiYpTgRZxBdK553qnBJCLlkTjcrHuMqCB8kTPX7E0zhEF+\
zwMtyfR1V0ZaTWDnLmtMbSSZRHu7HXe57LHxj9SiAEcflZKDwT7aNQfeSfL8Mbxi1eJBQ2ZRnIYqro\
6HDD2Yed4PG997/KRqGgMDREeo6e0DhZgLqtjcvQJZ1/\
77vscyOCsx1oRSOZNChq2y2OdolLnlRdGJMMcWpPmM9izRYYo5qkblO6+\
gLx2ifmkON4m0P1CQ7iNsZP9uPos4vXvyl20YdnGJjGy58kAS6Dd40QTjKdkXwpK6RJe2YovYbZjpD\
SxnLMHvmgu0lS+gvFFHdos4FnHxm+rmFnJ1ALpNtiT+7v02oZJMGyL+\
jzE8zDJYHOg6lbBAanpi1bCd4u4K4cML8rxePs7LOJBaqlv1dk4d2cOqFSDBe+\
TdfY7NiDQoWuCP3CXiRGN2DuNcVscWDuNYzU8W2PmEHj1x9UHxyOuMWSIyMA7YvLlrz+t/vPjz/+1+\
vbT5y+ffvzwJbJCucPg0I1pijyfdFtZRyrw0c5SvitnQLt/\
esiWsZME9pKGcE5SfoF34hI64wEDnAbaSCTqpx9XX777uPrm548fv/28+umP+JcP1lj9+\
dOfPupojW8gxkEHSKtszADopYyGYDarMsOmDcxaSfvkneR79pnY5BgmVpHJnS6JxZ9yFzBjwNvoYHP\
h5wSaIuNyyEHyYSfZKDfTUHMFyTUYHLZ3oDKxPM86Gmdm7e/\
WmG4zh6aovutan2TxV3FOtDXQ3ET4K1H8X3z3gyjmqe8rC6X+\
rEnGyqhZSxf1rInrVLWHCeRyyWjmNuuLzwQpjRx2ToJaIk0orbxivWzFVT5aRQhfY/\
2rYei2ZEu2idvm+CtsSy0jslz9sFx2lcBo0ftbZ/25tqzfd+1OHpqDTFYfTtPG0sU3gyuK+\
oLCOnLe1ti1HLWi01wCorX6KOdB/m7xXB/9vsTv7SuMqJk0K+vjpDn+WbZZ85Bqc1IhO/\
j9QDCwNiIQToLM/TaL6jp/\
MzyLdbaXsse5FaPRmxWU1pdkNMqSlGgqQsenJ7yl05EbTK12yGCCvXItlGqtsnO4diQr9oLLI2x7EH\
rUVzmjmq8k/VgggDFlXNywfWN9Anr9ttMk9GnwoWqKrFgdqovVLCZnMLizB9ZBpMtLWMIIaK/\
lRyxHajkT1XnbY+HLsYxBvhJ22rmjsbueHS/eN9JyekGjOYI/\
wNL3MUrfFcFfGvKduq2Ni8OdUi9epdNbZW1XaHaQKMx3u59aa/\
zDWPNAMisJ17rQVmjalnN9N05sXCgsnmaVBSUfKJGfXt8rRdgfzTu3NTIasKJD+vsriBLx/\
EzR2jd8nU5X49vAx3yBTdVvKIt5gGwIsZXBxYutfCJG3E5fZW3bSrZWXBwpM2rwroLZ550uJAExWi4\
tuRQhJH75lVPvsTr1wV1zDAYTC0b+jTJIUvyKS8zdHVeHU9cbWE+pxirSfKhTCm6L+\
petlrpcm5x9vCaSDqdKp/85l4NEOpvgD1u82FbnFKK3X9+d7kxg1ImjBRdKxZXfESICzSa3DioLl+\
CQUPMBbNqXnFcom+Cc0O9Ol8ty4EA9dJdjdZhsL/+92nYby33AVfTHEDVjA+\
LsAStsIB6s2j779VSuUg6PA3LEdepMp/DB14nNrDKCEN0kivxiY18bp89UWiV/\
IFvnfkJGurfzIHsAVT2YVtUmq8Gd57U5ctUNh27XLdGnPD68iVgs3Jpr0vQcG0XO907/pZ8++\
IPNZF1nZSJ1EqWitSnB/lwqyg3JEBc989QCtNNB8m7qbEg7gz5POD3YdOcQ5/g45ill8+o+\
Jn40SnHT7cgNHzq/LPHYTao5sRjyYocTNm6wTiANrBHO+\
XQOLhjZhDw0NO3DloFi42HJ9rlY7ex1BetlV3VYPLI1txZsxpOnRgI9fmwGhBOlIGn77+\
3UvxB7yy3PysBtjdgfwwEpf88QB86vUfoMWSWQYN3/AdbB1d+qV4LiHdxqhalkm4N39JjR+\
9SV084KXkO11dfXkprEfhWq+7rvg7Wu3vy2bzZoFSGePDjtwL994pyL/\
CKI6xH5MqVgGQgvv4P5kS0MZpJhu0Rt6AKWJmM17hN9RXtR51wHgbEPGmcKBewAMUOZ7QL2aLifx1L\
i71U2lxnbKq662BxT/UlhqM9QNmPmO1jiIn95vnXhq5TCgLonob/CO/\
GHEjU01avfopGEEQzrFw0GGxQCpkKKG/dTDf876+lK76lWZ2WsuP9MKz/dHACc7Y0xQfr3/Zg+\
3REQb+sNPWrS5gqEv4kdKY8/V7wKuSk1nKoNQ6+G981rKIVlelX6KvNnHLaTNipWdYyk7ur7B3/\
JCmbfJPvcyTmbcruR2faqL5O2TJwWbd3jsWDpL6fprDAduL7Wc8WTvZ6dw8waSTMNGSgXFBU1wgWkp\
oVGPun67QxdVil7/i7pIB69JCs6hAMqgF8yUD38UbZZmUYLNZN0hScyvbikeAatLq8Iwxu8Kvq4+\
l4cixNbO51nI+tf43dofWjP4KNaCBKxmh9bn737qxBPZZ6r96dQVPdKTs7rRruBueCKUgwXbe+\
IWdTdur7VpAj52X1whndbngq4/8q/Ic/p81CQC9iWLE1m1S2g/\
WNzdqPwAKhTnYACJVe6RJR6Yv46f0Tnpz6puboTfq7fjj1HixMsWS8O99qcYU/\
40UXJDRjokXi6iSHZiD8vJZmElKaa6XR9KEFQiSfWKXWpV1LhKDa+\
TKs9r5cgZ1nKRyvXeQ9DHkPaz3HgqZzteYq3h+ym8C4x+GckPyg7ehKJz/ruf63GLIbx+cHcr99+\
UIawTYV5U9XvwJVsU8CnwpSNiQ8lHZmgLCXtK0tZkOy5ZP5GLw1C25suJzlJZbvcEZgBJvBWuhtnoz\
loDK2xd0L3XOSoLpeTPCjnSzvohqzQmUvVqVYPBHDVZ/SW3LptMe940dcSzTF3cAlpuQ0/\
WcrUSySLq44BTrg642SMW5bsjaeZRcFzBjGCqaT4QuNNyfNeYUkpbNmyROv19QoguDk63VHFFqtu6l\
mxKq6nzo7damrhPKd5srPCZtR3LZHhJYoGj+uuLLwKYrd8LMLteliNyYWeLUpl3R0MoyjJ6HdtSN+\
pQtBgkqD2KB4NzTXKN6zldlNrVnDQZCUOiYW2YGjKR2F2AlB2Q55PjxB8xXHR/\
Jefr3Da5EgopCoRM8w7hWigZxvsJBjjf2PBrPcroS6jpnyPexrWJjdkJchtmf62CZ4ugJ+\
zoRjKAId1pFvLYCdGyQ4YoztdeGpTczjrLJ7LNYTck+HE8/\
kyZkmfEX6nMIgdhhdThELLsLJNl2br5xth5f5k6V3MedGsHAP8jSUFzwQR3KTmZgqgcGKHPeMLFz97\
saHr+WyhfCvG6l271JhAysvGKuBD7XAzSCxKG2euqBrjEmf+\
oB3CCr1s66q9K0DlrmaFNG0CsEyZ9IusjE0EWL5TtjkZils5jeFwZDuHzVaZ12sTdOmlfiC5+\
AzvneEcrO0kXnxrFJ8R0lo5ozKYQA+06npeL8hilLBRyApVhwrJtCCjmU9efApiNM56G4hsMnGE/\
GnqRF+qDFjD1r/IV8aFtPjMz7SGiMRnY6C0HRkIYgi2Y7q2pB/v2ZMQMBr11NTWHlgmOp3m8y6w/\
5ywkupc85kePj1ThYB8F2SAvz9Kc9ZG8AQ9EUy3F1WNQxN78wbmPVR5M5bu19wB9Jb1dBGF+\
gIPhI4QRGw/E6ImRsKvYi7UsTrtHwrE+lyxoZ+nnnkj0T8nDbVv58ApAW3g/\
kkgPWNfWZecONvNLME181mGWTbKJ1pkInyeikhBpQiHlFHqCJWuHQJKFxjcBUiXxNtBEO0dzvkEqbo\
uWMc455CEmcLTrUaAGEw2llepNpYsDMfsresHdxF4DZxuSZli5f28vEOQE1eTSUW9Et1bRfKw5YU1h\
llF5W7A0vWzz+/GLgrnk4CFvthtfnsObder/I056Cd7FKRLbh6F7hW/M8u/\
3rmgRUeJ92p5MKiCkCXXys6NNHtXl3cG3DkZeaB5+DcBIjkSSNRGxpsMNGR1lTO7fa450TV32DV5+\
wPFhHhvUsR9P4N8U83lifJDg3wbYA8zA6/czfQ9lIffLJTxqbKM4OOFMMKHNqi4EEFjaEx2DCKM0p+\
w9xk1C428nZUc5yPbuiMvxxzkb6WxrMrZ6S6KvBqvD8r97zEFWAVBm6/VgNVv9XaGbJ45m+\
KZFhCGXuzzCHJbWDczzCIbcmmR8d8xTRWJ/2plll0eWHwtFel0njdOnItsHBz/\
kEevhGpZZnfwsjge+\
MmUQevgNkQFJ7WcG0z7IDxi1sHhEZaX7RMdMolymecoln4drrknWcsd1ukBtkclfw6wA77kpINB6wv\
qQct2gM+lZJ6bPNR6QdpAreMEwD9q1KRJiOAivu+jA+5BvzcOHHIxG31KS+\
U4Ap4ccXhAZ4H3MTkqGrL0TZnvZsME5nWbgnDSbrapT2NGo2SYXS6ilXQ96Rjn7kT987IakpBMEl9Z\
UBHIeY3P0cZq9c0SyywNl70jswNASSWQV6A3dChDDJRU346pTFMWJUy4nWXkaCuIl2G4wHKCibnUpT\
57Yf6VEKzNEACra4l/z51ikFU4NepBmYY/0PV7sif7ZE6jP0VmlyICDAy/\
ThNMY2Cp3vJ8bGkEni2eSVnyoEN0ryox6YqOqLjqVE/ZQodCWQOoePIr6WF5wOnHC4gltK51/\
OKBR3whWbafS6v/m9VfiYeES8T2aC4ClGj0BkHmGSoWovcuEVHOKexyCNiUybJ3Qd2/\
nveyAZlAtoogXS0kdbAqkijp+\
KrQ77vTibwL5r8ks8EwqTHeiI8NtxVoxFlGLscy4iwfkHe9jc3hqMbwExDzkOHEhwLPPazgIdLOrfF\
Yp/7aYOkx8qg7Fy3UaJ49HXTiAsB88ONHtlZ45rq6pXcL3jtaapLV642GuI8q4sfVTxilpPxbsSy4I\
26URlyofA/W/mEtFZVs8z/\
g1YNGWf3RdfksEu0zrCTDNjtu3hpeVu5r7VBSDMTyDlrdbscFgSH6AZikQRa2YyMqAr661cDBUQNMR\
pYMLg404j+n/XaGfhUxJ+xG92H3wietggf2bm82x7nNYIClhScgpWjt2NZJoc0VNzXtXbI+\
b4MudFvW7mAgQfDcAWaLHKqlpIHzhT8Wo9+\
C1jKE6x6LgMmYA1lPNkEPLq5sbHNoifeeg2lzr4Fshz8PYCfLNzUNRB6KJMINRzPEjO2ZSFfl/\
dfLZT4hGKbjxxlfhLWXl1p77py3Mr47aAHj32NbcnEkW9Fy2iQT/OGFvVwUaaPcPEA5WvN+00aX+\
htSQh9nZrJtXG1QpGu4qlhnCwACdIkcQxqv4JU0huyYag+\
WZEczQy5iRvAbmjl5yPoExQ0hyxe4jrAq1j7b2HXPIsk6FGSjDrUfSFESF7ZXgNqgS2WFhYPijhmyG\
JHAKP3oJYO+ZvoCoPKuf8X0iHbeYcOXX80YZlDgt3aVD99/fP/z9xn4XJtmOA+\
KmRnuvfbnPAL4ZhhZQkHPKU3ki8wEGn37Hf7NGNX+\
dTGE8lVRONfinB4St5idEcg0DZwNdreJLCVfQyOsyYo6E1Wmhp2TNQe7o2N2ihsxtTb12VWeobhLH4\
BRXnZkXd0t00VDB6JEpmMsU8lFK1R/mT8sd1gpUQxjfXU4GdEPXnocZrVH9spVSA+yn/\
Xa1KcsATcbumY8tlJygZztRJqzmSHzyzy1FI1YxSvX9EqYmtpWWo/\
uooVQEfXL9JfncFPo4qfwv5Wss2dbXoZyPRvMsaR9Dr3bWO5TfyFfZNujvmpcfZ5GpqPvGYJU80iF/\
EKMWA13SArpCZX8T5qEYFOJLKvFL/rVXBsnP4HBbPKmo/\
NZy1OMHGfUzLNxFfNG5kzGCGzbxQdwZUbDpzdiIC75jbg9PTzsf0WI2FpQTqH1+suGL5uVgg7qv+\
dQz2rH/7wqBq/\
lDrWTs82Dt3XuNJeam3EAzRzfMMbs1lFKpc3JOPyymkx9u8xmIomS2Et0VqFmeiBfVrqwrzooOnVu3\
kPjZGrMm4Lc53B5w1WXDVhi9LWIfgca7kAYa6W07O3t0Jj79WYU5K4+G9Y81MjmzeDUY0JM3EPod/\
hUn95aO1SZVu04JyWCbCF+KtS+jj8a6p6Ko+AhTAsuR0d/OTa9xQjdLKhPuCfj0cnN5HKRHE/k+J/\
xJqeSzHGPyAiX/oEFYKUNX7SkaGedE+MclzbL2DY+XAyGZO0AhfKM3jwygxn6VcERXCpudIdAfmN+\
crd5gQpy5k/HLcGLw4p6z5RYGYXpHnVJXfeXytYr4Vpl8F69K/\
mCaTR2U2eUOnmQcuacyO5i2LNZd3QurLCVj0QyWMyrDwf71W4jakGOqxlGG/\
lServ8PZqyzs1eHvp9rWwvmiTdXVvxWq9rawL5t3/5l39ZffP44ZGA2MrIDy0/HRQmf+\
67vWy6PPP39WVoJuuvBS1G02tCq2U/rY+Yzi5tTKXVpocTCrL7qkyjV7YxbJk9WsCFNT3nL/\
9zJys7OHufzjCz9qhT0yqWzXqqdYCZV7V4W11ne5in1bvWpsWTizdkA9251ZAKSFecWVnY5w4daLTX\
FwnSCKFpyQb++M7alOyeZ2f+pDS8f9Yj8B/GyuxtX9F9o1u++v3/9S//Yrw6DPJAB/Kv/\
7LWnbnki9NmhRDqMBhxB999oVlU5iTIyqe+\
Yr7ti1LBrQB4UWwbvNcyII95uHcs97ozPZQroyilPnGj9b1338kS/\
VD9TYTuOoe2JDNuQ2TEpHY7yBLf6qJ6Cv2rGyspq5GC6/ZiCLLctXW6yqq+\
t0VSlzZN5tG7fTuNYMDswa1WV4e6tzUNofMF0+Sv+F0UHsOCitZk430aHhCafs49BL00H9Vz27y/\
nKU5UyXwHQ/gxXhLQYVi+lwU01+doFJu2To5t4bFSiXFSKFMmjc4n09I+W+wd8f0Me0nq+\
jx0QchqiSNQTQ9VSciOiK8Z8GknRt0qxXkaCyFdYGL79VwoJXpP6WZd9U+DalHw/ti+\
Tv4hLnyMDpKRBxjoGWtGzF4rf2JmYksJfNlH+nKyMzoE9BtF+\
MYVGJrM4lP6qljeiV27ZM1VdNZ9Uupv0qjMXMotLlUFigIarUKpttoNGw1Old36u/\
t69PoFBSDk8zlATabeact1RSpJV+chemGB8oAN0zmRHa6ACbtCih/\
n62gUQVmpVD93Vb5ZlgXVerahFcbpAZ7xZ41dPriG1bFCX500sDM5A3TftTpeVZbckZzyg2KM+Q+\
mUePPe7S9kOr2USWjr8JJm8W6LQt12hyXohYYO2aQ13gcZVE0CcnqEP3ZI8m+/\
N9rOoCKxmE8PB3UPsZ6V3wQkueEavX/hPO7/\
fDM3Y2unKRw5a9F5WyASGD6PxmoDv2HZE9hePHKRwx7I7eIDPbQRu3eCo0g2GsXQFiq3ZDS9bq2k1I\
PohP0sbRpCU4K+5h5X64WmbyV3E49aTdlGjEV2on7x0mxd2rwb3uYoKxlucAsuPLd/\
jQlqv2n6JefiB6psXL+wYD7UZuP4OeqFQT+6NHF51lah+\
hcm7oi0osIfZlMdNHHuTnZqPGTsKRy6VBTuJDtxM35gE3Wt+\
c6Dvw2SHFJ9SEI2ryn1olq6QW96pHpcQLy2H2tIXJmU6g+\
MbZGr4uu505B3y2N30on4cFe07gagHtJdB3DnBmM4/cADjey/\
ovUVMouwuiAuu4cnTX2o0T2l3cReubfxCmFBPdmZofcg9FzQm/\
HBYov28ObWeNJYYICoxSoC73E9mNh+msHmHcUbmkhjuX11bq6Wx913kGFNL97O6dZaZ/\
MKZGxncZ0i4noFgQze/laoBPD8zjYeFDRu+KqUq+iF+m7RL7HCL0UsGf0VecQEBnZhdHX/\
tXSdSDQzYaoGnBK9UtaFnfZtsLKbaKw8ODpj6wMboeyrvuEyRsUHNlGC0ve1xRi9nR5ZP/\
D8THrw2qs7SRvkl1Wk5YmKEa/rD6/PH7jx++fFKui+/\
lPScmPx0e7y4j32KU8KjMRrn37jNKoxg1kaly58x0s7kYlhU3qmgb7wUOTsvbr/83xntF1/7t8J/\
EFGH3ApGqqGVj1E6j9ipM40PmFZqakHijRtpcefoqxxi5P5kPCqA+\
O6W88LiK7JBrZppIb2QQgsJwVM2ZHCw15LXsn0qlGv5tpk2oq+hvvOGh5k65g+\
0z0VuLUnbVZTR9iSlxIsNlkelwfFXmhOh/vrL/\
1tBhMOdf6SRv7rQc1qvtaZqxJJ8qWkGXXOK2ORGZjjoCTT/BHmvDlmEgsQjfE8/\
ephM9oKpj2bBwM6xVDSrYd8e6+sepTkD+\
Y9c9R1BnxGbaMNW8sPNnw9kp51pxbchrolonH3P0weBTAH38n+cxNBX+\
bXMZqu2UwO8ppOLYqTKNNJAt9vI80LLyJ5B8kApOfalYJaZw3A7ptMHhgoGwh3RD+Z+A5CeU9NFqW/\
FzeR9FaCuXHqsvKbcU7CIqvpwNFkL8YELMj2WPd9qZyaZM8Kxnt7XkHMlguJ9NaNZNjImC2vve7lhp\
nFrkPC8SPy9Ap12HTIsKBr0i4vUBd6+9UJgG8qLnJfXDW0XVUKj8+\
tPdV6fExfMre9uaVjtueWYGZNGKrw229y95kAUSn0MdQo6aETtebbFQ6uW546ovm1v4WceAvtLsmRZ\
hEd3hi+9Uo54qgkBO1VXc+3cm3fROyQsGE98Y7Dhh/mSh4Y+\
TcR9UECcJh3TC4L03OBohe3XoEcBNgLUrv2Fb0eHVcNzyi3u0lT9ocIU5QqYUPUSBAitKQRezGtM6D\
tYMhkt1ffrE9s1a+boEhTKXt77WBeOTnECgig14ShcBucB+Np/\
g0SBNmAiUa40LolqCzP0QB0KsirIv/exQfEzyqZE1Cp7zk6na2Tgww307AKUM/pn1htBJs/Iu/\
d7nGnPfqYpjdkK4a2hV92TM1+4wqN88ZN+\
tKOwnbsmOfbfuHXo9grb3VrFbnlPdbaSUjkGJR2pE61vTDZVvY1ql/T7zVRhxhL+\
EEQ0m3FjhybMJiVYtHjl/iJkgf1ZWikvjDAYTGJdTBNzEmWZu16hTq++\
gadt1ofW7GRQ661PuYiw6eQigYz/50FlGe8CfqCdcx1BcHzWAzJozjuGYxOxa+9lutegDOs+\
JtHb1SxeOku7FlKj1lKmkNcbqMPDaAleWQlwisrDI11gzibkh8AQOaodt2EqmqbI+\
CeijrVvZSDzL6tWn4IIe+MFFOzlqdGF+AgPwcFFXycnO/\
j51RL3UyPZpPhucYP5m5i0aYTXgeoXimzgLzF55XP1XN8melMA7mVVyqmxFu7JKkOwNSr5zhYfgBdo\
j01pbGs+5Gn1aCu/lom6dPLAg4B+\
fLe2ayx0ByxsSL9d7Z0MvkXNpMWWTexmPiX7y0hPQUXStIzSwXnJd1JrI+WTOnDkqWiqNXnc/\
UpS1Q7NtoGZekWfXClFdtYlD2069BJXnzpqnMH1TJR1Wiaw6ChnkOKba5GB4fLf6XtM46j32L80JhL\
+6KgbAwVmZHVqcF9Iokhh4EAP89cPDuxgBjQ4ATc7v/ZSBJvPkDQvTpQOaASaQj+\
YqvGltpm5iW9SfW/VnLOSm8uBfjoZXVJqHU+g0jVFBhtkd26DDXKva82EKZssTj/y8m/\
VdRCZmZiByVgpiCZLevFZxUHLjZsaQHi2ysFzS/\
GI1Oe3Y3JAk2qlztD4qryGK6nP1S9derTawKCi8qYhzJvWs3Z4+\
fMAQPJMN1esObTPUPrn1jHKWIm4hccDs9dWu/\
pqhJ6cX9DU72cD7J18w4r6dJWumXYMpouD11VYUBsNXDghuu2YYap3b6g4yJIarRbQ8MLGjQs5OkGK\
R2vFYAODpMeABooZnSF14vhjckwC2o0NkQRWpR0HdXK0RnGgLsWrmjno7qrIjy28dLTAXcp3ywQYMK\
Lx6xzFbXqFF5Ot91FYvLKVCTxobZBLqx6t+d9qQX73/NLdVkrQXL2U13FkJl3bbyl8+\
nnBzRUIGuqH0pO0mDuHxYtuyQvJUPC1dvViHWWIuzQY270DTABqiceBoaoXwgZeLMW0FE6HdewbLqQ\
xcGoATRRwypsHP0XOYXA9NWyHhpJpfTm87QDQN38z4IIaNwbWDpSvXQKIFjNPqhxLzYbDsAJxagGGZ\
Xgs8104SRYgtDGAzrhcnNPIZWkmzGl0VcyPZ3Cj7NyqkXJfvyfTGkM+9PWOky+\
idmeVd8lgXh5M6QY9aOIsxNv5+\
tnDNKlxKNm6G7jSNXJfqgmZtjvrWkHM1tTpl2wkcHx7yT4P93GJDmzMFJInNeTTRtstqj/\
iP1sdrkV21iqk4KGpot1C1Rcwv98MGqBWHuJf6GpcVZXgdvDV3NLH9h2af3YwBgd2pSSwTrtWGVXLf\
8C6m3kGAAy+PX3EflTx0lu9od925obK8aN1HXUakMby2ETPoid6/0jmPMfR+lgedAokfIZlYGnvmT+\
5X1ZbEvib5rPYs/rF+NUFU17UpJNEuUD4t0UblXY1hoLKalh1t+\
bX4l4N6mGWFcdKqMLi0mw9WZTFaIiRh/UhQj9DiGEWOMlGF1zQ4b/\
YseQWWsDqw1Djy1aafLqMKDRNVjBUtx4YR60dtsh3GVGZ+iwE+Yo1SeI8k8rJtBAGq58+\
6fZRoaNtskK2zo3gbsRfy618UV2TzwdLDaNX3CRVrIKNBj2LealC3lISbZYWxmQ+\
ysIpAJClA4ghjifagzPibuu+vHgjCpd8RD1ATPVZwEnMT0tqITGW1lK35ynIKQ8mR+1+\
Kc2JkKFWgYRJcdNdX7BQ0IDmoO9ABQg5ypUKM+\
Vc2F9bI0yNzwRzgFrcaRyfWHPSYAbTvRAb17oHlyTIdolGWSRMu2DbPhajEmf7XWVgvTLxrZ7ReZgM\
wAtvB5F4E7qze9d1hkr19F6HU1u2mPSgHFNcvKHiEOCmzHKhA5IJiBmyGkbsIECMMW11E2ZAhBaURu\
REniM13aey0ngV6fIokY3/\
IYNQMOoqk0RmsfRpA7dDkxbgeX5sxmjksbRexBrsEHMSSC1O0TcPsHR4evOJ+\
A5OcUTC7QJluKt5JmUmea5SpHlPE0ZJeT7dXlyjnpQb+\
3KioxmkDgUZB3qIjEOkpZhaYqxhz8NwoEKO1i68N3aDvMWT2vsWJwFPGsxfQ4fyl+6kZf+\
29IrP3xk35Xinvt1ilOmBFNcPxzwb8KeubLhMgzc0G0yYdkag/KOT8VXTJ2S2fWMhul3+\
Pjo5aeQc0zpxfslyI9+d1gFXBVfLilOcFBgadOK7i0lx51b8gufG2TCfohC/\
R6GCnYShUOvlhXYUl0o/sFHkozqJqVUwVZXPGyOUzOt0aIEmuUMjFoHLLbhZ+\
BiCfS8Bkx7tG07A307R10LZskcL5kuq2mVcS3Bfdq1NbziNKPq/\
1W7RGngIVqNlajLsHZ1GrPoU3t8Vi2IhihI1e4+6nU/\
3m2JrVnTkDUBNc52Lyo4jpNWI7uGmnAqsOAVn7mERG6DYPHo8aDnoiR9seWWltfFxEgT5jh81YciZG\
xt68EX5HxNLX9CoQhStoEVWscKKQKBHNvEU/VZrUJir4IaNzFWjTik90ffJCVCH2sCkDfR1AH+\
QT9jo6r84u6iIv+QaTP9QEfdyin3SE9GmctQz4O66dsnzGSQ8Kh7Us/KVhWB7s/\
9YETJ2qp2rvSFsfG7pcWvQOar6ybwHAU3kEJI9ZyQOz6d5+\
EUGH1Uw11SH2yCfkZdbfX0unqJPmCUfNZa7yaALZ2GlXe8e2/A8ifY7Z1B942sBbvuh8ltC/\
OK98BPf6cWDx6aWybnUflWw+\
CPMAFesGUIE1Afx2dDjz0DqKqsi6wxdEv3qPgaeJkd9kO3wzWzZ4NLKV75KzpSmESa7fX88O8HnjAN\
iMEI+TT9cE0S58Px+Oqnk1WbK9SkR/qWpO2fpFmXhEQlR50N0/ab0CnKg+Di+jtpnz4VhbpZjUU4v+\
rshQy33/JBqJ7XOsRyjmI2uikzXI3KD7XgGhWxlSqCdlHdle47iJCeVsVdaUCvMDEhijzbg+\
WNbH5t+1mDbAu8DRN3e7FLYS60H0mu0ahU2wu5fYvsF6+fLbArXuIdeL//\
Wzchqv3u97WStFyW6d21l8cXSYWKUEThlNJdhfZ0v+cZBjcK6mX+y3Enqcoyz7uPq+\
US9Qg4g6Adpgv5HrumEe6euEZ0cEKspjCRVqOFHcHl1T+\
YWmbzEhxEeOOpQlomNSyZixHeBrIJFX5NYZduorP59DoC3rfVdAbGaU5TNcCS+\
5rYzYyXob0xftzdWUaVaLOwbTg1h9HcXJorSroNhhIKCZcFwSBzCKkxer9PkbBKRthuai42SZ52pXE\
gkWPVi6ysY/lsiOlbib+p0ODEUhIkxeWuJlrzitKor3aEvzsmQlgvCKlySGMXKEaw3vKRJsmGe9K+\
gXZmSKV9ibdUxQK7CEiKw+p2djf4GpRKJQ/qLgjAHQAC8kNZhcoCbROsAK9Yzc0SDOMX/\
QU4Ml7EO8mWaJhRIA31tfZ2v5BWmAKtBP4H2Sc/Nc1xf0JaKbRha90AGQQtKZ4gY/\
dwfn2N1WNqUII5G03zrQITFsFroWbEwAWxgki3Vv2UIxbh2skaxcOJYx9cl58WbtG4+\
rH9No5zd8wjzELvVfM1FJH4gtb4SUm8Jk8Qo1tUCKRKSGmOe1AuT9GxEszRGstYtSVOQQQzFtgl7h0\
ojHQGbCaQg7c7WKaGsQqzrZ59jwOax6bQ9ORalL6qlBd17R0qSPX05c50xsVMaixTRUZ2Ok1vEb4+\
VsD/5lzxJs5357Ke84J6zpOwna1YG3ofN9DLyLjEw3H37UytOpyutYb4tcPLGa1aGLg8PWZ/\
BvAVAUwSmcppwEE/XKkGVq+S6AG6mYGbzG/1qOyTyK5ZGyo8pW1KYlbJVca/\
reqmSUWp9Jqj6Z1sQpoT/xXiEfK6gTboF5SdOfKaP/oRv6QeID+d1Xg8+\
0LJebirpwaXgDpNB4g2RpQ2M3jTZamfH6tTK65dTuNASghg7Whd4JpxKPCL7jozg9nz4Htg0iconc0\
goaHu0aps3v596uaaLbsY2+lYblgKVTxkiLaYLucGR/\
wMBVsdI35rvQZ7N92DnHjEVtUYXzrrE6UaDuu18eAOd0FpNqRMuJBBOKlplzOpZbWtXNrzzfVHDT9t\
Vu4un3vIGORcEP7O8cRJ94RhXE+lkXPi1WieMUsseVtnG96H2UsAozgy2ZjIALfRjV2Voia+\
eWX3vfTfNCegn1+PRSLMbC+vGuct1rasExVTdz4WN4nCsH2GE4EKgzgoFNZzXkeEfjbItAZpT+\
om3UOUXW8lTXbO+N2QRwKIDLXr3vqw0T6/\
P6LafAr4NOqD5YVavAff8kRu5VDd3P1dbHOMS8PacgBjdDZGh79Q6IcLhozEicr42oIi6UZPNwBWv3\
ju2Fg4Hccu68zatxh1OiGS+\
c1TI3WiacZ8CZuZeXLd49Gr7iKIQHs0ySGvh5KGGVypZRGyY6mX3wbWQI85CrXe6G0ynNTpQNrl7na\
YIcFugt5wnOh3gKvoePIxhGgoNIGJrxR7ZqZsyuFuzyBospECIErkXuM4oRSWTYOS3x/bIV+\
46Chc6fH/vUyV3nXHSFJtShXkj93AM05D2hhHMl4Dl3AgZJijKPF3Shs0m2EekXqhSf+YS/\
vjL94jDhqEaV3EsAjAZxiEr63IoIqXFyxjtE79mnWymf2glcZ/\
K972vUw2qD6lDy5HxB60zb51NNRcd/i90ySin9ty06Ee/\
y53c5l4TKyabP1mZeM9O746rmjOEITxf6oejy23vpJ5ljhHqiSYZLswULz8LdP5s372UPS6PeQ5J5C\
Te2Sw45IRSFRXFUmOURbV4vTSEqtpKK91qVQg65AVX/\
LN7uqyGP8fP8cprzOOtb4mz5YOinvjM2qYN61uq1WVDG0vA4ByxCO4AJxQO7zBhzp4CiICO8rgJqQE\
bvCQNF80Z2K3qtCfJon0t47nM9ZlA2LOuMrcmSIPPg2Rp7fM9IZq0lFy0CQ6EUROuIQSDE0FxjymsE\
dAGvKLE4wtT+\
pUQQShnaWmnEJg9tt3LCWdzyzklfgIrM1SfAHKxhBRxsi3SeDaqfMrAGKWrGCmUZLLuri7a3nEZbg5\
d15VyAMx+onzXBeLya9FBKuR06suhHLZelCOXPGcj77c8LtWOWlBvcWBHvS6N09Dojd/XHqVa/nl+\
TjXvmwIbAOswCG3nCV9lY5oKZ+ULvluzjEUoDxbbBimixDJYUQ2wQZVIfN0P/\
KvsmqRq9DrMCOStDvW3HZ0p/EW0PpR9VNoDIcoeL5N5XAnJsek/\
lCVj2ZacTlvmtFvNJFrexwRSQiWhq7uedWzB/Im2WGLKO9ESHQJ46MAYQvpaivMaFy/\
2RGL8GVL73jCXku/3ipppainNrMbf6fy+\
1Bi9d20xyBnfV8eQegRWpvNcZfEo3Xo5IiHwp3WY2WW42nyQwHK+\
lS5VGMzIa3IQHsGWmMqL2JeDB5m2sNPbIueIplzeIawMhML+\
6GNmR5E9RpLhz1boqLGtHb202OI83B1+6ro+OIpTg0KvfILm3Z1XHvB/\
7BSvLDwYzQbI93yg16zQ5A+6JRkiodmcFiclX7Fnum4sRJXazdGJUVjnhwzUUExOFAmGIyA5uvfZL+\
URMPkqC8GhCHkUUs7NlirBihACY51vaoEsnIgv/\
h321Fz0PzW6ecsNHWFWFcooKOyW0kMjEsuqYiKvYfGxzKKoh+\
Ow0XISbYi5XM3ioWO9mvFeGVzIg5swvRIyMAl2ACUFHhlF/vmeFtDQYdgJJOFAyML+\
0drDJ2hGRMXfCgPLe+YY7gv3dcXSQldKh7P1Gmsxt4WoZz9+\
xLnsQtf6QJpY6CNRPEhcPf2EVJWgiVF2jTcychSOZq17JD2j7SEl7rb3SLLL05GL9qt4Yg9XiyltN1\
yvnbJDyGmMMAzHhKXlQjnsjWCc8gXj0oo3S84tnYTx5YjAeV+\
8tZXPTOWiNnWlJCkRGzbLlT9qb1EEBxqyd+\
WWwiN7SGxZgF5Jm5vfdQdBuxyEzo5Fb9DX6pMIgJP5VJcXxyode1Inadcdmw6G8DkprnGZ/\
Gf2qJh3Hhe7RhWAVnu3fRMaYVBFj6wOGwS8UadzVfYaqVAmDuURe92zdbshi8OkUe+\
V77wUJR1LBT4LniFwDe9qCKS0RZC/4bpxH/T1CRxg5XY8PNhRUkwyr7zoFj7TmhzqR4YEYW/\
Tr0HN3ksaSjsQzAL26V34MTSwNBW6I1zIEMPVnfQ9fMqQ5UciS9OB7bwv/po8PvKYikY+\
GsKIElOQNBbaFT+ZyZ0BchEqWXrItiCIcxCMIl1A/vIV2cMOq2SZZcwfh1+o2ACFrzkE1WoLDitIO+\
mvTpCwrsOlx93VegNcQby2Ldh7u3mxPMwYAhu3IBf6SYi3vNqJeZ+TVgVbmoFtpSSlL+\
u85r9oH5UQ1w2rz7K0k8L3hCIDyevOGVrxl4bJhYfBuejyEwUdEueHIc6rLMBpOE0yjZbACxCi4J2M\
mx0FobZTYVo6ux9/\
HYyHpmwZKYfLi3znAuCRdgJqMsYAoSunCw1FmIGeaEoDO1y5TKAZDOlOhIDEcElmBxpLlAgMtUcLnW\
OeIwwqMDXgx13HuI7voeJh4TJGep5FLIOyefsR+iwupMIcExr4rvQC/\
3dSvRDvzJNgtxL49RJGQGEWLXeO0kSuQyX1tRt5BthliwCMDcNYqu+\
ulIrxDrMGSeRAUFH6SwsjZ9eWvxugZjATEqxsnAV7xr8skorcDzwcYKE3u3ycrK96w07pRmD+\
s4Wma5/q1YSzd9Ks5WwxbOhxg3yayisJ7SV4WduxqB2bn2LSmJS6hrWLEWc9eTNCstDAzhtTjltgcu\
BOZ75fkW8zdM9fkKLhYVXbRBM8MkR9pDsxLg6Lgk2WdwRihicMKqThNhzBN/\
sppjPHkOsEID0pnTcHohdVGI4Ry467NCPxCB8pwOJS0trWFlzab3bu5BiPXj2wwT/HdyGZaK/\
sHcedIlSAH7TVInRw+gKkcMUfljZsSbjS104CyJ6YdYx9inuav3QKTonQjnOjOL6RhdcHGWf+\
BySVmIfFrcyp/\
RYnAiVfiqZREcJA6LmPjDaNXcMPuLCB1jgb3acngZyTdE0iit0fmvhGGWV9qQSIs17XBHFaz3R4dNU\
bMbPVZZ6BqWht1GxOjEQvwDaJ1brl0YW3gPnM0jscEOzlwWrTyTuslN05i94xVYFXAUj5zuqhQ8Tkt\
Bpeff74HQnnUOgZws6n2pNRx8IA0I+0k5BqU49DulbESadoZ12zIhqx9RZK1wC+7T/\
rvYifK4oOV8LleGu4yB/2G+TD6RarBuNo4rLe98zxpcCJGZOzmr8pto+\
z7JCyNyEg1swdiVJU2RB8qKqNSwXOixGmaPgrup/m8ef11mTe/fnioaAjKWCJ5P/\
pm1m3D5d42PtqmCY83j7AN+\
ucor6giUZ6qkWYtYk0yDHRn7516Q6nGAZv1828dFOfP9BUYLL5GV3Tdb2vUmQrs3ULRTPkFJWx6dnW\
c9MQYwYNcnwlQ1GnFr4TiNySEnZm19ekZs4/565BZfV0MyimZXUvo4VWihrhJGd97oPWSJ/\
wnrqNcCI3xOBaWML69L3tU/ZZM0tOHWzATQjbhdOyrpneoQerWgeW8+\
8TnMqfR7BtinNc1CXuirTRatYuF6msDbSPRg/\
yRJgpdKBKF9xthSZfprakFcztV1OZpBPE4NsfFfMvU73GMGa9fNMboJiPzGctFDbw0ax2ABkLUQ1Dm\
GM3tKKdbhSUPauK8bu9xRgPxsWFkOhvIMBosACSJD8BrPuaxFAM90CFcM3Okix9dwK42EkaR7VGhXD\
nJFQhUtGkIRYQgKHbm1D6Px7jH7ebdwQDzle4nXy5rN981lap4JmclWDxM4qGvszOWyE+\
wRoBNrmKkC59HEz96bj1rlEB8Ji8cBOP4vTLrJ/\
yPezqHPQpijA3lt61ct9JhQIvdyGnYHLCeOrMioLIoe/CjZuITwXc+\
1paHGi7gKfFzf3bivVbBCrIX/\
VEiVLoUsqPBWciQjOtmpL8hObq9Ri3EGTT0Ek9pNK53TI2ZHydYipMZsOY+\
F7GcRihKyUFwi8LQOj2qvSbW9rXZ1Q7OwYdaOUi1khlVSjkP7Q6PXQp++O14ZIsoEVI0ojq6l42Z+\
rSKgq9OWBVC3XTI4p24zuCvhnHT+R8491NrUxOsYREv4uU2b12o/WwAF+\
shcCxoxTWydVHKVnlDcwVnFpQq3DT+/FqYUAQNTSxztE24lxp4/8wGa0BZTdG+WZ5kMzLTJQpgFc/\
Ae5esd4UNUc7CTQYqazNc+\
0vwKXuCWzSSPJ2IKqqGo67e4qLR8k4UYOQpymW3WzACHDxPFCSOtnezQqJl9yoQSNrRUlW/\
K2NJXQU3UFrBA5j9lnXpLYToEmtSsvGWqfNtbVqqpnA2TAiMkt/\
SO9bE7Elu1TqkJFUbKQbomsYKL0GkqvDhV6AqqEBZeXDtEgcew8DUKeukRaXg8i4zQjiKd10C/\
qCMSn73ezbTWHxmXYgx7GjwdATa1cst1HRzVM6hiR7TKPuwjSokTcv4Xf+\
80hEykTcFsVjS2DNig94aCc4XXeTEzY2zas6ezWKI3llPxGSKBTM784oBIaBlKEoiKiIf3K5wMoQOT\
sG2LGazr4exYCHA/mhd3s7WhljSxs+lqTjrLFKBwkjlaxczOPulcoysHd+\
kVBqyZaHCZ6c6WRLo2aBmdq59WLfXk220b+q4AixwS1X1k+\
EeSjfRD1VPfnp1MTxLd0vNMwZmRn02H2T9X1pzPDbYLlD2eFN2gWdwuiph+rqcmKdhoPiehJ7yrU8/\
rj7/8P7771ff//Tls1kaBrFGHB+\
w4Xeer2Mcd0TNrjRLWRlWK8zkBtSFnZdcCDq3lDuGWsTDBrGJLRjwMNCQegYm9keLfYMjqAo9m7Hc5\
6u+q/cNJFm9v8P4Qma4ba+R8AX7Qz9jpLYvWu58EyRBbEXL5P93uGB1SsDtXCyniwsc5F+\
daGD5nIkmHqAd2R7k1KwHfwH+KNq3ifq2qeG1OwtFUHje69JFk5rn2A5bQL/\
RrZdUnp7o8B2Y6UknYbQeYCYeljPmiYdytte0uEPn0PAZa6OzMC6mhAAcXFDORp5TuoXSpplvHENB6\
c1xLLf7tOZHppaFWQ7Y4qWy6I+rv7D/gImquK3fz8MCn+\
JgqOs55EBCanH9XjjizvWBz5HS5BrjIVnUqeUcQ5fMsa9eSXqxUTpNhuHyr7+pzXstpcoaUwDtG+\
zOCp6ioDYKBIm3rcxugGiCTg6O3c5Q/\
vaIpW4anWa52ZlVgWixaOvDyRbCfLnUNqFtPfHUaeB7snFexEVwMk/\
IrW3AD7OhVtixKjvJZeG2Ol6lBMkWcHCmcrptVNXLTyxk2uXfjpg2gpJ0pD9XvxUZSCWY4KIiS8iCV\
P93K5KXMxG2Ozf9XMmFOi2bsqxi28uV3hx2IxjlSAdCvAJA/ZQIe6FqEn1XzOwd6l/\
oFm1jbKNpAsi1NSWANyOd/\
PpUezuyafZgrtBksrsUqtFZ1Hh48CJidF1TH0dyrTpp5HClbXEElpWoq23t74P2FlpRsdsi41OpXgH\
YrhUjLU2rTRW9q6lNckVZzav0ELpHjIj9UrcrK7RZ9cELziWPWPiC7ySdHmPakSmD+\
SyXpHrRFc4MH0ZptE1tbkXK3nm342SZUxayDN3NqS/\
9VIYUnlGIj0A5TYBJpM6zYSLwmy3ZQnqH6DlIQTl22bhz5/vqaY0/e+\
IqddjbCihHjJw3A1vkuXg2PWJ0ciCxydvnVR8jIAPDxYny3itF4+\
p5MU68wmTEBmEcvJzSw7VHauCOdyMercPLaEnbTg0A8FPVeQOcG2uA60TufU5Tz9JkvlubBUApWwJ0\
lHNfE76R2C/IWLTIl3NXp8sTjU3pbnitvZGZ2Sr8GBMZciXf+/F9OMrZ39lO2tpq4uyIGvSsaKjtr/\
EpuDxKUyNpMpb4A1igMo2LTScxL0JPT0NlVG2G2pz3RWUgys2VUc3tuva5BlN/\
RWZrJCi9xdG2P1H3I98Ebm9OXi4xlM1licjSJxCCPVR1w9dIR84kYDFK6AJiFY7gVXJlezr/\
gTG3a6BZQgl0sS/9ccuVFLfBfRRKnTc24x725n4TylyMNrXxUD3NDs5OdsWJjkJEA3+\
61rVL2a3wqK0g1AOLUAiw995B7dUYo91YzHS0J2MIN2GcdlloTGgKtqNBl/\
rOzosnH1NCOucE8hFUmjb91sXtZ2f6zmlEOgaPBXKWfMM7znk64j7eobWQ31tP1Em7DiPcA4LmNWZ5\
O/hDx/w0cFUT23ecn9mDLXIElQ3JdqVaCjgsCh44+\
Ns4MMRBXyQvyrBacCdvub0sPmUQiDdUQPRtnk3pH8oPxZDROj031zIpquZ8024+O6Uijj/\
mvuugoNkbHhRz1NZl3qNP+lWCkNspoRtLs3dvUP2wl5Q+9q0W+LUBHrfiMLuWGr+\
bi3lNQ2R2ciaiJawWFrlXlDu78yLFpRiwU/3LTbvwPcVKB0Q81/AYC9xmfX+g1TrBYea+GGm+\
7p2lMtKtMAdaKLqIir3edXeSb8den3nFy5PjqYNh9kZp3ELVzGng1uyMLQV8d0DoTb/lSBboVEFL3/\
Lg5BXNkQl2InCqsybf+pfqcKh7C246UF4mEN6sjNGZEz+DmYJYuPg6QKIYlu/me0oZ2qmNJNt/+\
s12QhoEsMVdtPf/k7fE42Y1G8kEntSyBE2MBH6KztMy9o1ALW+1svoGM9eeRcxqw2/\
L4faDWQuMn058x45+KkPl02/KJhIG3AVZD0gOb5aTGf69G9V5Pm4a1gm5KKdzYo7QB634qoui/\
unFdCtrhBhdiLt/ID4a/cl3etNnIxCKrplRcLDnxUfcZ6aFYk/\
h6tpwmtvmbCbLkKA3PkdozNLlszZGZDZtAqqh9KytaoI/a9r6cfXhu/d//vLx59W/inZ+//\
On9zqeafWXH7+VP/34/stffv4409qPaJK9TS4/iimW04mWB49w/\
qpjpBSVy3YeB4JNuQdWK8EuhHAV1Ul91D7lbQpyDV3DbNVSG9nPMnxjmP8c9YT4vVXf/\
bNfu5PWGc7zsLtps6dlaRMu/tTWf7eWeNgmmolCvxb9/+\
YI9TXLNVrpsQLFN0Swq0xcPWifsciS3qAKFU5+\
gWN1GdmyODf1DJ4XA7tiSEkM3rJpnyGSlHX2otPP8UZS1vsjaQ//\
bLT2zMQZbD2pZP1EdZIUGuJIVydlEIUSAieaehklLQdsQZz1Qc8X0+NW8eEIHPndZNiW/\
pl4EX7rExWTv894TMMsWflOsL6SKJkhTnVeW5Fha6EqvyasncVjrZoN8IX05mnM3BM+JllOmg+\
qvo2KuSyAwiOBLKiNWhSRKeXRpjFU5Sn+FGnaeMJGp4nuHJpkblNKtKR4sSJQYIt2+\
c4IzXCRd9ZW8y6N/TAZLlEOutT1/WufWNZHMZc62obXpYvIR+rz4ULahNTQBUDs2IycCM28CQP/F+\
PmZfVdqV6xOiD+YNHVhu8ODQEmwV/FMjmmzTLf6TUAMD+\
UX11FOLRuOJ2h53XRLWSNScV60N8AUVmB9YJ+q+Bo/\
NtE2cK5gyGaNfEmH60l9Kyk24vFMgIU98UnYwUp+\
4PHecejPNbbY2sYv3ZgxVDXF8qimpfgCinKFOmiy/E6+ICxhcPLzE+54/\
Au2nQ5VYeKwCjwUXDsWLe1vuivjXikw/YO1bVYw91r1e8BD7C7YnWPtVW1WTKuts/\
KrfFa5VHt31QnTHVRKJNdxOy+XOT96dKABPt8RvbF/\
BR55u0zZt5wGpF3BDPAU1PYau8JmsPWAe4aA1tLDyO/Gpuxva8BX9KAPrHI/+GW26XIWxkRp2M+\
Uv82JDvGuj2u3h/AQ/FqB+H8BkrsHnvX/\
ZrvOpDUunvWZlVQ5tFBFxFBtHDfHSdpjMHp7vaKBWeEiIfT5WZJhXRXUijnPt5fxed58tXtIT4TSVK\
NtBO7srW+zbuU6HcqY3fvQU0zhF0t/FgYFgOdOfxqZd3KVCXSAtvD4JCOq/\
VCLcr5N00i2JNonpuTexHYbfBYnLLyTfeKaMui0P7WEzccWjYb2DiL+\
371fYseqziQAdo6z1mNWZ5iCWaxp+luJzVFrwWL8DcOApwDq32x5m2iZ+G4S75fv/\
jUCuWLkmxFrdfJdaH6lK8LfZ/QlArVisokiflK7hSu5X9PSh/fDAVoVX9RxE+NT5JHUEZlWIuxd+\
CnWvUs6ElhlVGvNcvoflhg8WI6Eld8250IHWyNCtGItq4zpBO/pFbbykeZRsYrRrlQq0GfPrG/\
OdNk6iCNNv3AO8s5dAkvqs2ni9zY/\
H0y1JNxIpenrwPNcuboTBuZyuHZmhJhlKRTm5u2Lk0sM45e62SJaMRnDp6ZMvZqu8bBb+\
35jER6znyTWHIkvDwWfhBmo1siLhFCuH22Oo/oSVUK8myHk+\
NtWiCati4zxXvl4p3qmaqwJ3wqT3jn2Zbkegbf3i5uEOxgCI41wFZckOX8voary1SAQgWh4ZUX5vtp\
s9FkM7CzoJeq3oJDORt1Xhb5rw+daLchUxWZd3mHxrfpyZXV3y62yiE9Yo72/oL69rGRde/k/\
22r7LrfUD/DGV28Hl+nHPBp2J4K3Fwe4qUits46H7lxRgE7o4IW7ag+gVh+c//SBKFe1SCrn02/\
1WbRGNHMiI6ggIUsmyS+oJZnSY7BS3x2E+PlhgJX3o+\
QBmvhqYZ02d96tlg9nqziCStWYhe0a4pBBjXC72Jic83kzIuXFT1VTYDBXOe2mA8YWavblKVh+\
wyJYsyPoEP82oJv6PpoVJ5dn2fZbzCkYTFWeyyj3HtLAzlnvc7yovT7eJu7bpY3JdZndgLWqXdCNL/\
meuXpvxbpAnN3SQ1apiGFpAuguVm5d2KdRwla3qn9enfpTtdz16v4rt+\
Vxpmc0PCuHCgOjoMaM1wvHH3Dtdl0ptdubsfVycCh5R1I5AkSEZEbFY2UQYzunRSG/ZVT+\
WJzf542eqZ/7gbjVfmukfffNtO5NDcYOMzTzLZEKC7gIBnDw83H38iFjk136XYWXCCpCpWRFsx/\
kLme/S2wAfvmFyubBVw+8+T/\
Ke8Ykrnp2hYolky56B7ESesEnteTZC2HqIUvL5AKsc2yxXONVpXw0G9eGf3XbJHJTO0qUO7UWdIlHo\
06qUhpJEfL82eW6DSrZVGw0paVixY7CvX8vcKKcTpuT3DggY/0yaDLQeFDfW/nEmhUa6EB+\
E5NT7E5mvbqUOZXKiuM9B38X/fCdBvSLdeOeGXe/D/UzT9qzgRE06zVdkJUNtdbp35NQmLv+\
XYsanR7686oMuDp4iM4oCSi0nmaAmdyzFDsWVWIobgvgs7FMYCXc2GOXa7648bsGJ1/\
XfboOazsWV8OnpQ3Vmj2xUdXjMsYwCpZ7BPs3NJwLOayAsF6alNGEhtsZygu9DKyKgkjJtre4LE9zy\
aH7TxLXRXQ24MN5+Pqk5gwMTz39VhRUslWXLqmowVc3QE/8kgVMJrRQ0cjLG+\
sf8ksPNYrRNHQewYxOeZDFJxQMdbBjpMiCNJ8YD6Z0h6aei58WoXlkxyCafNmfVQ187hcb3DUDbcD5\
y2NrTsZ6HT00iKRT6kr5suvxD4SUjJtDIhzc+\
4K6qYqiVskRRRXGvGPtTqmfnKfuYdDBTwHGP4wvRcRdHkg9SeR6tjJjRF4LJnLTEptuOv5ZhGioYIz\
m8MhQ/rAjkzxGJanRQ/T8ARGFW+3saVTIRyYSGHBy33x6MhYXsaBPOJj+\
CiFsiqwezgUkP4lFXW8nsLjjPftrRel3kPd660nmc8KNeqoqTXsp/+\
4ajWyB2GglQotD0RdZEPPLbdaCEjY/2j9x8HdCFWlfkU0g1p4AyYqR+\
prlIgGKbkK4Y4sUeKcat4aNXbGfq0WLibz/sSIqVL+\
rsbgOQiMvjV4gUvhjmuYQuC0lIn3LtaV5dnuIpexOvXcmyZRgxJ8x4BHdmbt6pQ/\
cCfzaPicw6Sfjz4cjR4XRtDHfnswa3IA6bdRtefqb11vafz0OHQB0B2j/Exp7GziaypFMfOiW+\
t3D1c2jGZZGl8YvfssoVqov9GLixRUdTMADTkrU+\
F2RGbJBa2RoqhYkHgKL5qQaP9QIvywMzrmj8SNf4JqCTJg+csfjVs00jB/aZEN/\
qzhly5kX72C7WeT6WY23ajU18VNtWHrlSd50L0Q6Z1kdfJSbcgU6heL8QYzpYmJpKE10fuTXG+Nwr+\
Tt1Zc6zgYE97rUVbpk5zc2kKmHbpKNqfmYCMgYa6U0i2CMVFVmDvGiNiEAZW4evX7//\
WvWDNwfQc5ojseJVE4pxhOBJLFU7Hiz2m5DrGgSX6cA0Q5H2iKMI90iOkNOoR0rGMYlE2TvHvfNo9r\
uLcRkM97TxGDU/WOitpDSctv7SJmmeFbR1b7BXZRbV5bTW9mWfOPzEkj6e5GvjZ2rRFC/+v//\
H15JuhJYzD+Rp7qKO42vwaF8fvf/yvoChI1r2zy7//t/\
yknC3f6zeq9BWSBBcdy0dvQ7We7eEPy0xL/lWT4qZPT2CkGYr24+Hoh5//\
okJ8dxrn6vBXypE3nVUSORkjU+1YnMDirbrfN5uR4+AC1AytSyXn5rntN3qJaI+\
KJvZtwS0quH0Fc9l6njW8rfMhJPIte9jRJz8GQGQrw1oH3GTPJxQMlN5av/\
tXzn4S761PdIYZwMZXAnoq6E9/d0l9Ai/+GsIiYRDrjOP3/OXvbJkeOI0n4r7T0RaQZeszutHt7x/\
lAm6VIae4oUsahVrf3rQBUN0oDoKAqoJutX/\
9kuHtERhbQM9zHbG1NnAYKWfkSGS8e7tFVWawZUmv0KpWF48XGyUrkoeoZEHrYbegfu313Ks+\
f795NJXQ1vlUQ8AIjdBQlWm1cPQa7KgIkf7qmn8DePZJL79kdg3ZQCwQ/UrnRTyXK7mp8Ww/\
nCan9WY4TgxH26pClOu/AZFOFDy/v1FeaDoGM/txtSzBgYP2Rcqm6nDz5hA1Uz0jtof3nwijaLrPD+\
7dyo0Om9ndzagEx0EM2X6yn+2WnbfJ87ZRcgb4cdFmmqJxSHr/yit+aa/\
veECySzCB6OYiszR2rdj0oTj5p1V93AmBb4/RDo5NW86psMk7F8Oz8g7XCZNhFv4HserHpnxG/\
CHvt+u3uxri0bmdH+bl/\
HLrjtfGMbHz5BV3WCA0GWqjj9ZEsQWNxvgfG1o0zYe3AdEP9Vs1c6LtRPNJgtG+spJzlg/\
Quwln0OAWH5sbSJg0Q/\
8mVc1NiKUBH381V6pLdwP3XxtEL59tHeG3nAPMgsayimPRxe6FvgE529xWn9Z/jRLPkhySK9d+\
UuGCSzfJdt2JFzGFsX0Oa0jG4W92uNbjXhZI8DLQC2g10v/QqF9tUCVenQRHA5jVeu3M1qMlow/x+\
4udeievFa3UDe6Vf0M2h/\
G8KKPIxE14MPdYBUYpshwUtc9KpqWXbjWUfQZU3u0A9EicOXxymFiYXAfjyMDVc19sFBpD7bCvsVmS\
wmHVmNzsPO6LKnjoHezDX2/\
mcHi8kQYfZb64sUh2sLy7h0nl1N3KDK0XSw3xwdGw1Rd7nwXeeHOhviLfDSYgnRnzOqWcL/\
sbTDMFTGCaGzKYhVn5/b49LsVKmeJqGg3GNK/B8Lj7CCbv/L+\
UPlz16nAZePES4T564FfJFDkZKCKKGVpvd33IXBZWJRyYPe/\
Rs8dEHs2Tpj2NZvEnfdJbb8y06TWWV9VFD3nuOUgbHPziTP9E/\
2YH97A4FCHTOhfqJfXhHyZo89PrHhbdiRUsGAHY9Al+Y+S0Iu7P8j4GzeIVQAwxiXipo+9ajw+\
OtBaKGoxRQJCj+2E3no3SHo2bEbsft61yHJH5UMRXVFejJPdRO1P7JNBkqULum8ETbaMfoQZU6N/\
I3m9TCbFyOTssrt2OZrsnEXSRd9UO7gH8yy2TOvEOwg2YZ3dukMEslL3syWGTLg/\
YHgAai2lRXodvHa69QV5BghOd7SJLHIy9nPdBHStXU1LzfCtW1SL7aN6isD8cnMyyPMgoL+j+\
m4qfEp+0XrBe+kIdB+UOXbntFv7n7TzKzBSrFC6G1a3uoKLcyFFmESn3rZQ9IyVa/oyG/\
5q7wnJX9OjoIo3WcpQm6vVUTLBFqkzxg2Wh/Cx9sL/Fqz71IoV6IhI+\
cp3XGGMy04W5ctckb6w0nOc4VRDTCN5K99IG3SledIbxHpLO8fMKgZhGme427epkmfTV+\
dFyNttTYfSQVrL9B9o7mc4nCLY0IzZa7P6IYoCeDZDK3+\
RYbOv4zBQzWJe4LllMhOGufzYdEXiMLY9FNVHcZ8xBmCBuJPHC/\
q1IAOIys1D8uo4DordIr2Pb2vIRO/fZy3JCt3WaGx16p2HBfruIHJIDalNPfWJ94KeN+\
bKoUozWTbFQUsPllllmxknUgAbg+l03udOJS3xvJ6rCj3+\
mcojC1Klny9eqF3VxDUsiOaMH3xYOhSpm06M6LJXhAh4vg2k7aIBMtk0YC+\
FQFDUqeKMTz1SoqPrVWg3+uMmVzJy42iBtabusEuYes+AMBXQBBtqcOaOSjtA08H5Jq0phK+\
vzGmgXO1DJOSGQPIop3U+dk9AiSF2bvT0PgAEF0Zc2IcTSdjPWQGEtWPq/\
6ELhOrXFc1hI0FZVUlKSdYyXtU6t7+Lx7w7/b0ufmsbhwUnYrtYgF9r+X6IVxq2K6sSfRXptSegrs/\
TUXBGXXPmet3mPxPXV0XdFfO5UBtiZ4Z7EC3NyaFAIx30HKFlqaqpuQ6N56o0AkFTpAc13aQ9+\
f5ZOQgE/ee3VO3jarUeYJNKqTcw3UqNdwTDfqpHUfLgZhy09SOg0amiL6HS2FXfAN9Ux/\
tNTGNvaNNqQZAGzKOlmWH67XSs06NpFv7HAxurs9le0zZ+QomguEk2zyRFu+Rw/\
39x68lkuV7Wt8RPkCqYefqexid1CqMtSQMPkTNIz5DuNNRNtEc9gUoT0+kRfknoIleSz9oo0LPvMA/\
wB0vuszCeTOwnUrDblncaN655F7U1rR7eXz6Lz/ZSpAIcDcjGfW4CyhuKd8+\
DDXjYYo0J4RhKFlOxUn5Jfin4Uk6HGUTr3FfuwoKeGl+hhSww1uZ1ZdbuXprOdT/\
20BGEjAV1dn36HutQ4HC9uilw+6sI/QfRmZ0BKggRcUe7F8S7Fs/\
FC3ITKwhPPHUOvwailtGUY7Uc2zS/Y2elIihr3ZgEePqeF+Nx0aNsbU1DOB4neJHm+2FJs8j07/\
FYZZAIzhmFSuyunuvLOCSsumbNk99iqZWn1JLtdreDn1AtmMgezPEwCByanwYRdWA6FeauRM+\
HpGS1ho8nWfe5PgoNKiCAIX7ENqiVizfhD6Pcjt0wuV5iKFncZjoHpE8Ekdi/\
qm9dHV5xMmX2gdmOKGgjNgJuzJL6Nmys8J79DeqYTLXSrC4g/\
x5aX3GPIpribbNU9N23DlbcrhKv9sVy8X0/\
krpHC6uFRx6CuZN7zTSZ90irGh7W23PiRzGJ1mql8wnKc+2ZRtuNGxJPGQ+\
iGq0kRrQdSeYdMfOgI3ab8NDsppel/7+elx6LXhl0aRSSJljJHC1g7uYM636jzGDS6ydTljt75oi+\
iqTunVrztChtTnYWv4xa9WEfmyMQfLjjaHJwd0LbpG5nqQHUvV3TBXTiYH162mKmFdNsNpQBKozUh7\
hsFVrh/868UhR3XDw+grQm53wiQ87MBNL+MD04hiDWicpdRAJn0SdxmNHfpF35v8UR+\
6N9HTFg1DTU7z6lWCh2Ng4NvpQllcAThLnKGy9HtvLUIuIJ6IXSVXuHhLpG4YE2EqmtP7tjpkhg+\
7DiAzpeOEI/MIdqfYad1H+tZFb6OqVA16E6f7tngw0oA9aLLua6+\
e8vdQu6qIoeeetO8PxtttSa4gOjScKz0w53LiWZvSjK6qEMR5p5D+\
VZBY3KANTOwtluosmZyqx31ingMZz18YIHZx3qdmg9q9a/\
UUf8S9kEYotNoffFgZ5tqk86H01jUH0z2nqTfKqKDXU0j45u47FTTn3lWGI0+yFiEgtmW9Z+\
CSph5lXo8G2FNZc9h7F5gDnmZzqUGa0vCHdeSyb9kwPR+i1nezN8sOdk9rBcLf/\
IRiw6NtuE8akhhqWNPgbwslFYAumkuRhmxvdor2TvHGz1dPk381RJV69k39CRrcFduU5zGYF9LEien\
bMxt5wmwS39z98eIcfuXlykDPfjfVysZMoZ+\
lSEMucbjAY4g6jWthTIeloJeDnI4u0DOmXiSvsmBWgz6Barbd2u8L74Fs6stuOGHVzS5a7AEsVHFsP\
Mui7t/+gDZVykmWJ88fac4/BTDqDk61u+\
3X3kIbzFLd9mkQQVDGGh2b07FihqK21KVWWsN4915bz8HGivVQBAM1T/\
wHG6lpm021a46Old1GPfbX56kGHCxgBbumzrYYgAeO9qqkry9H6qmSTFjzt4mHggfHzaL+\
5n0uYVjq0OHxmW9B44YWJd5ZbmpILuqq0CSJRyHgQjnUlQwheuLyIAkA3iEgTN3KBijEYOyeYgmFaD\
vIWqC418ha2BEt67/\
v6xIGCBHwYmY7TVkl3aGe6Ko1lPXUP6EjEQBVuAy5PQHbxlTvBxEo6ibvnsZhW3vCftvI1BEbalWH3\
979dmu550cvvUS91xTaji71W/bOHGkVt+e8UrUHwFi6P+\
3KIqGQvbWuyfoEgclSt9i13CTu8WcnSmlaa72BZ+Hdn5mpM8ORWvTU11dRP+\
FUyLcxdxnE5bc8ak1pKIQeRKfAcjaLyl9g1CtB15f33GwKpaCqDBLn1MWZeMm+dLrTqBIKSNMyl/\
BCPbz4IXLNhEhirzy42g8HqrJ7evPaMjrTdeDUlRuAPgdunFlKZ4k+\
eelvLB6lFJcT2iTg2aIf4IuWybOVJYxLgxdm3QgRmXXhjyGbds6FMZP8/\
NKZGlGO9iRLNfWN5nd24c9ZFdnrLqC3iQIDQl8PBVwzr3dBFnp6OJAZbtbQEjhfoyiH3GWx7IzV5ji\
nzGdqQkcxVtuPm2a043XxozHbt2a6sprH56MIvFjc+3v+\
MmYO8r4UYn49JaPm6CgjnEHzexUbMClwbqUZl4e1zERZkVMHpPqDnp1+\
DToxWzc2Oo05kZDSBo0dXapzVllyJX4aEltWwz55aJxlNxYw8vs+wxJyK7/\
6MvRQ0nQCCZkLJ325qVvnXIIOQjozRwzWjTtukeIpmKLYo9dJI1OcFNXnNFMxVN9I1rJj3mEJ9cczV\
XpxB7vEanBLVJZhtv6pXcXn/jtzjmj8n8Q8Z/\
fM80jGnLLvZ2Q56G2x8swkR0MpxVSVOONHVmZsS8Wt1n65pa4KEkzaQn6tQi/\
0Sy11AHmqWPWEe515uAjaaU9nLDJLsvpJ+7GbJFmuRCpn/HObnVsHytPiJco1oqbLvjz/\
0q5QZf0idKA6K7VUxmpdMBzyUkEc7//R9iRm5v1M3+8d+TYItS9n6AFZtOrL1s562VXO3q09oAifq+\
yI77ZS5nytNzxFggDaJeNtOY/e5gGSOvC6W/5pPW+\
gyiY27OKmrjyo7A6JeYIAmLhycdXCWe6UpK3NIp/dExkoxUodU2FqMa48ehwdCFy+K4Pb3YP/h+\
n8bn++349POjChw1xdpCvvyW+ABdnc+pJiGZfsWHR2p2AriAOiyTSpXZ+DHD5VCNE/\
FgFaJLGHf8bDdICbCnHAYCHSEfQ/etc9gVX4YLlN+1Ql56+0DRZVxXDpmgCm4BPIPG1+\
bu6WelQyi8fpqD7QX/Fi0osDKMQafY2S8F6jrZxNIgP0ESaJLLrTuPouUxDaWX/Da6g/\
5U4sLQLbcM6ZIQp0LaCKUXMhm1lzwxM8rhJktVk1GPokT6B5Zx3ahkVTX1Wl++nakV/d/TqmwrdSs+\
3BoKvDHfkZwjX8AV8Mb/o3r5vRL5NJpoL0is/\
7TK4TWYwVGy88Aztd9kxcW8tX2aT2vMH27992EZLTfJ3BCmwQQZhL2sgoSM7daU9fP30xvUGnG2A5c\
k/rZqxnQ32cv1EN+oOgs5n0AJ5tGHIfX5BENw/lojZlazos7aWRkBo3cHrDg/2c5/\
KwadK2VeOLYXtazr5Vcyi7k3KXanl+3okAM7n97EqMjldH2ihJ0N42Lhdmvog+8NA/\
k9yxlw7nogruJ8SMggou3QQjvM3uFVDtlvtY0hnQ+dz3o51zeuizM06ztkNuTLjD8rOsFmvVjcbd+\
uzZvPKxePPePHA3/SuiJXdI/Ipr50WchcsMO7MxPoB6eS8Tdp+7P181GTe+\
eEVuGhiD16am5RypPCEvbRCS3lWf8EF2ljps9JTqxsMwt+Orxi3G+\
e8jL11cL0yHMuGkJncVF83bRrJtIHzXQVv2EeU1OQPzOdwr3OeVfd+WH/\
2x5Sg0dAPdeh73lzOhKhvCiWriGl5Qy5khQgkqg87D47GyLY5Jxp5J38Qs11xHuZB7s4Z7bfRf946v\
rbp/2W2NxePevF2Fs6XF3R0v9mbSI60sKCojdRv27pXHMJ2d4GkJVZIf4zGcKprXJO7MH32Gt6F3eU\
cFCHg8cdsg9/aeDBw/CUKWZa7ht2dN9tHkZQcUc1L36pqWmFxk3Xx9/b31JLBcYoBURAB1fScqL/\
Xq0r12n904qd1Zn61n78Zhq4ksFHEWgzfgycuoJdKRRfFTqtNR7myMAmnVniMPbW5lzqzAVEM9L4VZ\
TcQ5pFM2qpXfKFjS6b/6FeJa/LGc9kF3TehEzWMqFOYr3jDlBpdQUebFdC26+SDmy+\
JBgngApxbs3lbKvCh2bIaFh0bIdtI1MRwca1x1A50NHnbgn72nZj0Ibx6o5kvVJDlDh+\
6X4dChFx80OCuH2LpalGWW1VtVjstzRywBNl5Ipz3/\
l9ymFTlrwnpTWWoKL4ZeXEoy78b9lu1LzowFWwazXGtRufMrjaLdVEdP2ESicQmX8SYh6ipXbpdaAs\
0e0HA0SVSKexpD64TWzQSqZEXx8YJa9OcwVwl0Pc6OlqyQjVcYL4LcgJG+z8MSQ5dxZWpAPvV7RRq+\
KbqAL/M2EebhJpw1TfihskGhFZgMG0tSk/\
ogdfmpgdByxehLUuFbwd0VjuFPIeZ9G17L8jNsecr5x7Kg2Fii5MydURtdbtFn3Op1M37X5xLy+\
f3k2nhtxTR0JcuC/K24BM8GXm8+ERRiNJ3HdqP+\
mkmvvLSzjjYxDgMud9iTaMswlEDoZIU3bXv4wr5KyZroTM4uFxUsQQfMKbsTw0+\
yfmnk2sUBAxz4dAgHJH4eZW7LWpWvWayIDGwJ8ila3Hnpo+\
myVc9TDAXlnRKuD2uVKrwLajwqtghc1ZXomsKWh9F7xP+LbPur1GfxCZ8yeb8/TtUbd4riC/\
tc5FCWGQunXp8wofS6IW7k68IW3LyGb0fODqOOUN/trt99jVuzyjxV1WIp/14/\
aqsIc32rNHRrAoPKLQMzEhqU3Luhz0WB9ltH4L8SWaB/9bYEwm0+4/\
MShITJOLb8zDefCN7n1GlSHCZHyif65xvXI1pcgute+JPF7Kgb0bZJE/\
c3JQDDU6bE7iwIHf5DAF52AwDLXy0YyudV4tN7Ddg4kLzxBY/K/\
mL6KD0ZAU2CoDymmFr7HO4h3xOKYXNdKjj1kwt8Oaef1JUVQhaf0rGoA2l/F89I8Gv+\
NZdrHH36tdGfsIc+97vYsr8mHXvDIrfg6HDcjYuIstDd+\
fNmPR2YxHrhqeF0XEDdxcD16n1QAIfXWc/\
TVXP8q6GcIGQ7dOeHY5ClLJaa9OiFkBj9HxpAwzcBaKi1euMhYvF8CInEAIoqoY0/\
975rGyj51Wyz9181BneMlazZVe6EWw/JCMm65pm39ZpOlchs9w7/\
I4ZRTwYp8236r4RVvuJbB4zFySrNmm66aWMZgNzRd54uaBtXGLLAOdLf8zoPGcYmVbHroqPjca7o0u\
Ve4Q7a9sfRvT5lWxXVSmd+K6YAnylc6Vchc+xz81+v67hZq8YbTawck01EqNNI1O7WZUJ35xMT/\
ebuO1yGzjmxRIjdIJDShQDHfB4e7Fnfl6i1fPabTAavhOIX/2LnkeW7L+/+x+\
9vSGbZTA032EYaUpLKRsBW0fFz0+O63f11E+5XSmOV0Uw9m4D8S2rVauIuFKb/x5v/\
ldBgwLfNPDwcIIC6dcr8wlnQivxgifVQ6QDfkc/Z6u5ff3/\
XbaJlLUdcvEwZiEU6do7GMhvfv735tzqwt86K0t78uZY1N5cKRefT4/\
7bv7z5fX2eSZ4kw3x7kBUepbxvmMu063xOHTNTtQzn27teN1y7BR0Yzfnu5iseiyWf6o0W5tqG7Fw0\
DWHYKyQg31G3zwWjF2+fLwhkmRL3aN7X4eM1pHce/\
3pSs4JvyD28IsgT6lWcXbtsRswa8kmLsDeguImw08oLQSGGRhsGyBqI1CG4ymgUSm+\
g7Z9bszywOEa7rA+1eFXFKGis1fG9damvQrJUox38ryHbRV9rtXCtbpAIgP/\
SLnwzaNtgKnh9bhapAZ9RAz+4gN1NRyS1g1eZz3LAgOpS/\
UPkrtchut0LbEqzS43NHIjFahYKqbxGI+06iV/1VlqkxbXbMrcJrs89OAXx728E3NnR7U5+/\
70mrRb2mRy3K09cuQMtv3ReuKVx5D7o137NnRiVNncvblx476MQMfe32Ytfy4rV3C5LAzWBYx5mmjT\
47mzs9Aw0uBuxKfXLakfuud8bPnMocooadbG7CWNw2R4JiULLKVv8/\
HiSjFhfGbKf5kEOG8pPPLT1zKgipH4JC2CIA44M3wouzSol+l5HGjJJusQr3UwmCODX3LyBkH/\
b0rp9EtTqLq7wZWgJmM4e/\
B3BjHZNjkA8RDskzPHicfyEJ12jW0lAlGofR5KnpzvIUggxFYunMkXAfkP/yBrUu7X6Gzq+\
zZyKfoW6yeZ4Gq8G+hKXGOgUO1zPPrzUGFT54kdr6Wa4vMjYsGJzaRp1/W2b/\
q3e79vomGrCcEWxJRoPsYP416py+ftiAH7+6a9//OP339599+NPd9/+3/cffv72h2++\
NapMIwJKjZ7RgZd6Txx9Kl5hKKOZJIABz5DPKwHMs243D4re3P3UnYZtDZLGxLWLBbiWrP6hQSJtdv\
3m45wDLZLZOjY7HJE3d99W5Wb0WdtN8BeTjthUmHFbsknAWD513//S9prYqbge5PV+\
LXObEfdYQhxhmMUabed+o+YgNlFxbcxC1LF4xifiaFusLA7t1CIw7/G/\
d1dZBr1pvHrIcfZ23YMDRDG8ZC4dDSG4ErRjrH0RFAZkTSw23gDqxw6FTjR4raKQ4/H27T4FMJNhQ/\
6gDfmhbsj3ma6Gc6pjmPVAke8RieuvUAatUaY6lqJ/Kgk9vPXIGehBeHnPjLtcHQJkuFRooQsk+\
mWWHoeDK6CpgzsRah+sheZ82bZBljNi3aDCyy31uVrwlrku85MUxUdIitr+88jSpIGQd+UuhYJD+\
3vjw4LXmBnDYxmgijdWH1uxTNmnZVP28malKTMYRmBPOGzzgNtTz9aShyoi8gpcXZjr6kgqw4rERWV\
5RtgNMtFdvz+hJGq+lksmH5OTYZvfdmt11QZilP3gG3du8Dcz/Op/\
KT7pDKqEbdmP1Zy4kqaf3QbUmPrKqbapPojz7paYyMqnBCKtfgc3Wz0/Ef8gPW8VVfrt1+\
aJzFTTwN3SXc6D7YPNeJ9HTj5mFZE9a1HCujIlH4VYNWqQfX8eVQ8WOaAmFEnBxfd3F0uxzNA46jBX\
4vIAMM7fe9cNk3LXxQveTpcTkdsPPXqj9Cfj330b+fVo9NYkl3c+7/\
3xW7BBO4wOL2JnMr592kOKAELa0bL53D1UCKzZ2jNGbiLrVgAf0HVsKyYFlzqReRaB+\
WDhWvkmokCuN8SGLSABi631GhGXshZ+\
NwjK0ORwqQlBLTsXyLyBj4AbYUbHbBJZubJ39yr3VXSyZja5u3H9JNm5V4ot0RuVK1qfvP2+\
xsnahlrUsjrgA7H40Uznub9bKufG2L1IUUlzXhnmZ4tucdmuaAm+\
FlghgblanzqRE1Rxn2KgfjnXy1Por+JSPg1nAM8ql/TSrXhz9+\
OzzrYyu4sPrALP5mSg7EP0BpTOKQZttvAHYpcBO0ItF5Z9QDJl0X0zjQ8YoEgwsrGW7a8FgSOSwMOR\
QTl22NLBiqBzcUPL8KFt/egidUG621ezeGLHaleRhg3xipNoB8xFRayqbms6JXAZ1btDFyr+\
0yM0sf06tKRzFkuTEfQM0PQ0PLmE1Mr3i5goG/3MDFpJUlogM/C6+\
DhJU8YbEOS0Ql8YP1UJELXZqS1XCyWBCWFoWllgnA7yQSSHKN5oJtEykLS2y3CvXLC2TcvuYMxhRsq\
X1/7dzHgAk1O9t2twixEMWqgVpB8I9gPD5v1plL+\
pR8wSHBbgmoFd7h8w55FD6yKobLX3lVBEFEicGeRaSPpYRbZWtVt/Nxx8Zna6eX+QB2DOzI1Z+\
ly7KKcHaeG5k96SlbwhQ+HPsItipizhoUQ/\
F3Lezhdsl6nO9UPf27HsTWlXJsidnLmOlWUCN6nln99NZ6yJJISeo+oGJ1nXN6Np04Laf8Jpp+\
Lcsmu89rRrJta990M7j2pmSiY1ICosXkbb98fH844Hs9/brlu2HH//\
0jtTF2LxPd3FRuiy1a60gSxtztS0DCvmSm3AeL9rvM1xFHh8jj7v5q0rFd18Gqy5D4BCebW4af5mOK\
OpnO7iQPyh77Ap/2xKnv18Ztf+oAQSEqA4AfYZ+xWeCnM+0IR/\
abj6rEqinrDifRQnKzAZI13xO5I8iVwv4dz7GlffumDGyRmd1Px/fx+KNu+bHjBrzUJF/\
Mh7unPxbXBPi+nTOsFm4aWMbovEspcj3EbeQ0b3aSfY8MrHxykYI2BjB2og3NYgZlO+\
5dDHQ9X6cVHCXqKkVAVuqbWNFwNcG2uLHRBBiagmjmYyp7Wj58CrHgyOzE0X51gBBRCFfzMP0UIohi\
bi5HcKWrCfc3SP+25rnc6EISsX0PP0x6iIXhiLA/zcO08bjIwV7LFqj/\
05oQEoVpGYurbQxmN7EjPHF7r8EMFDFrX2KMCAbb1t3nGxaW23liceX5iWfujfNsOA4+\
pnVHljxOhAXY3etdo/Pub/\
hM6qHVKWLfQLvL2rTsnath9sXbnLXvJsCCu2lto794tXje1asOlzDxuSW2mCzytlZTGv452sx4w6NH\
4O9+vUWz3I3tpYtZM8chnMYfAGifeBR8ft2uSMvo0omLYX+\
XKEVsXynozudoPM3BFg7uie9AQzNwKEk3olbBopkfqNLyKuackKvsQrslHR8imWwxpdhK26VFC6M3Z\
J3hKeWS33dPGxXoqdRpPj0egMPXOGFxKYuAy4g2yO5rtMge2/\
btheN3Anx1ywiB0hy2cuGXjQ4Qr9O1wlMh4pVRVspbxbsIZXPxPJOvT/\
qeFnO6n3S9uDnHMmADGRLrkiN/2BdvCrAKjs0lgWFA7CO41Mh+4o4lW5NuYL2C/\
NQPHwdJVx30rjR1NHMGgezGrATGk+GcF8YlIZ5eZWeCokB/\
sHBK98rILhbfYjdu2OgdhRjCcR9dvkXk2AsQyJ6QY5Gz4enXHcRhv09YjD30LE+4f+vNkh/\
j4iIfH6O8y9P8kR8+O4ULz0zAL78CKFaW9rX10F31SZDeKlGfBqP3lFy5YEEN54W/MLJ/\
LDuIa5ZCfzb1COmwuTVuXVl8rIvndOPpnn1+\
RbyeJVTd8KvnfNoHERkDvF399mwGe2JJ8aiUL2qVxe92Y1axty6/\
tTMoIm2BBbfWgs4FZIAyYgyPa2s9qoaCo/VGkvlQDeuwJuXYLjXCN+\
oyu8W3B7rmRbbTMsuas8ayPCZoY1rzmx717LSefoHPF6UnwCQSckn7o45dcu5hIyBsGh6cVzc0pMsN\
fH5surMWagYD3DYPi82EWZ7mSk4A3pDtwyE2HmV7nug6V8GGc6RqtmEvNneLlB/W+\
z6Wb24Nu9tuJkU41Zez1CTnvmYyoH+WtyizrZE3tYil+0+\
bgPrp55vKtK3UbiNlGOhf0z3ltMQQnAyqazftsm5Bx6lZ3fabnMMsXEqSHczI5pDA8MpRBNe5sppjB\
ScyQP7FmnvkWo5FTxZLqMZEhW8rqV21plNOUyP3CdccsfvsUKOoa+dNSPt+OmLAMphf/\
c7XEenfWNIUnZmQ/mg5YXqoLQ9JallQAPty+WDRkfQ3psx4M6w4Knn82fiJUkhVl8pMlILdHNmyt/\
dmdzs5XPnKbLltR5hBZ0gzP8HIxfGB1b7/a6gbkrlTNJjlptnBJeXsDjchZPAzAzlX2R/\
CSC52xH9FSlWsDelcMgpCvn/JCAmsexKpdHw4j3vmm/tOl3nV/cb5wF8HDPI+\
1Fd0eVXlepwLjct2W1Bq6SxgVGOJA3PLnSk46A+V30dCTGc4KIEdTMrD/\
w3hLVTrVBUN14We8VQT2XVXi5fzBHH4Iwcu1V0eIQeT+jv1N+ij7KlecADYvN13V6Ua+\
fTGNZVpCuI9MkR/H74Xjs+gurZmVHuwxDVe2QqyTvKQ5xcGnA7AVdeSwTP16m+\
XKUgQBd9Yw3io8PU9zsM/Ox9k7JVDyPEv6zCJ84tTphEs/J7w87cSj+\
hG0Qv8qYtehPu47Y2xInfByPTf+0LZGXE7a0F9AdhQhEaM+\
Rt5eIlXKniVTo5HJCRth28Iu2vMOalLJD+frlwKup1t5jP36VKTcpisqspeVujMfUhJnvHJqCAc6u/\
TxMMQuoBtoAH0e2eMeGAxrDYoH2s5CdEXIMdg3Z5W7Ay1NCo1LGni3Du38bXZG2s8ZVMNozF4dIeng\
oD9uU5blML1dLg1DWPmKhuS+TL41xNBP/\
kRuhSQXJ0ySWU7UWLjSMWvZG3jIobZ4zVaa2OBOLFaXfV7Ku6BEM2QL40UZZSxgQsHpLRIVlIdjVlM\
KtRYHb0f2fJ4s4S/BeDkFTME68iIx/DfcQgBtLnnxUuglL4/\
PDhvQLCJdso25iqKNIkHLMQbjZBTIDhGXL27FCWUwKTPZXXoNONI36u2/5PFGtMdx0yG4S/j+\
p8fHDeKkSp9zU5BJnlPLuYlfVfuhWaM4NtCNVBS9mI2yxz70LUy1bdh2sWAa1tSZOAIKZYMC1TLvxl\
TbAxncv09DEprqBuqZUDKAWKK8SSIXXusuRYn9UPzC1bJTfwCmtWpSO1OZvoXmroZerpHUGCkKNF0v\
wfXf3lzJxZZ4QOmLL/ONivti+NznSWUUTZL8EKtalCkICZxmFG52Cgyxll+\
YCO4wijVmsC75fniZ7AYKzyyS8L7dTp46SXe862sY6+l05qiNkz/BP33Qn03Ysm3yIq/\
9PtoG7l27VLoANCwkVH5SrSM4DqQTnijVGoAPosGjiAfs9bpn3PPopbTdBZJzVXpFZS/vid+\
0laX4WeFHnbKo8Uo6duWzL6VSu3CK5UQzKtdVb1b+QS2AZUDUyVnwJhlPv7pAGc+\
2epilS1tVtTiJX5rrBI8hqZ2vXhGjiGi+\
a75kKwsWRniX0vHfC8V5JzKFVeQU2YbEcihprPIMe0GxSVouEfNLUNqLYvbdNVPHzFZmEg6dedvKXY\
lMY/WABFhaeNcxtL1qrliyfHFPyclwhQFnTZwqsEqh7hXhyLRNiELKHxUhdfuBCCLueK66hQXEYtyr\
XGskt3Jp/Cpqh7oXNuiplGIfN5GlpWyFHGh0TKtAu0P7o6g11Qs5oZVysTHoWjS5eT4FAeftx81EvK\
3az2tt6Jvj+gn30QvHkyoAeWzr/ZOg+5YGFEJ6BFumi5+\
3qfNjJ9LKgf7H9UlySARWHGusJWXp1a6LNk1zbg8G8LA9ousydpe6/\
chTKcVQcnccA8oDA84nOrebnIys+46YALt1XtNwelhZF8GHOfA3nvH/\
4xiY7irRI9et0HdpUSHFLIkKovY0Psi/H/\
cutfsWqlnY7m9rmRKKYrVfKPEhOAqSvlUPYm0tme3pVmSbcQ7+Xe+4ZjKm81zA52BH+\
j0IC09QdUYKnR518q4Z3WLey8z2tin07q9xFvMbIDSCCOesMK9GtVTLA16mMC143ulLwKAstyxUzya\
6afFDuPc7Senqq5+J3yh/X6z3UOdHqdffdZX+wIKkcg37PwVgiF/Ltj8W8vfQOYld7Xg50Ws/\
B0oYVTAa4049Ho7+3Q1P2gl2VAijO/\
qKySV7XCMm03VDuwvU4w2XzKLgM6m3lP0xbKdj7q3Dejl3pV1gNvXzkHpTjUA7KAdG+\
hJY9ZN2mYoyxPuSpmSX75jI+UYhfIJqYw0XqP+xXVgWobTQ8gg8UgOiYlITz7l9rG1Q1rAq/LH/\
Y5xEhiXDzDeJADSo7UKoMbWQXkph8xs4lehX9QYtPI1UZNh+\
chgRi47zDwXD0XjkBJKc2JG4D3rTD6TegN9E8JW72QbtP0MJonB9B7mM9J+fUxcMrY+3orY/\
96VxemVtqUNzS/\
ExbnRSvgd8J9bdcmqLlnM1CKEjkKetD3hKb8499f7I5h6t32WdW1E4FDe4fi3S3i8oRQCVX6ZshJY0\
IeexztnSMauTyi3Q+\
k34tGUb1ALpAaSaA1nE3tniTzgryGLIkzDBJkA4cwbVVcjgqdRe0d9eNVrckXmstZM+\
DPVHofFxSN6GEknc5u7Uqv+YPiqFp2mjHcq8alubMJo7+\
cUR02QhjeA1a5ef7e04RuNnqxSv3ROarySV2tTLfNZWbNePup8AEWo+Sh1PXZx8y086/\
uAcYFm2Fkd++PrxeJ9A3S6T01Po1uTLSGcNUJMWT323FBEv9KK2A32dNhq48NLdZRUebutI+\
pmFrgIhenXnmWRnVMmSNafzzUOLi9DZHXYwtMXRz9OQHM94q/\
9cTxxpTB6Tji4wu72KHbAhU5bzvzpwAghKQgiPsZZDrUp3InXmxd9dNp3Jktkbge+\
rgMy4KiijNTAOFO6jqtn6poLG79R56qqB/Hg49+\
QTwRG0cKiPHTCQ2GCBMBLJCEcDYSI0RWi03u1AGrN7uuOh0u7nH4oyIf7mVIcZfnobHEV5AFckCVt+\
Zy6zIXt72MDcJfCgd8zPU1DzPtx3xSlAq8YSIaYG+sdQq5Xt+\
6WARniNq5btLwQ4U0KTQbETuDVg1OSgUeT8SSQd3S/Hsyl5+2AMzA7D247GE10ekEEmLyG+\
Ww7StuiwVXVaujo+AqaAyxp2FA6bUoxSCwdlwdNlN2j+\
ykkcusjIa2tcdogbAJTM8ko32DDMgFhQLb7B8q4AGwjy07Vld0nRYA/\
BvmL1rBsQrjZ8HDqFmA5v8G4BxvTNqw+dQY4H53NFUBPlc4/\
XqwQvitZkytf30O2n7toM29TXQbRTz8q0MP2yv7nGNx1g4WuJHFVelNeS+\
pdBBiTgUP4MS799qVq8WKYxWYz4vcxmq4pbHKu/EQWeF2QbeT1LQKlS3aCGt1Q2BZ+rY+Xi/\
fUVnSGBHQD7Km6FECzfIq4Ztnf6D/4LjpFt41nDka3rpd/0Sqeoyp4dgmawdSnB5T0NP8/\
roBDpIPZuu735UJ6z55M8gqd1e+C9oD3Zfg10WKku632GV5B2vdCakm7Ti+\
yAndeKkmD7DJ1ygamslhGe4waEYYxHV5aRunEs0cvz+X//NfrDmVv/7//\
pXOkfJLcJGJA3avL88usgpoHaUayh3R+QXZ74+DvOhHP9EJ2w2LyodEejxwrFHeLP3eiq3BY9/\
tNOgGwSxJ5tGn1c1DgwzrQ38OHVbRtsfB00T3tA/\
F5Apusz2tGB1twDyEiLxqqJVyjCWFcYEOz7tR37U3uCLtAvWL2C0/\
RKFpXiEOSyV8gHR8Dk3tMuPsiBJzqeBgiyGKQ/ev/\
Bmb0MrFvvzfWfBSfnpmcnYmr7rraHZ5HgqNQhp0btKncnIgWmzKTKbFVyIIUMNjZWxMej7bTNO8PA6\
IPVfaudE1Ac9dFREO9/wk9Utlfq0L1HCzfIAmn90BaYkCMIhg1d2U3E4t4+CQV3m3rvpJ1b/\
Kgt6z3yQO+K+3+UYLszfE0aOfU8gYo/\
rEZYA2xnj3FncrtKUN9I0Jdlidb4tt7Une6JQSNxX8ZFWLLbr964OZaobrjz0YEEVuXWdlrLpMShew\
WdnNDBDqCOQcxc1o+Yvk3Oc5o1EGssOVr+9zaDeisp2c80URonZFmLaDcdx008j4OnH/\
gZqtsHKfkUHBLmO4ZEaCaiNeAoVwrVbLK/5tudzcVXNxcVlGT+\
tELx21Wy7w5u7b9iKbUbgBQF94jazxrfhGJvW1/\
RTu5ZbrTbLNEBcHcSNFQRM3sVxnOmKbJNRPVrGgXFmqYn+jMF3vaCeoeQISuyj/+1//uu/3P/\
rv6ZJNYN0jwJ05I2Ii6MjZd4ar7OsZQZPAGM2NrimtrEKPjT7M7xqjoP9m6hyv/EUyaJ+\
oN6Fg00zykHscjuV+/IwbObA/8jkxQFU17xsQedSiPNQqbkq10pgPb0AewsfpWRJMGtZWUc/\
4rYA7OLwC7eXTTV8gBvw9j3W9dKbxY9lerlGwiyIYBP2apxuo6vcO1qbGmOD4DQX3O8C4WlYRec7tP\
3VzfZb8b085bDKOAveml2KgpIsTiomPo7eU4G7qOlhMmmoDfVEjiS7w/\
eoJVX9POhLYBeVHfLU792tvJDz9jgCiT1OrvVcTuxJktLi5p0o95NcW3QgZDxWdQpKzEqRz2IqGLri\
f0lalIRPlek5US736KQjXts3CO9rCytOw+\
aCWVLwBNip4uxGx1q9HqJeGlVttSXQLvfMp5891SH3M9ljv1pWQvLdrzCNrqUBam1DUkaP/\
IepCYJLgDxHmePD4mx/Iscix1/ucayMtyGVOC1J2x56Zso4vWgBgQPpxd/\
0lPyAdSX67hmFoLnzwdl6wafswt7XC+PABpLdX+WXKo8vJq+sV0fyPjW3sRM2xxRJnG11w2/\
DD217h8wuNjT2suVF7oSer1eFf0nhTYxP1cjiStpZqfwNLuKzt+/\
S0HlGYkkqqs3pU8ZONoX0tQVjd7HuuorvaEeOw2cjX7mRzHpm4qHE0lSc4jVjlYPFhqM35Zydd5jOa\
qz7KiZxrr9dbqOd95wwb5mGRZhnB1gUZeLgHaMl3Q5KN9250M/B/HKs5nwuH6l0c6Z8r4D8D+9/+\
vabn7//z/LQv1+EWFrePRL7YO9O+fHalFxXWqzDDthqR1Y3yIT9Zz/8btpY9ZR2jcZ2Lj7X/\
cbskKXYD6Yti393XQz1jDjt31W7CHa0GKSBVnmiqlN1xwBGshvWciMyaX7XHYyWS95PZKXXjohAHJR\
3W2zZEGGojeSWqx8eMZl1c4TCH+JWy7f0kTsA+\
JkEEHsXsqXSOuSnfBkq699RhCYoUCTUwTX5Hjeb9xDUiLm2SoJbc1hkPsqLpw/LMdY6Jr9v9LZ3A8/\
uG8G6BtW2SmjbBlRebYAOGypCZyPlW1XvqLYyrqKscZjbLBC1heI1s0N/\
fy9i9ONs9JiIiyjZ7K3jCBNxtZmv+VlfihABu7Zw/\
aQ8Fprn7tX9Xb07Xq5eVufxUycMiSUOc4NZqpkmmL9Vhcb7JnXP46HbBLyoYlEcIQIDWkLqbeV1WlU\
enKrmt461M7K1mCB2NMkKkhDjppsXdCHsa2E8/Fq4JFHAOQsLRhx7o9TbYvTZ0f4klc9qf+\
eoGfGCZT93VdSppSFWZqO7vnNKrcvsrHZ2PwHyY+nj0x5xLOz2dJQDdervCcfpz5s3Kz/\
UD1ZeIJFH5z2FLNAqd82qqiHW53lB6tzeJLkf9KHvXfby8BbndSNqQzUbeWzLnr/\
ulVbUQI8jd44AbXXDV2g0HuskW21x/+\
IJUW9lH6aYfTB8CGKjVADd4K9ImZCS8GzLhs6qpcyZjC8hm8HfWY4/\
q6JtPh8qmHKFiWyyObS4gebYXIFqWztZ1reej216IvYVXJUKrErOQytJe467RcfqapMud+\
XNLbUKPFmKdVfy0o0LdW/gRr99HBA8q9binM2UJEqQSRWQorRUITLeG+\
u30AOUiUbALJV5NelcGsqkEOMgiHlEc8jid+\
zfQthnJd9a3lsT3aku02TfAC47Bmh6EC210zI3OMtnr9llBmlvH2W+GCEsqw3xSgtMo/\
vsSkyNDYhazBYvzeMqc2f0yM3Qykg8Obb7QDKZ78jUT9xtMyLNDltfee88r8jyabHGM1GHHmWZK91n\
mjwqsZbPOip65c0DWQzdcjeRfYrLB5P5VvifOwfrT4A/R/npvVNLnGnm+6MwTX8O0+\
wFMYLfQdPgpFtOGWPjvxxDaNaVrr36ZHbySpWnbb5rrrzc8BiV1hsQqRBzfWQbPEpPi1rgaiH33BHi\
CfjRStp5hpkDBemBLBkfzp3xdGzn3TDVRro+wHNdJVPh5nsPtHmH5x76Tvvv+\
GRJqsdGJvEZ2ly1ebye2XVnlXVLqVrM77OxDf8ONCcXdN8ueE7KPuYye8nQeeO6zdQr88Y6akyg4H8\
hYFVijD2pNZbtRmbInDsqGBb9pvqwGc92LRmU9OeaJXASJXqMbFHLgGB/RmbWwntjepjURPGQ4ONK+\
jRkR8/JBa3dtBaNjp4Eq3L28zjsE9faV20f/Q0h47kZ1L0j1LF+uxFaF3hRLwBQRzKFfE4JT6+\
77FUb3+MEYUhR40ymdvRlUMhWugx817tQnELLG9+\
W2tcYoLqYmFYZPdtGQgjAmyqmmlV3oQoYIczDL/r08DQG8k+\
vmyW6Xx8fQUWjJyFJrpEGWNNIdZXdFGo75y6WSAHeGJZKzoLQmg0q15otctTRz2kunB3hHADspg+\
PoKyj+h+Cb6u3fJNcKDrIsBU1eqxthm7o9yywLE4T4AFU8WYvS11IEHcybgD+\
IJLu3dGjUz3mgpK0OQ7O0Dd3z8DO333XTcddd4DT+cGAOS+annOgwKG/Y+Evp37Wa9B/\
KpHxgZxtlpGvhzmSurYSNqhd2TX35/\
Fk4OXBZksvPZ9rT4p7RqeubV2qk8EM0P7hfrZ0O37Hyyuk87IJBxlvpdsEdmYJugkguQJbckwgIH2P\
fAjIqVJpYHaUE2V/m9YgDMYxaf3WBZcdyFJFyPmo5OeKMsQsZlASgWZ3UJ+\
TuZEsFGzsjnBXoyOkNdWfwlDbtJaL1K2xLgPyaHj35vu0jZRQ43auC7jSHmXMta9WmyvOfTdWCF3Un\
7MczLk/tIbQpobWZ8GHWkvxGul5H+\
wP9SJzbstTf2Y62qvdW1uBtYMy7Mu4hRGcsCfpBfkuOoFQYYGn49fcC5JOvlfjGkjdJ3ztFafuKA6o\
qdxzZnfyeJ0d07+\
dZOyibD056MAK1DYr9nLRjYfr02yq0OaT2NsZQQI0bUXT4jy7jMKNeXZrYl0qFpT8MN49j2r/\
7Ch6jXZjsYjB+\
timrWcNOPUNK6DEiZAiRBe3VzYEAgAvDg6InUryO7Xmeh6vXRU131YT44QAiO642Z8Q7lvwdege65m\
UPWzaDSrl/dGdZjU2lJmE3zOco7GhvQfyM1OgX/HjNNuJxtb+oZ6XWgd7tZUxbtRPPNQ371/\
6adcVw/qXbuoeL51Fjg80GKqTbZRfjdrUyN5Z4m12xOgSpKm3slhfXZD2P7fj41yVaqMbM7xcBHhA6\
C0y8JE+FqKX9B3m2HLrv/tnJ1XMn/rj46OvXuJm8+\
oM8hqVdFVARUcYHvPLJ1mMByu2CQYNwK1De8NnfOoj35Ma5JCcZ73TyBfp8uTeUX78YU9pDG9icBhQ\
Z368Q71RzuDWSp1AMClw3lOM5TQuwWAxPMSr3HKavnhGlTBnQuJZU/+\
oDvq1aTY8f0SivC31f0lfagHb9KkUET0KIDw6XjIwDjcrfF61zDrqaENi5slJN7GK/\
GPlcnTp2G5vS/lFF1JUSqBIgXHrmcdrROCXGGH1+CVvBfYmpyFwCsCqwKKjVSvvTs749/\
Be3dlfhGb12806JGIAViTEGHKfBIItKb13yBDC2OH8IvK3x847xnuI4gHS+8qvhGQ0etPdSTyA3O/\
O8fFJNaFGwsgvMriDRWdcKh6EckfLRtLhWvO/\
sIf9S5XUzHU5XohoBvvX22V3kcHT7s1UnImE3yi2L/\
NUAnEa9r2Zo23qrVrQ31lcZn2RF2MnmcgaAdgba6U8uQDxeLw9o5tAwdYBkbbdig9h/\
pmQp5yMbZ6Bct3nURKwGWaPdmbFcWWGbSLK/wTcZx7Bf0tewxlJWKF6N33sBxB72J8sPVd8Ag/\
NqWVcQk6r/HkhED3Ho5OoO7MguxnacXGquWcrxd9d1Cy9Rj9+\
pA7WZv8yH8TJVG4rR8rjolFd78m8yn33XH3xy9QE0Y0exW/Ir5gq70qJ9E64o4smZ2+\
uWzpXEXyP5wjj5023b5gKbM+spTQnjxw9Cs/9Op2mrFbw/opmlfZE7EUhOxC7rv/\
F5PTuvh8tB9hZVbrE/XNVFPPMQSDJDKOHY/EEYvdtPbJORpvalVXFR5q2HCHr66y05Cs9CFS+PRh+\
kRj+s7jLbPeUs7MbtuVkJOxl8ju895DbeSaDcZlaAx8BB32Q82dCjUaTerw/\
1NwAxVhGbxdn8eDgdMIO5b2lTW/dH6Btv1/3vVcarLpT5i5xR8STm/1ku/0848r54j+GsintlG7G/\
Th9yUSBE9Vb5Z57HO/GBXkw2KZ15gMeAdVe0j00iGil+hsO0ljzOlPrXmJBRG2nN+DmCzJTlRrX/\
bEXn9Frb8jiqZkPpUSbidpDJlpvEwQNE9s9bDN88fNkbEzD5VAsR2f+\
bv8lLqk0KQpGa13btMK6aLJ+n3TjMoKzEgydAyJDHdgy7DxK+fOyRAGJn1RQiqOwWExmX+\
NNGocgHkAOK+a2AgBEJ6tWovJgnHhcnZUBIWXdRW3NwK1cdXOhNHZ/\
GCI36zA9nYgysjVPghGL6hqTXOMP/fOhA/hurIhr4//A5RuiBGttpDTilZ8Txe2/TdJgz+\
BqnxwL2h8qc2pFEILpwmZQE/3mt9D9bt/\
N3spskTs5UTsm4oYkVEd2uMyr67kpl0N6Yb7t3Vwc5dXdb3+w6+hp2O9NjpsXGivkxTWfl2eq5+\
Qtl63tHsbbW7YLWewqTpBQW+\
ONAXIC06Lhtct8cKOzZMckrNOo1FNOIK73sj6UNQkiUts8ublVuyn22AGAp4i/\
WtpwNqQZvcvogYKvR7RWhWmBiWACkk1TNTyhRtKgYMd/+zfiPGTt0DLqrBx6KfrAw+AZZxY+\
ADJUh2L9W3KUrtj9Us7aYbOTt3S+\
Uvd5q6rPUeUWoGdchYVOU8JGeADKpKko7Pd7SaZPKuZ9GvBrvxCA5KugOtDr7zMa2jaF92bXUNI6RP\
Yv98t5u+s2Lc4zyf/Vz/rSzBVStE9tbMm5WV/mndlnJ7qxTW+\
dhI8GzFhDiOczyMVhul0msKeTGgltBfQiNwQqsxHNE7wEMXasLA908X8jfknnJzejrfvwmZ2AHlZBF\
cccZ4u7L2dkzFaOj6xTkiotTKjOtSE6ZcgjjItDybSoJWJTowdW/riBMAng5keguLbuhvUM/\
frpePfXI3yuD5ZHmNGJhpJkLGAVXNmCttwVg+qk2vbhTHaRCyiBw+\
Ql5qdhehx8GmZ1Qna3ISiexOHzbF/\
i9VgKIX0N4LtHXE46erhJyE1GMGmXySvmDUimnPnzJneFlJ1KwHlX5cRmgFujbej+\
vv2TpbePRkWjBqVz6hlhUPcagfb9PWiuU2txpb2BR2/dlYLmWeNtIxSu1eW8BI+\
38CliOVbjWP107sdyPArsrGcWmQdigtj9WE+w6G/PlcEeP/6b4mKozadDPdP2iPkI0g+\
q74LVe0j9g/5Lmw0wZI+\
MpqhmgsBJfp5VFxhZ69jBku77Q9MQjM0u9C8cpq6hMBqOuDThRN9gwkm167ietnFM1JGEayb216ulx\
2pTYufeOJiW1dahnC5lL/0GvlqQjTNSuQ6fM+m4GjcCsDUeA6+1Isg2i7Jw14op95MBojA04NQ49+\
naVG6kwugN5EEj/ut4l5fkrtVU+\
LW8HzeXWYuDeuu9n4HaT1fpNWpTvfeYB4remwFuiQRyQ3wGnBbgy8B8xGfi5lo1kSL+\
Vkl7FoIX9dtWeZ6ChTle/ZNiTQuc7LXkjqNl/+Ep96fe+Wme+\
4QxirTGWPwtmxorQ2zLb2wNLdh2i5raq0xxMzjCtkATaZ7AAnRj3uQvLvGFJNeM2y53CNfHcSOtMZS\
LwjfU+8cEljXg8NQnvtfwgxgnunTRutd9iN02e9IIVAGiUAziLXyh4UALElZWfugAAyzXHdNjs3zuz\
5U1pPPXdmQZ4aRWgqyFF9ZBk1z6HNPBYo7F62gSmMtOPd+\
fXCe38pzgNIFJdWfZLsBe5t6MwBl8l74ImH54zRyX+\
V6XbLIS1zQj1777WNnp0ehy7rvtgCjoqg2BXm+NND+MniT2KnuzZYoD15++\
arwYMpRFQUkOvOPM79MW4VjsbdndeqaS2PKDtVp/\
bhXLwSzj25RBsau9G7OcjYjEm45OtDXljaT0WHLRlqfUtLo31npzt+/\
7zQ7UMmYXsfxr5Qggdue178XUOJxSSY4gI3MNgepPeJ3tCg1U7IIIARg614wZhNtqjhSbmFLM+\
7QVdJPkDRxd3aLlYWGr20PvYfxnf0zkIrNLVb6w+pF6gK9gYCKV+oRU6Co12XAXB/\
9P4FSqXweWKPD5v6okx3m7zFL5Vl57bTTKAnvVeyNAnYdhT7K44ej5iOs5pW/jxDMpA/\
kZYy1T9OtUZ1dOCNzn0DEJJy1vWfV43HjwQq/vTZWnHOImnvoNsCssCpsH9STBzBhbEy24o5J+\
Zn7GDnAIjgqNyIH3teDnPCmNrLV+fVEYhE5Dv78/76YSCrbVq814Fnhnfu2XeKccH/\
V9SoqmFvFUKli8yWRnpvvocTS7wa7Hnqmd7VZKATGvsBn5h58u8zxImB6Zn3ezqRttymJuPk5jJxaC\
pGMpZpo1+40G0m8xO1d2IlaRrG65f77cC3s7wmpW1P3ViNWA9USGFPE9toLFqSGvVHadU9jVnVaFWW\
75VZK6f8gtEA9Ap7KtJvY151Eb7ko6in5/pEvszmEpCZ4SDdMzElGbAXiDuXvBaPPixTXDctQQXLq+\
dA05mopzozNGvrMGgXIlWI+Bp9eHx12fRJ03wUu07RNH7nmXSaqCQqWyUXfVdQ0V1Vvk9oMU/\
1IcQg9vnkXrb5VBeui7wahmLYkFTt2zrsEx0/\
tewXXNaEip6BzdIQvL4miNO3UWbem3e9tkfB1tAEaSvulOvcec8VeLSOYUVYjZ1qOPpZ7suXg+\
lIo5W2K/8gQOoWfv6T39Zd8LurRhwU0o1c8J30YYbQ/+Xdkv4/aFwYWGFmkPo79MwrX6geLJb/\
t91RFUYRZ81seeQfSD5RzK/\
8YQHY9iSIt7yuY6x63gyIvWcIHuI4Dwvjcs7cAWYDytQn7Qunzu2FKaBg3mflJOQDeghl7mk6JoWPU\
lManMWZDUo6Ws8YTB+qVJKrzNDph+VGeEmcIqAOezg/1pctDWyXAy6+HyR4qOrueq2S/\
oEegf6fuRJNwEK8WgupViqJgbyR7SdtExYfOPC+\
xw5HSsC854SrwZxOIcxtXYlr7TP0sbImfzrG7R4+XMslqZ3BIpF68qoTE5X6OID+\
X9vUYVAJfmOEYrV168lkPItnNWux2BZPZEDv0q/dipYftG6MJBGZLEQhFPYx3nL+\
WVIAJ08zRsmbTfj46WtlLhfDGbnIhOSA91qXdznZY0FWobYs/HjfQTR+\
6JLlw3e5shel2BqWiSXp6DSeg524CdtpyzqHmnyvK9oMJq0fsK1w1oToczmU7R8URFQuQp9n1W5fk6\
WNGcQ+pGm6iNF0dzoQzqTVLkPTAKAdMsJAHHC+ULkVfxOpA9HsOUQWej+\
d54l9H3okfZTWEP478UTwNxTuTk3+dmKzXT5f5YL3o+20ly/DtBgrETAxNSQ+\
jQrE1InogqKfC9q6BCf8YgxGgybnaX2ww3Hdh28Thhfpvbs+PJ3rvhHN2MuacJnlU/\
lm1LQVNf6S536Cfvn9tr6rW5x2hCFihLU7UGR3Mdt53PizYkHR3HH70CCEiEbNcRIan2Sf5RnYuXa0\
IaXDJl118CEBM903twvxrYyfoc9m1r963uL1a9dDi6pvc7ZZvXUDFThFs7rkBKrtxL9TM25B742a8d\
3RopcRKUMy8rJ5Kd+\
sjy5WdF3ONFtCzz9P8nBWgVAYvJ8ft2YMzMWDNelcWiiHUvzIlWjjUgF030RYMYtPm/\
QnAajbwzRnurL/8t7euKCo11iyla5AKYU7XdbH64IXVGQ3M5+e5rLXZXMao6ZAgUSF4nnUywSNWj3+\
AdLVReMAxpRE6Zf+ucH8YSNZGui0VjD6GMfThV5/LXtpQFczE3sxSaSgJx/\
2vWpGvKt2eHQjmth5lY9iO7DtgjaWOI9rH1U+/wLStodzoAdzd/2QFxf2mDnkUrnL/Ms+\
4SsmqaVwf3hz44wIMQWzhHjhOavXeXYNoLXF2Q/\
1wMT5ugjR46NEHDWxCjHy2iGghej05s15rONGehXoxy7AaJctMc29+do9J6xOB51SOTGjnHgUy+\
d5Un5io+ulU8e0W8ILPyfood5pZKn/\
wNyPN9kl03OHVXHhDd0HaWAykSoSsBgcyvAX7TKn6kZ1W2irJQBjZCdWr/\
1Ce6MtBX4xp5SDHnM3McQoIGqaaobvXBowHXOnDMPvR7/9ctGgma9r3iLR5OSwmHTFQIz2V/\
3qWk9K47nUISEP+KPpST0QN+86d3f/n525/u/qVcRu9+/utP776/+/Dt999+8/P7H394c63//\
hWLXXAn2vZ7CrbPVSi+ftCuml1njBTeJGhAVmynCOvz59WmFIAdu15GI2Hpf+nBz/\
nLJY8pHAvNkprOa7NwX9tnP3P7lPlopKRS7zObdVtFqavpqSmHRavyALwqP1EJuutgyltZ7s75nL6t\
uNnaMHD1a2/u/mC4gEcHknzjk7zyJIZHlRU/gJ8NZiLPhDMxZqxGcVSCE0X0Du+\
isnvjrR1S9Mp48Mxvk8p4pUo0rhuMRAQFAhHaxjIquG+zoswfy4+gQnDTTjLB+\
OwMnq9JW4rvF3NjEjnka8u9eWWvnjCJHZopE7dvCKN/ffdNd0MnNO1+b/HMOHyirdl4qR/\
cOX0i8HkdKCIC+\
P61a6HwSqVAdyXENTtuQ0ycf0i2l5AqJDes66MPq26FIiBAjiHIlLiXzvRrHds7sFTSFEeqIo8IseA\
1LGidWKtmctaLCwayf6sOi2cPiGmsDOt2BuO8F+ENxv9XfN1/\
uXOTcktfOwwtQKBSUunklQYBCy4XgStPts7D5vWJQnPpkagIYseiYR+Jm3vn9Pee/V93ld814r5+\
0s5ESn1KAdV223CmWuOKbHsggTQDKlXEle2NkC6InTpbyG/wENJvqypzVH3MCEk2IKf35oVabG2/\
7jMovxBvIZcgp3RZreFstendlftRidQdhENXcI+\
WVrTWu7427xf5EefgWOEMPDup6xdOKhnTQK2KW9q5tt53r+rmfqlDlr7k5DBGmu9+\
5Mo2Csn5Ee2v6FiyDr7KfXrMa9K4yDrypwZRPwOfNJo3dVbdY2BV+\
OtbJEC3yd5sbLFyYdIyG17lKAteZatLbvcvNXBVyjgzsQBbVG++tDvcxZj6v/\
dxQdRfqZ9EF6mdiBu32H/U53n/nnbdEciIdswqL7MRijejE/on+4scrb/jvn8w/zSrzSinCw/\
6pMZDtUV6OizEcUBFdRr3L2UnWZqCFTzYY6wpTB1zSLwSpFNat/\
TVAJEdqCUuR6N0EZTimSxn0G0O87BjhmRBMR5cc4znX6NnGECWU+9/TpEDeQ5WVietmH4/\
EjFewcqKxUiLLjVe/hZu8mZ/\
2Tr1o8eR9TYMiJgUXrPlYLTL60pKZkuvhTzUHsFftdas6olYsGtciA29KsRnoEzD3ZiozPZRl7om9i\
wz2+8fVlmlzdrglO9k195BzTBxnMWHvqvyVSi2jydSQdhqKaOzQhjP7qVlA2JZt+\
GRksbRpGjJERfbiWFYovEyrZvix9XLK4GR5iDfk25i+61oJMqAcb1g2soJqyj1iKNDz/\
KMzgYTKjpYTqaKNhLcbPFrUwmKY3GUyudKdLf1nFhJmnYb6WQRQZvWNiYNqVhn/\
HtWJh1ZsVSxOLgapZkW8qaTaSJnTOzq5fZFHikKOVeFVHf9eLKij28dArsP4MIGvf7QTn2ARJoj2rN\
ThZ22PBlI2wz9FgkXttIzLdh3AiufQHwTW8O5dOZcC56vdFznfvgn87VoBDubmrlAc8E0tXIUP5lUO\
RT30FR9XF7pCOV49REmbtwQLmqgb7jmVTC23sgWpvMT+\
cL1S7OkMqmH6lmhL7ffNjJ1fHHzOJU20XXXi2322mDrGztHttg+MT26U5/11knBZ07ZE+\
4X2MPbiWbyEZy7cyWxUfnR4w8ReLUG7No9pIJMqJGoe2J0YEkSC59fjDZhxZhShKNOKkksDpgQU7W3\
0X7q5luEYchkoiGW0q3bqJTpDrFOleYWSV3UZT+Xr89CsrbR9Y1bvbzoo3wmX/TqUFkfKwSbGg+F/\
m10m16OCHtuf7b6ldfrz6yZ097UPmUp7dZFNf005e+\
r7kKaXTZdKoP3FmS88kKrRXf5RjrVRMxR0mq7rXQv9lOUUCbdqg3z0DfObhIIFCcMpt2Vv6wSYoS3V\
LQBaaMubLm7jUqPVRitzDMckPAjRM8ELk2e5wfwKyx1WzBEvMSVA9PN6fok2vRofgcgY9EG91BTJyj\
3kF00W7UBnS8EpjXyZT6JbvhTuVvmzw7u9Upb/dOyCGWS1y/\
KkLubzqMdXlkF1r5wttKdaQx9Vrzd75c+xU3/JZVQAwCJxNqiyVwt6KtUprlhiW/hPKbU4scUvo/\
ouqV8OLcFtBTX8By1QlTtT+fEGsjm8+NvK1jdNSAKULf45KgByhJr2+oS+rSqAJFnN9iRxlTr9ev+\
tQj8ZvzNHEZS0zXKpMjYVrqbqrJrPtG69xtg60pA6hazFwpYOUeeOZ8kJ1AG8I9LPzWhzVIQOZcdyc\
DrSNpykofHY0/\
J1rOJS5Vb5YAI1wg5a2od3Zh379iBn76mePXSQOIM493y9Pr4IxiduwfmSuj417yMvyjjhfq67sSIW\
6sG1VFV0Wdh50mxDGJr+\
Avhm7yrBtRPPGKJMKa7LoEsusamglPEdN3KeZPyBi2FZfk3CDqDmLBJ7nXMRJnDKK+\
PCbivreE9MnOoIo+Qsuinox5uDdOIDiMl/pU/\
YwMxEmdWg7glgN5igBY71ZCFJ7ADlBSrmR6zpMjOvLn7sOvTeOS7ITt97JSfWtU/\
lKh2e1V0b66RSN4y3XYoh2k49kTsMVn1Z5RjqRKHGQCIeSCe5xGE/\
pIYjL9mWBmzSpKv2FEre36jpj8+15y5yC1byQRYsf6XftoMSpbv+qny50XtSiVgnet+v7+\
39ofGN2zfw6pjc7OLHSrkGNMwtIlh0+jnbahbdPVzVFIOuPUCR6+\
MiVQBGC0lGOnw44EPbDSrcmGdxSaThWWdNYudhsd+DArB6IvBd0Mc2Iej59yvqc8oPpL7ff9o5edo+\
3E3I8aWxsM2m5ldBjzEMTQO7Hkco/GM8+M5ij+\
lIRG2fHaoZahzlRCxv67nwSft8bf2MYtEFkxuiUgt+\
E2CUgK5nklKleqKQQMjYmczijxiezXRIitm8S6gbXfqiXOLjMHwilv3j1ayIBNOSviQfq3bP9wf7HT\
hJS38fKtKJlN1QaqU7lSU/\
coxA70hQQmjNZUbdrn8Sv9CB0qhjAgPqznYDQfPqHtCHksCv6FP0GllJrPP0KBvzNAANVX+\
qnwKvJP78E7Y1ZacjxuF2LmNuIQM3/d9k1IHyIEZxt7Ii85+9n7DGgJ2mL29+aO/\
uWIrUXrCFS3TalnSYXVFHm41i674h4fKNiWr7GTc4pgY9+\
MjE0hsSWd23lAZ4JrzJD2dBDzhd81GSXBu22C/LXPUT7+1KasmAYlpVlTTN9+mS78+\
JNUpFqkNnTxypym1dit81IG9kPEQe2cNsn0soYnnIP87EY09Ic4tg5t3w+\
lrb7yJPsR47canNqnybhBLXfkp4Nk2U9lVx4EVUpUQRzUZitSHt1KEaKvaQh+\
b960nnz3pr4xCWWZTIdU2cwe+\
BlCdQyKEKXl7V8Ifbh3vPD6yKGDvK7RjT5YbJi7KiYFbDNX0y5Hl1Qf234qiq2YCwulfACqODYoU7r\
k+wFH4f926odRI4g7DGAIKZlAZZ8FylUEUr8cgiwSbeeUR3xgO7KOXUCRcQzPj++\
5UkzdJade6GA5yrJ0yiv35lmsjq5XZsXRS+ATHn+\
DWj0KmpxzbXIL57xUXVFPI2PvMUO6ZLDVsi4Bat4P2cMS8SI3rVTcJwES+\
MlgRgrYSXoHRjixiIu8lp85J6GbKxCqoxaa9CXI4oL//ArmiDn5ABp/YpJRL4OG+d/\
lSkidaKKyaxrqsErpzbWiH0Sps2/\
vy95e3DKH2J2MGOZ27qbjbHaIlthy7pBaTQvad8RL5nL0gijs2kFfoyLo4TB/rZ+\
mlFZe0bHXjytnR+2eTZAr7uQ3Pg4djcJ/LIdw4N8rcpxZ9f03s1DitCKyw8uzdfYP6/\
9wHxVEimbnCFjHzt1eAAtOWqQHhp6X6N0yrEJwSIQ6wkJPSYChr57s5YcrZAvUsbeXHy6AEdLmQAzS\
u8q7h2O/vgx939Hrrse3y+mY02msxnoDLpAP/+WT9CCKLBmSLC0ufj8x/697LSbD4+\
8ETaQ3QyWmVHDR5HFNqMoljXh8mr/csRQaHoyflVP2Ckh/3lIfbrjmXlTWHY235RDMqviKI+\
2ijFHzNatPlkqytgJ0lVi3hxCL4s3aVISVqw6VY0pBLahQ5oS4NUKgyyrYABpnrYtjcMR5OChbON/\
4q1QRCxNB8jQrWJJUPG5v36kvmctFV9iUZX3S/7bvDOsHIuoFd4ibig7ODU4gsfJVcJv+\
vnP2H6TKc49DW84y/lX2+o7qIrJSKJOPZgBJn9EMv8Fm+\
h27YsK9gH715j6idI0JTY2Qz5ghOpjE2mNrQH8owdcF3Udhpexnnw1husPu5bJIj+\
iAuYAvh8Yv0pABC3pTSGR2sBSWjOi9FkWCzaFMjZ+\
l0mU5gn7gcXn2kd0Fvh1m5qM7YuRGW4ItvedmjFYOJI/8oVUNnffoec22hmG36fq6/\
tByhmgC97xzfs1qgE40ru1U8KtY9pnOUb5jsS3ldSogHf1h15c3QGdDvKTAF18wCq1qiEprnqjG4Ko\
WQV+O5wfa2rBN8L36O/f6gTd+N7OUIaSHCONI7iPi44S8mkSeuW473pUpgdto1gIeX5Ta4o6+\
Z0ZJz2X09sKUqAiXAupXL28EiRMJVMvI0nYvW3pDIqJFii/I9GaPJ2RA0Nk9GiE2QzqFRHS1+\
o7PY18sUhcik2JikOcfQTIpeTbdTrM5zf5AoACKRnFTBpwOysqqbs8maw/NvYMDnoMU/MEPPG9Kb/\
jbjFB7sWOm9NTky5n2jWtFgtCz95plAd9GSwx/\
0Fk2KGb7XjWitubCWTl6kgrwXAhpTTmyQHr9SIJ9NYRJqccKWdwEZ0Tw5zUQja3+5RrK5mpkKJOn+\
qR4MQzOvUJajza/IgJY4g1xVjQ40v/32/\
n7BKLJodcM7OVgoGBHA9Vjs6dE2AkKlx0mGPESN3tbKfLkrTsaqN+la3hilyXxGpbeWRRbcKsP+\
4zMSHl48f2R/5qmcy/P00nR0trcYbzt37DbWEtkf63jKrXOMt+\
Ati2GJDNg2odqhu235qbfwxG6buxulX/\
W79CbzpgI2s6nAUrOFYoH009Iin61OoNivOim3a5Cdjnzn1dK1MzwOx7JRB/YksDBsJ28+\
jVKLtLrJ+we2/tqTowvGM+mVgwvHnoOfcpvoXMzz0Q8UkzDH7ar1Fp2zPBoNhJ4d3APtHZnlp/\
lGIZe6NL7Q5/\
N4pF5MLQldV9zWL7lI53tCDzmBHJBJOj0Qt1DFsCdHtvOynlIC3cn1SKanzgEnJCGDXvC8CeFRiNL0\
R78ARP3ZBKqZq8mqIb1SZQd1AODBgGnNS7MmVSn54UQNtYSNN6zujQZdVtNso9+\
JMC4aXDKuhiP18Ev88iEKhfoDerksYTNnuAazIA+\
k9RH7ZDLwQyIGhn3vobXOxZ4cm64SDKCQoN5GJ1HNWtx6q2HiIvXGfbNCX0xvfRgvq9vlT0wCpzUmg\
bY9EalfTR1+\
ItQNKJkCDYHbpsFUMR2D2Y6iJiRtb964aXiQlzSXGTPbSWfsFX3jQEeKRkqMMGK9ZZhpDDGEjIWoYk\
vMfa54mlvnBS+pA3NzvtgVvEhl4VQCxr9yhGv9p1sfxlPEgAlWYu+\
3dJXxelBbHocOBcGAPPi1T37jcDqsswBJurc2S/pSXaFNL7MZDIW5VAPNvb/\
djotFeVRbql6bqsSUQT/\
fkp0KnYfzElq89F4W7Cde3YJlwCVGjgJGwrOLOSk3K4L3I3KZc4akls8acbyMPBxPxOrO/\
JEk2OUaJn024+yor4hGFdU8GX5EqP27WflztbE+INtktPKJ2QP5z1XOM7hbODqsxrbOLV/\
v7QIPi4lDPPR3M5iqfvNea5UoZNcw9qx6DO7uUx9srvRw7u+\
1Kju0hAwn37xWg8O0GpgJtxW1DvBce9a6jCbwvsXvgT9+RcvlWSF3Vg1FahH1vWp8Z7AST/fK+/D+\
NqMx75JPxesVPrJSQBZJgMXL/IPKGPEAplJLcs4QMHarSRWwnRWYBHZ6ZtqtCuChn+\
Bj37w8KOf3li405gaWI1VWtmJNHMwyNb9jOTjtdyWPoOxqhZ5c/gokt5CHNhwFBlNf/\
zoP1tjWHXvCXcN3n7ykWA9tY7kk3VZZIcocZg2meFDAXZn4myyNg7dX33InQgHQuvEPkX3sn+\
DsvWi5vroz5CbWz+hMNo6BTlAsk3r6CHhsiWsr3joME+\
cM9CBHzRpsjn1cvlgkM628SRIw0d7QlvjZLdfpt//3r23z3/tjNx+\
kprpoCuINyojkVnwzSIdKPTPCiEevDwpBljnZeZXKMrj9L6saypiua7qyDZU3L3qKRFhmd9zrPrsfA\
PfSNSpv1r7wEmxad3SiNUM2KmJ48n115flVaBWV1MVx8zyya5GdunNqfgk/\
DPtFtoh4HNjvcsubo84cS+dkBM/jRD/\
3mSpqaKm4bohEB4fI5VcSbsy8v4ueOImdvkIMzDq8feUaRKRKPIsPcujU4srmVU3m5Sgfzw5P7e8WA\
rFHzsb4pjysjS7PXEKUGqhhlVZoOqsHGwbvahe8ufujN86u6iFuAQberyZY2SSra/\
iLPupEw5RQ35EXsy1WlunJjcM0lsigchllmW6XZ8F3uDC+\
LOpaxbAuUyyGAJjC9ZpBOSEzsSQnspewPWZXsUXBVHUpJhWU5qfLtKdUtlGT1cRdx9J4Bc/ae7CG+\
PoKGP6UvHuAbPhlxndD7sjkdmWnzCXevwhNeCzmQaGugcJh7/cgTwx4yOniLGmiVfS/\
PKvX3PrOP6buHHStGQ2RZI/MQeSxWk+XM4B8m4/3D6gST9Q+oFg2AQyQ/\
SA0SlVaxI58BfMSylawzXp1ZbCNqzxbHad79ApyUC2lrw5yB1FsdcOp5RX9UKATKLvgLRfRiNyKWzV\
OGRNon5+GdU+Unr0M8lfrXisQUdkErwNNEGJ7JNGxChHP3XS/pW/k1/\
AnTjM3lbUFHRuAYg85MQ4Cl922IyzYv1L2nWij/JaA0/gMBvTKiLS7PCIFBZUD5m0YGxHW8/\
OObfN25NWctRLtHe7bpW1CBmn/8mh467lifeQhzD2zrhhPz4P6NITs1OKE8dfjuWUbHF2+\
yuMROFYi5+K+mw6G9XS+EOzbg4NLvRvQfycAhdv+oU+EdkRye6yfYIftKXTleJu+\
UJrY1zQAUtzmIXZhItZjl0q6u3E0T7L4xa0JwWq/jd0x78jfy8HZ7RViq/\
YRGbQYzWw3E00OmGnfiVRFbjA9aJa1guIaHqM82GJccTV4HcopK2ialcBaSpZIjjtESu5SvnrQuHzX\
TMNTWbOX27uHqX/1tUnGwByQNWXu3dIF7sy2yGTmRdyY5RF/\
vJTD1q1qhdjk57bR5kLkrLaCsUhaV7nLB6b8B4eUpADK1fNolQBqJl0OnSSwDYEBZhO1bZeFGTazk1\
am0bojiwZF5dE6EreeOxLdGPaMne/\
jqAQBbjRNg43LsjtH8vg2SxLqk2lpOAUMru2uAvwFB6WScSErIabz7mPTsnAqhtfLQuI7Nns2mypem\
YQPZUZ+gpAlbsk5mUgrw6LWMKgGh1vPyD0JnuM4/ZVsnYUMs/ywFAuFZ5JzW+Kf/\
daCq0bbAsGo8kcja1nl80hsAJVSfH+c369qUC2Z+HMfVE3b/\
mwSBm31BT00k9ShDFWjLNRDYJyZtEY8BegOLthiHB7tZG6s8c13CHgUX4j/MzBUibMOUFdJ1P+\
kOCmftnDWbil8Z5nxtQzETZAAt5gf8pqgtXvJtV1f6eZODtmh3xfvHFyhU2V/\
dPesGa8nF69HTK8jEOAOZ4ril0gH0CuYqPHY1G5I4FTVWpKM4bbU2YO1EB9I+/\
rY8AYqHOYxMXKnL0bEufKuhp78Fn1IkwNJNT7Et7KgNij89i81L4IJv7oeCIVz+\
mKdRh7W8RBXBhwd1Q1QRPXlSn8iFvatViqnLXESA1TvUDbUJ4jHuapNYHGlz7O6U5u3Mm00euBEI19\
Y888x0dKmeO88jGfKZvNsGdKkHi/\
b1rwczGJdZmIylr1alTDs5s85PkRokWjkd5ZouO1t4Ef3nWHhXctO7fAWyytN1s1iidGrOnhqjyASs\
/K/LJdaCIeBPcpuPTlyPGbXkaEjXS/\
NAWzqxTdaffwE0rsdphqELH0YvJXd3YfZQVHQrSufOjCQoh8WvzLXw3ygzxxhx3/\
2Z6iJR0fu87X9BcUy0PS/LJrcIv/ZWZXm5atgJOuXzCZ2Tr3IhAQFq6k5K1GjqzuRjAUVivuCX8j/\
eaZ7j7Bv39MQ4663mOwe/rjBzi/rnt0ctfi1YT42tLTGZ/NdrcT/ZQIbBq++\
HB0gCFqyhDRkPJ4RBzvrmluvcWWEIS2+y358NBvMUkebarlOrp4vD8oRVkZfS3HOkbws3/zYv9zbC/\
p7bEBAMqkduh19OhYuSDhQMfbt/T0FdWujM36dV3S0c1xzxSy7m8XkYD4n4PczpGvff//9Xz/8/\
NM7S3p9uPvxu7uf//Tt3TvkwOy/\
brBivTfqMVCPKwdqZDx7iEMgMdnYmOvUVIek83uHTT4SKDK7pGdIkJoj/\
jw6r5117ez3F3P31G9gTfmW+\
vAsbCWReB7BRBAUnMgYSe6ihkez6eBGK6OFvFP3cF7Ff1Z9g3Bgy78Cp38Modw9B6He37sK6bWPMdg\
CgW+xFFKiqfsIWu0EkC1pGrz5z0GbqF0Iq8lWh0pWAw5gqMn3tz4cF1vn+\
nBxFSM0dfNvk2ZRg6d1DYrqyXtqp9Mp4m5jO3xDFvYpNCVDpOEBU4Lp3BvbxmyblCRyv44r5mYDBW9\
W5YTv7yO8VbKm+\
tuTuZzHvs2xHMqZ7SPLZXPZyf9kV0qNXFp8rbj5qkxC5KeR39sLKYEnRvEzGJobBxMx4PW8MePXiXU\
8HGBla2KXee7bhmxI6B2TDSmHg7x6bfFLzpI7G925afpLeWQcIu/Axm5F6dBGc2bHkCNyY90gM+/\
1PdvbztbkZY2XxtNCb9ux+\
UJ7GF4jc0GpRvdQDJXw1f2DuHcJlFzXxQHxEWF5FkwcoaLszFu2XpdpvvRxHYWmlj2OoNuNy3wnHip\
2FQYZVRCBKtCndN4VQjHp19NIaiAJkbS8cN+qMnm+upRUXfO+qGImkQKSJzNs+vTVJqYwzdAPxU/\
83+POKAYmBfw7RAbkkX/\
sDn192A5tmkbO362r8Ev89XJ0AoYSg8y7l6zuJqado7ihN6qwWafcVq5AOcvH4eRZhrw09cXs/+\
2iT0jqqVHrAVRAvnit3SHFQWdPy15JbODEilul1nNVQAdrfHYxeb20F+ynjJaX/2/\
lmNVQbC601GYceu2IFbxI9bvd3260pytOyggvnJMYR4R9Xxt0v5D3V1jSeiTQT+\
LQFgFR6ZuEjgca4VAxSYEdAv57ZGEM4V1m5c3dj5ZpM0mmlV8qT31QLpG4wjWUzNA49ben5+\
wOdY0UNxL74hF2SBnLJw5BrrUE6Um5cTk2gqnRoBBZV6KXLugkb8m97K+ZauVGCYS1rAFKlfY/\
K7hP+X4b5kudTgc4JUUpYlCME5MLtu+9jUoXSC9ybvf+FMJhg2Q+zcSHOI7HgCKX6+\
0yHe1uQQZnq2r6jeP+l+Kby5MVtLV9JU0JXYK6dvZv35Tj99GqOH/WMoYRW8h5mrER/\
JmnLu4mhgM2TeGkwejOcJJqptbxQnYUL/uPLwKHI/ljjSlQYJAmIOHs0fzouHTVg0/\
lQVZyRztCdR2RjSN4HA+IJkHwgn+jK0A9B/0vxbuy4IsqaXd/v0CLOiW+\
InVsjzRgTvFxwMgsH5NdapXPzTemZXS601dc84CuMOiFaPTsKNd11hY6D6fLPpE7ft8/\
XsrvjXPnYp7+JbZgnImdesiAoNEyPlapUs1UL+WwmgObiK0fuhwdSzPRx+\
hBljzz7gNVksq3aWLdJQ5ZgTRtKHdC59wjOU5uWLEBNE9rhGIOnCrOm1iQQje+\
kQtIbVTFrwqsiX6Hp89wINsLeBSwl06jdW1kurzKm6DsrAXxykn2+jxXzjY4BxL5+PPweOgyWMkH+\
vOuD5Voe59y2kIW6zOcvJl5yYZPSt9t7e4XWqWS7T6HVm2Tt/\
TY2UJ29gRbT8eDHSVXByORQFn0C1PZX64WrUBsR61wkhB8DbhnbUD+9O34YNmgYd75/\
Ri3Zb0Uo3bFH/nU1chFvuc2skeefN6J8KzgOC1CC24BgtN6NnnaYncO3vnJj8cupRODj6wq/\
CYKbEZxoc3cgKyuP9ksJiHZvPKOj/fTxYE/kDi0fy9HShyY/mp6n1ADyK/FTPGhF0/\
lyTbc3kkgVrcgiPPwz175K8/q6aZ3gH4LlvUXtXpf4i2RfIq4E4TUxB3qh4nNZ4q50pmq54n/\
y2fXbgxoRgZLVhv2kXexEqyYVW+xvj5wDBn0ItoJS6u9seFstIkwMnOy+25LeJutOZfLYEH6wOw+\
VDwMVLxxe1MwVB0fpPrOTXnM5MzgDITm8N58hEi8Q7TDus7Mi3Vrqp8GOx6zbdtVleyp3X9q5z6Tvq\
+sqgQJZWj5mPttb3Oae25fWQ7ybtCJIUmOLivbgd6HXGLse4Mq7uoOSqONvlUSGtN7OjteSUESt3wz\
A9VDzBbTszxKxbfI/mze7VDgnLNjI/7nOZPVJnSZ2pJDN0VTVv3peo/\
editvcWshAs4jTJnJOMo2UiTsJgt+QDVZJumqeFd1owLhbA3u5ikez772o+euT+\
ihm4qPsEcfiO2Zl0+ePZ/xJG16xbVtlGdMVLwXCZSgezOYoF5UWTboijYXk0XmpFL9I+\
D25Tq9vwcfyuwa9fE98i6aaww+EtmCmg9EuGn3b3+\
q3T5Qp80IbwOisbZEZlMsF64qOiH13tMdBJAb+\
yiI48BAkeCOxUoi3g9ovpHF5Y4EJoWxaid3yn0poTZif3Z302ULQSrLddJYv3XW45sDUflNQ3mr+\
1L4JiBRZ9BZ8lkrNf6nMcqdNrlHZob9MATNGNbDVLWGYx2vF+9MtJwn5U8MbImy7nxgoDt1qZh5+\
KW880s3bYPrPj5ku+\
cU6trmQ8lLKpPxUqeaRp0t8RHnra2esOvB7RBymIMZKOOmFPQeTQwVc04iKceMGIK2D2Nxj5ed44tU\
TgE2/uJYIX4SDXBnIrRoXky/5QG3ErtMt5Z+\
rAKNmpVUWTmLMD4MZOVhrUybyt3DxAsbRJqCaiggVISYcjRQI7UwAiAMRASQ7Q2/\
ZPkmaHXLWMvHAJMjNrbZV9oI720hIVBffzXbAb/hqgvPx5fQ0/QbzzQWNzxvFXjtx7S22DY2S+\
zvsKT1tNnV21dK7B7vAmNU9W8mYg6/AsZjpGBMXCI3TOs8ftK60v759dXNCwsK5dHXbkpPz/\
O24EVnQZel/kDxF+R2lHJTY3ujpQica8DkVcGxT/0WhH1BMWIXom/PfbcuE/\
L2twbr2PTOT9dghCJ5tU6/N7JTN7XNRWetu5F7aR+l2IfiW4j20eGgyzJ7nPG1NizSV2Oi9uA1qF3+\
PNBswRToJ/OXUa/qms6nxRizvGrNia7Mnv+qra6/C6eNi9kYm2zZDPZlF+pbBLWUnqvVHja8BJE/\
ufDHKCq773tZck8dW+/R0XS+peom+5QbNrd5i/MnL73wY15Z+PGGnof9w/XGWrX+\
F9OBNhGeqm09nChhJR9LLhMtxw133ol6HJjVff4V49nukLZZHhmKFCs+\
COSR0ga3zIizO8aSuynB4cwiJ4SIMg2YmjhTDmL9kpzF3A1K9yPEX7K/m1TqfaTiY9+\
y2j4c1Xroamf4qaZqxyCS8DpTBGMF1lw0JvqNH/\
YXpKTWIC6YhLo3a1GOyo3momHynHkJmC6k6rPTPzueb5l+SQmsttzf+lHuaDoPBP3ArEtptHGQ+\
yDaxaEy5VrflYuhXBXItll1Eq/prfyrX0H5ArIkv67KLD+1ShIRHHvGGy80bl+\
8QQLBwMX8f7dXwnh7EDSN6+KWDLMzGDwg/\
xXmQtvgBI1p70K2mzywXexqXpNF3hWlZ0BAvaWpLVUY47FDSnE518MvL2Bcc29Bum/\
Umf3HBZK7UW2VT3lFOb2v9Q0vbiRNIwMTzo3I0SsZnK4p8yAKHizZ4FwfsRK5PKP60GXdp0gM8tnpv\
3Gepn6rxnpDM6PyszeUz3z3xc/T8DDuh8uhDMoYXue++eTl8KVIr9kfUi7iM3Oym94hkraHAu/\
EBX8bwoe7cugMEI6956FROR35aKgvjWnPdoSMefDzl/ONt/JPBeVbyjzt0Cp3zxNtF3Bte+NF/\
WAA55ir+ri70d/mqVMP4/\
qCBWQ96EXlUJaKaxo3v29FnUWVySP7RpW0maNzbLQQjxXl9jhVj58cu9wGJAXmoXpzSyjmfURmrJAZ\
h4VUfytUg64rIzJNAYYKMk30EEERwCYyske83rDjG/4qbcGUDDsZQDq5+CnbhlDHirvzZSrWqq/\
SnqygFW8jr+KzcH5yU6Zu6j3HJrzI6tfNeFrrNOcqq4yTd+X1J7R4EUxhB80Z+\
vJLxjTWrY5DjpmiWaGJ15ZIIBJKxuD6cReHgbA9ZVFV20DA08uSbZ8j3EhTxBGOgztgVXGiwXJQpQb\
YsSQWP6lKnDM3dmTIXq8aZjdIuQRQ1lILSygX7uMUeYU1mxfm7P1dd1A/xXPn/\
fTwrLbj5jwNx9tSOsaL3BfniK/qHaxrg4gk6JQnXlDBcXWMKDUwU5lIW7DVIpt4mQwEgE1Z/\
ssA6CZtZ7f990Y59DvzsUDjMfTPOCu/\
5RRvjfrBGQ10QESbZw0Vkb556gmOtmjmpcQtEig2x81Zj41KeOeknJ1e/\
EoDiOtVjPT9cwfqu4C8BZOXCPeGxyPgvACNg5KNwrnFvg0V/tj/\
sunqej8ao6Ad1yd76sssylnYkOISNE4pDBdY6Fzp+QiN4U1Zp4ebLAMNV6NnZ/OOwy5ecKg4+\
els4JD9S1TsHIm8oPXB9k68K55gDSQVkMyR3tYKamEQhgrAsTb+op2zkXPdFWi3c+\
Y2iFOG3gsXxtkO+8sTOo+6J7Kek/7jeoMPD1Lf6UiEF0HKSgNRwsGUR6+\
zshQV43COaLXMTDUhqRNKDfRgt9ugaN9kN3BouoZ//AFwyfc//PztT9/89OOHD+9/+KOhJt//8If3/\
/H+D3999/2HNw51ZFuOqwFFF8N2ADcp2jXfL3V/\
1HDF0BceFFJ2jIEQRKC5dlBXUUjOrJ8GtYWeCaJMpgqDETbOCCHUDgsG0GEy72V9LUFUBn/\
oTrsydtttUap+cA48/WLZ2DmfBJMWjQdl0fbeutlkI4Lzbfkr7cjD/\
jfVDdd1UF3DGGcuUxRiqv5LnE0Jy6nibXt3lSETz2g0NLM3Xx7tDNOdenfcTmXz/\
B9Al5ICWk0iQzvtPCdGB8fr1+U/Y4fB7grbgXd3wZT1ZF3yL1GAf1/Lp8Z/\
Ng26asjcjI77YhdQMpKuJ0kpyrhsFfr1xLZ6bwiEbUgFyYRtJImNQbVOc9p7q+LeDNNih7y5+\
zMtg707knMg0CWW/zDINMDFrfKaro7TrnFwo5SJuVp/p9bRU2wkCfS/3Nc1aVJ3dV7+\
5CYH97H4iYykjmlFFqLOLeVbM6w4lSp5B15AgULdjBiwJ/efLI9x6P4+Tp7734daR/\
vaIlqZRMReRT+7+\
SOKZrPGh1QzpnUIHcq5F4D95tFHfkonBOXfOjtfWzZbzJ0H6UHeaC1R11bgt4spnNkFNqamEGfadJI\
fCz/CuvFwIZUXDrqKrszHctE7xNaonjb5CtI0AtGEMCzwaLqayuJbbNft04UAnClrCNXeXBtXL2x6j\
2StMiS+SPRofVpN2RF2awZtwVxznuDWP0JIgf3u6rfxCMS5Fxwh+NbLEMvABu/xzfc/\
fviW0LDoWYoDePsXKof63CtD4tlZGGcxLiyTxXZmYnXV0a0m7y8ulhQw807mx7Mbr+\
eeUAear747Vo5ue4Q0Ro31oGEENxnB+ygnzBIWdGPXm3CHTlBq5hFuToJhWEQtsmdJIiUyzM39cX/\
v8pedYLyg8A5VdTRfDHPxmGdzmSLK1OaqTvpAe5WmZqXGlZXrGK9y3ONFIu72zb6blRrz7S7qEbqX0\
e4ulDPDPqnVWs8cg0Hrpyv+CgZKxZDdy3oatsM/y+fY/m/xViPkDR2LC8/\
5c38WiVOKjOfkzXkCGiS4nG6IqZ8vW4f1PCcVHejPsaoocgNW91yxJATTzrWs9Rtv+SzLnViM/\
WjeNevB6pk9DpBNOwWWMNftX47uFPJoqdR9Y1uQyYztiFzQYEb0CRJdTZ+05lJtyRl90tuy/\
pHU67XyI9uG70LoSs0ZaeNzyq1vP3zuoNChNksqjN6wD2n+VdywxQHgJBxa713uj/\
hfW0ZlWc741J0G660vplrtqae+u3/oDsP+\
JdxEbeSgKrgbVG5lFjaqt96WrqTuRihIBOYuV117069I1lKGgP5Qq5GKDMkitSZ5SKM2HpmPHhwuIU\
8ykjN8utYwZWoiTUPDPyVYULOTHOj3YUwNzS7lgVzIzG5dtugtJjZNUnduklarNmtVvL/Lek//qt/\
PPdDDVQzLPLW4SwjVZBqremWD4+\
o0KDbSPNkFH2B52IB5Uzw72x7hDOBXOM8kEn74dIHKvKFrmMlYaRuUaNF/CfgDht+2h8zz5ywQ/\
jtyYSDE25xJ9VFsfrl39/foxjtZB4XgDnwVMg0b+/WwGew6/7uclvN4kbyuH9vxIdc2AzlV90G+\
0MP1wK2/BhUCnCWY0+Yo67ScK7/\
xOitGxswmsGfq5c4WlgY9OynCkQYxnogQX8aLNmyWROIou8ZmaXlgsm7s7eDs80xH76IyUDPGPYWoB\
IVSFeCc8FzchcOREpCCo3k5r+oVYc0Xirhl6/+\
RvAvUlawCuxVUQeG2gGT8ra4WS9bp1lJUb3aY3MHn8Rl4FGwugWTMp2bS8TCqEXGRWIyvSZEeqQaj1\
7CByWIr2WgwQMKLtCeubbz0Vr0QxQ2rnlBeY4YIP26/\
sg3E32NrbwY1BqWIIeCHiVdqZbv0uTA3nW9enmzvgEn/P+N+\
6i9nXB1z1iKuCYDY6OtuKpHYpM4KmfB9ZcCFZS/\
Du1TaDUxISjOLBiZPGjEzy5lxQxTMGWqEGyQwouvr3niDehcyNmqWaGMw+0ta3S3oj5v0Lh+\
udtxq48a74qSXVz5xuQLg7HGJY976l9SIAt8EAc6humWivooUyVlKgsxCvpDc/\
rVXrxHojQnzRn5m2gG1iwPxPKFAgY3/zRv7vw8na3bs97UZxuSan70tzXODgjgnTI/\
uhWz8pnK3seaXDQUut2cv5n61yMuWvfH9aLYcoLSyOVpnwAJ/Ki6J98KG2RvUAMmLvE+\
KPdAoyeEXCpR3SQQKCudgiwk81xF9EpjMZ1MQbIppx7+PSEqlGwDbxG+\
yxChTbwCJOSxg5fZCBHIAnWRThS8eIqOKQ1I/TB5hFe1WVQPNitblHFknLlV/\
I2sznPWluUfAOvfkQUTEVT5oYfVyeTJY55WrzEIU7HuLhYG6s5SN7/\
63joHfo3u3uRXsg768RnwJuCa82/XL7cIkgWEk4qbaOE4OlvT6+\
DiplA6PWcrKJGW1BRctjV3Cptvlzs33QN3FvnMdjfbSU9B4cXLCMAbyhmUsEPxYG5PcyexJrC8T+\
tuXuyf2CCAa7al39Pjik+kh7ppqCy72XVORm3vPa5D9/\
EhSyavkMUqZyFDWzJVhdNiaQJK3YFniMDx38Jvmj1EKTP7EVY2zSZT4GdMiC951FR8xMHmIsA5bxSQ\
uxlnaStcGVC4qxUIrFSFaXS56y8vMNHVT+NM7GRD/Zfm+r/PV3IpVBWG50ejjt0ADwJrayPY3RmZ/\
pVcSdqtbr0EjCJKtncWAIRdhM5Ka1oV2XleRXPMD+lt3oidcPU+peyaHIwG68q4c+\
KqyHXD1gLUyE3sAzdd+Xl4IYWr+++9/Hw/yNxJglnpW+24hQ5IycWFtrt8i2LZnYcv/7X+\
qeG7Vo2Be+QhcUOTBIa0X38PnzU+vGsr2bfCzJIcxrgsN/\
76eyLLh0fjcO9Ul63pucubhF3fMCPNAzW+\
sDX7JFkbrWHLkFQ39ySK2MyQXrUaOHC7TCfTLkXeuafh27ZDh5ioZUvxro4nK7FAerxhXTHK6qxFKu\
/s/3v30/tuf/9MBvdcRAZl1uluhdtNqwFxa1ktZJB7R18YTtO0NvJ56fNs+\
WeycX9dmp9AhPv7hL99+8/7bDxSOoims/rDV5CEus/ema9DwiwT5VmyFogNKbnVaMB9tAHO7/\
zfafYV4prTWhZrJOws1puvaYS1XA0i9sV9z8PVwhJeE9F/kHmqhgXAAj0sbaLpK8eu+\
hT9nzHY0nyJrxU6FW0mCZjfXL6Z7bb76iLceJCmvbn5ljY+\
MS6xj6jDwvjvOwFnU7LYFTo59UNDz1O2H7armk4Pze44AoDKMCBIx4PS6CtzoAlAqfTboNrRvRBfij\
WpujmGBbIXf6p9JbVZnRzcnKjZ/sBYy2qKup5qp6areo1UWKc+vhbn7wR3m1M5zAyiop/\
PQNuXbV7eR1WfNHqjpxbLyml07CT9O20WamZNF7DZi4TqvoIlob8P3pPlfxLkexoaOte/kF0TWlmL+\
w2Q2d/xos9CtJb9kD+BAy7v+UDyC/9ebILBuF/vKu7m7++\
PULUz8omXec5sikrZKNO5fHOPh1CFFdwPllsa0Q4vChhXpEhWxLfGgRUb17bitnDh302WfNKR3I12m\
dwDmFJeeMyAP4NBtwxsq7zj1xjFYz6gjzTkRcqCQh7BU3VldaQvu0rLKxaINLvdO1249WWmF5Ha23q\
zUfeW/tI/OFp4Ncau3VeUZH7s/jIYy2nSMKg17dG8KTFEwAiublfG7AauEwkZi2POWJmFWqnUt+\
9t4Vacq1KFg56p0BbDAAvSGXcYJpBHuLGOm2g40dNFGQPPRMbzpgnwj/bTv51/\
hjjpLYVM9ISQdttQR22XDGCA2MuvXbzpDJafuV5lIT9RrAqCFtAf7afDhgADVCmQjOfTsGU68po3Rb\
Sq4idmt6s+x1WoBTQkH17MDt15+s2wPuJ7KqOurS0zpgY0RbcuMLerp5TCWqf7HpUsEPTl1w+\
bHHJwAJ99sVW5EfIW/\
dI4azDN0pojGtXcSqIfkg6qHLl8UDPq5kOOzFNe8NnfHrf7QDXvcKshx2lYwZKUkBAy6XnMsUL82Z/\
BS5ockgkbvdoD60F+m8aGEUmVQf7r8sjfKM+Ci542cvuX5Od4EVdREYy1aNQieciiqP+51q6xcQTw+\
C8FgfZR4cpBLiVqkTltNKrf+bIrW5HTk1Ci6rza4wSpc4s3dN0O5zU79thx+lJGDo8+\
Ixjw1YXghlCw4F8yZBjWUNMW8m9FcYVNjxCeDEPd9ajmRLNuK4LoHaHE7vZGFW1EnUkdX8EQv0VWeR\
TJZyW6ZrL7euStLhNZ2Ks+\
Bnj2Z8KQi3kfRJUSz28zWpcrcPJalJwvZarltOZgrqMYqp59qOgGFSZr6GswFX+\
mlvmNnbVmRqjKyCsCwIohkDZMasKT+BGQ+\
CzeyBt4pSjQw9v5F5IH83cNNqFPzgUt5GCg8JZrwsPI0zeoWHm47tr5TDXay+\
uhiTftbGp5LoNVxW8dS6z1V2dOFQu7gHAEzhR3XM+YkStewp2/\
uvlMoNle11SUcKJMyVepxS6N2lVtiiQyiS+5/6w53QSsdIj+4lF7HHObQdsWdpd321D/\
2RMSSyQy2yFqYSqyDdWsNRjvrt23GNRzkVYS3rotVUPcSk5iSVsqA0DTUTZYmo3LxVYGq8ovfDdwpT\
BCol80W0DrdPYutTMMCFrsEQy2xZPaC9VJi0dvKzksw6ZCLIkhPSM3G4QII1Cz13eBuAl5wBCsy/\
GAt4EqRyxVc4nG8k+xpefapxMogOP3m/U/f/PXPH35+98M3JZ7/7t1//PjXn979+/\
ff3v384y12058dzHN0WCZP2kSNovBb3zlODXxm9FcoUOn7aAsgGnH5rH5GYb7Cb1ay5x6THogSjn2U\
2QJZwe4jD2piZnUgNcnTWIAamC7jMn8ML6kA06mlhHoMlfLyplynK8ka42VxKYW67NA6a/d+zE3z/\
selZp2K9fBOourfLkCoL8ilJKYUVzy4cEJo04AESBsi88Xx85owuvg8da+\
0U8y7FBHhWWqq61ljcplZvirBpEv10wl3nyhLa2Jl7iy1gPSrNROOmgjkvd0WFZNaLsSXDCMTe2HSz\
6sDjJ7l1OsiitAt0x8tFbk6kpkGQi+\
PixExBYT1ROM8aLnOxs17ZOTJ8ubv5le4RDuHWeofVdy00cXUjRKs4BXQL/N1+HFpS83n8QROU+\
7yf7+IqhzG5NAfK50DGE+2kRzwYj1Gs/K6s+\
Rv1TyXGfTlUEb6HOBgyhEY3xZoFaCKE3fWmiy28veBe9aUY2eyNyx1DkgLyA66sAUE9PkTreKf2FcT\
v0ya3rLY9sIhY9Fd2Z80jbjaHmyfJs5Zb8lzbbDQclJ4prNfJZbKNu6cdE/\
5eO5T2zinEYcZNPTZKzfrDgGKrkq2vapQ5hS9knn2RpQQgM8Xjkm4VaCzaV9BB36qmrowAkPG7XK3z\
96OJ/tn6Sv79QtJay//H2tv1+S2kWyL/hUev9iOYCvsibPPg/\
phQltu2323LTmknvGZR5AEmxiRBAcARXN+/\
a1cKzMrCwBbnhs3YsdsSyJBoFCVnyvXOvo94wktGKNxTGsgi4XFXqqGsNJ7KHmloZEYL2ZAuIX6+\
XamdAVO43Z0fcFSc6oOlLn5bHMDmDFwypvRfTm9ib/w8rBZrjUOG+\
fq41Zh0M3hfXJKtnnhrDKBVaTZOvkUf7XkQEehre5WFUZqb+iYh02ih9zUi2d2iTkXWwT8hXLQ+\
DPlgT99pPBW5Ns28a6ll+Z4BlIRx2H0DZY9HeGZ/EW6D0lo0z2jgnGU1PCaO/F+\
Y6hsYe05yjxjCqlCY0q9YFMshg/\
mxnecNL9CBinWKXLY6ZQCLRrwuwjeMfEtVEU2hMrJUiVXViLZOTp8+ZwKgASq03JRVnW2KXB+\
VphlnTWouTZ9LM8XxVn4n7JooOnYwWcxELCSTSrkSXz8TBt1/\
FOrmLMNXUllIchLSTkasluEpeyqU7PBUhrjbuGTJ/\
S7OmxvFHIG7Yazb9VX8sM8zUL5YDP7NQhadVZiGQa8069/\
xqGOe2po209qxDMVh4qqROztLVMQ2IMRdrZrb01f6ZwhfIuOsFWeVQxvlXkh1QX2J4EsgIIA9setlp\
e4OcQahv2OMtzWXQ/1MTTTpDqW/DRZVt1Nm3e0GZLcSvan0Rt3Ca/\
crZixk4q09x3eaOMbge7RScxH1Qt51LusNGMRw4uHt84QUamdAQR106LS+\
AuvPfl9bwgDE61CMGiV03HoEVaDFGDP9XTSZuHDMk1oH9EKTgAJ/\
DdmzvJjyOakwt3kpuqS72ZXKUV4doz9YPkEPpGXbMgz1OHTJqPTKrRu/\
m6kv687ROGeHGYzWIlYlPiiRXLM4ek54UAn2mMl+S+hu7dq+Rfcpo2XTncdsAhaeAGjSHOM8m+\
PGqdpgg3vJT5oPaAmw0kEAzRbAevP+\
oiiiGjkQ9KiOQC2KjZ6Z0plRm8zJZKlBsVcYaRWWQ61NTbeGet4/pc8mXZ+\
DH4Rvj5fH9BCT9rLKRha144eME3jUqGJDqlSNNCZ2uezE1hkRdiFGSxuMVCyFuw9M5hNo0rM6OiZXm\
jJCy/iBtVzZfzaCksxf3h2+SE9UGclVi+q1nHhlyx9VoPxQ/\
h6WRSIUvMrQRfRn5DWfZTBKv3fyIksbbMaW4btVyuRu8JGpfqHA5hhKyuH9/qM00DYbIUdlCXfu+\
lBAnYSuams2EK+DCxWl4sARfyoCHPD3WocVONcZ0xLeg/y5q+n2jXnbt6rKgdo6K7F+ue2yPq+\
uFYqeOk6UJbB+\
8ZbGn58NirWXMnskBbAfaor12jSq07X0XsiTTDLW9OaShbcsAR0RlP4scgRJRTE5T1flDymtVk6Zk3\
e0UGfTNIF+9PM4k6DR0Q42iExQjUsbaa0uZFfWmL5QsKAro/llq6Byc1kbUAkgdEJ5umjCYWy/HN+\
quhj6kzTbKnXF72HtoTlpCJ4DaTaSsyv8ANDm5ldKfhygk7PJqaHZhLCBBBSX9svmaoJhfmJ04HLqj\
PZV3NI8V5mZ1PTZ9MQHq5bu1FOozXS9EzluUc5MvvmgBm8TnZoKddAeIXwaGVbiQA1C1V7azpdPVTV\
mMBRX0lM5L4WKS+hRLHiIFEQWF1EjUNbSIer3gYLb/ZwQ7t0E1RqBU55I3QEJmVQzXDmofql6oc9+\
PX9qEpr3hY3Lqx92QNqK+Fxxt1hOF7vlGWOwh/\
Mq4ypTvOSkIGB7877epzhzaQGwUgEXgW5viPpHrei+3apPxONWRoIYKy8X+\
TQacZ9nADOwEmBi7uUnEV7ijAkClg17cI+8rOnSm3t4LJBeVwgHzuVHGXmZdUxm+FraIDy/\
aqkSH0x1aWSC1HWXmfuGJS/vFS3nRZevwp62enKIcSoao/Ifd7yg6/S2A9NljtZqpq+\
WaJQJ6jra8P0aMYs6WJFRSYlliktvR1V9Mdq2POmV9xTRKnNvYJcu3J5EZmnMotE3I3uVG4UqJyb7g\
mpYSV8UwAkpeTbdEhOO2VE7amXiCxIerX+lPbbVXBSQWUKVkEge4dmvby7c8KJ3HL3uHLg/\
CVHuNhkl3a71VAmC5M5lXomxsV0FK6tbLThhbpg+e0T999kTDpUmiZk/\
jIOoYAWZg9KpC1Zi6reKBjTbQ+RoHr0ktnPwRLBSOIM29Ql4mEoefroHmpWf+\
ruLQbA5BYyXwqKDCorSENdKMpKMe9f0haDbYrow1on4NfVCT8rLdMWchJv9s6mosWvwPmYXZ0R6ITc\
+D8weo7AIlAAuclNvhusphkQxhaU4QZfqv/odN589i5GsQJOEGEeYS3Sdj7b5J+\
8T4nG2cfKMwMoyLDiscFUzlOOgqpAjuTbYJmB7ZdMm7KazXpmDZSLkHoY/\
kIrc7YqzZ90G2643XFRF4ElN4gPipnaz83ftsQYCVKIDrntmm3EcvQRyVAHKuGZttzSeuE5TVTVsi/\
37XiYrm4nyw7dQ4Wk7aLiSgw2AxF2E7ikY9tqkw2vgSm0PJfT4VPtoUdZEGc2j9d/\
7qmxnDLGNoYlDHgDDMAMJDZ4iNqy+ZfqYUYYxmtZ9wYIGvsCLkSx+\
yW5Ovk2Cf09unFjnzkYOOEy6mrSaOoWF5/r7SQBLOZHTte+aClJSCf3+8zklwLUeq/\
rSACylk0UjItdZO921bWfgKnXTVpSKWLAIdb73EiVudGSdKlmyGUv0BR/zsjFjYNAqNEQoB/BS89Y/\
j4H/9k5mdaUioP3/1+81VLZUSs7qKQs25Y901EWGHShIZaJGjvUqzqOpVU+pQirXtrSIRdn/\
Hj0BTo+XMcMqR3//NOfU9bUkrUC54IIndhAt+\
3IQpzWTyVe4WmCb6R1jZE6pmuQpUJW6BJHmAUy5nis4qRJubJM461SacEidRzTtms7z3zM6V7abr8x\
aLJzd5gb65XMsWSsaQ91AdFym4HKWpbP+M9CszG5tA0R+v7Jll92KWGqDDvkHxyrbmNqwk+\
QdsxV6G3NhgSVNiL2Lvx3VFl8vDIg81Ue5uEs5bm6vXvTN0T5wmQ8oTCntRQy5iibGO+\
r2he3jxvDzPJFPSSsZBgpd3CkpiEIFtkJyWHZXpmfZPsrfCcXTPIuxUijmcIMlZ/\
7VHHiEPJDBcJ9ClJT5aT1HdIMOmkWxI7bDhO2v1ablOhWI8XB9/\
2lShn1zxD3k6qVUNoaWSSBc4NUUoUyxS+Fla/\
JZbdNX9rdEQ69knzIxUDyhOiBOn5q5SWmYujoSG8Uq20ArgpleVlW2I5lkVYvJ47HWmTxduJrvv0e6\
IYciHsfjNDoS/RjBhLJTlBKEvxC/ETp/d844UmjN6kQcqvjY+\
SlR32YllWW4Kfq2CZbugVnmLyfw9FaZRX7eZhYEzNAJdCNjPizilf8iv9Ajoq0gQ2Ab6tNQRLyk8/\
BgO5ii7wP914IvnZtt7se12h5pGv+Uid73/\
ZNVxuN33KhKpJ9Dz669OqOtXbVRx6R98zfpfENLehRnahP9qk27c7xjYMjUglQa+\
OWVQ50vZF7hmc88RJzZ3orh4NU12VRyMiFvAn2xqGy+lEYfqK+\
M3dW3Ghhv6anEMzrwWAupVp38NhsQpXiMDMFiYwG1pMLykpFRq7dwdjQIlTdB0pda9SxREnBZuTEcJ\
xNEaOick4x2hKOloVz0cIqOqlIehiveDkeAed8nBba+IVoIWnApCMC+5rzpP5W5JZ9fv0nk9+\
DVeSUs8SUS2RHG12MbB1tmrAQoiGE5WY/GnhTTB1ugXUF7jyNNYGzD0m6hdOhuLl0uXOFejp/\
RlMSHMp3oYa9HNssfePcjErYPN2MmGqUdl3dKRGEoAJEbWGtCQNfsR1Nc4IFiIn0nHw/\
B1ICfRG1RKwpLvZ61NqfwTTRvaouNL7qOpweeQE2Ua8/\
1emCrGSPqtjKoHrVEfNYvZ2U3HPoP61eK8bO7kRrSOO0UbIhUcU5QXCtqD1b0FcWtLVu0hwyNMyoAZ\
xiISMddAUz8TwQ7EVmq+g/\
E81D8TKZ6voCmjKt3Gvjkm9V63hoGd7lXYF9UM0c87AHGG2u6pld9np8CLVBVWJvmpBo6vBMPmCv40\
+BLALCnwhTYvtBtYF4Xa1g5fnNPVnNX1Kul3vhMcuNBtt/unQ5zi0fnJtMS/\
aVqYOGm65krqujwgNe6bQ9JlE6b18P1fbcDcZhUtoH664YIVlReXx6ofumIJ1qTHMs0csRiuSPJjm7\
Sb6CeiGVNW1decHKSorRmD0fzrjpyKxVbUUoR3eurkVwMrPy1hdSDwI6/\
xgjt1r0MQJpM7Xe2jc0dx8LAXwWeZSxnfBcs6tDsksbuhdmhyrTv77cXKMr0TCBYmE0USqXtouTlTf\
elztQ7giq1Hbh9m+tHgwDKmRGnUbjcM/zSEEE65T27gLNOg3En8brebAjueK5W5GckAra+\
naz8uj5iOM4X2LEtAkX0v/WoXN9kRnqds3rb51wvmpri4c3a3AK7/dwl02h7UrZqeHFel81B8+\
f4qSUcLZxfqDC/HQgLVRcPJqR7elLb/\
RVLndb7blvb2ikbEb16S8fZ18hyZO4FPMwHRu84AvIW7y1LyxUcvDywqmER+/qZ2SpQ/\
4rufAr2BCaLh8dyUwi4SjhnpKZQUrw0llg8toHTDs8HkwYyksmiDCkvxayvhw3DCp8RnhAZQjS2efi\
aIN189Wmv1p83AN5FVAv02kAnScB1mJb17LjDxUlJDaKbxIFIMyOmua4aDjLViqD+\
kIVC0QZPoed5wq0M6//AKa2q2aAOtehtXQ1xrSkmdg1D5FNZ2WWlA6MZM0OD2PbfKazm0Nmrq+O1/\
hsd4RM5foiAh7D0tRf6+IUC/tq8fB/nx7fxVGwTNQfKs30Wsq5zx8cFbx+UjWTgvdzpYzqoVQW+\
t5pgwLvQIWjYxhTnzndUwERFOaMcbKATZWyNcE2Wjn3AvGDTEY1q+\
fOnITupAq6plICliNxqJEJ7sOec3Q0uinTV4/A0hpgVm/\
l2iYbJ97LZllCPNIMOj6jFah0L4zTVTyQSbOFfwqt5H3giRmHZcERD+eK7/\
TWfa8j2kMwda8WHyonxxqbAqPnh0BW2nhstub4MVdcWT10/\
hUQOsu9yrw7CgXqSpJlHGMMlgtr5u0FUFLgTAwcGzTpQjdNKMyO9QHVZNGXr9hryG06kLkX9xtayym\
lzlFixZEPH4PL+Swok4LCI2rHJuSEIE4L7+65L3XpgMq7Rqy5tUZxugvmdTrj6T/\
hNNk2bbaPOoxLj7+dR/tqhxKvVp/ZaGdeugPpoYljnfspeSrbFAKihX8Aadxe+\
WTkW7KxMwGPQmsvuyurR8pdRzWJzwqoD9e3JC3f4MthMagmx/\
eLuGVJye0C6Mv5OmVfkDqdQ8FtLkFd8Y78NNLNeW6p9XWo/mgO50NoS78SaghGldBdfNZeu/\
FPxMOu/Flc/bfVCTvyJ9mgP0PLmdVzFkDz+H8Q0kjR1oV2NROrky7LqdT+\
da4oc7aNpUe2NoyKK7Am6uYI9fk8dyjBGnZWrowpxckyFrfV7KLmg7QwrcmPPEbyKPysFxk8HWAz6E\
YxJpQAdjqPGMiWXHr81jjvDbTQ77W1KrQso3GKY5DZ/\
OGl3NyIWzbPN5odsN6IixaOHnOblpwpM3ZjXVDVJQPaIqAuxTeAAUZA7DtMOxRdFTaGuWvYFxuxyRj\
bUBS4sUiezl9txjn4QiSXIhjp04hFR8ZVSfXnogamx0eyIJlH9c8QJ6iMBJY1GzF1hsZ60hcAM+\
sGlkFQ1VmLffECAi2iFIL/Y4CG/9ICtZIMBAtaW3eDHNCDtgvAttEPU2gAe2+\
3su4AnjigjhmFwjRJknZsOjHsgpgp6+swk5NjM/njxwDoXDx4Ej/\
atpzonCGaToZzfuikaNbOkZSAiETbT0iJa8uL0jW1tRFL/jq4nH/\
AUKTLAkLKH0SY1C9DopXxGDytUjKbewOZ++TV4m3RBqsNVGL40TZQwmsgookKlMws0HBNPGt1+\
z2d8DGZAq37IFxc4c6ktNI59kPx26HRJb91oABXXedlCWlS0b/0SQSJzzfStxxA5LCJ/\
YUM3eUiWUhN4Guo8aHCWh01mzcJC1dXzDRTtCRRYtlskKwk5puIN6tkqBCkA/\
VJyz2aBJlo13FTzjdlsQgDyemczFbqvHo8ffobJXuA9v/Rdp/\
6XQNCAXKfAxmgLEaBYB3Z35FFh1W69Ce9S3KiCn0YeXrVymEyZtd2R68VelnjK3yDpNsYiNWvQPmO3\
/lq8c1jWptWp9wuyLzhLoWkp6H6uzBDiaBh9+3iK1IBWynvcJbeHqbm5c3u5RC/+mrxw+\
PfHz789PDu7YOo8b39+c2HN2+fHj5YHccnCguqmbQbk/\
s34WXVNBccFdF5yHMCJLAFSXe66bbTEVNlBzZ6di9HmDnPSA040nlFrODt0Kk1Kps7QeYCHhBosdVG\
yFJcQoM7z5rkQOzursLYoksrIHdLcRU8JCCRVMvOtDOYARNC/\
CNUVQ53dxKyBcUz6h7DWgXuJImFyKu8Y0ECOQaHEkqtilIucAQbSItLIpyS0H/\
k2cK5DwZHwsjOaGNYX2G3dsA80lwMkXl0wa1hWWHdzfEn5VuyMYDz84E5m9tahjSzX9df/\
avlGo0SegQG7p3gu495HhQHWun7watq1bLM5DozvKLxf1CnlVKWbaXALXPP4Lrq4/\
5jO1c1StJCD62MRykPV0WuOll3MtHGK7t/\
sKa3SnnDNKWPIQ8p7yDZ1LrLrGUMpkFXBPTLYDLolLWQNCTMM2QFbliFvP9dn0DvNzdp8nyfVePset\
pRaYv9na9hO4+\
lxar4OY1zqvzyAds0tsnG1NY4xsPxOtn0UmkjW4rvAeJxCEs7hmpc2E6VVkCmu3KuFfpiQALuSwq8o\
shLMIq4aqmUygvZp6N/FpxB/WnBl2l0VTvpS5PfIPjY6F+DXiaVCw0nwoK+c0DKVPkWrocM2qSPA6/\
dqUlZ9TGzS/tYsOlWp3j8073XEP/kVToojpnMuF3CWy7J9yW3mOzGMw6AjR9i0b/Sn+\
itzO6tWfxhc2g6aPeQTdMIZwhQBnRFu2H98itmGSAkI4XVN6qFU5kUB5oYGcsEUfDujk/\
Tf5s2YEsRSCercVA1uBn4NX1Kjnb4AzOrIsmLLiV2SlhWeS9UJNcjqUZBMw7wIzFKNbqoIwvSOnwtB\
uHSoFGertoTQe2aiPmukNmvzvtPV/2ctthw6UiE5ewFWt6XrXA/n+\
ssc6GymN7NEV55ax5ZZM1Iw8fbrYoHlo8xPxpz7OW7g2NQQ6CAE7vv9PSEZ2BAVPzdRbA6K5IFSFHN\
MLtZfGhfnfhYAig+\
d8FC29fKXx511eUXYKLT6axMQ6xwyrwILMH4kQod9vxM9EAlz5BVbCV0SvtQmShpHyFDwKSGU198f/\
IC0pLYH7HOE5TJsX42IsARCKI+\
ai09PQmnoqQkoJUVblqdFyJ9VQQWlV00xFDaTMgBQzl4DFa3Z1YctAIUl2qZR3xW4ISUDmMnAxwge0\
tpZrVp2Mazil72Sfoa8Sj4lYIUgBZiHG1FNkVMK6PQQlfF6u1ORd1KGVnojYsMkRPw5scUGfRr5jz4\
ayBlEfRnxZQcIQs/ipAkTIaGUwci6BJ9ltMMnPjIk4eNF6olKkRWkp/pNmyOfy4ZxolmV8wK/\
tcAD4gQEKNlO3BlDG5V3OKXIAiESo/AJd4J8QZE77zQ6z0tHPPZZkLdWxwsXU4+\
W7KPPijlzNTrqjs2n1skRf86V5vufKop3JGbkVplI2pZ2W19DlKLYYaF2Pn0fnJOMoz5mcxByPHP0h\
eW7Oa5xrQhMnktJc30gUoREvCc6oYClx9/PBftF99EUIb41VAiwj1yEF8pyXKD8NtCbsOmu+\
PGkletEDB9oUKCr9FqRIwU6fjrgr+1ZEIy2xbe+\
rYmnltyfiTiLM8KPbIawA2GbNL1hVH7nlcPI5Eo5Tk3isxDr+\
AtSGq27VilQVyfvQy52pRd06EZyMjC3qBvnRzA5qh7i5fykeXxwZRqg3Q8w2ZT9pf0i+\
Bv8POt68tSqvNw51XCal9V9lrsSUORTGjvGS+07DOYmpDdYJy/Ia9y4BcJI5skcbhiB9zdydvKo/\
TTxr/2z4/EmUDMM9Dl4fgZW8ljmKTK8pxa3eJElYnViR5Ii9D9GWPNOGySgzvBdojKn7uq700zPJ31\
Zi+zzXvVi/RvRao3+O6M58YV4Ic8CSn6REd9tfmfLzXD+\
eTbOoidi5ANFsPQjtTr4Y5BzuDP7nO6kA5Aog8iKHrAmKU5z53d+\
6H5ox6VttJXqyEiSyFTZzOfEATo80J64X+GH9MWQnV/Wg2s1RKYx5UYNmAC61Hj0jvKShlCL7+\
ZuOAGsBQjl4gEEVGcJOZhk9d1o5Yy/\
xYDPWzktZJcZ7KTGkCvTetsriOx1EMZLLBi2gu5oaZmjdHWXuvsrs7I/V4gZlETk7/\
wyrG9FRCQ2CqzRmr0iWLsFdGOSDgT4XCAsaBSZXqXtdzOAzm7o8MVj2Qet6xsA/\
wyHggeJxEIBaTc1ldqwIPuuFm5fsjvudjRt/cl1lyz7VudPH0lltllT6o8mPpcAaOJL52wK6wuz/\
re5O7uy8rykue2k2Ba9jhCcf/\
WZFt67RnFwdjuFRsRWQViuTVPOFq7L9c1SKwzjkVWmRpffVRAYubgr+nZ6yFr/\
kF7rTDvxdgD2WsisXAeGFoWk9Zb1Sbk4CvQsg6/tOmBurMh9SMexuow4Xxqw9/+aCggG8+\
SsXVuAZREikclU3IzFBBhAv+jlppaYGqx+ylNz75FV6MWQY4a+\
kRbcdgSNKcg10rfu2pTzpOIj8T6XVNQSmm8MXtmZNjIbyo9uuhGThrznt0g/\
EPhgS0dcTp1HkXSMQf1RR1Tb+0f7ky4/qB6zVnb8JZRNu/d9JltJ3g/0xaRnrQPBjsTW7+\
vDSXfY5qRn5EpKBVS97Gn9EIqmTjUN5g5wGQrU0qWeHSIlkkNqmsH38J6R4W8UbAoRnjH5Xht5VyDP\
82kqwgaRMLjCFFB+y2Zcs5F46megi60BKGqvchQJVN/jOz/Ultd+\
AaJU75hVYimGMG6TrUznZD2j7O16Mbm83yrHJfZsBvxh5l2XZVs3feqrNqxtOqa5XVtPGx+\
Osct0Js96MK8ySoZIK73tP+m/fEtJsXcwyk976gsgAaSHOLFmPtnmXwx+5UhLy4Ab5a2pff5z/T8+\
zrGHrFDvWSNdcm5H1PNE4mnpW4xWbuLgn1QV897LBxDbrcQ7uXKgBnacmzOCPjzjnYqJFRcVLG6OTr\
GRudbRS0EBz7ImfxxCuJz4diawaLmuPhFBiue4cQhWt10+1x1m5slN/\
UP7ezrDhF7DX6Oe0Na9bWC2qS2kj4vY2xKn9svstNYw6uxqhZw+\
VqZkVhWU9n84IYDtHTt1jrEZ7P1yFRg0a5WgAzKKT0ZY1e+\
w8xW5TOSll4unKdKks6dVPHz6ICpHmpUoHuGFvLN/rR7tfhBEFvHjah1IDtAXEg6Ic0qmz5wiKA+\
jq6V0LvbBKAM//bkaVxdR5trWUzTZMbLekQsRIxV3M7ejHLizIYpuX7GQGLlXEtrYnYqXWQ+\
97Wji0VfoKYnlB+PMm9pz3/9ayUBrt3WjzbYLH941wL+dRwJwH29+Mv/+W7uVZOQCI2+IdBiuEeV9/\
n9//mLPhAKSzAXji7lh29cGVUjJXKIpQCTLXkSI8qXTkoasmVgr7FBpXO2QYVTTxArJEFvO9/\
lEohzbxN//913/s5UU2fYmRZG+gegkj3MrSakTRJrbfRlgMNsY0qvIdniMnC10+aeap+\
VSmaWXIXadrBBCiDamAwFoYwFtR/\
WwNIAPftWmzQHNg8xZCisjKUSc3XC2pFuFTyE6viRYsaZHMUXRtOwq8ybWu4HNB9MvBNPPStp5zE7v\
cD8Aj+jl1aSDbSBlgZIW2bl8r7aEgy7tfLiy46T8b/6eD+TzbosqRemjvxbpkXCd3ygswp3P/\
XYjZFbvzhfomhHajD5P1qn1TaGjCQIxlfpLETdnI8muvVnR15nFTO/\
UhSBbjfXu7vKJwx6NmgW9f68bjaGQ/m12afI4GFzqTrxmO/a8Ov9YMANjf/7oT1UnP4wiWk3+LId+\
yFoHR0qTpDtobAj7Hp7CWv1z5uuuvSGQh1Y3/IT3qPt5EnVx9ae2IKOwLdofjhUBLWqHkZHNb+\
YiUyrUYFSDEqOWrRW6fMgBup/\
uWzCEd7MjjVEFim1BQcSpklLuid5XObvzsMpURFMW7uASoU7tlBZVQ8Yd9rIC67NKqkvxKgc66eFUQ\
OjZLx2Q0zndNC43GQtnRhF2hldergmkI/rqjYbaw9qwMCVxQxhfphpUUp6TjJ3dM3jCoaE/\
jW5wd9l5aVkUmdEW298SAwJluPysQwkCGjP5tS7diMv+FAduOjrXKQyW1ss5aCy3fv9XTIPyV+\
A7NRCWUVaFWuiF75kJGEAE81YD+9yM4HkzJNIQrnFEWqB9nRA5+\
2NN24l5mXLQgeGiIkks6sx3gUKELAqpmvr7pka274/\
H4om2jzMeFx74gS9VvlCU4yFJ9qC3rpjSl827Q5E430ETwVdcijoJ6vdtdgu3lyZdlQ4AyQG7RKwJc\
ScYXItNl0ZOK6ScdmK1vJU+\
zt3ZXVijS1TiKKv4NxyFcAuPE9wbJW2jN5fllzClUGcR7le9dxVSkgmKSxB+5k+iWZFZF+\
JOZHxFRmZA+Gpaor9ktbhjfzGL/\
lc0XXkqkqlCGIGQJpIh9zi3uyzFWHNsilbiBHwjArY5yOL7K6Yo2jBNiROORM4Ft1OfjQOLqk3sEUx\
pCg2Wb/IGkZD/t0ml+g0wJJVtEBP5Rult3TGMZ8CvMeTCHTYOLbaoTR16PGS+\
k9ImCgtAoakEqmg9sF/\
cameCVt0Gzij7DJZ53PqiLzo6iMXYRwsgHBHzI6VlxsxOtBnOdPAK3YnFvyMIBJPcmiNfmg0HpFOA6\
lWkGSC8qLnDvzmzbckEeAPLadX1spxXIRlWcT60i7lCTL/\
wsXmGcZhaocB1DoaPtsm2dfH52GnClkB5JTueAnPmE9N7Ps61I+/WvBPlodjVcfS8J4Z+iqnL1qXG+\
dIyvpjiYtfES2hVql6i8qcFGt4XRkiIchnfnL6HsiYyopZYL8Nd6xMMdB3wBopW42Meu9Nbjw8cd5K\
cfgzBNSBoARaXGhPh1kL7YmxAeQl8IiLHpX95S/+c8utHGPN0YowLjHv5miv+jGzBVO/7hCf/\
pvRdCWC9DOAmmHLfetzirYEsHLJhR1U8H2OkV8pbqp4KRntW+8wr5h1lNuu+\
XcLbhP8mokfahSqFROUiml+\
aDjkirCf0hMMtAAjjUVLgOMeybFFfAb7Bx0EImeIDrsbjtfVSozq2fv3BKAPUr4Zdtc8r0X4a3/th/\
oAxjzK9z3tghbFIooNjZdj5DvG55ojw96Qi804n7Uep4sa3DRKoyMpcdwHA+5kej2L4eZ/\
LUsQi72cW/HMEn1pby9ukNFeVN+zEv69MZDJN2/Kahme0Q2X//xMq8Yn5UH+\
ibl6RXBTmnMfYGhA1EnBdmjHwqVZdko2a7p2JRWNYjZu8JE5i5g+V1b2CLEE/\
5p1t3LCKffOpzcqhicTtg7TRTIUDuq0DhL2ENm4puPtqZSI2spQ9p8sWQGuw3snga1NacLPRnj+\
lNok1gJixKZL5iplwuUpPVZ8vu01drH0+uZNqttFmd/AXrzdu4yeY7F4WQZXs076jRcaS/\
Y4nXM1AqqCOk4TqRH5a4h5HreGzJx5f0D1+o4sfe6zUn7yZUSnNpEMyaY7TKgdk2+/\
ddLFwGvGhm1OU7XM8JXvizM+CnAnR96/9pdIURfogycuMuJKFQxCqgkNcLi5Nk24djITfzc1ue+/\
bIKm9ubwFxbI/\
7IMif9sto9bCeTo15uYU7lXxLUqNa0mKmTXknoqsil5iVPvIhUM73LgE0ub4eb5nkhKNmuY8wC0csx\
oCd+9mUpLV3wsfz63EgUv86EOF5R1RDgijfV4T0fnx022UsXGlC8rPZqKrxYPIteZx+\
OMw9sc9Ic1nkxVEuE0BxBRmLdF1yOhsdFODi9qlNQJj2RrDuLOll6GFnzxl9pHxxgilrE+9ho/\
AbmarXC4nAATBAowf012oR6JnUCIxBoS8yRnOSpmEuJTYMjGSCN6cBCkCAh1nC/\
krVFTVr0e7KyP2zWdXky13aXBZJq+x08+\
Bj9jxUZOvTmqzcNw7Oe0h7grU76Q7MP1dR4kwdLJ0WLmgJyBOUDuogPCQbys7cGcBmI2Y7rt7m/\
wxI2Zn4oRvdmWybqgMVCca9DYlZ9phznF4FFtKMo7yF1kHrIZFn9nF3OCmnEH3KvPtwpafPVfAp+\
70hmBUrdwrjP8ggouX4a0vbPIwt+ITFHXx3wBp/3AScWAVTipyDFaV0LX2F85SkUDjtszht7X+\
ayiR+LhamJ6vc/lIH+kxMgpyD4AxRgQOHVDnCf0bnKPQYfqE9Pv5lAlq+QR4hgOIECdjk11smeb/c+\
PpGeA89utiRoqypx1OiY9xsRRqnzE0bpJyohpGEN2zhZaVW5U7XOeGfByyc0KSVHZKiLSIvizFtQLc\
al6hVwcJ4hzy11/nfcUZlxGrkJb90CuznmM1xoh/\
ZmCX4Yp28KuRLFIEuKZEo4h0sc6eFGhw8bTcHS0Z+0j+n5x69Bb/\
YjvS4kjDCykbIe1EdhNxul9lEMFBJXVJbmOxsboChZQ+/k/u0IxvMFMf34AMZAoHUT00+\
nEKbUiXYZZYIsYM9tzIjej1sZUZ2Ek0OwBk5kXXz+zXCXkIh4Hn4CMtuu+1IOaO3HFTYn3iiZAL+\
OV3mydiiD+ySXIvUzxknNvtn6yuVNm9iRB4SngIKa//mNdnwZ37Dz732PNvv/\
OYymc1wtovkfaBvXiIS1s0+9AGHOHkUMsqv31qYVdUyOWuSl1OPQIsJ1O482fzxiYp70itnVPgqU+\
UxepV9Y5WJJVpPMGZ0dwo2/F9ARyr14NuVUt+U/qIYSlKmnu99+ldZL/\
YenjOyd4jywoulE25aOG3G5+T8QpQnitPNWt0gtMBgx+\
pYVmH2D703N2FFrLMeiUP9GLXqxBlcd40Yx8u1Z09JEMp+wZc15AzuMOeoqpxTRXY7p36SA/XGGWC+\
dCDIb4DqFHeVbJEBkuddmj1TmzhFGdtS0emdnclJihONsGRol1k3Rr1iVpbNYdACOdYZ15bDSt8aTG\
JaC3Kdb33Be2Ni0O+r6D8jrwPlfXUCNhTBQBmwxpns/\
pVEJtsCChiCZJzbMqhrxwiazW5omx795IYUOJrmnbKOxrTIiTyWPkV1Q66kbixdLat2gqP9eDoq09Q\
Mm159iuc/LO7/+3ntH/vYTlVLtvlXx14ecp/0loRWrUYczhAfLFOrTqyxaFqcJd0/KW+\
Yx3tWD2pa44yWtN7Bq9c8fLa8/QLdfjtwAvZoLCVRyQxb7xkeybdlCNqw9cj4/i4pvL99/h6f/9/\
Xff4lzK9LcTR40zrIklGXWsip7GC5V1s+CWbt8y480fpVzT/K44pt2Qfv/\
f2AyjNtpUKRHvA5ZP490b/c2suWZduNzUiaZ/Uv3w0FkTXtRCp6RycyF8hPm+\
SKwnRPs2lVkMB9sdvjwa/\
Hqxq4OW4GhnrqXKy39xnvTsUEPoxWr55DOP36qCiljjkK6ZxBCr5wF9SK9v2lM3ZacYlSsIsAmH7Zu\
8L9bVqcE249741qZDPf7Qly6uZyJAGIqEKebohaFZFvmcvjcgQS1elZcEmhsGULdp0ULWSoiCpKVKc\
z4BT0fDdal4vDBgyDS15DWbc2TLF2NL47fQhciYE6+\
9Gp5wgjNhrLSvrkRklvJeyEdNkqFkyvUx6UkNJ6rZgsHR0zOdb0RRKXBJBSClhdyRLg+\
jWsCHKtkKI7lhpEGAKQe5ce8nGQTTMqYvAJY0vBAcIGcJAwucrUEAXyFHsYw4bRw8dYqw7ejEgNjiN\
kxTDca4CmN6qLUwEiTq4qjIuNWAyp5qUWTzK6cwlk4ypSfPr1H/SQu/\
AOIYa8GUzyAAAVVedm9y5oFsQ3nqgh8oMlbEFD3x5gudky4+jZzWU2x/VfgKqyfZU+\
VaAZpd5eJ6w4ml05sWe8y/y7kt1yIoxq8xmUaJ1XW7x8N437jI8wt9urSU/zrjla6uoYbgzzb+/\
kjBuij9FLRRvhYIphAK4vh4Ocwx321nz2k8gAGZ2+vfD3Uc+\
F8S6Q0e7l2zV6UVVno0x58V21wyWSzbLy2FKpCoSO+tyDZWIS5qQ6/\
9ZqGstIMx7wNQQrel7btRrTsWEfWlLwvhinQDTjDIADUymn5TMfBIUei3dAcStY3IYuIlJJ75Jkcr3\
95UTp6jt1bv53l0RnzJAjI+vdSj8Of/V4jdfbG+\
bG6rbOrYkPz3cvGWpuKHpT4CI0jlWorytTHkZTDdLn5aLn5eLv5nufhl5ut9xCSMXzmijwup7ft2HK\
BiamhSIF1MC6RBBFXJuW3lbWxLsBsjD0UpzknTfQTOU5azp7LaXrTdPC4O1dDhTzSoliP1FNyoggrq\
Ug9vVMl9zSfVijVIY6ABOCMazMQuti6yyMSsI8RqVlFcnESF2ezAmNr2KUNXiyECjN/\
KHnmADeLl6va3ZLJOF40IujJny6VoBthUcMxNI6u4Ek4cpA2DzvRQIEKK7WfEaoBPxEWfnF71DvVtl\
1z8jLnbsVLJ9Lr52SySLTzGn2x3/j5DsoaHl9jomx+/\
XdoNxJMYnomTODbbWD5VDOTH908R93jrMT7D95se/\
nOy2WgmR8TT0cWMSgXF8olCWCbFNHbn9gJoiXCzxSP5avE+\
QihyAdmDzDlQtxOyI2eaJVMsmbZKok4vfST/\
USqDWZVGHUYgYwxNX0clbl968MkaxmG7oNPWzEWN1TQZpX1I68VfpSeddK6ILLHamqZ0lST1/5L/\
Ocn/2I+Pzkmsz7rMtdaNse2tPv7d/WKlC7iV680WdjONYEN0PIjqcYH/WoZ2qEZYlEMvCSryc4B+\
5k4yrU3p9mRoE5pFch81ahdW0brxlHLo4tmhobn1CDjf4L4Rfycb6xDe/\
M1UMge5o5eYTwszLalvFxTjGuYxVcC46nl15xzj2F9VQRNkzE8SFk13g4VSyAiNlNAGKPV6NmWqffZ\
ZUygXcmoGK0FkrLZPAOhi68rZAUUXpJ+\
cl1g6eunuA8xK3XAVYVWzMKYXzse9G1sOScVzOVv5sj5N0aDJ73TTdPXaW1aj9C2/\
XIkHvonlDtXKygWBQh7g2yDac7TJ8bk3E32m9co1OogNLjgaj8+\
9arSvwdUYF8r8o72X6AbGJeLHUMkqVjwUkWMdRCuc1fGTogkKWhqbJPadHumW0sbdVodmr6bVCsnj4\
jRDE8K6AsYSb9Y7VimNCD1kya6K48tNFK7xEs+ugWzDx0cJ8+ymGq0TA5ySWSjYT/\
2xEjKy9K0ko5DrKoDgFTKigHSB61c6LjWq7S21J2Pbmuyj2ivctJcj62pDy//\
vrWQc6XveAP67mBzMn/P9z6aeLoJdpDI/\
Kk9l6ALst2ymckEbUSpl1iDd1hCgmqJVCQu0EnloaaFdJSIzpw+\
jmOZHuAkcstjfVKoTviXzBYgOyoo1OKBbG4McOHPNgLCDZA6PnAGmrPwJdkD9zyNpOY3+WN2gNju0+\
b0EjLfaAiKlZbTgQSzJiQ9m7ofgGFU1AFGJoH6bQf5obAA/\
q9Mrt2PFhzC9D5DdhEBINvtokxd2SKK96RwOzjEBhZAnWEY6vlEkUBjR2ViuNOIzEWkemou+rS++\
ddu+TxvwC2FLz6mTM5CPt9U3P0pVIgIn6CHwrsNThQc5cDfpKKH/\
A9jZQ3LAm2bkU8N0OstAXkjDba86L/\
9i2mNNws4tkTb94gDN08dRoXu2my15xA77eNCctiyP5ALTfAtKng0XLmc/0mGVDoyguLrF7gydEP+\
r4gII9SwXRJsvivcGrADaws7LkaznsPu6F7YFUO4bdZ7tRQGeNpHOXFnTLhldMC8DuHRvBkbsTDE/\
BIlB3raJ/FyMMX0gaWJAtmYEYCc0UIGNvY7nPjcXFia4p8gKxeLEMvaIgAoey1i4hBpAPSn+\
YG43SPfIASZr4BK6XuQVGWpWMcNBXf6Jk4pSJYApYf8qJUYeqOXakajBFNHsee1o7Q3ggM1voib1qV\
3ver46Oj/xXyBJHVWCUW9ym76HFOyjyWWqbNvgwpkvRfiQjLuYRAhwo60bf4cmmgsTCgZWoZuRB/\
8SymQ04MbSUMDGyIq+MGwZCnYUiPN77ENyiEarOEMdTdFGYMzx+ILCv7Zetl3GFINA+\
pmoLmgGIBTmAbq0sx+eiTNtMpkmfE+\
uCxhF3b2ZTTsTw98aRnTwT8gnzPGF9i8svD6eJhua0Y3y0xt3LbGv2W6djVW/k/\
dGmZ7lBDgeUATDdnpfwBPcgN+9gC8o+\
5xlNAsFyHgbzuLn4fzY6YYC1myy5zPXo7rzn4mQx8GxoqR05EOHJ3NwYSHz73G03ChBcYyswZrlweY\
GwDt/USR4gIh2n7mli/mPGSGaJxXcE5HI5U12tCy7Oa8Da/\
xrsggvdHfHTdzZdq9LnOf4K1nLFESjm0zHk0EHhuDgIhY/\
lyfosVJHNZRQ3oNdItGjarBlNttRQX2MuE62bWi7mcY1P+\
E0wZMHU4M9mlRj73OWJxf7h9pHaZOXbVN991ohiIiW5MI5hz7M8cDLoLZzB2AVyNNBjKe2Lh1PED4n\
AARAXQLDbSigQ7xIedEzgkX7W3lUOPQYyFvyO+\
UQPQgofpFPOgfC1nEOydUkFdNloASJu1eQdkvzKZOvk6s1Lfst7My7yigW93uHFIT2cYEQUKR20X6c\
ArXzHb5afHT2T02B1eDiNv1zanW1E2U/\
HfQmfmnbT7HEf9abZtAiaIRmHdDY2aqXkshh3yCiUvmf9Gtdcz6cds6Okz/Har/ePN+Rkp/\
rZyi0qryJVpHDlybQk5ewOXnvatMUV4/LI8g+1a/\
WISZwvJkyuS4CLdeUOfrgZoCscYe6c2EJoZdTHKxy7IhtxCOxT1AiCOxlBIMvCG7c2fQFHcB/kF/\
QaEgzBwfEYMC4RWHrmdNfEeY4CGebsYj4PxeCmtBbztqZmrnUfLIbaDUk5uXEdaYmC5GvMqwYqsZkT\
XN7TnpZnDvRns+44VPpunG50oFE9EsdJ89n0r9MUhk7xiETeruv+\
j4ExCsO9UF5fGNNLl5EZN80ewl36hQcwX8HD0FdhNnelUr4qGyXXtxQCjParIVs1qH6xALVeg9C9Wk\
eIpRFFhNURlsIp4mH9LYhLlBn+JZ4koI8DsEZBQ/AsOJMbXIHm/Yg1UObo7ixNiCFKdeGo4AXLd/\
qtrjp45C8hZFF3QCUtKa8u+\
4jT5hH4xqGCjrV7UlG3zJwJ4RLPO0aicegMUsu6XKRzdayK8ZQmyrtxI9/+/XXNx/+\
oQKPv0He8XEbkXswZJnJHbNTeT7V2GECR4LTyI2sMpgKlOLf2YZYfBRQnm2cER9cmc9rfe7oJZ7+\
dEYg1xj/3KoemR4oTqaVP9RDx6WfKqq024JzH1SMjISeoTwpKSqCceHzBnUIkWoTQJ+\
FDnKXrvA4d78DRvfHzJk2kmkDmeq95Z98NNOO3Wh1y2ZmdQwd+PLdhEDUlJeqPAxa8qb/\
KWUg5jceM7ZnK5YellFs2aeJKvdHXYWcSvaFVCDkJR7bEFZh6FiKB67cdu5rGa6wh8Wzf026hXRctp\
CrjHGX0PJUQAfhrAS2A85fTK8LYVpxzc02fjx/\
AJ4grr3gyHAhksqly6HmmGkSEUl6Ggzi2BcR0mPenFvo0ftinEYlv0o+hJhpDxNKEYN5Z3CFUgrsr+\
X96lRYcWm9Pz2khUBoLiX1OoC56kRp+7pkIJoO4cdM+PNuijNobfol/\
J6gvholt2C12FIZkV9q02vshVoe+/lZzvC6UhSQRrLPz6AG2/\
AgpzSUVIsy588xdniOTYo5kodQvWOVsFLKyr7+4zyd6wbDMboF5Fz3PR0eSCYgZG+M2ek/N88m+\
7PhNjBoUfpFHbSZAeAHLq6Ps/eEYg9uLMvGhT2M38cPKE+p01bbJlNyM6VHl4+\
CmWlQFttRtiyl6nSXxN6dMePOfWsEd429CvObeEwze3LOZBGYPav/\
yPYrCLmbHWMUaYVqE4T45xkak+3WGnI2uz7IYDOt4qra2zmrhblT/\
psgfj1m1AWAT2PclfGNlpUbxWKyaqJX1Oz7kAXwVO4s8chhqS2UL4782qXt9puvTUb6utQY4bpAhRO\
henLhHVR+p+eEfHdC4RX17saFNyYLCPk0clGfMREKiVo1ouaRY8WB9NWupxc8g/\
kBi6izl2i3jqjCmiV7w3ez19xiStRvpQyOkqUTDRqyMXd7FEV9MuRcDFqKStzMgO0UJ8/\
7D5dojsD7Swxohlc9b0DWzyjS3eBIYPkt3oOhBegBUFm1bpL67TkJG903K4qJ61kJzCj/\
wQzeTKCuKWwWWHR2J33OwbX/\
rFdDOG42VOX03hgDNunlh1LrdrZ6Pa4jet3QiBVxjObIFfUvhZXxNsfipORoKb8SP/\
ZDLJ8W7tMTPrdUMwB33HQ6YZD3lLCKV5dcIiVFNPEH0fsFa282xJlBqrl1+Clv+08aP+\
C1jRX4SxbB4kP014N5skS8KPSguDUdjvCt9/6oixPncwpsyJjfpGyvzQSzys/\
sfR7DIFQiiiTjDDKa2Ykzk7hRpOpq/bvC5qByeML7kRqtWB2GS8yVKnkfqnMXlO8cfl+qcBRaeQR/\
C8NBHHq5MYyiZdnzipHBQCk11gL1OCsM2e8cfeaLJjSiCnd3x4mn5cvnt1AyCXf0DM+\
9vH0MVdnQpDyQ3+kU98xlTHBXW8Kh0KdHKPzOuMmEPVf8ml4/ktv5b5aYL8P8++8HeNJcBiz/\
njPgnA4reE/jivhmtLqkyif4eMjfFEJF8AjRNNsGwjBnIrkNTMCcaC0T0ygVUgiIiLyoPMG/506J/\
9orDZUJuiWLwyW7rhGKvQ9lmKlknAsLSgPkBEjvkJVVVLLNGrA4ZMfgKV1ihDmZ1qCKwtP8sVUVITW\
qiGalSHFFXHZAU4/W28+1d1hinmLtDSMlysrCM4hkxl8BXmDl+\
Jtc1qisROJjn2ufNuaeZo0Vnw6GKp4jbhbv2Iid6H2QJraTdSwdAqSvgiowa3+SgeWB0/\
RKheMH3UHRg+\
M9yTHgY67OG3YlL43azcDyaQiAArzLNpOD8jTi4SgkCsYocowu5YWgwJEUkBHed3ujO9EkzKF0dRGO\
/r3FCFqcwf0qzF/\
B2GxxUOjkyEgreXA7L7ThQ3vCHz9pHJJuqMMhyhdlG4JgurIakDkxCxlJbyMUrTK/\
LfnZQ9UP3uQL6HwPeywgs9zcqJkPq34sEYBP+/1lW4B/\
RsMpt1sCnY2OBg0uqpAWSdUKFJYlPfGLPBxZLoqtEWZ+\
AW39I7h7fe2YjNP3nb6LAdd0CjRpc3iibAzVJYq7Y95ARPyZ5h5h9XTl5zxj75B7SkfizdI9bvcpl6\
Py+vTZheJNnOa53y112CWQDRIjJ3vwOP82pHCbdtRniBYhJa8637tKq6YfvqdMhgI8ywkSImb0aMm5\
uTtJq2hS/02/6IXtP1tdfrX40So+xMjrCTPEGh6TdQvsv3Ae4BhSQqlT0emyXXs6MVyNUe6+\
7QPJVLv1BF1ED8dWxtrWMk5qfjd74uDSwzi9POuxtSf1a1EdZ9ybI7AgvSxB4x8NBhJnHaneCK+\
8bdMu3HPQFmPeYuvrzr1Kx0y0Ql0SwLWU2eX9vWDU7uRFQGR+\
EmIpwHL5G1zifJPGQqX5Wpb1BaOrRdC9dtKqrPYnW/+QEggqrqAcWfWmzIXbPForQ3B4eL/\
vu6PQD3W7a7pdzif8Up+\
aTds3nZSUFVmrcDHNBonuVEx7b4reEd0qWBn0SeNrzxVte3d9QaeExK5yEvJtNaBKk+\
e8V1d7T5riy2KI7xm0y23CiulFweSgZAU2BWiWYmOnN69sSudNNJjgnrIC2jJ6DzSq1FlET2LHAqor\
fpSx+qtrwD4Gn9wEiWo/7LQaT7KmaZV+\
wSqpbUpvWEtnssIQJg9tcV9cWEzgIyNo0mooUjUw57aVJMMviIp4hgKoiToPjeRCMNZqgEWml/\
2cxX+9Wvzy5veP0uL5+5sPj2+eHt+/e7V42G6p3bnllOCxKLC9WvxNObVS+\
H7u67EEyCQSuw8yTVtiKfEW5A31fMVrUV5PN9frO38rNdtMKMi3LX+d9s+xz8CKMD5pn/\
kxpWk1i75OWPkrOXFqkcDZUEjc6BCJAtGuUh04ADJv96vFb+hBeWecKUDKgs49NGc1dMhYDfvma9r+\
tPCx1or6j31kgcE2FeV6rXw5rBCjeBu+l+/n481UzSi/YR2MVscG1T7UqDlJUibhRAsHxPaC/\
ka6dLI6pPfReWBDGee4tT+R/\
bLXzlrohdzd9W0cREaXnpKvx3EizybhRlQIhoziNGOtEY6Dz9WXML0yqgSWDu7uXGR3QyAFra1BvST\
GR49yyTqB+\
CO0YbBJ1hIMi5PpvWsufBXSXmGLfi1OZl9vnmsvvEKB7PnYdlGPgcIp1i6UtmWzBjdo4Lr8iMbhWYx\
0H+2I9sn6rBe0PZd1F3GErGxKDgH2/\
9imCapnhbBbcgGIInyc4XOTW4VRaahng0s9CfkQ4FjEtPicrslVFqOZgcF+\
Qllhn0lWWsAUnB49SCW4S16J1M4zG0Huey17x3pIOCX8oPUNWMg66AiTpUnVzYecaHLoZpnWoOYa1s\
OU8D3yngQMjAPmRmKjgFJq3GflhYJd8bEU8PKmA6cd2XC4u5MNqhCitTjV9vlM5BlgiTqh5lUJRDXs\
YXiT1dhqSC9HPaiRpDjvQetft7afZOuiqguHnzwBBtt01oFgac+Dpit6n/\
vQEv7wiuze2dZHqCMlonO3ysvhUx6PGSQ5pIRsJdOZao0oStPJeZUtlX/\
eQbClYI00sdgwrfGfanuTAzvgPaN8o2d0qyg8HdzACp2PIN5DzZbkpj7EJBGK2L8KGDw8oM94rBVf8\
FWvsnhfuaQ36gjnTYjZ4OKBuMPsqz3QplX6pRB8KTIa+\
MSBurTKtJxCH1A1N9rd88cxyNk1S0C98Nr9pejAW6tSlGL0rOqZxZEk7a0V2aNDf4jKxQbTiA6vFu/\
kRKSf9E9KGWoUnSfXDcjEAIWSbYUhNzB1L1RJSOcYQINV11K+\
s1fEK7g8PPlcz70CcMViu9kYmUalqVET+mrxs8mkc4hoUWMJ46S7OBzEM/\
USsuTLRT2sXxltPnnSJdrUZnUfydiUIzLFLOTdddLppT+H/\
WLxRUbzTbmxvDsdKTi1DGk6vYZt484zcoSsOLo0ydG052Rcp7a2Bbbldn9mM0dNzpiHVHN0kcH6ZFG\
pFe/W7R1avXO22npDGAQrEBWowB91UrxoIYbCeKjL21gdXK9i/v2+\
rZvgFoTKzdOXR9LL5eIBjFYrREGovoHWdxNggn3aw3sDVEmHOt0EpIgxw2IpE0ZBP9uI5w5s2tS7Xy\
qTlSxCp+oq63bPbFFZENoMjCwq/IY+PmIes9VJOe+9Jfu8S2/\
4J3UEcJmKqVs1Mkw6d80X7sZlCPYohYh4/IkM4rjP+JTYwtAkBz29fJ5+\
oerJSMU05ihdg7TMvwv3VPKhYFuXedjmuDbCsHQktDfvl+nrSi2ZSdrwHiX0b/91bo53T+\
mnZYYN6r1S/OjDprdttCM6+WJz83btu2TSutoxOU1HAGk/HpGEvOvVp7/kPNQpGeGW5D8KKIOuX+\
uFNgjYq/7mSt01HRPK7O22bOwUnWkrc12pMJfpUv+\
tilhsn5tdK6qURsxdrdMadboZq1HAiCeLbC8hI2H7OWLjMApjAJEUJecuRJwUEVxyI3sBU2xjSl0UG\
6WueizGOWIjO19Lj1suCUWe7RRknlBSQ99ET5lA9vDJMJ2HrZ2iq7mDFi+Y/\
l2rY3UtZOFyLb4pHqD52yDCuVax3dHAkMi54kQuX74NQWzxBBmpgZwVn/aNvydbFieL2M5a6aH2ko+\
n0yf5TL/ME4RSNOh7qFrsU3iaYoHf4rFATar+QxpWRIgbEkQORjqJuBDH/055/prbXQ+\
KTIhI2pWNjjkqMU3WMChQlgVDQV9dzfuBlbKWGvZImLfqrYnF3cfFNEOgyPtLlUKxdOOkWs6X1GMhF\
0b8czBzl1/FKkAEeeqagWdOq/\
dybekDdLbTpGlbMatW4bpCQM6MLQ6aBHVnEoVWdHQWBGH4Xe5rZ3GH7AQsdIh7dfDMhRikRv1Sb8xw\
SMw3HYg/CtKNbZitOZ8nQMU1+Zp0MDtTxtb++JwHUbvZrD9pJ0ERLekKC8fDKGqW7QK4X/\
lJehhPvK5eBRecLNiy06aSSHGyQnitISYzWeec8+\
F99YM0gTcFJrMoH8c67UTzKoCsw1z0eF01TqzKEWk+\
rz7rX7mbDQmrepZYWVuNHbCqh8nllIq4apwL1TJpgUVuuvOp3oCowqTFSj9TvDETvjKUqYZxfAvT7U\
E6EOvAVwSNXWrnhFzXfFGVaJPrjfKk7fhX2/D1KFBW/HoGscZNxXvKDdZQnvwoa890GNkt4HhHH/\
mf3+pMDSA9/EZmx6U7CPp0FOkaX72i6zAZ+Q+Nwk/JQ3Bk4kzxdznIlpsSVbLMqg0aJuWnIt+\
eDGAC881NYA9X8NL0eQhXBuqFHoBFkX3a8rhBjXovdZxjn92Vcybg0ZeOkwIKdMyIIhxMS5GFV3cxY\
dVFYIEAzSB0M5mlV/+AE01vjIpgobzEosENDaVhV+\
hvEqaTZVdzkXKc0kkFamgUuqZjQxliaTVf5B2nZALWrNsmfyDTrA8//\
vjw9gkV9L99fFi8effD4ofHj+k/\
Yy8OezHdz3lTK2RuWtlZhkEGWAYCME3uPouNnPusZmAn3cxvSqAg8VYr7qY+\
onPjEwecpliG6r0k1c1RWqaEm1mvz1K8iJY0an4FV79a/A3bdSsRolXlLHPXASsM8FTdhkXYQ/\
r5plfQs1r1ltBcb3bk3gOao3k6DNXVzpsOOuT2if3CIdSG7gBCo3+IIG3FX+\
QCvxfLCkCZAYTDnfA30Yr6Le0osB4v3l9qQzeHk9DBbx1bz7pSrpp+/\
JoRzwzqKkSMauLp5bf7tMGly8zLVOYVK83r0SZE7xL4gfb5OYWKu3QY4ZDWn+\
ROP0q2uXhzkG5ChUdjW3RfnVDxMS0P9o50zS3vxOAG6IQXF5Tom6l2aK48aYXX9+\
Cbawr5VmfhDkg3g8UadsXk3nFzt1WoKsPldII3ckak7KydIfJjwbj26+\
qUri8hVrcssDBaB9F7uwBt1fdlmc+\
WDr9klYIjXAFSIlCckL8dc4u5C2nfbNc16g4adi8F3FkZUOcowWylWWRXX5e5F4i6EimtdN/I+\
2ohBb7TwXP7ub5IDtgLDjqzfHglUWcl0LeLrs/qqkvHKk/\
646cUaSGZw0eTCdsKKFX19ai6cqwPY4JpYJ41FtBxyhg/KGcmxcTCO+AroKhaI9mFVVj1caU1o0+\
qfWpNZioBYgzJNCyzxZkdty/\
UieZVaHjXov7GAiD93BY7edVurmRs2tfPyiWM93NoTdIvb3hWH0t3UIECOq01zL73MF8t/\
qfp0MTOFoB0clrHb1caLPrZET/wbV462UuC/E37v+sbssDU9YC4CHYLtejNOVlBPzbp3/\
cahcC1WwKHjhygGvJO/qgOVGwR8PTgGOuDuAVhQG9MhXZfJAQkgSUHsBIbdunMrcFJ51Xr9zILJs3+\
tHG0XY0HoMFq+\
baJDpXuYqhbMmXNB0WQKymBIfGcVg81Pjhk2S1GjAoUGUwGXmEhQWo0tHazJfC7fjPUZwNF9NUaGR0\
W0zbsw/P1NDTVsV/mHxnagU2IWpX4dKSAJn6IKuE+MAL3jp7cuZ+0pg7ntLOCL0UU4g71XucZtYJ+\
IpWROiYLnKSkL94h7a7QfCz3kiyIPbCjIlKCMLtEXsWKC710NZLSCU+\
cYkalZxvQO3lGuTkUsKpil2g9N0pQMLfL9UVYzR6fp7lpjos4UWlDHrnthfTLrLDFxqgtjuXcpFtAx\
8NZr5NoU2h4r09YhkBFmTrXe9hUXlIaVELHpeWaMzr2UvPJJc4dWRWB7VBzQYMCg4MSIDbPX777Li8\
NkJB89//1X98F5ByOn6zirykwaORN6rkUVQ7fyLKENHmZOTqGIW6SDTqWgp3hegdaYwENH5JVsJ1yJ\
DRRi1X8YMHC4ySYWhGPGMkmuO3/\
5cVRRMym5KEWxGyfbZk4GMxZqWwWtd0MJNJe3yaKxCwtpnD3PpulcOG8Zn2232kLFS9sCW6SgyZiKU\
jAWKM7DVnXzWJ/3u+9QZwMhVT5hQAq/G46MOj7MV7xKMZvp7fYqTXVGsYFP9T/\
lmheFzzftbp4ZaPDKjvl/XSiFtAmzoXiRPUy+osxr+nzmpExwPnYAll2EahM8GZ8t+\
YyeJRcM3myiCOLNIAaN3i1Ya9k4riC1LQBxeObVq98j4GPPkfOo1QZ14Wwp5T4xgHljUhSJ4RtmcML\
Uq6aUFV6seomvsrBUkGAY9h5qCh6KT5pRuo+q7PPBT4omgbwh/\
o0Q8PWF2viKeslObY83omlLmbEzouFdcgawjkRtrZS+tV2Twq3VTPEiq3EDzxYxewywbOOn6Spxs/\
jiLZk70R19lbFiNGjvQCVaSWLgg6lyRyPVCeZTeCenCEqwzEmRgElh/\
zvSnPD6Wb3HfGsRR6ZIWY3Tq+gVIDqBbcoCLuLS6FX3UraXymeW2Ca+\
LOOrIYoSpvxTWcWOyWXVZ7KPa96n9qXJ8BPlh4mba0TG2vxOkANcHCJREcbJYaU0E8rBzbenf6P+\
ilI4gnzcMzjC3ueG/\
rC8rcgIDQGZOnDBBL1TTPRUoa2l9jmkR7yBoE9aI2pyQ6xJHyIobKk9UUnlOeE/2L1l2IjlRr+\
rPgrrkRw/PL2/\
MnF1BNlJSBRreGduCjDUB9OhDp2aZ8AZZiWQE7ZFqLAxCCTvCMdeKmlJx9xunQ15KbQgazYIl3m2nD\
YxFpG13n6Z+GE7S/N4SBXIjTvunBonLGQyicUbqztYjQRJcX6Ez+yqm78Bk/z+\
Hd8em5DYZFByhRWf5fn5Pmqr0pa0u518AJmV0y0jHCgIdu1G+ugFXGsRK8p8/\
PiYYjt5KO2axlbpXcjL/VTQ3hiWgDd3w4pHOx2siKi2/\
fnroKRxWbDPoQhs4oUkFmY5jCoxWpGLAwBaFGmWSIXLp9TD8F53d7J/2CLvZVR9cO1B3wHh5Sdk/\
MqvaGuSvvlaEAh9ZzaPqyxsJZdYBSCZBScOPp4qo4NEnHppoBTA1nlujqLDR3A1hEERtDNjgFWOgT3\
SBxpFB8Xn6SEQzA7+nJOdzIJ+\
ficqJiwuozOB01CWtfePGd0VILeqA6Z0xOloCZ9UEMC0ReT5cD58vhg7lt40ZZfNMd/\
KjGzMnmwbMiNJW3Uq26p/Diy6cV29EAl68a3aiNOdvFyfBo+\
7KBsx6V8kU3qJkUx5Z3um40PJelQh3TQwDDId8REhlUSpxcGFLgkCGzkcC3n6ug4/\
IEDDrQV87XQx0lPEDVjDbsy8mg8UD2S7PARTAO6sTjHXfGZZuHjcO2ayuzC/\
6SvJTNyZWKD3ReKBdrH6FJ0Sr/btsNdepz9p8xhe62NaNixGvb3MuCYdjIVCcg+\
ZV8bBJu2TiGQDpkT5+Lfzv/\
siPxn5aPygoeksBQYHBbanhSMMOKeorIme82vfu4VFeedOx1BFRDraNdy62Vo0SalkUd8+\
bGESQqIpe17A0N7tktK+6OvJNY3v86ckfH93HVGYevHQ/ypKHP0LMlxy+Wy+\
Uehkz4Q1qD2haP7Xf2sxL3Uf7WZMPQ8pWDQmOg8ip2cYWGYB9qmOFDwODvZF8I3DxTc0+\
jzWqgXoLsaCWVdBf8idbsKWTSXM5jhDYVvWDGgi/\
MTvXeE1oHyzpZ35koQhnKohXFQbLL5wKs1WKQhbZXl06qpXjMNxvDeQwFcqpxuG1Fx+\
BFdWqGEs0NSZS5vcCP7CUlH230yyzG7+ef6svBx5B6iQxPsjaDpBGR95D10x97RaNoVsK9o6/\
Tetc9MiIBTCsZWN9nrhcvp61PVsU9gIBMzC+\
rEGVA8nFNOX4OPETe15CC73YxSZw0TJjP6mDxzdZuVFmPU6f18XO+adjNwI8V9GLtRDNytO0btAh+\
hlu1lu92rPGOwEr6MV+Dz/\
yqQJG9ifJtpazTr5pTFixCXKtGOivbFkYnZffUO4EVrYeVVxWT74co3dtGGfaHhFV6Fmit9h174yPx\
utBRLo4FNT9KZXMeNVDsrBZ3Bx4KKk8PtFBAWsGEd6hR5Ssf8lh0aVP3ClrF955d0/\
2fP74wnIOO0grOBXSQ69egGK4oybLlbuDvSr39lP4eSX9U5ESWYnb1QROHZUyf7n+\
kVmE2aHP3SxKBXRVcjWO4/BuVK0oyd3R3C4lg9tROUMnTUbZjy77WjBnAEvyqpOOol+\
LgU5PMvfSVK77gpId5QIJKNRUog20l9JLsUZnyobBSoHX+\
BqCTwtblVYw0hMmeyiBSg7aFO0iYjImk8KAOGXj35C7AFxtq4ZG2zBTwXOkOxZDiHFl1BKgRDj3Z/\
7AIcjxXu61TtTw1jas5d2tycrCMsnb6sdhBb74JR067/\
MhTJYYc0fUT5pM6uK9mTAAPLyc0NoZSJOwFXmxqfgAXRfiEPgVNIzDijbHztKkafTjvoDpaReXD6bj\
jiQ6iO0U7ScOz0HMP8UB0rVfkMVymMv5tWr0mPDWi7KIHcgawgikD62I4Hzu41nzmKLtBfzstMCTvG\
HBXZzRXv6+UXM3EMVpkzMxGcaNNFZhEHeEqaHdIDD7bmIwr7w3tF275Ll/9d7G0fOHUmFDHjXeoGG+\
BiJik+FLprTqw4+JxtYxwOBYXYj/b2ZZ6E8wfiIboTdd13xgYagzZH4/i9qjqGIEFY7+4FZZZ8zL/\
L/nFzRBjcuZok39W26XdL3amr/bU99U3veelkZ+fv/SbT1GcN5tBNtBYlm0yndI6ji0GWcCBkxJ5R+\
0AwdyjZKEMa20gI0RTsowUgR0mOyFZhKA32GAbBi8m66Y4QF5AWZ1Gt2o0pKZVKsHHALp34t29/\
efz1zdPjR51m/hkJZVoliWxTdCkbFgtis1ZVJkV3ahKWawHD1X/Log5dhdf0r3MDbJ7YU+\
GOZGHWNFX9e3BNkmTsk4OxSSAn3IhDjIJyrsgZDRA9pAZGg9GeO+\
bJHw1kcRs354LRlWZqjb24a5kWGDTc1O2dmCFquC2cBgtXvfkjcyIRVSkttmTR0DzpSie1QcxdPqvX\
Zay0794xcmcEZRGXFh806G01L55wIMn0W1bpxeFRkK1iRsRS7NKpfp0na3R+\
rurWgnUyXjp9RKn0wufL6ZV7N4jOcYPB0zyI4KNFbac6b2LDMAFTEXbKeakUgp7RXNEJlfEFN9XhZB\
fLY7k6rSHn0werIia1fNoZeDVKdsCmS1AipSVEMhn+\
c9yi2tToiggIMVTYFKbJwWQSvlvZXQGwjgytN3w0Hmh9Lmg72Qqh9mImPNfqdUGqkKmtOlYSCJMiDN\
+3s/FToPl4/\
Gd7ZaE8ufW90AVYTJ21hopNH3rVk7lzqgPIVJdPpwrGgoOvKwMaZ0Pn4zejQXiWqG34u2I/\
QZk1KyWIza9zaONseQYGc36zWGwWEv2bqzjykkOSpXNeWUqxHJcj4OG21JCAyXSPCbgszCQmF6wRDE\
GBwUuMsNToZ+mZy/U/\
OzoCyGQjRa8Y7EG94fgdbTRklNBV2bUbKZZvOgSpySz3ZnXEHhu8iUndD51MbrafXD5O2OJ82quKJc\
kd8GMe5fwsm6y6Vkqy5IQyWsimZI28lVbShoiIj4ynBbm4jLCRfktML/\
EgT7tLBWBVOmNUg9ItuCP23+EIVtggqjjdyNv6ujcIVyZ94Odj25va59L71g7/\
z68Wb9MJqIaegwQewAYTr8etOGIIRP7ddrQoD8m8V1qDzcFLIEbWirCMQR4xjT0z7hat1IUCKaS9hd\
Uk74Qm84E6l34mnLvCBGDyqt1D1IVaEZmJVg2vDpFIiQonBnB7ghOycAaDEC/\
rK7l7g3Sv9CMN2AlArWxWzOBpYMTTcNmRR9KGMTVAjpfbqbuXGU65K4M45/6LCo2ssjyFKc+\
HAxNuSBJWwegieBj59FkQOZ7QZKJA992K0I0ULlPU97kh0e4BsGkfFb86slLoZshrU2/\
cefsIiQypHTzBY9A4vkjxcDxvEX5ZdXf53Us1ApMGxjXuGPrIQ1LCX+\
Ria63Fza6AmPhWNeGL5Hi2gaHOdEVElk6veEEgfUyi7MU3FcosDIDT5ky/+\
G2e95DuDSeUgFpjsp82+vlAHq0KpA9oeJewIeP0t/o8AM5TX2XNA0W5rWo/0dh3leuoTR+Mzl+\
CsbQmPjuxXJzOvVKVJEvw3MKM+g23wJstNYa1yHkg6mnFV4kdFuvvs+\
9C7TmNyEVoSZJZSFnIa81zMKJdzgICXVzMfmrYdmn3IgjEy2zaZ0rTWLNW0scj6ujjfZG2cm1zl13F\
yDmlA32EHBrQiG9v/\
BgqTuvnF7bYNy9dFJoi7S1wmx0YLT9xN8lLM9PHsQJBcWNLWB95b5CbFBjm8SKG/\
DnqTWlu66Ucjo9ru03+4sdq/\
4nD20aZKP1rV33BHdt4t6U9KaxvNphCdv1qJJc6o7QhBVH7CRiBIrxxJZMcL7OMRZr/\
qxuV507KehvSKci8lnxSlkSQT380Goxi8iRSjzs3hxoIWXPquuBVKYOqpijW6lKLkS6GWPWLxoCvc9\
cc0A+BPbwCeD3dGagj5Zm1SlMWpV4cpVv1voZKlUZAzbFNMVerRjtYSb/\
LStqQcS0z3IPdtIJ50YSxKKqmJ6gFyujO/+\
yxrjW0aUlUphlQ3fYTxRdgyKTsQXZtmcipgYWRhvoflRBBqHigZqLMZV96fWq4jDco3fhZ+\
JoppXzQOb0ly+\
gyjRYYO6wkNso0ywwJx88vmmdRFQQCDkmFvM1Ne07LvG2c39cgJm8Z3bbxGWfmSKGleaiFRc0AhMsg\
WZ+CvfUZaBfZW15u80GXdTLfIEbUGdJMgPFoebYycmfRToaS11Eilqnvq83nJgokVM8dKpN4eun0Ce\
4ziCdYyejhKEzF7akSynC8/LdpG1cmFsN9ILx17ZnWhFZS1WiCU5DmnzDRdBAWkxcHy3dvs7Ta+\
pKxEyPnkDOpVTkNo0Cer7MlfGPoOdOm0e7rARUZdvwRxaPifS0y2HZLcSztDipZu92lOq0UOEsFVxb\
eI5ZlmE7Ga3Mi54h/LNiZc8oapgNvdBm0TlKo61mhbmHUagEE5+jGVdsd5564ECSZRL+\
ZnF468agB9+S9wbqS/EFOtnJ8WTVAGqaaQuYjA/\
y6Cqh4NOafyyaXSDW4QTZEX3vpn5QWSkIjxc2dMnZiny7Qyzo3g2aFp/NqTxJZ3bp/OyLH/\
ygxFXmDdXRw9l4DdLOTyPyg5TBtGMO71p0mbNq6dVEcY4vhb91bLS7Uqft69HtIKCGmzJBK5yY0NEn\
hmr6cUToapRjypnsaoRD+n7o799W+TvZAig67ZNiDByWcUSLS6tnbp7VhJVrj2y/\
E9CQhKexhUTtuFYi6qxTjxsayAJjS39/dxbN9ga+s2fdXAkyBMFb93V0F+N5nl1kY2/wcuFld8X/\
5s5t4ii7Bp2ZzrK93K0K4FMqjELnGDnvlefnp3J1a67QT3hnZ8jidxsSTMwMMf4/\
aaezby3Lhvrtft3zDRb9SdnW4K4hY2ZwmMgWOfY/\
TBdksjmzG4GCHAS2FBPhAGMsnbvKl8EPsdkuxYTEGHI+CDiWG/9drsCBJmNG1mVQfl6UY+3M9ujBQ+\
vVmr3hdp0uWgrLMWVfmDBH3/CHFeSQX+dWZVQhtgM+\
IqxupWb5DdxbYIlOy8XbGsS32f6ap8xOCqEBvr1xs7DMCFZl5VDnJ8f2RbYi7caq5Vt1GOYH94TPq0\
YoAbsLcC4BEeRnF6yV3KTm5NCo52+YzfBFR4QU2donQCJS7PiGxYpXeef3nhHKmUm/\
WBvCZqDZzQpP3tSBbKbCEJRBKxyY50Qi4nFZ6Cn5ZE0EwNtJMwY49HTRFxkGYRlrhvb9avH3/\
4cPDL+gUyQj/Tx/e//70s1AxSqzFIi4nco2ILc+\
KKKt1APE0OIgDu7vUw7CTDDig0t0DIoJpioMifauBEHmFswVtOUX6QV5UXo2JyR057JTpDrJewszci\
fY1kVNqscjowzO+X61GJm5QqdElnU9zyDUN1eZMqbfyJ8I7rT7jpcN7OF/diD8g3G+f1g/\
1nQBf180EBTaAK6ruc8XREkDgZc8rHZ1SjIBTYankEtOdyBJ4ijLuPXUtMYE6ZyuVqZRvKRirYKqgY\
RVM8bWVcia2tmQwmXBsbjPEHy81RYrcXsaTQ7i1aw8tC7jlEAk6J/FOpH9gQqGcrWw+QY+\
yFkiOYZEjHTBhB3zy18aZxwCJK9M5WFDmfZUWO96msZdMV9JXN9l2zU13mIKrn/VBYibwz+\
rCoBoaCEu/biEiw+\
wUwM70edmgmqOYlcxLFXCPckGsdu8jJA01h7TCi1DZi21uOAo0DwkKgfabA3JqM6IilT0y1BSSPlN0\
QTU01fOjIjPsMcNH5iyQt6WVdSQ23oBPabSm1l5XTgiF9e9AGjAowmGmAd4hDqojddr8+\
MHPed2MDSRAlB2KYMz1yla89LRh3Ur54N5jaxps6qUcjdv33GtAf2913p1yXRJMqJUXm08ggarg1kY\
3BwoKOZj7QNzhQ1X+NTbvh8BAleImGX9iGaBaDOdVLVCAbqPXNb6aYDjA04re6T9bzlv36dn4+\
XsNOn0PjpYn+4VCJBXHZCc0DX6T+888cWTAQOm716zQZ35fvEaK5BmOSHDA7GEyyHjjN+VPu/\
MB4pcDoT5O4LmCSHevjKmjSwjLiK+scEMTcX8UxtsRn93H9S6d+nq/\
nF4FRsTwp2qC5fBcKpNV3NQDABS8BXZjSjqPNggxZ1eVnm8NUbin3ZjMedUelX0mU8pbRhimWNiE1T\
rKq8Wv6QGFKrNut1vRu/\
8oxK8pvG86duPSXlk3q31JgyQANs0IRy5l8nuB9EIzQJ0RW7cwIIyHMeR97oz51AZMUiTyzLiAJQDh\
lyONDHFiAEwfn8+OmOb22lsbmNSqq/TmFbWPiKTaHqHtJrlRUKKSSu7QpvT9jvR4JMTLJjdTJt/\
rn8EvK3F+XdMVYN7KfhYlDSBoh5aR96l5rr3oxRZB7aPFhWHGYL62ZRkjGO2iYDEwUrgTdmCgwfwGo\
URv9+1n6LRPB0EmYgCRJfZidp2w/4VeDbeXnmnndfJKDOXTufuUIn3pJ/jIBtAG2UjTqFEXsc+\
Vyb8uficwC9OZToa9r1DIsCw8bNxCNJk0S92GsVBOwHQnJtdykW658AIpPIRyNxttQh9kGiqFCiH6Y\
Bl8pQbXy7ybGn/GEB2Ttc/Nv1PsnAzuuq4W31x2IgL7LbHauIkh/\
W2VvrRJgVsLCOu6gnbccIcsuCcQ6ts8V9YbnOJTfWmUffrG7eAdSIyOxih6dTbshIULVSlnNzdTkbH\
newlCxnYhStGGQDh4nlI2TXKYgXVqm1wlF8XSW29lJK7HMRMrBIrC6QkhBvaIiVGCByyJEyUMsY6mD\
/y3Q/IBAsYLrvfV4oHF4SN7yP34By3uq2iVpYQE8oV9egBEqOPGGr5fNb2br5Jj0YMBcQgHmSqMMyn\
VKnctixCYzwYEy3L2ASMpOpF20DBWmnMSKJ9UeHF93p/\
kVd3nqBPryUgY0ynLPKFVAenfdlcLhXjNUUyUeWqSk3wr5vfYWJAZqwhhECLzSU8Chdb9bLZ4hZvkI\
+aXc2cvZLw2lVZahZYKVTxEZBulN52geGJYpH/\
M26aqjeaT5FboNWAZAnImQ1P4ogJgg3tDpr7ECFNjNPP+\
HHUzc1vbZsb5Dj6YawkE33iypBgW4095Bm0PI0ulQaBwb3UViZypCIYPovJkLjomxcVORDSuJF60OL\
Z17w3OMX4Ng7ECVTPni+/\
TRl6mBxvv1tw9yHAml9DX9mrxm2hYrXQCL9BcxG2ouY1KOtkRVO7Q8ZXlkWGrzoOW14b2UnUbBRWrS\
VAMBaWA9PW9NmxK5Iqn60mWNBlVBiD6aRvnkOks2SJGl/FHY0VsJWnQqgPOSXrDXVPxmGjdQi+\
LEo3Yrc1m6aMRfTDwBpBGb9Hp52d9Ku7ZxTfWatkNbmVvW4BNUterpSqV0u/\
zIVLyB9upo4hwuN25N5soUDtFsCFE4TCtxI7GVu6t8+\
Smz6cTepuymwMbj7J9i6GVQpDaRBkWRi9R3jfsnIMKV0AX3Gc1PPupnvwtg7XS9tc49Tm+\
Ba2q5cvjC6hqCje6vDoBiU6imbkdNzJBky0mLFZmIfD2mHx0C4GA7kMqD4UHBSZnoYe3ALV9PAkRZr\
3/mgYxv6hoT7X7RSJlCpoq//wFe7V6BgOF5OfUdfI5amtNIt4VfE+o+\
ihizps1OepaaoVQEEzbWuNU0i5gLzstBsrBr61CwPp1/O252W25Arbwmg1e737/\
N01WOVdQ6HC3OaSFmPNxfOInJTWYtOWIBEV5vexs5RrIda7W7nahGXRcVAIuWLecyF4tqQkTz8VL0M\
fBmr8Geaa17IJn0xcRb0L7ZpysUuWUECRSNpqGW1U6yup5kfI+JV8hVTpp7LW91F/C/\
pjsaSIQk2kbf7K0If0yyO/Ue+lx/ZB8TiWsO3uFoUp3QVmIoCTa2+\
QsPE23IXdUxoQWpW9icrwOOKnVtoUKimBhNJoBWa900ghWkapNOh6Lz9X+\
XHtlTefKtaN9PnL8Zhx018ZmkLtl4gSVAF3y7KpTVV5tfHtXLvOmyzFu8liLC84qZp3mdyuycKVWUF\
vE/u3Wb2VCEVuFklWrxd6JNGxksQJsQSg+Kg4vn/JSBDnje+8eKTQi0Gj6caY4w0v1/\
dxALDo2zbEQ+Dr6FGTBK1X0FQMNICOUPMgVLx31QMW6jaYF4+\
A0wBsHYiJQiAuLBweYxUuNBwvQXIcWcfwt48jRHgvIxbiV7IxmgStTvvvYeo5fVoIXeYLLzUDUDlzS\
0Srey0VlSklTMDmCFK3kArMuA5SWHDQwfX8YWRbm8R+LbOvN/\
pTS3Hjoi1kxBgQNBAg0KxJDTIIhA6kD1mDbWB+8Te/0daaZVH5Jesczma1hoJ14kFcngJRsV+\
DBychjvYsXOlBK6zu+\
I7kVCU9sNp8uyNnM1JUSFUDdtNpVNoB4q4yuzHiKfKuJDSI80GmOmFQ815wSNjdiDCpZ+tp+\
iUWngOgB00vXV/sgmZy+smbTwJZHvZgMmqhSO8El+hKajb8FZT+\
CcfdSo1z5p7ZmIaw90c6zBbSySg575Nr+\
YY6STCstaxj1lXGKChP3lifRxGnRq7ff0f4mOgzLxVeSHMF5SAXF+LOscbG0+\
mrDKihXm0KcUrgpWNvkC6++CqhsiaVameMUWvy5mZEsHeNAyTCP+\
VrioSKj26Ou0YYOqc7XLHDJNbhPoNSB04nP54QlfigjyHAhqWaeZ5lasIHSQl98Bpft/Wb/\
aaFUG1sp4R0NqKrtv6ywEPCc62q1kk2oZ/Pa1DLzujrDJrJ3IpkZ0XDbdt/Ih9H+\
TXdwovJyitRZi2qbvWAUOj8qqjxSVBU4s4VDaIMDguzcNcpgrrtVmTzEaPbeiVeyLdyAonFJGJOumX\
bqfoCsqiJPhvMWe04rwj5Qg3i+\
6cMwUqwXgZLKSemhFrbShrfJENcSyIJe2z91gcR6rznIi1Nbk9KphE8Dqd/\
dCO3ZcpT63hEeSULitMzuAZ1cnn1rZoviDFCwDuybKbqWpvBALiQKfpKkCxGCJLLA/\
ZTgetdtRNjr8hMsyD0iZNMHsLC4BTWTdK3PTb+\
jA871RAVdZFJF0DyrCEfFk8NA1151Jny8HXhw4igHDLlzFi4YOHHIYU98D60mmfMMqHKb9hEkg2dMA\
Aw7Ke2wFZSrFo4IpRGIg8c84Nn6MZm4ddfyQpQv0XBgM1PeyutRWNsgYl6A1lRo2CrbIchSmltrRtd\
CM+Q8NthIRp4iYpVrShgXpLgzdOlGKa9gT2utBxPdHFW5hGtl6UIGL6Q12NrIzo4SR3PqL4VeHxiYd\
fyHdoV06vp3S80D04lV8NBYhENPRQGNwckQ8FadrI6R086EF6ae07jmxziUUHA6OZDSz+\
Sdc6l6DR5X52a/UQpHkZsl71Z+yleKv4VjQAVEgTC0TgiY4L6MB+\
9iQ524xCdWYcjOjmpUkwLLdMLqXKtSStM8xtHc0O15Xe4DZdj0K4K+\
sOoqaaCubaIubnqwBpz7LLgOL8ki1S0whI1GsxEosPL0C6fKlJbnmQjQHXxc7asg7pxWgwN8YShLg2\
X/HrgLUpR9qpLXNzyI/aCP1OF58joSzNYH4grwULN8c5c7Ok6X3tfPlHiNje5aOk4E+\
bgVVBj8uTOHI/\
dJmMaRWtEYCjr3633de52Y5T57DfKJLHAfHpAWjkmF31o8nOYyzZZaglGjlmp0mJLcgu/\
GUSNV4B9KIZ7owjT7zBMjGMmLBpQkStq6l2WZgkqdIY/\
ERnOsSQo96m67P0sYomlDftxM3zx6n94m9ZF+KStAm2+\
oT570rTDoXq9Bm5bDdTFlmObPNE3hnFt1gBGAzgJoBKQ8afg7WDCnnqiVoAPEQVmCYznhVw5PEalSK\
8s/ItvxSVV9ve20uvJIZdtDD5ktkG43xf66dZU+\
p8ZqapRMmS3SNMwyOopF1MKcDjvYckANpjsfWRzUtAc9NO6Fl10EfrpvqQPDIHluV2Qcw4qhis6wVO\
feyf1yzG3jQ5MQBFYDeXl/ajmKSa4DMPwsw0TvTb+oo36KYARvZViQ0U8a0QueOD8DSD+\
IzO7BNGd1hiIOIIrACD5tvnESZVjZk89cIffGqkYI1i0QytKrtmEWgObVy1HBMRyv4+\
RIfuZEJjt4G4Jpw0kp670UQfFj8I0CsESzuV5JibUJcCBrag6VKY6c2v21kkF9SWJY3vyWLQXyOggg\
BzJfQlMbx9My70NOe+\
ODLF2KkQ0RvEtJZY3si0V3ozQNmRj7sQ4mznG66leqlG5ZbjnIvMpJcdK9Ai/\
71mTWAuyymRbhJFOqeiV5YCz81ec6ZZMcmpH3QaaI5Veomfb1SG3q64hEXo62DzBBEppJPy8cVEXl+\
IwuH0i/POoR6iu9etgpJ6Gk9mYmo4IM1MzhyDHez7rajwkyEEzYy10EQdMAek3uGX1fdMbPRnwgHO2\
KSCLXgsQVtB8Z6DaHqS1wuIHK+jxYtUjTMxJGqK9VRg1Tn8+zNzCUuh/\
zDpRaHHqUHXCDCtnbAvLQdp9cCc3GiyVlu+\
yuaHew8EYOWl8ba56irzLHHxoH17IUZSt79J98ifBWphgX5cxxiwzn0oKTzTxrNKvb9mdiX0zWxaWG\
ZYk518JyZkmxeql88uTTURyrpUK43PqsPbrW3xE2jqY9EnOoMIwM/goSQmxAs5e/\
kUnyPbmNWl15fU8t28REzsL3rjJXSfgcLpgCnWnSkN8Ei6YrPPNzK6WbpRVlJefAspojxB+\
0QaEQdkuQK2ULBrLE4pVXiw+BrVxhJk2YFEF9YgZvK1fLdA08nx3HruVoncxbam/\
SthH6HlCgdfncrl6fO4sJ7Whbn12mx8INYs+za+\
zjG7wT6jvUpthcbXK5pOmiSmNhmGImnj6m4QspidVRqHrPMCOVY72EY6scv7KddnVKpXx7m9MSCu1s\
aSEV3Y0XnhAzAbfrYmAqHpKVajpscsUaVdYSslLCTXXCUMKwD7uEAV4BzAMovBa/\
vfnwtPjh4e8Pv7z/7eGHxeO7xZt3/1h8/O3h7ePDR/5x8fB/nz68ef/\
hh8d3bz78I334pw8PD4v3Hxa/vnn37uHDUj719v2v6UqPH9+/W/z++PTz4unnh8XHN78+8PpymV9+\
eUzX1wsvF08P7374uHh6v/jvh8XPjz/9/Ms/Fn9PF3jz3788ZF3ya11Jk/\
K5nctf0c9VF7J0bUCFcqxa57Bchvknk5MR3J90npBGk0gKvtOotQJhjbPUlP5vaUR2BcJgRIEp+\
CTH2ggzwl2K3CowFAU2HcTSKD+\
P6YIxU6Is0qSNSxEo9Y1aF3VA75Cq9D6fkzEfQ1YgRgVfUcwWRapOhMfgVddxA3L+\
34oH2sxXDqPYXdQBOO8ziBEA/\
ug46PykVSrI5IcC6OHKW1YBDSXdBmQJXR9r46p9YGVXCBuqizXLTVKHmHWxhV0njQRxrI9Yp0XE0uA\
lSjsM8G7kRZrHHxj+Oj1inifKnt1aUYZFY/k1jOinA52LSOfjuT+\
rVptn7Ocj3hvxEzOfANbZRUnHE4g6CTei7fTuMvMvZtnD1xTU4XKWsNUcS1ubX1jhHX1rw3H6wBfvI\
lEDVCr7y0iRYzCzUR813YNzC4Ce/\
L5Qkwa6Ryo429wsDsQSq4qONAsDFWvUE3jl4wlaqrmxetr5ucUSqCwq8rD2Rm0626SochUJu05Kj2L\
C+/oPyT1Sii1gHYT2CF+kK8dhRkWJ6Kv27u8TjHF3WL58MdOL+1kgldIfyxsufyyErbHaggWt/\
1AREAXEuOT0TJhdqeutc3drZmVAB2OaKETaa3FJsBH8MyNsk5gBJDa8qxefuBn8l+JFaFgP4X5Yp+\
hb10XWXgi1sf/8+5qqsLOEFqMHB06NXvQQmO2+\
8Mrv7ryUiqLsF5WVjUJRKbHwzEofoZxVhJPffjZkmXv1JcYuENdlJyD6U4oUNxCk8ZKlhVcAfODMbz\
aOScxxLKErSnrVjjzq1737ZA2cm+NnaZ4+\
VzrGmO7uvbR0LaxMdp1ZgLmxseXVkDxdh3HlVfu2aHdxBNwfAS2THTi7G1C068gF8yB2sRamj466JT\
Zb3qTop9xPY8xV19Tb/ZWXSEfM0HLpU+dkL0D74Hes/QMKXg+\
xW6cCvCkTY0rwudorybAQ9klBNFSQv+\
naFOmsqu5YrTnV0BHtzHpYD2GL1omZ0rsaj83GOTVGuAaAC6ytuvtsLDLzwdD/\
FhVkc7zBpoq9gTldLn67ppzlUBkiWB9O9VHFHVUpm9vvMSngHLaernKFyEsShu/\
0Ko1pxdvd2S2YQbApbIV7JY8rIr8GyXegUPjlojZSNmn6mUGvwNnaq6i2JcrKAiENFZHCdv4oxju+\
nXOBTF8Cdh91kCWXsz4LT2s+0G6HwpgZV4UqFO3U07EBu7aXCMY9nVBiB8ZdofFG+\
oBuPg5X6i9rgXNp0dRNUzCAPc4WGkfBE7BDVCuS9pfQfuEIe1FFohENF6H1IFrcrRnD4CCIJz3mybD\
GKuB5JJqcOrtKxIgPV+au26LdvXSxsHnjL7VCgn4QPTZD+\
dwFDoPBh7GbELL12Uhwe99rvLIiIRTuOC2IjmrNcRhTSXW7EPc4RZmq1CY3AwVcqV6drA0bdqkF12E\
MaVDIk3cqUIRI11It1cjF0PhU/aI+gIN9P1tulIe8WlyNr0nvtP2rkUiAc3nKh+\
yliHK4SZVOllkLRl6jJtLAZEpfguhR2YIFOVFgoqdzbce3MAFQzvJHF2fMNOqdzFRJDBYvIM8CYwYy\
ohXARghpVcf7cZ4FElTVOdPQDqQ16SgNthLA3bOyzHLQORQvVhbImUPHG/\
1mOlMlGBezQD8kpwnCvvay/\
7b8VQ6Bk88JIhDW0PYs9nxsUOpzM0bXF7447MCuUVKnpC1OGGitNK6hcMIi0EiPYQx1eKG0aiuo5bi\
CHcdqo9ohSIb5tBNhYeyMpR9WezppLaZ0eO+\
vmUyp2uJz0bM5EXmVP92p0Dh610eGd4aWl3gItSAzcEo4PKb4QP0IRmK7F0dfKZGvK46TibnSFG6MB\
4JkMPSK+syS0dwgIlVUYtschwy3N/\
VgOnjwy4sZRBKtNf7qlN4uoRuS0eQyVTgY3rz4gkn5RUkaB9tIuaOMwd17LW2j/\
CvZTPPcjIMNnwHxDFZ3+6quPo1HIdNPnQ/pPrp+WXwMBRDgvKbfWIuUaPwG/\
sKwcunII6AA9E3Kss2+Nyp++\
njGM3goLDZMm6r7RmebFlP4jmXedwvUdscxS49mMk9cFBbAkMxdykXkKny4pQcwSlQ/\
dm88tGJaQ6FNO5jOvhOm52IclZnbiDmtYXmU4tWJnQBcqbqNqdprdkZ0hhkINJesf5Z76NxoeUx6Bl\
l2swbKwhv8nFtwBG1L+\
hVpWetIFxh74kWsLzfKGMU7faIY60sgMheK64e6Eh6mqCj7SXTFfJcDoeptDm+\
W528QGYltaDYjE0mrBAmgoKD4skkGf7EVIsMFapGVIN5NqQdTBtwjpi9AadewhyT5adTUhA5VgQKDE\
QAKmW9Kp5M5akREwKp2ZTF91aj2jgKysiMczEzE/aOiZy9nw+YUNjcmM/KQt3cCY3ZvtG9Km/p1H+\
1UTjIcrjqoqhPnOVmO5MCbDZqgf6pgzFyeYeQ+BLGbZUChOmp/\
r7WcKoy2ZsNjpsZDbhMIFOYzFONOGPLsia4RBjLxJOfu6C2OWqPRKrfddNA4BqHHeYRUkymhPCzSUH\
jzp6twy3kGMdas7Z70VR/r6b1k4x43wVJ4J1SGWbVUvMHomWOX7KZUzdrtNpsi3fdhAEZv2WuGTe+\
XBE1evU/ekvogEC7TZdEM27OnqvdfRp6uJS4VnNhGpQVNqiUFBs0tf04QJn/\
q4SW43xOHEYrNGUw1ahiNMmIet2XonEYUJ/\
GkgTxrVmDSRZrTlhYIZJlCu7WwpLgsuBXP2Oyvd3kzlplSblxqPj73dIY4tHdGm6h4LdKmtEOdNZtU\
qMy1AoGFGauNbZvjJuIJ3EIh9GNighc5P91dwpdCCMtGvBM5wgbK82D8lbdPB5xhJG80BVbFJK+\
iLSMIUll4zX7Cbxooe4ahbuw/nYBl1ofKvxZvcerxcFB86vbcaeGqQVUAobMPFrMqF/oWRZ+\
EOUAmzdrUvhQvc9L6lCFRSIbZsa5N5vYY9OLLvL3i6JhspVMyDn+A63V/\
jYUUjbsXRp3uIUWYLYuxWKRDuCjoUds45Jg798o8oFReo2nPA369lUkHHd8zuVvdLOl3LGCzu0R0c5\
/zimZQLhh6XelxTWEyGQQcIUSDj197NsakxwfM+\
C6DYfIlpZuoBjuDII2tRvoIZFavKy0BXeqFj9vhAMrlf3p49/DhzdPj3x+0g/z4y+PTP+\
Iws0zmSbK2Wer5tXwFVgHFEEPw/WgQTStzjA1UNPjpF2TKN6ee2+YPGy6o5xIde70xPB4R2RHW5+\
R4C/Ihqf84zlycgBu/eKtkc7pBcEbJSG0k7iTVi/FuyBefkM0pvn/RKKeh3lzvmp22rKZ9cUPpCtZ+\
KzIruZR5A4cFa9us0x20PgWI8RtMrNZG0M7cTuaMa9i+\
R20iFlM29HPUActD8EDnCM9UHH7Gl6nOubH6BzmlrB9MgMnMo5gIAuly7eNZqg7yvkG7+\
pzvMr9zvKLNSIJLC+7biczZ+BFm75hxqS3o+H6lbJbL3gHcjHdiravIX//K+//\
UXlEWUr4O6wYjKMt6j9qvKk5SbtOZw4ORD1g+\
6xFzVmU0XfKf76WiV33FhweUgxHpuTumaOrumjyZRVuxNJpBgowL91c2Z8XeomAtL9Jq7FHShtDtuC\
Tyk/I8YjTUalpbdokU7z43r/L0lQOnLGzn5JJCprRakxblNHDE/i1uqsiF8mtmJy1C5cU0bCTjySq+\
iGKAGHckC/A08ByBJ/Y/fyX3hs+oFGQqAaTwcCM3g51xFnSLSqi9VA6XHA0yW0whk1tmqof5+\
Otv7z88vXn3pFGjgiwDd/hYi8xKDGHMWo3KdNJebuGHxx9/\
fPjw8EMkML4GxMZdidjIXaOdTCBwsgsexDBQtxpSYfDLQ2mL/9hfloavmt8qHv6ZZ7WR+/\
QGlTDBAMxpU3/qiegWc5M5b9Td2/Nv81eNK5mfikBSVMNRrr91yMSbKALVwhSZk0+\
59i4ERYhePkEWPUASyPHZQ1X2dR6mvcmY6P2oWpAVKMAfW6NiDfFnV3uQuMhhKCm5bvcii+\
RW9soyX86PLBwY6BccxO7CJFlqYSxoO2qTZF6DW52S2H6xgr/dXxyi4SQ4HyzX4yLuyNqS4XfuTHv+\
hbR+9QLimuY3UFo4tEmbtjPN5r9mwgTnCWGenc2sAiowlzZt9oQGD6usCkpTuI/aERQzEcp5vzYo+\
gq9DybGvKqmkehBo0ul42eEpnGY9Vbjw7dG/5gLWiERxE+H5DVFa+\
iK5GDZKZcdjEdfIUG9YQqNxux9F7vRmniEMTylYibXjJadPYifUVutNLySQFrKg6F97e2ZoOWp3e68\
u/KVwtiNbhtsB8Tr0yCmj3wfEfFytLLNY0mrEihOrII5qe/4zKZsHi3KYCl3wn7ks9g3JppUgd1qx+\
WWXQYWiGKUkfXvu6D0qCQjYAGoANXy82RE2ToEwKfv27ubqxRyEl2A2jVwtUZlu8eqZNVws0xGJqjZ\
YhmkPCbLicg6Cue5sobuaoS7cYdaycxSnbbzvLIyKnr7tyyn4/\
ptmaNJLR7O26g7tREGqhkhm7ktb48eN+4Xy5hh486ERvej1zcTPMWDrzOPcY0CcCOrQ7NJIK+\
GrnI7Rqvc3vVcyNuLGM0Zea9I3EcQgrv4uzv3ul8w93MzMcFyseTF+\
aWWwoXykF4SyyWvxyNxjH8Ylrl40S4WoCAu4kgAO7kYUkYT2VeRxdYmvKsNSz152O5wZbigfaZNrW0\
7paS5jcSTLYEHyiNl4QfR8hz/aoit5wKKYksG0BBF0dlVy1MILwEgb5cnm240tqU1/\
TkO1tnWaqR7IDBUYk0Jgo/VGmRpgCIF+aIvLaL7aIdbBlrlL91Deh4HrHol8wVsPF/\
IcyezyRvTITrnUp0Jko5L11/AZBLTJENJ/\
eBqr1awlHBt4tZsJqiNVSafba3yMCEeyxAXQoT2csn5XpXib99uoI4oS/\
360dAU88wCjk2WZmM4q8oR/scc0Ma+P2p0m5btOTlj0qHcCEkL4cs4tRLMCcSY/dJtf+\
oCowZ5karPKQtG1YzMK+\
kI1Z9NXxKvLk94zfQcXjwnNNlXHw8MA07LyXKEmECqNRU1IPu1DCTAvoWG+QGjaoiiKCI51YGz+\
YyCTm7GKFSu6TR7FoJB+M/MwKTaW8DRJOEMSdNkFQtmx2ASxAynj4yeJOo+\
5iS1gFfj1QH6aunJvFMp6s9fyNIQx84b1RQubENqre7kuVHeHEP+Yotf2kWgxpHLM2wy/\
yaRpMbgJLE6XIFDjmHBDDell9R18EX9oxXqTFGXpeN9zoHm2NjDxHGeZf6nRz54M1XXN3zPvkfCy8j\
Eg0HVK9dEkr0Q5qNlBAw/HJM9qNj9/D0ZvgsU70PZRvlceUMIfnpuZimEmrXWf3bimlEi/\
uKGeq2iX410JWWASyZId9dDfWylZlZpiu4aEMf63BW6ORxDGS2KsWHIvHDQfxC3aGXHvFpxoRxObWR\
jXF4+pv/0lyoNIyKfP7MO2rn2bbIjykMGBVBO1+\
DmkEsOw86rFkLS5xK503xwdJwqr1CIj3LU7whPmesMMXfoLY0dPc5ots0f6m0Q9FuiP0AhwLlyh/\
3FTDDMNr84LfbLio6dvNFDHYK4IIvlIQRgTfDXDKzVV1h8jXoIC9CB728b2+fImyb+\
tQkUeMYmNIbh+1CrD6Hvq0BwS76lax6HH22fcOWXbbMRnmim3xY3NRkPyrlLznBRck8hkKNY/\
ZPelybtntYl5B8NTHCCml8fjqb+0KvFjxSIx1kG0nYMJqndQ459/\
zQR03vL6NLAZlbmVbGge4wF1RcuFo+OPlGuX9wHpl0D1DmQZAw0M+\
S4R2Aj5Hjsit1G8Hxx7FDe2lowCMdYgFH6TWnOGix9OwZDVKPRyHFvNzdow6ik00xn+\
zmZMTSkelit2emtlwM7fRBFjtwOnHpr8Of42MKZ+ZFMu6/Jz8P3eyBsO2/\
MBv1C9PNy4CO5OKC0gaWt93vMo3+mbvZq8Qa5DhB0aqPzPNztcNOUo0t7Pl9ak39Jb+/\
AIJqkZ16TAr7FN7/\
QTLdFabgkwofNUnYcLZPovbeq14JqrkJ0SHnqgm5yQCeXRp1hVCdzXH8uWPHGblIC3CApG4E1kK1Up\
4x8WZaCkcOL+Jp5vClvbJKEKH1izsduZWBpv/\
Dapc7jaKfFbsMN5Ne863KQiengzKWdSyermJ4MhegnA//\
D48enx3dvn5yb4LcPDx8f3j0t3rx788v7n97/7SObZyKf+fE+/e0Pizf4m4enf4ic5vt3D/7V9z8+\
PbxbvPn48W+/pj99fP/rg3xCOAve/vzmw5u3Tw8f5EPCfTDmLXj/YfHh4e8PH55AXvDiVx/efPjlH+\
k23//08O7x6f0Hk2kJtYbeiw3oy1oeGGbQhacrhV26hQpgflet6z6IXvrEV0bGu5wVjpgKYfPTWiqq\
aKBD6ewuD6kpxQFgCZt57lR6+/IfRGwr7axgLY0igMS+imERag+to8ic451B+\
GlwBzR60YWrfBCw2KPQMuDZ80cPa+LeM0p4bdMKDhA37Djv2Dd/\
4M9SeLjzB7EqK8CzPipszV2WXqqAo5DRaSygIfcnA/dw11p6rKx2pvj/\
CduQgUpkbwRqcIpLSENmbkmgqByMtwaCWJFySsLO86Q1YOab3ONuBAopYhzpYKX8DrR7XMHBkB3TiC\
wMCZ0l/hzMTtIpKSbIHhdU1aW2QSJDx808rs9WOOBZhAAYa3Vty6kwB2wY+\
ktX4eOl3kgkJ4CK5oQn+nAeqsUq5YlLgwtZWZKrmBm5uur4SS6eT0lEjJuIPCCwM4v62mU2V/\
Qv5HR1osowFaW5zszD2+7PHaD/l7S3bXLcyLLG/gp3v6wUQXbYDoftUH1Q9PS2Rm3rLaSeZ7z+\
BpKoKkyTBAcAq8T59c57zn1LECxp7YiNHXWRBBKJzJv35dxzfP17B19wvwj0Rm457G0dN3uweAe8Jl\
wtzEjxCubn1v//anRbcUaRv8TKdAC0cK0knH/9aqMHljya1gCqZKqaGWqQ7YOgizzS5aR+\
ID2VycibQwR+vpbVbUUVmi4ysxm4hdx3bAFbbIHiMc/\
KWP8bJeTBY7MJUkyom2FH9fgiV5tAqff8Rvpd+\
Vu5BMmeS0zanIJrlEUfdvaIl1vuft0AGRYtvlgi2xIGooPcjfMrVfMgtTdJj+7xLP/\
aSkuICnycvLAk1inl2VUyy6ykabJINXwvL0qgphqHku7TGGinFv3HOnRkYwXlg4KZnRIdDjUzVDRB6\
VxY/0kjaVKwYT7cjzLE3sRE2qms5CsI+\
G93GKc8CwybIRiUy5wZZSvmgJnB1rxW7Qh9cw4fzwtpZ5Fme9GvpIk+APmQxbbZWeqH49gcQgyJ+\
31KjMsUvvZhEwAhtSgc49Pb8Fkeop0ygV4HI514TpPgIjwLDMzSBG1gO3FkYs1a+\
OCLNK0om1Y8sczQtdegzM8K+/\
0RhBSkKsFDa76KbjUpslK1XzpedF0YtxAzx8SHoa3VVSVuSy72BKpTki3cAVJx7MEum9UaR+\
Uvz8VzG9obNRPrw0SbDVuuAgdt74+yV7vW2ddoGfB1NQnxit04KMWHmPh56MAkoycsjWas+\
EtCz8hh2GPk0W42hNQ2hiov0/iv5DI1Us6gS1M943squry2h5c2f6IVdvF6XXRxW5za/\
dqoJf2QzJSSKeWHpDpL1gpA+5/l2f6X/+l//T+\
4ess2tl01BkQgwuiQ6yYubjnMQnJU2feNIZ5r5siIOj+Bz+MB0vOf4tVG24yYmvySPTHOr/zl58/\
fq6UbLRwdFbMY782TRujq954kd6fr5sagp2HFVN7aa9t8WfNR1VfhppGbxX2IbtqqeaKucNlzh6wrj\
OUAI95UxUtdW4J5GhpgNVPDBH/krIpReqhWjzahzZ/\
b98mBFDA2y2vfoaNu0cYosJeubzC8MYFGnq9n2WJjx+\
ZnEkHoGRhbbbwUbwnYAWGUtXudfE0qhJwbP98SBhhdKVunsDjd0EXHD9Tq+gPPV2l+\
dTFL5ZLFjxlzJVbQGBBAJGu+Od+skbLf0c33WltH5YE03727zsV/lnAi9ihp/\
N67Mmz9zOaIdOgaeSrCqiGUHdhS8VI25Yc4lbrB1GsXJ2PhzhauUUYZZ+SojgKOYDnvtPoB/\
1WS83z5k0BR+YZ2AeEH9jnxYIIMz8iRUocRUaLbURX7jpyilP3Mb9Den+yBeH+m6OaRGNt4yu+\
UnvvOYmbNVhtNVRxAYp8btoRVCJi9MjMIqeLpmZrzW4SiEH7TIYgt27fqs4uPE02vKi0iaER5O4tPF\
wzwfsVvZrARbwODzR9PzXk/NE/lP796L8pVQ3E5Lsev86Xgrz12j4LvBpOzNPypvi+\
NgJehO9XoTb1TTc7uLQ26m7J7+\
lZda9DlAbvLYtmkDVhBYHEnKQpDz7YuNbWp49mxV6wgVQe8hyVZP4/BSchVNRqRUnwnceq9qj+\
jQE1DcWmxK8NsThXC7YGTWaPeDDUbVUK2x0ij/CbBZ0VOsBHP1UZFFyjdDYvuiYcth+\
ga5UrEK62rwXdkdSuvBaWsDvhg/JuZIM+gPJJoPd3pVcWCZKYW/\
mpICFf6b7PCo6kEUi4HJG6JzPV4gUJMU7V9LemWuCyspkpioeasS9IhtiTw0up5Y+UuLKv29+\
duK3JU5gChCnfgOS2H21DVS2SL1BEsqYrNnBC2elsh1+Xv5yXRw8TGv7ZJqywX2SYX9AP6QdImc/\
CZEByofpkOwTjjImiEH0N9VsSsm8e+\
J5swUh2b4pe9ntTU7Wqo1dQf9uFMTQuA4yoZqzlXCMGlCTUc61LGziFgSWAaXLRDfqVySIJ6/\
LW5E9R6Lb0mqJfdyFg/C0fWeqh2g1WZ+KkSjUyoLA2E/\
PzXLq2DJSa8mqQlUTbsJdaWH2e0M3cfWdwwfxqMS3vbiJaSoHhm98ExqsSb8+\
S3bV9eQ7MNdMS1F9i7U+gphSgXzo4cPnBzI5yEgBDaEAOYU2+\
hUNHELuOynjfikaQGKomvZNFcWCLsFbO21/mJEwdz7oe1gleVEIhaMDyjajzj6iulJMLcRzzUG+\
nH7ci+9taAAeQlUDyIs4W1+xaiB7flw9SyVCZe5hRNYFmypzs5O8X73FTVVrgO56jB8Ti0u/7pxNC+\
CRRyKoLLUnLJ2B1bzRBTmh7qlPO6x2JHzHUSdHArx0/\
uwPpDdtnZ0HfNJBMpCRC2fNUyShpVivqwYI2P7b6TPKMD5xy7jC+\
tIzA8ji24ALFqt60vUwndmtMXliv0FSfRv2GWLUYW9hmahMpWHPk6juumBrKY7J11uWGmKDpqSxPII\
3jo+1rLbM54aDiTsVe+\
mhwEVbMkAzTmVJmzMhPRzyhh26NgaOAAaPV8MAeZvkYWZAoorZqEG3dMKWg5KJXFXc8Q8utZqJYXyI\
08ZHO6YXWe025LWloiemMvDZIxniTPWKCImCQ5IQnTckHXcFOoRjcG+gi9b6b8Y+\
lFwBsnEmMHcTebNflGE7tZwnb1NALa/dEyvDgqXjNAoyYymFwJo1RdlZ+TrivpPWlmHN3E+\
1ZLbyB2N2GcBc+PER27NlwzV97OLXtpvWfX2qSrs2bHe+Olr+pjM1EGjbU+\
50YzrfmcZlFS6LblWbzLSDNMfnwhccJzy7L2YJJt5SBHVYJQIkt8lr/Tvv9LtG++\
qdQcGtGeyf7hSHY2dNe3o0M0H3svwsuMdScoC7Uz+\
neh2ljPO5zJGaH0VLw1mhqW7y85qe7cuo4Fc63U3InDTMzXoVWwqn1Df9nlJVc1VsjDKP0+\
nOrLdOhOOD5Y6GhGxaX+9PNn7rZtd+oTx4fEbUO3bUP6W03meEaNWuyljmbD0eReNP5FI0R/\
FIywRM07hC6Ef5NFh5G7ONswG/uyOzaemJeJ0yr2l3JHIst+Kb9rSD6b+RJJfyP/\
TxUROH3zsfJqZVeXpXgZNTt5+0BIVXnJuGNWNVRBhOr5L4erzTHKQOvaOtIv+\
0aTJbkPDflEXOZDL7oth9UvfZ/6jrAOA0+5DAfnQPd5/\
evSFeXUg3PP2JPxuf95aZ6eGnf3Enm4Jp2ws3QTmQiz0Nbtr/APXDgsFdLk1pyw/yx3+evQcDs/\
dk94hx6CH+3V1Bsdt9rgvvmqz8XpMOnYmbiESLEEB28cC065ImyATRTvdN3azjnxAm70ljAjrv34/\
ocfzG9+WLJJbnuMX14MGhby5QSus8vYbvjfWl2iC8DgjcmxnQCnT5fpG+\
hVdqdpvhxn2actq2Vxl7TERk0SDibIWEZ65QOX+EOuokIejakOqfZlWPbxSzsJSbtURBRqX26z+\
kt7eOoaAdUP0wYXnG+0OzaN6YHyzTJP+\
kDWAyjJmzVBcTxiQde169D0OVzEJshS4gitSgNhLbIxl2H9vT1IYrUXxV25yefvRZQFvHzBTWpGaT4\
2R1+cytefN69yFphf/elUHCp8+H8103R9bbQEJZ/pAlL+6/mepL+\
nOoDPEhjiOKk2O546Hszr2J7Wwe1Pq78iYUOuiWYV0y6b0J4qSPGTR3pGd7bQXmrjluwCuoCqPMjBP\
tRLOMV6MAiBcp2tydTuND+\
xnFBGY7KhBeq7MyAKbyljdfQykECSRe7hCFUX1YHqU6TjZen4fpjdnMeLOHteLBa6bb7AdzMD/\
Ay6RkGd9BASbYi0lB3ka0BfvZlfxNxscJHbU+VFdqKFNkG+5QLG6lzIMcBdx6jn2LosD/7v477cb++\
agZamMKpT2eG6DxeMnGoEccKDSl3G6Elz/KFERxsRVJK9L/\
y2NLm9utFVt2cwSWrXJwUSErX7HZMsSb5WdSxrP2aszbGeDAaUN1vMiAkecYD3MIt/kSJ3h+\
n9CPjoafXhuUzEQ3hxP/\
WDSKF1aaPbQfJjIypT74fdcxnKQeSVDOTQUwWcIJMKZVxi5cPc12HQL2SiSMnokhTbzISNHwIPBvmT\
gA3my0iaBtACA62DRA/YeEk6tQ4dbQuBt/rCtGJEZDgwOKRkExsnOISy+I4bK/\
sk4SC8LFv73xcbdJjK+/3t2Em7oRgm2Qmvg5QtlQMvmHZcMn1B8a+\
mIubiXKoF2PcT8lG9nM1G4V6wLowcyzytkfVzk1VR5IGTZxNeayAuTAzyYHkNzUZp9isxicqrGKfic\
jB0xlQh5adgw7JPx8cusoVM0SD5FKsa6bGey4v6Pl2QBuOoCCgKUzzlcHi5Lpys6zjWlEp0q5Xb4td\
8SdaIEEqSJncn5OcNeelujQSEt0t4kQgV2euQU3N0SX7Hs5AR491onufXXjqbNd7JeQ/\
NfR9FCMETmxIDAmOOdaKdQyGncA5x8HkEKIsZEJGxeQU5pDXL2Bdksk0kDXbaOVIAo5isJzEB8Z6VU\
U8JiaJqtrVuTVUFSmEmV6Ka7A/FwZIHYB2FtFe7tlhCAdcBBxfhqr5l2WY0/\
o36y3URRB4MZugR3FYWFu2H5jVntJPvB7jI83U7dPu61dQmG+\
Nex6GPRD2mCkXcWTigzAWS2A2lGIkGHrI7y7/jpUrvPfLz96Kv8jA/\
9MMeufBidP5DWkrFQOqgvVaoPrFku1tNex9y/NLqD7gBgcfBO+IcBmghkW84PtVXIC6+\
ZQle7Oj7oewgKWsji/X21DTYHTGRPFXH2VA44HerH8rpdHAWe0XmGecMIe+V8g68Pc6IB+\
YWUZUBe6T1FTZQq+6E0AGuTFJPikGaE2GnAS789e3+\
m1JAnFKgNr8aK9ovlPPx2e1xtTNvLqgR9qnVdhJtcFf81NynrPQ20Dd+OHDx4+\
KcelOcgMREq0Tu82stZonqgCEtHbkYMpYpGk1PZ/7qaNVicViXglNp/hf+\
DzaEU6xxDF1CI9BJM6BBkx/8huXRdqHGjJRjuJ3EE8kb7Wl2cSq5IXhXqILq75rZvwwjlEfYVM/\
Y1ZuwMtH6NtfElHyZOc4OtbpQ3SsujMqoF0VwvjiS02zzvfhK60PNuAAULYH4K0IdvWrzWCz6ESyqZ\
D2AWIBs71ec/GNjXOJjHGWAs3wLbdY2/lqnJ+4fd+R4Q2GEEP+\
q2rdeytBU6RXkwWZfskVs38RZ6lGqhn+tsn6JE2IgDgW5SThCFl+sdalm2orabBr+\
WwtW6idaz2zj5t34nrkgE+/\
cYpkn6QcuQF3rCFWwBcdziTNoxBQApI4vygxlRvQD3kxqgkk35e9Lj47UK7DGNpnkdrwhSsGxrEcjV\
ridjzN5qzoh5GUI8ZcM+OP1OXvQGwdYoe4Q8SJlxg0eRkvzX9HRh5/\
FVh41a5ftxidbyAf6EpGKFos1s3xN4749ACnA16WQYmuph+PkKUqWjh+\
07Koa9Kp8gCrUuLSS4xYsjnMPLV15lZTpDJWoxX2NKePN3r74/\
J6NeavE6tCNO1H6Ycxl7QgJb8raSaZGN4avFudjt2q/\
hvj6NHwO4AxreHkxvk9De4hylCaDa6buJUwlCmOIW/3mc1g4TI4HJ1kMcozGXlMZFcXgjz99+\
C8b2bVc+ilaUZYhlXXFEMTwNezVXBPDjgWOFqvVwJMUdsgl9/PQvkg6gMVss9L/EPd5pPNJlOQfxw+\
VyQDon3UH5nmgM6nvBP6Yn4jVPOTkRi9hzoe6T6TqBrSaa5ZOgts7XMhSI70ylwExWFUjFqS5sdN5l\
jHX7TVObOaE/wuP/W9AmR6vxbF6FJ/hBfdsq1YK4JF6aWCRaF/\
0Jcso9Nj2f8ywkcwKU1lNkztuIetzSHaoofexO8GFUCdjjGlf+\
viCIjq3yfWPNRJIY5yZSig72ueCYqfWWxhfOzCuSfrfG9VQs8pe5dojAY9pBMqC3EWdnsCmEC7xjAS\
8V7Ffa0XWO2zWGsuma90ItFm1X7Ph8z6qNbOJFbKGlfWbwurau0+SOJc1X7HKTszP7ZGHF3r/\
gE4pEzzEvcHPrKW2MlprBnmFHUbi6QbLMpR3MmTQAhIN62x87PhVFGa01HSeETQAOsjXXm11ac3yTR\
ekJ3UcZ1DxzQZaSeqL2gEAClphcRJHkGDjy0n+xfqkMfn5R7B/axpAwhCBg9fn/ILR/\
LXfGyZYQDO06sJbv2vPpBv75Kgx9gFIeIA+ddaSo8PsQPxo93TqB5T0+/HYP/\
XovVRvX0h8RMeohEsHRkv0/Q7F+GuLBYjS83vukOeSvWCgDRmo+p64jvjNB7JtmVPaNhuJsYSL+G8/\
/vj+1/96t/pZHHqOLdw96z5KDZqAy5cA7oSE02QZA/pOF82lWNOAVIBegWiVBajwdektEbdBE+mkh+\
tG+klG56ssQeuKgSBh6CoaDwTnXFXRkISZs9ML53mrmJjO4KeAUwVJyDqujAd3EKCCrXc631z7ri4v\
vSrDIiNYgiTdMs7MWDruXOIPFL7f6FvDRtkdoOWhPATSmMTUoqFYFKfILAqbo0hJmqUtyr2+\
F8tQP3tG8daMaHyyC8FuxQgAu9CeiDhDy96oH0r/\
Dj7Qv5fgq7ilWKkqiFgNVOUoJXXTTypzQbuiOc4y0FDXVama1mkgQmdLZvHV9MSe7/\
1k14uPJijPNBeIOZphbxKdTJr5e+Bfw5kioKf8Qbtr9gR3+VfVNZYtxNU8Og9IIo5xCUd29ZJ+\
aGhey94uzsz4jFaCiPH3Qn0ms4hbPFhWZLhWGMM5ObMSTI/\
NS0KK7NtixHF5zSYHtffaQej4SXHMEAGQ+\
9ivjSytMk8JMotEc16U1PnRacvJPX98r1gObbCOHlPgodBfW/xS/Jq00mAoN/\
MIX1XFcZpaKnkaNkyJKRoxaz9Kq/v5YBwhTWZ+\
FWAZwcj65hPhuL2lxrowURkJ1SRFYHu7pfVYZzFP1DQqLc/Hy8k12jw46YZ6hwatS3Xl3XO7+\
3KnOcDAXd6coOsHMJxj6z2v4vGCiGdHOJ0I4b36Tto11GszP2hZJOFGz5SPQOqjit+\
QfPIxIdrXrgSVUffEjd+tfl3QUNVMgEyz9g/\
FSi2mZ2ifGgNMLnRMMDkmZ6BPTF4A5cS8ZdXSkK4bZ8DIipBnRnkcGm5/CN1bIKie9d6QHOm+\
OsVbpF332IKSDDB7GGDfnbc9FoopuH2aS+\
nY4Tu0hoPv7dXeQFVV6hwMR8FBWsmc1IxJiUx6gRfeOxB4cgtwzxA2nHKkzz+\
otkiUPcnZZypBSY0BXiGWaxhAF8Vt4DCXeYbnAfXHkK62dt/\
os4L3lNYMfzPVfYEoU6iwUcrc5I53y0tKI6xdQm59kTRoP5AUrzjNzjnEikKgKHeqUYWc9PAFHPmA8\
xG1K8vyif0o4kOqMNw41VBrTFaXCBzLFvkDyuMbrlnSqssZFF80HXnl0VoIuTPu/n8sqGm+\
zaSKUl1qhABVzg2HYTDVvskB69Q0d+gF9RGXaNFmrDZvge7f0FNnc0ZNhDd2/\
2pXukKXSfKUPuktlrwM5YZzMdN7ibIqNCxNI/xPalkmM2j7ox+zhpu2YsfxjHihs+qQhs+\
0G9v6nFaNQT03lMmPdGGTEwJzD1fxTXMjIimvTg69ciLscJyAbWNZNKGrNbL7qRJTQ42ro6USZBSt1\
vMfq+8q680fq/tWjAyeH0EyQIU7l+Uns+ykjyoSQXdF/\
zYbHiOpc9K6NYyXopo6ysAx9CLoPxPHbTaZrmO9MMlU1PkDVulGVU5uOCJUGhEYpVvixisBjIBX3fI\
36tHfekex3GmuQVgxSi2ST8EZ/\
x2NtjgQvT3SGKS09ZJPLtfWcMSYzJbbqRJgO9OaykNUKObQzXuzP6UbPH0d1Axigw5aPZaDBS6w9yj\
UDqncGKsfklWz/iv4dEvcVyOL8/lCmI1mb6RP5ZU0ZXYF50r/ZChzi7IBu+KUFikUgN/\
gS2f6TzU45tSYCXSQNEE0zUB2wUavKCYE18LKR19cWciT5Y9VBtv5BTumGmgoF1xQ64CpQupXkmeJ5\
iwcqIVwDA4FKeUH5b61VDlcw3uvKsdrKH0Gm2t3KtGONnmp929UeI2liToQC0/sw2wRUe1vWW/\
nMjp8lZIxUwJFACqHF9R7P3z//pfPH39d/W/vIED26cPffvgMesOfhJDwZ8lX/ad1yHVR0Z+\
A4EKHJFmxeOtaQfuzYL47Y3bZaqu1IK8G0+\
n1b6gQAnyd6pfMAmTWXxkR1h8MpH6WPZHwjrJR1i8qZ2EgJXXJ9V6R7AYevaKj5d1dRp8bgvUlerU0\
VzyG1EwUkBmNhe9WP2HpCZZD3qacqc1huhzzDQjLDgpw/0xFEOVTbRbdjv3hAhUnHQ0zVIcGrGp/\
M76yz9ezN4fL3HyoElcfIQYrb6Q9bodmF5yK8W5/0h3zW0SyPzB8keYwp+\
ceBsmariq9bTnIrvB1BY4jPdL7alI6s744WRRi4ZZHjh0pZv4WhvOobTGCLX6xhg/\
FjezBoiXeC3ORJQySAetiPUbrhYY+zdNTC4B2CV3WYe1GG/Y/\
Lvsn0yiMpKFlIwYT9DwbHQN3WW9BPLt5BaPJxoa1UXyViFnaN5E6thZcY/\
SsZgZvbauirK6UCqnI1sofMA39oRz5aIcsMzZ+s9msvhN0HlnMr+BBTgR7t8WjqiawFYe+\
7NKxQ5JCyj5lsvd27u17xicTM1wMhKRGlk1XtaMRBX1bToarwxjsvG3pD58eL6RNOsF0zyt+\
Fe8I4QvtcQ2miPIoMsL9txoDHdhl05EktHOSmSjgcbku6c+kHNppn6xNQxHlXUAdCSbzJiQa/\
ORk9ypGprdU7rr+\
UFkc3uDbYiqQs49muEWBsJ0RW0jqeH0rqx0dqCUufmRdKAkJkOyTxyOUUcid0A2SDzQUJJAZIxlJH4\
uz+niQjDzPj7jlFHpXcVNc/\
7WXJSmeQjre9KbtFcqOkRZUWQl11tljnKIOHobFVyOlZxjcb4V9Z8CLRr/\
LiSiTkQIVKnlM0Lg6z3dP/m+\
Jc4JOKpYWIU6CfG3KTJRNhQ5SvwefpTEA0EE2mxoNHP5QhxLAquNKsVrO4ukJ6ATsDeW/\
urMCH5Af20lcohGolXrKpWSNS295V2b429V3wjb7LA8thXMt82RQhMeHud64dltX7qBtJVFQsL+\
636WZkcauEmmHChkyqQzSMGn4P5JeRUQx99/\
iEBIYDgHCsEg6xduWLRHy0Be51mbz6ZSoBb9HbbMbj0Q7KDumCtLKOQxvZPX+L799/OnDRxAov//\
1E0mZP//6/qffPgll8/sflKy5ODAg47ndTCDXVICf7l84+\
8OL7195E7r2KudtTcdKvHHAbki02p6UJx/\
reIPiO4hXpNeCuLnmi4Z4Bzpy2mtIsQGoIUhJA31kIMoaUbtFwAk6KDlbLTwcdBfKpxtXLGK2yYgyS\
b1BDVWoQ0vaobxNU+e+gHWzO+08z7UcYC9AB5967H/\
6ZKegwCjHzGvr2h5Vrb8ZbzoYgt7BecXKA2ixPwXDcPzVrV72FOc1jrDRaU7dUrMuw/\
DY0FOpK9sNjZ1C9qoR6LMrXguo6iK9ffClhA0CFRNUjXM0VD+\
F5mKvkTXWTmLucud2J219NjgEAt9Cmdnovx1uDRnwU6e1JN10HLkRvfk1Q/RZ/\
vnpeDsNT63r7Qo9xrA3FjP6b635Q1UzUxxqrQJOTRzg0IWmCK/nBGbMj6ESQEVtjmVl+\
PDULqgEWuyH6xZGXV1699wVl9CFCWZVFnrYDslwU7xvz9Nz5Adbhcy4TgpFBS2j7q+\
QthZGRdOFxTjQu3hqXZLyiAZtnKCtMpSNF3EBlfOlvK3dF01hTOKTkfFYNjnPSTC8lXWGo8pTfnony\
cGp5/YQOV+iHkoINZD9CyPQYmTm5McYNb+\
OThAbIeRBQDyfcbeNOKGrbbuvpqpYosMI0JKkpfDOtgCCm8fLtF95pzvfycJ0e1G6I9IbaFUKNV173\
INqO6K++9IcUNrFzXgk53GgH3LCRLByBYZOVA0tnX9SIapumqTrIj0rX6w/\
sTEK2obbSkeRk8KkbaJy46r6d7NrlUkWYpeXsb0ctWfeqqgEEB/M+08Feek+\
ZuwxxdNbRq9sgzJw5ZIWfVYmKCO/dgETdkigWyJ8WWDctkTE1eV+Q4dyh7hMlDDWzh/\
lDpqppWJUyGfeWscSSmoDVQM8nUJnJcT9BuZBwrzDwZNC3n2IBkP21ze6hhCEveYO3GPbogMtQTpjv\
gjzrUVXJC1hBPyAwodfRQ6YCSERBzRPRfJktzZJfYVJLwngFZyXn7Vst3QnzbBz6AZfOBR/\
opJ3Yy8jT3fZIiyP47/WyU23r6gI+Z7/YXoG5ZtKE4/rlfFQ6sl/\
r0vnkaRmEO60nKflVKwOdlUSnTIx1GpXzHZCHlQ5C0eHz9VHBdxB4GRrgUoKzJQWQ9kQRq0gRTtSOw\
m17qHzdctzX65fHuYaAbc+x2yx/wnaRb6GPXH9XObuSmRPcZ1xgkjwp8QbztxbDj/\
tjRFfaGifojwuILdy1B2gIuqngTs2+I21gf55r8kgT/\
Lzc6MgcZfvkGN8VNfOecOMI18ly5c2OhCCrWYC4RjJKXNnCMbAak8bnVLXW79ppdVSosxhy/\
y0pUmmC05Qn0+vLuKThpSJ6cnu6iIW6bMlfFfttnmJ1gxnMQpfbq7jz/otWWMT0RgZsXGGYebYaS/\
ZEPE7pAujtWZa1/nVY1oYatD1jCwbVOslC+J9Loy9aJBCLwFEj0hgQslCaiaga12ROI+\
NOIoAaCCZ0jBj82oa9P3FoJOZHSg+tH3RZNnld6u/4lA0RlKJm2Hy+zrpoYhO7n436XGb7dDLZr+\
cGc904wGobfSBpf14QJpukvBUznqOIbjp4QLZb2+alBKboNLhMAo9XC3fY1lELHzkmFwibPnFB2/\
f0hr8V7G8I0zTTtFcTjQgTR1xalgOVxGGIiUzSG5O3tL8HXHv8CCpdpBiSQjqWBExx03TuOaUX4QYa\
7KX+XagF96YFs5kKxTe0Fm63ZTzRrhuGkxLMafNOZd10iZgOfhTvRDgK6gvD2AaUny1kc4puB6osG6\
nEHsfv8zMg9mUT7J1AazJCg9tcJPr8oonlRTZ0uTKgtR+\
qIrtLaNjI6jMmJDW8LWZwlLsZDmRxYJ4uzjb9iQbxn9JGpFdbCbhlIS9s6qwDJXYGNFD2ZuDBOlgeZ\
iZgxSh59QfWsZcbrP1tzQ07vVRF9Fb9xDHk4FyO1zOk7rsyR+\
xCAHdGCeDZljiw4lFyrXstGHUfQFrbHibmb3wjutUBYfF0x8InFsCXMR1hYyfBWt6Cd4ip24dtB06Y\
zWnSNtF1JasChzgU5YgacdTOzJUFXR2kEB4fziXG/\
1nK7nfvfj4WFPaGrdfh8vRHM657cIna0wCvBifG8mywjut4nzXD1vu71EOFLOPN/\
FsInEYRH0FjQCGWOs9n5OhzTB+z9cRcc4SGTGdyPIeNrE/\
2kN7hEABKkC6RvXYBzMkNW8slOA5pCIbt+jqEnvLF/\
uBD4QaxQUfkqzEKhgJn4EsOxvSjp11c1SnTvL2CV4T3yicyrWpsp6kG2DMsZbjVEdte+/\
oLD16sk7zb7JlghZbcv2K1S3209q1hhbsY1C4A0v6yL/5xcpv5bVK27aex/\
Sgc0YDrfS84L4baEpR8/B/GYGvN+\
gl9eHJgBmTcYXW6RJyumuPWlhTZ2HhQQcXvNF3jm5VzYgKFrTXDoH2d+\
javBCDfW61LysVoXA0Iilzu+\
ZcCSM5RL3RTQSxd1XjQjEj6Il5z7X2zvrfkeaQfp4rKNqHP5VazVFaipNIo0KGWzvPWNobV18ZNIZu\
b+MJTPYn9V+\
zoadYEm5i8p8BgKZRXlrvdbGueiVG3uGTwAdXbWXjada5818ZNV8kusnUOD43wzlOZ3Izk3yqyvzOr\
L/FOLi+QTE7BXHAWKG/Q+Yn9hPS0OriPR4kFqwFJoOuGqrLp/\
aoWEn9i2yetSLz1OiNXDrZIw5dJMDVU4zl75X6BtM47yU+GdDeULEyQQiuia+\
ez9WnRzLkDLBhnbUvqbro9CfSETBoKV3ZzD2f9ZzusK8cg7qTTT0EeylsZdM8rGJW9Th941xGUbY7B\
Zrlamt4aLj7TABl5iEgfXta11p46q1hMUxdE7XTG7lkPQcHcthQXkeB5OAQktdRVrFGAEhmiGU/\
Nk9O2ieROZmer8lAM2ub9Ondg2I9y/Xn8HPxS2L4EuS/9ul3oynGUUDPJBZwC3dVZoEBT/\
mFsEKKn7VYuTw39pBvocELB0qXltaK3lAGpN+VIT5oBsDLlXglEhqAiE9iT5Q4e+AloAB/\
gXtzKBb7STRGyU6Zw/\
tGCwIJImYssJYkkEWpgTPL8e6c4PJWolCygHz1BW7rLB9RDWRyyOtfmhJPXbTdujN6EG0++\
2NquWZC65oQyLwfG5DI8NXi016oVSc6NU1mfp9VVP8MMbfRILt3jzQ8Nw+8dC0qO8eQVgBj/\
6lOM6gXrD4nBwyoISu3i9Fx3VGGpMqjlpKSBHo8haU8YuB5ByiXP8HKPhEWi96u0z98jtBkVyDNHbT\
ychyuWRBYldP+MhBHyO0d2QpR3JaLwCoakwcWIkZSpVIiBadtdlxEa7Skss/\
hzgNZug7HDojVQ0j7OzTMMuFQJQ9m04V1iy1qnkXIaw1gxjPMkvhPdIO0SJWHToT2qa1vBbuld6p1/\
VKrlEn8rW4I1HVTbZd1B/mToW/YdD9LwnOyfDS9skkm+\
iD69MxazJCWTpOv3UVjJBfWxIcKlmc5fWs48DqNG/\
jMysBnAZ9KTUGPf1RfB1sbms3AstejYZ57UvW18glvF9Zc3sV9a64f6xkTaDrjaU/\
tFYbLXT5R0m0ZNQoWMd0Y1jydHAvHlSzd2eu7fQACjMmhqiMtBjDW6drSVOjigfnl1lwTmOHyyPa+\
kh5ZUjGWzX0LaZDSUYs+jZOKX5lUrhrWvFXvHKhJ86PNTBomp2Blbcm+\
yig0e1w70M2kFVnm9ZnnU9X3dC0lPBmj3kiPksVUxzgpMhwwEWs0jMKUN1gpJ2S9KxRGNDq5islphd\
wFHEWN3Ujk/UwVZnWnSY5GEME6v6KqsylZpPDYlw9svJl9n95LEjOQE6xMxkV0haaWHF+\
fEEyCfQebkttbOlCqpvDxuW3PukO/\
tGcIoVSVGfbRaKXdEj3iU7NY8BBccKQMXfCR16vnDseyOFIPldeH0v1emfBGq5+\
Iwu2MkjOHzkbBOdE5Jbr7nxeQkUhjBjR9sJa+YIn1thJWk9JCCBUIpsa2AQET3G6jW/\
ZQjkb4ouxPnQn+ORIEZkW8vqTU7jkxChXRtPIpORq1t91gNDJYx/+\
8dLsv2YUhAHp28crS3J3k7BHzZ4abssHJ2DAo09eUZwV9xA08K/ajX+UZMyM/\
TMGg2Wxj2tXmnDjek7tTL34z1oiQmEYA/6zEcZLSu0Hx58oDZgSAhAR2iRrhup4yGfnG5dM+C/D/\
uBLVrFni3XZ8imIjL4yNOstdKL9A71SvmmKgvU4dNGU8EmiXQxX8jM9NbzwXV8t3VyMWp2j8hnUsiU\
OsLCWp9PoM9pYnL9Gsl1rMFjqjljFvOxoe0ysuC6c73Dlh1K2aKr0S/\
qBZRgNIFnFyMIAlw7Sop4egwAvaUIxcBBZnuh/\
NcSSLwcgGhS6ZL63qU94aKR9UTGQudsEg4HWl2L9JOLw7HrunoapopBsqQtji7rUFfp4ACf/\
MBG36U9UP1SOrGjYvygv1QZcEnw2XpwKAzk1q+\
Wm5pBTX0Hara6xswJ2dS7G1pMNAHUP1OgiHePLWqVjZkuhfRz0cMBz4FHK6PUahJx+CSxQfNa6hq+\
R+QvMwkYkKv9wAdSuRq8Md3yXQ+/+XMuD0bP3dtmElLzL2zAqrQvGYcjpHC0sW6liN8Lsp+\
IotCuZFXU7dlHq2tt2gqh+scCGqXUfeM5VcUdEYBIsh+\
NYKGBcyNz2kqcQpWc6VaVHcWxzvRIeZ6tcgUXfKTLrCumEuyIn59oJiNeXmRGmVMck/\
W4HX1H3F14P5S748a9FvQECWA5qFXrfEaXE1zUmEv0h4dqaMrPxF2uHqiHskMZRj0dkPOH83VVkhcP\
dmB1tM7Du4V629+3KYAa7Vg9fBQr107+VKu0/ydRE0DMJcpcMtU6odbN+5D/\
7m8LTnEqllD8nJv1SG9NWpOTqh7KuqXkNu0ijaIOhTVcYWguM3UsLI5nVfWnDPyTzv5PIHKekl1/\
rrdbzn5Tl6KzOTnjmSGcHfo9mm75zZRMEkB7aqvzmBIH/3FIHx8gqE7jYP/+fj99UbfZ+\
xDLQIGIJQOI4bqEOmIC1A5PcyVA8pYCOyLcXBM//PVrX2+T89CVOKnMDmNgW/\
SFCl4Kzbtv6s7p3efU78TORx/TeeERiDVttwBQrwqo877BltbsUfuseU71DZrrU+\
F53mxfe89oQhpzuWNs3uPboJT46piY2zMNvYwM/OIf5L7VTINU/a7k2WOy+\
iuzRoJNTqBg2uPCLtuBSiZ2nuxYpGSgpMXEvQ20yVdKT1VkwXcyQAnVBfPV4V3aag86zI6mBz75RDk\
ULbUkiIqTD/pjiaR6oDSCCvbk8qhTmUPnnm0LKYFFHvzTg///rpr59+Wr3/6T9TC85v0pHz869/ff/\
Tpw+rv3z89NNff1v9/dPn71e/fPzwtx8+vf919f37v3z6/Bt+9tvnX//24fPffv3oum8q+\
fYltltfQvqTYQfg2ArxwagCQdDXxXPUTX0NgVO7Zjh1L/1ATBM68ua9fJGsQyAmK59FsH9eoO/\
JXj1ubjRg4ffYtrygQgUqmCMLH8qZsB2xRtmq4bnRZrzaS1i5SE1uYubyv30CTbAZdJHohWrtSRk4V\
RaGiywifRzYNDuDpZInZe4OzZF8Tq1hk/qTCUGQ/\
HuLeaS1eCjvDmDu86KioL9a8Agws6Lzo02VKpDqIZJVhn5QqIk8/o9lo7eHErgBtyNtyIB+\
v2fZIxrs5EZbQfs/\
GmKan5hMOTr4ekRWOohHCdV4xifRN4PbNd3hwc6XEiYfDcymL3qPdn9yWiLAvSJL8diNz7STGYkIQn\
G8FZmmMkUviq4uR8O/pFjVkCEqLpVYSEusWILeCZc/\
djuiXhQJaHgwSIu5k4X8jRNWAhqtommJx5L7CpAkYiyElIhLq6yO/XA5s3FNuk3ZQnu9v1HQJwp+\
tUbbpL2z6HXeLmu5egf/GcFu2ozM9p56bRZ6t/qvNuCvztHgDdL4TW7beAUoSPKz2nraG/\
mMxbLjXMyUCjJZzJRmRLk1kdsCu5RVKdl+X+\
mGuFzTWsukqkN6uFqkLj5zXd7MlkK3hW5LxoRww2bO312uogdDh+5vOBHWBgKyIw8Bvkf27n/\
UnAlaGk2krysTXkBaBIc8oaD3pGTRc+MhGwiYUczH3Wq95RkDH9axak8E/\
3NZYrWFeBTZJSRTRmn7FW7xBzaiZRbSRyqcOSrGhKhpRS2bUI5hSHJpDxsCdnHWD3JUnoycLbrl6TD\
8Vn72f75b/doJnct+\
VJKrcBo8V1F2kjTb9kMmhJRUaPFU0cGBN0SU5ikpqo9fOpWPgqPATiP9trSaOm3B2G9U00I3ZJoSjH\
z218wKeOiOWy4+V17ZJmZ+dGEght+r0osU7gR0XlYwviWjXOohlzh+93xRwB76w2D+QDD6dOj2QV+\
Fo7QbTPNcKuhKTEpq5J2pHg1stZb/BVSz7LYZqJfoo0itYLtcSM+\
Cz7503Cs2GXYugJ3dahzSNCLUKnDd2fMgMOZW0hd7JLm3wm6sXdsKL0IMBFMA8tcqxS1fsG54DiuE7\
bwUs73qJnGwZoPI3PSHLR33WCZz9MYu4LYINkQPXhBLAhuaNXN1UpyLx6fAGtnHEHCSWNtJFBDd7Vq\
xa2o5gzMpofHYz8UcUGA1X9rivnP3MeO4hm7WHBc59Hv6eJStqCfYU5CaorTsnkKMIkFonS/kO/\
qjpgPyNBhXtRlW3yb88b41vKejPLkCcOuciHHBc2I2KGC8a9IAq1LdKhOa0lUHu+\
p47hVqDBAmcECDa3HLCSMJx1Of7OhtRo7vybGTSx0thq1x6rV5G3zQHamtFKuj2C39T1ilzRH8Mciw\
kJkpx+BODlp+op/zT4K9bp5s4iRxrg5/7kNNemoEILyZ4Gq8X/iuTQR9veWLVcYtnSt/\
bQ5tf5ZDc3fBe9afH9oj5EFg5zzL9wqI1IENlw2gHBarlRNrDDHrHF/\
B0tcTB7kb0Y2tOiXKajglPvh/NK9m8cUsmySuq5+I0+\
nWXP7VyuGMWXyUJtuBciq89cpuTZZ3iG0W31gMr/\
PZWzVU8n2XcSd8rMFI1jvoeq8Zy5rZ6lFCRgqyirXXkmy292vLWJ/Y4D2f/GBzh6n4Qd5At2/\
Kta9wDBd3Art8oghsOvMcor8478b3wqvCIfdL/C50j6b2jLNthknzWmE0rdgDz87huA/\
js6oK4LfmTvEwCVKL5RXIUh3wzKZKAeBv8dhZmqqnwLI9AS29YcWBc6uLYKNvIZaKxUXtpolWpPr9s\
F1qqzVhNOyTe/wO3W/UMzK0EC/YqWQeWS1pFHbWDnC/TMML4QdOJ8Yf8Ao/nbDXZoTHEno9+\
f7iQvauTmyh/uwW31RVq91V76yyM/cbRoyvrZNPA/7uOufivJxRv7iMuQqclD/e2g/\
m28GzfoTpYUAjkd4W+j/ltJfQkYlrQLrgkHDt2HmEyogg1sXVcOUF6eZIYZnKpIQA/\
Hgpx9ho4GBeNzXEefWIVR1+EbTS4E9QPhV5reQNCgE5CYWFbGsjbDCoVuy+rL76sdsV81/\
OzgupyK7F6fv6ARfoAtuNGNm87xNDdlcEQ9nEb3Iui+/SnXCJkQK7/\
lmPfIeCgI3imz1Q0FURsUHBcqWfvJexXX9nELrsP3H1jOYVdgqDRRpqWieKroUemamvWg2UonIdhbJ\
nykuIGEWdfWGikz9DJ2or5yEIRsOL850e7pr/\
Kftrn1Spk1zmxIAOaZckfumQADUgSKOQPOy0ZMhaQlYuaM3t7cy0LSOlPsdPi0zMYbIbUqpgDb9jZ4\
lWNyMwv47Hs4X/koifuCDNAzj3rwQZcRs9RPEHYcraHb+1Z+FQmclR9PGW3o/\
pVp1MKcK2AdxHDVhsjp7aJMaSNSxK4g2jZ6uPqu37IGjcYkEawoh7gTbtGuJ+\
Apl0YE4hLXzkC9LNLey1nAzmh93SR4l21/YJ0z7uVahcWzzzdD23KS+\
m1Uz3owbRYjnINzT5x8ig8XOF39swKcaXJec8Q75HJApnboBH3Erlj2NCfBF5DnUJu30Ezo8H9GjAV\
0IefN646+42zok4l2WltnUKjbqNdvbS2yRLT2Uu0aLDrgEzkZo2Jw3Ebep3Iov63oneczcU09oiRVF\
evDf677NdDabvm9Mx9Uzlk1RLiuscryp7iZJEbU3FQV7OtxTDMKk3ZrlsD5MzPICrjwpLTokaPJBTv\
PEYIGGegN3i/FpXTeg3HXiai1GZQeSzb6c0jE1tionhoqSqxTGs1khGSo9zq6jtBauvFbrrG/\
X1O1RRiV/obrnt3eo7Ol7HnhK4MHc1gH7pwVyAJhKAyX+e6brXVKh8EDLlpOcJrumsCRJID+\
L4LJ4ldgl4DCyEy5YkzQroHskZptJPJncNoXU20gwJk5mQDZUpyLkKCM242h/NhkQeUjM+42+\
wuSIjxyU/TyjH4701bH3dzReGmy0OL3xV0kDwMvAvQSOvs3kNzLv6IBahcm/\
e7EjZu4aba7B7QDHa1utmHbJRKeGNnFgjaYYO1FE1Ypv71XZJZxk6JLytDpNbpwPt7+\
yCqaeJIdXyzpqlIuZMGhVye9vOJKK6watR9zo8FHE9i56qkZEIMt5tbId3xjKAowREWFnss8qu58PM\
eBOQeJozBef8Rs6qeyIcBtIy6BiwQP149NV1vLt480dlT+\
IbXN9F9smwcvQMJ3KcDRzJr9wxi1rFyWGABl2a2wpPFmYOEpjH9mB5hKMk7FAHlItexpAe1EkLtIyK\
jxJ+U9UtyNL1KvnwB6XWwiX+GASHFJ0kGqsHfmD3h/f0sTCv91fcxtgdy9OUIA+\
0YO9WPz9qCWLhvStTHisTLaTmCOGjv8oTo6lrP38R8vnx2f2mcGkeW3Z/tL9L3/\
0K58ftO4LLOHXKJC7FYC5VjPS2ZLPKjIKxrh0WAKPxjRWfOCHFREGxpinOG+TuiuHd4W/\
D6qvfmkuJtJ6bp4uUZA7n5wsC1K9lF/wGIi0vqz6bvaDpQbtwP1k+6cTTsGXs6h3Ia5PD/\
CKF5FbXU2MZXpIjoD/LQGVGxKbg8WZ46rAH1NL67fYNqwB2/fLfOCWgL9jgxED4D3h65O/\
ViqPtZOomoYtrV1/90gwgvPtHP3xtDEIj5Zu64xauJoV/kA7DytL77oqFOUujaqd4Sn/i8Xko/\
7FeCfR+VPQ6He+yzbeoeOhDSuxrnIlsgAQlGuemVaRR+\
dKg9VopPVvqYTThVfnHtUQYFBXGaDMuqJzoX/\
Q3Rxvh6SLrecd5qoroPEgOoogKrwxa62DauZbjpBnk5b9K2l28bCAfLoMRjJI/\
HQ7sUVbQmiPAkgORkN69xFMHxHPcOflAfbf6qCwLY+/\
M6g2tbDNqlqhL0HYl2dE92A6t1zTX1turGGoLm6wxv4e+\
zV7Jp4nMq1BwXvd5I6fYsKMHXXSidkzP2uCp6zv6VjX1miEwuqTZeUM6rYVDa+xC2R//\
iZkelbatoSQlfOAm45+ltUKyTUCLjPYOQIUrbrizlZC0uzr/QsEkcYr/MWM+\
LLTHZrIPM1TWgp1pQXk0Sth0lTW4OaPZM3fVrVMitypKUJUmK24kx8pkGSoGHiOsP/\
Vlt5LQh7OeS6/Vq9Hz34PUfog+w21uw9I5aVKJ1+\
hlSkidcPlh1ffaPZBxMB9QV2ej17w5Gq9JlreVVtyHbE5+6/LO+35/\
FjG6gTLMZuGkcOqZXbTC5YSA08FaNp+u5vDlWyTBugUDoiJ0cT87HnE0mrYi6u6XTjcqS+\
ja4eIVCsaPqo34zHKb5ilOHmAq0qFqMCrj/KFZ/\
XJopsYYJbDRWS0WecLRSDvRCxJjteyEkw463YAX6kmuFzpWNTcMpdNh8HTunotpEIbKcMle+\
m7XWnPIXopagpq0yHiSSuZRn0VNnFwYvUDlAOn3G1dbfO7OFnXVPXoPqIfQu6vevXoqyF3stDSEafm\
31S/thBJnY0JmkNOl/4c5lrxEMVWWYmbNRZ/yn5eu/OM3wSdi/j937TBIBHMo4W/\
71BMM9Is4WacyP9LhWeLTfbe2ibPOatt7+udc+ffs3b4jZT/IeMhKI46jHk1rMzKanQJG/\
XJ6JUvnAeJVE5SGPRlhjtRRsAVfeOAZ4lXlipvLF9nmJUbetg+\
cwPJEjHg0YZuYKaToSMcHMngQQbFcybi0ipxeOFmP4g3eUuyzGHqZIEtBgigQvrS/N8cuYALiOm/\
7vadmmXHsL/+Saifb3rEGNM8vy8aYI4s7upnjHK+tqniEkWROM+VfbtGDJRC7lLWvuBwVPFDoI/\
whfZGbTQk5x7M7NxMK+Zg14PMMyHcZWbUa1TQwzlff4fu7WuU8l28EupkeE6cdB5+1a9weHY/\
tYXLeKS6nZzJ0OWXFXE5iEcHlTXGKwpXWniMo8yA7oF1fpG4ckv3G+0uYRtkBF+\
ngBJC7BW3p0Fp9EmZct8K3+uLMKF/Oh/gN/bZ0XcVJMm0EzIWskKcejFSximhxT71yBIgQ9+r9ZX/\
ZKtxptK6Zx6ETQ74Ra5HxmXh+\
tBdfpL7WGmJTnGxyeCkC7TI8pubLsW0WdwS25Kgdn732xwbLgC5luXiwiXZ6Y1dtkSxRq/\
lQqxDqeyHmbfm1kKyzb1X3tjyZGPN2nL+Q1+\
bwxYOo8bU5nvXMPfQN2cU1UNT3pfsVnD6jM4KNAdgd1UvtvSWMWapBwFnx/bwb9TflCsKiS+\
TZ0IHf7VPWzDNCVdP3nQeaa1vchDpqOG3NqHPAigbmObAni81sRcvQbHn2faiEjZLmD/\
1p0gcl0VkUtk/ewKFAhKkC0gQNarUiaSjbswg0lJk8o7ijxeHc/\
YX3K8UgNSq5QC825elyijTFrSHqknYFc4gRzDdadYFN8oza2Jh725mkqyIoJyWbFPDRXmtFrSy5IMh\
r1N6Vq6JhQ+\
SelvQmLElkpGHyRSuIdWOF9CTxeos4XW20kSDuu6cTXd3y6p4uzZ0JsBS9Y8WjuSGlVYOXYBnKw3Rj\
dDGpjYejdkN1lzo6JCJDw65mKYKu71RTmnDOgxmNF4NyOWzh2Cuw2EG0XciQDTlZ5yE4Gm2a0zyHm9\
Quog406wNeR3JKGSrqF6grxH69dknFiMmC5Z0sIYpqxCUsRWw34fJ57oRUPY47M3VDZg3WQwc1+\
NhR482R4tOk7YP6BHsQaJ327BosZ66eOTT/\
6Yt63iyOARqhZWvugYnaDfDo9D6SxC8ekOzYJCElGxGm984V65BlKWq480O6MerumAE9qzvtkKUkIH\
WRLiD0w6Az5uP//fnXjz9+XP3y8dfvPn6Qhhk0wnz4+\
cdffvj04b38Qbv0QS8Txw9ElOiA6JmaJJKk+DV0L4wq4cXu/\
3EZYwf3O8IfY7UYtFaLJM1eenyIubWvUFJCK01wni105MIdhtDbGM/\
PpKTi2fxcViAPr63EBtzS90W0lnpVxSZJSob0uOAQZOf+\
tqxXNyMQnM2IB3ZRE7dhIFtRZVod27Xveae5Db5E43vPvU+\
SQTq0v8vUr7QziL02VYcUZQvWGdmVMY83SK61eX/\
kUbFy5YMMTHFba3vjLJlVRskSEaHsmFgJAOJwTXGNb8fU22i1FyfEE/\
MXdAn9rIFSZ5l6tVutg8dzhSv8J/\
CmyOnCJERmDfm0mv3w7htInXFvrBt1CzI0TsreUavUtQj9XaiQka8JCZ0WLAGHYi2lRab4VoNqyY/\
G69iidEbqP90UehnFq40CNEb2Bt6jwEpQpi1LoD08atFEwWHet/hJlXYFaqN+\
h5ZySNAG5r2jB28rB+PEeDhWPQCibX5hvFWr8GRsv7u+\
GaRa99JthyjQKEbDMDxMM5JSuGKkNqOQ9pNDdaQFy0Sts1S7B2kOM0jcCpNyD+\
dKim6kEtlDWVGMlyR3kyMjvsyuGXbtQfeLmQXN73nwtEtd+SQy0/sJFOheJ6rZD5cRF7y/\
nFpScguR5sAY4qczcYYNha7AR6OYQwlJAT1Ks5dRRjO76xVe+\
BXpNxqOsgFMirxHxRDYeCRU6MSKoP8XsSWlW60J9FLGOWHhoLSMKrP9JWkqvFeMs/c3/\
w9pC5N1Q4ZMMItvESCwKBLiRNGKkzxFx9X5OecNN1qG9jIxOf+k4fDk/\
Ui9UjxIkSUIH4hwANoqIVC8lGj8nfriAKIRxd9GT/BD8a/\
KI5o4WVZNAszhcjRhLWdWq6d3Ju4rFux2xXu08l5xNVNjzyhJPjrNAlhLwuKr/\
iwnq254ljDL7jVuj9W5U+VSS2kjVLMIr/\
xCVlA3Hh9iljFh0j0ysgdu6Xys4d0sPzH2gLcF1b9iFhoEa7Xa5YHU74vHniErXiGYKuZCTqBWSUDu\
QSkwb3qqUV5JIHSncUHa0xK/0iV0UFB9wwO2YzrxRK9ub4AxSURYIcaMRP8Y79KueCjGdTM+\
N4AqvFKpiAVJIgZiWAwtZUtq3/iOWS/v39b3V1ZM/\
fbM7J4Bw2t2SjqDHKDBk80EnUVG61C5ayYE97u2NxRLfhF07go82wj90VJfrru9KsBa1LjUPfAfHZC\
NxY8m03w92plIHQQ9tF+64gljk1ih+93q7+oVG9/omhhRYAF7Yc+iMpv2xgSKngkIbS3zLml/\
ASBEjSaEUCRXy1J2nE4GzGK1SuReWwoPOB5N7kBzJb8Okjr9vWNwEOTKO1EalykI8x2BXqOxZ5VF+\
JA0T8kV+koCkHAcZjiZSNEkVAxq+DP/6RaFIlYnWndhcym0lcDqj3/\
ermgQX4J9A8uldR0NLUpSzouiSV7GzQuErF8zWqdZC11jzcXX+WZOlVtIpRjy3AO5XHqG4I/\
CwFrc2mc9hdCebUUFCjci/WKRFblOtRVT6ghcoJhpOEjCXXY+\
kLvMTZiL7twKZvuJWmkmlcXfERbay1DdzW9InoLoy/\
zfVHp8Qc92ni07SvjG2kZyLN6I8aZj7CnRivHvuQ1UHghpEsR7AShWJj2aF0OtoT/\
98yI5Wtkb4WUn+ZXIrc8CADMCX9pW2bS2ofvg5FtKjdU/\
2kSqA8G2jmCDeSulBE8LUoZTM0wHNnVJw8ponJnuOubOx+al7/amIqI30niwkciyvO7+zHZUzJ/\
aqG7MK/724LeFg8xGtOC1j+UdBkbYotvnyxEmQSJZKYo+mDurTwmmxsd2qLIFcddYF02SbEGLZH/\
xnjqixCSCwKLlIygpNIoVgtY/nidhbPp29b280VcCh8lkLzMylm+\
knIUlLEUEXsXF9REuIMR7lfSL9lz0bui+FWC2KUwk6Tmf9yWrkmKHGcG7JUTBw7n7shL1nsFB/\
Wq4ikUYL0F/\
TyN4Gz2Zi5hQSpaoYWoyWrzFo8KdnBJY3nEA6BLBneRWcatrgoh6HhmWFJdSeKOncDg8JyUrDyd0oO\
JqIemH7bOQ8ZnL7tXgByvFjN7owsfQsfrYu5Mq4yrkOTRBZpkrc5dY0lUEqSwE5GtfFTSkPcna/\
xUEUAg/qoghvzZOi1KAlj8RQap73i6aLqEcuMxWgJqo/\
K4bdpejZ8NAMMtI9bVx5YiwQmunvLJwuHFCOm0SoDmoJsOFo50Rnw6omwiuEoEyFgvWhYE4Sinbmud\
wFX4zycsSEKToJ3xENFBapEjiWNc0L+DyJgzk6eTwIFynjFBKF2Nx6AvyKS1fZjk/\
vq0PgfEfDUzXiQRIN7me67LgdHEyyg7trY5+OVGaTtltyS7D9mkWU3+wWrUB9Z/6FfmTbeKUQsX++\
3F1FfxWxSSGy8qf51+dAaQCOf6gZbOr6QHWWnaeAr/\
1fXhWO5EXDTMlHskRoXlGCZXFy4kGC5hQXTdmV2EY+\
1vjCYUaS1i3RIQZ3ztPVEusMTOTxKk7kj0rV/\
4CC0xyMjRKXCeN1fUi1nedGMNUcSHUQAFcLF7I68n05MTLovd2mVig0DSNNMEq3QMdYgLxiebzEI0c\
me7R3HFlbnvmk4S51MLKTTdOiOkAsgG0XMalvduh4wCVpgqu1g7p/EWkEoLr71Y/\
l1cnxaL17J6eKlOEj/GuPbe5rcxk2XZcII+\
mbYMTh1zqxs3Pq4WaJt8gcpC29qZV1Z1O3WAnXR87SIAyULWhhIvuK5J5loUGDdcP8HTXTc5kudnHm\
mwihcKHQVFUWuj2ubPI0jk2kziMmxPpZ5gqHEx3eM1SPh+tjtSoAPcHipnazxMp63hrtm+\
WtsvNQ6bEigxBLEtZ4JZ6YRW4LsdXRKsMyi0szdlKjkZ8zR6ivEZuQAlnkRtVfE4I8WpZHVWviwm4e\
eF9J86iVIXP3QDxqO6pTKjG0e3vu6GdovZbFudLY+PZD81Tf9p4fG8SpePz6kMvEr2jp8C+v5YvK+\
iJRQXNZkvDEXIzkqOnAI1THPyu1DqGHzFC/\
5OO0b85Tv2RarN4iBkOYuE4UjhqMwqeSY0EtOi0aBJF3lfKIGsBmBp+\
9AO1VSgAMXt7K2KLmTHbqYW0Xg77E4kzU3VZ35mCLCQTTsjoTAIMjbLvVp+zyoTayYD/\
6ihmzROxSHwQmSAqjsMHxLHsSY0uBbN7yLHLG8YZ/\
gRwvDCmMGXY6CnJjtjWSwxlsMXYvrTzxqubtRsUtnYJKRHiGoGsfu2O20Oz32vjUZhGMyLM6Qi4ShI\
g51N7QcHyMnrvDWHnlitiaZRZwu3VOiRfmpHdkGiMtK7qCsixtvMcD4uuJbwMri8leh8RYVU0MREqe\
khgb80MsfgEePuoLa11lE23v0sKXDOzKL/i5Ap/D9ljFPKk+CiyDAF47itsg/yU8pe+7ryvHoQ5+\
mm/PXTwHtu9alwttA6mF4hIg92BiCPQZY+tYcTwQlYGyM5FyQh1KetLCgLyoERym/\
0GTwPI7O0JjMH30E9aQlTrtEAfSXFnt7HOgzy7Fk2R8gx/nj30c+\
O8LDhH5F1zb5BPpoHHpZIz2EPlRAK4OLoTLUHOBkypPFNwN3tHtEzCqGlyz4kWuT0kY/ZY3yayh+\
7n1GNUH9Oim9lbFS6ZAzUdRR8aKNGUBrtZA+U2/bFnxgLr6d/LMqe4XVd89mZY/\
zvysiaLUKMxPbg9XLRP2dMr6K9l9coOnvGb8ujaUZmT3S6MAPabWf72z6ZiSfV8uKaF08yWO3JLMtK\
1HyFsDZ/3/lUrCH4z2BNaOYO0LJ3I0cRs3D6r2UK023J64L1oYUzbxtFXK2nriPWUS8+\
9rGJmpl6QZevKFccq01LdLcdQoCIzdUq9UMj0hkNQ5WuY7MIAfhn6R2yE1c+v7ek/\
lH24ZV1SnmHozsmwjFQJHddZN0zrkOxqdBMRCZ1ux5wieN0QOA7CSemPOL6C385IO7ISNuq/\
aDaMpOruGUqCkL8DxLEbvzD3fCDl3Em3C94GBEDly95DJx9tW3FIBYaRoD91xfGpmKqJRXE0FESxUd\
d9VG15ST+f8f7DRaSwWbvfbDQDEF0ZrsuFkklbYncHqPb9eYPU3k46x/\
z5y3SymqkKEc2gHS70547b4drrIa7cyLalcxfrDesE7l9eAZghhItIcg7xRHOGCJaNIM3nNmspbR5n\
3PLJ9k3lIGl/\
QhPN5LCrrazIyesFuJzeCWbPHyDGi0XWD6OMZdccOMfvy9UP3Z7ggLCGYdyIlGcyD2nlF43QtJdmzq\
LPO+t5oTHeZHopvq3JGaDJppnVSVO6YNd4IM6a5Vm6VcANDY/\
FRfgWv29DHft0fFM7KzNItPosnUmr8Oaj26fKo85NqxOFo1g8Mk+WeiUnK1z+\
0u7LT5WJbtcNxZS0e6OeFVeujOICsoEDO2FIhqnEc0CX0wS8lFgEQV3xVE/OX6w8NJkPxQlnoKCy+\
yK5TImuCG0C+0JjW+UJXRHKSkCNyGdtBK6YpHdf4F2IPzp7hFMfS46Bl2z6GzA+\
ektwnpZrzYmxWDHV55InMjjQjXcD6U0hcKO2tSAq8pB8z2S8vw3zZgZ9BpSeDzBy20bF7vXHiIg5aD\
6f6BiVox32UATBDodEDIS7Mbcir1TeoU0PmQKNjfhkNOEHaDacL1MyQ7OxOobu5Ky1zZCaaJY2chiC\
qn+SP3/wIx6Ddu1z7LYsbPPZJTzd5UvegMJ7Zmv3RsJK973QKc/fAdqdmAgzPNnatJa0WZKxCOz+\
Di5kWhXrRXsc1mPRHuMh06JFKfvqewhVsgB8azAogGo7lzz6CJ+gE/\
irFBaldVSwysquLf7pXQswZ1zznIQuI+\
s0Fq4B4KecAzsSgStCBCl8c7sfgoMo2rdqDqJ6rcySgLrYZKgLkmTNaJZZNut5kFqz44X7l4bmkxHl\
awOPLbFiy6b6NtggrfTz30iZXW9yZgu5Zu9rhrSf5ZjvZdLQUQPHTlZ5C9Ga8umLdVRo8cygp5TtMi\
EqdeZUi0RylBcgEjr0IauGgjgL0pfk+\
xKXHycTF0Xhub2Qb16P3AD5kKyhZvOZh52ozBFHz1TrgWLm5dtCu1X+F39KmMdKuG/Sfjci4OmU/\
T6Z9gPtMPbSIM2dcTIzvO4hsW1NIhVFi7KKcO4e9HCWk3mBIxheKHpnhLKNTvdrf9rDduhNb98xHgn\
+vTjyuVVYqeJcjUP5sSZyDEeQZ4Tpwf5v70TT6WQxdYUD7bA5JL0pxabJz34NiVLP7xoju5fO1VH3K\
fUghuZAOrxoefFgP8rGvJTNKoXyFlGILLRn6oSXLWHXQSXYNpWPyOCrCpnonk79oG5RucLFWdozW13\
PZCVorxOn872VkN+/k4KzF13cwMtYrQIn0/\
ImdsqVVGSVXFspJjRoMzrHSSygRQe32M0jioUg4flrraI9S3IzNtHGK153VpnAl7VUUhd70DnC72oM\
/CbTlvN5lbcIkSYmYUkvRilAxd4HZXljS8/QyloOkWTHlj/\
rajE8G5GBnfsxSiEkSFwtcQ1pcPRYL0ffbEFDx96AcI5T9F5i+w7tZSqph2RnomZQIlBtH/\
aUgt9NrcicqyvmHL3sJDTMfooQ2wKE9NT2YO3WCxsnEOPdQ9dqG5TTEqKwrHeVZ5w9t9lefM2Pek9f\
Zsg2Pb/yPW4Mf6fy6i9HisDqZJIdCxqIauG3oDHQKmDiyJDz13kwBqaiscWMH7+\
ECQc3s7GxygnjBnheAXqoAK7IeGk3KcJNWb9lK2Kn5sQAIopjo0x2QlN/\
kj5ssCduBRFLUpnHvp825dKHL5ae0Sjk6RB4UMGBriuN4TKKn4cdW8b3q/\
diZM9diYI3G2WqVQwA9RFkpzeJXt7VjVDQigZZBIqa6h7TGQ4pbm7UWkT7Jrl0JkokFzaip10rM8wd\
6xRrkz0Xd91F7KQFtDiNtTN6cGmeOpPlWrnS27LXF9s8YaR9reyY4IrEK8r2kyHEywwh6KLfN+\
Owl7bGyHjjGV8b9gNLgGrqj1H6keBBdEA5Mc+dt2DTc+f7hDOojHVLzZn9ULd9ICX/\
mFvw4Q2TkCi1Qz6mszPaltbsJfchJv5Ojmr+hJpokScky0J3itKKNYaGIG+xYOIuacTjlqBivIuK+\
40RT4uHRjzxoBuFoPfsCjCZlKqJZ61sRZHM1WLda00DOc4LyHQ6Shzwwvp8nDIT4UMPdHSrJIqFAwm\
YnLHLe+9kGI7htihZNNlJ+IUyfi4EievXBt1U9SDyc7TESlsjpw+e2FgpbkAzDTRwTpe2UOOXe/\
Gm0IdptBxU3ooxCnUmqELUtUS96qKhdiXOnRCDl02NSqWt1PK7SeG4//4T/raSbzw2O9ntZVdfju/+\
HRCt1kgdSHixP3bjmMqer8L9ZsSmtGFKFfO7pMVk5+5TKu/BZD5+7A7FpH7ccwqoUyUn5e/\
yGhFVTGur3jIft++eqCSmSs2Mrk/d01PDZsfudOpfNJvy9+erZ0smRx5/\
0L7ytRk0PJPAaXvher3an616yJ3Dw8kCgSNp5d1C+\
E4iOo9gttyj30bDu4QyGn5YCVX5j2ZaX2sOSsyMmAAJ+YSeH9el1J+\
83kD2I46oHkHCxZ8abcsXSwgiF+nIaM7cs7G3BUpp//\
jWOCVi1pasmzbgaCUxFQpeMYQ2DePhDvXjDiW6aNdYMoWKlEqBbZjEB9xHrkJmDkWwygNyabBxY+\
95/4nDGiYDPYzawaR4gOhA/uHT588/fFy9/+WX979+/Onz6tOPv/z86+\
f3P334CJqwBQ3JHRlc0MeIzDQgsJuN3vYPdUOgHLygoq21dV4FeMRLOkt74y2Rn19O6QL79qXzu0VT\
0mbzaX7YAXJ+rLTDUKmLd+opD6RIcEF2R2iZKDf+\
eCp61864bGutq4BLzqcm3jXAA4Mycvt8vVstP0Izzp/\
CO13h2s0CFwn31lVf3HpBucItd24xSE230W4QpBqAjmE/ry0excCqgLQT8UwYLj1omFYWver+\
eLWYlOpo6cAmEXtj2YMlzlBnb5JlFi8DLP6sLDRWNjK9y0+ZE64iioU9Ly7y40HJS4ZmR00+\
AIP08QWY6BRmnkYk95c5fY+H1tnOlRRX/\
LchsTSVoLHZfcnVGKR1IsmGfvpDtNsgLdRNFz0xw1d0wvNQQt0iv0o20qW0qR6sIIPRxFU3lCCbyEO\
F4DeZqHSelzpcN6rsYBGslsVdhxl5133WF+nG1bzl37gZ44CgW6PltFmebxlKqk7mZNIQ/M+\
1lurihcry3v5D+2b2g3pC4hw/Hpw2LXWGYtNumTDnK5FFzerjS+vMb0lNHGw/\
dd9HW2s4Ex9n9CeSiSJ1s2e3VonauWJjzQhZHsdWdBVeQWNHK9PXBc3D7Rr7xjW/\
K6OcUL7ecSUewL59bLnAj2XtvLTRyzxapafEKEcAYX0rmmoz6+dI0AvQ/VzcRTCZz+\
hRFDnhJ6F137DpxLiWyHnpopSseXqJ0bHrq6+UlMqyKAN6HsUZ/\
9rlmg9dpf3dwOGHagZDoLLv4ZTp3mZkgNagMr+KpK+\
k02H1kBS7cIER1do2CnXCsdCrzydCcgqKEctKWEIjRIpo8mgGCkoBXGBCckrfr9YhK6EJdhjOmomH2\
2pP1hDbzRudbWYYoWAXSh+\
VNNam3xB8rCzxngrCAb0mq3PVXq7NIIFRIyOvFuwVOxzbPnejLwSsCGpSuC3PptWVMtRUURIUjKZvT\
9dYDt3pH5rzcM/ADrsqzMsU5knW9Fl4YJbrTS7wIQFPFKIDPVZCrL4MtNdyjhpZ9ogy5+\
Gyux1lODIBoueZyHhH5BjJA2kQmdjs+bes/5rIK/mUCmxK+S3B0GwMBClWcmiull/\
VQdHpIZTNBFq2imUVbPvlpMa6eIasnQY5Ox40rwmFtSoFUvXYSLMc1dvdhh62ceZv24TDAHpOiJCsE\
87mYk1YWTqL1tWbKLP5LChYcSz7wXByHQGl1BOhPLaVWff9k7tRsJ/d3utYo/\
ZQW4qjWAlrD1NkFRicIRUlbrq2l6vgY9n2clX3m0bxffbJcZIZDx8vZZSrLRk+\
SSojDYS92c7QrEb8MLeOkyTc2UZoUQhl4ZCI7r5gduvM0FJslOHxUuVDly7soio+\
rtWMtdPu3XpGtgArpKPdd8IdJDiuw4VHYyKaUZpMJWBKc1CeHMm3SMscmlcegwr6sN+oL6Vet/\
A5Tc9J8kOSxQ33Z2zqGEynEjJXZQTrlPVB266VOIEFVeMmbn+/3HYzseIXsIJMFzwZfF28u/\
SQ8I4rZF6Di60rzLVUAVcV1RhwnkqppWGTwXeR3yp3ODofFKuI71Y/llMMSDXUVpobWYKa/\
u48lHENRDB0oubr76HZ9lho6tRYMslX1qSFE/UVw/\
jKKuvTUxhQ1NptttqSWpmNdLAw8M9RdYSTnt23SpCmidn9Jz7KgjKXt0KWz0G5oOJSpqTwWV+\
C1wA0npDEoeGYW/WYtBCvEloAFUgH4aliHwPMn+WLLEooTUxKWl75l4P2G+\
BEIH870OKypNCbJjm7PRAmzdXrhlWXzLM2bpuzxTFpRPMKGxvwwkQ3LVkf6vayjb7dPA58J50qTgXz\
nLqJ2plZJthfninM8ka+8GcRHfrrZqC9JPR1R3/\
nQcu63eiZy1OfQS8pdBMtDKoFLeH7sHKTBYOvVm9xORMn4eDE0zfHrYTANGM/Nocy+e+\
lJnIuduipN/5l2KxiFTpo7YKOu1a4an8vAxm7qZ0FYM+\
I0wT9Szaehn1oWo4Juu7QMDjtLQTzMtDaZ2Ot0sjTczSZA7y18y2IIgxxBmTPBXsFPTeFXOuoes2B8\
3nioJK1i+fWJow2vo+xcspkd2vGO2yKGZBi38ew4CaUFaJNySjcNwV4Eu76px5lC+\
1YrqwdQ0n10BsbOCPnUyO+SRLkRk5FUy+Xg+\
Vxo4AjYbV6xeCe4XGX9pISxSrNvpTxLkLQ2klZHdm7Pvgc2YPMfzlIRkpEF39ZdgNPn/\
Fy5ScTWBUB1cqdbawUJoTOfmheGTVfjaVe8w1rHg66AgKdvzAb2F6HEkpuHlUnBOdUmZ8vIuI8Bu8Y\
ZlS7Hi4uec/rXg7sZ7uWJf5k+nVVEgGreb+6b6rgQ1JlU/\
J4l6GLfGOyCO0VRYFDN5m0tBbuJFoux8VpRHBLH7ADdt93hA3bsQ9Lgw8ZvtDNy56Zcl7keA8a67KU\
26cndxUrdodunJ3L89N4edeMd49Mo2SNmZp1SLhi3t+\
Z8ksE5p70s9ePI19RPeQ4YLIKNabwtnKqO3GzdccSQ3SsJhylRiRGcIdFahWhrQAJHq3D32hGIz1mj\
7MdTDhFzP1eWPwm6Ep6EIV170lTMrGK17HZ3LQGa2ujtFHtupeyYv4FSjT9hVKITnXbb6o5ZgWgOD8\
+kLHAud1HZ2zqsL61m3zfHM8hqa6C2Dy44dfau4KYolPbJi7STkOYfjjZLSzXKC5geQjJzOh8aXzMe\
eGakmAf5hHf0AB8ddQfEmtA6Z3XmmSNg9WVBNpBOQQJcvu9HXadqjS3xxUV8+\
DKmIlrX4xcvA8N4nKevnRjalQzIhVGAglNm8oMuAgVZF0h268O4zUb+\
NYm2o2U0HxZQ1Y1FEvG8lGFwUtqfBelLMHv/A0lM0n7YHXG/rjlfQ7Fk2a8EYqhJvGKZYjEzdA+\
RTp87dqfzIAp6anjBNYBicWIQC+sm1UOfn2fyM7lwMlUl4+\
a1BN9RlEx4db5Ilk3Sdc2LyATXN5KOQLSQpzTQk8hGEOZgDaC12jA9oJj4+\
1sYP1B0m2J5ghdxrMClOOR8xAjvW51BaSeJRMk7hCjhPQDbsBYejzzb6bbItC4vPrA8Drnu++\
9YifUAtgKQ0ZstMytZY3HyyjJzk7bHazxL7K+SHWyP2ZeTJC7r5VvC/ula+IyQhrSd+\
U5mAaziSYO58GTnxYi2NtBnkhzoK0Xe8IJuYNSewPHKBaXHF9q17kaX6rEiIVzivejp5gxDHb+\
uQWopLdmAsU0P3YSO8+\
cUTNASuFkOW5NimUyToYvEjfsqlNodu6o8XRJ3CQqIrcJ11GbIPvKKbaIZ6EPLxEfKdmYxB4ysUeyX\
Q3o/aVMms51TGIxVrtu1GPbZ9aObIPq5OdyrVJTSfyUA7VmT8C2u0xI8Fp5Z35SZ+Z9l1E/\
RsM8wliYjR5qLoQAPyhfbrmXJl9SZolD35kWO2MDrNVBC3l1tZeRelVdK1EbCAlt0m9yO/\
D7kxQuy62m/\
iLgV6wx9H2pj7Lrz5qglpThKJhyWg6ka4jLsNxW9yL7bOSBIOUoRi2mxA1YJPOmEuIzEfHaD14gQie\
mmLBD8qMWGs/\
WNPpKJ1FMlfjBZcdIMlNwlKeKdJ8jv00K1UD9OSKsYr7GE11rQ4lrHyv54So5nxAl8PRv6B2xXHoqX\
QlroSFo5GYS4+\
ujUE1uAMdXVK68xPbYCCAvs7iQQvyTipKm1uT5YAntp2QcorCL8SqzVKcPX97nL9LtLIRAKe9U50gl\
DZRXMwWp5b0m7lWmKm6ytTIsTHuioig+5mIqVF6cx0FysLcLCVFZ4armaJzf8/\
wgWuSlO3ye7hSAY3dgRZo5QcKNsuAlmSzGm8l7t/qtN39kngB37C+\
SYBzVmlKj1cfI8KawaDEjvPYS/ELacq2c3H+Uck5KJK8LjyJ7uFWfXfbOzJZocK3y19qIynWu+\
f9jztg6A6X2GOprweklqIuGNWWjuBZSkJaH7la5Fp/b+Wt2NTs2WKV+VBjCqvu/krGSdBW2r+\
twaDeWJiYSkPI2D+jTljGjDmjoFDGXVLBhSeZAsvlePKELW9N+fAv+\
2tU9mclnG2rVjzMqXSsGzCnik8WCw/\
4HgjZ9QEOSaIaZCuuoCUMhyIMOqrm88Q2nmNdKt6BwUxvYRFx07E9f2qs3OgLFcGifPPQoBqiNNkgV\
jWEazhQ09ZeHDhTB7mVJ+\
e6tgefkAFL1zSNwoV7TUvhAvKV6bXB9WtYx2hCW5hW4iduJXVcvxA0bbEQz2i4hoOeKReLMaW1dpkU\
KViEVeCMwRq/GrD97I7ejlemC8aGciE7mWtnQBV+vUtdklayF3l05SrTnKJLmyRG5v+\
UtBZ2t0MbbRaJecbVOGPXOVoouCQT2sgYq+uLbZhFvZcnwAMywG11gqob2dpk0U/\
WrQIfqn0wcfOH1xAKzchiyk65IOtdPzm2vS8kzLMVqjv77ZYZ1Cnrs4RFblaGvvYSlN7FgJK34dT49\
7pxMUkFV0Z77/ldn0pXOca2isF8diTfNvgSyzUS1q5N2mzW+\
dVBcLFmoDKQ4pd2JTa03cGsccOuaec3K8rT2el7e2pTb2l2HLtXjZqM358APxs5p/\
1zlVnpDMdbJ0HfEDc+xulX/qfN6nq6ruRqKARetljhnZMm+rxVgXafToQYYJcgN+\
bryFTM0idKVOVerKbKhf+\
wAymVuqxJR0NvSrN5BJoNewtMzrusRJnq2RICwwQavHmmdSkN2fDRxtAB6Uh0u/\
UsHQF0YzGJzhHtLdoKzl6CAKM39YgaKlyu/CF6wiqo0hqSIt3dz/kuwhSbmy+zOzOatfrXeNZe0/\
RB42Cu/96Kp5cWY7nTqnjskNBI9JJCKl4poc6Hn+a75Se0n6v+\
U60tL0egCYCgOdidjDb1tjcBOEyFTuKZKUC8DAe8mcqNgONCOzaQPx4l6bZXLg7KzewV3+\
TE0IGM1SpmHJQpNMG2wPsyfE2cbmENrprJVV2PBFSl6Ze2FhuUyyflVkw0vUMWJU4pBdLftYTrIajR\
c6EbRBWP+KlojNoSo1kjiQ1+yd7eNfX+6PZJ3kjq7DAeFU588MIZBh/\
9fLm384pIEc1FhJ83EIDA1fS+LEar2xpeqHq80wol/zFpEz/\
yDo8ADchq0h0vWEJEcmw7MLgC7aG1dVyalA3PHTlUQ0C33QqB/\
oETaLVsh8ovOjWMgdyWYy9rZufNgZX4p4c8VSyk6we0qll4CvpbCsecGs4ev7HuFA6sVm/\
p5WkLYHorlKuH6VkhKyHeOJfilylE9GQFU+\
9IpKzISpoggGC7jP2P8l5MLVhME78YcGZ73QFYyrDxrAq6TfsE/\
oaelPJSwZ1mjyt9MaAom1r4HHJkwkVtdNCrYrFwP/\
P6M2kISVkPX7D01U5Om3q6iSQHLzKpCv4otv5V0Y6VtgMPcM/\
VwJO1DcQ45yLmM4qzN28pQ0CbUs8RouZY1KanLXhe3O8+Sh/BAaM8g4Y5eTAUSNSF0KvmYY3k87hx/\
YT+1r6v/p5WltZ8r1DTpMcXiKt/\
9vsJwPdTo5RO6786dhKbXrj3s6YY99lp0YoGcCgdPNgYm81cJQyplHc/biYv/8TJAy+\
CeUein8I00dZbmRdAlstmQNWcR8QhdyAayHOoqiPvxj8v+ycCU7FBRmR/BIy5Na9IatD0fwoLcESD+\
HyEhi84XXJKnBNgUNDe+jdkOQL8k9cSC+\
3tga7BmGWEeJHmupR7Jv4JqUoU7jF6wmNvnYnyaUWIlcKBPl73W15eFGlMiI3LllWjhZfQ8iQYzSkh\
bHh7NHr1UtzrQxUQqXPk78q2aQavX+oxSfAamw7I/6g+lxMBriUBTImPbtmm/\
erMLFdcBn9dkMnwSFqWSbs460hqYLsGbSOL2VQ89piJ2X6RlUqBIAyZGgUxoFiw2d0KmVCEG3J9NFM\
DpAaIgrNI+/YXdsy9dCSiGxoQlQBJtzkJ+5K3Q+0dks0Cbg6PQOLIj+icSpR+\
s2ZYPQNJiF6hQoYtmyqDuJbYKdkjg7K/\
BvMYnbhhS9Ij2U8Lh32msWQccgH5YfjZryvHOtadG1l6FroJeAwNtT44ZYjw1SAImP1VJxFxXwlwrC\
KlMAKOP6JbjC/wP8wvLq/2GD/RYn6F8DG2BwUVpAJMypUaAx8sJu98OwvLpY3fwFliBL3aD+\
s5LBcvQkyT8KsbqK49d/\
cXA65t8p4tMTYN8t6wAMA3KPMn4Yuw79Nhm1sajsf1pKy5bxR47702pMsH1feLUSfW3MjWHykWSJxo\
bBQ3uh/4UoCQUO5VB8TKyODmfTGKrXI0KZBCxRnGFA6l5BCh4aKQyaWrrk1L37AUnC+\
eRNK3tINxGwAAM47cSVGgg4/\
2Oa4OwuehQem5iELDXwKyFQso0tJ4rLKu4PW2wuznMyyCFBw0bVTl66q2vCL8hQAO/5Df3+iije/\
qyH/vhZF070vcyPst3IfVp3Zb9cdton3CipnI3Y+4KV5NtQhMKEz8oytr/wMesmhiM/\
asfpsuJb8E4CQb0MEgsoOufkVKvm6/9vWd/\
7dtCSgsL3HJdZa0VgzgjH5krIZLnwy1eH8whfaVzZg6LZBjBftWNKSpWY9+\
IXN3VN4OfZuXVlL0N8xZOpDDjCL7G6a/lVH/shg2Rq7IdpGAiPE+XfaJKyaEYIVmy35+\
G5nSRzapr9VXapFRlSUU6peavYt695j/kF9+ufvvbjz++//W/pB37w/fvf/\
n88Vekz0nxZj2G2sAaXGSZJ8h3hjPMICNJNAtpbzgsWerpcI7y5o8h9XXELKsuXRmDqdKS7TCp09tg\
ZP4Omjc1XKEX2CvtWifhmDfeZ5aBRqtjO6UwqAxRvy23HNqYoJG3a4L4xRjlTiZc4fhjuYsJz6yUbk\
CT3vaVBe6BG/9NenmJS6z45iT2Qnkod3w72fodiRv1jQ2EK610psAEyftpnZ+H4SACKVD04Dey/\
MDkQfuwMAxyF781FtPlOZ4BGqLZUY0qct83BPazh9U5C3s0Wu0I72Vqb3F2iodpdGkHCBp5duwETWQ\
TiW/stjgOBqFGJu1ZFJNzFs5JwOSraCIAzNwvYYdRa9b3psPD2ipcMyFxaLI92LixEFoHaawQb7Qkm\
iHGoFPHOjrfJlVdEG5P5XG9eTpVcvMpU7xCLqGn1EcqD81/+K8yRu5UjJiBg5xOY/d0Uqa8N251GS/\
h2srg5biXwOuiDGRakaFQBXhjPKQuD3WiEN2st4Pf5hm0ziIEwQK9hL5fGyhUS2/\
diU5wDGed2rdueoiDbRsui8vXLj182msESjjyyuB/3Wlp/aObn1Tl3TQzRnOTLW6wg+\
sr3P0CF6bXIO8Rz6U08T2y1wc7mFDJqzMMb6vSLFBeO687RFicF5qtW7wa7NHTgd1AQ2qgHJbMdOOG\
Ws6kN9uvkroJJwHOFQnpb2p9mURdpwx273KqNQWhlSIU5hj/\
CW98tOqaBjMRxKxXc2VYoqBu01dog7pqAHvoQJreorSHPdJAVq1dW1SUoPqpmwtHnda429Y4T1I9ew\
31caBivWtsDS0SrKDhMnrDz7ktnsxhzNhvW0jNRTrQ3mdGs8yp5320Y78kNzrncXhTaRTupunYshGW\
+bfm6akd7GQj/8INJcnVidkenVsBdpSaTa2iirOAEtm7pNiHWA8vCt60B8OW6YVJPP2p7OpkAN+\
TiEo9UcdN+U6JmzUMxs5jSHuCzE6/mEF8o7TzKSYET1brKBBfVJk1CR8ytRahw+va7Ny0+\
8yN0Im5R3/L3ovo/c8E1ncpOFXaqKBNqMalEOYQbo7499hOTVkh52frcA/NowEs3gfhPEhkpd/\
VKdOqtZ3bKmM90cxYcdCjD3zYBKReuuUV2B9copr1CYWmmTrSjGQnaTd5M0LFkeCaUSEnY79REPkNk\
2Gw49YjWahszZSaND2OVtIYQySGyjo6SJHKBIw8mX7rblmrcrRG7TNdnXcBzQHcCJMqmjTSpDDtakQ\
YU6/st6tZSdaUTsj6n3uFbA2+\
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\
HHPa4y2soD2gsxSI3Xkt3FebsBSaqIJ4MGAF/+\
WdWgNtFiIjo3bGCE3WcC7rpRlcRYu9aFpKknqbkmk9N+WM2n15MKimeHQA2OarOITV5AXw+\
Kjy4tery7n8ai2MFtrS1v0+ARPOJLZzITrJz1nFoKmWbpeJi5cL5hRDmcxhz+uttcIWg9O+\
9aHdxGkA29BLulxAGI+WpU/jGucDE2Qcqr0tqXzqCUBXDtLzKqQZowZDx+\
U8r9wvDZ3twGI2LvrwqCt12tmEaZxPYNCXgxJGbZU4v2ThVKnSPa6Emuka+\
SkgAR7b9mDB7bYsvsduskLB2lYNLlv2YTOQSl15w3MDk72Y/NLX6CxjPk+\
XchnvMAXZQvXoTHIh579fHdpHGcdjzuwNnaKY7V6IgfXpfIoo4kkMo7WPLRhnntBKf6Wd0JsNeYSIi\
9Ma/7bNspETSUfarGf1LBwSJ8inG6vRrdV6pRa3o7LJj4pBaagXZyDHhcgBmpQrhUHRqaBD+XTB4+\
JJf+z/heYkuYBykMlpbq/\
1XM7bXgCjKqEsBesrZBUl6Uc8ggUoB2ecPosj0u1QNtkHich0sWz5qffvqKQfjBiDMGKiZe7UGyLGA\
8WMPp+7h6sLvyfiKYXMmCplsajE4Fb9gPK1GkZUxZJ3yj2cci2sZJ4lr/\
JmOnspVaWsAYYAGJFMbvx6RDRg5B2adq2WjT5RRIIxztTOpIxUMt4G51hqVXzuA2rvsWLG1VIo8E3F\
XaV+52wwgtEGMncvjQ3H+z3TeUu+\
hUSUDyqy8q8WyAQrxy4UdDMJhwE0coXuNqn0bvW3gHGg1LPQI8f21DmiQAOwJYWZ23QBe4iteJersC\
qF8rhsCWJa9gAMXinjPPa6gQhGYectyXX7mUrRbfZRq4oGS3PAZq5jG2n5wgOh/nZ1Aj3Wq6/\
1E1oCfAIPSnmBn4JI0LPfvlxdKwj4pNulOyOgh8d1M+\
FLSwRAKRwEgdY1HsM9Gt9VChXbNb6z745m6KW+\
1jPfb3nNMvkzLfQuQZixz1KqiQHZTT9vovNR88wlrLz6ly1Z2m7Y/Ge/lX/evuH+kSeBvhfl+\
SkvF2iD8tXlVzs+yPHCkL9/zF/KGtoeytYE7WpbnAaA+yJpaQiKoLy0Q+\
LaQbeuvX1fYGgLShTFf9zMvl6pgosNT2JJlBUpCZ/WtZIKKrhz7RINEvfE+l2nh/\
e88a341cKaG9dVgwl6blKLHgVqTIXmngh59DrAot3MkC82M7KbjVrDsY0gxRqHE/\
Vsd5LBmgTlOLeZm828QcbGzwrpQRAuyKx3J+\
t1YPsRKgGtiP1q2hsgingilCH8wm5L6WuYTYx8RZoK646C+jRCXbW/\
xqHZsQDKWBKdfcI9965SnRwvw3nolAT0EUx7lnW+ITSpUtkz2pg5Ja9rvYaCEPtfMbaf+\
iG0mNbes37qsxMml1X2SdWwNUXNgOmUaWFfhcdtuYFAeklTyb8yqSnk1MNFmi8kujNSWpZj+/sql/\
8uwDjA+xnXKTZLUp70uUnF5Mc3W8i504n9eLf6ECxtcTBW6iWyXhNULNuZ4NLAO8ilDr9proCkdIJC\
I4b6C6OC3NV+ipeq9G/tifRg+\
1vm1m4oJkSFGsis8xDQShgEreZRki7liJdcgVbXzbJekHSTK396kpqzpPS1msacXLSZqv2IPujFLZ/\
2njJaf8agOU5FQlrkwLAMUp02b5q5RUG2IcFowfAgGwjkgRri3mntXiaFvGVOwSyLOqXnOJXssx2ne\
gYDkJ6wnhqtK72DJ2W0mVlqFzOKlnX2pSGsnD3pLuotjRbZXvqDsFwD1+\
Gt9sz9jq9CNuawKDpXIrkWQmF7oUHK11Aq6t6I/x+\
JHCsvW4ye9BVD81c9LOAglHxLMOBnjGyLdHa59r/\
kFNFxopFmX2LqDfoWjCZIsrVaMxbZp2kChE7kK1k/\
tjzss2Tpg46i09aJlwYSwJCgVEpr9YHsvgzJXpW+\
l5NBapRm2j1btZrSfIFdpS8gcqanMeVQT61dARyvjLVET6nda2JxgKwCrqmZKrCb541EbWhFNB0O9G\
B3JMpW4CHmNZWpZGqkv/nUaD/NfDQ6M5Tz/cSDB2Na6YO/\
iGYHxqV0R1PFZM80x9pwjW0jWCgBeEqa8HICzgbv1cCyHPmrnJmvRFsOoLc8SLZIMyBxGjyseHOxHI\
Kg1WS9+rPIg/LprOLabIWW+KR4UwWOySsdI8jNSEHg/8Q04Dvr3ABb7ozlofOK26yrhy+\
GXPNxGIreOiCFyBociqvc7aUdGYuce+\
sfl24XIJZGJ06QtK1owcZZ0wiG5KMRutMPZw3I1um2FY9i7506tkpk61WdOGpEXmFgPQlhyhGTpW9E\
2Bu4FKsoMVqwlgk3CoC+\
TNIeIADy8saEnkKLQ86SH7XjCBRs4JYZ6SYzD4mAHIwfoVGTfqYxTpVHsfletpC2MVKTiIdKNfIXmQ\
SYYqevH4Q8n8Z4XDDF9ymzkAb1Cqi7TeLSV2cR2eRlbiCEnPHNN44fDxWsUlzjlkVNkw/\
l78NNYJOPJeOhXTtiRjovAV1Zewkk7h0MF9aH3FKkJHiGFbvnKiLGB32HpUkLHambNUNsc7EHudEzh\
SzFKiDSxpCjA8UDo6qiof5Sw7pNlO4CoTaDxWBkEWStNTa/\
VUx5kwuerEJKcqDnfDNGisbjmAgF8IwQ8lVFG9UdIe2VnnZS8n6nWRUCa9FtsJ4nZSLq0PQMA7GUfW\
eucmhAmGY/XJNzJWQICJsaav0Bwtf7CT37I1cSd73jFFAyR2QtJXSzcsgTaT+\
v1P4UeBcKeaPkqBle7SThp7fUT5VPEC+uPZ7bobElzSiQ6FuFWVr9kiU40iRbPgANC5YlKC/\
hUvya95f9ZSvUOuU1UU7Z3AevshqkDC5vpcjij3vj8aoROfXoTODJMIoUrvxDYFZlRf+\
GkuK71XdCxdwH8ZUSsIvaGGgO4qXOirdEeVx10THxrJ2bMrKD873m3gIK7QC73Sp0cQ4hsGAH4YFAx\
nSA/pQ6tFMt98vTwr581K4Xa0ixAilcF+\
KjD2PL8gcCA3gSJkwYbE54qxSYRYNNN0pb4VhxyI7ICfsyj1KOFfY/np4OVr3JCfTX7rA/\
aTc5ALCCVBZUt4ocAbzTkymJHRjKaGy2IH859rQRL43t7mItOM3pTTLhxSHdDEcJDrGitTYpXZ6+\
9m12ql+ZoQW0RF4PGg/\
kyfBIfvSWsT2dOyYUX1WZJSZOmP1QNpI0AlAjobvxXA5ASVYPhEx8fLqeAWSwcoUqw4oxtXI/\
QsaApCzsoTV4SLScPLfilQuSUPTrOta8pT1AcBKld+3OQCuQJ6pgB4AhKYFqMzIbpr46Onm1/\
C7FfT0vfcxaV2YST6rks24nPKV9GaKLg+LO7uYSy6/o/\
Z1UnLHK5JZwLznWiRDYZj2YNAPowxDN5OP1wObcWcJUyZ3bdltR9tNVFNTdf4xAl1THEkv9EoyD9tz\
OHEDq1O0qD9988YHAdbI8HRNAqR117X049Aftj048XBbdnarA0rLxss/cAG4Hts+\
Yh0PUhLtFlnxxta3OVWMb67iXJTTrCNTGE/Gszy0tNgHUBhuwKijWRE6Wj/\
3mzRw5xbCdWz90XbGLFyCAlWiLm+v3qYC4uwR3kTDMiQDmLnkx9eYIF7VyoqBwXMI4Oyxju+\
Mxm3Gypm7XzDOw1H5P9cgSGcPLrQE7ts2Aaxod2NQPc6wOd8WhFaECtmTonntsjmX1lKPJUktTAmaH\
qtq+fypOAUtf6vYquxGXMQMwwm2GcfWVHmXHK9iRcPo26L1wiLDMzddceZFdxAVWrtgFoAvPUhkAxk\
ZOFMSymmDISu2OuXiQFsSyfF+0dz+\
cBfPu1VWOHQOtOfwGYGBqYUx0yQAtKdH7Ct35VXEdlPoarcsafW7bM87s8l/ncu39Rsb+\
Llh3s7LiaG6zEMw4HMWsQEJNbhNRlTuec211BrpOUhoHyfzimpXYt6z+2A/\
wvgP4pdBHsNimBPjaqxj1a4e5O/U8T0PH9rm1yEaSZp10WIlbNoI0xHlHyt6fYFzLn8XkyO/\
FImAaBY86BiC1N4G+\
5tG93Wa7FdzIZvMH02xadwKJLFuZ4CogUIZLm08RYkZelV5XLiZ5E1Q3pGzXS4IUiWjNPaQ5oz5qWW\
0mQp7yJyjDKBxKOIbX7E9bUVUejCbgs6CRvkRg5j3Mu6F5RUYf7ImaGYOUlmzjEsGayJtG3XnIKyGQ\
gL7QnWUs65X1Iuuj2w9GPtEeWRCXCB6SMfJWM/dASHrsNKuZ5r1Cvy41LJhiQ1UMZbwZm1cS0Jikx+\
73VntdrQ+Ci+k073RIfKoZAxLNRH7NoXvqQSUzk5hLiIkEBnGWHu/\
3AMhjkJ1A62vQhjTgJWSD4Edd9YqTtl+YnwzLTEfIqBG5WjEdsXDS8OTiNR3yeQRFIB1X+\
Ed0CFWYxqooteHnOxiEWGNPzRQNmDRiZNISX7D1uL0cDmL3SNjwmAgrkQVIWBkLVgfJ1pDbTB652SF\
hWkz09VnWqhvk6jb+cYpTsUbZzIDD7apWOWzxzKw/\
X8DCM1AQ5t70K8uUeKvtqMcFxoJNriCv9nb5mesLxwtb26w0X0i8pvLz0z6Rk0UlUglRlO6s/\
X9Je7smt60sS/SvcOql7AimInruPMyVHjpULrmsGdvlsNRd0Y8gCWaiRBIcAFSK/\
evn7LX21wGQkvveh+kpp0ji4Hzssz/WXuvLUycu0uQqaousmJa4WDt5rSTIjZQat5uf283v/\
R0V4RJmAeZZJgXEBaOGWw9Cd3c4UmCI2DQaPK/kytLKziEKTAbiSMPudNAHI/+\
mVy7aqiU6kkoaSLzO1iCG8AH30AkyZH26ITjttAVrZkNV48x/\
KKfik6azR7c8ldZJjfGzPn5VPr08PijKRosQcrRvxYMd7gY9oS3pMvBc21XZUPorMZoslQADVLUTyW\
LJVdspDNjzuYmOZQL3JHNS00121fBw7UqkRGZB/\
EVYCTzzquy8kUEop0NCZT3mVdNDkirWCIQtPYQr0U+zh+FJHp1XeWGyEwptGj/\
re0HxJPl8mYhxhIhJuRYXeT3xlcs/\
AYk6TptZowaAdyPTzMmYAFyrk6Z9MVPSmaEREbdp87dTMz7CRzFiJqFKbR/\
syzafrgf2i6hsDO3F1XNMREGS7fLSTDGJzCrZMSKWk51OPVhsiLY9ESJoxKfqSZe9rnmje9pEi/\
2jngXPLeo/vIhNicjXRv5Z7ZEDEJPps/KInLoE0nC7HkE+kdVEtuq8AN4/\
Ns88wVfUC9uhOKvOnCfBBd10e6BYEnzPFdC20gfyVMK0fd13W+\
eiBbcRUKp0Jn0qjA5idVeY4GvfX2q0sICD+eKpfSOTTIxKpAJCo+\
FTVBkkiedVCmFeZAO2Ljj4kw3q0Z0hSsKNTP8ad5AWuhD/TPTXDryKZLt7Y7+\
1ZIi3ppHxSda27up9gka5wAmlZHTpvWYzGp+CQg1ZVTm34Xhr+5SWScR4F1dmJ07kuG+\
GPRJyqQjEdNfwwvfx0/Z9dlNaeiNjdf1+\
5Uc1cIcJUiKHUzgM8ptizUzXVUAZNwv8JNEJso8qZ8jbv47FW9MgNPZBZMkirYiKNv9mT9xarwA2v2\
UlZtaKmGxQBF2QTlprtgUjex9Cwzlj8jp3LrWLZC12ofMOyrPCOTuWgMB2EuJibSQS8JLOJu67P+\
2Gvj/ct3/SuojwcuLfn4XDWMKbzpJYHWOsV5sfNTEgOBZuOa+\
5IOvbIiB8Qu9TAgvLBCmlFGsql6Use0ZreWY42pdm+SQiVH0zBqzXlN/\
SPfK5tRR7ogrKpQFjtu0fpfR5ErcGXWTH/ov8f/9s9p+\
cicRqFh5iTmJUbuYLQhRbtgpjFKKtEFaLBwpK/\
DLYcuYEe6NZAQA1uscxmVu3jg4WNEEf6WDjjsgWI+ZsN/BOeGIrVzHC1yt4gaiBaQL3LOGVf/\
8obYGNBP2bH2/tY48xvL1BsqtrrOWCyQTqfOvZ/VTGPg9MPFn2E/QpBqDS+\
6XNOmj7Wrm7yY4mr6IFCExjKuBvvV2UwAg6Qtbs8I0p/W/\
ietmGkF6zfHsdVJakuejPBIZYoRTN1F4c4g0H9RZ9a5SmAl242FdrsFFfJngpo/qaIkhZ1+\
TmXbRVW5LknBRt/KpyhjdmvFavAVrc4kPuP7WW9BTj4txjO/\
dWyR2SylTiEsCxFdtJcWoXUGzG3JKyPDVnLxNZh6zxK6A5BZwfyy9qiqi4PyNbErTkNrRo9bR6dFkF\
O+pEXjTTyisik3oEDnDnNbULQzxGdny3cWsNaijDtNotyimQS2B42D/dBGykK4x7WPJ7380bjTn+\
YtA/tffxex4uDjqTQ+\
0FiydzpO3PNlFlreU0oz9E2qWIOJTXmsba52KyH7r11pqVwzpkyYPXv1FQ2UyUDfc3GUQf3McXm37m\
BhJUrVjpsnaqxEn4lxYHnLVNyYnSArg1NamAlZssCCT5uAeyJI6GRa0B+vigqyMcT9QYUwx3MO+\
BumM78xu+2tYDF39xBccHMQyj0b7niCT+eG7MC7H2i6rlwhB1q0HINrJxWnPQuhh/xnkCK6pdKg+\
3Ks7znH2bbi7njuwawj8WQUAkmrzBedSq93d2EtVvZQsAEazmJemYVbD5TZSzX/hx+\
VlsWaWFUNMKdi2ni884qmQby44exYkCzCJCAXUkqqbqN0YeR9w0YTlmV7fJPwv/\
nfzRyjjDnEqUp7YmabJlfDkXNvGNs1oxy9mE7Lukd9u9WDdzbgl+WltXpRNva+\
2iuQpjAFZW1RgO9kbOjxkRtVgW8iRKeXiILrGE+OXPUNAI/\
oyTP3yb7eENB5RpYDKS2MpQYuCjbC5iGPZpP+\
dT6ld7rU5FsIjPz6sD6Y0bbhSg4Ag1UNK2NeDzD3i2aN0bMm/\
WY6eFOAa3OdOvt85zMHAsNQ5JVmdIR2bmOhAgNUn0hnP652RSOxdrmpcx2GRyaIAURlV5ciAunc7nn\
teF+BSH8lX3PFBBH5+iPAHnBhC7Z2JceBLo1dvf+VDGEDQ6JynH5CwD3C5029YoXoFS7G+\
7Bglm2vihTXwnj3r1puxShgVBuqPm17ggyH2vMc6zeZ5KIvtUaSto9ypT8ROSZ4HRl/\
y7kfEIABUN9vNLXCzfEy1gJjuZrMWddTTmV2MDc5KeFNzMd+M71/\
Q7nLZjQFRFtIdG127Z1tpLLnbuutETMCWwErMnhpfglRG/8UlVa6o1lVeYTXfcQhgQRrvFVp+\
za2KvR1MSsHJ5k8/HWPnQdQ3uBTOhDEr0y/SwZ202Wc6/MpH2rPW/\
EOFrysqMUsEV4idQE8HV2DpRCnAhoT+TOgYMH8WtN4+U1vNZYvYi4l1/\
I0noPlvdfNFvLMJ76GSppMHlsmZ3Ucyk5OYwG86ktzLfVqmSroQ8VpqODhj0MlTcSJcY65/\
HfJpAsIK/a59c4hFKsB31esJJ1u0tBxFJVByhz1YR2yV+4qrJSgvuqjbO5buEZlG+\
JfKYtfLrMlGyPnQa/ywwLsmmFUcQKAzCascn9pw8NcMBdcDupOcuSPNm52JpgObn4Q2jvzxpo/\
UEHfuRUlb53LMdJ3EusweoKa/\
aP971Q3LFbs5ZsX0bW0bDCakjaQTkVrS5spUPDSOLXvOndo66oiqiKUjoGrivn6WYyx/\
L5XhZPOqPnIDEubBrzdaw7xdvED0yeDUwWboQSnvIdhx70JBqK722ViPImwZhCM+\
QQW22bghlBxr3LTo33iNqaA4HvSYrnl2xO38bGvqWU5/lE7U/kNr07crpZVRqKkUeitZiXQw+\
teXdLHd/PFLjlyiu+RF0UPAmOBq+sR7Wv5aggf2L4HqNp1Uqgw5O4JL/JnI9l6ZEr7kCYFp/\
yuNJZyrY3RrozAGLO+9uU/Uf719SVkGgeeVesw4kMRn2T9toM511uVUmMtEFdOqAyfbV6AnOtU/\
apY0LEyc8LKbf7qMWffR2Tzf3qFxTVQek3/hyevbIrml+\
Wr8p0EF3cCVmNq9FMacBKZNhwtSvtSqHF7n9tkM4G2iio5nPns627+Ty/\
0nbRa0b8EaLzdqFK6OvR70pqwuQ4LM2HtBTwyYJ3hldgTLAYsuloiE/\
9H5z7UDSXTaGqGwg5Y4awnMxz3akBETToLrOJDRky4SDkh3FRktpISa0tZZGbKoQ920WjhcwjE0bpt\
wqJCkDr6WN4GK02zl6t/GjrsSt8RtVMSx+2TlvXHSbeKTYXdQ0wban1rRg3qSn4A+\
9WzJW9U00eyKKdQ/S8G2ZiiuIJ29eXzKLb5zVd73v73RJhIQH8Gfr/\
YzrWM35hz5Djw2fiB324frUPnaHpt18J/qxD0A3KEHn9/WKiTdYccHzHP4idYbdQM/\
8pP1zqFMCAKvyuDhluCy8e6vJ2jYfm/3TXVjILuLYp+5r+\
tAm976TZNyzApbLS49UCp2g5t2c7iNuq/ZeacSXw/u5wV1+\
bIEY2ir1GhKo7cUzaBLIH1HtaPxJykYEf8ofq8yGNhtP7Rc0ib3QuFQO4n86pS6JgCzJZldJzLIqyu\
jeZm7QTL06r4dVS/\
Nf4iVxHtjlZVZMybm5oEbeAZsX7zPHeGuqXVMULRIU4lxH9MrJws5kor7s6mNboirFy5S9Xq7poWNU\
qgLn+FQoeIlT8OHnt//+7uGXt//7/a9/S4S9sAGzwhsTJdLojGslui7NrPwoHcj7ZvPdb/\
3p3oqw6Peb4XYEuwK85My9KIC6XYu8hjkYLHzAwmCZyqTuKB5MtI0OS7y6ruolS6zcqnciyZhyjGqO\
Sihip3lWAxAAulrNXZNblI2V/\
no6KdSlRY4DYpytCdHSCCmr1kctoYOfMhh6XbNWTygLYxeZrEmJsBXuZfJExRvVfCreaatP4QnxZ92\
NFqa5Yr1Q6PsULpOFyVQRQ3tOe6j/\
mYc5ARTE68eGgzarlt08neDYy4jzNXVgbZ2eFTN7e2i585S2Cp92HCHJRACPHAa7MYhzGsNT/\
2fzzB4y8zZLFHzFfanlKvvKNlkhsvuNT2UjCCvcUzdMoffpuFSOVeV1YfhOuHzVGuCouXbrnWg1SY4\
mLkiOUa0icua3K+1jOT2U1uFDp14xE7y8qMMoqZs3/EswU+\
FIwLpGAUXzfWj9gtJuC1hq8SYe5ZDwddW1c11738l4zc13P77aHG/\
jvvle67lPVl2f0KY9xRiP1nSOvmGt3HzuPvcCBIf5ZnodBMxsuCNUD5G5zEXwFAL62guY9EnyB/\
9AJYvNN0xLfSlhDlmDsAmIoxjZB/7QjHpWYRLKRWo65obu0VyGyqfxEpnRc2+\
DPy31U5aIxjSeKdmHKgVZHQWB+hIx9VwOzt3FV24Nx0YY6C6q0ek9DAsjKvbRF4+\
UMovBqwVMvBR2MLku1izonPveisVefNMSzJWhyZarlyEIkKtsjQ/nTngede//\
pQTaAob45Ta2tzOai8p9dGYj0ZkVkkO7c9l10mwQpbbSzgsa8NxeTTa94glS8zJkX6ZQJOfEwC8afH\
zvg+oQF16zt/ucVOO04MJqAxBVxXBL/m9Fk7nuzw492jeTKkP115pkygBN6Xy2UfF2B+\
2Fid2RaMt1DWkPTbhGKx3I3MHi7lwpafTKRu4VkdMWLdhGbYxGLInvyy7G0RCyTllb9/\
PLivo2NOTsDYhhCQ3VSFOPQOKKly44i6qxK11yeFhhadI7RXwQiN1Qxdt9mwSrxCZ0CqJ5gJIHrmz2\
HKw8dXcSzIPxETS7HnLnJx1k95/\
myXXC9HuIm8FiMTh5Is8d4bV4CSg2NiqaoFLQbTOlm9FuRZeFkNTCbdiZ1KyOscpTUpjrNkUr0+\
yOA04GaJRH5Q8CmL09tppxl6e+DkFfGwS+4wPw/PziFmrINN6Ps1GC/\
dRdEDJuxmWWbmBczN7tAIFgwMlBNoRj0Rzb6R4SFRgeKB5Tjk+\
fKmSqCm9piNJ5tflriOSey7I8YQf8L2HRlLf4XzdH0UiIn8rLYOjcOr5XkxaOpweli6dXuLXK63wQq\
AmP7gdRFf+i1BYE+zbPZn4tpVTeg5rzLfp5Gs0rvx2zuu9oQ6+\
m2DXFj2jG1MQBUdJJSQFXv9VuVOlVU7SyKE+\
Agg2tE78xJe7mUO3uuDH8nxZ1EgGNvn35N6sJcHL0BX4RDLpP+Nvb421Mbf5pwn5qztex+\
FEp3ZhA0vHm7ueGrlGV8cFC2HPW59lGbTbzKTglRt2JYwgXAab8JJ6rWdqP2SdcwWBZR02fnB/\
gxzpKonaasO8kz2TR5cX9vqPReEjxlPmTtI3ttcnO5QkotXLYKdzjsrUlzhSwGps4Gread5Nc29wux\
pzPSYS2G06ezjZBoG5NK/OuzS1rh1um3IYcr1aCP5YTGzRYeD61XLO8cUtYXt76w74v++uh+\
DMPE6r0TFqVP8jRBFGQNkVts//cQMWw6ujwNKJccK08HTNrxE5yj+z3XTlyOXGtwWTxR+\
AFoo8DFPHDpFcONUfjasX8fyjT8J8lgvBWWk6SUR/LeQMr9KoljNAqTRffCmASuYcZy516xfIc+\
t7jGDnFFxfUlnhKHP9GXZJKmQB8LJSx1RwYtZqgGCBgFQRavU0XUpScL3UVg3zCHo4tNKu1+\
R10OSRvAD7Pc5/hkr5EDLnF1hBUm0+99kMydOWlPtMwX65AkykXSIN2KCfzvbxSWUhmvwR2o/\
gc7eJAWVTjyJCrx9UYEovORMVuHcTcyB239DfRad3sT1qVgvnIsyJlC7qodgWmhQLCR9uFDrZK1Rx6\
2PpW81ryYuc7PW/\
nWEIi9BPSX8prViKDYCzxSEAG9NRo4tjP5HjtdRsGVI48Oekkia3SANO8ZXUYUNm0eiZb8m+\
n0bJxm6x7FlYpj8xDkogr36TWIyO4gUOsKFAtM4h7vz+psTVR2PZxXLy4/\
PvSHVRojHjmJ56XTx2a4HUhwL8h5uBCMgMtQzFqwEcOUpEU7iOOEwad4+\
gGPd5q0S6SuqgsWmqfJBW988xhLxbDZhIGkQqQuiDuLL2glN7tcHuU7ESjQ74C0e2JTnyZ/\
jBm17TpuaHCCF05nHOxN88XcuHt0AV2hTRj40WJvVIlnnfN9Ca9gRGLjW3xnw/\
1fBWLYwWd6T4QsCp210piR5T8vbwICj2AyTylDmf/c7mq+8H0ty1nMrU6mnJO5rqn71nhNyMjf+\
crfGO2FhKrMn1l2put9UjK/eh7UeOpe3si9e5kLS7z/VniyEcPTMNBmcfmvv8D16tYcGRNoFngN/\
foRdswJxaQw71L8XIJYPjeSQaZ3rZqUlgG0TwC5jRaKh+V+\
6A3MRbFjRslDzXUNuyh0VaL9xrdSYLv7iS0XzULNs2JUEt+\
UkQTGkw7DPS3Driy9ZAaHHe781rkkIv+qSY3YT24jFg/vp+\
f9V33WD5ZPOwd3F6C06OgpxNHXMt7mOV9Euy17JP3ouXRaiooSQ6sn9zKCUruBlBq1ZZQ7YfEZe9vd\
hD5aowr7ej4We100Qu4uv70ekgBh2QfJUehvWd59Gd2xz63aQPFF81UEEoR3rMYjpffvZW6VTI4CF/\
RHYfin4W398oZ9l8Lchf5U7FnZQFdI8N2VcyJDK0EmftPcqcJNKUErY6VtXv2/\
9wa9KXDYCAg2rJXXd7NjFie/2wgoOMipANykz6rZsudui+C9JoWFtTfhV6O+\
n9lu4E6sw1ugvmReiGDE1XodKMidor8Pi+IHMBX116+WL6riCB11yC/Ep7W94yUNQy1t3nPXmeu/\
dAKqAbMrpJB2kFt/WLhx67vhZMH7ipWQby8O+/\
WLWMLWDJ0AxTzezsDMfEk5oMdRjBMEqUz11H1wM7na9OeJbuRJqDBmA2R52+onVPgC+\
ccjT2TwEy2mEqjDApjoQ/C2fXoDrj0SLCqLsmk8SZCyIxVmDFa+\
ULgdBglBWepIiKTSiAyRV5CYRs5ICrw7BJthhOgIitX3n2j1HznHjlNfTNyjsqtMpCTFW9JNIN8ekD\
v00HzNR+QrdK6C/\
LxftFNqa5R5ofkDiVE1KywNBEwkTm0j8LUoRfrUjhhJXf6c4t9uUvM5UoN68m86aluDolop9oXFp5r\
lJcsbfmYVy4rRxOCNiD5uUk7iU0pt4D/Y1S67AN+dsb0McUmBMCA5NIbLbEnPhttp45qED/\
52nQ9vlIL9WNq87coTKzmRRRK0WqC8SiQ1CrP0LkNPpGC0C/02/\
mMCNao1sp3qzxMmh6Ye73mpdMcdGU4bAT0QwGAknDuDFiajLXGWaA2mHgC3/\
UvlrtKwab8Pw00c9Aq1MRe/8GbOVfrvolALFe0qtAZkf+\
jMBzULo3wFCmtCZyrFzIPzLjwt5B6iLyI138OkZZaz0m9hjPEGub+\
ifxkVTautVrQuTt90g61GafMpFlwZBEMESYAR5nKxY6dntq4qPB+eWrryfHkVWtTbIG6/\
SwOVf16nmTTp3kNtIq0tbUWBewPKb1fFZAhkUjiz6Hdt7Ky2NuwkFCT2bfuTcRvWxUSKKN6LwHQCeN\
THnMdK7uzsDYh/pLlU69CRHxRta6LVK1Abq8cyhZkdWpp0S2eUgFb/FCmtxgB++\
RJEHfDnbBZKCRNEnvYtPbgkaG6Ch5O1DJB+lPRBqkoFIuaLXW9Z7vn5/\
bUXxNLMz0T7CVpmdDkB36oQvsiHFagryW9UEbKfEhSGum1FQynxcvmBvXG98S+\
gxEXdPK3sQWNZYW2SYJ84bueHx6oZkQfVRIxS1LGFO3J6tHbdtQHtw0ZEHBh6+\
9OT22gWxM6bTG7suHzvK6oLCx4CWVeBrH/Mp0OOPKTCqcqiUxEz+TQMAQyw+\
m1rgr5M9OtLFPknu2NGbd0opQWOEA92qtn1eTapQ2elhxuAKNLfAf02pU3fnYyFzS66Yj+F/\
Fbqqxk9rZmSbS5eHhQeCVxY7DyYL5Iek5awy9Ti3bOass9PEj+\
jm2KF8VUkYQGHNliBF5GNSUKVbvJk6vyw7uff57DuTZ//3Hz8ad3m5/e//u7h7+8e1fJN+\
PeZalF4GvdRXgi5mTcWk83cIyAu5n3Rem6Aakg+\
IkMOofW1JEMXFNdypYN81kAEj9pCyeQDocbEOMXJJRkvYSSyaBC7Zey40ZoSmVycpRIdqjn7trmNnV\
M0kKlnlliaAzIHnDSwIvYn65hm/7h3A1BzBlsNmeBm4mrSv1dGL9AtaqUHy2gUCQcQFJB9jKy0J9M/\
oDFe/DuwCIRJOPwRZi14ulcyexkiWd38N3+\
Nme5uOCRl5tU1Zc1V1rpuUkdq0RLxhBULKAK4zZfIts2k+pMbU+E/FnbU/\
ERP3UnMZli1Mrq6HOP3aRAjV5v6HMZhQpHwYZTcmkKg+MEK8hz+\
DTIsIweRTgGKXbtQQRbnxRUI1RCRpYGjl6hDj44jFmG6KxZh/IWaKVEV4OcsfI+\
qFAGCLm414LxIhiUwxUfcIy+Y9angXoTdwHxIeWdWko0kTdBswOBIm6k0saJERGSdkyctCU2g+\
cRrizlzYeBryibJRrjsrkaNZiiYmLPXaI+3KxVenyto+\
rGOBq8KDPVceLpit4alVmRzChWDzQvNfsjkUx6xC6fpYzyyAsubIXlLv8hnhzKslakG+\
dyj7Lobjla4/\
wh5gDBczE1blMnL6sqfezhnz15jrCpUoOia8t87sq7nCU3k7qaszKBsuOjNpQsuJw2Wtp+\
uDPunBHEcgm0JkfYpYtaKa6ubT1d+\
Cvboz38k2JBcyKpPFpi2OSNcwFg51sVX7kcNCyXrBSkPtu4Jp/AySUtw+\
4pKoGAgHAE39rve3AJqoVRC5KqM4ckvXXWp0y3XWtHdEa/a/\
F4Czg985HYKl3ZxOx9AcuCRP3poHtin56ovhWuxfqNbB+4obSe6K0JW/\
GM9zc5kMKVNbxWkblWnWEjcCQnK0Jk6fX90jwCkC0J33MyortmLH9tDybvJZdt92UzqmJK8WRP4MNT\
YTDZcRsVOtpc70O5qZjZObf6TpLYKbv+\
vHPaRP4XXzBawh9PFk4zszRgu3Qs5TKrqb8vjMMKTncoJw5Lz3y9jDWuX7kWeakjpax/zETq+\
tqG6pIHz46SZwWot85HKIre18xEe3lNkyJK7XV60Opq+mvDwpS71mqKWb3VN/f25e3xS/sFfTy/\
tKfuWtY3iDe2qXYbVRX2pz+abk5GpTNP4T+k+RhTgbIGd6mquiOSZ+\
Cp0043jnuDcYvPRNwOTTesWes5LyaWkMlR1Zj4IA9TOTst2Nl2CBnuxdM6DAA0YhqQR/\
Psv1HuRvvWltAC2W8HJiK2ih8EiKS6i9Gc1zMGh52w7avpLwX5xstIjwbH0vA8698prScgvDHohJrH\
R8n3UfAd9flkMkqoPsbFF8q5pL2e0OADFSQTJ2O6O0akPjkbSrTCEaRDMi7nMhNbodCAqGckUDCZuu\
lqSH/NAOZMjDl/V1s0MAftGBVO115/\
45SYuL7hgEhUBv4E5q7gu3jeI1yd40kc5yatTd5o9khb9hu5sngh69gNMeWWkVfeaKKQ4rRrlw1XUG\
bcGAbZUbfdGPPGwC08G1/x+Y4NtASjmVT5JfBAWpQx/ZT/\
ktY4ZPU02hQrpsM8I4xjSmSS3kG11PiB+\
KJHjV4CsnkhAkX3Ym4GHdExZJXSo3BqES1B7B89uE7TZkG4wEdX74w9d6MqC3ezmercLWqXQ4UXMS8\
bAyludXcU5ZU7xe2EtuSseX33jeXxDyNC4Oo+6MbKcZpZWEgfWQ/l+\
oVa7jSZsfyWcFnjNXFP3WN18iQtrpiIK168VoxTpN99ZmXV3EC3uiNxqbLltTdfWYHF1deTEmoq6aD\
kEzK/zCx7Rq9BSUUSvoa8j93+E2FF2te7fkLUpLk2F4Zgp8eMuKfEBUHFF/+\
9PVq2xyJrbrFuorzlwGvBAJzdsZ4YMTCEDoiDolvdCGdJ8ExgiuUxs7FiOHrwaBQudzLT/\
oFmGKgjTm/\
wfj4L8f9eic9mjhc3DvmL4BT6vbhGBqLUGmZG3Fbo1Tbbu2ZSToIDex76CVHyb0NfjstYVv8XQfqwn\
/eH5rwbOihu+tl7bMXD1SMn2EwmGlNzboQI3muw3RyGpgQntytnkA2M3s+gP48d5atk+kiEoGoo9/\
rhQRKRuT6rk+0mKrkkCWcoHPjy7+Hqyg5CF+apPXHWtbVND7Z8Hr9PnThWUix+\
DMLMEph05bx94X6XqrdgOXts0v8udtk/8C+v/se//I///i+b7yg6S2dBikGD/+\
D3yejaiO0oieecuN3shTPDDd5CWcsT2qfevSu/\
Had69quGYDnMZoosFriqGYrDv7crkinUdK0qSDz9OMoenPRcjZpI8gNmPJJ31eeCxdMq3hjttrDKjp\
i32rsfXwgiIqrVMCJc50NMzuJ5GJ7Tx2peYgMAiJ5nn/\
kIhSTvpOkcYpzmhDEwIF9z7M3xMKEtKlcZXZ2btmeT+\
fY2CmZbNznVOnqjsBUknY7AzGIuRxrFoNM6eEV5a9kQs0zM3SSDJaln+/TpXtuo6HePl/yH5i+D+\
SaZ6sw7xUkqz8n+8tbcrGSCsxq4dwDuNG0fOKWtEcw6d5bNEVILY8/\
A1KJM5uE9HSFfRN0kfLkcUrA9G1v/GcUHFSZsVdcRr7XN2sOyHIr1GLQPSPJHkHSA8/\
7tqdIrJ82WNApI3K1Hb2s0N9Wb4uPzcChE3uSJRwBPBntyuh40h+651ki1JVIyVA6K+\
ZOsHxSdQXU4EI7cMK0YVguNnogucXWUxx4BFXo4CX5jIOt6UgtEy09u01W7w7ABLZmx/\
8uyHqHw51pRHFB/\
9AFs845AMBRCBtZQP3CHMJHhhtB4id3QXPArMFhGp9Ap4LG2nveXYgLm1MVq2BrI9NgyVHFRv5x8Aq\
8WFi2sULD201ykMVVZwRdvn60vcPFRvMNBn0j0uJSqpbRG6l3kQHKa3tsvECm/\
qR6hBLAw2WL0IpEhUfio2xbd4YzuzIUWiXaEwwLMGXmNVHk81JxBS5mTlZWQ2fhta/\
jwoGRRCMYCd6MlNTmktPuPN0ksNSTNMqsGXIlAXkRSaEFV5Ake0Jt6tfAranVUmEfYg2qHNJ5MKIXD\
6X6GBq1TsjIha5nsUByhIhRpxn90146ZKe0LOSIn/bEtF/\
C57diDZXnMgzY7lPs1wNTJOzir1MiWccLWfCjx/K66jK8jpg9IpGtRt1/2zWdJIGmZzRf7qsqALk+\
kCMlD27Klc8oA5WunUNd7cuafu4M6QPxfrDBOjrNE5/7gwSrgNcKkJbXOcat1g4Rxbu852kdxph+\
isbjRg+XXGBFq9Dkb+t0s0bXSU/\
qeVc5F64UGO71BuTbWtT9oO5lqrbWeXnm81VPJmeFrKI7BgTNT4M7xNdhYVEFgpwRT8ZWAiWU/\
xbtTTc0fRDiycurCMUX36Tip/NyhGI3vulfFS4h54V819WKdwzI92oKPZYKw4lVA0vgeM7tf+\
L355EbCA7sv8L9WTMZyaYTWnd1P03dYS3LNc1wqnkyFLqPJQ5yasld7qaEd8qoYJ4vue2LlJKRaJLV\
Mrqz7lmtuG9WadzHG2f2APSYPE6IH/WVJrZTxC2uS3pbSNNCLV4+frHS+\
rMPANHe8ItCspWBWGKqqdY3mjiuFL3o3j7W62MygXLuWERtLL/KvTMqVXy6+\
2XbzSTJGDzK4w0aj3n25wpDQhiP/WXKMJ1R3P75kj3qNbUZTV/cjpWamPlN14nN50+\
2gwe4NMRyXrTIanACZuaRW4PL4qZ9vy23FwYSr3gbmKXPGijwmvgTY9EO6BLYVzcNqCjfizKrIMca0\
JVyvwVmFJhoJhG6slF+sB7Dst/IXaznQwavM2+\
ZwM3bF3IXuVjgftjwFTTT780bYEh9veEUcLJ3PzOKW/\
76tfCZxsPU6kXKEr4JvHSxcZrME9e3t8nhpnuX5MFcU4VaJ5iMbm+\
z2YHAHJ3UrNzAukuglTeH4uXnkqfnG6V+tSPnI845DmQqX1ZbVXdvTuDqdO1A/\
wUKIJfd4JBFod3vOTiwEJiGPrFfmKFtC2//\
KnWL763Zxt8fYskH4MoY00Y6UDc2kwScWKx3gwJUDYobMCby6udIlirJ/\
bKqq1Q6ZQXNMBOGD5Wa7PwkJwiVJyxKmhNM7HOjwE8klvfrtwfgdbtFxzMwpN+Catd/\
pcULQiovb909VkbPNNLyQ5Xm1+\
SHRjUs0dzy1XxTa2HGvU7fMJHmSQObAOOxyn6HHJrcR5e49QWiHgzQ4/\
XMf095UfuLWgCCMxg0KQl5vzjg2URmWES3gzBAxJEOmBk9EazZL4eSwlcsvJOSNlJLeCfVTstmvc50\
Bh7hh7ZgPIMJGbl89zvWee8GaMlf/3jkBwbEvRB0PXijzvJbbQ72qhdBcPnZu0fnLAr/\
S98EAWe5I0ksgDohyuKm2vF+SE7tDme+W3nqFXLnic/ulOkgCAkg/\
XP2SHkqAFfV3vJkO7EWKrLLGOtls2q7JBDgEfWdeAoIBcdTtwLW8q4kztwVRZkriNrqzfe+R2R/\
g6JR1nvgI9ARqV5/NyAv2zlcoCggK8P3t3e8/vvvh48//sfnx57cfX3t/\
dbQiSA2XsLRkCF1HSvfwrLetGkauziamJUeBMaNHG4WN+\
dxo4Y5LJ2tlyljjDW3esy3QXRgHUL6ByZuuXvDgtbrexid1bK1BSGpd2pH33AxnHNjvFK7tkGxyFIm\
MSbFqqmHyPVeaSreKbp7bs8QufET9XQLEEtrGVJqr8y27/sxEB7hYyHCxyQUm4ueULp/\
Oeo22Nyf0uWGRET+algVJgenrCEc15g2LAroI+oGXgzCE9fSg4ltucTTOkELkodwo/\
c0iWAwo1VuQHnxCTkDvaBbjm5wlsFSRTMIggvOLYEj6Qmnx0dHOvomY1AuHKwfOMw8edDwOfBLBOS6\
6tEFSZMsr90xgdifCFpjqQQI3YPkGPa40Fm/C3ZTNb2ajG1+\
ywVuz52Yz0hVfZxsCL6DMgnof2BqrgNyLJWntvE4V4zmzOBfAiGHxudr68AApCrCvwUU2jcWaPko0o\
VVg1MhOZMqwqmIzmjhnmi6ueyV1WC4HCRws1ltYQ/\
AqazYlhZyMY4ne1PtJGWG9FzNRmKm0dmrqRe5G8wvU7ciUl+1JPChlN2GfYnOGYetwE/\
bW5MCE9P7uAl1slh6vDe8YrbE8meT4FJhT1jXFCULUeMZYgHXEc/88xguE3Uwa81hdsWt+\
iapCi4crVozTjVLZDwJac+RQtbDMC6qUWdEH64RjZBqj6P6uw6UnpecpD/\
Ruz3XkOxdMge9UwmmJ9g0okhb1I6ST/XGPJMAC/tBaSQItx8Y7CMA7oaNtCehzYnx2PWnbn+\
dP1FrkebSHqyU1iJ/0maia4SzkejnLUo7QIm/+KhbFSqPtXu4conhhSU4Wf/hd3YgqH+\
zRq827z6bPqKnwuaUTCydd5umdBu1trm2muOwCMmdV0eGrqRF0y80yXnveMuWxjnk0F9rjg3zOCQCN\
SFglgzSLY6C05eQ/Mf/A8ioMjuqdlElUXs4jLjECkkz9MQdVVfBkfZKAu1SwvsCJgVWN7f/\
G5mLIN7XQPCRptLQ61P9WTnHOHeXWkmJp2dsul4Ir39/\
EXjv8yKTSKuiPM6tiKpITYlJz9aiJYDsJj8Uj8Baas/BZG7uwNE6JZ4VNvwPllDs3e0VqePCDORcC/\
v2NjQmCiJe5hQdwms1x8KBQDK54Mh25NJAW3Hrrufo76EA6evd1uegOJ6pj2JB1/\
suA5eHgmBX66OkBg8jDVaj1sezRJ/\
8HyzrezueuduXSJMINZANNGhtyiOJT2km5XYsfqrhDHZa0SVysZ+Kxe2yk+l8OyhW6C/\
AmrYVBUXWYK15ScjHF/aZTTlFXDwx2Woy+zZ4lmpA4vAhMk9voxk1a+6FkjnhLaBQCnIOYKFSD/\
xmsaof2JFWvxV2cGyUJ6fcculBiPjyVxS5BryfhRY9aO0MJ+3pjFiLlw+\
ZwO76sZvWfpWO00WOEwhxbIEwCYolb23q/Ho4xlUCwR4nfCrD2LuHTbxMqJ3bKNtJs1J/\
vkexatK5I/\
fLgCdOUtyhfifNoyRBfey1Ju6ig9POVh043Qj6oNnA61R3KbzZkd2m1aut5ghSSkmJEHUKKfmeCLtf\
uqnCSLKdsMxdWZksgc+VnkNjarIVboOsXnoo1rsDhyU1cKIdhFsR/btDnJm7HZ6fQqJ3DuQs4h+\
S7U2o+K31VN55r998yQjDSv+ijZ9LW0EXlT+JxVZGeBbvdRfgdgbubhfmsE0Qxzs7SicmtW8LXyGI/\
PIDezD/TENkI/\
yGH5NA4xIgRkgttxcODGIGc4I8axSyzTF2kBOKFboSeZqSsNBtBTJyWy3pNp3gvDmevWird1BY/\
BS877pHsr/H8OPFyT/\
DmrjkhLjV2NnWVzia9QSmxRDVxWsa4jFbRwvR5DnGrAJpihJWgpezIZxEWriCD6cZzwPjtit1m+\
dRIz9e+zkuJ9bFNjh4TOMUvBdVdEB9devY87K1dJKM1GsW0IACTwpXp0O+knQkyctroglJK+\
cepjdSpesRyEtBPepU2UHCXsZNZHZ5LalrGnebzyvMWzmCJFG6DZQEa7a2sGJcOYSSH9p9K1v0PCh2\
3fsUqRdolfxdgoJQiis50czLJxqD2b/vwQDZsy/cBFzWeNAlcIhPvZzp02v1HwqxwM7SGLrNp+\
1tm5xkkdDWPcfmISviJ7heKoLhLcf01ppmOjOn14cEJEZox5THlDVUyhoYjsCUkl6ELSJoONYNbo5L\
xgM0m5YQItPzXPxX0vGvvvSYxnOJI878BDVcV1gQMx9CKhTZBxUBAcTWaqV6NxVkb54dt4yAtZtlTy\
gpcQrNxxcHTJNbQsdXUC1d+\
Qn2jpJiNXmRO73015Ar5o7WwOCUxkPnxwgwd9Y1RTGkPqmMwzMnVWpfEsXDz8NqNxvLW+\
fG0xM97izC2lqsEXRv0bXUX1xJSaSccYm5nAyLy4rMlqWJZ3UJ551STtFIGoH6XB+\
db7YTdSfurQhBxlWsyaa2zd7ztRNdMtop5C8XNUO8EmZA3m5CLtZOWe+\
OWNzzEflhsATjILVNwFJv74IqQppWEnA3zEpJ4jNREtNVKDlJZiCZ80GhrxMW6KFX5rE7lzolqyXy3\
xC0IC1qZ6wcZ/feGSQw/x+ZbhVVZiIO625TYXztU2LiJbpM3JGayK05eiicWqUErO60nil+\
4RvEJgybFIv2T9AKPN0knyX2aAYH9ECA8zSPHpbpWXbTGFXicuSWcnvLFphd0HTAUx+\
6L9no02sbmZAjobeIs6AFNt/u5x2Wuk7gNl16MMH6oDn5BtawVbcA0t9+\
atnGGsAfMDgM0w5g9Exi89isuhYKLLaddpsKI03QPvY4UJmqLz6QNw7zdowQTVsYyOuUA4kYV24/\
9LQk9tE6ARcK61XWDG3qTQRoslenIiXmpHD4AH4NnyFNzwHoS1tVctLRmGwVwqCVpiFCfMeJU1zn00\
JkJZJVyCdhMdBbBTLDl3FOg1DjpeL6c4Y6GVd9J2aVgfLsj24kkRUaFMBfmG9FxJj4YcYxYM2lXB4L\
DCfU5Yldjq7GYmYJH7pT2oq3j9Ei45UiqZvh52TFzb3ubYwdXYtUNq2qxi7aCfzW2Ar3fRmEkU1YEN\
3jGiEYlmGDuYKuXuJ6Ce8UgFbNWYlj1OSBXexEu6MECqbJf2f0TZKwBHt1Y+4/v2qjIKYOPx16VrB/\
P3rOU1nh8j5DruMrH6WAD7/8o1/\
9gnB6WVXnS6wqvZU1w5RwOre02bh9C8TX1ba5iA2H77hGufYktit/NnMDxdOsO+\
vJOy6LsRJr3ycNwtwzXC4a0OpRJQQzBjRGkYYtkOZhJ0DL/\
SzmbPckUXeTQVKakeVLOs3jHrvFwANg9E++7sKqPpxze4M1nNgHAbbZ3F8t4bS+\
jnTekJYW9c061T4hEPOkZdjAadEYJQBI9NubGN+\
SZQmPlAWT34d0wF8Fkrhc2TMdBvhzTuh0Z7GkOenf3vLL+A18ryHUIu/\
UyRrFbliHRQ29Nnsfm3LFhVobwavP3IzhxNUSwD2t9z/iW+Gkrh1asRfKteC14eJTj4/\
1rRBDtuVOOlPIdumYu1goJ+dEvGHmfkzdQZQZine+\
8qTkPsxw6LY9ubeb21yWsu9G73pPjGuSFB3M5vceRBgbOmX9qmyZB3fHUC8CxcUjtl25UySKlqeOu0\
tHNOlmq0E95Yk8dFbrgWAfsWDaoQ1pG73j2i66ZHYjX6lrum8umihN3pNASTSS3fVHSutSChpJmyvQ\
N3ZHR7/witBYHJxo7wW0YqhYqpUCAVzcDea80s1j5zzRbLcRQhd/WEq1V9GUd5SyXIuBKIktIs/IE+\
kvn7K0JmJE0bIUubmU64Eursz9rFqt/\
SykStnj1Nr88cT4zVgVQKWxdY2hOlsG2qzcq1ZWWtwoODZTrXZxs6/H7BfGiThaR+z0/\
XDfo4x3EvQMM2PYKpOSKPRaEUu7eR0anuWlLdGytBfVe7v77+kyCQWg+\
ZXlWo35H9FCDdLJ6Md5mflmhppsMMwJ0iTfMc9iCkiBNOcF2lrSEI0tm06HV9I80UVVN93GdeJdc1b\
SIbM+8j3qtR/EvlnFBh7JKpyZ+\
FrE24eCVaV86t6FFKNrtb9IFvmzazlkLxRyNLfkWEi7MRi0Tj0IGqQdxxD4+\
3Uals0z68C2vsGhT6lVxB5dqckrXZmFrnUIq2c0JX76oZqSZjK60Zo1Cd5tUp7YvO/\
UgzEpMY29efphkk6QNhzwl5QH1wfcGnO3mNEMAruSHkWz9Bg/AWgd/Q+KQyFhdDlV/\
DWGoa8DtCmH78cngsL25DVu5L/AmslLesoocVnmBq6tAxwsgxC0GqGNn1FfbcxQ1K7+\
tFNAKyvQGS0+\
C1XUb7SZM6S4CAGrYjxbje0TO6EJLuDbzhF5eWgQEVaHujd6aEceNRA2ykE5xbxL6qWdqbenJpUYRV\
Z8RwOpQIrVtPJQIiUQzYM28iJ3iVLJ771nKOdbCpOdwn0I8ZP5FPkqG6LVVz3xLy29qMIdg9pO2j1O\
nx/3L1rAYeJfi9D8+qu8Ol0cuVUlrqWNhDcfayUgwYyYRxDG+\
NMk47QKtqbcDs3er67N9eEAhI9Em0VQZ7BsR8kLjU6GsitEOLt83m/mvXfo6e+SMcIxCNTLt+\
fJvoqqSiYNTezWSI9PQHU9MOdOL36+CY9HRmZg22Nt1WbV3K0+\
WShljhTWKAMQI3VmSJSPCMC0L4QPls61Pt40t5lXogW5BRCtHviuhRoNIabY9NaWjzhrnwRyJUQH5k\
qddNJ7Wr647Gz8eUUKje2oxHV8hRdU6mdoUXW5nQgWx/cUlOjVLh+CofDqXyhSdUFM1Ogi/\
LMKt2PsGcGn4daaIfGwm0gSe7w6+JEzvvdyC4FTgtr+\
0t2ldcRopMOQnH5Ia52tbkDF9l0EM4YrSS0ralxA1Zf0rUldYL4WMfEUe2zlz1OHT+\
JbDjMIJObH7a6OMkrJXhLxF1T+VXBLkfocWnqfVvERL94asTpli5sHZvr3NyD9m18WNIkTEC/\
fK9UT/wSAMaSKpjvOToiWM5Tl2nNMu2xfE6Unrz2w/kLRyok0RTa8xPjbJFluNaR4q+byrA+/\
6yYlUE4GLcTY07pLbrQrKRh5kVgesI4mHt9YtVbS/vpSDTEeq/\
vIRXp8fe9n0TqcadftFLjOCVs1LaZpAy3zpIF8swuoHyKGbvrkiyAAOSn82um1kGSvq55ByXfTxOK4\
nE8yumIi/YB/BDF0buf8/WyNgiRdOxaKhGBi/zk27eOapC0ICB8sESBjOMA/eS2cLtaqZOm8+\
lNvUGMkaeG9MYv0g3hwPMV/6IM3Y0417QLw0FQL00pXEfPek+2C2AOlwdffDPoDrn+\
CmfTtcHIwQice5KGEndXu2Z+\
QmMDtj9sIWN7hBmct4y1DKD0xoA22FVBIpbM1XRlQEXqY08ZGLohG0Sk60X9rV580h1laFswMWgbRx\
b+U2G0HhBvKqslOQN+\
VOl1SE5O3LbS3385CPTwkFslf2ImNClCVdoM88yux94shQ5ApnmAFLOowvGpdtPhR6OQf9en88jkJ6\
++h3GlqNBHPUJkFB/pWDNtTOKNcjigU8TQ5xy8thYXbU1OJg4DDZydCMIqX9hI4tRZlusSz33Zkrx+\
q5tuaElxyxXV6DP1azMbJxli/uKBVmTXEUX4gmZ8rQhRV6Uofvu1ObUjE+\
LV9xZP9186P4EVskCCmII7VoMaO22WwiuwtCWKy54VEM56ms/\
MaZinPKtPwYxEqScFy7K7YWiQtgyrFBPNuz2apopHCnAKvtXKhOivvoSKfeNIHH9kvQyeQnpJ+\
49NZToh6YKDrvKEugtDiS0JcCTX9QK+Vi2kNrry3ZnXvZO2fc3/\
hDNqaX2xWgvevpdtbsAEsUHaSrUv/YU9/Lmov0pxlfMVvFly4+\
9iVeB9lIPZr51fxnhks1sZM0J7WsE4mAB5a0osgWa1WuBqlokbTvbJYz9R7baNovdCR6SbACXM1l0I\
dgiBL6y4nBUFzKASvDj201u1rOYjf2l9i+\
PnrEhjfkIaXK43MyanDB37EUa3VvCyBtjmi43MOAhsmb7yofhrlkXizNb8ojY4HQwkOeavys3d1LEC\
2r2PH0r1iO/\
ezicsOvZeMXHRDX9A2yJNwQQd9ShREqnkHCgH6YJ9Y8OTlSVE1rp3MrEqkNrfGUL526CLZZNdIEqaC\
IPEkb95JJSstVXDwA3AyY2XJRIgFBDx/JP7bLioQf4aKfpeJK2yUnvv9kl8msKN6B72oa+\
nsw72ILwu0tcyn1lVH23mgHyINb1Pe8SHI0DV0p6IqHq3Xieac9bjy49rJ9dRPpoXw2CcjjqdW+\
0WMzaayCeTo3gwLZDEfNwjYcDa8pj6dGJOJbcK7YS+\
nzNo9Sa8I2t1HvQ2xERsi1iS4eaHk1VIunUwV2JRZKnY8Jy+698Kng0/\
DJ8ZoO2Ll3LcEzMCQYkoCjGvWUpKyIDCIswjYSN7r1o8YejN0QrmeDPFNPvtK0JFysZ9u8Z6O7pimX\
UfpQ5E1hxZBaKyN4Y9GoWBhodn+xMpw7Bx6GUufNotBbOkNV9V89LcT9Ghq9frnmlXytCvzx/8d+\
VZHVNka2VkDxz72uy4I5tMjBPP93PjMRwx0F2I02IT2Yya2aTEvZftS9R+\
lkQVpmf1ehJFk2f1l7r6cQp8dj80SKqPZhs+\
AgQ0DGFG2SNrm2bCewZk6UeTwoCYmVFJ7kcMTGDzd2ll2pTInWxf3Jth+\
DuABXW6c48nrHqFvcBiqw/Izs06m/QdVRy+\
r7Em6GeEpOMwRikaqMnh9LKZ6UIfewcxsulFfk5jEmjfjJEmBLpJjHjOqHaD5RVJUOcHhZ6QhOeFwH\
ONgO5idgUHWjgBqUzLim4/m/WSghREStVPG75Y3QC0VM07x/\
O0ifg9hME0mSwZM7o1UGc4cfLFH6SjZfFg78HgGC8A1QRnIjnGFomHgZ/\
fMcZfVxM9GwLGVTvNt3E40wgqghx0YSQBUz65HqqH0i8DLpfFoqd2593X98LQ/\
5Ybhfy5XXDjdVTbZgW6HemGb1kikm16Tym7VHjE9i9XVLdsLX2Bz0925jYiXrRoV13C5If7+\
228elG+7F/O/7ffG8vzoghm61gKA1QUoqMqL99HUX1JWfSERNFmO2l3L5UA/\
bVetKJCkR0cXhw1KBAWrZ3t1kVG7FGXKFMFdWJ0fZF3zLx6Siit4f5DGXugzWiD9TZOQQJEh7dxM8J\
2XDihN1EyibXB7nK/xu9nB0ADscWlSF1EGc7Eq3d5ajI5aN/\
UbuOngzcVK0WeFrVFFuY4o5SN8iXUWU+\
n2fMBVQnLnymsWBYyMplGJdcrq5XLqnDknJ1H9uIiNaSjWYcpWeYV9PtT36oTpZcmNvN3P+Yk/\
UrrnYtYus3hr3bpCZRCi2MJSLG3Nb91psX2JF9l9qLuXUPSLk9ywTurmUeT7Y75bF6O2LyR0jL3Os0\
qwMgahKu0CTo2U3RiZ8o9atiWhDKAp2wkALwZooHteDomQkweJxhKHtddI0haMr5e4brg4bgftCL7z\
hNulw8RupJ7niSsthhweRIsbNVYJa1LNw/8uxqXLhk2pD8wkPtg1XLv/tyowppIRJrOawEhdm/\
mexDnjaljchyjJbV61yGivo5dbDIQcDbUUWonbH2jiBXgHQ+\
uOrzYczWvdcmovhrPFNq1O44j2YlGMzZ7ioAQdCbj1LKSNfIF5j2jXyEGuooIqC0S97o39c3Kfu8in\
FTlrn895Qojh0KqqFeG1WUAt2TFu0B08v14uD1aDr/35yCLFQ/\
qUOJeCmBjPr41kM94DXPkQWW7EJ3NWKKHnD7zST8cwL/\
gozJb9B0QoHn9Qy1cjCpDIzJnksM6bSlkQchtyzxNMN1lhH64/Rlt3wJkYlMVn8PhZr60l73+\
zlRxc7KTgZ0gxVZTNVlpPSwua7XuBa3fdbh2sir8Fp0AoX0DvEVMkpumnAAS4u5XyZvY8feJFCwwOE\
goIAbdCcMLRIIlHdqIyoS74LT1j5ZDFN1RxF2Dxt4bvizY+\
Nat2kZ7pdmA0UWTV9Ty2Wt2RhUqVNmlRtciNToYopQ5fBV0eYvW4s3Dl8ClP5XkQRLaIoX5FUiDYuf\
q47nJLrtNxhyxlFPs4Z4apveLwaqszP2uDE33kW0OChs1wxgyp7/\
tKERhnAQxU1L34h6dCGx4ZL9rkbcTtICFWGc/HyHja5mE+LM/keL43/\
PW7tEixK5wDKLgf282cireX208qOH/\
xagjjF6sGssAy6ExtbIE6jrrK4NjOErF8dmQXBdmfmASOLSsfHPRebhzcIXp9Cp9nBP00OhVDEEUNg\
d0bmqczLGgmN2rhJPFCMFqzXfE/\
qv0WAjPvRzhgDBuzMJCSq2e6YVF5ZZt8RsSm3prirEQbwl2z5IXeLbJEFFO1rOUY5ZSie1ntNHLrHk\
O4UqZ/W4maz5HDOOYSnybg3nOD6eLglVjf/8dQIFKhY/\
E4yjHrV9cfKTP8ZlTyi2uyWSfauhuVCqt2yDdJ7NWCVv3t7KXu4+V7+6R/\
ykbfHAQv3EVWV5gAQSdllKr1JgFi5P0WY1vCFq6mXzoA3vmXLoTtjDcwA4LtAyVSKJRrnR8elaTZsy\
kBuQu4sK/G6mmCRK2lSX7lUfCBRYrBiydiUn2wdHnLObfhlN/Ye8UJB+KK86+\
jNO7btBA4SyYQ8yYnuhPON2RRJAXVf0AGEz8m/MX1tIhYLyH+6Tc84hAeG3vYMp5Zm/\
kRlPsvkd6rPliQWzTKcjcQYuQQ9qxh9/joXVj6SUzDW6ZOxDPbzdo9CY0qn+1AprYgJJ0NgKp9B/\
xKk194/gnpomaGnNZlAZLrkvpQkyui3mZ9/\
MyB6xwr1z9UyTnG24rypdCEyb6DZi6RS8eIJBVzklyRzpK25iuB4SL+Ytat5Tck8im0ph675VFkRa/\
vVDhRr+qSf9fNtt5N2JDDIiV4VMBt0FpIwVCMl383ptu8OnnHC4oYe9yF5PNEPH7Z2sYKvNv/\
Q3x9bjeTJ/L05AwZRJWJXomu5OJMC2iIGtMoAl9/vFM3C8OJR4D6ZBpAy9mSY1os1MaCtW+\
K2YFbIBESx4TIRyMPoR+loxkcxT8YsZ2iclbWEAy+cASe/wylqIgcxcrS5ZMfitNuRlOOKOCnheOQ/\
O2HhaS4tk1SWz1r+\
SDPbwPWPvXl4aHLDJxVcM2CEGQHTuFq2idfGPzchz0O3CuT3be8nD8IdmfJwQ8mxVZX/\
23qpDB2D2HSBwjakdpVaYPZVe03Pb9QJujh5zSKmCvSC2HIb2cttCpH6gj3q2f5u2WQkGJFqTiZn7v\
UCFpwB0ynnIjHiYi9+jduiG+JgIShz3DIACFZll3jf1saCjMMtar6RRCCrCisWUf/\
x0vkYbGYy7Mgj+tUlIbo1GVMWSU5LbIx9+\
fdTJyjOcjMCYIbbBJwDARRuc6ZbOWDjn6hLL33jbXN1uUYwKSZkj2SiT+\
Bn1Xv4JmuGinOH3lR1JhrPDKyM3euYjhw0+3uuOsJtdSvUK5EXCp2/6xGkPVRA7FyTdi/\
6oKn83Q2zeZjrL2a8ze4kmc8Da2aK9SybYr6Pa3plSe4SOLS2cpfqIIf3T28N577VQOxFOGVz1sYx6\
r0eQWxONjAeSimV33PVGuU93VkJe5dwXeC466561NeuogUGo/UWcPFHerhhYlC1XmUs/\
TNz6MBpT0oHRaszwcIYWA1eCztyZ24TZjlliF1yUTULxBNkN5mAO3yYBm7OdPujsbl5u8pahvuSxNz\
L3mioF897S2grlB4RJltuCY8LVgHtnraHhSmuNJIXg2kX6Dudxj50d5MEUGqi/WykP2qLAVEmrET+\
IF0fOI/FYY6IocpyV7h06/pKkF4GDDU3Q2ru0hw6SpOje997DZLP8lX4ZwJnySn5oB1UbJLy/\
kWqeutMhu2Xcopl4nHyd53z1+4J2p7AY3xn5Hvp05vaN7f+Vfyvz/\
1JRb31NN7EYwwAZMYHNMlmr7W1NHH023Wgo3uFXvDgr/skoGLIAp2IzxWLQ+\
A8zrnmlP1QEnoBRQJBKOztHBzaM+gBSFqyXv3ZEl86as5Kwna21hz6fQn8SHT7c3NuBqFm/PBvv/\
zy9vf/cCCME4bLxih+\
0PEUUPB9CUam6jzp3UViB2kxP7mxq7CTBqsvm8PdQaNN9v2iG0UvqzI0MDMhWWMjsTpdWcnzVUEUMZ\
RYi8+AIJsEwhpAE41V9G+k0N2N19vUzn8m6SCL1WsTWwDhRPAu+\
HI41NqAU8H0smFQ3qen5vKoBcYlR8lllUjFzqZcki/\
0V2bMrRw207fUs6euBCnVmLpjEUH7nXjoECjy5i+Tchtbh/ywPDY/\
jV7svEpFNy8sgyB2Xc53kHF98p8SPxNl6d1yWm/IJYRV17j21G/eaSqmfF3UdYxd1uuoIhLw9yyL+\
4SsvQ12bfWT4MdKo65hNU6dtXCcpS3zUzu+UZ5p9LzpsixwL94y3H4Rvlc50o/\
Ky20eq5p6wtusvqlIODyobshllTJZJPyOj4YTeOGFYLusrMvUy7EsH/8T/ygzLlNS9sPYnKbb+U8A/\
Qq6cW9vmuapgjfu+\
6GckBaCPlWw1o1eqJBORf2l3rMayi8mZUZ9Y4kWZfy4j4vh8m9tS8CmLDv6yLI9+\
8HSZtPL2HBFiuonyAIuF3BsyFkSXOWwGhWPFEIB6j2mLuZm5B3aTNacZ5YZTfZQdxJcKN9K4WlerxF\
sm6cpiTa94CyiBQVtvlNN4lV85tNBvRVlt4RZ0RIozmlKkK4YmXtrJbtBiN2BdphjOP0FeeUGXaM2s\
Cf26n4FHZE6F0muRAyt78MSpd5Ay7f5IIqem7dn8AWo4p0JaSoB/+\
1QF47LdN3KoXMiYcsvyaVjtVc+4PXas5Hofh4kmfvdx6F/PPWHe4k6kaz9tZh3H81Wm7//tO/\
3nx5kQOP2T+hN6AnfSmwSDnjDzWc4qf9dfNX7A54lu1atrLqtt4t+\
e97lxgtbsPNl8jsUtJy9SrWPhavqEY3JJXQx9iiF9Z/vRsFI7w9v71W3sfx1lB0tR6B8+\
tT3IfxYHWt5rXtxs8pNddt/6st9Z4yVsj7HXjyph91AIyOvJxGpkuSNp3JvyB81L/\
u54bbYPxV3pZyR7tAg/3tgVxc4fPFRMYNR+xJ+\
3eFa7ugGT1DcnzrdJwicQARI0PPIg6QAWPPdo1VLDc2pLRhyqyg4rgzweQseB2VIhUNM18sogag78l\
iM757R6rh1SCHIoK/yv+jhnNrJXEUF1+K1DJtdwu9PlFYufsgPP7397eO73zf/89Xmp//4y+/v//r+\
wy+vNn/VDbRQYofzauRU5HBG7Otd+0/34i1Jy8AH/\
6j4WD1BdBa2yUQWf1doHgFCT8EAjBZDEYCaEYxIW/Nn/rt5dQo0/Vkygo+S73Zxl2qQK+\
PBKnrkhCXkZa1dixpMQLMK5yH1f5QJA/ORZ2H/+\
IT8pqIbooiZ55SRELebuGbtYcVoElUtv0x6eLj5+\
ljC3ZmPlWokkxGJRqGTo3cpM39KKN9qCcric5haocSHxwBhpF7t0z1+\
9WjDKNN7O59RvJfgEmCdQH6iZXuac3yULTa6XZxfQTmpkhoyFgfP0+r0/u+RukMCMwfhVxGvvRg50+\
V4s6xJPlrIkuo1jbeI+3LGVao+\
aQv9xsiIhynRSiooo1aoAD4Jz4Yb6jrblBpnbc1FnKA96fymMCClMjiTT7aQg4rCxDp4VzfSS0rbt+\
Uj0f2MS3Vocimeyj8SEwlqRf3Xr7g4kYkRTs5YsMQIWy6GEY+\
zyt7KeU38Nh4L71zDqGK0khyAZ940BIpvr3MP6B5QBBwgYMPn6AFwBF+\
GtSkZTLXDELj21zbpkSpXuRHWeXgYb6nkiE3azj42QVjr1tYd7c7ommXy71UmSmCaaLaGQQyW2i2lt\
E/NqBYMjuWW2WNWZRi1bY5CMu2Eie7N6VmMHWXwB1AqVj0zGe5eLXCGZ+\
OwZ6uZOojqL0kMrDsj4hfNpp+\
LbZV8SCD8ScUYHHkV9CSaCpVpyQMqN7t0URemiCfUqlta1IKbjpyQ21a3pp52zwFfgupU/\
Y06wjL1e4cRyalhGP2CspnTt8w7CI1NsFONFabpGDMyrhOAtldq9OFT0pYLQH6VwJtryp47mZ29gBr\
FwDan0XHCurLGZY6Vb78ILkBH5wWgHpCMflAFvfNuuPd5BG/8RaUr9+C/\
SXy5rgQOFVu5HSnCYuLQRrdlhpN75154OzV5tXeiMhs7v/S3AaTX0MuIbp57YyQJ9neLkCwFmx8rn/\
IshzaYQdB7o6X85+QaJlOiq8u8hKoZscOVesXrfk4Qvkt+\
t9N7RCIHktPKz7ADjSM9rrobBrKK5CPQoYweRLqcpYuDQ3w182hHt6KSWb/6q5z4NB/\
JC67NFpG11MgskYPsAkm50tU56+My74FWxHk8XIFCSd6oegR3TA5itYrm1oVHhuIPf/\
GVNYY7JevKY7/iwtH+ZStD4uvQ8yT3/u2gYbQCBM7Fd+\
6Ur0HqXbpcQK48o7YzonLBdiuxD15bUrCo5JH/d38amOiVj/\
ytGaaL7MsSSlo3UTlVvSapy2gl4tCmtnwBWb7dKC7aK62cEv9Gh7KUefSesRnqz3YJz+\
7gGNsZSSn5geEmMlXm33rfaTlp0IDihz5B6c4YF1vT0nDOqKfWyIKfeyugxykG8knevLkJf8dYdSi5\
Q8suBcvLB+Hh04KQYmgun0YtaYyxh17FbDNbNHtJU9NKLwvCsdbyyqr9DTGP+\
gD5xP15jNdnAdBxXgr+OUd6QA2bjgrnf3fqELc4Yhd5sZt626M3o88rYgsl57Xl/al1zSzGI3rxNF+\
68+2ckEjsH3b/YHdfOhv5ZDl2d36yksRTI2coWIDzb/NaFceDFuzBHrSe8P8LwW9at/\
P7hFKDYWQM48lZKbEDH/\
ia4icX61TmkFmQN1roBqUZNZtbUu91xhyF3Eu62exb5UKVRpfDaqh0FTpe520ftGWpB63F3UurMObK\
c39iWelXuiiGY1XnI3i4MXAyoNk2IpSjn5yTJJGt4d8QMJGH96nBapT/\
EOMCjJ9cVNxNoxMBVgTj1CpLnbbVSbDZNWnHlu3VrTJr2iAfYdX0uQwLqDmWtLC8RqBv7aakXqCaDE\
IHk22gOK3PF10DfuU7pOoJbTydTB45hVI/t4+3c3fpx6ZN1HfpiJWIwQEWhxXh9HLMu6uWYb/\
fiBp4VNRVolBfSyPWnAVgiT6sdNluTQd3J5jDy0BtMpWu2+6pOyRCrB9Yij3hdUty9zz0ao6ku/\
zUXVPjbnTRo4RBL4ZHJXeMJdeFiWNA+vYopVI1LqgbBebUUrfQjLfYF+\
Tb415QmEUvqWy1KqdbGS7czYvkUL57e2keJQMvm/\
GzYBStRb4V892k3gqtIRXDUlZBsiNyI1R3wXaFSicFXVoiV5RhxTjAjrbRyvE651bokd42mqVRXJ/\
K7dEMsTbIGXXOVXi0rZOcVATFwOLn0lVhJrEBsS+\
TEH3kIdY8vtgfunau8KGpmAiqUKRmDc0US7JLZXnH1QugA11i1Ck8ObnJ+\
gsjhXzGPuFL1byuRHZRfMym5ZpjUz5WFcdz2tMGW6nx6E8eFRDp6njymwI9HjW5Tv/\
LqTjlfpWlwrEPei4bU3s5GCrJZgs6nYADUMrh0jtj12ftQTVQvuI3aj2OqKs89xwNbT3lZNyNhLto9\
Dr0EQ+Rxn7BxcwUXs1AfREQt5WvTYPSYbqsduzzWcVMRod8WEbm29YSx0r5+E3/gEZDPY6Hhz+\
mCaRCxSw7+NQ5iqKsswRZs1OuO+n/\
3CSvDW0zniNjksDpAngR8VVIbol5aA9ekSB7f7IV7sX4SHBVx05oDu7NxElw12JgS/\
QuVeXo6SqKNK7zUTHPNOjxUzDpmOM9NsltnFEiXoxJKiXn84VSTkg/HOgbvhxuuZUp28Zf/\
02UrZdTwKCkrMW+\
nZ11rxb7rOd0rpkITVynn62Ub0xG7UIGP2RzKhygIrZyxq7eqas5UTHckZpU1KzsdE/\
luDMFyJcLsg0yc7iZnywxFa46+\
tW1dnJ2mlcxk8oXwyVKnq6mvLsvIOIUV9F7BLTpW3VH2kseJbNq4lSj0W1MbW6+\
TpU7QeQgWCqa0QrYmVCCnHOHVj/wapUcxyB0t/\
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\
VPjWGXf2uKw1k20dDgy/\
9e5rMZy9EqzuwpIaXUKnh9vPL6TTsoLNFT25Rv321q9IdcOwRXNm3MSpyokc9zO8yNG1/\
a5DnkOs71FlVdUN5Knv4ZrCyQXTz85xsIW2CDGuOT1FbL7nI0vy/\
NwHNrnZXFrXMcqOzaWS5sSqwUqPsjxy1OJFvJADm+\
40bw0vjoYTcJ3IxloKqsrBV2XuS8r3xHfGNmb+\
soWpJtin6Ksktea8nLVhzmccVBTUgMAmnbiK45QsShPJ7EV6qSxE1ZvtCJ2hqLEeW/\
ekfMy3zlILOxppOZ5/BbK5m9/tKJv/BjuWxG2dM/NKd924ugl2zwdir+d/kfvz/1h/5QXnCQkbTT/\
lUGWftEyh5iLc8qwBZd4NI3QHJ9S5kZshyvBuRqJmH+\
06AQhD0O3bEvR5Cn4ARkb3dpG29MUplJY1gYVaSMJVp2UGjj7Z8MUdkeLF8QepzQfJG0TtZAagLCrA\
/z+BctvtLLCk/6qbgrYoYVv4ksCBbvio+I8ziaPyDfjuCo3rMppsG6tl+8Y6D8OS+N2lPku0Ssxpn/\
06Kc1yM9Ukj+\
IBGsQ9RjjaidPuZbAmnPkXz75Kx5HMp9SeA50gW6guZs54FufpO7QrwQGe8PzdQ87zoJOKoUu2cyNn\
8iUAcpn7bVZcHWz0g29hDJnP/\
UpPwpMcNNh26xQbnDH9GjebFcvfJ0VDHDjJs15RVWi87qUkaxAN6Q5C/m8kZxXEWaUSDHw/\
0sTvRPtXngHGsCfjdXOqiSPIR0oGebjIX122qYqiI8zSOp2hPkb+amzpM0lmkHY/bpBLS54G+\
5GLn0k0mUXNnBsrhlG51uVhtey6mgRnYbI08teaE7olmBEpgjbEnjEiOfjRANbopyKuwTk8mDvu3O6\
FLrtHdouqDVTIMMSbeOUUgTPdF8yCqiPil9mxMMGhDt0QZfnDNqF3/\
18SyW5QRIjFT5FSqlIKlUBtSRzYp83lyLwKC4pFDHiutljSDWPLjmkqkXIJwlTj8FcpAiagYk3PhTG\
l4UX2mc2kOgdjuPN5X73PrksS/+ANt6/W2LgeFsKlokeQ7241gZteVjK8LzU+\
uu2kyw0oaew91ABTWXuYfHISSREb2vpgrWnrJAeZuwepiBLKg66083SyNr20kbonWsCR9KTjfsCOO0\
lwI6RTxxHN5PWs5PDSS7FgphVCLo1H4mBDiYnXUy/ajp2fVWXKEzIthbPr6+\
sdysdIIvrK8IzqqwXD9IH2hUJm36ySPZOenikRR63vRIJtDMx9JdwmFRGSMddXephxwyC5uhU8ihMT\
d6ubbqtUv9dGe3VBz/1rl8czVp3CYcxcr1qRrocy+7Lte+WI+vrNDqbkH/\
lbaDoXbSK3Ww6ioHdk9qFyJFMJcz0J9LBOqsXBoSCgCw7qyAh8BkONx+\
7LVnHulu2va6xrRaVP67kQtdpgHTax24yok2Ts7waxX3auN84yoWDAGxPF20UwBJ0SDxYOU7Qan3F1\
ddYQJUK7ssP9T87t3kfVdsEQki7dhU6BonkVzqsMiWJIORzOnIFbX3FTslm/\
JueqsLGHJ9tmZmTOwO8vLcK3ZDaQXmruBh03amMnWWbEn9KfIBagOpxj39SKanTgQ8FduG2VsgGjzu\
dVhFbNX73LQ9VKYtoWC/bjb1IFgktILctMWxJWAMUYKn2+\
km0EhpND8pqPL3Vny3rtsG3dpvxXR1jaRU9/1pXybyps7Nb6/KY4b/cys3zRhJ2fJXyTd0QoM+\
vORcf5wPZwocKFzgJ6ERkI0t//e7t682+/vjRYpK4/\
fbFIQaP1GFRAzdZPmnqNQr2qtLtRVLY2jH2wQHpCqIs/\
v0RRxPQu1oqcEt0BTKzfxJMKe0msIBwCjBFyXceHefqELRmy0S47WYJ5YVlQDQ5WoS/\
gyCUYqusG9pswr0/DxekQ7PjaYYpDaCu8Ke910JYC6HsuCnwxBpFbw9lkXL0vLqwqwA9+\
x98Zub3MuJB8NyPWAWuKCGxPBMvG4MYsWreE17EFoh9of9stZeoYhpvYcf8/\
eX012Thj80V6n83abJZb+oMF18yb018PjQfFxNQskbnrSi7tD9kIEr9/\
iWDJ79rpoHdXjeWpcDCBFHJcQjI5e3Su/\
YwFNdqEEApcIpznmoB69s8mZM6lgIlEgT3F4na7cp5v2SO8jf1NUZZAr6F/\
if1prQVNaI7Nw7HdQpEmkjIhM52zgfSmloiOW4EbVfnBZ3+UOcIeNBtR5yIzdiwqLuFHI/\
RbvFvMB9G72rWemQciI2eyH1D9I3nNEnfExsts2p/N8Lyb1q+LeSzkXLu+\
clyuyc0NefLLZUUSTzM9yEB89znp1gbxTvCmIqAW45gPJVLtrPfVEhKMGCPq4vosW9z8KWwhzGG2qa\
M05SkmvmvmU3zbTaJF4uEwcRZNs0eNicH4ZyJnJi1tu69GSpVgwbtc5tIBUlvNh6fJFD9pUtozd2tV\
nUY94NqdmaGftvbyUUuxrTeGRHyAv37UzViI7G0+0s3MwwkhcXR/rKXLhxZ+\
5XSe72Ji17bu3mgOXzsCyZlEU8tSzgVQIxauc4lQqTur9kDyLBrecSlffblU4TMYP6gwtIYYXPXWAd\
Uiydc9NvSH7KZzrvTThrSi+jcM8TEmEuhSPP2Ht4RZyts0SwQ+\
tllhRn8ZGnahxpNU1PW7YmAqWQqMrMpYam1EPutEA7Q94fLEn5EkIk9I2XdCmS7zaz1yneAezFJ6ex\
0OJRQnd31rVlBHey1qrqE2143vW0XW6q1FOTGFF+fvuPD5u//f3f3/3+6/tf/7b5+NO7zYeP735///\
P7j/+x+fuPmx/f//7h4+aH3//+4cO7D5u3v/5V/kgOnQ+g8UXe6IL8PZ8mBTySh7Ibz/oFeDfnxg+\
WDlEa+gq3zdf5Zv4uPLhP2MRovuV4dk6bb1aoH5xBlU8Ua7hvjI+\
wYlUIxgqSs9YsLNCTa77KvNINwWjCbqlWK/xmzMoXQZUZHC3ag95LphLb3EtmudlDDBFeV+\
zs0Dxf5CTD+mhq98+ZNRfExX2O7Qzy6Pv8VZ3rR55uJdcPuSelZtWRifRclePTsVYSUaoJJJs1KI+\
7WdPKC6ESCQKCtVPlLORnI16I2ms9Khw/MQLFRrA5IwRJFYNL4GybW5pWyhl6kr+xEbepwQLL8Z/\
tALqHRWOS1b9SZK7zCyu+17QzqsvUBzH5DkdQsLOkp3NKG0HxcbHo0jksV9t06oLRUa+\
m5kJg0o74KxECF8NdIyYd9QjGeuhDKq/gvnUaOqaGc09pjYcxWeaOpLMCmerNHlg+\
HeGMdCSRE83IiQ43iVN+9AYWs1uc0nppaqRC4p9/SRlzLh8d78GSVWTvtoT+\
jIk5JVaiM0H29absLe7X3uj+WAGjRCAgYHQl/M/+QipxRf5fmqK2ZbrIFep3IhjZnKw/\
neDtnrfIXhsE8uY1FgxEV9aBiSUTCZYEM4JQCl8APlRcUymznJVBMWP8zcR+\
HXOAbJABkPkJOnv6ER38HLgrea61IN5i99yn+tqUl1LBcTQCU8PPTYPqYkZOUy/\
zcjGpjNEC9ZLoUNfiQklO1UWZGVSmLMkz30L2QMf6AGgCg24z1dgOScOw3XDb8PvqlaQHdcoFSgoSZ\
WIqs/N4YQVp313B0V2B3POJMrGENWRrbLwKNjDjJaIyxcsCCXEkeBBWrOBPVcakYjCwhBHydVXDJ4y\
vggvxsaGBQJmVtegHO8FBnVoiuNbY7616cn2BsC51jcPDprhMvgT+\
AIuTFgZ5Ih4e1oip0vvGUFfIph4eSJAudhS09lQYUkpkfP9spZwxt8WXZ1bNuXqLCBG3OTW3C5LYoK\
P1rqeoFZo8E9/\
qIU2wKtSMNSTbO1LuUXVa5wQ2S1ItvZWYNOuDZeM6I03g8u7YwomheFYP0yJ6sXsikZLtkm0tT9u8M\
zvk/Jjnblq5PeqYXeb4r520cWgHgKbvokuX2WGBEM8Yhv6oU9GNVVUwt1LfLkdwiMPRCypFxbt286a\
7WYt2qBitITgkW2J8RJ2gnuSMgUR8Z/m/VGk4qa+iM+\
VsUizOpJMN51VXlUGMf2zWEC5LqegkB7Dfrr0XZbzjNPosAgtgmruik+msTKzOCB/\
QJVFCW8GQFx5eKTU1jc5iVBz6F+aJ+\
WjH56oOqaVCnM9riVjQ3K5mdsSzmumFlsB3vGnPRBlprz6waR3G53zty6Jqg0Y7nKtCeTkkFx2wGI+\
JnpNEj+fdqcli84neJTj4NWrNE69V5cx9aJ5hUppiXjYsnOxt4Ty6Pt1LPGPkuomtKiy7zqSGkvrj2\
mbom/hXVZyo9vl60TT0Qp1u6itkezh6lptlcJqb9VbmVrOMUo8w6jr46dI9oY9xL8l7cKwPczb5WgQ\
Rdkp7kLZm1g52ZwWElf7UnV54NT22PyLuGoinKD+\
w3wBhH9B7Ol77CzvAfagru8vh1PojSD5aHPzC7fWWvL6TyFA7rYwL25DZXlguvvIqyo/\
CPMTEi42tqZfT/aXr4oV582ctsl18Cn48XNbbhIxZzNr7ZPo0duI1px5nYxdJ8fHj7vDLGo+mKl+\
6rfEMwxHFzWhpWAf76u9+KHfaZcaMo6ntdoApQverkA4YUuJIqUZkMXjp2zpHaop1crfl5o5zc/\
9X7lDJDYrWYORTyDrgXU1vVmAa1aSUH/212/dTmcAmmXdYJDu0FYJmqmGkmugMBheMjD6hQeSM+\
qb4D7++2jR7YRxqpiaRIZLeVEycbCkc+WU/SL+Tv/\
AGjVl2x5qFj1mPZzko27WiX802kyfhlQC5decEz40lpPNhck2OSIcoEhEyf7iFAFtm9674W8A1ASa6\
zVH23hVnhnbfP15KoFGlcpnkcMWgnCFLPkEUmJQ/\
o6bO0GRsDY1NbDakekcAoplTotO1mYQlA6peCUs42qEl55OJKQDWwMmDn1EFWxqj6p42yJxRJAy3bq\
pB+P10L0sMP6x2YwWtIeK59KzlyZcutVShoflm3IQyGvE2wHAru8jh+\
Em0IOQATdpFKslkK5LzEyc36RScoEqvo9NaelvDnaSnBJ6EtJaXWHLo985tkJvQfIu/\
h0nfGLZjXthCYmgUjt0yygehEGw1k19x4hpvAiVyH5oUX12AB+\
cf7WNlGdvXyen2CmRz51dkHzXdoXYA44XCQlgE5c7c9ETo3jgFUnfRclldchodzqcLnVe3vRGXigOk\
BeNEUace5p0iVJGKlLrH3joBLzXJn0XCMWbLJcEPCxKN/\
viyw8Ir8rg8wWvtpSzMM0VnCYX1kM7TL9kNWnmtYz9UzkHoY7O3sKaVqY6r9HWgvimjlVAoks9HK9P\
Sv03Ew5wB58KdL6d26/THlVWsxQHmUY2ARE69JAceexeel2F5Y3F5aM+yWwK/\
vd78Ill6sfibfzYn4QHEodRQb34hzNJTv7zCM9nJE4mI1bwDQ2y3xIFX4IUX/c9E3kZ/\
KoAt5RZEGVY6RrZOnYH7KIoV2hiVb7b6rFXjXUv5lQ/\
oLPBtTEiMd2Y5RxWXm7GBiheJo7fmN0Ipc2iZ+feFSe7Zfpr1sbbNwzOyVmVv/\
njbd4mUNPSGk2MwzfYSczoOqXvRLGwiCcf08NlIurUXiMEmGsarwXcqOG4bUrmyeneNh/\
aEwrPwVfzSTGWA/UlaTsrVw1vy1OyG5vtNdFjMePgmF4+s2VkTg1hFOcLe4YqTP0e2y3f3/\
qHeucutkbL1wCz64KubBuYmAWz1buc9AgN/\
G1snqzk2jhvgJaKMqgrvjghIQ815L0VDTRONGJ3m56T/\
iEDWFqrent5ZzaLULJzJ5bo5Ihl57KoYWc22Kyu65aS2cHYM3yz9xFkN5Cu/qyTFmtoGw/\
GnlrxDdhXMeWQ9lao3MSm1DUupONRi2suPlO2EcNqTmjl76aVGo/\
Chnx164lztrfKSIWO53cxVc8P9TEa7GzgyAwUb0a4fGuRB2pT0P7+\
JFhVPBunGFfWA4WI0j1AXii92qzgyJh2JswaXu+Fzsh3wXKkDWIzLqZ4S+QEDHVfvXuVs6tf3V/\
cnqyvq9aScm4oWQXmW4PS9O//lKavffPRqxiw5bLEXl2CmF2klIUshqm+xYli0OS+\
jLS1hpts7SXWtZjmx9+qWTW9DpCe1IGzRrY/\
6deVkdeD95bao0mqSsFsUs15tfkhl8pwgpL0QNAVMhc06E1DfynTNk8fPqJFZ6c9uC1dOXUUeoet2n\
UcB2w5FgwWp0x8ufgcLRrgKkzd0qAFIukCdVTWD+\
Lgmk9q1MngTBQgA6ngb3UOUR0WqHM7FS7lzrOws362PZnY4p7Dmie8gV60o9OippyDxpaxjp9FwvGu\
92k6QyNSDXfXq7MajPemTjikmUvdnRMi+\
N3VbSkOB6clnjcl5oLPOTDKPUur6wB9Kosr2iKM6P0jem1UjOoP1LCVfEU3hYf9Ff54RmbDlkC9SvY\
bsdmj5gMaJAuJzp6M3FWP6GpNFmEmmqK9yXitextfj0O1aIEqwOmFHclgNVuQ2IdzYevetTBIDyxXf\
iGn3Q2/Rnvb3stWjcny+grFaIquiiDoWL4QonhpTBSiwarpaebRTnHT7r4nWd2K/\
9vPT3VpZpqpKu0MzwlqCpAv1NpjMObtyKmERJdsbV5shHseblP9ECDUY1ixcCVak8m6f2lahWwt42L\
9u/lEPfZ2DammrbE+81Bqrr1H9fuVyprbYuhgslV7LDedCum0tzadXnmfusV2p185/Vjv1Znje+\
Vw41T0XkdxVzVcj+q8lslYsAJ7omE+Nt8r5/kSZNqVNCXWlZJopPWuk4f9KZhZdb0/\
eWC4a1JLqdwesYsaDx6tynPqrXX5CVUORhmvxEo0HMrbwmoIXUbesuaQo0Xr9kgWJewvm4yU30pHzx\
J4o811qyDU4o0nOBpxRuVhXSla8mBQ0bYYcMrDZjMyO8h+\
ooyMTTZuS5cWGTfLhxFyqhHekmraOtfQ9tcgojVs/\
YQsAS84wViksuitAnYXOqgwaVRMQYNCq8R7eEi/58j32XG8vaGPVIlQOGjc5bi1cKzXBfnKV4PZr3+\
Z1RsFo7aoTEz2QdipUrwOH2xw+a16R/a2nhomOBBFm3zcpgJX6jVUHzSzv7pXZI2TyqwKWPD1z/\
bmZ5lzxd8Y6J6m4ryxBAoKIFpJ1O+FKpuTUxe/+\
sXdeJTkxbuCJkQBS66g0mQu5FEmdS7h9M4qKS5JLt3skEk2REZby24ff3ik/5KqUHn5DkMCBH1+\
o681qIKjaidBoGaByO+myI3hWuPA/\
2K8eISJjDG9qlEtXXmICJZcVZQVdnGZuW7fDxQCEyVDniENwN0faiIMAGTlp0J9ZaUZ4dTx/\
JMUbQL4bQyKoy9lcSQXzxoCDzVr9WdWXhSrpEW08/m5lbJ/F//wbpdQBo8+Mnt1/8mk+\
YVtMBjetDDiq5Gr5hIBp3/a36pNRAKo/\
7WUiZVo6NFdWf4g3PLxU7YFwc3LGs0qojNVpUCIx83YMBKim/NFNjevcPr+\
tzw9wQzRgGbuQaw5HVRFcq0DiV1nyCqT8rkXimN0cBM6ugyBWr5R1yABnL/\
TLVlwkVsg0zZItnrpaiD3dOuTC2W12XJmwWkzlPJiM7owcKa0CTbxjGQncWZ/\
sQpxVYQjhddugQ6WrMxOqWjsvZg4X57mOyeQYNoNVPu053kBqEAaXguiodW4F9VB6aKq3uhmqTb8oG\
O78vUbU33YBwY0BKywhjsRizelxyNtgDVfdqPCP8sDBxHzov/\
bjzXWQCr3WfDFVgeReDuUEGrZxDYJAxxcEhZGbu2gAMHN+Y0Dvf/3r+39//9d/e/\
vzh2puqij94slkvNGH4lRK0SQogp66OU/QfK5eCjdmz6Ftm28/\
MzXrpYJvxbdRAiWks1EOZ4RcMFjdlOasU4J7mq83fCPWXx77YirKLhru8wp2yGW5N6Dl7ps4vFNNqK\
h/5FmRneWJY581i4D0Z+LJuF4d+L/\
m71YJPgU6flVpldx1wYWX5F9xdBxkrXcGZC0sr1qDoA0pNocU/8GRuMppoIYrMlsan+HGfgY/\
JyrWazhtSY+X1XziJjCoC0C2s7WVRfxYZr671CdJHJNk4n7vdx0I4/\
gSI4Wx1DH2qodEBkPfTxX6PAo7+R64WFSaZy+cxloEHJVa/3oLK3lR4cUSTrXrdfYV5t0P/bC72a+\
mfTqnTJSmFpAWiBCY6O2CmUmQLOg7kW8vXxr7UqHdHfIuyOJFDi5znkus3yB71gxBLVRR/\
TodJWn5qpkPDlldA+\
aul9JxVefPKuvvGgHiOhcsXhBrMbbWjN0kQkxVllN5HoSxIR6d7W9OLJxR2jqI/\
CXTBLYsbN6Osj0tWZ+EjfGENmscu4uuM50Fng2IXwlNlpN0yJmj3OhQpUhGH5r1K+YC47IX+\
S1pFeYtvmr7XGDV8oIIKer+TjfpWAvNV+O2nbkOlYdBPyoHMCshe8QRyi5bRerlOphp1tC6iqk+\
U1L924OeZxu2ypP9jZHNkwlzK6mDtLJU9c0uKyBvFXixZiYpoU2KkEizglUK3J9rLvnurktAENynjj\
sgZ9+1IqSUlJkB37r2cLeT/\
74YhPN1MrYEeTp1bzUlhHJbBQVu23Oogi6TPdZaVMy5wSOqa8n62m0HZ2CRhxHzRG4EH0vt6DeJzqH\
mLLLf3c5vR4oX1OE/bOHlcBt8CotDsat5XYUvVctyzYIhyd+Iwfs8vaBRMBMMrzY/vP03adH++4//\
H5q4JdEpVUeeZUvOIHga7GwbL4ZR15qj98d7tT/6nR+AuGRGc+wKFwxz8s8bwM/\
WqqtTFBZz3t60ZkLneuyJ8Ch8t7rf8V7rqWsgMe/n3357g8rRDK9VB55UX63NpQ+9yuQR3Uay+\
wNCjvKCu7LIvKKRwnoopEZU1avz/SHR1/7JjBkYmdlpGjIw2bm3tl6F2JT/\
lEEVh7bviXazHc7782G67QhMxGP0GeXMSUijzdcAD+HMJTCW1abrzstUQny571imiXRp8+g+\
E1nn4ZUtPMmtqHw+\
ClEp899CiCY9QSzkeBuKsQqavMWMKr2nvm59XTNlgBpNYrCwtlFJdJ53w71XG3koK3/\
qryoN6sn1MOH14li3K/\
Ftf86aw9hIxK79qvnWS9U97i0VU6AftqjdBvBPcnjO8mv38jIEIsfbq83PWjKOt/L+\
2ngtq2aQjn5D8TSt1SJ39zJNz5MyLSohQAIyyme1S5IZvUyvA+Ir7DQFSL9MzfJTW+Z12qpyJ2V/\
6cOHwE3O4SCOlV13Ye6OlF2paM4XO5Rf8CSqTk0EXS565TLZFSFfZWiEpkGif+fJwS/\
cLhJkam4sERM5VQx1fKt+SCgBE9JT95wqhzvLEOWEP6hwKV29MWANWWZEY+\
fzTXASP9mDnFpMnuA2XaCOqc1PjM6x1+\
4yqhaUWZyeXnOcMkQtiXxWkoQmqN6oSTpHdmGPy7C3YcLjBdWSEGwyloBnBv+\
Qdzp1R1cxN2WzZphAcQTbhExasPdqgtmoL3JbYoe+hSnTCg98YX1vvC3ml/Dh0Zsqb6rYoKm8+KU/\
i70+76wNVhekfXykRmV7iLK+QoZtBMFgk3oJa6RN5rK5XWyCgtfDZTGEVLHztpGXzvObRYcg7oATt+\
69rOSjeY3wABN4RzSITZs2mJjLKwYF/9qyvf8j+qKzvqg118BvfRxhN2G+9+\
VwVVkTJ1EJE4pjVt6WVEHiqCsldq1IyYHMJSxnSpXsYzbaYqOP917r3hVZeSCWU5SOQ4AeYglfytto\
RFLmCAuQGpBpqzGVBABrvzFt5o5FXLjImaGJ3QZ4jXLGcgXe14kh+\
E120EXB65a4yUs41T3vaF1ixdsjFGyHCJpmz1lC+JxjH2bQBXKZWxQ40Plaxt6qaKYxbbDgow2/\
m9PtS9mrDYne6pBtth09XWVxiaab31iot+JudIZflqDbF0/\
cQF0VXoHhISavJIH69Wd9hHySM6tCQXEtAUfP46WaDhtEHof+dq2YwRbbVZNb4q/\
iZ7Pw8trxfqP5tvrn3dtvL1Xb4gyVspo8qxzMC3gsys9q1dUnr8Ssxb/\
UhRUVyEdeAcnwKHdCeZUGIuE1j8siSTd/\
lo1Z2ReW0Bfv1YOudCtQ9IkCamjVGINjD4fAGxF18rUED17cBWW2bFp8C15+\
krqwj4LRv30DqWoSB317CDnfDxc9VY3sbbETNVJaLpe5knRV6twCojbe4TOJnkwH6W9qqySeo20rWq\
XzN+zhZzA+e3npcGOklHxLl3ZdtZe5wzvdfnpKPTxZNnzkrKXbinIZ3lTD6yWGgm9KZ/NV/\
YKdv6rQ3OJGm6kBV80naKcZl6jil1eJS3EBk/th9XBbMr29VBjxuROTvpqI+hatISuLsc1m/\
uQIJzP2Dsgwqy/\
eeSLZqBxyddtNl4UKNd7ybZrg6ics3JMUzEngeht2aSvwloEP5npBSYadZr4EG1do6zTe9/\
bGfPIo3wYT/OzCDABwGhwGJdkV9s2pIQ4uldzxl4W79QWM+\
Td3o2oDwrhwiuuDAdAjAJwTjJxK7JAbbd8Me/\
D6uFIKAiuw2MaAxsRun3qI7BfJi9rfjKWRg0YyDvfvoGEF/\
BS6eYzchSEYLiwyK6YT1bt8FOBzKWNf0c4rdaTWvICE6QP20rtntObA/mN+\
EPyShxE3dmo1XwK6GwHwMWvkPTl0B5NKrqAr0n/\
ZhZs7r9LEmjyaTNWzECS3Bw3AMx9fAPIrKnazbTmcMHzq1gibXPqdrWWS2qrFIeSqakd/\
DhE5pHcQVfMJN7k2s4g5EE/q8SY3ybVHZgMgRV4PyrO0onKwFiCssQ/cLqgnr+\
Pxv4WkfmNocBMDPsyZ9/\
vUI6O80RkITgYY79vJ7TeGb1lrMvlVEI49MWb0kxzSH7BMJFZH9mTRiPa9V/\
LOyMW8llR9ziTBLT7CjXtGwsA2z1kv7sr+r9t9sPKqL+\
iNT29B1grgH5t4cilBQiINNBpKulkieevbTZd31Izgtvb4U8KCla/tw0NXW+9MdL9mwd18JRu+\
MMHxIzPzufJ1s6C1XcsfXbFsPDPNnYHzsezT7ng7bTUDNt7GUBFp/L7K9T+\
49IdRiQM1fSo1xDkaQMjKPFz1LtCy4CdGZgvKYDIKa5eszI6r0FCrOzdlWSxs7NiaP9ML0Hxup1ZYr\
Aea04pVU1F3ZfvVfBEQAixc01+Rge81c7kDUuRsChWSMxDrmKqHnpwrBy+cf6pXSjJZ2p1ZvHaC/\
bHvgCpW2F1l98EC2+w/sbHv1eavN+/9EmGoEo8J1fe+\
TaETGrgAl0VKRO9AjbDx1lgM6SLzBEAiNuGoAz25UzYW3jSa0kaEmlSWNhXrcdSSd1KluUzzlZpL0N\
fMOd9oQgiJJvs6UVzjpj/\
WDgXV6QYoX1JTZ4s09ggt0pvW4900qyHzy7AiXRd3EOpidkR5OaRMjYDhboNpwpZpLAZoiBc2Hk4Qo\
lSVcuYUulFUqLG/g96yTOS5uT6Vi6KbWm+NlMByRVAsNEm/EuZknIHQjLbj5H6JbM3Ey2Wp/\
p0qIMyp1xYHyxtkmYMRn7/5BOwti5gz1RiRfW0vQunINPlkBQwqOoWBZfj9h4+\
3bXK02VRBxvYl0qvKfkSJjttsrftLMiFjKhWu7tQMbwJqj7ZPlQn4uLp4CbKHP7g5Jdn8vEB9WU1Rp\
wmeYzJEmXfI0eSMInitLgrztUPmNJi+E/\
2B35q25ZSl6dE5UShyP3iVe17etXTAsrU5tchpdqAeuxxn9QWFz+\
omEqTnOyT1AitfgV1wYzV74jOY+BARKKXd/ovYQElxZlJOwyTQE1ViksAka/\
ueOhNy7RrgY9dfDil3IC5sOc3qtFVdN7L8xVVkYZBW+cd3v3/0ov2/v/39/buP79992Pzjp3e/avX+\
r1sr33/86d373ze//P3Xv/3+7ufyhx8//Pb7+1//5q6BUHwOj1rAUcX34vftEU41w+\
ONsU4CDVlHMF7NB+72PHcDeTtchlFXOpjLHxwGuNXOyL9wQsU4NyPgX5l7wuMCIsMQ+\
sgLamfiTLbvhU7XbW5G87bkusMNSu9LIafqHmGrSuqrmJT0T2/\
ewId7uYAnvINkFvAVTLso9teDB02W6FF+brUSob39QA197k+f2fL41F+pOuxAA6DgEbgwMfKEgAD1+\
OtNdl08ctcqHlKZhWqTkGDhniSTZIKY9uAlxMsmgRqUrQ0g9uMiftqdbiySQTYa9ZVLe9raOTgPcgs\
yX/Bc7Ol1m+xBalDf3Supi51cesFfUm8akN4IAVT5kgGqgVzHoa7FPGppZca+\
dclL3pw82PKYMnmicZKZKCmJhvKFHC5t+\
JF658lkVXPsiDrY1zeBtvC4lBmrNNaURKFRfeptuFS7apvYbuE3Xb3kF1moRFa+\
1MzxHUhsXN57eHVrsG0vlrKZQrV1JmojL/83cYAumw/XbvpPEZ0hk0DNbsu6GQ4xZGnYhdp/\
acfIaZn7VenVfEXaRiEeLsIaRsCFX+RzliCLGDeRSiJZhO418W+RWKqozVE+GW4tc04WoNLn+\
qaYTyjirNAHLiXGl5QK2kXIVhB797QTaCZJFYNLecVgZjtZMRxbZ0KZXEl3eYfFvtntmsdWIeQzOqB\
l4fdZxVKH9igFzlA7SKAt1vP04HseSRMd6ImKIcP6aOpDiSlqHhHdmS7tkhmkPARVV9mzTuo4Lc7qc\
lZZvEivja3r2AxO52iUhtGpj39FcoQ5rooolpRM7ZASteuQy1xl8cYuobIfJMGv8esKJm2N7b3S7UE\
unmBA1dEwR1i6d0FvvJiKoDxtxYW3t+\
OVz4JDdU9U4NuGyAelgUpTrWlKy1G00lWGTpdF8PGyNOmsTQLYel8iADncc6+\
8YcRLiErLW5BF5YacJTWP9Q4xpVYVJZk1JHMHGJxamr78D1YUYXPzy0FYhlUdOKIsV8YMRhSEAxpa7\
e8tyi8igPC1quzs/qlXgZfun4U5uhxKzYmjniNP2lN/z/rYy4lsNV+OwlRHjYmbXu9XkfG8CXPjU+\
juPSMPTMGeEyCZqDmSnED/ojHdSsfqatFHLBXTcS/TCILY+BTSfC/8GEjY5AaFNi2XgYYkzIF/\
nw13vYBfoGOuLoOQVMwWnNUjLq4fYpkJprGm1vC9jkuYZXB+VeSRRCvlMhUQsaaKx1P/\
LJcJkwefGxL/dr1qsXfQOcFIlqyOW3MKS/\
xvREEMJkApKiZYctjyaJUPecTbco8KdgNBddm1urhsClfqftwLfm/KpW3/\
OD1BZdUXRRnGy3rdX1oYtwCGmuUFi03tIrKp1i83QKuZwTUGSEnaG6ojdnEjoLIBMb+fBTaXh6e+\
Xh9xdbAXmCkcNFQeIanX8dp/IkudSpZ/tT+V9iyFG5UvW998iD+\
mynwYXJhmXbEO8IE0wxfNPKLea5nJlfTXwiKLwG4wQ2qC3nBOCklgH0Szk+SealjEk9FDoIK/\
TkmlXhUW1glXKsjjrJoza+z2TTB71Baw5G2dRn3qR85lN0naiy/QW/\
CaW2Vd9Cw8hjpHJnFRcxQqiE7+pgbesf8puHaySWbpZrk/\
MGxKUfi5GY7eo3FuBH8E83Nv0RMyMj2KPO5mijDjbvWvg31E+\
uvlCWKZZv4gZKeQE1eO8dQJNbZ2c2jGysTtx/ZLa0gzMt3rvZ+pdn+\
Cf1K1c5XjOEwgszyRObBiqli0ennKLwlfBRm5UAUG7+nlrhl7v0KRhqw+hB84wn9AovnV5pdiDa+\
3U1J6Un1tvZPkpEcY5fjErVFAfWV6DNGzzSlpKatrzSaVVceZAeBSE1BbRwnqtpDgITMMlYF2+\
4W2tI0P5lop9Z4VTqsqT5vf3v3+f2l7197GsSxL9K+oGheoKkAO1LOnJ/\
2hERUZmek78UhkRHVOf6Qk2maHJLpJyU7Xr79nr7Vfh6QcWQ3cwWCmMixR5OE5+7n2Wt+\
9ffP53X8GVezY80IoattO3XVcDiETEG9ETClPBNKip1zrsBpBlAP5IGXnd8X8lzNYTNU/\
yiMKi5TxB2FJrIfsqyGVVa+zgYKR1VxZI6zndFtqUi/aO8MpUrTOm/qVWpJO55s4mVwbIX+xSc/\
6mruKcISVS8bcZZeHWt7YVuB8daYlXRxP7I5BbLysYSgSkdQ1voU31CteO0owOqhN03Rgmwh1HUYpa\
N1hqS2KwwtpqRzcHROJXs30+vm+\
ndhvWY00xG9ZDxeVXsUDaxZW0OnedRvjGO4cvZhYmcTXnXpBAcAMuXBUvV4yw0hTiIyRdlDEdbvMyH\
YrBPibZtzKdCnfnFIZGn6Jhfjy72bcGzPvWADnY62EltWo6sTv6Ws+Od/\
G3BF7zZvQt1aVB6UCYdGS6LFDUTvFlkvTr1mx7+\
SjrP5ttaTFlDnd23Tv47IvP17GSWbpnuxuLny1WX178+nzzYc3n6Pbh90DoGE3zhBeF5n5ps+\
kSxafk8phFAurYQP96qvVf7aLJjXelQmpCjPJqeYScopJGJh2sFuyDcD7MjmR1t1tTZKzaSv2Usat7\
a5yaCrRVo2sVPhwHIZLDBIllN8/3/fbL+\
u5ZnWFCDiRbJ4PPBGLeBVs4LArkrZJ9avZPgf6CyhSIZ0FFJqYuJDmtuNGv6Y0jDz5S6TRecnqmZJT\
SRO22941sNQTrauihQ2rOffN4hx4Q++m7zbZuh/\
auZ1lMFBxpbIMLXeFNg4L6izFTrof2gqjoY3tjSiuhRZhJ7QUZmQW6SndWRlrAbxUfyzuZZ8gXrNOB\
QP9IOQVIEr3WN0ilg50lSbSPibGyjytUq2vPEIIrtztSzp97MfG+\
8RGKuBCR0I213sxDg4zzimCjZnkEhru0ze08K4/\
vIobsJbzpQyxv42ozzZZVpY3zKXn4yulac2tUmShnZgRVVD0sbnruPk54cNtqOca0iM5Xfl7POUyOR\
h4SKN4bw/Qhfd2BRa9Vc5yRgN10yZOHY8WcdOSxmqaC/icYMgcH2oc2mPKjRPboRed/\
LgtFZ7RIZafssqGzmaTBcbHh9QnDi1LYK2RK2yXlB8ulnziVYxREagrvZl88MYaAybFrhEyjJlVXC6\
8LJ2jNMsGK0ByFIVAEVxKmAzxnmJMhDS3ooyYd1VTpHzc1RnrV+\
7JK0hplr7W3unRRxhULw0y8pVvofzzEkYyr8kCEVa7rvPulzmpq+gqaQjOh/\
D5UzPOOi1uNdsSaEpYwNO5tWL+BVG6RZi+OXCE2wukjTogj4a79tk/rd58fP/j65+kD3/\
z4du3P74t/88HyZO8I+\
89fKmML0DPi5cc7SBNlIzDtqcJl8oC6nJesI8uUX8QCCgNWaVLYPDIpGtBJ091JNYfnwg4F3Vx6uyI\
/TAx6X8CDMBkGdVxVdt8Ik0bBx1TNWqtWUMmOKjZMlNQ2F9J8ujOZnHRkjKrf3zuQPNCgtVkkUGOTX\
D1BNF2wuyWa27FfccS36zG+wajMszZt+\
dRybRKtKRS9YkZdzO0j8ZKPy3p51XvHJqTm0oJ3K0Pypgd58HZgREMOcw5q50B0aCpgXlx9innECj0\
bBgJSoXtEWl247y8Uy7i6Q0yVLaQlsAd4J5czMXaj6M78FtUCZ0XTSlwl266giJeEAy8sDCMUfDUix\
KA11FGko5dFBEWSrzRbONvTGnymxI3Kd4/\
3pfu2RztTsdiQPnbUuBrCRbYuGJfKtHmW3CAa5wD2uAeRawYIcR5ZZHTOHb9Xo67uGvshqG1OEdbEa\
b+6Gocc2meNt9XasN+tbHnPy1HoUTB980DyplseFL+9phZR6SaqX/\
NS5EvRexBPOKSQ1UpE63wAxD0nZFg6Px5vmQzzLIDOdb7pTb96nduInP1I8PAT9aDMDS9f/\
n3qb4pLMcaUdJa6eyrY7I8iysBl3EW6oK4YoeOqUsrGF0363UCXCn1sLyKjDlNhYzIVYVHcpD3qtnt\
DPUmS8i1i9CZLFnbCkvL/\
WFNv8WzlOhaIoVIqgQEmy0ZIGwxudWhGV2FUo6EnZz5eeFuJDw37UbFPxjrFUjQ0NBrkQOTC+\
mo8uucbtpY/Ypop2HoN/0Ak/BSXGZ8g0YU4exq1etbCK525/YFNbS5bEaevJ+\
jyJegwhvtqZ1tVtrHOjTF9Enffoi+TsWKIkZcbBtM+\
9HTjOBET7ZKgim0oKM1QKUdsTpUJkjTkIsOEnWiCRpHPcPv2l+2+zO5+OENiE9wN/\
f77AfZB7AEfTHETM3UGP/UU0ZoHarnrqwtxjeREFk5/\
p8f0PdfgXJ1NEaTBmHom4CyVrqABiSTTJxRZDfyXVROSu/wG3fISF3VzMzDj/08+\
ODPSUqSFXLiRVoxHBwDtzw3wFjhxGlaDXpGdH8m/\
KcKE56GCyWsAAQlcyo811Ok3uiqQj0NHyoJkvW8JNqglVXRENX+\
e0bQPIFiXQcXFUGcdRjy64uzM6rJfCea+\
Sp8VvobmbS4P24JjF6zNjRw8hkyxOD8PZPtwfQ3MNWj3bdwXdepNWBN/lUfKMToBGi/nZHMrPI/\
UVFEdt/s5dmtpHchZ7DKne0BDLFMdG7XHixqKpHiGqc7Xxa5rMjxukkM11Xb3I4t0gI5tK6hsJCrLo\
8UKnbE0CpJqEZq8GMSqym/Z0/sFXShMtRQMyPHKiUTo+\
NO5MJSIlbDvaQOJzZ7og2nd39tjZZgWuwMdovdWe1jp5XnviU8qaqjx2GHe6EAB1oIk/tjjydXEJ+\
Nk8h6nvW6znVBsiqgz1im3rhaBH/ENJDvW+DCpXXQYDGG1pJScZq4uUXRMNhFrRg/\
tNgIriZ5ceyfGWYt8vS5qpHZAChg3sFKJ/i/\
4mb1yOh7iRalZbDl4e9b1bPDr6PtcsB34YVkSkVe3ZPuztMUUkLYoIQyysQTxUf+3PSU+KXs/\
W8ZpOkwNMqZvjGH8xFZCXtPJgEtE15HUP94tuBn3GbiSJVVMdEtmdhEYJA37YVPx7asIfKmXMSYozm\
fRCWZ7V6JgKPFS0Y2SztlNhPEestnAUdS5JbX3rzHsyHoPitDIj7UHY3+\
zTe9Xd85Y3Al2wFOCemvoKz0OF9mNuVVuTmvNUeH4sbsntLozKwiVl0M5weAYesPAQVA1QZt++\
hF8Hhfu3DITiuAh3rVr1bvJeEpz9SOiTR0r4MFSJTtfdlgvRXsU5fLvIrjL92HgebMAo0FLUkTU9Qu\
+lwhnWg2SVfDeBOxnnlCSLp9o2pEADWgC21jrvvn6uNcv8quvVq96/sv6RirVMYigZXncjKv6ROlU/\
VIdh7MwM0cq05hGWtuVndOHQodvDkI0HOQLMwrHNZHSX05QHJExuVIGyeDk7urq1Fnjpq9UIHLGHtJ\
pHSgfdeyir5lBbfhjG954UeOJZTsttNWRbm9OxspPvVWMPIRhL0OBaebrybn2nl1W7aYYRGpGmmva6\
3PofI7sPY2WGZM71586W9rJxCkn35yqLSUNo6999wDnWRN2ZGfQM2oK5sQWBIFHrqr6vX4ja3TPpvA\
tV9I0myRDIRJcj/9SY/YiG29CXUe1nDxW9+\
WYPLHsj0l43x3LhsZFnatLIRUsTKaTpFHBcNjJm6bNUp8ZlrGH/\
1N5GjazZxJ7OQQ0jrf992eM8in0WtKFumSmMXolk6KrrJPpXAemH8y+E4SDOu/\
mBV2Ft1Lo9rqr0wqfkHqIv40HV151zxTP7FkPZc7HzVccl1jLJ3OgbWrWnTMWmIopGCMOs1KmEvPZt\
48ctUkSP+eZxpiWi8JFzaXqJ0Aibaku8mZ2uQrGfYSkY/siLUWluMR/IxOgFKshSumt5ykg/\
ylHRMewEsjKCfVtPBC5fHPj3a+Wn36+/v3r39Cn+vND69//Pz2pxLEVK2+iSZ5pmn1zcF3N+\
tJ52pF6N8Nde8xy/B4sxWG0OhDPlcY4G60QTvl1ptw+gXVkh9NOVBaNh3a2/N+\
yoc1KkHsI2b7h5UypKrvI3/\
5risHR4T2GK1KLCC9rTAFFDspS9CRRfkwupiCgEYWHmNR5vGr7Ar6sMuauDBkv0YTV7XrFmaHokRus\
oJKS79MMs9mbqVtZG36C6IBRjcyFWonzf1xlwKeaWXlq4J5tlopI7afSzJZJP3psq5v87Kq7wuivjf\
pZw1tUimWkGp5Iqk1KfX0nkPAx0xV1Wbt8li7/4lWQhfaQItM55UmQr7Ncm8Y8JzkSrPbe/\
GmLqojuCUzVamRDFcJzDHXmp3LAHoxIvFv1lu8VqA9BNUH+hum2tods1jj9E7In/\
2r78P2NfQPA52Xbq/mll/WVEKKOwCFPXkE19CV/\
sH2nigB8p0IQG2cmp8ZosOO0D8jAGR1aufcd09OgEQmv88U0eS3I9UCsg1w6IaC2EWW7YWn+\
JWqSV65P/jNTvIHlvzFV7OHEq5rPk5V8zzxXWXOtdtaAcmXk+\
szrz9zb6fxTejm9DmNYwdgnL2ftkqLFhmUlygKtX+\
KSALQhQeptvJ5mopmA5Buxm0ynnJ9dVX1o06G8tVojJ6vnsNMimJj9k+\
GRFoiVPFU2WO9RGryT1FJpfLXr//tOTlN9iPRK45FCF9an+\
SsrjXDsSw5YH9ybu2rCHaVFjGMP8bqxof+\
GJST2hmcaE2QQwJlojiaqAU5miA1WzB6Xg4nxpEq33pZCldY6ToigBYW54LYW7ZBC2wKub0RtAa2dt\
mXLpvLqyufbwoFAv8ap8UmWh1zsc1st66u9BXI9hjOx/WyVo8dnzRAOo+\
dLuHUtAar9eLUegE2ZOE6yqY36udR0ZL7k7c3y0jtbQLx4MQeLwT8dOQzUDToJ7JiA4d1jFnHmD0m3\
B2XYc8v5wWOI4vswMHRuvHwirWjklPIObFC7M91YjBQqUmhMNDGpjJlyBueMn/\
M6gQvY36N63ryWzMlpJiVievNiT0uTXNjn1lVCc3dCenAgoxyde5fAuIizp1n8ODq1M56jXoMZTVJ4\
e2NLG3FpdaJ7MkjX3S51tEVI4VpQKdMKXjic3zkc7OqXIL3RHuS+wmDbgPB8ZihgOfzvLqiTmI4+\
jV874XUWvPp1f9+tfr4AeJNN+91AO+m/IMKOn3/9uO7j9/fvHn9bvXT2zcff/\
rWK13NZjRrjHEjpQzKVQgv12PoYyfYM/1yKCSXDaC0fUvXuA5VQO4+\
vwIGzPfNg4qCdIdWtazKex4ywN+EnYsVlZy4UxAM/uV43jUscupVH/p+MLlncbwPzb5p++\
OpLwEx8B9aa2aOql/irXcn7y7dtf55sVJN/fGvL5ziNyS18e/717UAG+Qp+MUpRb19XGhyZ1/\
QcyQjRGURaUJvJUaSoATlUpmQPjWRPXa/BCkhqpvnQ8tBRy0gtmW94BjS/\
BBhXMXiipiW5IJCDEYqyjF29Ogtpnbn5+Wx35dfkEmy0WhhDwZ/\
efJYUbCtrL22XmNE2KKnwN7kTPPMDT3H51Eo25ukT7CtdUc+\
JwIy6fRZyX1f8iyDYcEp9JtH5nMeWwkSl0re7U6TxRG8taj64wJmDXzGh3Xw+bFZJ/\
LEyuHn4JFUaxFBhlYbr7SNNcIRYDiA3q1SZguIDslguV0X3AZydBeKX7lGIxuhpEGPHJVzstyoOUuM\
K2dcSsHOHaPRDDwRUumAUmiBoj+mFeAGVynGvVAqPaM7IutqIbC+V1NrVipU1ec+\
GbQw3Vm5jASoIbW4EJzr27E1AHjWB00BWdtY8+\
xexnAwyoQEpp0sjU376wqtFEi9dPaVIhTNas3ylUiH9i+\
1RnNkdhJgl1IGrkl3UM3jbMSDS8ZNpCC8LrltnO6TKYpR4hh6KQ86sO50wAjKwZr6OL0M4xOaFrYtD\
k/1rNz70EcoaxGc6JjpM4kl8HLI7aqnSDHwyaZDEnWGZZeJQsO4PbhAwkeThmm42bE6qGZhu+\
2Dr6ZaoqopCkDEyEo4RAI7hD6yg7FEDhPxe4srGZu9EwLnTs+\
4tdY0ZsXgJT3gurRZUoFA7gtkVAQ67FK1QiQGiGRD/Yc/\
KOAcmMujpY2txrdz58UV4cyleIbzAZSEsK1izubv999X3+M6z4lKzku3UhlC/KvWUA7z/\
jlZGzvXxeN0xwDAJ9x1VqUx4wtO5aGsBf5NnZFpJrODXbugA56/\
H3T8IROx7ZkRjDWJLxdU8bpeq0nzaWnxZLRs2LkLTSxcyEItUUPFd8OOPEFdHYJx8LgMp9nL56knc7\
2MXdgjrJd3gdO9KPdimhbU9GKv/\
fXmNAcmSnLx2Et9uRN1BW3Dc3pirbfy7c1P5GyobjOl5YcE9IPHfMLQcPFV+7FVvbindrIiaIKJC+\
OPLF67ciukHlmgRiVPcHfqB0eap3+\
b2kqS5nXKMz8jeFe6672Ko3FEM0Ndy07qycMLCnThWQXn64nYqG80Uziio48EsBeUoXLdWT7FQkjVh\
obX6rdfrvjJa6X2fEBSjCEtJTi9EFMmS4Emku6PdVp60gL5KMf+\
2RqcZKm1ZSfVmK5kdUsbcgrnyx1z8umYzEtbZWFlRAro2E4ZHst73nDyoyE4wovX5RA3WDUFx26LbU\
5/PaKWa7JqhgjoMBdxS4Ypa2ypaCypv7OMrJGBH4LmIJEQG3uH7Q4Dxt+\
SblkSW2HKkMkXMRN4LC5MEARRT069shQZQdYIOb2nBTKYTKqkrI9Ky+\
eQQ6UQyOBqzQ5MOcWqQY3rMKR3WyEAnvEYs/3ZjblfROwEFEM1dKvFUg388ubVqm+PDZWGKGRvvtw+\
WpPY0iBUGOUJfaTWTgEd40ZtHrph7XTXxz51bxQ3xQdnaJLPx9f37ME0V5NRgjGKPpNapQSFrP+\
JRsjL/B21Fxfq+thYS8UKfWQ8qAKBYg0UxqW2LKnW+\
auXEc7a8iXFBOXupGgbyhPqhWt5t0vUyE7QrlW989bV6cJWiGs+Ns4Ltu3vBF1AWx1hF2MzU65Q3J/\
tEtwZt4p1MHwkFTmsP61ub1/\
7tO0vmXXJwNB6NO12dHGF004PdWPFvQSD6jwsmMdHVq5HCOnnV4jewqE7U4U2bFRiQiOAUFtf8BQK7\
K+NZqNHQk0CNst1NJONbooOfSlmj21qp2Pu5nmuVTUY71a84HM8DF6kLJnrP5FxACcagy+\
kDZQNIYSELQmX9hJqC+IojZXIVZAZ3wHXyJpQkkhA/yV7/UR9LnujeKWqUmZ6MiwQubiM/\
Zk4KbgmhQ5iQZzANcoBA4TPHr0urns/JCFNnUyzqZ31pTT1xHVNZBAskM1RlbH0DjCAkL5aFl+\
plrB5FnOirFMy71QH4fx0xinxDOFYQ14PmPBcnGWunKYhVbItu/eXeYzmhQ9/d+\
P0ZtZIHiNu0zKiumJv5mO0iA1wQpz2z9MHPVAMmJQF1czt2IN8sdl+\
eWqgs6yxqUinlD2XQam05qjJnIhM40pRxlE4seDfvP5wIbPD0y4UmnJbRF+\
g5qh1A3fGMiL4n7Z7hBXHzajKsOVka+ed1X3jA084xxy8BkPh+aFXI4GE0ovG717/+\
OktqsU3798ukA9IFVW2hkzk03pJnVEP/5gySLSLxGqjbCD5nL4oQutZcHORgV67UFbTgSmWU+\
OREfs/NrTc67toMolkSjOPd9Af2XvTNuPnWtPmYwZMIKjVF2bHzEx7CS4l63XjLvdxUHkWejmE7DaW\
1OyUGAGPqLyegrEXJbgtBq6RW46n3G7YC8W4Vm+\
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\
HAAu4tiSNQCCTmAtl4egrUhgIJj6gFpJ+\
nMXl8E7jzHCMvcAaXAehjconR9RMHYT3bCoLteLlkjdVgWNkNplKRFGaMKX87o6S0Ja7urrL8IJc8Y\
WLXHSwkwGnFIMQ3VQ6ZlDluEnY2VXQOOl5/\
3n6JMCdfKp5VEzzpU0PYpt9vUTTqRjn3NQYD14bXzpmBl4wVmJ1zgUGWRQVVLbfjUJNkXE/9PAYpR+\
bu/uQpmdRAJWQvL+\
0hLcJjcyXsAY3AooKNqxsCILDvyt7cEQvMJMDiljv2lO5DTgCZ7FpjPsRLUnpH/\
YSa3u3Os8tiiaSUvm0bTWhZ45Vgm4p9UhCiJI+qTJ8k/YeylDDzrAGLH+2EbocGdQEYruVth1U/\
P5Tg8pGwF8yElXepAn4DZr1QZ6goN6xHhgWVj5ZNaiM9E9Ot8HaPzxl74N6smWzhv78CSZkstBp7nT\
FEXUDK+WIEodz6vBy2a1x17OXQb5NXQpVrV3Zfr/SzGLdUGLVUwTqUG7n2bwQOc+TKTnvopsYu/3p+\
QIlbfuXPf6A31LFiTT9lQEFl3sQ2sSIpqtNy1A8a6FUvZjTRYoQwYkLLev/5D2pKXy0HUQ/\
nzb5DzkPtXDM9DRaLTMLlDLwW4qeRXuZPf9ZLMsxBt01bZFqYQFmSQDikPDbYrRTd5XrvoZFTAoqxx\
ApY6z/+af0Hv+6z+W5Zf2/iGABba07HahdYwI3itqTb3R0wSgfFzo3XNNLqaOlck2i1S4lhjr2a/\
z705S9ipp9EsCcyrop3OkUxqBNbDjRKgxGpkUvHrrwRE/\
OhKLeyYyODIwZlRMFxEJaeJJJj7l4wB8dOka8l9JUSJWGhqFHiqU6mYcQz81RSiiv2yIN/JPsZ/\
Zef22aPmTAkW9IFUKeFanDWr7n05ZTlEAtRQvnbfaukjA6LiGZwxCzFgaDPJslSO0GGp5gZl2IAfqJ\
ExMXcsRmVSqX88/\
QYiOJdM1JWsjiuvhs8e9bRGwpLsPohp6QsAVGW0qBWUMOpiRmqD70oyn9bfs84QpxiAAvWjcDeUtsU\
H4O1W7vn9FEp2iMjna/RFoCSo7XVAzl61Bbamf/\
RjttmeFCOtbY9BX8CacCgW9Hcwjp2W1P1KX9RhW3nutcInQdGceYpPHwEeuH8kN68vFOAH1ai5wjWY\
Gsxy4twm64DWPIKbeu8uW/2XzIG/7Mv2LaNbrs/sq6FPzUXHSxwUi7805+\
yaa1TZrf8nEdNeXKnxJ2rRv501+rF/vhHtU8KU4T4htYOilOZ7ivTg+\
buk1WMDMFAMAIRGMC8KZtcKom6zqjH7a3EhGV11urbPUSKvRgBC/Yo+\
5dCYgspdcIupJqDHhKYID1rKJp4dk+bUZ4+\
hfrBV5FibGNxlBcxaDwn8sERRQaKCtvKB1gZB9q1m5GMZMEeKLsc2xnBchqTk00hfARC4mFDQSVF+\
3JsnyLYdbNipTlH/j9RZw2MnV4bZelbMS8sLzBWwaVJbWwVE8+1ZCS3A/\
dDgMGKRVQQjBtSSZJR8zqDqUuV7TeCej+2juSDpGIe6gZ4g5PRg0jcidZXfwznBwO1Rn/\
ZvK89K5fc+xAa7P41pVYaiM0yMAg73euAGyS/\
njXbolZ1LYCr2ll9sYIHCbcbtM37JzmyU1koeD0SXz61KkfW29039gLKDTxLJydukV0EYuoFH+\
AFZ2K2/AX2AKTMn8cupxUKIqtLyn88PV9J0K8Z5Y1uW8PeyT4YoLWDxh0O8i3UCrdiqNa6xpSUN5Iu\
/K7UVR9OKU6B729/YbuOVdxrK2Yee/\
3daQ0OgRgrBFyamtCpBAZdwiBtysn60ty5W5cuDdSjtG2zyHLpEhm1Ym/\
qGGjXDeMMgy6aNhYwLCG1/jUxfExAx+\
oZZgAuvroA3HVIU0V8AJcKfWLxMvVwpIZQgLUx7JXBAomYJF8SppbmGT1eaX7tzvtA7GORlMN81FGP\
4n4G4pFUuAMLyIZaE40xxdPZTJBzMleDQbKQ5H7Z6RKyCcPXNj90YvnryMmPnbBV6anznFO3OfsqFW\
MQEM9+3tDW813oLoMmfIeg6aWYLRw7rJp49j//4V/X//qvf1r/\
pTwCTsk1Zn2bZ1b2vDhTNoQQ6UVtJqdY7CxzZfWW7liacPkq3IAyEohdNxGjB+\
ppmc6EYjwiDYU7WZuZ4dI4+ph9xQUvtngUtEbWj9vyLMFDvy9bex/y0lTyI/\
hMyjkSsTomrs5MHeVp6D0gUrhQuLSqfY5IXi1IOXtxbds8qBuZZavfcHm0hVT8QImx7/\
QXDC0KWpt9hfEbA9K8xiTVU4cxopd/DxbgCqWVKF4qxI4eXjm+UL6Qn2sHi/\
gQUUjGWG2Qqjb5YkQYJW9e8FWlkqYZl2hfK8HppiV7On2OcmDHwBtyb+\
I4GgPo0qf6MFXmBJnWuHR3f8udYk0h3gX+tg5OTp7Zp37Ya8FiT5SyoQRO2HiaJD20/\
cOegaQIFyoyMeCnMjzUaN2XwK0Eaauo6iPgQdapgUaxx+NDxqsp073wt1easKxJi53sOW+Ex/\
oNGNczb3g5o/dtlL2lOlEu3p5t3JOtIMnaTgSOP+xFalpObVmX3W8Mzvbjx48/fXj76ZMg2j7+/\
afVj6/fvX778cNnn4J+8/HdO45IfxKzIjCir8wJB3VAepNyXC13dT27cmJpqrh7+\
C6bU0rxqt8xJBgYHt+KRO9OGF43LZv6FuFSRfuul/\
nkiRSSzRRqTqvYvMzVzOScpIcHp0Qk8TbHqBEDDRCRxheLbycBg8KM5TT4HzJXp253Ejj1J7GBoFVn\
2GYDdZPmuv4neoCxXeOtAwr6sO8Ho+I49jy/\
xLWEONUWLK6qnVtp3iCJlOfHkeabkV2Hbs9ZBAOowkVVXYMM61ATAjLX6qIgQzESn+\
7bvfJ0bySpZeS6K8aBVITlZzV65UxWe3syz7QpL64/\
VJVB7XWmxgCQcV5HF4xC0GArUcRk5pGzMwwDLXNShgFjgjgJEYm8EkDueNBUGmDWX2HrOrosMDtJfZ\
7WZ9PuqgfBmUSAWrF1oHEOvpDDRsEntpYT/KgcFx8VTdOU4mYEz5RHM/\
WHUZlea4TKCfW9FMi7qGHSGG5k6KuRnhd5jUImCe1gonGOOufH2DjaskIbK/+\
xAeD4kW0QJfpMQ59A/z42+2jZCxRJ+Yzkufe4ldz36054WLlPpuXPLA3urEpobRczn/\
4b0ISQPQajX/\
4HGZ9wYJR1m2PoCtYW8iVdkdkm5BxnA4pT3gECzDtjLwj0foxWh23rnCNg19vcFN71Dt2iWyCvFIOG\
ic69Yu0Ns8YmhGxri8jqeedynsZ+/xhtsmJ4i+nxGFM0t6+\
eKJt8UwuVSuh2G08ealtGJ2zqz6hp6s00QGEoYUjZVHx3xUfhN2DMKaXkFqGm4s6lnwS3Zw2q3Fb54\
RLlt6vfiTLj5uq2KeHLMzu0chxACzB0JVxqx99LfKQpJyGV4jg9ChD/TyLHym+\
PmExU0BfzGbIrCiKshwZf9MmYTFpCqN7gfSs6ikJi2zbHKUVbd7wvURnGN9oHPV9Vg4SQEj3c5fY+\
FWOwf167NAXYYLyCHNMLElPJPyEj9+toj/NkOAM/P9+wlq8288nog5zpRiYbfMXPY0yBpRl51AQt+\
oM96GXCU4y+fb87YXGQfIKu7ETuvWDW2yKT+3lB+\
FDWsB2h2JpxemnbVbcTAamsZ0Jy5AibFGol9tiD4IEV4pNmhuL5vfUJpz3B6Asrmibt8judsUdgCtp\
kT+r9THVFRJijuD65Bte6eKX+aLMTSg9d97b8xrHhiNSyDWfumQcbmPVXRCY5y1ozFA9b85jID7AK/\
rrkJcXUYSqbQ5YEWR8O9g196HVsbG2Hmpp9jG6eGJJ5y0rv4JPM67AnVq5tsKn3jfheNWObgYBLRQu\
dhrPULKRfVJy4EVUC+NWwy3QKIg8F1a2R3BSb4/M2D7C+\
6F3LSGyingLdIOl9v84uBbfZLDhOBi7yH3asZN3EIlYEfvZ+\
TIdJyCEeW1PG2jdbGYaWWo6VgxNxHreNfB61neHc5i+Ij1veR8gRtWwtUEc/\
E33VqMlkPAZvqKb4OysGTKb4TejexGMY2iY3PeExYc5HEehjplJrAWoNzawkyz2r+\
zOksuGA3XSuUg4AECPm333AQWVXFECsv2xXLZs2yu1PA1iLAMln0G57QqG7J0GLJ6ZRlfcyCoEgCGC\
wmUn1FFbuo5jH8lbOJ2A0/8bqsrzIaVMaDynn+ifRQBi299KW+60q6fkoyk/\
nYqAQCBts5k4qDCfigAcdABP0AEB7zzVLYJ5UiJW5DmWV8u3KXKxtSDLhNx1q5141aWiOX7q9EDmnk\
Z0S1KBGY9JsQFBwuugXUDSrikmoDdAk8jyKUxC6ArpUpnYoDmjyDA9ibdDkHWz0JUlgE/\
yFTKQR6BCKgNJjwqAylms9G+7wIYxqTMCmGMuPn/\
fFItRTjGs8YmAz5xhTwWgy2CPQzeZg7GlBaoECG9ROpc+sqVVgZJEAK8D79hLcLL/+\
tBNrhB8LZCAQs00MaSrm0fYMoa/d6hs3FlTlHwFopWb+\
FJjx0ERp4OBMZIQdL95PxLMYoCWB5MLFyx6Tlvz9c0qVATHC3JxBlFyw3JM2D70EhwZCcQo6jRHo4V\
CjA/VI9byJobGMY7rMNUTVz/\
tW8i4VnUHqAT6sicFNpsrArsVqmoCegxaUk9zG8mHGMgDUpfJoyGZ1JWO2kDcndepPJW7YtrrToKio\
6LCDNjdgGAkZh7SPfC4VmyNeZx9dLcdReytzlJjnLWb57WIozGvPGkE8FTN5ko3r+b6ikUNfiB/\
zHmuVUAfVlzT/\
G53tYhNJhyTSK7DY9rWPnmjtUApsPvSkoxoa2Ts1r5kCnTS5bUoiuI6QwfM24cEv63PqQHBajF//\
4NOcxz5l1Z4WBQy2sjn5h7Su4m3eXIQhF6qhHUq0ILNuOu8ytLc2I40LgAlI/\
OP9cxrAUdZYdvXM8mtDGDCd8m/V219D98DXPm1tJejcqkClL4+F3FtGDm50kNb4tIF6sQdLAfVE+\
9Bec1dNdmtPwmMNrz5MentRW49ZPHzpcN7tANYWPKFIm7TuYMa2mZEnrb2DuA7daNhpzSUJDSl5rP+\
Db9tppSpPakm70yi2NLzYoPhzEsCHYfglbFEmKJEpsLeWYXnpdPkc4gsthp+\
1ER6mi0CVusFWv4bNDNoQ+\
FqAPoTpa99xACy2CHEPdc9d7paAHlZz5BRgC1d3rDNoHEZEO9wtDAqMjAnKoquWz3JfqRhCdM/\
lDmOKg4cuwXTHet8R6qw+uaPgn0zKX2sSsFaSNCbnQFnWeOUuaLqk//\
Nf591dJdYrZxi88fja21de5lanXb+\
JVLBittXWVireBMXhVUPHVhhDMVW3T0miyOpkE0fK8xGGygLtRONgvY+\
jFRKkW7merVzeKaqAuzxLA4A6Bd6FBhPPaFKlroJs8z093naxS8pBljmmR9a+iVrQmRDFJ+\
iXjjrJtmBntKy7aZgYZ6Efqw7q1De4Ae12YU5qfkqGid5nbCYspFFO5YYshquc9lkrFjPX0kXHyi0O\
+6zrTaoQRSFykPOkcTMKZWBbZ4vgwvwH61l6qxZq4P43xkvdVgeOq1mOFhqLWi9AEPGsDKgThJ9c/\
o//9pe/rq25iBnqNrjLBkWM+eQ5a2ku9sAkn7upBEHEctvwOIvQ+A9Oj9gwaa9UEL3Gvww3U+\
1ZQkYTnNFQWtVlVjaR+QR6w9jOC8tww/\
n73S55Birq6rrPy3ZWaI0IZMHXRtiPRShp7pdn3TJpiwCQWwFCRioaofEt1cEYWwAKipkTmW+\
Qi3BMOQcTKXZqhEdCFiEERKMpootBMDPadckIp96+H4g7EuQkMqYEGZQAbV+\
FzkD6nqQYVr7r6HrMVTbcvRN8QHBtwG1egBqgTxxEs8xLq88SymcsGWmOpVaPyxHQ5BiprUkx65IPy\
q/RHdnsmMdBsDQRIzZpukZfRCKGiA3K124T8qaCNreC8pJTP7Hc2hepbZsFzFZvuZN1Ss0Q5TY4Gbk\
aZ596dggX0SET61131oJbaeQEciO59Ocfbt78nwi1tgtMcjM4ZusPgoJHNoQnq3bUshVivYutw5gHK\
LP4O5z/JcXZw0N7rKvY6BWBazW9k7bsPx0K6zmugYacMvYIbyxoFtbREEplDnjd/\
DhBXqVZrygDPrdJIqUKmCyyTLEi4MNjHSI2W+\
tsnccLtUOCFJm4HltEb0PH5MRF63MWKxayJIF7AhlREdoZg5pXi1PNXDzI2qBZz1b+YgNHc3r4aU/\
rjUDuIVhMyv847yGeO62rszrrIddklKsZUDtgI1cplpJbADW3oRlMtfcJpTVpi1CVRfAu4he+\
nR1K3wDcI0OMFTp2Rf+\
72f1Xz8S8ZLPyaLk65wEJAkFRzRsdHSDghJMnZYCYANBgkcL11RVYgSrW7cmux2EUuaOOnWfNHuU3D\
DCXPNnthIsYhs9op8T0uMsk+\
A6LwcrmnNe50XLepcL1S8CybPKYWViMjJXG8iSaKvwRtGuGXcBCrn4X2FINT7xlZbBgMA+\
wWbi1cdecqSh8pCRxgAZL7iuV34d239z1v+eb2mY/\
svgElhrbQgksVdZQWbLYM2mfgEvIL6CPfqJ9T989y74sebutGo19etl5eEtN5xXM2k793aLNfbX60D\
gho5oM0d0V3V+Dc9+dBVta8+h7CdL6L9Sekvwxs4kh4k4KgOVQW4blvYl6jGhU9V8Hh5ekPk/\
bzDbcGvaoxWiFwqHXOqCmOZenTgrGJmMj694Mv71ErrlQpYOAHgQhA0pAWXUjENogW16jevPkPO7YG\
fICOps8qSinYz/kYnHNWlr1YBvyEQqEX978wSrA9u/\
yCzpRTqyIGOYKL4KzkQnwdLAcSBoTSKpUIeQbJRIxbAhEt2tTJ5dLa1VWeF0VTIZG5yieLSPCgRFbr\
IGShJV6mCZUA/fQ1xDs3PmE8pqjcpV6McwFUZVo7Zx8+\
Bp3dMNRnzZrwYc4AvsAgV3rNK9v0ptSOmIk2ccvE3XF6kUhBsDb4l7jb2+\
eIeLXloMhK240ixRrwLBs9D7L7T055J/nRIKh+\
Tm5vGqyzASAJIrLGsGpfB4GlO1Grck6f2kwMhLFWg15sB9Qy8bTjCr/\
KnLd5okxmxxcCPhWQEJKEY9OI+CULif2FQ7MmpTs0YUk/jb0R6IDf+\
57ABBdlpQvLpkKm156gZFMmtWgsOLYLsis6jB36SK1uofOOR3R5UNM6vbBKN27UygBCuTKlApBOXjQ\
lrIYHpCzpiQ309jUTdbGlz6PoijbFVtAu93ei/W1NXMA/dCM9/YFw1eILHO0pJCp8mhEY60KPZT1/\
VNPBxENXcx8hgqHAQ4JHrPsg9YFfkdnF3LErHlsfdMG68bNTwmVuxMPocCgD62BJNUjo7Iq0NSW1Fc\
EfuZQT+GWaMNNj8LQpiq89F+FKXxwhcXoG5wMFzE3kKskNKG/pVyoA4XT9fes2MekY/\
usyB1tPRgwrL8NYTMvTWqtmO+wMXiF16gO3Z3uZI0wqF2iNXKdl2XDr5bp+uqum+wzjc0cHN+N/\
oZ6lgk8HOsOvKsY6pfwfpBKP6nxZGyXMIxp+\
14r4TWQzRTvEw17I9OEDvBOEA0jY6r672x64cM9zSZf1nXVhUwlCrxE906hhBOr7aVlb9SpgeeV4aI\
ayudG04+Zh8glV/RAJqLqrDJ5V66tupTkTXB7UpezEhiA0ABKn9h+0pGgjMRWjlldMv19Fisy/\
XzoaTGoPyi3LMYyojFcno5ZNclsx8CE417kBwUf12zO4Fq2yx3FGW56Db+ldA/\
6Fw0sxG6jLWkDzyOxb6S30Fu2TQQMmbF9xeiytuJ8VCi67YunpjeC7UhPwm6kAsP3+\
wZ8nNZG1TGsUANtfMxDHCkbnrOeKI+\
gDaos3G7doY8SWm9QXI5rnVrj43XvfWuqRf7hxBow1TkD3E0drBcoJGwQ63ZXPapPi2u4ZyG8zRSqp\
dC9O9m6S9O7JYT78Obd37+9+fD96ruPnz7diDLc+\
9c3Hz6p70dhsT9WePRcRuHQpVj49H6U7F4r0D5bY+D2qZ3RDu+\
09SY1uVm5dXL56QKhnaHFrCisZGagddw9NAIEDY/2grCF+\
EzvxBmISbndy0kZ78keYrNasICIlw26QViIbRoIIrH+\
NoEamTn0B4Pkgo1FBPILpQN22kdWw2JRUkOGMNyvPr5n21APSLNQk3XEZRcQDmvnWXbod9Wkr4Z362\
GI5pTIzXCUBKX2lFB/lSXIWjAyUrWwvAo6UiOq9XuSFgvk0wFbtdUfW+\
X1ckm7xG4xbz4uRammhYbYTqHuqRigWDAUTBXi0VxY6DXOgTApSo6fmEFU1ExwoUrEbtojo5K9eFM1\
RXx28bJDMDettidpNt6kZrTEao3HQ9FF8STsyRQ6/ifpavJsaTZs0aAsiwbUnXN+\
G4PzuVLfHVwdj32PRJUFXBFrzoGZslta0griKLjeCXsWmKC3brLtyURpWmmq1dIfqJ/\
HYEGYyhSo4tjToPHMK7yKUEBmwqjH8m4utVS30MrbzxrQ3qTSY13Vt67tbHmvQ63gQ1nDX+C/\
dOBHbj3BhKzw/\
Vy9oFY1P6aFkKVlgKGzgdZl7Is2pjUDPUtNXZvUOkbqAUTuR7o4FTlwlKBn0gpPtWHXZeiOXyJbWYL\
YgXfOwHXW0yt/K3ZlrFA8qm+B9bTWoN+\
INfYZjUqTb73KcsLFUpWjyAelLaiwrtOVso25tBgrKtfRLjeM6fjzZddvn1XMImEHlYCP3MKuBiPnd\
WFSUdxenJIK8nMemUQqJLW/nfqMtQ4BuLvqBjUtUtSEZWF7BkGDzl1DZdfbn3Oadc4cpwDB6Jgy+\
wrjI0fGguozleABoI3mzUrFezJapioVsAIxQlyC2+m+NUBGNT+mAOX+\
1nOicIUXAaWedrKohvdYTTdpYBns4w5F9Xd6cEW/4fyAHAW1XA1UbcxiTjvI6ufSlkPlP+\
5eJR2XrCkLDeSrW4yOmNTBigKo1B1UY5uSKfeKOAdGFI/tY0qxtkqZ/\
3yJqLIuWSrqgbyTr2SO49kDUWtubszN+NtiSiEp3QL/\
k1OIWiXeUCZR03mZPNRmmmv2oyjHpglDteKRA8/ZNo892R7uyncam4KUoR+xK0+\
h5ZZh5ksCzBU16sbkaEjok9DA72N8cr56SLFxnG3XN1UFOqKdCC+\
V4GYdvAOJi31or9LEUEQkdvmFMOTqCkiKYEb3MQNqUZSjhek7ITnq+y8kuDRoNFYqx/\
Bza3BzTERoo7tuHE00DjOtZXd0HA78OFA9Q4sZbxQL0OzQ9jX5c7TcX772BMoAYJXJcjJDcKO1NklX\
qwGCJVvh7BNpEAFg4gxB0r2y9oIle9dtC7Ya+uQ+i9gZUPcb+\
Mn16n35XWE34HiX3Oi3zdPY24xfPeiF1/nHvxixCV0M5jgem9WnbX/\
CuAgkARVlNPT96Wqj9TKjcAMrKqg5vGm6VtqzCM1FDfv5im2BaXri7Cw+qVoFNpXCs+H3WBs2yY+\
Hyaa/XLo7ES2iQHd2peqIqT/Nk+AI6/IL9TKSJ1+Kgyh7T//T1VeVHL1sn3Gdr8/\
qwxxH7hQdqvXjTRrlW9LQmN3hADqlck8OmC0+1cbg7PcwuWdgbm8keVTjHSV1F2g7ViJMntRU/\
HJ90lq9rIGm9bCNeM4gh9dlU/Ug8u2kQyev2qti+/\
1VzJGhwJQZh1QbB6RtpmV414OpZjhTQE5bX722EO/OEmvmzNg7itdmJ+\
SnkN0rHJ7DFdxsEqUnnVUDxZl0yMGmFWTVrbxrMmAJiulCYb5cJuR3a9rdrfQQSkhNfdExflGl97yH\
yazBcu+j0rYdKul2zndceK8sAtDHBcSYXUj0fFy4/UmZCSl7YZozKm2SmJTTLhxNBeoTGiGyV/+\
GdX+juWKlsMuYSSjKy8Z9vdaPpCnmyZD/tescvub58UHtRX1K/eXUsRkpx4du0/\
GLNepxA1Z8mYiKXVI+BObY+b+SHMVEYM2GfMlqirfLCsFmctO+\
MRnRaRu4mzKYNA6XS0AbnI7XqT5z3xq9fhL7LTvRV4TM3Sf9CiZPCQGeYLReXuCTDkiSsmSmrBnG76\
nVX+o3YAhj36PS1yPaZPT+yZIQZWxYRknynTqgqVwH/\
sz399TqT7e7gH1W8JA4IFmak4LdSZFTholbRX7edw/\
8Ef1whdLZUHG23ethxenGgoGXb5zttVTw7dlSAdW46oKMOiNJC1ppD5J1fNLSXoXudWsaKpW+\
HwzKrl+Z/p2y2Imimrzu26jfKHXNQefjw+\
nLEMtLDUYFgJSNKqAFBD1SLrz3e7RGy6i4nEOaF04c8EEJ8e1vPw6bYpyeo0E4rpx7G0usZSy18c4E\
25HfRSExqqPTol2JXnxiP9dcj66k8nyyi86Kh5BLvJqJ/phObwmo7hV2O0TgmQiI+nj/\
4lPyHOTCks7A6JUW0FJV1f2vAqnORyH4H7VZbbbP0AP4Z3+\
xDPTl5Ug1FfvCrJtCgswvMpLnqLeBha0pa1acA4RlIWT3xjx3Gj0GY6nuRBsCuMkVdUQCILxS25GAK\
CW4AJHJx2BYrqigpVyIdiqRlt9YHMxGBTDJe9gWjkw3mNV5aO7EzoHTcc/Nxr16MhazfV9ORC/\
vC957qg2mGcCaPQg7jEo+L2XKgP+Xg5nwkEObqgJO7il05/tEFYBIEv+YBcYJ9RofoMGnK+\
5TLKqh2g1ZU3hUza8IplkEMdvLWcNBoe3G0VYFqkaB8RpYW29OdManhKrEvUlFOcOUtulrLRcLKGxw\
3cJUlvrSuXDDfSmgkp0kgIoAoaYJSos+MYlJwMYkHePS9kM1kj4h7Hovx2rS9+IoANH2Q+\
jvzuvTBFZw4xkjq8RsaVAWSYvI4Z14KUNXSt1M/tG6FMnajX26+hisWzwX9b0anYHnBrMbQEl+\
dhNiEsQhta68WSPDSVBxcaaZzelqItifiHWQASyI3Pdg6653OZz6/\
uTV9p4w5tq1SS5BABAcs9EcSyhgRUffkoK6JATeQPzUHMCmWdpyy5Fv8nrFj19koDMq8UmfaV1DbcL\
vYlQZ3TjLh73HlGJzBBsWd16MLKMMr+\
LJGpJP8nQTAoQ3jjvJYslGY8cB2VA9SYLarOsyw6uI9RKxgFJoCY7Kxmc281AGSCl4A0/\
CRSSIZDki8MtHgCS0lwmqF7uQM9ndbEJyd41wY10t3tru3rSIi1EaEasEHZyCCaZd+\
sQw7iAX6sNqEcLw1rbt8FIShjoCrU2xsCrT1kiOKsW5tn1YU9JcE6ldfzca53Ulie5cPuOplwadkhN\
aoN1sSrh51x2BFpPRZ0JjcH7WjpRQIAqkP9WyKOzECyAOdJ/Qh6TpQQYem2f3IzkYnIfEHu8Xr+\
XQJK+zNuJ9R5fQc+\
dfXxPFaD8Ca1WxolhIRsEbIyKtokREKKrWAdKo0L3PsYfz5mVHkYVWfdfRU19wfTwXIKPypORC1q6i\
3OeQxMowTt/8e+9RSJxCrBb98/cZrM6BYo8RbQQQAWRMxUU/\
0jFZOpGGl8Q4xcYvRyeBTYVW884O8RIt0IeR5UR4SWN00PcHZFGqum8QKkk4eg9hDvG+\
iazCNVXBFu2KugZv0MmHuA0v43ierru3rp+8ZBGm2QWbkZwj8/K87Yj1xMO2JPQbVfBPIoh+\
88hk79bDHaZBiINzIY4QpjMYaGz+\
wYZotfK6sj79xiaNpLlKQZbzwZQhYtxBiXqNTltwhofmjpTanfC6nYak/fC+\
EdrY1zGdAnWGW5VkgA0QwdiAoHm6Tovwpnnw6dmKMG8dbAuqryYfI8+RZ6uDlj0EcTv6Wi0HGlO+\
EVW73Fnw/+xgVmutch/0Ib379yMQQ5/kdGb8EQbUIKjTyMHiFUWm8/t+\
VzKSq9dl0XJ4717emSAdZTRdTg0CJJjyQ0jIrMptpfzJ+K9YfiCkSUCbSSzMDeVob/\
0g7IEnHXWPSKxVccbeiHBjHduhnVCrXt4IoWFjfMTkrglIaJAwEwjBJjd89KhCQ3EKpoVyxDgWeKQX\
jAYM6/8nCmVAH90GbVzvgjXW1mVtBdCpYuuktfPSA+\
7wNxWyhES4F7Sf0du5QFxoI3pprRw8HuwsxioYdZ7gWFBdIs98J5v8qQ3QuYVzs5c2YfkUc5VrLTO+\
y0gSekVFRm7grZZjI85c2o5MLFTrO7DxWpKwEyyX8DIFOnvCbUoGe0wsechcghfVwIkxcyC0ACYYKG\
9g/fVdt6sZgBMzaU24S4a3AVZy4Vsc4wyoFNm4EJedgHK1/drvPDbBiPKanD1KXjN7u+x5SucrH/\
Wbeg9dACql6wXrV4ZzOVOGcRvpCOEdoxlbPRn9koAEzPAq/+E8genXyh0FLl2AKwhpXpoYh0UY2+U/\
xmZ4kclvxggcrbVgUCfQyDcX6+ox4Q2Fa7DdXBuiyKgeddBmGQnmV/\
SZ6LVLWwTnTsKIrS3CCzKaPA1tJR/UNdtAcXl0XBE3+OAvVnxxCU86Nyy3mbmdJuOdBrO8XmLAy+\
PE6+qKdiGH/q1VQGhxmNsMKWaE960Slt5Cl+vmIsoa4VhCg3r2TJ69BaTdlLi/\
r3UIqoPkgZs24gSy1UoTsSGt91RhM+j8+Dhv/++bt2+/\
5XUXoKt1duyTVh6WjBkkZiU8DgqWrNnJXjwSUAbTHO9d6EPMalu9FmOjYaA95dy0bbVOyRjFjdC6/\
pVIfZ5USQmZuCGPgdCCh7jQpZAzMvZTKDoO2gtv1bdcAlghdbtMvcFyJ5sePh1kBTxej0ajPbbV8Dh\
pEX1SOVcmso7hdHhi2VlbFVpHg5xcf4Hgsx5xlbGb1L9fcg+5npSKSP/h1Nt6V+plv3K/\
YnaoYlaBqEjSt2mfe22zaWFT14XUzFIga3aUjpyEOHnmrfxYe+tUKLfNcCU/mCd2MkAm1St7CMBU8+\
cBFZ7uSK99VyP/\
i4VZIC73jbGXlBiyhENjOyqCENu4FWbhctXdY1k5eEfje709DyyP5qI38ulHVTe1CFK5pbTA/\
pXKep5GiGdjG8MpTrvgWxI+\
5DHGlfmLLAHlMkiO4lUvXZGw52Mnf5wBL7K0MXuHqAjkJzP2yzRakOgxnERy87zca1zXDXUjRl0wHd\
iv7oEkLOidRZtVVvGNfko9PbUwXOIsG0iWtuLWW3FIKIR4YCkfXK+\
WtVoYk6LJWFlHbSIsdABFHW1oXfUoiq5myx8aTe4tz5gQ2ms7rze6B9m7nPEF7UrZDffa1urcpaMAy\
sYjpxVVw5JTAFJW0eokVjP36/I/aSiIxNDZ1iIOyw5NL7dvFVuy0Sxr7E21sruNBl9qCL/\
QDF7bVgNYWuzBy7tovnv+hiF27XL57LpYpxurty+xAks2+\
NBjqWr2gcP5lFwOyNiYNVhzBdZ5Dm5ZOc6zhvf5qLVXn+\
UvddkPeT0dZt5wX5vlD1Aaf2rGu0DETz8dKsd4N+zg2BuDV97Pr0z559Pfv/327YfV6x9/\
fPv6p9cf3rwVCaCff/j47u3q+58+/v1HSAK9fvfupkRKn358++\
bm7SfVFQPaKyWpavs5QshqXxpOGs8l+ztGpCFktFpZzsfV4disdknBWKvV811TV93LR1/fCYLpH+\
vVjyWphUIoC8RHOWs4CuUr244VOVIihF7op3Z39wSGSkCDbhFveC3OrKNyAzsnUXmVtpvS08LgTcup\
ss0n5O0KHRQ3h+q86FvgkwpshvMrDzj4UDLmqRrKP/\
bOYZMgy5Iv4tZNV4HmC7jHEcSr7BFK2agCGOqojZdGihUxSNd3GsYqYW2A22nOFMs3ckKzv801mklH\
wjupgU7KclgkhjlWnisGlSJkiG+\
P6dusT9Cm3rWZXawbFlFFQdGcqFflyF6xAsA86ratGEcXuF9I8bgffeJ9vTIBNNvj85ccENak4LEpH\
2uYzFjbhTFLIF+tfoHKfDxjo0YYLiM/T2IaUFL1ey/\
FjesFhgGyEIA7jm7wknPNjcHyJeYdVnC9Jp0+fltpFacmQZLGgP7zFcrLM4Spsztq+\
HWQ7i91aTNxnLBim9CrxVQpMG7zaHTizqrKvFg1dTCH5kuLYQzXc/\
Q8bl6uMER51df2ZH3KEC5LeYH4/OoqFPtIh2KYi8YlgU82sDGd8Z+lulMqclZq4q5j/\
I6t92o40NZ5O5swrc+w1O+svZMD4KoXrAp31cjHBA8NojjPPwGXVl+xBaJ2Z+SZ2Cfl0MH+Gb+\
ag2ukC+UULZa7EHyo6wUZV6aJqLdqMn7HVlfJpB+gpuXiZgb9mBH+\
mygrY4fshxCV4vcH56xuusHEmRsHEXdp/\
DWaRsTF3gauQbEYqGY46xATbc9oeFhZU7N7h5ILzza6pWJKQa7DgR9zFTGfyHIn8jRN/\
x9lpkT5YMd69iH1rjUnyoApBSBVs5suFnHD9y3ZqjILy9OK1UDKIbwv1n4yYUlNBnwIU+\
ZTaM863IUqvUlQOwzUWxkdhKxrvhyUaMCou03nMbAIvud0u+EJ2v3+\
iigXOFwT4EzGkaSy6MyHQI4X3VVoFLWre2dN2DccNDFZGXDJ7oVIWvBGXzgg1IzO94G4C6WHA0q2S5\
GhTXcZpSzJowgAl6VfaNmo5OGU7lp71XZzDGHGmEM3fp+\
6sMzfMxRmS00bXiMpMIRqjvNsiIToDm2B8YSplFOW05s/\
Y2caKfaEb86PQrFyVmTXmR6PsyyHvuQYz9WYUqWXhV13PvCwyjJZw7vaLwv3fnPcyaDNhJlXraC6Ht\
Ouhn4RxLNZhmpLbHNszXl/vjctldPQoa/NIUlVRV37FIwu+c/3jdQZIYx2rZccJ7C0+/\
OdyhgRBMF6Eu9Pde8rnbQUU5ZfoTiRAkk2unFk8Fd+OLe+\
6yUBhGjeaKD2nnguRAvlDcnkQXf7nKPrkCFRS5drCpyidtvpp9cOrlPAmP5fTq6Uxmas1MNIyzMuMT\
AzQgR9hQ+YfkXx6rcqefXbWiLrj//\
2138r0dZevFzGHGMLIODRf8DCTngEpEpyZK8MDglGPJEZeBJYn8LQ6pVb1/lP0wKxvCkpc+\
vbVFY8IgNKxih2oX1W3Tn0DFwkBB2upvyPQ99BVPo7motPqs/\
3xvX5nNQbBSym70mcIUozi4iTOKIG9wtZh5IrNC4Hrsw9sbZSkC/LfdZYLaBt7ZJEYLqj10MJ+\
7feyVaDJyCEExnEHQNlREj/MKUwpfr3S/ElnrodEn5gJsvl/voHydTu+0N+mnnvl+\
8n0HiVoKJtE5mFyhtYpiLyGgkgDwE+r6YSKCZvxxNdzspja0pDPvqw08uoExzbueI6Up7BSO/\
kZM7lGZckBacbdaxqrsEkvjAsaSZBDY7WskMvMUdPC8YppmCBF22zbvxuZn6Y5c4tjuu3/FMuGAgy+\
PhyluX8lqtrLAWSox11OUbobljtT8sXHmVa/\
Z81GAbP9oemuu1clBBbdnimnJg8jtaFuLRmrBQX0ria14zS4H25Uj/+\
91kqLKh0ykDtajc0T0qn38zgrKzGF5NykFrklxZx22yXeBJFCPJ9dygp9S1PeKBOT/emRilzTe3+\
rjsfENmsNX2AtKESHACK2ozhToWzWGwUCIw5eDC9DX07oYe5NqITkpGtmUjrmNGmK3H5Sc4/\
ZDDXUQCpNuOhPWa2/ZTzc7JtORQxdJe2lTm4imgenEpKA/U/OWxVGzO+\
yXwpTty02qL1zUN1s7TUNXkbQxksP3mjBx+QKruYt9cfl1C/vrmD2I5HbrbPU1if9vksRjq1+\
7YX6iBh+itbXArcZfEAGFT7+Waiboqzz1I9jMKo0YNEk4fmv/\
pBkcbzp36n5OxRWGQxknwKQhzuU1nJ7csusZkq70tJlKjoT3JQTdap6tNZvQj+WdzB4A/\
rGxKreotmiPWrdTtm0JQyHCa4bCxgOWfjeD4AXOEhqUOhMt3YAYUqvjEcTC3O2l2P65esJs/\
3ZBg8VTnDOWxaG8xhmiiWJdHeYi6mXehloi+0wJZal8l9DNSnPp0FbwNoR5bRrRo+\
voOCBtIr4EfMo5YfI1DhQq68Mi+\
EKnHNDac4lYm6rVZE1A27giBTuCvZDkncXms5ifxMY5trK5sP56MygbGWwY1cQtwf0058zsjTGHPhE\
F+qY0x/eC786amSTg+CRcSKpZKJyv2L1dNZG28E67zNwlFXc+YlIp9ucdb+/\
fPkOlqDgVpMzm5w9iunbwU6HF5BmSXbWY1ica6XijZkYPFWZsUaSzPd1ESa+rSsBzD+\
6MWYyr2U26jeI2RvBo6Rn1zW2geGXq3eIu7TbYXhk+\
4CIpVwErJkRvOhOWpyWIKWB5IPZF4zpMHH1UeRmteTJksf/\
K8xVCbF0SPSFhHkHGXgwGNdWaFJCDOZtvJ55ygJc9eacokFkarFZK/YBlz43m6rU6tcvagCtiqbt+\
2LQRuCopIjXfUs/\
k7DN7mUvAWRxds2DwodvgVzYXn9r1HT2ndN4sQaEhjOclyQEoCD1Ujqx9YshslMJAJuAh8MmIG9IP5\
ZSW0iUmSNiv3JE8clZNKuC2wITTGxIZOK+axcfh2wbZSQ2sd+\
f7YRKfn9ylfJPhHOIcw1E0eAkfF1ckveLOWPIyaiy5VJhv4f5T9ZPSMoN1D2Fam10dIBll5+\
z5ilaR53/Z3Ymn8ENK+\
qA9eo5EWTbHMiTwmaKTgMp6dY6SnBH24hbdcdz8CRJ2uhdF9YBbm92d5ojzonvD2TAcLy41SyuQWaJ\
yGOX27pXmrmrm74pXcff3776fPq/3z4+PMHJTi9+e5t+dKn1afPP73+/BoBHaddswS0zgWH/\
0zsdweFqD0qHfuefJFaOpxkuHzCqjw7Q06sl9rI2Cb9U9Qwa8AnwMk6tOmwqbvzAfD41LQJVbSD2mM\
fQp3yEs8RHUu9zmmbsyHnHRWESWEnEw3oSfuqeC2Kj+Jh5XdVr9tDGwAu67v91O1L1C/\
doqHb96Jssjwc5rtxO5Tt12wxjTHl1kot1VRu8p9ozF/ye973UmBIzF+\
qcvizVZlhx9XPGygDwFvt38UvuEwhz8GHptgZpGTvhORlX45Me9q+\
WlvzTnFT2Hn40fIE6dW5tomuXwXx2cRQcAS1I4ork5mEeVI0nV3Qh0KxEsbHTd2z1tCTdlEgWzgvUm\
I3yXcHp+FTnNRFKg7BG6xRIug1IldBrUs5nD4Y7q6qumhguVR80cZ679g3LcMIx+\
qAMVUnGyvJjaMfMqiubr5njTREItWrkJaBjSon+\
Q09m2k36tn3LaOpc82KvM50qa6QnfXEgAsMdl7p8rEhK63XdcpvvLDs/i+fhwUq2TS+X+\
vpAGcv6ZdUENoSm2jqlcDb7C1HNDg+\
NRgGgBnRvY0u6XlAzs0fL4s6EuNeacEALkfQQtoFYLR7GLqDFFGdT2o0zRKUjY/\
lrUtjS1IwoOGO45MY9U8axucz3B6odBRjsDreNNW3XzkNgihLrE0EN2tTKuO/\
VTknhMr97YsbAHFF85R4iI2dvezetoTDH+\
HFNH0EZwu4LEWHVRGZQcJm3YMsw8pN2a50sDnkv36uaGQyCkIZEqn5oGordbxfLkUjSVS7Sy9I1a2R\
sbldi1rCnmPwHN3MHpkMOSwl6GaMpXkuydFhjQiJ9HnLivZRxBmgHGgrmGUxTs4NIT/\
xrhyWwzMgLLvRcSx2x78VXPkVZ2vzXpOSOStFPC8MWB/u+/\
GhrFZ51ccS3ux1gL34Mik9iFE5UNHVU7BqIzSQVNChpMSAthNEQ1vNxFWdF2KrzOrrMTCi3CnKLxSX\
XMwvlMl5pEwevY5HjHNvAWNq+tFKcQVesWqkq0K+xFvFhBTKXki74XQNcztOPCtej7sGVSZxuWmx3+\
CV1LKLDIFt9jKvadb90J6a8vaEn3Rlcy9Tdhzucu7xclaPGbKeEv5j8RwZH3IyUimLKtRL2aU3yg0U\
uPCOzSe9IySTPmyZXlxxOkP3MJmd03rqqDSP1YKGzIV0h0RM4jhy0k88qKpScUrVuryT0XejZJF4Yu\
BtGCuKab+iRlfxoNAVa6mfFUNTZV1Zq6tY15PC+\
ew1caTY38t4SLXXyP4Z1WlCXCz0L0D4oFqG7zfmdQVRzlHjkV0hqeNpxFzJr1HE95758Mn0KuCEANF\
wDI5Cd1hUEfl3kB0pQ1TIp98kwWluFeP6uX9+\
EPs2dlm7Tfl0PdKaECfzRet70GzBqF5C828iz7122NK8PvV1FNkkLU5U0z55xHGMmtS2qs+\
mH1T5Ew1ItQGdVJHwQ0GXQmLaPDTcQwhvy8PH4s0SXzcDJSXszuAIrLJJn9z3vT+\
1Z0Suazhdnuo4OM5S30boQTzZSKLNJmOu37vfcz6BnLZXALprHzp7qXBRB2BxeYcclk8ItT7Wqh94B\
GLQdTwPtw0mWSQ85Ie8Q5uXE6lIxJ5yJbDS1LK1gjV7aHl+z0c2g7UzVtbsXd9/SVhhX/\
NeUrWJJK2JhiXdemtZHLl3WAQvBnY8nXcmoMJqjG4Xg72waYVfKeeJf0TWz1YBgxMpj93eCqZee8lq\
523sJmkbCUxwDgRJnS3Z1oF6vPWWQh5njMuhFjbvHB91LjTtyGOf/lNqUHos7GXTuUq5iktqkJ+\
SoJDyXXmQXF9M/kPGzC/eTZ7R1gk1UiQmfppl1WEtittkM09jHv95MpmQU/\
kfSi5Vs2WIrdfJTFEfgoM8P5TQ+tHzskvzdu4U5VXcNp2WxUkZG9UAn7fb1efIYLH7SpQixn5q2+\
XsHbdR4FTm6bmNe+Edre2flJb2lIobrEoe+pOSBelEoj8ni+rHZ82GEl1grRmb7qHaWE/\
cEmuDVFdWtuLJXRuxHYCAVrDptcB94X2MnRlprweNFptEkxK0CL1MJZVVY6OJnI892EH6/\
RkVnpJniyf7qW1vMdqz00LpXMBF74mrCo40UG0fWAkQXPiC7qt9rYZc85v+lRfnPKu19a/\
42DK9x2L7RIayDv4A8BzKoIbquoqBc+5clLbL+fv31cdzZSUol5A54HTefgN1rKFYcQn1WXjTbc/\
pzOVnijiXuUCS8xb7Kvvb5ob8WdOvnEIBg2VJTLy6O3bmeUEt//\
vq9SkUSyRMbUZoM0uCXtKzdqfYNHjNSbaQlsDV4yeWMTYCZtrZ0+\
rPp2udPDKTBCemn750rfMwPUFInirO2yd0VQkI7BRGqO1mDSZv58p7FdvDjw0ntbUF1eqtT/\
pYSY85U77CujOByWEf4nTH349VlaFZJ6gxUO3znTTsnyMWcC0RtrAgKUhl+\
JXOcMhVvS69s8OmGACGjxJ+UEkGh6c8RsTB5U+n+1yU9VzPBsKIushiCar1iqMtm+\
m4lVo8QhmoKaXGppKWHxND6Dwj5GpNHiW6mH4w6+fQ4IqWzXIuHhHL86tuowH2Mvq+\
fHACwi0f3jSTuzS+kkmxG6t0j4kDBT/qRLssHJSy8lMojtX7TjZjgBtF/UTUpSK/\
cULIHO5UEI6q2DUa3AQroIlhJW5plUtxyl0/\
LJ9zpsiSRexb1IsuZsufU9aTtWOZ4GkvSvyZTljYmKOcl6T4uhic+wju/\
vkCCfN8DrJCahqgSv3uyvrpamSu9aeBEvq1E4nRQZJHcZa5nFLASLMiLrIlgxd5OCQYubUWbmfFnrQ\
EVhKr63FqRNCoL6agbDtSaOx9+t94w5jusrbYas3RCFtMPkMf3YjofEjB+cVyfXY+\
UKlvlhD69erjk0xs+1Cl1fLWq++afdk48pFUDGUbRluCIQXfjnUl2Iqq66gDr9PsJa+\
ipkaaPwgrZWVFNOixvYdrlH8RG6K83icaDOkPOAfkZHjYBiqXWJyCkaQppgPYrjWK1W/uS/TV+\
g0z31ZwFhQwfxFj57WPke+KMd7o1WaN/\
0Af1rZ7TK6wMU3613467D9ObwegNvSQRDcDiRsZsFl6e2p9yWUflgiPkwRkbgInr0p22WznnOClbjQ\
pSMPcSO9llNOpgclEFF0JhCMAJl2yNVcdawBpYJ00M81OhqdrlnzyttfB1nJjoINOE8vSAz08wwmsU\
3FIOvQGvhfrVkzbIMUkTMo3p5cfXKd9l3jAalBc+\
2DLMUDySg3rvRJgSDW7fPLawV92xfJyrMp4MjyDhuZNsd/tWlnl5UF0xF8ZX0pW37aB03i1+\
nhbLx0+zwKxEeVJtYIa6mTHjmEbh05fW/mK4utkxFi8kvILyE+/\
bTD7FSP0HMm88ucvXu7ujGu53ZWP2SrgGATfspAUchnXStSKSEI0zWShglcg14GUNaYGbehzikZlMy\
V5SwDSGJrScFolcG2Er3yqF4Iy8wZpSFOlPy7TmAsD+\
WrCe105UCrruAcl1bc2xk0WT6tEKKa4Fs2r1ZsfXv/4+e1Pqz/+wdEd37/9+\
O7j9zdvXr9bffr7mzdvP326KX/5+N3q40/fv/5w82b1t7c3H77/pHelUo9KIWqeuQbSJhpl+\
1aXSWgHI0Lk4r1afbImt1xg3wOho4IJduPfz9wtDyxvKcbe9xBwMU8mrChxawqJyv8CrnMjtU23/\
NbZsPCfGV3pnEGJRy8aWstDirp0CSsLrG89DFZT4etsYg03iJdg9c3pCL12ZZQ45mMdQ014qE7PDxi\
XnUsKjyK7cjg0tGAPUmLf2QhNQhXgpLxavWtPgogynrJM1uVlbzfnfD1uo9TcZ26MF0BUcrrRqCPLT\
MyYq6o3hBlsUGfZgZOuh99zSLdIWti2Fgqss8uGbB0vTMyqkR6AtmnObPChmrT1k1EOqaoWiZVTfSx\
0L7TRuqagS29J+XGXZ56RNrmEF9o4gRSm11d4ro0iMIEYO+\
2sxICYjQqnsTNj187vK80NSGGANp7Ulc9ofLTigdGeE3dLNthNue866D6YGlcMUIBpm2PGbB7j6PTK\
dSOmgwcKBlzfBabCxim2R3alNiCdqmgS70orXhIajFRAi4QlDVZjAABUZ6Xz50lUCGYVN2ZkFNaITJ\
9FLcPueW0AX/o7e/M2Bq+dFQAwtLgMEipsCGLabzmyrhLXLmF+22zrfByVUE39TgK3YqFx46RwMDA/\
3pfNL8rTksV2247a9IsCBp3lSMvMYBA/jlIkpR0aFU/By/A3xbRvoYCNpFle6maQIWRUr/\
DQfxv6I2dZiDdHTqgLpG7X7LVU4GsL7ucXt7M8Y2s452zEywNfUDNN7ihrhSrhBgtVMtCYCDcsCMja\
TmR36x1RiH80Cu2by1N2HifR7pMgXd4zK6BZ1QpvrNuNOm8H7PJJCrDJuagjsAwLq8HAuYkZpjwG5k\
h2lcg1Qllr0A39thhG0ZUbx37bNa5Pxfz6RDQpcSPIIA8ujzIIO3KaRZUJlR8Ejtc8px45t5BntArL\
0zcxInhSfbXQcKqcZMxLyPzUNQuGMmmaEJv0sf4j73vhCNiOnm7KZ944jnGsS6caaxnOZEbRu2cTh2\
Vg1QACJWyxQtsvkuuRiwAVwGrQtknN26X3k3A6tW6wnPDyFv7RDnsUQT8btBZW81KeGtwOBgIXliux\
mfaGtg0HcFgsMLk9nmM8jVEf8UFYHIDdfPrGbLKG/xAaA0G2j7+K0E0JB5T/\
ybvb5vP5Y7ARaeYpjMROGgNARRjrcAkKiteT0neEBpN44hL5TGiemP+\
CfRAjf4FhZSH6U20WKGmkQjukpffPczvwnySqfmqNNgdJs9GmVmpwRrVWcdFNCa4rC2GV4yixkv9Fg\
+6fdSozmUnE31m50k/\
YzAMFk94LVNZ4Vok8Tr7YKnNqgb2eduHLFT908hwr9opvlT0xWrJjZiN5AQb7F+lhHcsT/\
Yv8LYHcHEde0l8xkoTaW69jak2PNvNWi8Ch+9h44lFi4Ss3jbfN+\
dgw8OLDsUFjpYQKmuLqXRHBNRGIkXRWWDvBEiqLoPobzlpQqToLGLZDFTHPLmSApTH2TOJxjaIlqqQ\
Nj+JIsEqXtTlKoPeLILebp0nWUWxCc0a7wnbjJHpoXIQpWUNNn+Eg69E1/\
BOppwlnt7OixtZkdCuuMdTcNwZoMp4vfiercFqVwjZ9WXZCZbuyQdDttJFBbi2UwVAZw3mB03AeTru\
ooJwaoVVJBDq3oImb5gdW/4r8yMmSR8yZpAY+2kqmAKqFDNcClY0jmait/MUPzlZKN3r53efkMkX8+\
QEhvU3UsML/S81IvL666o9x3/78PqYtNWkhFC8PbR5Dv/AAEKkMmUjppUQRIxm19c+DprPQp8l/\
UKourws93D+PqtaunQZ3u64tz6BU/\
I22TchV6HW7to4C8n5NnAYLywSKHJUJJLy3y9ATnmPwA0qecZQa1fBA7vCoDDuB4b1OlLmO5ZK5PFC\
fzYHjuh2prNPd+\
sKEKTEJSZ402Q2pxm9cms3WmIbCiohtGbrNmc2lui3aRWJ6leTAiq1te6kCMKQWWku8jvfNrsTkjeV\
DYBaKunRSfXvOkBS078YTR4BGe2XeWg1E2NpjupS0pNvadMNuNO+kvcFim/\
cnCXBIaEfgA3pmgbydVvmqeM3rVViMJNKgiTp2nGK/\
NbIiHtDDw5oaz0cQDWGdPurM8KRg1bPocqG2f6HMM/iAmREBW/zEG/NoqjowLFM2Y4i/\
rlxFT16RiSEiSsjk0Retu2aGW9LELjIgqwxwLHiYByMJxjLH0bKsu3L2zDwrhedqaTLfmv1v00vThq\
ejOTWC1Pu2vrC2LS49hoZZShfG+nOeWklYNEqrtRicmIZr+\
diTFkaqkYK6wiBHrQMKjZb2SJWlOVvgZOGvteoQYhtaUTVJUj7ClphZ1aIqWSlFsuuJNBKK4Wgoq33\
4FgvRFcfi/MN03bO5k4OMCCfltczFJb/FiEnP9ZSDUC5+\
BUEPkv9d6IsmT8au14HZeoLN1jRTBqWQbxAeoKoPhErQG9VqNgkjx25uFjvOXrw5hbhOV0yGpLLD3m\
T10LE4xeu8roV/\
Ty9kReWt3XeEHFt3lnKtlTDKcuai2sB8SdqLSXFuVrlNSRaoABof7TAIwEppvTA05KoPHEsREE8Jat\
mRl7qpAGwYKqkuhryKfzTSNoP1mXr73dAcGjfYAAiBn9wNNo5V6upLTuxNBBuZqTKOtSt/\
w8GjKttQQm5mHhcN6To89/Y8GJmtkzP2t7fjw6ARUfb3PmNuE+G/\
Q8HTIXxkcBwrwHSmeTZnPP7e667IxiS3JGk9ExcGNRMbIwW5/vCcU3mfGnfq+\
e5E6ST5gotDXl1ppcrBdWUHXF2FxM4mxSzVUb41mfILk4DFkxT7cEo1tjSomMICz3nSzOF0gJWhF0T\
ng42nUxUqCcq7/dVDV8Idl6La77NOC/\
Hv6J4M9L7i3GEkKtN2146hAyvbhoTOBmlClZtnBJGsleX5CHfnbrynjofN1VszRe/\
x2mQH4BOZCAu4SO/\
dbn3sK40Zxh8a2v5qnanEsKpzElke4SszmTLL4kOYvuXtPVhOVWzCrvMRy8aecp2CXC/\
TeBqNhVuHvMXQIJDyid96f0t7CmsT7U4vWvCTYNksq9UYeZ5PoKGxKhG9DIbZVeztlne4f75S6Kbee\
GJ7Mb4U8oTaVsZPQ3WtfUrbVTFcqj1im7zD7yb99YUup4X14zoXoIPX+/+vJug6bHDVSdean2+\
6pczTdZx1lt09iJlgbX3pRNK06HSNovnJYPUGjtKpWvmWhEdkZVJe6hIBgA/gIDNnQ+\
xxLTti9eeFpboIGWpF6QPUdbYcbg8GmjUIU3z0KiGWMkv8z32/K/dSrLyrp++\
1zAWiFYcusJyAySdwtBkM6ffFTxzkOAm5n4hZBFu53G7UPFnEGWcFnO903GR5kPwrXANJodo4sKhmC\
owuj3O8k4ysc5SZX9qric6tsEiZjHXF31DNkee2aNT4FPRd758DDA/\
1v10bo1g8AWKmtIVkAYsH85X5Vr92PvqftWPyafI80ksIjoA6Ow7I59JNKjr2fGTja/Loer/M+\
qKjcWkEeTYMjugoNME9UR8Ds7NEKGVc+/KiJTYfnXB+MtrmrMBasuM2VACcVGQPRm+\
jfKC50OmtGPaStAB7S/re6biJywyEFKlg7XBASFqOATaPH/yciqC9viM3flqVarydD2/\
UjCxnghqkHGALorgWoM8RswkI+y/d4XyIqu8aCm5q6Ahj7rztCUQ2r+\
9TKpU6zHTtldlvWPigMfvfwmEe0LUFgaaLhXCSQADocKFGHm7FqjQJaHW2qhHyeEnrtEJa5S44+\
gnsd+DHEC68tHM2JZvF/JAsJasbGLARL8BAvzjBBxLW0PDG9upOrLLH0uKBhKr0/CAmVeVp+\
Ntf2vZBueCRCGgYzPwzrQQOeRJ7v8e8/\
9kRYaRUJZZAMh1bNHut9LvQtq6V8tJaOdHfpR23vBfICzjmLtYRbwVc5JVVN0bmZWvOTWVeIvZRKvt\
xO21BVqd3x9lqJl7E9/R3g6mHXns8dKn0bj8X1Ss+\
VjyxMvoorEMr9VO4DUrL8Vx3jL2HbmxjIrXCMSYh7hNaGzzwlkHWAxruxawFpHGRSGg5Tf1GCXRMJa\
TYbonFcrjJ1R1FbGkN5j48eogt9cGWepKbnKqmCyBmYnRYhFF5XoDy3v7fzzcf3ny++fghbLvOShp/\
O9OnLcJolrc1mp1iI/wUE6I5A607ROzksi6zroUGRXnT93t7n8uv33yupwj6YVDO+\
iEMzStTXmTHpmdmOdE2XJCrQyeyKuaMT63w1wrzQHPKFs9KUaLXXfyMRGIP98rtOSEBIDxCyKGQTqC\
8InW0Cer8rSic7trV39rmfOjFjiUAejQdCUB/\
0ivQQTHc0xSay72nZJ481sHj0kwB8jGq4dIaXH8t0UvBhEzo+\
haZc5JbkpH3yny6IXk622SLODaeViesKjsW3SrLy/xzbk9TD8Dgkn+\
TqkGdkBhyfHHyAtGOGCosxflYVR+vGczyW6ap6gGTY7aoFJxa3hPmrIr4ZYmTB7+\
iF8s99Eu06mno10YwP+Q2q7dyhRlFcm9lJ4IapZVUa3FbxOH1svVD/\
ldGsXzUMaFEXigTeJ3votubuLE4SKznsbOxJWC9Mcsb9uIbq3e8mKT2lTxUcCzmuAgvl8u9/\
vUxkkc1EqYacOLUPLRDhUHkJIHEMwwVWrIfYOJL1ETMCsJ3KgJLSyYKIG2WIqLpFXh8JksxjyTGWeh\
xk+V9KjLdtr4VIozqg2ToWk6PNoKlBc/bqUfANd+804H5JLT2hMFTyjFwgopWnb+\
pwytuwatNNYPsdcfHfp9o6Q1qeFKG7IMgSCXZBfEbx1tGN4vHNCOgGSsdiTH4k0C7HDDVc4yzxfrv2\
Bv7qtqg+KgJ++LQiqG7WXEsRmIrfKm80xJBYTy6H4wHaPmBdXdoUrUDhxEabzcB9nvXrH7cy/\
wjjHjf8z6blTxxUkP3elritHpfzGO/k034vr1rxPx2ktl87n/hvyI4QJhjqMHy/kdOQahh2UvD/\
cpHcKH4hkCmximiygcjDGqrlGbYNrkBnYVUr+\
06cnMysSCNGYabxfJ5xxxtTnlEG2JH5bH4QA83tP3x6aE5dtisiPgmU5sAjp2FA0uEZGtJaGtgEt46\
+mnb5eOG3mFxLYIWLfe+\
Rx3xBOrEZhShybIVhVseLCSsXY69QpT3PsGciqineyeN4ivkhOi8DVHxlhcH0Tz2mMludY69RKpnAU\
ZJ5DLIbkGhTlb58Fwt7m8Sh7iM4lGSHHhskEP4emN3OaRaqjKMdJt0bLVYq6+\
GDISKWjlOIbivVj8gspEGBx6VoVraPyq3W3dfS5gj+\
lt9pkNNNYPbdn9Sj9iwFPuAdEFtbPl2d9L8hf+bmDEULQBzUKcCbq3IVrJTk11PrO/amDfS+\
BQh2OXtSyW/vPxHdKCe+aD9UAdV3ajPA8oBIbvTv0smi9yhG8HZYm8X7R/\
KK082BJsET3xbk0t4j10bD2h9lWB7n2ZBHsj6H35cJZn4bvhaQjRFrN7QDKkSKLjzGODGa3DlTacqU\
hnojKEyLLDG1eZJijO8MtiPkBs8FFOoRVS/3GSczjdEpa3upXw+\
yHx0G6ulKjQQ74zFTqvsdLwoVDjveGILLvey/aJH2EyIYlSSAqT1x1TxW+gI7IBV7zn9NNo7tLjb+\
xa/QXNHg7R26FglmaeQvhqpRSSzbpMgLHFz+tvRICB0L/hcpees10WFmZp5BrPy+\
xUqAABLxYtoxOEzLkhs0TkTewSYi/yPeHKeBZdBTgSHFD1MhqnVAqJ1J6sde0HeBYXLAYQAAJ/L/\
6rTDjVT11dXYD5GC1WrCG33D2c2COFjzSdFxMQwKv1gFPqITXxOz6b6yaKPOnYY2Ki93Gr6pm6Uv87\
MzzSW+W+2HzaS38TSdMf/OlMsqNE3n8hBWRdB5Sd/xz7JIfHDA+\
I0ue1O2T2oNEqjubhizklJdgECBlGh9TiNwoq44MWEU80yx8ugMmJXd26DUCXx/\
nhFQevB9mPr8D1m60btnugiqI2YnPB0DodK7v2eyFwOfJWH+62u7nNo+D20drZuprJcf/\
nrBN4LKchDd6odQu62+\
lZdZR3SGp5zdSVdf5n3Fu7U5OwQ7DUmINLUpSocmF5jUR8SBU5CSItbaoH2xj5kHNteMWzG6e1r3hS\
TtB5Md86E2YrSA93pTjgKLt776FkYXZoRsnUiBiYzIT6pjqTChslUkpt3hLIXTwZOqrLell8mjctjV\
yz00XhAXqpzqcQGumBa9soCckAOS2WLpcfnWVHZP5CFY1xGjqSIzjGwebZiAduTtfimIrcCjQq9kCX\
wabQFAzs0yTLE7l7R7kYpjg3sciuP3YlATLSSRzNnvgVID3AeUqs8gIrfmLiTVfzY5JbypJX+\
dLXi7LKhj/\
aJgC6Q8BrcQIfascHqC0wBcxWP4DVvA3vXv6d0CMIKIjBBtPEHnTKU4hWiWnkwTLhf3fcQWpDJIi2i\
N1+U3NXRNYxjEK3gbibSB7LFzuO0mKH10LpeOqtueElVR0Fte5ICQQiMBMlMZo+NlimsaHqTtM+\
FwKtYI9lYVvKqe0y+QYXXiDc1tZG+Z3U2uMmqvtzT5MC15r8WdiJBiALxS/\
ZXI9nazLcLwfi9UiBqsAG4vhPAqDdFGuGUdYnrD926eS7KhjN+dB/\
MiPwwe0s6YDlHzsxq3XxUKjJRKXSW6lNDIravP6MvlVGw+\
dFegOUQdSIxA1ERTggVMF4EdC55C0NjarjrihAnvx8OZwrhpxyKNIauac8AKL0M5/3gfJ9+\
0KruemJkr/zR9GEYZCxWp06BTqpp9lVuMa940EebjE4AhTJ8Aftqgi+/\
rTxyMUivipP4SnfNsL9ejQoQcPUcNAVrYjq8JN8snUNhEZ0rPUwBQGpj9TboC07Bna8TS/\
Z3JuRpwD71/5ijdErgSyIcFTIS3jCvllV3WF3Q0w8WZEP8O+LmZDa32/\
NDZ13rxevluSbKcjg4Uc8T8UBpfesdUbUYN+10N5zuq9hdJ8CEiEy+HLdfbuW5a/emp4b7D4mH+\
WnMP+ukl+iNn4OAZySAAgAxxIi3oNdCQeKoxAWaNmp217FDurRS/\
ip1SCoWDoUKu4n5UwALn1uZM8N8AezOcWQ7CWSPHjiRzK2jYh5BCKOdJ+\
Ytt4Jx3vmmuaB43utaJRFUVoJUwIiMsT0x1cJ9QZrwUGdifW0UnaSd2sd6QqeGizazNsnt6vPQFfcC\
zRxTi0K3RNwQq5tO5TyfbhfavuGxe4wgxTV4jpBfUkVRLOYEZB+axEYN9ks6C/Kp75tj3+\
1Uf08rNLpURLiWpb93lgh0dbznhNrg1BctdGsWOmPL/ZtaJajkgRIfqn+\
wLTqXWrzQggg9tsHVQxp7HaY2Y52oF7tn1uJ+7c2Lpa/N+xZPrROZM0t/otrdaPh+\
IakUjHgXdo3hT0to/2wYw53shPinGjYOdo+KN/qELe2clzyYUEjeK09t8jDvXZ8F0e/\
GF7s7xOBoP7BmcB7ZxBqah25XD3AeJvg99TSB4CNmX2mnAuEhIf/\
QNqb34ma0qnMrX6DNZRNGyZtQdrk8XdSj7uaN/khucrACx7Bg4nAHNKjZPidhHHxC+\
L4Epy0Hm7Z50SK7/64lwZw5sZZT/vXN6jqtXwd+06dwTy/nqSi9HNt2Z2MZkto3p6p8wtkhbGx+\
QIh6T+pZmpNjz8+\
HBxsLLVls8TKBpTr0VCJXJsnJlNwLQ6JBYe6tAtOxqIZvdVDHCumqaoIfP6qtPq1T6u08ScY9k9qi1\
OumUqrXv3Tcvd1+\
ocQlCnKyH3UYF4gaDutHdUwOy5jleWajEx4DWtul34zbMycLyzlEEVSr8FLa6oCNG5vnaA6kpgB7gx\
QZP3HkI/TFPa26nn+XwyMnH/hQnW0vjdvRY+amPS7gJLXjB9JgxSIdnSpbRiiAc273UalR1R/\
VuJINeybH1EKeQ0EcyVi3MuuUgQhzAWmlIPvu40/vISUnEnHCUfbh+5sP369ev3v/8dPn1aeb939/\
9/n1h7cf//7p3X+WL/z08e/f//Dx75/x3Z8//\
vTu21erT9umvEEVKJ2pBZoa4LMvuXNrOBEvK8ye5NXEDja3rrD/\
r4utaimgYgJ9U4vQzqXRvZhqcc8SPy0bGJ5/\
pOkZqkqOFhjhXVWa7PhSRwwSFXGLM5eupd4Jms3XXr2cq5B0RxN1lcHXSXul/PFz1w6DdMn3q+/\
O7V3vmrxvSmCGSEZEH37ACG/ityp2QLRz90ArQvRT4etWw/\
b1UJ1HuIqJeFMXRRDw6Bg4ZyYTru3F8lPyiYOwVpleXooU8LKsGEaC7cxqkeGxh/\
YEw21D0wmIMROQF5LVhWkpnz4wNbd53gbTynBNYYht0M5U/+7gWLTtQpc2Bk+\
41cgvPXS3e0zWY23F4R2gFgQpYM7yF/O2fyBbrMUcmkxUqU+\
jm64iKHpjyuo2us1KL7SKZNLNPpdwyFqUJ82hxC9lRZ7Wk6cBce7p0hapzozzLVmrLOMCI46spVmox\
rMuvlaQEMeLWiTrxJhk4ACZPV5kB/Sw0ol7Nt5oM/jKN1KW6jjzw9hAcz9ljQ1iG/2e25fZvR2j+\
RLsSm/T+CMkkdlLq9NClYo5GP1Ku/qokxLCcPezrCoSbaExNdEnsX+otxtppcEdF5ZlwuqcZi7tA+\
Cd89c4ZcucKGb4Y3ppj01B58wqVrVcfTwFPHpBkMdHzqSaaGxCew50f6Z0VGJYSxgrfiqESJdI1C6b\
9G887aLCk7fidoD79NSPq2hDLpFOaQ6U8sHEPzU5IbmYbm9I41pEmBINqHpY/\
PJz0kNQgiPH71XgovfPe4UcNduhKYamPZocreKOgkh+\
M7gkl54yFAMM8cQtDwXeI7Q8QuDqKHPzMmXl3Ae5zKswB2BIxAYn8Ih2kBLqhfqW2/\
4FjFPbKPdFHlNHq7E/NHvg0RQ3Nb0OlkdRWFiDH4ibcd5+r1tH2oe0ZJjdIRVUtbzdH0OrjuxIE+\
JGxZGlbVkbJAI7CCq/lScyxg4lr/oVkc7aS4k6DVyD7hAPtr+A817eGc/KWPk3ebtjWRZpNA2r++\
I9ynNfpX99Jtp4MB1nMp0QvccRbsxOVDSiQvevHjlA5BPdbxq7PQaXrLbvkF7ZXua0ghfOac722oC3\
PZvVhfatAFZk4N2qE79L+ghg8xItGS9djEu8lB3kVOyamk6WTBc6AMLF//u1yseCgKJmF+GNSltFd+\
8UDqPUhEkq2kPK8Uu3lzrpAu4KoCIoYrPmzbQmDFOISg2zlZgYRF02jcHaXU13VhPjmQ76fVsCuQeJ\
bgXyuaYI1tpt+Ux5U93sMBFGqO50wZbWEl9OXDmlYvOQMbbRwoawoFQ7S/\
X5VOTn5Er62loQiXqlGydJzldv05ikddXQtCbEQAgc1BYLu9sIlkrMQUdbhQ72xl1mb8p3QmCc2UlI\
S0pdAaRpHpHIXQgpruCwi+VEpz812xo9B5JwnpFaq5YMy2DbBiJ+wNWueQPgfVwQqaZwSL+TTfL+\
9U83H95WxdnAY9ik18O+65WQYrJNEULbKJZeknNhKYjlWslHJ0mQ/\
FM6U3BkUh5prLSCYCvlLBnxaPUqx75xXi7MgGyRadsOxa4q5OZLQJ64B9rdgr91DLAjtsEjDs1RgEV\
CKjwhSG1m9pQtytsmANwLaTJ85YTTTe+\
MIT11SHDBdRWYLGS74CtV2EpZ1fP2iy6DYFIIoPNDXoKN969kJOc/\
yjtrzx2b57vfvpaxnGb7avVaBSPFsaaGSo5P5+Xl+gnLgwgeQVbIb9c2BXx0syt3/\
S83t3a3G6vbKDMqIRpbot8wfyY1ggZMMMp2OM0vjkahb2UMSTnawaq1gFrihoqrl6Jds/\
Z2lY5kmg3KZ2Zsq0G+\
KeuABFNR2Ym4ucJeaxuzhCHj2spDG1GQ0NVFJpk4htX9guAEbsDySLT5xpprAKAsDe+\
VEJHZIwuHIPjRDGPfPNmRuJMFOiaXSV8vmhF3u/7w6l9mwseHhmyQW1BVkF4U8UlU7zxSaW9vKb3B/\
ExwCHJgSXhxK1LysI9G2mSPXtbJnnltdZp1PP0CqZ0L1LNP3pv2rlIanU8xszs/\
hsth2lcLRwz7z6PSMuc1CtJVe7RKlqisv4pUg+bA5GTUa5K150mF+\
04UhbutHVLingMoYkL7riDEHeDuSqShICWj/qqwDRdoAu3oOmIn9nXFDNhVrIA+\
19uCJCaMn6dNc4L9X/NCGBiraq754xcL/5lenoPZpiwXuDT+\
rSMeJjV5l2BmwXHqrRZ3MbmqY12wnSB6UZY3waRl8Fqby0MxbiuwPGdpnI4/opsMdR+\
JfFB3Ltusfi7ErNvuAemxY0O0ED16EmRDxo+dkJ927s6YzilrnvrcTCCRu9iBNURfN0ZxveO+\
SKrvrk7hbLGGsXZO6TKttbTjqV6se4F5aPZhCB2thcjxPQNHpymbg7ZO1lNuq8GGaiWtsAkuIdtoHh\
vHreq8nB7AZriiaF9FHWojQtwiKuz52OyMxNScDxQ1dcIkKV87rM4vqEhwoGwiKE7Z+wnITDJc+\
KCz3xdessoqrX3yOQ2Uy1hP+xRGYL7PEAPGUH81/c6FB+usYyBMSXxEoZLIh0Qoe1QTq+\
6sYt1UF0FvcAwC9S2nu0cfjUGSL5VhmWPKb8kiwhqeojroCDFtbfgs8QBYUksmrKu9tvH8dkjtyMR3\
uVDYIgIl5BiR1PiXL6kKZLoUShT/bKMlJ8cwFAupwAKx/4ZSSACDnf+FYYOWAqLKv2SlO+/\
kL9bRyLTqrOyvVt/aWjt7q+\
83x5sphSMfoBgG2V6yral52icTUGO0T1qhET4CKZ5hAEZ2J0pEUfRgROacSDb20Iw0TsBQUlRLNYIt\
enkyVnbLlpJThElJ0yjW1IOYAHzTdKZ/+hAO4qzTNXP7DAaIJ3NblJqcmiPp+WxM4CVO9ul+\
iqZNtxv8ybnvO8P/JIUCs1NB263OzmyOFhHynEozxp+xbYzMOHYBYNmyRMm0CQWWGb/\
gcSSOCTE1GASRiQCEystMmT35yw653SgB3OT+Nn5aCAOVeS+\
h6C85SvCOUIZsgi65sAGWCR2mLz8r1qifOrrrV/\
NdidhUp0omip5MupjHZ4yyMGEISQA6bvN5te2G7flAPJeqzVV84cTEtBqO1PGcNOxU6RVw73i55aF1\
kJENtkevvyDOcXDmpivehfDG+o8R+jjdYwQhCrw0Igc53/GaI2j0NdZPIl4ZT/\
nBBjyYeXzbIwKM4DyRIuOQwjw23b7sxJHpqf4DOQ8FEUMrksG4mefjZFJUBpLJwaIXwOs/\
Zpa8vcruKgxm46yPxOFVGJn0EMriAsro0cj0dR51LlBH7I3Ct7juBkosyTBqizmQexHYY84Cm9nYSh\
E8VlWLXN9YX9LX+jU5wDL6p6JDzjDczHUSwf/sVIZd0mhR1ktjOXJl5Yuim+Ph40aHr8vCcKbVr+\
5pffUONU7WO4swcHcpN+gGRXcz/49msjsUbatIcTceZRKM8n7lJyu5uc/\
38wrZRmLho4KyLsNjbVmwVpE5mH+4hP713b12DKssjmNYF+\
Fl17GDYbebcc6Zo8dCZbKXtw8g33p85Ab9uEw4VQJIV+9VT9BI1CoAKVwnW5GWLzgwfIk4BA2oE/\
VLQRAcnD66mUOwVO4EXvgLQlFlOyA+\
6WAMNqRXZbXeSQBqAdjhMvcz2iFR9dYKfKKhDqn5NCcJ3bLa9T7qDIlGP0bJm3s8elEfWkuq4cW5YQ\
BfgQwKWIaa3rCy1BwTsd2X9okIK5mIN3rqp8YgJwMm2eT/\
MbUdpQCXeQMITPIsMGmdYmJK3Oo3PLbBzj194Bvr2UUKOAnWAcDTABd1pCeALzKVf3tJckL5YyeVRG\
foBFOBIFEmYidaGpvVhOHLviI+\
k5SuGfiibBdc2TDPh3LKCICtE6CVCac7G5vWH1kYn9KAWwYoFiYxf8OuISkEShjMdHXTfSk482Aa1R\
07xmZbJckwkVxyQ+38lel0rGTeIs1hClEsIY5tWva8OJ6t5++8uFreUlaC6Bkjehy/jp+\
ywE4PDynfmdaChXwqjpSQ2VoJQOVPjVTitdKicaVgoGFUe9fj5BdvjlRbMWMVR+\
48Hawc9rUTwjo0xgfU7Z7DJnoVyvChiSLe+lbIATlDp42aoxP/E1p/\
rGtnEw3K6SFKMO9XOMNpKpboM8NjanGT+zXxi7Nz8Wr1fni1+lES/KdO2m/lL/\
KtaLG8bw99N3i037JTZm0l9EBKDGYIlO8GJeUevU+8G5onMRf7TIOW+\
y65eJvAQQoD0oWhGJdWba5jZvjeu9+jJ1zxTbu11Bcv/2o32ew9rsQ+C2/YSM2es/UI0pB+\
6p0sszBdmNUxcJ6xF0TcFTEWlVEQaCq2HLYj+\
ASklBbA21Bsc3809L90B50Ct8XCIV9fXZ2P7L1av0Jx4ON4Pvi4l8w/n+\
4PKMUYzApymC3MCtyBhpta8eEZntjHNXWwKrVSdFgMJFerVNa6npMeedZEDkY9SX9RJHwasx/\
BiJzDen8d9sz5dfNW/lsvMAMybX/\
aNjKzUOxvc00hgRP72LFdmqzyEy4weL39d52qq9ZarRlY6aojGVZY2MS0pkCEfSmqACj67eqqSTBjq\
XCHoaG7qgYylIdpEhZU1kguSRSCnQ67w7yhGdDpjO5MyyFuearscWE1UHBIc7yLBZJsOQ7XvGkh0ID\
Pe3GZK+fk2D9ss7twJjpth3FBzA64KfBsbcGhpC5QQBstBGe/gd5kiTs3Yg/bvZO9t+\
yUmphMpZLU0WpnViqt3/rctupivFr9P4bMf/3ddzcfbj7fvAU8X5lJV59+fPtG/unzx9Xb129+\
WH0sH/1pvXr94Vv5p3c3/yHofYD6K3Foax2yvniSYs2yIjZD41r4+\
jOa61LZbzD9dup1AhWzDNYqg6KwhfbKOw3LcCLPfMQKS8JDKu7MLJKTGaqn7bpB3WhAKZ3AbiraaZh\
WkypFoKLPoRPefzPN23MJ5vGYlJXoU4cVD6liLgrMN7CNJhTdcUrTZBkocqc4D/IkNfHcFJDc7h+\
mMs6TqTaXw/TfUncWqHT0WHR67/9j7d263LaurNG/ws5L7DFY6jhx0on00EOWHbv6+\
DYspT36ewNJsAoRSVQIsMrlX3/2mnPdNgBK7vOdh05bVSwC2Nh7XeeaM1AAxU08XACe/\
TtBeKBFOu0x+VlhHkzsl1tDV6z3H/i2KIvlh/\
qsaHoJknEoBK6u4c8pRDU3cjUYrNgydlyxWZYHGP9byIM3Z6JPUaR6wGFxM5EZ7EKn1cbuYVJc5IP1\
zWooRXrswsFGP0Ymtae0/wlP1K2+8Arwul+s3lweO+iTnYyP6qcLizW0nj+WtO25vJdj4AnknGv/X/\
s2fHNI20jQxcgKFHHivQ110oLS7sijABjToTu9twn1ewIFpO4jocphrDn2ZANHSuhwBlI676BoZ/\
x7qMg4oVNZN3uGyiSLeLAaUrw/e+\
6XCJyV8WBNdphh6BFlldgFu08oPfUlTSwk9n5y3RWmoLsLrhUBlGGuoAIglx88pp2TYhYM/2rnmUB/\
CdWCJQyjW0dymJbNPQ6+qsD5IRYUse+GSOl731CKge/IrKax7LWZcR7ROLgylEWa8BQc6/\
mbQwYVbqo9JgJ70eMBaq/83dHSPkyW1DP9g25AinQ3RHAKvYyMxRuzGtV0jEfQ+aY+NERm/\
FghYIxwVSZQ253IU/s7nKpEn/0Y3e4dpiV/p/UAkXA0mOGpsp/y212n+LnqWkqXAeK+EDPyXfTUV/\
5AB5nw0EpA5H2eYnu7HTsGt7JDz+\
19axk80gS1d4fQGZ0csnxS62jByA44zrm8PjFLFPPo3CqTz5s7IFm2/s4/mvah7wfbf+\
Znh9FmTRi1JdnOp4lt1qSo2lhrbjfQig4EZZrSeBLE3bRGc00CRK1xa8SVBJqW0bIw5okXBWQWu/\
5XiaX9RfN9WsywpKXHdldqd8yuTZYMw9OqpE50TvPFjL7GzHrw/\
cAIODcM0WmRtRlxpHbVmJ0BznVsiBk899C+7tMTO2LE3lWmxhpn8VJES+\
DlCloxfEzYxGyKVyvGzt8lLdL6+\
OiCid2YDQJN3otCtbQY7eJqBggihmFbgbftdQRSKgSzcddJ9bPq2yVwrMQGwRMSLzYl7yjq81WJmk8\
A4PqYU9mz2X9WG2nYAJysxu0ybL3782/\
bh25XvuEswURXeWsrG0aMTaOFpyex89J5WpIlh50CWOwnPVq4vS+aEu0IuNbk0PmZv5etnP/\
9Rkg9D+VBdwlwp0Wk74wUNOAiiTzwqh6lEZHKi030dF4KwFbiSuuL457whERwCRJz7RsDj020sa3pC\
Wkul8qez+dr0qAQg1Sws6ar9z/0tpQiGKPzAphQ+ol/\
XaTJyzttFJAGfLC68OJgStySBgsF4ZSEWjmxNSvk03QIpzyAFUMQpldDo7hCD64WoWaRrVJW484BLr\
SVKe8UQJccO5CkGLBI79BYBHuRFWMcJv+9J3+RqZjZj2pHjn6QjcN2A2lxQ+\
hVjohdT4KoXwVbf9B7Vm5GfbyP6d3kqR6r/YqAdaOvGIMCyvF0MiqwSaDh2qnvsCcEcTTLk5rPPl+\
v/iX/8yD/g+owrGOjBpe0TCXq/uxz4uzk//u0iZEM4UMgfC2Rr/0JMi/51lb+5yj/Iwzh3XnnZE/\
vGGjj3iLyM/K4jNJKAZeJx9Rzs1zltOfnm6SSFXxdPa0CLVkpb9Dutjp50CMlMmPrlWYtyMjHd/\
bbkNlzjuMqqafRBs6sJbxAqDwZkMjdGzeFOxxncsr8ahNGNWxN3e/rmdVarBYsUEhp1ddVA+\
3p8iNVSsITEg4IXSUHLLZQv8IKCHoJonzgKyvck0O+JapPE60sDfO7ryyTcZJR+\
PY5kYBQxMl0eEvu1YYAe6aHM3Wc6vwDjJBhG0Ip5rL0KAk6cF17990VjdNMhZSFKUMhdEJ55D5euXn\
hRLxG7CE7wGy1rOtdD7JglSBSCkxn1OpOgVIX+ER5dv+\
QqpIvy3OfyODqGvEOAVDaco3gZq2tWmPSAOxdMv5R4DSrrc0+uonV3z/7vPgvn5rUDT2sqxodt/\
t6Sl/3eg0h1IxLi+oWWathB7xKp+XVaOz5ceW8RS4OWkf56uHljP2W9GEC0TYNKB/+V/NpQN8wihZ/\
BnQkZll7Z6X2HCFtRBs795zJPm+yMkvCfV88+zCcAa/1XSThcCZ8+\
4olqarlraub3LSVAPSk35Gd31OeKOID2RLphLhQTgF74MRnZ+\
dSnPi64PFKcmrhOz0kPss2YTQyDCkjnEbxt/upxmIU2otDLQv9Z3Gsfyif+mvZbX8q//eX8n9/\
86dCVn5WmNvM/8UNldTEHK1Us9qgVXXD+hxJeZ0+\
CwXQqXORMZajOSNCnTUAzSuBc2vuNROt57qGRVCH170YkLOWVpVItha81G7bHBhMqT1VFFazMFy1KP\
bk61lNI/tGWzlhCoJ5W3tlR/W9/E8p+\
GeVkqQMjiTX4SjAclLQRbOrRL79nAceeNrUc93u65hFYV8xEZ03N7lEYlz+2O12h4UQsj8vB4s3N/\
V25Bd+z7z8v29f3NwQz3Bqjf3QAskO76BVESw8viXs01NzaPcy1V6W5BObWEXwSA0x1Grsn59+fC/\
mGNGuqNACu26+DNoA5f9J6hkzp/vusa0ShZ6fLKGm3QI9lACO/EB71JkeMkUXvoc+\
aAVWRs30zJeahLSCz8kbbQh3lgzHU5uSoll4nrvl6SBUodnHyz6565gsldMf0Qh4vUU8oWwaWwm9GE\
/F9YqPRs5V6XUgtDJC8tFJOnj24CV31SHOjnYSQttyqEdW62X1GzvngqIj0zjOJS+\
hjFdOVK6F04jXJ7kFZpfRjLYpaJ3r88GsKzYoF+\
W782qJeXjaCOuEiPEAdIE06jQWo2qWYmM87jN2NykMcIBRUnXJ6VsdDPlgHBWKmRmXmfH2ZyTlwC7O\
qRNNhQ49jFFIKQ+haEd9qjQbQFjL5Psj6LRxR67oYMg5JXIMWwT9vMf+\
cAkkRjKCwk923iUAWefCKKpo7LHrOlHZBFSNIzxrFezFjUGyEINvlCtLLchJ+\
9EAN1WHNxEEX065uLlAKGphLGkMqaY5v7fOsSRRE6zGJ5UKndoCczLxadGwRm4pjq2az094BImWqyO\
wXIJ9VVV8+S1WINMrqCWh0srEdnUV1qY75xIr9vWury3kUvGNK5Nid00bBI7ICec0F7lH+\
xOTepPu56CF+f3Z7QidmB1Dg+\
nPpmKvltuMmLM7aQVv2jsYr8EOZiF1YPbz8hvSve7gyHNwgKAGIpYMsdzWILcid27ESq/\
pjBkrKXFW+ZNqDBiRPq4oXFpa1ZDiIblyZCUWGUDgCAV8RVqAZ2s80+\
1Yliyaqb8fXFLJzN3U3M5SyWRPG2NwU+mWXdgGpUPl8CGIu+1N5uJhJkwxVr3ul/\
K6eMczpzZJVa0iHZLu+/3wQEak/WrOyWJr0+3RrS9fHjO1UbMapn9cskh0mmOALziyRy+\
Mnew7X5UQXbnxrbOrhDn7pjvo/laP+puc25SrCSEnO3YlNUvT+\
lG2EQmPIOYsWfR5JjkIGm68t7SLkQfrn6lsU4ePs2ISjPsywROw0/\
hDm49ZxoCvZziuJRj6FQxoRgG+1VI6j/\
PQ8okl0NMd5vtfi9MTOy1mWjpCUJzqhg8lOlXr39cLCT53N/\
NeYh1vSciL0XW41R4DrxaDZv6ZKXVwCl/NGH3ZPgoT+\
cm9nQ4ZiA3AT1RE8UwYhyY5mtIb1CnRim6e5/Z32iW/sgkTC5NchXwy2+\
a86U86f6EyOME24wUzA9hIDxuvgy9H+\
TStcthBvaKZ9dKRVlrkM4f9MVw6NA94QL3fZbbtYPGU1sohNdzVK1QdOZnW0LmAuVXFYwRrV6PwFvn\
y/83B/sh+0isbAsYzlT2Y3CWIInal9yrwlOD+qGRzLCWYqt6gO8kxjmVjfFmc0t+\
bQ1k5bkpCflnoUTHaTEKpMffMjXqzcuHTaf4mzS+XaMPYhM/\
0mLyroyPwzFtoIFwvp5GNWig0kJTCC+GsTb4qnzmrnQ/DPq1TTE7+\
DNFxp1qbAR2YslRbAogMGa4bmASLbm0fMZT2pHVJ63cmDFT5zcZxbnWovTwGQ5MdpvTwHGN+\
1fFD1oGHqiGik4TjpcX90WU4H7UC3m/Lw8qUE6TMJaFAHIxxWk3lFRTQHoaWo2VVHhnTrAn/\
MSnIZxqCPLufdSMcGkBOGYjWvOu9k82WG1pMGiIi5nAWS+0dNYfot0fqeka/oZ/oTT50xc+\
c1Pra0Wp0ptNyZkcOShje4gn0+MAvyN6J/Z9Qvd4GnDSgiX3rVJTJY/pYFS1Gk8ESkrD1n/\
qfVDsu0lcGRatzv31/o09ovHQa/\
6P6FqQZ2cDlvwrM3PksaMWsz2gSjKwD8gN5dDMdffmK6AOHIZDwyHWbN23zvjxfd6fqAxRx1/1HnS/\
5iGTyF2EdTBLHodHcUyEV2XjA08+uQGahuOYWL1Zv9B3Nhh+XvcmUuVoZJGq7E/h9WquKKO5DxktV+\
MBmXr6dLKRUsgQtxCQQWJupYATC0hDmbJZcqc+lXSNEjHTJJM81xp5dQCkws5v+\
UaA5JAAa1L2WI3TDnHupFXCoKLy9drWwvBato4ZQcQtva1Z2h09lu9ucU4nBkA/4Gm2tAWeu+GRv5+\
o94oQ7Do3NxnvMlYcesz65Dl4Vx3A0fJXvfOH82nQHnfAJaWW2BcR+\
bEuo1J2q7Tfl1fLc3lGQRth0d+gFIod0kAhPmeqZzh1xxTDFtbDyvkQJJLKNs7Gwn9ZWP7hC2CW/\
8hqiTSyCyAcvt91NGyzE93SK9mIFI3HoTtmmnXfX5sLcj3DDQDr80TjsXKHnN9Hi1hPeH2VfU0yDPX\
2xKoo0UbdU0qk7VPMeu21XztJ42SmzHL/\
gwwS0ZuZY2Vddw5pT1j6IgQo5mvcw9xhd9MOwz4yI2JhzVh8Zf07jjzpN6uiMWS1HM7eLZNltc/\
I0PpgmJ7SZZNX8yMbSYxz0ltPdaURNEysGE9pvHsnYoRCu6cQS0xk30ejlxRwwm4+\
Xh9HIPJtBGSkmGa+CX+\
SfEF4zF3q1ZbsiUzYCXyteVtxIt3ZwFT1xj27Oyqu8ihfjLJOK5Mmxrqd5ra9Y+ZllTz/\
hjUcgEQUSaTBIuH900E5SYxp8it7Hnp0IHCO/ZJ715Voz+\
GT9YJEy2RuM4G2lKuvs41EUkJR8CrNiPaQ/R1cztrL8SRtKs0rYv45uQINdWIkW8jkrpWtlrEIBhy+\
u0+BEocy5goo1PigcdDCVE6EhAV2lMUG6T/ADWqFbGrRrp2VvW2gXYnn77vW7r2TS68uv/vurb3/\
48buvvn8n/3z9/Ztb+U+\
d6XqH6N3FDI6K9t9eOPxmhNCKhqK5cBZl5VcKiT6GCTTyUklxF4SrtCDRMoo9hVKyxxf81GlQstyUN\
CShDzoNSX4/RFGWN9okpL8o8pZ74/RZ/5RGtmyEMsvaCA+\
MmvMAfvFRWZTrwWph5VollkpdzQowzbB7KiCM+\
SZneVHPt8CsYviM8Xy5u1MOJ5QME7mK8kTksh9a6PRLjbf6dErXSUpRSFwk8O6vEUwhEXrAstVaxRG\
XeByy5D5U35DNCty8Xqa6G63JnEXy9mx81aECv6l4X2rVWefzarKYH75PouSTXsLGdjIZsH9o+\
peyc7WkkfipqYYU5IFK7gJzCPp6o1rQyW90hsk9ZQec5cIIbIdqbLaGHc6JayLUIZ7yQahB85vIHVp\
dMKV42mD0xHBIp17oYZiEDxohAdB8hoc2MfYStpzL9i95MjDhdSve6jXGaFUTg1LAMrGT4Wby54+\
9oDAFz/Z3i+klQWyo/uVdlqitOhF5LhYocchW9QlJr4OTIvSq/\
6dtgsxsImpqOnP4bqAms2Zyi5BBar+qeOqiWq7/mpQIbMYP5/Jg+/9r9D++\
EHKlTisKg4iiKVNpdYPWi6WfzWxispWEv09CREy0Cx/RcD+\
h50ICLh5MnG6MEeFhEbdqfxkfTweogqKd4PIGD+\
54Xu9xgwjTnrTxyj30pJAnbTDMFlzpTtA1cWavsBFuIuaCAEGNhecqTmRnMY6YbXBUKE/\
3UxI3qd7JhA4y3d38VVRvau0+j7J4iRRHgRwOeVmCtuq+\
suUxtVxpnnJ9bYeQYQMb58XqH5pRiIURwB54i1x8Z/Is9cZSLDtELdmXqp2TxmhpAYhB8/\
RlQSLCqhgyejkRc57oKVc0HmkGEodJkqWhtXaHSBQeSlTw+k5G237VgsYMXMKjZFISV2lny2/\
Pzz3uw00m/3RhvuQVy8kayGYm/GrMv24cdzNOf2cftWFm3IML04UOZ7or8860MfseXT0tEcgW+\
Obyy6HV4mh3Mhk7HQSLXoZA1PvtSPJVnfVxTiGSjPG13iL5ek5RoZzWbkzyDxjcPnNA1XLmLk+/\
lsjMRBiX4BMbqS7es1U7QyYotoLuCRse6RjxTKJkxvZG/UTlEW1X/H+Q0LxFOZqiE5oTCYUO+\
MtT6QP5k69ts5Nhrmq8H8LUeKXr4McLVlLKqD22JwX5NqQPooKZtaGZhsYMRDNOJVNXUWnSYAKLexh\
Q6ihv41Ezet6KlSlKWEJ0+\
dog1SiqN7vdsJ57jmpeRipXmnVqnLpTDtsYjjax3x2OKNBf6R5conyjwEYU9DxeKLv5Ii4mCLc36oL\
a9azyc1LAsPffvU7iyThPsi6SmEEzcuVAJCi9aBU1z6TTwDhP80DYxZ4FiLK8/\
f7F6m3bgqRtikFucsNJwUBHm2CLqVO4MvG4zuRRqfppxCOzf3K0bJ5NKxYJpDNQETcyKAJLKpzcb8B\
QWg12fH6A1bkO7Fmc+s4zjY8YRFCFA3bBaEHV/\
VrSL6wOlaWrCvbyqUyxUHxBJyiUHfkc8hSWEFGXpY6msgzhNFaR1da3EN5UmNBorSuRsNk/tH8i3/\
3HmzdfvX17W/5Zslz85PV3X63e/c+PX71d/Xz77pvb7+Onr3/66vXb9erLf/\
wk9Cby429LtvzTqvzfu9vXP/3P6sevfrr94cu3pNN6U6LukaESihMg+\
RBzUlcjUdfSHRSV6iQevsXZRvgxKVXUdBkldyi2pnNn1iRCbpi7qVCNp3oOh7zvIAkeWnkknpZRfGn\
El3CCPZXnkOm760pKwh5Yq62xRjSuzqA2XFX4gfKLZldy+16OlcrV+\
MSB0fyZ6BuLJ1EgdzYKWUKfSGAsYvQbniqJQob8pgIHxzndlJ1kMa6zFSijF2UmU0OjWraTHKF28Cn\
jeuGwXJXmRR4qeuolXpOgSaCorQNy9O42PScYS8ReDKEI2Xx7UT61NwchukvTSY9c6S/Oza/\
C7XuLvrCBdCXFbEOaiVaEiDiszK0sWA8ZbmsP4XV+9tc//Q2X++yvn/\
957RWX3x2aJzcUNcGRLMX6dzc35Z+/w2fjEeulSbQdvierIuJOUjDrE3JDv/\
jd4tvPHWNEdrt2Pv9kObILMh5zkCdKlj+TSfLnVmds9O/lWb2Vj+re7xFWlpS6qXoSeQrKz8CmO++\
miYNfoxvJ262L4Z9dfKNiQH7u+\
50MaaddX0vQys3e9yLEeSequqSicY1CFkODBZbEJnU3CIckcPCWXhu4UEIVhFTC5HNonp0R8lgM6Ej\
ZniGT4jQyduST6YvCLAsUT7JMetNyF9+VI9Cd1QB85E+L+9i+\
L372hlqX8SUwomUn9DdvmuFB7OhbIRz/XigEMNPYI2ByqgDEANd3ui05tryFq/\
5TNqakiPifaMf5cpRDDb515If9yiJpFGGcto+O1po4EtWa8SeaZB/GsRbwi46Sbgcm/DZUMG/\
gOZpWKndM0cnm5/q1C004a/\
rFxxLH4Lx6N1h6Z1oQSqTdz8sDG6826jdm9SO77KX4ohL9pGumF2Gd2AwurBkEtb8gb54S6ewMllV3\
00EtSWB3rMuqe4GOJPyqYqxTP+C+a/c6lM0pV4fXdElaMTLJr3ZoEjQJJ1R7lvk1Fr642gZMjZ5U/\
4FXof5g51V1JlGKHuoftIdhQwjpEXnobq1JnTztw2VjYhCDIVEP0kkUJxm1KNubfBU4TlOjkzE8Zpm\
rUes06OUFpG7kXBLfZDoE/ldySCQmdefW1wpTs/gzakjNYe+W2PZtIsyuPlfdaQWCMPE+\
jogY65xefu0E4/05vk3TUDt+Gr/Yu8TTOzQPgUDxSSXx/32wfHQOL/Mvhn76B+\
7TYpvuhOTVXkG5v9d7fXf5AfIayjYSCLsJzjGqcPNPKu/JsPO4gEKoVVivN4avgfyJEk/\
mGrkVUGzI2oxa2I/zVYr+Dxj09SJvYOCjlhiyl9sh0s/ShrKABZRPHVk7j1e5inc4ki07FY+\
XwaGKO/Xpn2k+wPRxUn9aGo9yCtKFjk4EaNMDuXMhRo0qNLY3xQ//\
SzAT4anHqxNaCkwL3ttrg7ICicSTsBNHHxp94DkwuPHGMbfJstqSjCd3I8dcEDXL99wkYDsSh7YVjB\
ifRUUDNKSs5HwSiH4MBugNGpLksnC/\
4r34p4GufRitNTcTwgNuWasYzfBeiQS6nbQg2yg5L7C3H0OKO7ka3Sf3l7s2lKph6lGf2bT3HZ/\
gOPMyfC8H8G+nPI716BGs/\
Bb3dZBWYwGprXfdO85IgiCyRtAyepQ3EmLruM9UXnDQoI7NaDyYOjV4jFOv84zPtd5KHWObxiza0kt\
Uc0mbrT5mcr6kbk+CINOvTKNUyrhnUhxZQny6rElbxsMnA8pZ+QroE8CtY0xT23o1Q+\
ptLcNdFvhOCH1oYKb9aGt5TErzlkVddMUnzA6801OCONhEWreXCZ4gg2tY+\
JUbbFGtSqCbSP9Jxzkft17b6i6ZwYDd8BVuMDxU73HRWahBGTXPoT5pTNlm5dOTdYhqjn2f60hrxkq\
brp3cBIby9FqSuGFLLo+\
oSptIQvaAm5UvODlHEjHwCiZHaWHyrqD9YVdiPFbMhzz8ZfzAmfghCG7mylIov6kY4dlIlMHRuSJZQ\
L6H/HNgH6+uxGRGFTFFnrmaPvurlCzIYzoO0xiU2TYgfM2XILX/LkJiEjYCgZZMYZFYljSYE/\
5mHkW90K7dSgygZzZqQ0MmC+1MoTVqXB7gT7O1tekStk+xLPmKsUT1ltkcSnJ/U5nRt//\
47jupN2rJ8sefvnrz1ZdSkxQC5vKvtwLVefPN6x/fffXTWxdamePClppbOqHQ+\
dSFPOdRZw5epYNg5FUCyE5RFWCkAQ3KWCsEUb2zXWwb0daKL7R+\
nZbDEY9UKrBpA2HWDFmRNQ86jheQ7FIw16/\
i8fSUgwXYjvqx1dmYfParr5MiZrGn7eWooeCmpGIXQMooz3JP3lGMFSTIbdlvJWa/HHL3t9/\
nlsoMQPBAdudGABY46RoEegfcTd4rM+bWagpBG20jBSGTBapT7GKtnuPM9+V5tu+\
TvExZC7R12SOTGExJc9fyISnyDr91LCtXVCpIY7wkxZMlY2S11DS+uCC/02dNn3W0qbwFd+\
WP2kP7mFxNXUEw7mI9DBPrxeZn0K++bx/sZBAXPnlneDDn8A/JS4DglNA/\
7dZQHZrBTDsGrvfNA1VSz+PC/mukon5Xf0+NDNSLhd6Osi4/A3uUhiwAnDC+\
wemwUr9PY6EJTSrJk42F5k1rPC5nk4hP2Po8nIWFBtZ0hwJliu8qieBTpRE8wVyWywVcVc2fPkLC6U\
Jh3GmuBleUoepbeVP/FFyFoETjrFrdqOfU/\
rL5XLCdiawB8ASOyyo4QdPLsgLCdWI4MpW9UeCNyV3imdY2a0IzoIxFUzogIt8y35vBwQx2LyBJWc9\
yti+oCpSk4CGmCs7tP1s2DmR1pKvqXDWVXvYSXQQe9awsZ/\
wiCUDptBmGsnZ1z2CrZDgrcFZgHSw2D/tN5YOye8iW2ij9eDamnrESs+/TOPDSdRQ/\
DxDdC3h0CrO1ODOiHdNWZ+yU7vMbxRV1g03h2cz9dXuZ9vzUaooDWga3v7I1w0iuVL0A8/Zz2/\
DkxgFPrgbH3CeKq9mefu+\
HOEty2lxLow2khKSidLURYvptXWRrwxZpsKTIbJy8pHihvxsuux3OW5o7r5QhJ/\
MutlvqXWLDAb0N8XcnjNfJtbzUqRDK49wHczJ1Z8qRTjVEo5HE3Sbjzai0uR1/\
qYjJskufDJylDgX8rrDHEu3cPz9IEDsaDF2K4c1zKN6xEU4Et0IwVfkT+\
6IHvhI1UXbB5NaeHUEFHJZtOi0bWbdMDVF81bDthBpHWdRNwlm+\
2pkm9ZuHURpNgE4UJ0eqg1gPsMCbalYzTlbSiSjWqTTmYM9g02ksvY8ycIMxu2TaNfvJNSe2DI58TX\
lPH3aOgih7m4iNYoAvCjUF0bIxYAhush2bEkA83INQLxHbiBpXIyRxrfWPo/+Ct/\
Fi9aOgkRIX6pAooMmorvaZ6YtWMU1GGrXU7lQN6D1nehFQ6YInRRFhv50bZWWEagtIqJ+5wZRMx/\
lFYVFG58XJqPQtZS1N4cdH2HXG+BX+NiWKedaJsb06uDyDrCzbwUFnVFdqbc9Ao/\
fnqpvMyuArIntOUQqmRLoqRyozz2RBeue293nzifatA280z1NQVdlujx2LebDO0o2OUY25bHLwrE4Y\
XOHsMTKfBJQG1pt9JhcUKgpXKvsFPyvf9vXUMEraIRlrm/JVfUE88GnG20gVUjgsviiN/\
gZgvVo00BzEK6PaPSu05Ho1mlZlt06csE73P1eQNumvswyK+6/V9NfVcnz5cjXFCaGwUy+\
bGwM0nVwhteHzH9udzXUNbfphTVFjtyXr8Njd9XAfldDrqLrSWd7VIHxKbTvjV1v7A9UD0GnfN/\
mBT/1qieRGXXcT+w60Pix4yj9R/5hs6CY71bx1EEloVGwT/\
hg5cqxhjNBCRFk4NOT7hL27eglSX2kN3F3+emT8hWIeZM8lwuzGiw38/\
sztzzvyze8OwM8AZZX6lnmUnYPYsBIJ1kl2lCDIUbZ0AFkDaZNacu+T/amwbzFznhRnhKHhkCYlIk+\
sYe/MFulLZ/c1OUAqr2nnUDynve11XthqkqymkNa6KK7YvI/\
5zyAqSBoH6Z3nR8nbOER28jCR03YoH/VaOyzXNOtrS1jrt/IJQu+smq+\
tB2uvvbTkl2r69j6YkwM5aizFzNcsVwrxMBMNM1pyDWpProEau2rhhhZpi38jyzhzsGvCGf67bkwvv\
EIf8+0qLYOApsqJel4tkS7a+qAfoLvRGPfumocFmS/\
jNxNCdsAHiscjGDmJmKSpF9Moy5O2xkX6Svf22cChqKRLmUeMhWuxuFIqkrWzv6wlQbaFdcLTrVOFV\
tXYAF6qFEU+RKfgEjahOmLPEwbno/didECj9wIDU7i2Ue+\
Astnowlo30gItp4vddCz26ZiLcuNyj5VA5qvqhYPxpD0Ug3ZFsGj5tfN9zWhy/\
vfcvbkS4YKmFYuvHqiEmPSDMSVykOPzwaHvGDKdQ2WvEFNoD3tGRhGvejK+\
eo0turITLy1tW3qs9DgfI/\
24wvLB87AEQEhV1pr2D6Y30f5NRuzAHNPuENwlJyB8Nz5N6px5nFcWvlyhW+\
fgkHmNks62PnLRJp5IJO0VkQRqdHeXltH74XBjM7uSCXbkTNm3BwzmHjnHtUhdUo9F6uMi0tGK8h3x\
sEA9lANpECufbQEgTKZhVv/\
XY0X1OOaV2SJjqtuGcZBXXbbqnYx8KvnVhwAr4siLf8YIxRU44gwTt8BZum2B3+\
SMxlHcICZHtfs6WMYZvJYbj3EbBAOEkZyuVEEBW4gKKOkJvDQ2mioXLkagg48WUZ1YJgRSyq9fGwqT\
9tZ4/6RdPbfBkAVrLC/LGd+8PT9eHw7C2TOoy64roSAZ//\
tElbQ472ixCGCBCeKR83msJPF8ZS90R5TVZFMaP8zRdcqyqK6OmCoGUGYDbeQ1G51IWb0bCjKJB4wP\
KuqvJZWATiLvppFTvsiYkCrRUGEjs2Ht+Yxiqe2Zapjne13Yt1Fr0Kbk6rPPSgr71Q9f//\
T6x29u37z+dvXl7dt3P91+\
8Y93tz98TynyKRgmvXY1I0qTvAmnomIgCzDWslW1OsowbKNUUyURVBKueQI/ObkxTPGm/O9ZuVdkm+\
DRvkNBjnjHsgEHkejaWFmj4mlpglXqION/kQHbFOzmOdGpAVhcbvRL+958tL+\
uuFvKTd7ALsEBeEfoiWD329NMNHwKzJs0XJ0cKGeaShQUtVHTPNg6+6sMZJRnloK3wxNN4/W+\
zajf0/8CXWxs1i7ZTG3c2W6gO+NqC8ua458W98UPe9jHtZV3qL9G8D96IIDfj5ddZ4MGSkEqP9+\
q1AfJ34EWGbAb3iVcgEGoCJFQcLbyCF2kPNiGPhwasTLBSRlTirC1vxgKJeFHCQpnGRdGRwKxsscFS\
HpQ+61XiZYjbZTylqwaBL/agQ9lBEgFlVPdiAuW7VZSi0Fp9mo0XbV9LCPLTd/\
v1dj4yMWgtTo813husP1tl0HSxvHQCU4YGZacvDwuJD/8B3UP3o5gUVJ9HSOOc/QuRqQ5+\
922Y1abG5Qmf5iMFg6v4gP3l2OXGAWl89GhACVSresSDu9HKUyVfSih3Voyy2FQa8/\
SdIuARaDW91IKPpRkVI2m9lpwC2vj48ibUXAbYuND0kgW26fkfXTgnMYiNSDwhdejmXynziUHgX15W\
Tc37oFld1sQPYQZNK8UCakweHdnrR4qbFgpOI3gPQh9ovgUnRjVhHbRV+\
JKhgcIUtGPpXmEcv3LoWvOhI8RiJLnIV9NZjZV0xIx0WxRHLqM3aHQqfteAQDaM4jl4V+\
tsYWjegikMU1Vq/qdfpM1SYmA10fZeagcOIeGvYqyGjGVO2VBk5uW3eK3QUGNuTpK1HQUIJg82r+\
JE8C7nBMorCeSj2xQi74jj9pBIXk+1rA2hNNeJwpBkyBB5GzY0CVjdUZlWP3xz/K+8Dd/\
wn9SqAPz19gqPOLRSDeQfHeyOKtL+\
31Y23RvMGduQukLBpYcCSiQUvZGqHaJVJCXMzB4NORYeCSBzBVbSUIOxQWGKuYkXqhRs1hmLl6JG/\
igWWoZ1lx+/0dbA57SXBrQrYVqsvNKPK9mBHKOPw5Od+tk62D95toowFJ6PBpJvStXVc8ZQ0plc+\
vgAE3XFMitt/fRuYEluv5lcrnyVcq+8+\
HYgy30YIrEVLhHJBYCWtv7PZi4pNayEf6aA30J6D4y33maDkXDkIRmGlFr/\
90GUW36IaLTmgS6WtFJeJOGEzu3XHzcNIKPHhPZBDT5uEaRq8s398imy6FV+\
3mQsU5RBoyAOicBxwypm+y+K8TtFjbpiO8iZ3CkNvUye+3Fb8RcYJu4zfhNHAvyv/CB++\
a8xVxyLMF83BP75trS5lc12YfJBGbj95vG817arQ5tIkEB+yyXtVH1VG+\
YTEf6G3QkzbQhE8VvU8Akk6ZrY92pHpfu0abxjOhWzAqNPAIZLU9q0Ohxzc1Zhyc0g9ElsyDIoOysF\
gPHCMsnbsSimycy3mXpvHhBEm+\
hdNjENSWBwjbzy6gY1tnp3sq5K8EWx3x6Dp6zTV4p6gy9MwGO1rIfjC26xj6sZ8dWroZQzNoksmu0e\
OxC0rXooo2+ofwZ310CuMv5FPTo5Bi1ZUm75UmCBZTadVrK/JUVIkPPG5bTw8E9xJcxCov12BbDr+\
RfRw62ZIof1K8aOu3swAVd2CaPhvEzjb59eCHiILPDfotBw21FY5znYnOlZyzV5fzayqPcHy+43I/\
NqTk2claHEePPZvf9hhKFAaaahwfNTvsH2XLyYhXsYiBvbBTJUA5Kxilw8YO89Rt0ytjjgvlBt40zP\
E6dqJ4izzrRWei3Db0UjXSeGPEcx+811TAQmK4y78IN8o8NkJl6p/\
b9bAKP2vFxbSPwzL3VkQs1yrCc1RbBMQV+CPYTq8jDeeG/\
1sSZKDERhe8AOGxmimdm1Gs6GuOsfRVD5qp9ek2YncIh9sbd+\
ZbjzLqABZhinOQ14liME6GckJdbqL6hWc0JEYXaX+\
A8sKWxBp5GXnkV47knP0qVXsYLEmPCWoOs7PLj8AwZsStwZ5z70kuBwThtvcHIT1iKZkrMMYVH+\
NLEcMbg3COydCL2MUyk2bTwnUgax8NRZb3C5NemcjsAHLbHqp0k0Fg1yWpeMP5C0wK7IpmN8Nyg/\
IGmlZECyYjwjeie7HSPQtPqF6aqulEFSZhsz89qe7xgohbRXpe+CVtLhvzUppV70G1vL9k/\
fdJbwmDsafWDGAhFiiPdJGlA471JZ+\
r64IGd3d30dWDiyvJ41TdxhytPKHejTvd0h9hAAluKd0dcu8ZuRB6w5by1AbLL5e56bnflmB+c/\
r3531Y1McPOMzdjPy//\
fSz5wuOUCL2WwKVmLOzMWOuuNHlUV0y2s06QGx19arjXdDvscldHSHN6mQGXj5dvIyb4vs08dLI8fo\
qmDE7YHcy6gAAT10ZwlUwHWSsEvZX35rSmpJKZJ8txFayYrh1pX1lu7lTrBTrP9Lml98nCt98U2wG6\
oIrj2hAiYLa15RcfxGsLlwjYNdthwuOqUVnb2mimIFUG+602UtFJMgCK+AGKPjUSSalfau/\
u5IQfesRSV8d1Wfhk1QsfwQfelvfRjUrucVdeTGP9zVQ0mQzW/\
VRWYfWJFwN7xPX3nxo7ubm1MS7XB3kQWVx1dO7agOMr/aqRJRuhCbPLrBAOtJd1ZjFyWLhmu/\
LXkQVfifbNUw368/m9VmF6U9LjsWMPoPt1W/\
YFUouKYWu68lhDOBbJdoud1jm5cmj4i9NO2cdy1EmOXdUB+\
anf0XoQu9tGm0rBExI9VUQVVQcSiVUDtBKTRCQRD23z3pf9jfSrSrShQ28W78pGODx09au3J38lHwO\
6XW8aJC/hY/OUhPx6I4i5M4C6l+F9SVZGf6CydZ8fLsxrmofn4q7Lup751HaL1fNJtyQsj+\
knqv2ZVC7QBp3caviMyZfDS7hiGzM9rDgnB2waPtNN2jKvp6loNtbPPiguM3lWfvSZBmipDGiswzLZ\
/VBErqEQeQljtngCTqUz1ZswbtUk8vldTohMxnslxW0OsOeneh3C0qdJ31iltol0vbMTxLKRAnfah+\
hW9Yz/yrU44Zn0GBj/\
wFcDmebNhtQqt9gTT9P4g5WHAqy1dd7Z7koP6V3tgTiL0iK0JpzpUnLGAb5OtTpk4yoLbHdC/\
Zw8J5TU7NG+0Xl5Pl09vR29+dSON9UwmWEyfJ9PbsQ0ASIQUmwKGt47vnk4gg6A9l+p8J/yy/\
DeVgxZqVmCwcwO7d1v7O5FJGH9PdvQI3tMOnT1m1DtPj/e6KNkdtKct7cKi5LE/uBA7hTVXHvd+\
iVM8tPDofTKfWN7Pspa3mGbkUf4XBbcvvhCnb1B9Gq+LHf1W2MOV7D/\
GQ0gBEQtxrZ94GKof0uo0yvQtnnoxCMS06oaYB7FGh09Mb65afyxyllQFn1iLBtdeOf0Vo04w5EOji\
MqXzPeJ3qw1AySl+L/\
vSEFJ1AjOuAuOF3DKpO4y2DbhOZ7BbYnqXNSenZ6UnD8d4toAOUsxZrD7aGB327JLmivEfzxJBCTCS\
6vPCbE9Aw5/6H5CzRwbiZjkVCYvzDbFqaek3RhdxfwF6aZMVuSUag+\
HoBSgVsxEL4Q7weeS3lH2TK6cfq8ezx1TLnSmdLO6woJVbUizwVAYqmrTZE5jTqWTj7hpc0X2nJC7P\
mk16q6FO0vDxi28b+Mno6PTCadYBvnsPS+\
WueEbDkmFqdLfUlk0XWRIHjz01XVMqYwf5lNxwR6VTuOCLhkmZd4jJ4+\
hmwe2sjXjFYjMx543nQK0WuFLns7tXZ0ay0dD32gcDUG5qNrWEn9ZYdq0fw3g5+\
45VhAkoLeMr2YQk8M166mAyxRaFkRuRiSF0BFhu8lTa4lirZrOKMbGhhyjJ+\
XPAEek2hFxVqVL9xz4r1NB8sIsWx2ZaamsSbZSbb99XTMKTmOitYBTEBGZSdUTyX2GZ8lbpzmp80SJ\
Yl1ttSnqcea6Wrkoh2Nlc60bfrdszoSh3+h3CQp1BCNBp7Z53V9PDWGKfGkNlLzQ7OdYOCe8HSC6+\
H3BhjBaghbSo0XEwUKBaP78cPjA2Zmha2C7GDxCFTc3riln6+FhwLi/tqzvb5ggrmcz2ZqF/\
3969DRyYSuefvrke2PbQDwxMWNiyJliYzOWfN1WhP1AWCRZ3hN7D+\
Dn1boQH3bavyj7jek2Xl2xLGyhm00Y5aSVIx4G/+\
ncpYl3mufhr6WVHtKMlFSU5QNuZ6U66weC9EZe9VuPBx8MLRXJfGYQWqI6zlvbSjZ5lMnbEX+\
4QDSmzdKpC2S20+OGr5M/czJhdXM+M5gtJJk6imZcdURqyOLrypJOg8KWAkNbKbvf46RWH+\
p9bMwLuS5S0BAvPQKnIVk10BwBkNU4h939UZPj9EbStAmxkgHxUk4kZS9/\
ZhXfUgl2zqGfL3K33rlzE7RFbnaXHPEfFkioqoBsB8VDEhrH41dXXhjNr4vAYuXKIWaV/\
d73EyKuqqtnsiiGNVBZM03vO3zauxNs5pMJTHZ26yACerJ++\
2ScCpPEhjACbi0ZUArGUcgENrLrnmkMMX23O4IhyFdZzyd8KfoLHp6TALlUahYeAlXY1oVmNAbX6yI\
smSEhywLvjm77ptc3Cfl7TQONeuPSo0lyQCKgIXOulHjzTHUAOxSY0Gl7wgZZ/\
U6D1OKWNjlLMhXSK24avzorAMoWTPUbpSxyGCHsd2w/\
SPKg4KXzR1mQB1rSnqaFk2Ak68RyeT9Y5rkxU3Hx7INBVJR8XQLBXSUE7ptys+\
BlkmsNkmCut6GdhqdrUhT123Zfd0jQZlIg+\
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\
YeServvRKtI4jnVoIiH3JQk9U/Wa89TX+\
zzvXg1L6zu5ekO9scfKuXUgRNpXrt2hZXvkQZhTmpWHX9WnSvpFqywo++\
IIV6lVvY4Oc0O7dTbxKeuDZJObU0Z3/P0rSU7fytTjES2fubI1iw/evfyXsSSzU0zxogiZP2/H/\
eiXix+u6r19+/FQWjL2/f/vjVT29ff/ti9ba8gjcvVt8+i+Zw0DaZgWaSgshem/g5x3qhzPsoPpHc/\
qRJwKYYkD0edTOAz6QCYqfMSlawhFX3VmIzZp0ww1ICblgYFZnrhBo/\
RUrzMuJjFLKBKtSvglqAowQd7MOmBLHJ574hl1Vq1HIy6wlUgT52+kqk/\
ySm83mStb1lQxCkShZHCyTJDsUypbIKOtSxEfnpN0FaRoYyR5UgDBhUyjruXO4bwwhYDpkxeYkCoUx\
7+3A3FAW03DHMJ9tfye0chcYUqADA1cHoUqt6KKUdP7kLEyXfp2OlapCe6OuMuX/\
yNXSDLxO3hTSrQ1ABHE2nndESNpPkbKIw4vM+54BwAJqbFBUmFN/\
3Bm1qpFIF0uBl5g4O5AxRx64r2PO+tByzy6guSHtnlzFEPvhOqagzKV8jHXSZUQ9Q3UW+WH1FUfK/\
9+cNInsqyK8qMmZbDRvrGQ8USMfWYYW8ep2xjnDK2l92YhkumP5UBkyeukEDaRdB/\
mFuKrjClc6GmILdnWEh1DfEPLDi/\
lB9qBi4lDnARAOsisdyRNlHSg3XnO8umMNdXRSdpMukPDoCWz5fhlEJzbEcSfiSizgUx7FtSWxFm6t\
Xx9sYEiiKXOi6mljIQBLgPlOuGHna9qJYm68FNFEs5ns4wb1l0koyuBR6u/jpMK3UrnUK5Ng/\
glBe8ILJn7w098jKG6suJc7952V3h6r3U1Bp8R12v2ratjOZVsbMJmqyWAL88CbOQpm5oGf9C/\
UvF6Tw5cVrJtUb0YkLpVTHqHOhHj3nr3yM1sA6jwrGwz36JAbnsDQaVtZGJO2Dc5fY6xRu7PRs2mPS\
R6waskocURUDCR5qEXVgs8cIvThNod4xEFTqOtVlZkYrNncP20oRlE2JVBorfIHKhJU1c2zaqQ7aA+\
OmFwdnqIuT+jtsG0V6ROicq4WB3+\
3Lo93QTPqDDVzv4XIChsHK7wp9s3GhGn1RDumZZJd7fimFR3qBkTliz6YGj5QsYEoH1BTLJ4Egm3Lc\
wiDTuWKc7Vpza4IFXSidO9OSA9AnpSnTDQ/8FhgeMMq96S+\
mDByxWMJiLNWnxYpgkhRxC2B3rUwyRnjoO0U3rxkN2kZJw24tyK7SIlsXrOOEffnqPk+\
eNMQL5Hl1wk8ji3XtV1xrj4IyU0JM+bmessW5gaCJZCvO/OH0GL3Vs+\
YqPtXy3twQtDdE5J1zDc9VM4nLVYqmyjFFOZNDdWQjyzU4xEbtucRkZ+\
eSs3qiWYhoU1Fntm3M1pMXHC39PHh8cxNE2DEN45f9ZLneWIzupxWt1lwX/ugoL/y+\
JLoRrBbrgodUujXF6sjC6mBwSCVh1WIESo6nl0rwF2I4urtu5knO7aOIfPogydJOpAwsUGwoc4xKcx\
TdMa87pghASrHm56XV16mbZKMSVMRShEvTmFxO4sRVZdUrA1Ph9no/RpB0fU20/+\
UNGeuzBRSAKq2Juep7NKydSkI3YkbSeglfWmTm3/bNo3jI+\
kXEwIMRKT6VRSZhgNrv5FJvbghufCaSLGZETLWtmbGU2QthK4GVPuM2tUXU1XoKyEgAM3dK/sBt5l+\
uvew1w4LmhLKii4aVJx+\
292wMkIw7S60Kt1Fs2mLw32M4ojxAs6P7QTStQjRHyUserAvsK3uEmtwLS7lh8Odp95NCeoCHBtSPV\
WlriGppT7tg51aH7AgNukdUqn+51EqdiNSng264L2GTbw/7FUe4sHuK4970ozxD+apyo+9RWu+\
GlYkBEC/dDeSzMVp3cI3vmgcjeLYG/tAKpoEzaCCh6s/\
R4p1gkNep4nH2QehiNWQE0RSQpHnWdLu6najEU2VDinCcYJWEq+lW5m3R1JEjIj2EL9oSWxza59+\
Xk96JhcDraH8Ri2HMPCOSfwCYxMpSik4wTAJPKQd1Z+AlVd7lOf/\
nhS3txnWcygPdAKyAktlRWiTnB2ih3ipJCSmdobi4+ut/kChmvfrL58XWQUoUJwYmGXKvR+E+5nf/\
8a8SpxgeAw9Byad2N/vsZ3/\
6D3yYKp7lxUuMCYc2iNLOLXnwUa5BV4O0vvKcXDgLSbbNwyBIPOGSOhfL88p41VCcxVEFfcrpPcf4o\
DqFm4RFqBDv+0Ofoa3BD5f5Q6NnLrOLvdohIP6w3t57Lhc9jLbWr2Ni8tYeqT+6cBluXXRZ+\
TRBVFiDjoe4R8J+2E4um8QmE4SbSzcHT3EOFUabalLHtLn0z43OOIgbVoAe5qtadJw2UqJXBKln+\
ynx2Yu++KDHvmzQ+\
2Liy6U1NJeON0pGrbc6HQrtlmKHxVB7uynvKdqiJw5LAGBDvd6Ql2obmfHHNVudHNcXpCpTglIq20B\
j0Z2030ZJ24hT5l3Jg//\
tc7tdgke6h5avw8XUyLOEPKpHfLOyA5R7BNhiJZrcvoci50W78tpHue8OJLsXD1G9QnYGIcdMkhEE6\
VwV+yT6mfKu2/OUoRr3e9/82h5uTpKbc6cfVfjFbiW+U/d9voe//QEnYjrZi7+xlg3+\
KAzAK5DvDBI0310GNb6xfmXbgJg0X+WPf9Jzl56vG6uP/PXPyX7wbYpdS/cUd/CSoZVcjZ8qr/\
Kb9iBpdrPrLkc/8lLam114tgZgnLOVWE+XIi4LUjtXAbt4NFB2Eb/ZIPWf/XXh+\
ysDmYcJpp9WZHi8do0eA6pZtvZfPv/3Yp/59L/VNrt5/Oyv/351568+\
sSKE1eRqkJgbkGCRC2f1qT2JybyR21E339JaZH4Z8aWgSfUJ7yyIOpQoRvr22qwwPu2TKRz4oLFuiM\
8+//fP/vAHN0ekatZB9bBAtvIAxDc3BOmNXkSoXtqT+lgkL1aKeSI6396BVRr+q78vx7Q/Fbf+\
o02GSzVTKWJNah0NK/cvzKm86Ok3U6z2n/6kaBSBH+y6Yo4+YaHOPnO+nE4KHsXh0C/+yx8mf/\
fpKx9j1ZtYf2jdKv4vKSFfXUF1nH/74+eBQBR7mVho9G/TrBvw/\
JAWLmH65qCgrEYjf8BJZLCVtGwr1k5Xd43KnT3rK/\
EDUI5IBquPCHKqWOq7F6vvZIZcquP0xMoOX55NY1uq+\
crxKxnnSE6Uk6T1e0qOwyVkG6VUCb846HRL/\
hqJF6yXGoFCCQza84kwk6fWtPbqrLMjGbGMO0sQiSXWChgi4m9avfu//\
dXiIgk6K95sghE6k9CTcAlYA+SO5FZm5IE7yHnfTjsGZiDgxQ6STzoxX3m2pNCV0iC+OKtq6y4/\
AFiWMsZDP0Y/33/M6LVGMc2D2Gl0NSN0XaE+\
wMAuqQxKFDDetwvxSdRqUhQpD2bwJydwWOdHBV1WZcqPXn9dcN4MGcozXg6M57EvxBT/\
Vf4cDUmufXIGn/8x2x/tN2FAllCrieGpCmeYjUgJ0jDdZk+NlNz5RLioBZYY7e0Y5xnjc2iyYm+\
UVQU721GRGOoYJF1P501FR/aqRam4OR3P3BAAC7b7Zijp8ZIVZ/3xsz9MbTmVF8zN5KkWdTYOeJ/\
YpyZYn8U6/e0PZiA70BsJSiNsPRY7WRd5g/vUBq4ieAV1+\
GFV522aCExjfHhNGnZAWzRD5Yl5MvX59at9NAVMuugFabqqM8U+CYREmxv49eHh/\
sWquMY35V8lF6WonQJf0S5COYuXjkEspVkgG36740yHzgbwrjTljfQeiVrcUIDznNvzy3O3HzWn4Cz\
PWW5D9Fx0ZNo7BGR/t11nBc5uF8UX5YFl3d4FbqX+1T1GtsYy/6Sf6IzMUjSXapm46NY1ADrZi/\
0B2qWHNsNCzn2vYwjyJHKESjRPXz74tzDYKfFbc7jgeJ5LilViqOYXdEs6gvnbXxo7sDYBg8p88eN3\
F1KrDuV8iGXh14KBsazcLlH4+v3ofTBFfkD/TwFQwlTrXAOJBavkR4d+8K/\
qFGImzPOtcX7eKzPmUQrQvcniARTRaHAIVHa3PbRx0jQfa54al77BGZCKhO2PlxY4YziPd80KZdw12\
q9vfvjux2+/evfVt/8Td7wRh98bKLNv3qt5+PMfVs+gvu0PyHGkqrzrtv34XDLA/\
tRfhtjnkUPcrkoaabVo3TWN5LnN9tmxsZyYVPP6WqRc1goXGThE1lgp4rx1QI3S6uK9ujmwkRZGBS5\
2UMJaJE0YjI3UTdiv4EhtSsUgySY44nu6mDUyjPmVcHmVkM7BqojPC3PWS2FY1bGHdmSGPiGTKvvmf\
Ycq3kbhCFE9+X1KLoBS0qLSq0h8SbGVUiS5Sdrth+\
6uJaKbzehIdKGfOMr5xDSMu3jc258sOxvrwlXSMMmJ2recpOJKcOwAtlO4mrVOp8gTsiFKcCOcDzE5\
5Ds2MMlty74nNzzgQizEs4lwz6kh1OXiuPEW6jcny8tgV0bZGhWMQbPXAOlDLkTC1Dnh6q3szJLfiv\
OExla4Ts5UcqQLqm72ZRpgaVKwp+wVfZzrt//pz+\
oJZbnK3ktj7xU6QukekLiphqv4Mkr1KHyMjc6BZSXfWHLt06V4lhExHTe1IFQS9arGfSPco81CyCJq\
GCsQEj8N9I5k3BOgy+VkZTj7NuxddozEEMk7AyRFv3i8nN+3z6k37H1RARn1p/\
Ee0MyHTkYNxF91QNnelbso3/vZH4NKW8PwtOfbX7Znxkbya5g6NQzqsrTL0u5Cd3RSGzgGKk/\
rxnmT2wRqTKwZI0cNT3tZ2wnuSA0Sh3YrY4PlieDxV/+8dNYw1k+YJUf/\
g8urzWr0jDeo0sqgMyrlEY36orxCq0ErE7g6IhEWnHEhNXWge0f0I3Bh2OB93++\
MhSjRz9YKr1aouDuDIlvvGxvCa4N33a+/\
Qsmh2JLy2vozd8Znf8VWF6o23lmnubHzpjDPVT6UTRtJqrUhbWP/\
2SJJQwQ9vedJZ0V27MmU3FvHoUO1uNoQaFwlZmnEI+eTvjreCZyjMGbK/\
dy1QP1IliobAv2EM1uuJJMzwyCF1K5lssWRtV2et90fnjFNQCKGG9pozQL/\
fraMTHC0pE1RPlQ8ovo1A9lue5gxCSD7Z6RHOqnu3K/\
lGo8C5ARNgi6T3NnTQSiLD6OVVs6SMQt8OJXkppQ2DNCehB4Q7+SplRoRXula3s5dL/\
vpoS2uzCGuefeSOicSlnKvO486/0/\
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\
DJNFZfV2cwH2/60+\
kzJ4pw0QYUGUt4I8ZrZ5y0DfhFJ7HhtUFj432AIGok1Uof55GNmFvo6Cd0mRJE0E5AHWK4tgqscJpc\
gq8YjTVPAns+rah8XaKY30hfuKuvFVaymzr1zWjHkqBCzEjqgjZcKdgbUJDneZQZ/\
rmtuvMDguUMiwmgSanXobVjM4ivhz01vOw41WtiMnHOF4wpJ3V32dk1Cq8PRTPs9HOx5p4FpENDdEZ\
2iIXoS//cTlsG9MpBX9mf7gc23zD9ZUOnesKoklfUeyjJAHS9Yunk2mnrichUjTgeps+\
WXagFOPVKIGBrbxEIes/\
MpCbyzAthL3Inydv2NFuDjpX7pLRYDKS4NlAYVXtrqPL6RfjUVNfRedTr2vhOvTS2YiY3HBASQ7Bq3\
gra4RTfMfAiIrCBxsaWTTUYBMqskvd87oj43SWXu42wrFZxKe9NIZDEiJu2/\
zeKmCeUTkC2abQEYAdD5iJVfs0WTOxbyXtP3eYggf8d5eGWFh4WFiFxQM7f7OhsORFPtZ2rp6yYDA2\
x6Ek0nec3NQDNz+3z7PtEOcmHZlMTaBuu9Jokh2r+\
3GPgB54y7aKKeqoOVUaAsHFBgUBBK43O9Mn0155yH1OIKvXlGPXLsKG+\
0naChzJk5pCc3rPiAytcuEVV4vtc2TSWW2ywORzO05VQyAlqNchb2AQ3p6CWR+\
mg3INFQ8q6S5gnPv3OlpxFQws8FVOLNrw1qg7OO385J8rj4y5gmGhfsJijYVqOUK1npxFis1znpszB\
pukW1LFEQ3m0IAfPdH7OLqv9pDitJGJmTCnaL3mEKOP1+HRfcQd+\
i0A2VWMX7YrBy35aIiXeAUrkTgeZfnzuvwDDJCWuxSGolP8ZxB+oSzVDLKZBH1zCw93Uckw+\
WISVgoRaJB26mtIwu+Th772oNPC13rlVc7r5s+ik9ezF7r+jddeqALNCw/Ee36oRY/\
kosJlERHB3yy2kT1JJP3Ai9WX14+\
HV2IWCuMLt8tSi4WeXnMcpoG3hh6T7itFpZCWig08tNrJTMqCTxCVCyY8nUXOciWtQoqTCoTRIl7O2\
Kf8Kpl/VEQWL2zVxG2oBqR2msBvjMOW5KbRMr0TGgDuXcaEy9Ipp1aOyo+\
Hrtz1qfU1Th532btqOa0SgbnyTrCDtc0gVnM/EwCHfsE651RA2EwSpJmVqnHp05JwSM8k4VD2a/\
OFBD2igwNCBVUOb4UMmqzMZDexiBNf+iOs7JvuvD1wnCK++i/y1Td/+Q/5f+\
Z9rVMzsZiVQME9fPhjhEWqIn7g9AwViPL8RbH0rfDJPqnrxkwtsrS7Qy8k2d67Iy7Vh+\
KnD6BhoODvp9TOvDqOvsEqrW5uYDutpKzJoc7PuKLAa2vqQFkrC+Ti1aT2QkyS6ONFwAN29V1/\
VGYGFDMts9K+vMqwBfbRk6fbkPCamO/QbEnm24ZF//8xoWu+\
D91S0hkUKZwpqkLnTL7AyYVkEBacZ9qD4vIiLxi26LU4UjPm0xgo00WAQKZJZfAhK7NwIBg55cXQFq\
1z+nKQm8gAxBJz/5rUITLhXPKAZ4ycmWI5JUCSUZTymb/\
iNFeSBS7NDsamnybriQSctaGZTWuW56ISQirHsKGViTudnYDpJq3P9LD0nWvXrbu2LTbtncxsshEug\
RIxYdlrTUAV2ssmcLMsyZrv+jdmTBYy/\
OxA9WnoOs7lF5VHjSRwqsEYouQO37rSNPUSdlXMUpIy09FYbiF4jnTfPSjYhYUnVpesw7CueNAnB/\
Ja1Afa9XyBwGbjzWcc27aaHao5DuTfgl6HSn3udWvIIMZpMUTynoX5lsnDC35CyI/YuvD6Ob/\
Op5E43XLOIvcfLepWQFg0R53THvJimlYwBpopt+\
bYz4i8FhMLadczpYzrDW19jrm35wDDK6HdJNVdUCAwAYLNs5GVl/UBEkUQaBudSmalz2XUQwVK/\
m4LyiQL8+Fncu/FUJwVjvfLWpsO8/hoRkZxySPemZmS8m/\
0f5LOp0mP6s6sDJSsiqyOrJJZE0eUstVjF6xilKWYNwW6W6DK99MoXzVvYk9nPD9rN1XzOO9BiqiWB\
deeaaTECqGUjF/GDlOjecE+1w/HIuqs/jEd4YF3OJlMhOmIWYGS/\
Gh2LE51BdGrZEoMIovUjlHePL7KzVKeh3yZ9QRbYVv6ZwIb3uQ6jhEqehnOuF4jkMHs+rQQWoyY/\
NzBtxMdxCY960eLpOtAS+\
p1zjOtBifsovWZqgSktFuDpqqnLWaSW9VCeRUv3vbHNneaJvWnFM4vRFtXMTRLJ8RqX2SAKx/\
wMpOfu080DjKEMO5Qu/iJKtBQmyZxHV/Edc/oNU1Vdp8q+7TeRFnrNo0WQn7QdCxQ/\
OC5H6rZCeG1FSrnZiq2ESBPhfLm2TR9OKU7Xt2rVvdHq14K3HCJGC2vbQivzjclViwne3ZpAFsm8hF\
2aDA5VpPJN9T2XGimoFeaZV3WddG3sq1GZtREcdYiSq8qNMNU97Mhf/x9m+O+anB5YkzZEGNhyE/\
H6DqPtfy3s09MVp1rnDa5nEHxHVUB4kJfRcjF2gZ+11ciJ77EJDflajvs7qm7X3zb+\
hiWwxFcPh2li1NXBVjBPZnqKNVwhd/RZBW2ouXWUHhKOqISgZZ0jWb8y+\
bUiBrE7tjRGorkxadAKLCGCEIcn3bXXeJRuG63il0jG29o9JTv+q/\
moRGbytXPEovc8mnkVOtbNmuQUDGAk/zr0ow9xAe1OPQOsc/WoFLzyFZ63xHQLhdXBrutcrj+\
2XcnGz1yZKD+\
2UMz8A4X5IbmZtNt9NVQmQbug4LmIWLOqBZj382zR6WVQqGNNMh9KwlFluFODprLa9NwD0Yb7smHPw\
5e2UIDY0rjaOSWHmm+RahkD+1XdgOUMuupE2dlpTUCcAwd6aaOB7ID7Zj/hYcwbWgH8+\
f3dRFsMQ2qroMjslUCUpqYNtGrNHc6g2HJ/HoxCSTbZ3967DgbJq+\
KgPDfa1qmNUuk0ZifGiH0iSaI5hUWuoxWa2+HWu+P5tQh8Im1ZG5VdO7QCiM/\
iHdhO9P6Nxr62ScMY+RAUZQT0jXKf/\
wqbeskhqWqUJPObQkJ7toxc9AaNEgcha68HHWdN5RpZvMW34idaZ6bdQK3BYtyI3tt7TMMWqCR0Iv1\
1PP7RG6nQBbxgSqR7GHm2+79+67k+18K9KoE0VKDbp448SBYpCcd9vJZCmvD2kzFC93s+\
uRqpNZB542OIygWqjeo92QofmUoEEBt2SL/\
p21yNaSqr6yVogQx966uo0ezxvkFbZK2rVQWBN0BBI7E8daECd1O8rpcNjruIr4wK4Pasy081vx5/\
ODfmPPbCjUMSkev0fE7dM2L1bdRtHe3p3/\
tmex9c9ivE7tMxc8ikyXJHjpFxcTzSs1hhjgvfuPF6k8sLv/pP1i+\
TnH3JFoxcueYkrQ6UqcOLoDJMaNdX+zzv7CEPWOrkSewxjgeREEodi8/gQjG5/\
ycvuiNaKUeDsX7oD4RvrKyxenESPLoxgd3KBoMT2ZQ1cmhEImLWCXqzX05gCp80wjxFPdIVOFLKqGm\
oCHX7JH7VcjshJNVIi3yKf+1HGeQa5UXTbDsemXy8OS3PrRezy6JbDukjvstlrr8+\
SGZWzKgTQefNCmLZ6yCN12RF6u/5+\
4WakJSaHRZwwhh8VphDfkuP5N36aKm6uQ4X4c2HaKPbNOJ0B5+g0WAJ7+/\
3LWxQyqWQRu91LfGAdlyC+ctu1g6HgcSyhnOH7VxmmJrnhSbfDkUHwkuOq/\
CWm4ql6tHdGWZ5gqQ473PGqhXjW6aP3J3mkwhAnAXbGx+\
c0q1NmEogDT8bOzQW3d2htpftjInkfRybWDO6DR0eOkU0r2cVxfFvmI1jP9R2YFMGhWPrywk4oidQQ\
nVEnlx/Vl/oPB5r76PJCmTL4gptX6jVADS1DgpqEhpNJxeaXLPLPXwhhKrkuq4geQViBy+\
TVQh0oINAhJfT2gCFItk5FD8Ku/lkYVwJlPoRTdDaFS7aIyxwbQvftbwXP2jptS+OaJPVbb7+\
TkQrnZpqgFTlzbdMBez8kEaasQNfSgXsx1che2e7CQjG90+\
dfnEtPlPre3qGcGvQb23aFo8OHabMTM6ipnthqzJbbTFFcNH89h3O+0/\
VORcdj8pWCMFjPaXGz313WCNtbx0CMLLpzVadpaRzHV0fJZpECnNgPNmelG/\
Qp6tI9SElQJLJjbnHpQPh1HJCU53aAJPmhzzh6CObtqi/Cb7AswH4WvXFeHs7DnR/yKNa0/\
s1wNIgqm1grFwC4woM2HgmCto8ShmoV7EDD0joHy3pWB0oqVhPZmy0OMzJ+26feyUPRYyFHzk5+\
86iTGKhzoUB9fe9UjewFhzkpqRtWFwhAxEIkgp08FS/RNCNyZUh2Yxq1ETugypS6qLKH/\
rkexZR0AWihW+FD8EY8BzPViQSgCeUXvdDUrQnURaWnSsNKUcOMdJDg4M+LUw+zQlJ/ji3PwqJD+\
OqJp+Bzo6jMaLgxDuZug3VYSACDO8Ntft2go2f9+\
Pkehi7ls30VtpB8tNvBHyxq1W8BUjB1b7by7HTdmjY3Am8E4Wn15v2Kkgxd5ubdeEVfP1qNbh9eZZQ\
jKBIVgg4CvB6lYFA6zrX0M4CX09pJ+0a4sqRfnvryU0+AZMQXwxir+a/\
76JOrPfhYNhteOqXHx9Bf4cUeamMz82pyrCT1DjK88xe2R79TGX9tiqyGd7ShyF9u7x2ss9PDBasVL\
J6z3BHLrwKeuNu3PI9UxB2Ja2bKbhwg0jZGSN1011Bg07qX0+9PVjJzVkJbb7r+ax/\
HEeLcP7cDLoJQRpVeKGUN8EFz2z99Wnw1SZWQEzHTZzXrt0ZGywT+\
j0pVLuYZRuc5Eh2iYQNMlHpEzdvPfHXJXcAFh0kV2IlEX/WIw2SNoxAHsvdVefa/\
231duFQqzSKcZQnHt0T3Pz5kEOcEjlYu5ME5CJ0gOW7goyHmZKcuFeyeAd0Tm9pkISgqwlnMza0CRR\
qk/bZrbBvisbdLvVHcp2EigaXCDANx9o4rHdBASPjZl3H+vKmh4TBFb+\
gXqxn4foWVQWyR6OvvLvL1bfXcSAwV2mozczV96yUZlrsxsUoJhZCLK5TqZJrd9DuivZfRoGgPFa17\
k5qjYCvy0vtm90dyTr2O3pyYyjMZ8BK0EWJ3judjFOrEWAqOX//lafJjPN/N0sb6oxrX8/vb+\
mBEj9HfI/4IR0e5ODB1TpnZLplcunsmGcY+x+woRYf0ooQ4fLLaUF6/\
xFkyOAwzaJCSpjlorvk7lfLyB5uRPVpJi5XU/\
oV5esnI2gKy4DUSA0bWwfTZt0Dv5ahnko8qdCxbiQGYABmxIUiDLdgOE6gMSVZtJapGULti/psQL+\
6K9vkZD9Gv9Je6YYG8JTtHiwq7TrU3W4rXOgjRc5I5CXa04x5nqLbO1fF8SE+oQG2bFgi2o/\
KI78eO737TAURyJdKc3Qf8fERhMCdISepJtxxgCCm9m0mSf0FAgwoffYHjeHRosOGAOwxpis5oRckV\
KVY/fQ71qlDgLXn7EXZqQ1k9nfgbj6v16sfuokwtpxdBflh8Fdjny8XOih/\
IBKJ7PiYj6Vq3fNUDaD2AGqdPdpXFdbinu06F7kdGGqx6KaA/\
s0bAH7ebhr2klMn5dRYYTmjymIlMObuXd2y2QRjvTVPkgbXJ1Mn1I5We+\
2uoQf2grMtHCUF6O6SbhUR2LBOW80yUBZ8KkZRJuFW0CqIqtHO346vA1fRKgH0yNAzdar392e8OOd6\
w4T/jj2hCamHMdwzzoAp2iTPoYyjJRX9VsVqgMYI1qY+A88Ttmj36WhoGq4/\
ho3gJYwJgiQUB2YvpvUrm0YTfm4kEgVykZCKSvwDjMUxjXAAxiQAoLhQ0pJCw672U2FW/\
C1Mlidnt0eL8Dv6qO1ZhNwU00+TVAfBIcf2nFF/QwyaH6gLBBTQCotbUh05Y8DngVFXXJ3dgPb4/\
SjGDTtK1bNST1zsQoyoekSwXkpwFzXUJhUQeDltBQymfRg7XM6VrJcNJ1A44g37U93SaH5CdQ1LUHF\
Ei5iPdE/0KGQerO0uyU8G1tuD8KbFcirGZFtFLem2Edw6e2VrDYw7A6YWaDKyoRb2mOLLC/\
uUH3HdPB7MqwNe5Bqg2YUUp1xHVQ0JtIpMb361kW0YCYt0s/RKryqeuROudW6LQQrnMEM+\
canD6f11+eg88OmKSmFHBdMScqsF354Um1vicSb51cu0eugrli9oT4QHHYLcXiNJOcDLdJAeiKUX8l\
gmiuVBKflDJ/ii5cak69xsWig4E6W3rDtwa0iBAkcalZVhS32FBGx+\
LbEMUmdzl2ilZEAzcvvx36nA26y19ItQy1vyvshmpryfc6U5VYdp6ofhxhSJFzOSFA3LUipBPUpbMz\
GGCH72598cSv7JgD3vNVykV+\
OCxra6w9uWkg46NmTemU1oePHIRO2T86zSqirXKUro7RPFU5k4e4PFI86mXaGPUjaAXHP2pbv9lPxa\
gYbUn3mzBnArl256WE92yU4H+\
pxrZ1sSPASXBZH4iRK046Nynms8dYUGnPs8mzU8kvDXBLgfHhsjImMRlUcTL9YmahRNDLPf5QHTPTR\
kjtfdgGZj1dfz4lghz52d/3Z8sudsKdLP3E6vJkOxUNJskYiHBCGsSAnvnkIRLEx1hlKEY1k/\
QvdK8YE+AhCa/\
Yu1nwzlAyInWP0m64zL6TJ5Y7SKJXri4uXFh0vfW0ETKEu0RyksDYPy7mpkIcVlxMGWHT7HEumZtAn\
KIaatXqEXnJ7OnVhhlQBIpbSmVSvnDzkn/eXY8eY/\
74f0VZldrgd88km5SxoxYoBfj5cjnYSfXepNHZNaWjBN0Ksm6c2qnV1rZMlFpRUgkc6StPB3VPfDeX\
UIP1h4hz2gl/aDHIHotxcyFgb+Fjyn8up21ogeGyn5ZCKOWLaYDEkA/oxN0P3y8q3/\
DrlVtMeTJ1g2ZSqdQomvccpwQMoi6wmpWsFkpgXKjw2p7WnWPLiIEELjXi+fjsyLmb77Q8/f/v6+y/\
fTvekuV0NomyUGEGRxJeUWheN0UFmgvCBitZL4P9p9kDuLmWqnP1m289GPxPKQc+/\
8keptXpUJadW9R1t9L6PqWiHtb2uO5zSWNJxajrlPHRsI+\
NqkhfavvwAgDIJdc1G58bKW5kXshkVukIN0hjyYdUVoNSyk6CEwzdBkSJgZdJYTBehaJByULcrTfGq\
1K0PVlcn1itlcAbG/0u+ER/58E8T5my7KGP7IFLhT2aVO9KWjmR+O1x+KTeOykeiglmwBVL5UwA+\
Rn4MslzOJc+kwbUn9BB1oBV+x08qEoGFQleisVgqd/k+/Yjy3PVK46RcELHYtUqE3c51R/\
YBYsuhnflSFcZg7gQKhq1NjyoBZCqpMkmf8hrWFXAO4AQhIzU36ICr4Mx4NW9sCNPZmrC/E/\
TUE50AbCamKi9aBCWXrXUmhlxYK7sH4++FrbXxwGRVcLF4NZPZKy/\
F2IZ10FNUPZLaqCGe5tQBuOJCFj9N4i3hN5qi+/ZwGGh+noDxqkS38ojS/\
zWLFoyKnM1QhZOQSO7r8Jz4eNIoFuM/eNc03DK0MlJKZdhBJIQde1Nv/Ek9/3pdySD/\
3KLD5WxkgZtnszPnHLMsTZkhepcUwKuoh24ffCXdFFFUbpwhfV5kI5OTkVRDPEr4uAEbHz1SiYvLlp\
kmSOXL9zZveFSuz0TXkzWRkv4NlOedCv1gwxPdSbRKxyYQU5mZddr9sAM3a36Izc44BfGxqjajyfbh\
cKOjsl56Q31pqS52qwHXRFtjnQfZB+eocqteN5RCpYLgiteHhxLf7CSNP+\
2kQzv5eLTNIkUjbN9RNzlVz0NCjCdVXOTwPJEQ8RWs8J3aF0D2JNT0ZzE6LqQHECLGwF0Tjs7Hl5++\
U0cQYzxooa/LGWNDYLwIVU4zGNiwLcY8ziCH9CON+/\
d7J6pVgGIXh9chcBZmSOTnjLfiACaCwWkB3FeOroJvs0vJqptTvwYdcsyAYnYpz2uyArd7VFEdZcBQ\
p6XH0EyXpdLa3GzMjWHUmmAgUIWiu3XWJJNoAwngra2TrQweSUk1EF5YWPts9AASz2tI9AHeqYV1Qn\
DVCvsRk4xN60HjMPCOpEg+vZX/ugRyCPGjUpJ+qPyl+z9YwLzVnIN+hMu6A6zN8m2z+\
rEYlsZtcGM8xkrFVHenPe9eKPTgATUn0JzwFdHy0FJAqH14rk9EOotzZSvj/LQ6dtCkYI/cd+\
iRPPX9IQ1rrnqM6QxOAdhXGpSJ3E0ncbqj1hsRBGhuVo31C11PyTcxxS5LEqKiOGv1Es7+8r4T0F5/\
VvQeauMqnBPlRkFxcE7Zcgl586LKklJAU274iDt9CYp0pIELVEQmHJHlC0JRS8YCjiXw0KYTXo+\
HYoOGN3Mtb1vL56497IJzGKbYSz0ayBH8EJaDf3zWOU20bVDQFGwpZm5kQHG4hyBncm3apy7bw6SJU\
5FoOjNvYl7/ulCTx6pFZRvSQLVOsZX2n0YH+\
7yjJx1Rxz7nwNmYP9T2LdSXyvUuWxs5NHlXBLsgzaQ989ag19QF+\
ORNwA6tdxVVS1PBMT50ZX98YFdcJzMwMBq/fSFVno+TJ9XodHv1HpEo8sHwNxXQP+2J/\
NrXq39O7eNT8+xcB/VNSIM0KVfXWgpaCkq344jrxpkOszUiPEhmZ8sW3j7r0J/\
PYoRSi9eOHJxtTIwCl03TSYAy42augGuUPV1il/JNp27sIhWp8bMaex+obPe/yEqX4JAfbJm/\
WP23u5nqASu15rJdHjHdaHWp4q1G1SMpVg2lN+Zrv0jzgVU8HH5TG/SIZr1S/\
hBNq57un93zZAABiBTHez9xFtG9WvyLxMNrPDzu3Pg2zh1FOCC7UxwmDVCiwMwXc4Koy6k5jBwvj/\
Hde/EpiXo85M1ET6bE+TZ7LnO+crd9Ut+\
zZ9P5EHWUw4f2Jh25nPLu7qRWwb5WC7Pjk0D36dPkvwjI0zBg8ddGoQIrXSHp0snNceALY5oemm6XI\
vSP7ZqXmaZyBpYCZmuEA2HFytFvlSpTBY9ZAVjVj4J6bQ70KE6vUfZ8RVUfE+\
Yn2nkeUQEYXoaBmxqZHVg7fTI7SFx4hpVPq2Kon1NkVBIOi8D6/\
6cV0dhDK7GaFPArvJC8LaktS2w2NcqpiQzsgy3oNHQ1ES7S51zu7tpBE81vn1vh653HTN4cjui/LE/\
5wqE5RHPRWd85cE9Q5r8uUj6Z5o/rReB6+8v2cBnKYeQl90aDlhIyH1aLAHA6qvYB1FCnMppw/Tp+\
r7PCWjaoaCeaJW1Gp2IIgsoXMvs94VrNhLyYFA24YDPq8cek/4SLEUo5xi4sKOqgVv84O1mi4E/\
mVNFWVslwFvkJ540mfxNuVtVdA8iw1lVIZl12tQH/G+OImb7z2krD+\
TWCJuu0G6RR8tAfHbCGadTWYhCgbYMcD2SNkyoSSd6nA8VpByCP0cIjUCk1Nd7/\
igsu0auGUVFtVUIqkq4X5LwS2AG5bNnn1boF67ogvmZlAL87UQ0FyveJqVbUcDWqnRKRIgtLaarOlO\
sh5npKzUf6tR89R79BL1jrOViajoCh++Iny6u+oVzbmv2YxKyCkerLSfg6NYSrG7C/\
mdUXKDIzcqaANrje+IyzLx4xQJpemEq5cIZO5gzWNRHG7pReAYf5fRzGypBRE5KC5AtgSt+\
8oOnVPr21MMGsdkd7MOCbmG2AK/\
V0d5HfaW4WjoZmDOPQNgEJ2gVcnC1UBCynoKFMookVL1JGD79YygE4TVghINHuUolg2abKz/\
S8VfVhkvMmAsg+jfmhmboJBcYJJ9eVUtEauIqDdhAlZIOx6j4wpwfsVc68G46uVxVDrRkbzs/\
VIWkRFVWpPEzGUIzAR5vXe8K3tECACK/sr3G5m0QjbT8yZ3eKb7Oeh81Ns+\
2huXp9RaydFeTKs2zb6cWGXuXF+WfFzKNeezntHH6BW/AO1CgjbQdR7x6AnIagJwKt/\
tyVxEJSqAPFRw0O3w1JeaxGQQelAr73jAEdxYuD5MpH6OtVNuYP6XioYhTuQ8p/l+\
huhWAO61tS2bhTgC7vypfDjLY1SOEeuGe1TTtrBfP1m7FUGUxoEOD20KCQBFO3hJLpmLpj8yin9mxt\
WsyfqIrC5YGZG5QlFOCT07SbfTOMEu7yT6upelU/137M+\
bElaWM5lr30ekR8jZgJSVUG7JhLKNi6quqM6siaL/DRPo715pvXP7776qfVZ398sfr6qx++/un1j9/\
cvhGZ89u37366/eIf725/+P7mRpnA5MR8ORlEKFtuuL/\
Ba81JvCNYJrcCJqjyntQxlG25cY6uLxoZnLjvGiOvr8ccviN9jX+\
z0UdFzltdyYtLVq2wYoRSOUjywlmXH6RechBijFSHzx8lP4O+9+Wgq5j/\
slWbsyO2D1P6qWIvH2Tv4yQemveaH8qOOd8MzyXePv4GlnnTKbXaP9BlCXqlWhZycDXUuPKCrMdsgD\
EklzsLJ1JBh/\
I7xG64yOyooAkpZUUnpsmEZ5lPlDcdwGdp6D26WKzKoCizydh7HpAmbS0zQcgu2j9SfFAAqjZ0BOGt\
ggwqxCQkgunplzMWS2tCtaSRg7muGCaUfolyDlX1przex6Y7WGtpMhm0WiZTuEWLzgHUGn6yhGjzjG\
E28AyJJ9DmnIVLRT4GKGI53w+oe9jwJod+Ei1BXoruNLTU/\
0Kf2oZWEhInmLYqIYcwIvlo0nauJybSj52O6thb7LSHIs93bXdKDbDhO+\
KWjOaqyBoWF44mL3CZiQhQkJRgw8WoU/b1Gsx15yAR2Pauh6wORl+\
aBvSXoZU2D9Opo8pwwPHTxZsZsPxssPEQOvuHnsrsmgxBV1ylQsp/\
vVLSOtMRGntOm3s2rodDpabVJgm0tXkoMfL4rBNc6jwi2fMe3TYUIeGlDW7DI6Iwe1knFOSjfClDSo\
uYqkrejgeYA5dX9mkcY2OP4w7oK8NiZIL4kY88STuKNVS1SGwD68stO33bodyiMr1P/\
cSQJoywcyM6mXAAdvzYS4EemVWVHhNNyugTqF2+q96IylLu5CkT8KXbLeJ4y6leJcCV+\
QdwTcptAYtTTg1UmFyQukQA58NTJx6s3LcOiVt/4LGcp8mdPDY0IlaoDoI5eR8GNZwk3rUaQGy9iV/\
HbR6JZpANrFMzqs6RfEXFlOtdooy0o8+ydnJzkUAYbw6Oeq8yhX3FunyrxIWDDelNRySVZEW/\
1ZttGq+XL+1Be6sMNqCywL3DiZIwywREMtsR7reXqqTe/E/3Ct+\
skGtJpYSP6p2QUxpqQXCn6zNjQTKBkdamx897oYaWmsBD2z8cuCU8yfaZv8q7wZIzplVL4lrL5gHkP\
S4SQCWq15lQFWNRQpVPK/bjZl0n6fS2s2hGO//aiRJXSUz6qASP/YBUGKmfQ+\
QPbRM6GWYkUE4EUmOibGiJ3nS7chd0JFzyKta8uqjDV954HSecJ3AkJgiPOl9SrcwO5mWMts1uJsYS\
cSfGSZg6EtZa4PV4E4vDTqgkis1jblOl+\
boTA9AUGmmdpsYs8QSPdgxK3RoNrIxacBKjvJTmMOYHsSkI6cxDg12nqYrBK1uhP2o9T3tZySHA3a1\
VIVEjr/9uDi1WQrNN1V2RiVwGkwBvsINj07PtEPXkXGQW4xFXQ+\
pp5VkwYh6bOzm7OuygsFEbX4MAbXpnvCKjaoUhokHgdAs1wSA5m08TWU/jYc89qmYnOYBXwqcOs/\
E9ysQEDBFpDHh+3G1yGtsKpz4RhdaRqh7kumzOKVoVujCv0ZibVHq6psIylCht27bpw/\
qamCStPSBejnzfWcshiamNGvkWo1J2+C+ScXNe37TN1b/ZkFvgQ0ByGex6kh91Zys3jjb670yw5Y/\
edwe1psR8j6qgbjTrze5yGNH/ioEaAA4St/\
Q9KCMniJeqNF5OZCd7WCcbJ0uRMyqNiZ96ayrS1Gj7zQawb25YV1UbdfTh9kkXLj6PWVbeJb21VeeU\
DLcYUoD8i5Pcvi8/3BWvJ2CIY3u+\
a30wBaFsVfyWj988tS1w6yzuoN84qPLI0JowicH3dveqGdKj3rRptu8dvHmPavKDzAvpNMearfQSw3\
CATr/ML8s7Awvqvy7lFHOqxQn4cL71xpjYXU6YaxgRpckrUdAMWnwnTeoXDpbHTxqEfHGJPq61agcv\
aRvwpQWq5KWV+ymMjbv//YBxAB8PwUtxLpnIlRps4WJX2/\
bBaJO9UsqUAuAqf37jNeWmeGyuGIon9qPGrWCVrA+zV8E9mQNQyItNjTvq61jiAp0x+\
yeNwAjYuH7v9tw8HQIYwWeE/zlcfBJfekEYQzNlV4Y6zXsieWKAfWSF7jmdvrKt/9kQPLXfexYIM+\
4Tglh+hyICggOUFL5ENHalqdNpgC3fY53i6omOvdB1baPyKUssRcVA2ergpmvGGjtHfsHl05gSazrn\
YH4SMDXWAlMzxYJczkOSzuik5Hi601I2fDUPpnBStuf+\
pPtFYPTOlFfNnNyXF4lZXmFb1nDSomSZ7maoZJZATnZ/\
AA9U93g54K73q81BAAAqGj6Qa0PE9qqS3YqSXUGvUYVV2gUpLly6BGyFQP9yOlHXrL58LksLvVftkZ\
ZsQG5PxXNXr8sRK69j9Ukz385Mp8Q6CKz0U9tata0x3h/\
83U25hBiS3CrYN2W1xAWu3vSH57L9R3SzJGDeH4SqUNoLSIrLX/z+\
i7Ypbm79e63VYIAM008kuK6EhnPxUBbtZYxU7xtOMtRluz2WXud4mHWC6raRyZgYwhZW6HkI7AOtNK\
gqhVVuUoagTxzMrytZw7w4JmuFnVRio/\
LD7M5UwQsY1MQEn3DGhvQQ4MOswvtOUXLWDTMJkTURF4pTX8KMa4NM5qECxpPrTvbkidFNixvOOWdn\
mLGesuOro+L4PJL9HCPI9t4W73EmqWy3Z+\
XAyyrrecD1wkpQWa3G26mRWBuMiI3fRvzwrYX46Agf6aqMc4XkHVFmSHUwlgzW3PSEbsPdl+\
eFfoIHmULYjC6uMdsgRhLaEwTiGjFZlqdFLbzVEhWUkGCnya04H45Ne7iwLwf0HgzjZmt8N0SQxmIs\
vosDcV/IFT1rl7HQs8RbDdq2Tx6Kse81jHnAAif63FYrEvzq062Ipxbf4Y1oy837h1YN26vsKtTfxL\
03KXiKvDzH/ZZosIByHutvKhn8PT2XehBZgVc0IcfmvSXz63wTyWLvD/\
YazfkIwDGd2vvmcmK4qmC9qmhH3NSgNGDNk/yvrLCQHt1pDFRejL9cOaVscgji+\
qVHeGekEQoD0ohMKrDnDmzuptwg2apBIlUY2V5IpX4iXzwq5OPv7eZ8kbIlAdropxfj05cc70JNbbl\
BNapUAbdCPfN4qeYXUzt65me98t2dxlMWj/aCpcOWk6/EK5Ap8CfpDsKVlxv+y+pP//55CUn+\
X87ebslx68oSfhW2b1qKYFZMx/RMT1ReKNJqya4JS3JIajt8CZLITLhIgg2AlZV6+u/\
stfbfAcAszXfR7VIVCQIH5+zftdeSatN9uc2P7QXT3xYDl7SwQ/\
o0TtfDKyvCxQ2XZGl6LrdyuR5RkdcGIGJ8J1iEsVKymLK3X+5ZV2SY/\
KKiKbDLgh43J45qxNHJMf7X//yPGFmmhxPlbhYFx3134MNJRnME0frk6pei/FZMgPQeN/vr5V+\
gvpUU/cbWchCzZc4XLPTFAnJN4idUglQJQFEboZfF0T50SujpNVEel/awSGP18QFa0UF2K/\
URwT2XeteqsKOzbP0gCqOVHlgOVsKICWC8XlN+o8xYvv0a4/\
zt0xMlZhKIcTw1YCqsfaUSrv3EdOAs4FE6W/wU+0JKs6LA+5E/hnxAimUBsZy0Uz/\
r1aHe0towOLYE0XjtYaxJNIZWMrqUFeqnycehVdHxpVEWmgmybfD1eDj+kv57vCWnLhm73+\
gIdUUkqCsf5As/dlqb/2uxNSfZpT2IL4bemrjsXNLJcP7iVe9M/\
2trZPNnAFcODQL11mIguTs10pNlDcUwwi7LDzxBXJ0/\
w1IKqZSkPpUDWrXYSmFkah9MWzE2KM89tEobAnZ+NKlA4uTULlursqs8rNDRCF/\
9hPk6TNTsB0CalCsGoT4fGKhOTbw/QLbE3RwWOfxKa/4RtZFzmxabQKcf22OxAMj+OBnK8Kbc0CKI+\
lcLskavAeDM8JinRjHQILkwo8o6qC8wmc4WgICVh+vhuuvP3MUjL/TcemJZPYw/\
q6G00hb6ys7LrEZYMzukB98cS1Z6PX1Ny4Yk6V8lxuxPxdbei8nkCfkwk1Sw4cZXREVCvSiGQbrxp7\
b2nnpVccJ6M5b/oyyCvddORL2Bp1WYLlvtnqCHRuPplkDPKZwZGLt5s9BEli1k5tpFNPPSxYNL/\
5VI33vD1/OTzCeKrU5tJPlXFBRUvbzEH1RjKr//\
Wl7Sk3Pl54kMSokNrWYQQbTJMpNenzIjCyfiwogp/\
PVNRTYcZxhMGzfqAlp36gdrmkqsjAohCVrnclZIaBUPVOI8ZLMaj+\
ykACStgEtnEzBRsGx1nujpKdOmUPVCSukKf77u91y0NC+eCvTNsSwaGf4xW/\
z0pJRkgJxlUV6B2X7qDtfmGKVjq83q4KmkLNLlkrIhoJnXyythla9a/MG+\
1ZEpp0ygvZccSwz6jT58dKV0ZDzNZOJJfKPudNIRbzKewVIpzGL6g6V0zNl6K6fdnJ1uaNaV1KK3TT\
s4yOQlk4KWH4KziBfSdr8pDWJjfQqb7p2eA9Wd70zxPRM1srj/rJvoNHZOvbKNuh54CG+\
BFBow3L74Cdo3rDBYmcihkbfpBfibUCgoF1IMmnUnh0UTAa+l2OL9R1bSgg0/\
Ke3gZSIIl1KAPFh3CnKqTSPH86l1cd+5rK/\
GTPqyfUzc103pvksG4fNjuyY64xXzmwYfzhenKCNVO3G9YjE5N9YYp0JyQ21soAoh2fp5bLPetIU5K\
y0YHcMDl2ymPvWpEQMXGQDjNsAt8QNqP5tKGEZMUuwXPATjCDfksqAB7IXMJqMFghA4r2svOWMvtOl\
+aKWW7IMvM6CIgwDoBlDJkUhWgAh2YytUc/\
nBqiKAshaBiFIej0H7kXpPaEQ4MYl1x6won5wkF2kitz4rhF3LE6yQhB/\
1mGgxT1qKgrcRHEp7psMXORo45+fWHk9bE7uWOF8E0zK80QzVuRMfNbL2jHo5b4pzpK+EXxH6Y+\
fgVML5Hze//vm7zYcf//zwxw+/Pvz46y+bn77f/PTtdw8/fvh28+\
EXcCu5bjz2lhZZjkldR0eNCSNzFPOss+MsFVDEcW79qu4R3IMxoOL5LSYQK66r7F6+AIuumlWL7p/\
6R3b/khIIClSazhyXfUBtGpatND2rWS6r7px5IYpk5FPC4eYF78nlMW1dFc95o28PBSZPosxj5mTqQ\
8zwiR4j6sOiQVSrO/ZJ3RIFOiHBUp5B9ks7wXU8FT95YnnQ6TxLGGu+\
KjALRhCrhv8WNqYxAjENWmLQlSJyhFmUncnAm0KnpIXIqCmtruJJjLpH8D/\
LcT0WabpUn0qwOStLOm2a4e4DFUY9gRnG94NR5cqKgCpYM42S3jxDHBl6KejXb06vZdM/\
eslYIotiqEezs27PlCP4WQsYxKwxJccZro4TiC+\
NUH5Iwo7SUkWPuzOSORpRQDxVp9VOxc3BMa0hRAde7onBViVHPy96U22kfYlSza2QDAap2oHwae9XC\
FSwe0ctHfdD8GSdRYr1eIS4n4XGgu6E/NRLy/EqN1RgF5NsE+NdDWt7U8yQVFOKROUi2hK/+x//x/\
Q8+6B6M7gJtcrlFpeseyiu/cf/+h+Zbq9eiMbWQp7/\
Jgesus00y6MKsGkz85R7MEdyBstffRMcydZ0fs04KcnmV+R1Ic9OrNpo7IXN7Ht8qneb74yLz/\
S0EdXix75tTruhO+gc0P/59/+oXiHeDkuV1ml73DyIJZZW3H/8739X+\
DFhiiV9Vmoc3WeuhZHl2E2Ir7PefEXqYklA2QMjtT/TKdP+\
0kiNzEkX8LHphhWwnFfAq2o7HkBOFtg7m105i08dS/aCpmwxBcOpDFEKvWvuDtCpnW+\
feyQ9rKbc4BuR258MLvJqnaAFR35vYvNKOFJ3Nh3lJQnQuXhNZri/TFLQOrbnRtO+brwVyCMr+\
x2M13PzXg3+\
kfBqQYchNyGcXmEHhKFjPw2JftMNm4zkNZgg4SxBAgF5pjvppZwClqpwQKbVLLA7RCOKXbr5TMasYc\
rW/bx1rM23U0Ou/\
TeQGSfGFDaaQ2jRGDO8MgXzajOFArqwbEiuyygwJevd4kZW02c4iRgh6UxSbWtZjlSybXGVbcVcw1f\
du/KLNGasfZUIEZulPY4OJgUG6mu5MgPjAFnALJu9vqHaXd8z6tV6F/JMd4rHKD/\
1Q3Mo2UCDMujsk6zP6+38qRyMS/PUj5uHYf/cXdpjI3JzITzOH/P2GvCQIaiqJuTsph/\
JpVhvG8jRxQ4aTdumcREhRoKnTzozSqoyXFsNb8ByPR9ysRGAGZ7tsVdAl0aEjs/chh/\
PzUMZTSHWCDVpNM8pX9UcVYNTaCSqmV6j260yzzlvHb41jv1eck07eAIYPeHR5aV3ZK3r58PqZyW65\
y5RlpXUAvdygIbujUPrO8DPz73jPCUwU5LnLXixrtyOQUCjtshCvxTsAHUgaQyciQ3AbjeBVdKsCh+\
y7eYME0bnlbIQ/WC+XKpbJIfqYGD6a2/\
AVpQp3vKsayT6PrqTD6gT49XsWaNQ1E0DysaqgSvD9lcBcPls2dy2AcIhr/\
9acoiD0gEujtMH3fhGXuSDfeiP0Y+zPyrkVIF/ao+\
GwBCbblDGxWKR9bDffeoo1wp2jviKYqewsdugWbDTyEpAOQBmM/\
3GZA8VN3Q9hBxd5p82nhpyX8yocq1xR8NdMSJbuXK5PoeeH59JXocvfsbsI5Yv1CJ7mX069C3jEo0k\
sFmzPcRaeLMHxX/8lsi+/N93mx/K/\
5e0UIhXnIbEhNVlZMkWYkbPVj3Z2d5RReGp8eH5LBsphoO20qAVQWAK8zEPVNLcfqiNUpKCf2fmfP2\
RfVm4swDVrWjk5G+oWah3SyxAHjl9hR7FkaKlraJeFpJosnDfvdv8rcQhzSDJ+wT9Szs7KiHqvFG+\
hLgDe4Yw3+\
btA7OrCBTXSX6yAoVV1ZNGhPfoMvNsIrkzm3BVkq8EvI7JkqRmYsynSz7NLb8AQrcZIB/\
gAO2xKBrXwRoSLrBguG+N9D7IRnGhqkiemFqYA6w7h3fh3EHlL0QoFrVwMbPmVuJUtm2SQoWtU/\
yBf+lc2f6Sc/BjUFNIDC5oXAH+Lmx1L96Jfqm1y4GRbhsNSprB65Wt9jCMNincviwbO/Bym8X/\
pjp8M01KVtzLZV+0dVMyBbKOTB1zyn6oYE+oNUr6eqd7zFtkc1H2datoC+UtZKnsgRDwOtSQS/\
jLC3ZSw6pBAFWAcNL4cmy1smInIo3PGhZ4pgj3bvPTSnUhenKH1qJ2gakpWVaaYrVxG9uLQ8Weas2x\
aiPnQPj+tn8bygEIvGlX51tP3ZMA0fabF5QThduJ7wAN/\
InQl72CXk4uYDcFJka94uJ33xJcrkP15jjHNS/eiiyHjgfZv8BPvPiocqNR/AsZjX+\
JMR2IK4Lw6MgZGPEeWlHW5VwrJ9ThsZE0YqhZnpwZXFYMwdSRQ+\
FVo0vkKvbedbFoBwFkYkVxdG0IsY9KnKloJM9Z2xSe662+\
owhZGmvWm1iVKnyZ4VJZlK6G8hWY59jQ76sMJ+1f2+qAEbXCQmlcaSc2NDJGx/y+\
7hu1pc116pgoPstWObB/wGIC9YItxsO0V6UNG80ycRyeU+\
cLsW9gZkSGoF81yevJvP94hen972tzGK6X1qGw6E/qWR8x1OHVfc1lyKACWav8k+\
vWiyBtDeZNo42nWGdPrdZDABpSNvhH9MuM8ia6T6i+Yo4/ulhi9fPDb306eeBUYJ0P+\
4SnpPnS6hg5qyyTHgeQ3YzIJoWDXLAy4E0Yir3Y3t3VSa9xDTxLMIvRnRe0SIPMY4TamYyDHV8nyqW\
SXFQL1gR+C+\
2COUyLUJBcaSw1UcCifPyKIbOKIkBNBQMUNwVWXlPKgXbYFXOGcoW1wYE4kQvjOZYVXbdd22RGiLgW\
89Ma6S+zNtKQbMMbE8ptWq18AsfreRhhUFbQ/\
XszZVGZYT0nP4aihKyIMuW2fNm1M4TEOPKsKaqAkytSV74OrQPbr1SIKG+\
yF3yK3LICqtpRoJ8d0bI5PX0jw57fqwqsbn24prj+8ntPjQ7MyHwI+\
Fl3ry55MRHdhyMSf5Ri99RfLtaSU9jPkYn2B0EIbleYrrlA3FhGmdkcgvhucjO7vHWsQpLQ9RUA05l\
vB6KlJ7Jco73vXLRXBGpy51pCA2QGMEfd1AAqHr2RRe2EARIr85kC2L6gZqHGgQUyi3raVsjPX1Ep/\
ZuQ3J2Tyr0j/OGfM8fLV8XRCmvEJIJbWwm5p/FrK5B+Al+mS5dq+UkNfsUejL3As+\
ntU96gRkqTwNUP3ivk2NEFdKmcyO0eNeWSmGmIIox+\
QZVNp9DsZW3qg55VJ42nox2ppqhFVXlGdvrWWePjlqNonsIoRgdrJPLt572EX+\
WaX3VGgCPmmM4KfEWD8Nt/\
bfxFQYVhBFxPyrZmtLhwT2qJ8tuv3xOLRi98nrFX3OksRA0KzrWwSKLRZWB0j/5Me0iCac++\
LnURar2FDzJJlKRZacZ9p9QqdUmw9z2XktV7+K0fLJT9oSkJ/dRdc0oJYrIL2+\
dGuqVpZlOizG5swLiBOcGxvpsUhI+\
XRiCpDq0joO7mhOpdgNo1LlhLnMTCeiiGvZRCCk9pc6xSY2I9S9AevxDOwsRoRketCTuC1ZvmA5cve\
Mlocj5O60bodENCDyWiam0WaOEhI849KseDJBLed0YFJXMVsNiBOMla137iFVlyxJIOLnqjOkyf+\
tfmyRrkXu4T0mZ4o5N9C5rZEjx+SJ+CaXDIRMQtwsTGRALx+pZYlQxJYyS7+\
QpT7GixHqTeMKm2mW2dXGRQJvOvLaomMtAMx9hNV351JwiA//k/rFfr+\
AyjWnH2gNx35lXuo4Rk5y6uO5nuIQI6L/khQVJgDRuAzIC/b44fcWeet9FKszU5q1kcH++\
AA3rsP28JAbEBOga4bu5SvsQ5/TA1hhYgrEY36lZHLlC4BGZw15w/ymfP7B94v8MYwe6RDPQw6cY+\
GRC23UDM9E72qdZ8OkxwjFNQT6YRdB87CNXUXHzoP2t8OPY+fgW1pBcdjfYC85zs+B8tZ1P8+\
YOtmcD+8JAKxVDWUv1nz6XUfL4Gnc/\
J1BtqngxZPxzL6vqAyJComOIStqvu1XqSz8E3au6wbkALLrtCSio2bBE5U66/L7q+KDMoMX+\
YZyja1IsS9WwBlku2QexPbaMq2l4v+TvhxrzBqst3z8X61B/\
3yyKNd1SPzvrBd42KhfGLTlfJiyQYFChgSTkZTVpIo9vHxU410VOrLgGLPJEgIqbmfXoEDJ0snyF6y\
mudzDrxifZOqzlCxkuNLoyZxgh0WZDsKRlusRT2X2JCgF8ViIFrpob9rvCUYkYIt17YzdF8E7fsWkj\
atPPP+2er8rc5sly8MnzCiKL2rpnGL7V130tr4LE/flRrx6Dib8VI191V+ds/\
9mfhdLIbJdJl6EFvyfBDhPfKf6RvroUmgsKz/\
JVBlXcDGkCdxS3LoDEDwGaEoP2z5dTkqz7opqaB2idVBzx2Q+\
IJLSiY3z3PKjnfCImiRSiwzQ7t2oM0CIVVjJGNMtJ2YIBWLrziEk2OPVlJjVcaQl8hjqhVarpt3Kp8\
DxPy+PA7yTVy9IdZH86SYu71FfLTUvx1dZ2H6cia5U8cDYUNLxtg1vWxs6KtnGKQpdKw0sdhx8d7SU\
GtN1nu/L9rL53dEMKX1kQqpP3yKxsSAgIxJuFOoRMlgmi1jWpj7UHbn1uwFfRzNhUe87WedM3mvQVg\
1sTMv9fxWIIwmHtvRGGZEX2kYLIt/xtqDrelpFbkzgBSPGbic/\
1nUFxFP51Rc2JxoSlsPclxiETDzMbtiMcHKSNCt3xplKSBqkLw9efXDNjyzvVQnZVyzDwJ3n+\
8iESVBAvf+GW2q+JOGfnYP/ru21azKeUjCTHcNoYcqkPMRG7QPT3vdELPNmygynxduxWGZnn+\
rniyVCoz6ECNTiYloyQk0hGSRfEt4knjOxyMvwuAp3zou3IKcTROzUGZ/\
7ykS24cwznqJNyz4HYX4i0Mjn8QgdMZNMa0nYF7B926RKmbb8sO3bUqLe3WqeSyFxsyd5AD/\
9VwWfQvweHOQQXukE7MWXM9N6S8VWMj2yu3DxhnWIjen31uE5W2cgPjdWfoABHgnnMj5TgcMRyxIB0\
bbDG0kMvYPxoREdnOAI/p5Y4JrjFGSCcNb/Iaeqq5wSQ2apI5WZUomTN1/\
7wenk7a1yLsGV0XLdz1FsxQ+9HjQo/P7BjYeTOzkuVWmEwECKnvz5btA+\
vAqGaQYK13fTQYpfJ0U290v3IU4xmdL9+BBb+\
1qsYr5wIZKA44tm753WYfuSp6PcwzoYbZEQyvNKAl3cksThvFbNM7CyHQlHpdiEv4hCFx8iGmbbdqc\
9QGpRJ0yYxHzMGZMqJRuCZyYu71Z04NSzH4bIMgpvZm1sAjQsWIwQoYdzvM5T1gvNKxVfaXqgGKXV1\
lpPkmPOPnLSwV2iQV/bskkiDR9LhrQzeAjFAOirjRclRaMCPIUdkafuff/\
kdx0o9NiXJPMEqwlVoZQu1FmBUFZmHxgfL6mQ5ulgNyqW4VStHOOM69c7TH4EfFm68vm6fARoIqi6+\
TRD7qd4kBC6duVqzKkrVyiSpaX+/\
6lafu2YzyQ4XI0pjX9dxZwq10yXkkwgYD1JswM1i9BXldbbzx7Q3v7mQmvsXf9Hj2NVvER5PuSmVns\
8s3uMZr2uOmdpOBehQ6t5pNIbjM03TPbGqhUekHy0EF4arjGmX1n/o8f+E6g2+\
Rr5f7kBzcZsqhUKxPC0SssMgJp//+GRFJF20+\
cjl15zx85QNPDv1TSQoCEXixRUuBoEajF9hFd2DrU3YrodNyrqiO5TT1k1BOf1gKdDa/\
ouCAMTuJwGgoJv/uLvVoKvlU7OtoYkUXRVm07+5qdR3Os9scq0eT9orf1F+\
pftM0nEJg0Ulqsb3yPJWOxC5+Dd7iOoe+18/\
mdaqoke1e00kOZluNBVmnS2Ufye0sxFKWJc0M87jpbDw+\
ZwJD68SxruVY2cKdzsOAu7uJc5DUPlK7Mq5qdcpod4slwhtCSuZPJeaGZtjQEkH8k5UH0LbuxhP7xP\
xz4uMpJ/c1l5acWJa1K8zfZVG1LlsxyG4ASMWJegOOLNUdTNkqpeQxjDpv5te54KOeZzm4Hl+\
7VFU3EEjaHI122QaZrYwOsBuBS6odZ+O0a4PBs/1mUsTrqkIMt4l+eSnO4iOqomSkEDCX8FNolU9S+\
CMACi7yFlxEi/q8oZsN8NLopGYWAntgjQgHZl5aci9OyR7DhaMKjxKmDCQtwusKUhbRljA7z+\
ETRiVMhNcuBqqZmCc4kkChHq7CTfBu8yd9QaMCcmzfmFiIETCNy5QnjxDM4Pv6n39tsFck+n/\
RYKGsfT9EuJCv4bAqLf2krlZ5z/\
e6cQTut02MhhJ0R4wK3qmtvDtQRXk7zKsUcdFuYjmchwwbY9fmtpkChpSmR3s9pPkPcxrkyIuOWQmE\
sbiyEkIaeWekkSDRqKs+oMTc6Hgh6dnmqEQicYe+50tRd01x59TPx4h9lMG+\
kcq205urg5mtvOIpnl93VIZSTS7D44AHr1wRxeauuTwPzdMpCmCnPo1Q4oIJMwm0JUGywiJKMjno9r\
QHRWBaoS4loajYNWqYNdaibHfFP2p71Ta6cEhZFomp3o17fEwO/\
fPKUjh6p8Oo8XHsEQ1zyY55aF7H9+nEj63Tomox9M/tsfu8ufTSPtd+\
KAdCOuZhQNv6qrZy8xfOW1S/SjECcHzKb24Nrx9jSiLk84kqow+\
jlQSsFCYVzvJXxdCVlFu6lvKaBEhcbJJw/Xxwev9uSpzxeo+K1ebASnrPSPU+\
6EKxvf6oINap1dWpHsNv22+\
WI55K9dq8NK9kO6dLDSY4nMoXgvVyiYVJWM0Eh59wICJGfOSurivGaT3a3qr0srgoC9S/\
JPYTKgCg2ggV6Hl9tJi564k1KnMaC7yjpf7G4xi8GyiAaoYdY0835q28eLMQqIoS3f8qGags2Eq5OL\
jIqzEKkHDNgP7a+bH7cXyVckBA31z+4Xo+SZHwY4vcpPzpdLHveI5bjaBbZMOtfyeUeD6DYRUn/\
hMYU/0QQlm5pNoxYUAX1owrOqPer6gTTAUQyD3cOxceu5E5f8My+A/T/\
pYLLWr6nY2ICkliebFoAlvZ2TD8Qr90jS4v5JjLtT/\
10IZ8QQHyXGLQkTMS9JYeWlq3S6k5PJieTWL5cHBqFy61caPIVE583/kw/\
PdQlVypTvEserms2BGJm1QoYT28LAu2aG9q6qFRwdZbAmbHa3S879Y0+\
kccbnsM1rBOizLqEv3dsBvy92fHkOCZoDr8DcAq/tfzETE2Yd/aN2/PQjazlt+\
WhAMk81ONRz0dSxuUfkIf5Rs9K4ydnpPGUw0Pl/\
zFibmSWkiN0w476PuTSnf9YEqQWx2Y13DcM98utZf9lVkGjwkBm1yMoRsrf0uwf9rJW7V68fIB5G8q\
cyQGo4R471HhbfYWqcnWrNVUat2p4KQYWx9JdwW4PJ1283pezdH7bpK6i+/\
qemE5YoYpCl1FLqyqPCSqPn8FubIUe0k+Dg6DEgL9rR0OVUd3pA/\
FoAEg1FM3qGT8rmQU16mdUQxMqprix/NfcJRX0sH6Nz+kTgFS1/\
ZQOUqOh21NoygLTvuThKms9UNR40drSF4qeJrafdsRIjxKBUNaa2mu4RYQY42f494nlHJZTNnuO6U2\
3a5VLuubtwVI4OhARfNunSAs0uYvaeNuCGfM1ZJcIFHud121QOGvvxt+9jF/1Hqmfmv5/teGw+\
5Z6rqUwHffXUhFVjZHK6V7DNVOHEEuT/\
Aa44rGypCIe3TsY16Gr8Of9wmt2WUpshKdfyIx1XA9JmIEn9KoZd66L+zO1RKTDRvTAqAHl/\
jG20CLORWLzkZGFHBalYO9jsn3yifnIu6mQmd+CreGqTO+\
Pdbd4rhs84MlSjjGGDSg8PHVlGr4eWlVEUG7rQ8tL/9eh4njeOQh+\
iNTPx0BUjKxNHnJQRZDtCEIIeM47JzGNeekM2/\
Znk03UesFdQVJSrU7je0gDcHXgP6MNcBGRnzKAs8md6wjyAKgepe0KRLvy3p0b4sfVLhEy72PBqxEY\
kBG3OATuDeiJOuvY3fU9zEbWFaiqCaxQ5Z7+zyt7dsOQD8DXuCyUrUL/\
BktKdFuPFZcyqSemBqmeuZimZd7AW22itVnZd5aZ/\
aNmVXtZTu0AeRHrb9i6lBgqcatFbeerkTF3bXdsN2QRHtdbD0XLfEAr/z1sgmmZwNpUnGbSIf/\
J313GgWL0PyF6U2WIHR3RIrcnBy+Pwu2QflyrP38Y4TYqrJ8ZyDQfT+cOXnrW9b7Gc8rvEZbRi4+\
iZom7qRgpwn5mLXHcv/\
ofWBiPQydze1WGYWOIG9TnZoo5Z2iJgQZNZfJbl6cIeeqImXz2EN2aw12o7HUOjM2jyV2W8W+\
z0AHv8P0v+\
Tp17HlaDG5tdHNJTgVbJzMMhRIwmkYr4RS7HObOdpKuNclyWQQ59WZ09VA81pZrWukq1kEM2OdYdym\
+mZMkukQGO6TjEDl9cu8GwT59D7LjsxOw+\
2Rj5tlKYLZi6nJgHywiK9HVqZ6MdkVK1fImSQvaNTgBgaLrKuRejfAq5vDbLJYkgqkwHqgmWeI8rxp\
oxdzkrleXQFiypogOqhvUSd7GU+Zqig7gSzRISbUmVq5/\
ai2ALtgIZNpnpnIa1atTNY6ZzTZgJj3W4ngna2D0E1wj6nga4lHYOlQkhTvx4XQmZcl3BNA8pFFQpX\
aMsLa2S72VdMjMTKbfEzP5ZOdvhiL9HQb/2Zpk+dRlBleIBPTSmsqH+/\
c57Krrp1uXRTaujj03JM6yUTPBbfo5fJmMSDz3vx9Q/V6VrfbR+5Sf/GEiNyNTOnbYWAAOqO/\
vjXv3Ri5sQ200hpF+RNvbtxUc/eW/DjGP5Hc7Wj1rs52OT3Px7gXk/zbPCqHV/\
rMMSadqtyqh1nOidNlpFH38FTxDCVINg+\
sE6HaK5qREPbjas66bjujjKNTeOdkQ2bDCV8dmdcgy6S4aZAc9yeTtVk02yp1z13LBFOY7rC3SKFnI\
XqThJStPTstqEt37Zut1K+3jhmaVStqytcq9Z+fVt3k6XO0lpqVrRtNjwxnZia3/1N+8Gb+\
e3fXIIFY0LGzt8pp83xhyzMmClqZF/KUqA/yKB1VDzZhA+kr0BhdD0MqbBgJsBdEO+\
KELja0dm7Z316pnpW/\
ty5KxR6t4o3ObazpVJYb9HG16xkBVHs42qilVRyTsPyixGdvNj7jN6WmPGEY5tPP8aWxVXiPwg/\
G9yRGl3Nbvxod2u+\
0FCG8fnc6QsneI1coulWZHcQr8pasnatlUQZ2XxttIXnNIq0JQn9hdPnocitw9/\
FIxdKc0IX5gJeFl0Ou0ttz1w4kUdXuuBq+afCK1QWvtVbTSC/\
PlG4FeSSJJ0MlRGnNrFWwmSl9At20ZUBD+zESnpdg9WMWeeUPheq9gkZPM+\
QGI3LJSIBaHC6qfoDU0bqmzoP/\
dnkb3lPQ1RHSGd42CkBdSHB3qcQmjcZAJqD76MaqijXTHJex15s2ap+\
dlb0Ng5D4eQgqx9WgBDHfHCI47zojwFYFeag6dwePWJ8JcRXdi28JK5whlc99Iv2sBhvC/\
DcUF1erpLDGWzBIvkMrm1RAxEEVZFmGecGjxMDuAk0tKoG4wEunwAghlmy0xNqBdl+aY1V+kImKnf/\
IBEwxKWurOYtsfcFebcRLtWeRZDUXqfMICcGz0n5QTyOrAqieYGbLfMut8zWgoTLLZ+\
uVIGbsFNMUM4fpgyAQhD4/mhyFQQBZ5Ex8ZiZ3TKuS3QE5Viqf4JtYd++LnL1J9YoyO/\
EZweMZrf3simdoqVlaHO3JT7QP8UL+dQRGspvAfwlXBmjCmZrYLZNeWZqy8YxG7L+Sw+oeK/\
avZyVnCb6MYJ/4FOPWIbLSub79bgDzuWDWBd7JiSiFieLQwK2LNCdi7kduhDw/\
vDLVLzXql7PRVwnVsqYZ+LK/H2K++uNh+\
R15RR8xC2FWCdw6CvAqj1qLr8oUD61pydpkms47t9q5suzF93MeSl0bM1CJK91CxLhLebWYG6B25bD\
jvX9qObzEbIHRaauUXRNp2B8thSWcwtqd2gC9mg9Jkw3GC59UTvAwQEsajfpiuFYWOt+\
Jy29HGrBWumkT0XOdfGAOIdi25u39GDylR6L+\
RMW6C7NdN8RXNEMRdOnVea9OLHbDDeJltg7pcOpNK1/13JZGIgjwDEWhqOXkRsBD2oTqB+\
k0NKkmrR4ZWEJ1IrCGd7NzDsTCXtryIuV9FTUpnPg5FZ8sgw+\
wllxEZKRkD7iDamfXkSsXD1d2wUmbT2q/lQCyd/Vem2MNKk77wfqK73MLHkE0BJOApDBWH+WQAv+/\
LMA3MlcidnhsHklF49u6/nmU62XxLSvB4bEb8c2D8wzGTVQJBtXyg0APh+\
IBwhPPJV0fmZrtVOloQHngfukc/KDMFtCHbBdrNc+\
f58aMLFon0F91WkjU9z27aHo9Kqn8ztSUZQZY5oac8d8yTzXvqdSRqsjaVGgGhxvGFNH9JsYAMPemz\
ISaJTQHUZ9wcS3ZQH8tZ7Lf/NJAQlEnkFVxQje9HHZXN+\
d0cQVSNPo2I5X9hKhzP7Sfur0yUEr7SXmprLFCo6AKt136HE2kbYCKX0FOaL7fzPtCuFCA1FPHLFEO\
aAM22l75cvoC35OyyKIeuKalrEd1JSyB87TOIJwEPuuYnYD7GJC7S3bEZgc1uHMapny3+\
V6LVmPUKnTu0ZQ9XyR2b0nG4gwKKDlvZt1aJiDVi5wVTkwD4/+\
1Lr41KhgoplrTeBZpzW0rTHlSukyJSTNuZpUS4+muK/qpk1B+\
6A4pLrEJz03S7TS1znMqcSGOQYGw3X+0hEyOnsDLcbIe/\
UQnhjr91Vn2z3aCVkvRPaLdkJjfm0naSRrrVlIWEfBfWCk9xkC3jl4t5zjsEKzNgzYUZQ0a2dmEqnj\
tQPgZPdqvFQZBqbpbChxo28g4piJx1heEeVdczZtrC/B9ZaxmfQaNf2Vj+\
ehqWiOVzxvatabuSssCP8EOMi68T0ARhUOo3jSp5lLVuhXCwoNOH8WXqkJbrjZ5vRC4Sc4Kqeuoxtp\
JSnx310WW1IHGqCRjR5uOSWUIU0PQOU5KbhvG0ZjItgF7PAo7K6ASogNPhs4SZHXndO4VXaEcf72Nl\
vpO1PlHlNGps2KdxzoMPhA8VpVMmPMFobYNCVpDt7306LW/\
gRYZS04tWSXUtfsXbBtgY66jUxSUG591wfUhn684zUYYrH879AeCG/S/\
7XnYz8CMyGPQw80HQbUUNgcpNWn9WeYXgn6pBsldv26ul+e2+RTy6iG7tstOKXpTK8+9hj+\
dbfIjBNb8lb/\
xgtk6eUy0s3lQzaZOUmeIp5yJhp4wjv1p1y9vStowtxtqykv0eA4yrMR7hWNVVmdMYBhrsdOphjzzW\
zAmth41la2oc6EdGl5JZxV6UpNcDbGBJs0npSR/6Y2daYtIfBKYkdQ+PwFcYXAIzTiW4/\
brjpYjHwZxRJ4rALaXToDMVkFBfBDj+oGafsa8/M05t5gdZTeVO9NG+\
6tK1uTMQsamNysroMTu432505lWhgvuy5ZXYpEELZ7bH/dkhTbLYMcqf51AafJxHUje2HKVf/\
XS8L0GTEavrBfX5dtY339qLx5mQAFvTIocIRoGvMjK0PFF6Y0ORs4h3836m02ysiR8cFJrwj5QXOmH\
G6+IQUeUt2/GBAjxMHwHBrfJhgdrkT0l/TKcnQ+ye77fKaIJ6XhU/xVrF/\
TYIiz8LgH8gxQUqYphjHT7YX3FoOuQvA9MKQCZ6qgWAeMmtzXTTSaXgVvDFJIR5kIZ0HjJGGIHag6g\
xeDBVLbPJQ/uLk1uymOU3SB+Rab4T+VxxhQkad2/i+kXwi00xCyPK1RFb5Xj5aG+\
L4bp0LQKKj7Ln92C4j1k8SBtc9RSpuVP5cg+Ho2MwKmRax+BkOaGHus2oONG/\
akvaf2tNHZWQ53yTQoikLep5Ji0HCffEbjgnXxKzqPRJ8xUa1QzON422ns6rlnV6kmx+/C3735++\
NN31Vfukz6LicjNNxYf1nfW8fXeO83uHlOznZ/\
xm7erfBIANCr4Yu0FfiAbSaI8tWww9Tr17SG0BoMm44tbmTOpi72NrlfOfqKQzKwtu845cYd9FpETy\
8IuvRtLhZ2HxrLQlmkipX0PZ62nqKmKuNd3N5/\
T1oGgm6bbcq5eNYEXF7CEdmjBY1a2N4DPSMw7xFnYWaF7Vo+MhDaCMaXtS/JqzAjowyCEl2Y+\
FATOpOKOrl3ORa0LZ10GeACQkd6JY2l9SIokja14FGva4OHS9opqLvmRXYS5gQXKX5CkFeec2h6aA9\
H9rD1FsJXMUB3+FQ7MfSoRrs78dqHsW40ELUXQqb+kKt+\
hicVGyQyVsKJD1chpv3ru9LZerRtqwVK7AYwMT/O1W84OxtphCtIpNypom3nAkKa5NTgLSp/\
ws2ExvBD4+0yHTlTr+w/OABnGs9SQT+gV/fS6t/\
T8DOQqogTNpKT0KO7qOjolml6GKhxanLX4AeRWuWbBnjpLicaFCbLxUX0LcZOPo0TwJdoE+\
bhxjItFi/Muvz1nIU+\
NZFR45rCqVWVuO1J8Gdt0PDCkJc3ezicp8Eq0NUrNveDjFB8lLXqakLKumOwuTzOTNtb1h9HQLYR0N\
Fqrki6FPkgKXMM6NUJrEYycSsQLgJySRD21fYkIL88M3JSnBzURifv2e0T5NRaHddJKUWhV3n3Nl+\
EFyLFb5Y9SlSB6Tqey1croQj1ic5OOL4uK/KpN9S0A9loMXkpqYvETvLCWG3W0i+\
S6bnsE9GvwRTRMbH0hPJdaV1hWvsqRpKNBRypXEnIAmtjTuLK68hF+\
LblqLA2mxa2CEyIJtYewTPXL1BxeIktaiNsQwvI8bqb93ivfhqwN71DtN8o+3Vmmy5aVJtkzZtOD/\
ICAey+M6jjKqAIlgQsXd4lIHvucfHs285I+wWPPs6DDq4iG99dRK+\
NLpYxqJNyKL4tCoJHHviozdMZEYbu5fzMnySmPS7hPQ9aYNAygO35ziTFJFhZWFLWaO+wnVID9B+\
2N5x+stpcwBa2cRwA5qnhRg12pJhQr/akd5/\
FGuZBYHVXGBvWvlKnKXTZ7KRrjz17hqSawuC2slPaV76c0QaWjFrol28PXqeJ2Xqs8aTwgP3hQ5cPo\
pjLNdsVpallFysqCaQDdK7IdS2pyULjShUCf6iaMH/Rb5ZgEfapGLeQlmP/eGpKeRaxM+\
dcPFRbkLQqC8vNDRoQgKYMjTIRgt8YkteWzlDJ3kH+mkKHDm1/Uua9ZQuT3E7Un75eNn+\
bQyX8Y0H3F7ngRu447knGpNZTqeviytl3C9f/64YeHn/+x+en7zV8efvl18/Djf27++vN3v3z346+\
bb//88Ndfv/\
v5F2vpj0DfXeC2bKyirAyiFQZ9UpuwusIjO7wfyy66CjdC2asUrRQwt9BWPpVsNDM9SaCusKgxR6eJ\
PU+x7Xm8h4R69h9VE11atT5o4FQuaQSl4sRzEjStvySqwyff+e6U1y7Hqioudq/\
P70gQwS4XU4CCmuw/PvxkiJM1OS+nriq/\
hCTAYcEJKuyeYwuIsFJVhgfQwktIvFAs8fiaqERU1dvuuQro5L6JrYrczRcBVvxQA+\
4IWzImmqR3ca6imRIawrB0Rp6X59kG2lZroNIS1cRdjFtUPmzyvRKVj9VMfBu10GO/\
55Qo7mqW58TbbHTQ0gA5onR1IYBci6t8gUfLejgKtj9q8B9vgk4YQrGQd9i9uvq411Gjj1luqOyRiC\
WZdsl2VQKSINO39rY3+qo29FYhGmGB/QlrsrUqx05Tg42FhPOUoGy2O0sH7H/\
xXUC5bgkdLVxKfk3IPW3RstZ0yhnmUHG+\
ojtazftsd8IhmfER1SFzsQs7tDUAcMJuedk3cOQazRIRhoBkG4U1nv7R0G3q8ckvNTTnGmlXqQjqbK\
DteKcvT9uePWPff/fJy7/aIR3aCpPsdc7MjfPFQxJ5G1jzwJ7Ufm6lyvFo0+\
zZUntG5ab6XO2WrbkLQX6cTBx2fFbt0iiA+DnhbT4er21yECC6Os/\
GTW23YKDUZNHOn2QQBAo1Ze0aAEAlmsYtk0ovN8e2WuRnDYFZjJTqDrSxxdZIr/\
0hOhTPqHcgI2cfWYvAb1toW4WIv22HmYAcoZHVlVTKlYyENwrFBt2vt8tuYbFQ8AaToxvO26yWv2+\
ryPbyBlk/pxXfOq5XUGrtHNFrZxbeway9mXJSXRwVov9ojKxVwl6ZpPUAbHKJpEjOv4rc1LeWoAhFp\
lEnxOLAfz2PxN6KwnAtVUfZu/X2KjN6CHukJddxTqEracoNmxxEGeghn9HAVPowbRAY2hbSLorJ+\
a33fB4hYj8JukOOztDjhLx9Q+IiM8n3lwy+StA4ZSE22LxLJgH/dD0YkNBZIpcggZWEAHXVI+\
Tc2PVScbetx5DCzyX+2tvrSIxakZobjSYS3ZRXGR5HWNXo1G952+ePiYMHqBwfYzdwj292/\
7SmcIrFayGZ6fraJ003DOnjJyhxev1RoYJVEY07SQYEUobcr3Og4sZ0BVBLSfOOGEUKGTPIjb1gTrr\
xKu/vQDdZtY9uZjcDL81FffP5ubdSGvIrJ5OvYeApTmpBpW2zfHJ08iZoMVR+gPlgk/t+\
ee25xG5um2vjQSICCV1tHgF33JyJ0guBcfyct4e7s/\
VWTCVBIOQUPc63AbWVSQVVJT3VMVC9dx8N5phZy1GZJL1w6ERM0OQ9edvkC/\
HBkOacWIENBW5HMO5Emypp5pdMD82FNvIRfTGvnNgNACSvXNUueNcWR9KyE2Ev2gEYKU12o7ouPCif\
xZmiCkP40BVWLtQnsuBeEN+U3+LIiw9x8jDshWbQrLEw5yL+\
YBUiatbaaxirdgKDaHBkew9mtAZXQjKgw7PU8tUCUyarNhBPj3x+\
ZN7TjQ72KYdyerUNdHe3GJjj1yuP55a7KhwbS9fYzqA9a3ztFS3CWv4uNmLOWZ1HxR/rM8nyR+\
88g3rbimT0LoGjXPvQTlIkOKSTlgotHgOlQFnOvRcc+\
YqUInieiGsZOt84dNSmIAHVO1LjrnAKXv2tr8Xk0xtaEO5ZzepmDvaqWor3kdjYGUgsmdi3aS3B7a4\
T8wvQZrE2x9EajJkz2V5mLWSF4R2DxOdWYK3p1bvS1cybGKuG3po2GNYAOYk13p+p+\
x3CM9GLXggJ2PVrEWOWT0zaSW94f6SbsxuPmsH/\
b14Vr8kGFLudqhe1QqxUzVLm8HmXuKvkSGE1nLbqi2QtoOmalFpo0Mnt/\
dL4e3NBcbOLN6roOoQIPp7rvYrZiOJ2sQEaquGaTFK3fPkr0Dl6InYt8V+\
ODatSjYyLXhl78LaminvIYm6+O7xIM+P7fthhY0/A040gQ6+\
4DL0sLaH08dgeJbSyBKl5iRJAhtF2J5YjoTX0Pj77JIWw6DORpEED6STpME46Uc9KwTwSSyIXccE1l\
Fp2HDq6F34Eb7JGgHaK7EdepTxu58PVC7K5vs1GqRldb2WOGd7eUfgwoDmpp2GCW9djay2IR4c/\
TtbrVBKIHaoECUggCU0aXlC9HsmhlS7ZWHNSBbGYCVEks5TglClK8cLlOzChW+\
WFRMEJckpUdGVJvQSJ7+V2xVnL+\
8UcZtSUuxphX1PwyaLPIf5axotdzyRjsbjbenWD0DBWNQu8yvIMaHSUhczufVFvAdJ2oRIdmfHvQzr\
mUO3L3I08uaa/GeAxYvN/ZzW4ZEkY8znPTtx2uUnHvEtJ58Bg1BEop+Zzd7qeLFY7IQv70/\
y7eUxSE4BKAEgXpzcRkH7271r9Hmw42bvLPt40dI9H1Qfiv5ARB+GFybSMxTFfmM4M6OVcB/\
RjjEjY0ikp4NRWhkLLREcJQCd9w6niPJpcmwwI5pSEzfOWK7eDlq486NDUqVI2bfLWYVRmaxX/\
AFGYQBCarGH+CMUWqzqUfkvvRWN1rA/H3qu9ogslfWvWeKPJiNtaQhaOjJIqmIJpIttoaae/\
RRiKQm3Xrd87Ve7UmpQG7Bo7RJZ/073o75XUqWQfHUrAj2RUYXUqM/8sFFpSU+yZfRuj7dddI/\
YCna5ZIK3h7QypwjeY09vq2iT011NO+\
9Kqfo9tPgubt7MlTEY7YUv4hiqxq9DL8Xvd9drDs14uXykJbj0ylGjTCMDPrIdoAaAmY9uV5Twk+\
ktVbib3vO8VLZhV1GwLO3W/8pAWU2Qspz2ePZFRqUadMS9CseTX0/XYzJfBgYQL/pZ31tXd/Nv/\
fLf54b9+/a+Hv2wevv/+w48ffv3w3S/SB/7p5z89/Pjh280fv/vw459+eb/54aef//rnn/7y05/+\
8X7z3Q9//Pkf+uef/+s/P/zw3Y+/on0s3/mlXPwvD7/88uH7D98+/Prhpx+3ZpDH645vZALqln/\
7bvOj3Z0U407vNj9fj2rI5+0+vH1fgm3wJS7LvGzlTQavzrMC31ZXqWLOd5v/\
1O81xxfRaLjqXH79y9Lz84ZYr+\
327lOipZHgk0VDuBDdJluVWPqsCFZxbeVkvNt8R88ntxM6laxZPmKEz9Yq3kIQYyYrNk977SMVxwc+\
ECX9d+l1bm035rWVyp7tzdFEzQVoZGEo5IZxjJ50pzKMVSbkVnXskQ+\
UWICglUaQP8vNYzo1LGVlRsxfriVXHF5j1paIx82heTl7rYiDYVoD0tpNUJmBfZpU6rNjqp1fgl2fK\
C2WyFtejbmYhO1a1cGmZlRk7weAsXqzSBBHHB1F5iUQL8HgIHZJ+b+\
1IKDjrHhHU2NhwHkUS98EkC9NkUgnhLcxR2SjWwzco3SQ05lR6hHGmo4aL55KetWfwBXrM5AZ4RPMY\
VYigRuQMug9rijg3ZZH8bEcYMg18oOQsBceWWgmYO7bCmkAHBgOGsDtbgxxVqeMMgaSCrjrUkjSa2C\
4JJW45NOr2bhifeyhP+XyGhUmEC2wayJxrYI/r8LMbGgXiBv9za00EtGzW69fzLa+\
0eZkr22yjEGfU5FlipUzeVbyTwIEyUBQ9SGZ41mPalVDnq9reJJ9aUBd+\
GZMP0gxiPsop9pyCvbdBaJMHvmiHeTi5AlB7GP6gkcOjlUf5HOEMa143et3FzxSL4pZ7DqD+\
lZoXA867CO34fzjeu3ZQhTrPseM2gFJedILlyfjJMORK/+gsivMrh/\
3Iwg0sLRKVk1rB2PdKcQaogUy+PQomwhTZavbwTEWVoJXU1TzyNpYCD8i+\
bDM0IPb0gFCzZh2tfHwjMa84UNNsr/706vHBe1CyYFgVNTx968bl0FI+\
Qnit08i3Gomz8Eu0GIBGcpgImy12ImxgaLmH0qfK3Eqy4LC+\
gOmUWZS2irRbY662Fg1STzRTJlOTThl5sTbmvKa4vWAgrx6R79jfRYFhmpnWBmcx0EWTv8+\
Sd4oyRn4mmxcUaaPiJFurSeEVefQhf5dMfMyCKfW+\
SJwNjbL2WsWBatyHrQULKgZprBlAbzGXgKREpufNiWkBeOBz/tq5wRqxtbGdJ9s/\
daUvkTLQdvACsZnxcnZA4o/nFSFdZRhvsxw54XffBAUO+AEQID8DH1ZCSHhMnu0G/\
qPxeQXG48N8nbY+\
eFcPTrO2ZHwSTVK5W2UNyC186MMgUl5yiuNPiJDc2HCZ0lPzYhUjqk6FBKdckFoQHqfWR5JwzZyZR1\
XQWmgXuEcBRzntZi79uyjOPDSGTe/tel7i8VA5G1COHQuwf5HhqR8s7LJHidIvuBK2+\
CyqXpMW7quXLng/ATmha67O+bt23AHavkAP7E1ZJL1eUI2Vt/\
GoMzUge3Uw3C4OTPCIPFxgnjEU5vyAjhA4cKTqF1/R7s8Agu4Jq56OWPbeC73Xq/2cFqQ+\
OJzVWvLMQTzDVYduP2IHJvAlyTW7rwsR/xhSPaYx59tm68evt7qDav07uKG/d7mX/\
3wNeZVOXyvZL2UbE+UbLeHxOKY4uhZAYA/\
Fvl4kuc2CuCN8DSIunF1grexnchE5X8iJOaAWE1WRClY8HN+vDIJTBLSCadQC8236dc1XWQYmQJ/\
lzcggY4MaiiRHUAjh16nAjWpHK+\
mf4m6wSBJwJXV3g6VoX9eD08gTyaSLSVBPyaYqHBbS21s4FhaqquuA3M2VREF5/\
hFY0rpZyksxeNZzcb/aIJJ3ajjwSgxyPnHJ74hj2tzLcdlGFl6YpRbvAXmbtBU2T+3On7F+\
6VjVtPH+tGxQ5moB3g5u1JVhe0+tm5ULE3m2Yrqk3/\
8epbP3yM7VxL3SbKgzovTcpViwc97JuHsvw7kT0lhkyfvZMYbFb8goAQsCpC3gLEJsAOzUj2nixGfR\
MxkZrHmB9ZBsGD3eU35FRk4rc1MJfrh3H3q5dW+8UmmCE93CqR16LV85cDs25sQetdbMWRX8LmP+\
6G7WObquovYOSJSzrbc0ztVwpLfkDAOM4ZT0JTEDtEjTfJ0QqZlUy1gzwn0Gj6Ks7HV1pvv0Xta41D\
I4vYTgHdzDHEhO87fSvzZawG3bBOEUGAh93GbwNnBUFoZT7Yduw0otzYT9CQWd7fyY+\
gYiUb5qPQLuEkXpNN57/JuotklykTlTEqE/Ys41mIEBlb1R+J5wAtzUrVR+b2/\
dOdz09oL1zF4azucRAaXTH6LVrsE72Wp2Ak6pemutHsVmOyIat1aTN0tskdAJDtmnH19uzGBdqlJvN\
56ycnuYw3m9T7U4MWsZGW5Wh3tzesmnS85zN35v6+\
6XTUsUPIoFBIgW0zlFfcEISqRoEaKPwFBlHxKqs8l6urK2zwry1A3WhUNKsCsMKEHlSqTzu42JuEf7\
mJuiyuuslyY4tL+\
QhLKMyohBP57v0FMnQLdVmqojqnItdYwpsU2oEs4zNjssYizQpe2x7gBsvizH4kYV8D0FktUr7V/\
SDZ51fQaAkAy3JkXsSxMY/aPbSUP8mGpbsIQb9p8hRPDJpkF12zI6ye+tl0uhraupk7DdY/\
O3Ix3TeG8qC6l+mQV7Rx1Ftzsq9VNbyXqDoGTorWgLedo4ZVS9Y9qZbSCiTPxWAxjK/\
9kCMoG4qxEsIre8nG210GcRbKM8rJKIPuy5V8frk+99feKSTy2+vf4M//6sUMx0BVp4nYtCk+\
nueKALYGbVZyi0eN4R0KpUC7Qd4Hl22aNW6mPMAz5gxfpeyOosmlvNVL3f6A508pCnp+\
JRDffKqGEnqihury/6k5rlN/WtYsXLAZ5jBYgxrI2WadHm6xeRIaZHs62BDrK4wq53tOKQYouVM0e+\
7nVADwGkAnGIu83P720ROqUSzcfUzWaL7kYcQhs/+FX37+6nk+Nj7WuBmOc3F9y/+\
nhYEzHJjrU14R6LMqoDJq5SflKm8dHRbbq1Cpn1Q7eG+vJjiA0Qgbe7hTmzjGtRg3E0es3dXPN37c+\
nHhtCjRD0J2BrW0oUuFuBAh8FrOdJsj/IIkTXpfz8RUTnVhiu7r4oT+\
H4x3Ka33Sju2GvPGJtx0NYGAjJLOaf0UuF50TwcZJhtkhqgj1m/\
pGpORhMyZbP32dj57QCkKVRG9CInMCcuOo/\
wvoh2V8C5hoVNQEpr9NJuuVVfBBPhWtmsaQTJXZzYcj0Gmx9ScDFO2CPuOlPT4mjLwb2znitL9KEUj\
xm39th+fm4npUSJbEEnacU5Kbkr0gcA4r0hvN+fFYxbfHxgrSAh6nMDvIzM6LR43Vh4GXahkajUBS+\
zRHNqQ/9k6r1dUs9+nUS1Jbj5boD6WyZRiPhIRgoLeT9pVmTzyVeFutl4+6IV9+aXIqsj/\
duhpVdIOD6rXEuq+IKslDvED2WERH86hfS1fGkL4+pMIQotJvlKD/\
1HGwXsNhoj70qCxHqb0Yb4PU60SzVs4E2PLGe1OLhxuMMkHwTokRm72/T83xqrpR3GZOzM7ItTW+\
Cp3r0lEsrlziEvO+\
GH7cYPCEg8OqLrQ3tmRpXpsS8Uezu7tx32vdPezdOCdKFPcJEJOPWvlyfgkxP7IdeHYRe300m6RUHd\
wSXRojJLsaSinN3vMqF055GcBvqdPmnCvACrCmAXfOIjbqNnD0/33ttSxvkzb8MOo9P/\
e7trjxPw6QGCzWeu5TrR2hG1Pv469DuWaJBpuWntaOhexXAXanUZ4/aONYJZxY/\
OtUy2MbDFQ2BArOMLTomktJI59byVCcgNbqXlahFQMif389QyPCp0cR0hO44rksEP0io32Uhss4FY/\
3ICp5m0RNKC9yg/\
3yanU3ZxlEklxiO3GY5ck3f1AQV3e281oJSQGI4Gji1AgfiOTUI3XciWCff6477QYQtcvnykb8dJWZ\
/kZUKT85oOPV8ujJOA4s9x1JHyj7a/\
DWIpI3Y7hfe0caxlLIHqMJUoLBu2qkS5HzFhd2kTFNKw7i6NlA37dnuVt1Q1yw61gW+\
1ctNkn88ZlER42SIZZrtZig787a8tfGWzcma/bn17JSvTS4ddhO5pOlkIAN8/\
fyqy8SmslhMgrJbUR23g6T7WGZ0H1++f57eEx9uyyw59TTEMvqnynJmeu+aj/m+\
c09cMDn3jpCSZlkbBKnlz2VbomRlHge/CzhhHYnegjecL2ydYKw2+\
nRZ6y39gvW5n3TUdZQHXfJ9BNzZN5sEOYdD+DWFqVei+\
F6ANuDIAEw7lwy62dy4cIW6VMj7KgfWY4O4pC4cyz+\
NkuxbSubRq9M35ggsB7WrL9Sz0tx56q5GG8yP8HUtgoHtnbd5p8Kp3stAehT+\
TD791oUM8Obr7Gj5rbxiGj+KDeIKZFB5BFsbLr9/NxlNmTQ5bj+r6GtfrYfxW/+\
tST2r2VDSS82ewYcqXJmehoXHUWwIkvo3syfWWjahWvnzWlPW5P1bfWnQVBMAr0rZnKo1MZWdm2uAn\
JWhFaI8bgyokjMvousGWRu9CKOb751gjL4XonznQKac+rM+\
tZfCQwIgRf6hHnEas7SGYVd5Vmwxn755gVt1HGUTmFw8/TSoDk6gPck08nbjVcJUwO/\
GkBlLq0PtRv741VHHTH3d+1kLBmVEQX6DZKglfCTBUghPVClPX1lDar1+h/Y4+XZf2iGEpuVjFO/\
phPMVYz3YqGNugOFwx1LKn13h+CUcHKcQz0eD8enptV/\
vVx3qI3uMUtf5WCPRFEDC4cNxbuo525l52P081M7WJvluQHCb/NYHNKzYX/lw38TNNGuOLzGyQx+\
Gs4S8w3Pr+\
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\
bUUdcf9RK8RWfQmsrVIlMJ7O5aULg+k2V/\
YSsRk34LxX6lBBCeQ0KSqHqD8hhB61pm3RmNRXRXZcnnyNvJrSWIQJVaG3QSEXDf0IfQzIL2B/+\
3NA/esRALB+\
KOQdEYzBTaVgEfrQk7HlbB2jYaO4JaS0spWhQ8aIOtNtiaLaH8slRC4atlK3LlmJb5TzRTzKh341UP\
lwq+RuWRm9hTZftZUHbJ03fDQ/IJpHEW/lvfHFy2mZ1SuR1jabOSx8aPBhG0IRFT/\
8TkztIM7En5Kj9D1THEe7NflmgGNsrkVWW2i08FmpjAJoEd7ZAhccP28C4pXxoSTWlpECI8OyHzhb4\
2LONMsKpNHyZRK9ksorla79UK7zVsqwEeWXyF0HuEK1cXB+\
gqYzzYU3iQqck1an5kpO5kzPppx1KMdXTsnpVVSBasfndapzxZSAhnTEBzcZD+\
5XC10qeJ02iAOHm6A4zgi6aHAZXYa15YOcC0HYjAxEpStt/mxtWEvn1jqTPuX4Dn58OUwvB93gm/\
psSu5ZYbltVlqB2Ejplg8dd3g9ywJ4daVtP7Jdocn3l/HMiK4MvKyTQmujI8FAwv6K8jAbHAA+\
MKZbbBymqpxjGIZJwwf23nR7yfSQpA6Ofkd9agGRhyP8+eeHH//\
0ndAvmM2zUek54QrejOg31KNQ7FLMsHOTsydK40Dbgq7Tm98dgW46jbrz3X1fDxU8/PDTf/EO4+\
BayGQOSgWkEMvaT6uzVvuQ++\
Wh8YgkOuO4uCV9YG3LtkBFK7TVyEaWw6dnzcrcQPbn8hI2nEqHWSGEXGyjzXgEjUvWEVL7PmfhMreX\
XGNrwpG9TrCMprGD2V+\
VdR2nzPRcjXjBRD1rA36ykQ8rs6E8XX59SHVmHyC2YejMnICkXBFUF003W521HTcPco2/\
EPDpw7UKWqvYC47IeZJO9S/dsfyHIF9UodpDyrXB2bnqIMFDii/\
zky04kRKaxHTlL1mgQDt5U5q03Hz1sN18r5J1XysSXEjPNElcHWfWVbPHPQhfmz99ev1dCUHbs/\
9S82//Ll/97d/+/evljLKgz37rz1JFkeliSVZe0lzo6n3Uk5qVGc+\
304wLPiTZW2Zora4fh0tHsuT0nNqpRNj90Fm4bsOGJeoZu2DGwrfLFj6WrTs9+3U00/\
BTmMS8uvPKyZvxUnLj8xjN9sPDFuMys5lxdWt81XGm0LLqJmh4Jd5PWC/Nwlkhqn7iA5tza78R8hg/\
SgLeJEBbF3qlizHeh200ACujxkq/z0ZoHfPhPlUD9Y7mn/kQ09/+\
87za92W7KYRaDy6MZbhMMdQLCmTPKWg9nlVfdP67d/\
ob9xT8anRiSFiF2aiwcdCazIfpntyGn36ejhhRRvlKCaGHOu3ISDMLZuZsQcfjOk3rWz6EXVFwENCX\
rYBcxVeV7x+\
DcrdyhtkdS39Njoa7TeohO6xzhfpT1acmLSsGmVvwE3o9xELa2ybhIanrvckc4CWo5D4tolOJPmNAW\
PzIB4g44jOcvwx281zXpXOPBzgonOvWo0o/wJvYJL5+7nvWGcL/\
KKrYQSoV58oDPOejTaAwQSAtQCxaM/\
phmE1TCgpzMkAsmCsdYEaMriC5ntptgOQaLYrLP5O4hR1FjfdnMfBM3vKtXxfO8zF13byZt5SvitPv\
7I6xVWYL5G1beD6cyA5YMA6mnDPVAt3JbQOiIyvOoB78CmL7jUCCHgq/afbK+\
pse65GAQmmuVd6XtkTZcrrJe9EVuajF5uzhf6/kY+xCYigwfTY3mdyGPND9Jx1njUzXGRUmB6Dqv6+\
dtopFVLXrpxkRj3bmbJ8oFcBJsx9MBpC7pUFW1yU2IJzUi5wQA9ExhNtaTRKrCegBecRMIAP9tkaPJ\
SJhjf0EmcUigFfMWEzWcQHRcRxnqYajuQSET0pmKFhLW8rLki4An05j6Ev7E9nO0irK2qq4b8r8Ycr\
Klq8TkSjux25Ecp7N41HgJNfhsdlrJysqxDF1bSUERya1VbddnU2G+WJFjJwip/+\
mbCR9he2NOsA8rwJ8KZ57y2nYppjIQ8fAyhAtX0xZqiKKvrScwmx9+nHX1hmMuH2N1U+\
LvGXs7zQQtCj/FqtHzmcOXiYmE9/ow5Y7DIwQgMCXWIEU0lDUvD4rwXZjN+pl+JLhP12lV4f9/\
tIaXb5YfofQ2HIqlOcjBSXqt5EPpb5v9wgngXNja3OkMSqP68BdK5v6zSGEHS8IL9fIe3XDc0bE+\
JX921unKKpMHCoQ0DTbuMhq+ZcjS5ByZPmybazeiqPn6lnnmEqFAMAcJCsUrUIOZ+/SFD/\
r5DaQbbdNvd8jZ9KNeJj0RAc9/DKNR0LCF1DFpSeuGYq/\
0jKXIZMGFZrCEoTCE52K1TxESVXl90qMmrWRsunHS14E8F74kn/+unqUGIpYPgjJMvKTaN2RbyX4/\
Gb8AsuaSVyg1jgcp37/cZsN7cqJfotRK0yKutiKxNnf+\
GKLBC6pLux5YcSH3j0cVvu3VXYFfkAnxFMhTTxEvHjb/cqk2w569J+\
DRa5JlK0oiuDCjgV8FEqf4H4kQ6l18qdi3FnWBxqmG05pV6j12UrRQwCeT0eCQ7Uqe5uQNvO7awUPq\
TeLFebxVijCHFjwK+VYhtbZl2iJZxXzYntDL56f8P9WfRZgZqS/KwPlU8mYkvbcdob6XSu3a1nhv6+\
dNCCriUNQmHFMuntqneg0ltiz0xnt6epO3FrpN8QT4tmaMY3Py/ObvDQ2wbllp7Aqpn+\
Bt0Nyu3omUjsEBNrPmTeADU0veHZDJeZWKiWNB+\
u5kKrNxyvmyzFEsfgggeFrBqRRiXNUtnTfoOsplrxmJwK6rtcGqsSr6YcUCFBCtbvmcoHL5cHb2oC8\
NWsYtT4O127KmtQLiGQjKgGUxTLQmMKTXCrk3ke9rpO+47K63fhcYemuw7m7jOmG0o+\
2QqXfKsdiOZn7jxDhkvVw/IFyX7zb/L14ImChCXYZA5O0mw3AYc/\
VbNH5vYgkyFV1IgB4KSEzGkbXQWZeZZCDwAid+\
5RqnqIUOIo5tqKCssDtYOeUbQgfmNb7VXkOymvDyCThkVplKj91SUIC3vHsDyJiOu3fBRUAd+\
Zz215md4XsANdPmLC4BeMVUpz3h7U12eZxVFVshT+UQvXRY6tFQDXPhs09ZIj5hRXqVI0K8V0n+\
jSsonKXcVZIZGMRiDy2rRSshzQ1NCn13WEl8a6ZfOgG1zlt9Y4/\
2qKyOhnqkppCAL6YmxfOGxDwEqKKyWV5FVrrwQxoolEh93Ey71pKdf+\
vsZAPy9qBjDwX0zQUXoHGBFLf5iPxycrNWh7okrwvrq5fmp6dnYyE0rLj5H7LP0bYUNLVYbqTtKqs7\
yAzIGnevB8cazFq8o9LFYOQCmtbHxCXeIkT7KxoMArlPDF/jXP/\
W0vGuXxjPMlixDJ2d7wX1sIZRUuGZejH3trfF4ZnHx6hGWNblYStUa78cy/\
J7wR9m8NKtaB4mHILoYX9nNTwjJI8VKPxYbtnm+\
bAgX22zR1T1moDHMqw9v41VjzLdV3R2RWAkCFPOq9hTEXVZHk38vwpA6/\
Uw0G75J1aqYovmdNZjnn2RAMXAHtqeaZRe/raetVJ+\
MxdzQrL2H7OmqSm0Xx04Q2vjcWarDinPIdS7sDjr/\
lzvhc9v2HfHpPQD55ZoUzFMIGmRh0FD4WNDDQGLHiWoblLyecOnWUaBnDuhqErplFVzM8G1LQZInWP\
h7L3SadcESUKFPnX54zOjrVV/\
LizW6RUpvjCTxI1TIZd9YMRMgKzneb9n2xsZsqVNY72HjjjJK3qd4Zf83IB0iUEfKHqgZv6RXplgig\
xPk6sufEgNJup3T9T+LbEeRRaq0HOK08lQ1ZxIyeQ8cuUTN6UyaERKHCcBT+\
vSf9N1QdSH4S46wxucf89MwTdhNsRQgnNBRJz0L5/GY/\
dRTbniv0ovug0gMMDbl9o26knJzWakRWaSJzGtZ7g+aBzT/5vgUukLHbfn7mMUhH5SdTzDm1jqqpf/\
dCfeyknTChw/fBqf5ILf9tMzdgWG/x1gBBBZf1JC3Sc23NOL/6E9+G8TyxO04/mLh9un/3pk1kfL+\
AUxXrju91JayDBA39YWw7Ha2vlqRmBUEITnabtBfnIoUcr/Zbpz+\
etbOCPJVlthr6PCMPummyfc33uOuTQ8oKMeH2z+SndBLpv8Jj59xDZ7Tju5AAABYxTD9UbdionyC9+\
Q7Tz9eLA4i4j3cs7K/8wAZxFq/\
tBXU5zHl8op4wjPzwJRUd55eX0F9MhdDc6EVMWs7obGbvAfOtjqrz5WuG9IX+cVEe3dx3S4iRPO/\
oFLstDHtFG3AIiuNdUY472aqyQxyiyvyUkPBxDOLJaHfthvz3Fzy3KKkuvjdk8bXDIErOZYpoY9bqq\
3pPp2EVwS0aC8KtJPQISulJpCeU6U6bM44ZghVDAF461Xey5qac4vcxfZTwVG+\
MXdeNzMujO77GNP8PzmF6gneX28zS0p6q/qmTrYxXp307HMjzNC9nRbgmZX/\
5gE2yAu2Ob1IbrEyjGgKwCxo5eglKr+8YyrgPOrllWJkEAjGc6ETpr04j/\
QDmyOezJWU5CZ6qq7vsa2ewmJt403Toz8iZNjQf8FJjsvcP4TQKV6aojx73xbPe5GXQd4Zs/\
zLXmvXbqEMuna3eo39cCpizhK2rmrGqUBxxVoBafLxGRNZcspRzvvfKE2upHGo1VFOHutWZn04ESKf\
Ur1F6QobnNTDLmGdIyt+FUi1lYvtutD65UpIRVl9RbzitcdUvuMfkXRThl6RB/46IPAZRr+\
xkdWRHcCnYRHyUanecffRNM0+lUSzOGQl8ckh21E6TKsFWjeJOxT8e0VLQSOhs2A50nDuhd7+\
6OrXJZciPDU3+RIUOnzGaUGCS8LN/81xHUGCzqHA9032G6xo8dBZ9s2u91wVpxd0fXjlH+\
7pj7L67JkvpdZvPSJAC3iibJSCTmskT2UrcczxyvstJ5vvORJQvZTyroqRJJY2jtElZLoVdX1NPRkt\
nv6ejzjr3yXLRYg+3iNYLpdBgczGAjANiswtkJ4IVqASynoI39pV1nWTgS/3VCK+\
ITVI19r2xVqzX5HH8DTR6vwLwDO6662MvnfuGToOpjzHq4vVvScsEfUB/\
3L2OeYUgmYZYT6YYXhqza9cJAVAyqijM2OoTD4lfmQ6dLJqW/\
z2XfqXkd4cqwojubyDC2mf2iJ6vqrcxYovH9mEQQyJ8RuakE5M0j2Hw1+\
rEQ86RABkOb8VOcK0D9zqZx9K9GhsKMzIMwbW3uan0LFTMfzBHFcg1ed01o8f5x1SWQbTvkItXLTJE\
lrMxMsVTWGXZUQ5gkOBkEx76ddzp/xRZI1aI1d6+7FrkETvoj7ZfCsea3rqE+yudcE23+\
JgymimQ8jK77OmMjvcV1Iuw/Af0HGQGFu1r+Gc4p4l1sI8pAzd2Yd3ru7tC48vlL/\
16U3V8gtCaebnYa+EwnnbFzoSKnvBxVXioh1sHwH17FJ/+raeSKwg6/\
zrXXX5VFJbvNGoc95bfJGS0V9keQbHiPfC5O78OTM6pqI/+CucBLucny+\
taUm2yd7MC9MMd2A5JgeYPCXJvjaJpWNgUF53jnV01wjlQs5eaqM6RArcp7gBU2TgXP63n0iecSZ0K\
uX7bFcF0S/nEQbqXqQYJSuKpxxRaabR8JtNGiIfxwmDe7GVkvg3uhP5FQP8g91hVBc+\
xYDEdzaob9Rx1usoIWar8e00kBJ35Tw/GU4oHgMMe/PzSybV7TNJrB/\
ROHTFe1fqLhY0hq9rfPd8QJGQj+2J12Y8iIyoeMC9y1CkpObgx3Ze/\
JSJbyd1tQr7TwmBvUC1GWmbh0Kp8w8wMfGsltfTmLKaoJLTWXpaoIBsGUj0Dn6bTXFjw/\
p248cqmCBwxkMko4X87UlcRE6paEgbY/\
gRRTyfHAlzOCBn965iFu2wSIzZsaIikIjtUEeMO87vp2FljUPUgjJ7FY4eAtTvY1Fy83IHXt6zOsFK\
ey9610tVA90Gle5f4/7ztpJno/UNd6Jc06DA25hXOfzN+iRqx+WDFJb+\
rWjrYKo8U5FoyP1BwLq1xkWrflQJiWZ00PI/yZxr5mOOeBzhdkegW8qhmzLuJ1qsKbvQ/\
5rJGHb5VkBF+B/Se6W71ppKNsLTrfRz2zLPP/\
9IW6ksdOGSn9KSk91xy60N7Ew7QaXKNdnZxoYkli0gAasH5M+g5pA9FFwpfU8gZSLZLAhot+d4e/\
GBrG2qqDqeIxGnSgH3bnIubP3SXGqxQWNH86N8wYlZgVBJyRRZoYh/\
5zIu3C7mPEMiN9iZeOtMKVv3weimoKMppsMaiGAUxGCPiptQN4KaafN+SW4/KM5/\
T6ZDKN30hQgHVr7GYY1peuHqj/2XPBro71j5FwQs0oz1sQmMPkUH2c4Ekqab10MmH+\
ZNkTdzt1faM1+ztulFFeM+b3kQlTV0dJc9VntrKUELGxYyXxl1ixdU4DG8Kw9DaH/\
YqzEPsp8qG6c2gvwLKudPmm8DyHXwf5tnSMbAH84SvOFS7ArSzvl14hx+ntIMBOD+\
yH314NAfpBQWDnffeaRx6UFq4WrxAi+84qm9ZAdyPRDfvrSV2l6B2FzHPG/\
qhrkvXVIuaoqFhBuHbKw4ZtUi6iVtiYEdIhltpO0rhoOLmNTSxHugRAx248kQs3RaJybMlndqi3ynV\
3p9AvjH/Vi1YWNbU2t8YPjzwq/5ph8hSYnTg0TTf91ef1Oyg0d6PCCMbOMc31aFHcVSKdKM/\
ylUFsJRJoP8uMCooyAs739p1U2YTz5AbHh3MHfL3VRpIwjxwZz6ilrJ5PstwGwTnUpX3M1OxOW7aS8\
AhtBVRhf2jgGeTP+DD/\
Y0Gcgn3pRNvUvcBmjhrzbKJIdvdCRvlLgtXmXvRA0hkcPjWYnHFY5Kk5tHn1vfQ5qSJcX2UrUxrAGf\
2mEulVKvzAsQIPrEmO84qMbfcb5icQThFOOrRpcEduaIUR6dd4Sv+\
SL4w9AF7RbYlpqEonCdKs9BrywScXTbZOe9sCHBQy9ddxrWyILMCZp7FrbRZoq4VjXE+\
xtNtarZP2pgHqmtbXAPsKOaXmafsSxyMj0BNJfT3gwO6yMhKIQXkEKUJb9z70XpzYzqyPjuLpu/\
RXvYaW38YCkJ63IweAxxw21YH3+oDpgmPXEKckBSAI+HkZSPOGaqs3QHFjXZIanW4aav5IMiO/W/\
aGijZIcKujdv9Z/MmfhRBjcMpX/io7K3l6lYuPMgH0s1WQXNmGOJotG+yp9QqDeZb+\
XCliTxTDXldrR5eB5ZOFworL17o2sFfG0hy3LM9d2cllT13bA7WexxV5vJkvocEZQg65lhBXdied48\
ncwYrRUt/po5ypvGYuJwZi9eA8YO/1x4PmzXmILOAcXmbu9/tGVpPFqzQVvhwAr0zm6lwcom/\
GptACFIcSsJhecK2kENw05QAMYVVoerhU9i/WDICC6fQcJK5G2SB/l+\
qprE52JituNJ9I9bQ0Hmljki7nQl2lNWQKIVb1JvJb3gRZnJUA2O6wWkgp8qIPg1hRzjMBRZ+\
jTqL2i6c7tuBsrD56x5g0zipCSICc0QpUwOwv1Bess94Zrsnx+tRAOV3AIB23yVehDdw5tbncxF/\
aS3fox25o9ZFU1cMmM9Av84UmGYitmMBGVEYQRarqwZvyPL+\
15wTbc2z4LmHVwEkR6WB5lrMWMwMJJCaJ3KZSvuQr7M6fpMbxpEfVtYwYDMtyN6SO5YGfqldtE9xMB\
FM9tPZNKvDjLSohBkKGM813TUNu6ji5soGLm9ROHklraOukEiLpUwk9S7Bu8xB0YhafWwk7IMPX83W\
8gtZeLKFv3sfmUzmVsOBVnP0OtFF/\
lwP2DB3FzKIMa2ZoPv3N2mnQMWqTxug0NbUiN7ylVfAwBMoGOopFbKyff9DYSIkPCK2v4LthMZ3Z6k\
zcoH4YslKVt/\
tzLzB9tSe77rd92YsNSEXklzQPSbP1IV9QEeFpk9BbttL5VO57QBm60diR5em91pCPadD2yIJobH+\
yn4s+lwv44GPKGKGxbPQqa+L+9GjVM9QzOkT5sFCstzKTDUxh5+\
Ha1qY0Al9X9cQ5miEOYKttpl3VVz1y87dRsyPazW+NNUdMwCPt2HLmzh/\
PDFtMKhOqX7W68P01fzrnhuM0ovrWvA0My4sqhT4BFjCt8/K+oy2dqHs8uMK18uhqMXX7jPtJc/\
3GMnW20AUdgEEnUFHb1HXmaC7bbxWtQLVDeM4nJf6Stnq8VmUGtHpvBtvzWPMVxDNxq7IwgHvQBfJ8\
QHeGcW9wGHsTeIN09uxQLN+CDYDzsYlFYSZgR1j+K97HtoL6Z+\
ViZRlfPN10i22JrAtC6IPfUVOYE2y8gclRd8/s4jwubkmJ+\
m5YXJ3PKH8l6PcT1EUJzK1sFfG8tlKRuoYWANviqPmVm9DXoTG28zo4FUXgRZ0ncLziTORZgFzZ78Z\
56a88bZ5Yzc+gb2BZH1YoiWrG9QSPNnq7jEjaozzDf7abb8uK9kfl+\
EZ6PasfsSxjqOtztRK18ksqnuYCV6QlJDj0V1plFQjuhVCvRFD7GLoUyP8VbUyezv2MkMGKsmrgbw3\
fGkdJDN2ErGnZt9qOq48rEqm+\
Ljen9v7LAmmBMsBnrdSBJF0Cuc8b48xVEvlYpd2r8y0fb5aag5AxZ783IATsO6R2klbTe0o098e4Xm\
LgrGmRGDRbCxQN4Tq0GG1a+\
s5RCe4kcs7DwRgat0pdJsHbbNQStO0AUHHmcqtWyE2dF40DzyzQ1lwOgf9dI/IRel+\
Jzjq0K70fkd28D9q356fpWap4AU4htEfrAaS+EM5apJs2dlZ+8Wt5susZL/\
l68eo6ajMyBYJBToydPZhGvNNIWsZNZ7LsqeSSqFNhSt9RhbcIP6P/YPix81etOiqGw+\
4OCnXII3aTA0G1Ihb8woS1077ZsBVDy+5w+xSUfeDc5f6Utt0XfIxRJlVJpXE/lFgXbWf/\
yXTvTl3Cqixf3YKVA+FWuTCJNvMS4p0o31Qqb62ev7pApWCZ71IeOh9rXqXEI2GUACvYbq6nYDeV/\
oTCLFxRCpHVJ0RCK02UqEMHf6Pj9NgR1KQK28CqfnakbQBa0efWJ6qz3Lu7eky4VzphtbJHmwL/\
ZHJerWUtd3e67xAoP25UWSht17qIk9DSqYSw9dMULCX0UhFNBMkxRwTkurjAipL86ncjykiP4Y2GX2\
vcPRJxCqFma6mXqZ/JSif7bLFVCo4zB41wRj13zXn5Q4n4pp41jIKq1qCDy/\
9bowHf6kBdpsrPMjaGxgpUGn9u6hawtCNAIJhagqfYBlAtE6bHwSCl9hngJmqamijxewftJ+UDq+\
yf2PnrHnXSDjUrgymMxPORGNLgyuVlTjo/O14FzMcQthxbFRAyiHya+\
GDGXBs5VNpixCm551Tx9LGeLOxnNAxTBuY3pJbTnzyyxB8rOk7thXULUMib8kc+\
4fIvYHrViD3PnWVyuVu8YVsKfhoZ9ho/0jaWJPjkHbEmkBfKCb8Si7Lg/\
3zP8g6ZPbdK7WnwBSt2lrsUyzPj79t6fJBAKD61NedKX2s0ld1G7FbOPI8yLptWcWzt97UIl/\
pCQ3cSJ8XWpKMl2xsXNQur/HQWAwVdHa9akdatsCnu7JA1so0jvpHfMBaE37MtfDfU6cfv2+\
ZA3YXKgO/0N7rzM3/\
z1kHgQqgESV0ut5Rf3ov15dJ3cgzj3MtupskchBhojQCtDtEy14wwaWGUAcu93taoEnULyG8RifZD0\
GvGpNcKXyJeToP4ymIlBLCPr1bY0poFdlGwGGvAA6Ca3MVH/\
Le0ewTiyy5kbVRYTbWasVZteVuI1FSsYvkqWYt7sS9fuv1HTMeIOtloikPsB+\
qJJtn06P6mVuoJaxkTFjzO0k4nNMO709yNnlCalMc077avEXlOgSOX2FTRHmmIcACl0sSZzJeWPgIe\
BNSQ+31rU9nHozY76hevQAGifZKZogPK0wdwmiel0ro0+2xGY/7uTDh6/PKJPGQlnXCRPr+b/vx+\
xnWQdB3c+yuji7SQdeMpolRrWDQwtcKOONKjDb2Sbkax0RuUspUnUE8J4Ma1aKMV4sUZcJfMdHZtq5\
uaOTM734Dz7j16D7iS1sGzzESOrXFWvFnc6jpZrbLszpJlZKKrabg+\
YSIfjRUFmdv8KzNvpjtlobsJCIeSVF33VQ9HB3u8AJFBjs4eQIs6YzzFZL51/\
LVfGHNBqlzJhwr0UmiGPraOV1nWV6JZb1S2QW1EY1qTt9uooc0Xsrr293ajE+\
hrs4vVoOfzYr4ThVbwLRCL/Oh6VwlnqVUqaa+\
sF1J4P6nihmG962ys1W6j2YtXOLYH6TKniMjICGLQZzJGgl2bXQxfg40qB0u+\
RJIrK3BjSsRk4m4ktKPC6n34QYIJs2U/6v79RcEOP+mZzcZvxvio6NMKHpsnX9V6yDn+\
IjOkZ0GrnF0V9HvJHD6rpy0I7OU5R4/wgtPRgCHCNnSrasAhUGfUNJxji3a3kPsBA//GnMXK5NOL+\
RFXgs+AV1nJ6AkRS39v35PfF651b+DLlszC7DisI2NwmzCRijYugxf5JSV0/\
NZWD0NZU9LVWO9PG5Pzvp74uOvppEi19p+Udn0b95yGsvS422hMnlulDASD0VM3zesgZjAy/\
lpShDnkL7i8c22FHlVZUYyazjOiCg1kbGWG6LkRlUa9442BKs9716ux82Ig4mn33GfW8Q39Bllaefn\
onNMgSqmrrLu4zZd2V1+prjnFjVfgw/uYhzRXlxnnQVqESin4BOGKqCQjTnhjIp+\
3hUq0ZfXcX2L4GXg3krmX5ZUAW07xu80PP/381z//9Jef/\
vSPGKcOv3urQu2SIdQLZzHW86H5XKtToiyZ1l09RR+CF6jniH/VkdOqZYJS7Kot2vzBR+Ikvrj/\
g5wPSb8p2ezPZduLE8xNDMF5VjGb6/XY1/ffMzWz+prPQWmn5DZnuLm6kcJU+Id+uDxDPC8CW9/\
BSElb1gI4rWneaiaFzm3is5Wd87dOKnBY3NORZHd2ICnJemUlNcQh4fvMt0uQs2VdDWpl4kDGSwDm+\
Jlew61D9/Sk/yYVAh+\
ZwYyKNuSawyG6P8UoXvpubNMgUZq02QlkQmP7hvShmAkUUPaM5eUCKWsjdeBXTJDTP1RceTvGmBRYH\
FFx/xT04OM3Mkv3WFzfaxagVWor5Wn01t7tcNkvHHFDd077Rffae10U2YHy8sDF27IRQvGy86sRg3d\
nZUqXR+x+S6LyCHtUB5e6AmuWMT83fDMOPPOTR7Aa1xVfvIL+HPu+0R+XBnQjhEa9N+MmLAHYPFp5/\
9ISUuYBKNjHL5Mh3HyCZmu6S3xx+LOCDplpLMQEko5nzWr2x+\
bFntO3SirSnkri9jwy9cec2XvmkPlE5GiyMbq8k7BJoTIN1o5OBZ92/bgnNY6MWxdP+\
vlOhse4dna0SD1gws1CU4O0eHd9im3Pu/9n8zL6Z6Zj+83dnZHv0X27dLDwMRKnN5/\
xV9bI0SZacXLR5YSLkofwblI9UsC2PMRmit2+\
SCWrxP7SMNf7fCkpazkMymr9uTseRUX8AXEIGatfhD2i7KcvvgHsFAxU9JUa5nyQAnk5pdlzN3mm0Y\
n3Jt5OhTcU7ENsKxqDqpxF1hZ2udVFqOVAZn7b0ZUFTGKM6mxcRVZQYZK7bjANq77A7se6LThBekse\
xKsDA2RIo85y8Z9e2FN6NlxVdgOijW6G519/9G78X2Q13/\
2rYyeyirD9fHLXHi14VKX5hsbprOI3qtE96ku5l/nvxkV/pYYhlWYFgHwrl+wHnRjjq+\
e1eWrx1vEKFZAgb8VSVbF/5xItjKaoLf+nbAxVdtQmTpAvTMls7+7w8xXuR0VLh/6xm0zkGvHUS/\
NqpshLz0HcxoCjBHpaNZIGs3I4mBDc0L+\
Y5PhbtCgfzmrmx9mQSsXgtGsNHYz6Cqo9xZLiFnF7r3ppyliEB+QLcAvMO+\
GCuzVvcPiCjR20nJhP9U5kQIjofmy4d0/hb0A0ZDrlDN1gYzCVQqIco/\
LrrVT7VUHFx8YaOSj3pKQosfMOS9wbLzwjYWjFjOatZWxU8zj9G/\
brb92hRaxyBxnSLJVDm7NYfnPtTiUUeU9Kh7PaYMFQsmizSg81e3+\
ztwZSQ1q0oZgWnuNHeyn8l5WwYVaL19dJvYIFKG0JKFP5imH/3Eo0rFUEDRSJK3d0lc5pk/+\
fcCIx0StBV1aR0tvS7UfaMqNUdunxlsLybeAHjFPBu/WIhGCmx+7pvNBFSOHBmmPhrc4nPqLDDc/\
iPmURCETRsddm4nxt1+BsBEj+HqeZfabx0dJGqD3SsTrG6lRj0YDP+0XnFSNI+aXZeI/\
5em32KhY4phkRxF3Pb4dGtZzVVr0yRoG7T0Y2XaPkzJcykoDVcxsDu2ECS/1u3F+\
NkRN5yqNq8bD1b8CVEmdfnrXqcpyKD0H8Yoz+\
SlK2aXbFeumjmK3A2vqFRgnBhoq7rnw2WWq1bubXr6AthvZpjU+zb4lrAek2QycvYJHlR+\
XBVkor7MohkPAxHaZE7iysePLUleUTRoGxbe6O3W9Uy05UDvHG7KGLOxS9GwlEssD42iuqRaJ2TPiv\
46oikb0tAyqAuiEoXtv/VmYFjXer7qiPv2hSfJ8L1lYCG8vKnvupCrwcI+\
ORba6meFwWPJApBKbvHWb5/IL29QcJraJON+IwzhRUqwRo/\
HhVHuxkjOQ9W1g0MiYojpevSYdr9KWtGHf7spfivR7Bp9QXEUM6hlPRWUNn8UBoBfJI5/\
Tw7nWNsa0AOwcoBkArPZBAzdC6qHuucMxTLk22oo4Jk5uwJlZ/Q16jySH7ADni/\
0DWfdSNmyHlvuzKgw3KJugazQZqZ+k0pe4rL3Bjl3bC/5bfkgSOp+cinkvxwy+tvE/\
T6itRNkxMJi7jwGExOyW8NE0trGIWbeaMZsfuqIhhnlDTkTijhMefmIyhHH/\
gQ0gGyTk90A0jGWNuAz/EWLMYKu3pVcNTrJu4GYFJOmuMqc4EwZ+mfgBz6nFVkQ+\
bCVVGlJHz9eQhktZSeju2ddHrsiOvDBf6T5qeWUFIM1S1iOK0TsxR1AWsEHsqxcYUqHCwUKeYuv3cA\
Kaumsh/RktA0gctwyq/4sjBTscsL5IgS3r+ZfP34la0ToRjPjTkAiyrfOxHe0+7/\
jM2Mf6mVy6m0CW3gbKMfZQKPZgEZKe1yiYpVuQbwYAis1vC1HfFOpd0ZCNO6lNmN3rt2uMhk89Yd1W\
vbW3C/cRcdhCxCTsKHs4xIE3Iq8iHLc3NEZX9g1i7gNi9y2tmSHGax/\
AhWOCQM5A9WAVxL9Yi0OpgwyIfiFGN/kXrFtoh7iedMp0XOL7J94PSum/\
bbUKPNee05cwgwXVacQQrJYBdBgIVvliLanhADjWLCbufM2wrKRpU2YEzbZ98DkV+cVBn/c183/\
0eS2WQhHBdeuYcOvLIyoEv2qJqFkWhHROsL9RRv7EyQuTgax147fgL/\
Y2cux6bXzmgeRzLOo46VvPhXLufhm2ttnXxPQafyl3jjg6kySj2WGjH2WHj5BIpmYM0oO/9NJhLi5+\
gKz8A/tgd3CymHx7bpxNnqez3KiIp+4nK6CFwD7M9f5ZcnWDJsOQjA48U/\
YJUz1CV0Xh9aDGjmF2Zx0IWz1h/\
QJORmpoRIHY3Mkav8bUleNL6QXgghYW7qsox3jN79bmzio5oFhUtcVqL6KJJYno4E/\
5C779wifz6yHKgryaAc+tfXr4Ufv3W2lu7y2HD0feyinz5OulK5M1w1FnwRMJkDvtwVNkdqCa9zkI+\
DyPua6PCTIpAPe0z6tquHDKdoW/mE/S3KOLVuGgfr/\
uNB3wtlGR0bnjINP5jZDDbtQUw7uhPafyIygKalCTGRzM7HAdX9QXm5DcKKDPZ2/\
aREAe071jgy4dK8LQ4eWfBVgGE1JOfYnIaB+\
PUELs4Swy2aVl0olF20bWcdQ3FK3o9H3azpBJdoJuIQrd4rBgpfZQ8r2hW7oPHW82oRtrd6MoRzAIW\
hP4x3pWSMO8eh+YbLyteYw++g+vEefgWGaL9XIuDj+TFkWVl+x1kGOAsO5PUEFYJhi7X3BzNsiG/\
sVuJ10NEoRUeRIe/FQ5+TktlVHvIpqkMM6vWa0JIWQPZCphet8G23tgpbphaa8+\
TD7cJXtQujyKmN5m6YlHbXnB7SBEl4YQeh+BxKafp4yyvHHNEUmURbjvZL7Q+\
0X5odgCUz3OOJ1pzCyeqaMIN5eo3xTLqpLaBiruaZ955gbyFLCnvnsv216F/xMjT5s/\
Xz0cwblWxbh8PTiQZn/ycHnHLf6lyRgURQejaRyAltch3b+LpAf0yvgZsfR9+\
VsepVq56Q2mQUzAzMBouSRoqM/Kz5TeHEJp5n0LXRoHCEmo74KAy48l4O/1fQqYHF6+x0N/dRThkO/\
KswhE5r/ZnvrujhbYcb84xLy9Cw/sBS02cteji0appkBEcmtbqP8wKs0GxFXwoEBzfVi4N+\
x9mjjSVzae+OxRHejn2r6SbdeFXlRPrxrVqcEU9yW1J/JlWtJFJlPiGRB4RMXhZQuklnEJ+\
nLe9WXgpJ0sNvtyNp3wZXZUmznhQ/GRg7dNs9KB6DQltTrLiVxSQhUHA31F1Hr+wa3SjC+\
keT4lh1Ml9o5reFr2Cc1UzPynmfffDH3/+hyJ/PijN0FFCPr2VsruuOuWdSCzcY9bFtSwSdTP3X+\
nmH7TjQvjIehPb6LZQoJjXAn71fwECdey3RDfWjKW5GpvYHEn2OWHmikRQEQa9RxseegflxYoj1u2u\
3IIGX8A+R4SV2EA2J84XM1p4eBLc4m8ZrNtMjpItCwlpOIRQwhM75cftH52yoZ6z2wpjsN4Lqs5Syz\
JMdhciywrjOeErksljmxT3V7yBrt8ngTwCW6JaLAhTSr5azsZRqdwEj+\
BgzjVAlzIsDK0rYWFdDhoXGqwZvYWKCyTUuOW3t+nhletzTyoNjzsrrkQkvUoK7sg+\
gZ0JkZPM2HnRTMqV0uz2OlcV3QUzYdkZQkCMxooxoaI+\
Ws6QEnty5jCnaMpyrbgpWwEVETRsrM0P30LDiYIqWKN5LoTrtdjA66kBu99oOabt40vPtF+\
1Kuzvi725js8G3jQuMMnchm4HRooY43AqJMwBQnUOIxt66XJFrOm95TPdJcA7ViKup4H0JspGPF6iN\
6do3Zori+Hv0IAyZYVrueO8s1ySCV2iVY23yJjFfuoq5R0xg9fhtwQr47LWH708vx6PxZ+\
dWxTz9lI6UotzEV7pCa13Kxgos0IqKtZXKwb4WtLCfrTS/\
KoOhhPe5E1ePnIL57TEoqxtH9tZpoWjVeOZjkyX2YNxEmw6wiC+\
GCKqvWHVBa0Msd9bSvmxrG1J3qWQf+z7C7ljw3Fpfs8SiQTnVn09yyzsUZK8aVQRaR/rX+E+\
vrvTe3ktaeSTmrfgKz/3ormbt6OKhFHbgmtmT/\
MUgMNyrOMi5Yn3z1YJlvm7qvs2XoQ2G8a1uNwnBXiCLLXSJYJFpEopG4OqpqQpaeNvSf1IEi1alF0C\
xWh3MQNqGnpSy6pK4Mu/SVjLLy1vmNAfe+U2ltHQOdjA7EE/O/INDvzWMA1iTPxDfF/F6O4/\
0hcp37ZEuoCp9xrVeZuhH+Y3zOqX32xNCIr6jKke/aruJRO0jOmUkY/\
rbDmchVtaDLYNkzoj5eqklq6d0kgRjF5MhWnztMdHNQTSk+\
Nbki9JzwZQT4zCsuPRcYzqaDJdsvgBEgeUAvqCJ6y2Qjqc8zkcXHGg4JWaxjXRqHLb/\
xQ2KWElsNEz1mV2raiDS3QcnPUQ7NSVebf5HmGls+\
dJwhuc07yhGlfnN0S1OSxXthzqGs3OdZkbuMII0Pcw9/QJVAJHZz/zSDFYK4BoRfGlTzPF/o/cA/\
K2WYdrRlX7MNErObfbhaRpCmlkdBVL5OITHzLfWtpycY8x7Knbh7Oq/\
a59rZWmI4TyuMXS1rXw5d3mW9eMFYxa8VEyYSlCXk72rC71PR8PMbtUVyY27b+\
9fuowSsU6WgLlgNF51wxnkaAoBk7pB6Y049ixlOb9F27dcgOE66u54PY0TuTOkB8eAnIa8Xo+Fa/\
UfITYuEp7AbtDukUEOMKmj6JdOU2jbfGsmks/dLie2dk+\
aEBVgnCwLMJaqMaLel5FO8yEI1SJRDeYw8AwaWfcNBTM3TGKSbFQsztW6UngkiOLA3YOiP5EZtmNtO\
8ZNfhedPRGm1kjaFR9BvbTh01z2jQv7IMSoBmSEBWtCycybZbnRWELUquYrLCZf1g7yspDJNtTSkfU\
RlUdYk974SXKClyuU0ZQgNXjEdvEruPIaqlMDhdBRQ04PyzQrJwfzR/\
UUAeX4fF1JvBLeIA56X1zbOPX8B5Z3pMyZcIKNQIg2Ne4hF97Uv0Qpqbbr0/77H22PtbxRKDJ/\
jX9OHh6HTfNPL2pcF5Ky9m+Gh+\
PQ8u1HojmoU7xJVf32BprguSUzo1qIEcn5K1IgTWtwB1utVmXSB72z8PrKOWa6MHbCzTJ7VfrbH6Ox\
3IHou/DeosliqZYkT13YOFY1AEUWTrsomlSVkBzqGXLVpAuIvbiggWvNjilDXvEZidzbLpkdB3IkWW\
13luWZeA3Y2bnw3bkoBpbgUvqaegGoETu9LC2WSoLpT/nDB8Io7Zvqcu7OHjdRBi2fMGCGASf+\
MZnSmEQyewGuSt9qqk3IkNPEs8Yi/\
NSUYfufGtDpaNj4xIZ9mP3WdNlCQZsJVA5pEjji7a0J6sQFitTrik2U5/5Xq+Go9DvcHgaLk9+\
6Vj7+Xs69/4KPS0rvy+2XF6738PQzu6ihLbduViUrZ6TrZWL/\
fyU799JkBmsGMdGk2jHCEK8fpsOr0NgK+uhxI8cKCi2iixs+M9iWPBfsI0shp21+\
tdGkUpl1D36UhVptWzKR5LMhr7v2F16B3j0mUS8l0ZTEppyy16/\
BZuuPBBKHM1l0KYWlHff51zmiK4/\
DW12SigJuhiyMg5PMjrYHFqX68AFqRIF2c6xxPbmZI9QE38E3hsgc3QTXfDvIOiASdwFKk44suPUnx\
qNxBh0sc8kwbiPWG3BuncxsmrwVAiNjM8FU02YJrDZ769yVU132ppaokLG5ulNddtWQkCwt9XJFZWv\
N8WdFPouc+Sbuf1qTTI0TBydrz04DH+6GiWBTkJKD5I5Ao/YHn7SaTFsORVH7c+\
KpeKGnAzIKT58BwV2S1IxnrycBJulliYksMwutQFdk1iPH1sm04LMZo9QWTfY5ySs48Ja64VwXjhqE\
5xHIz+9pr0smER/OsERa872og91oNscCYCtve5+\
CwFSM7GmdEobwfmuG47laV5Xx5HeesJ20YLVAvVFNKgJp+\
6vgGMIPdh284f8aioTz5Ze2fXPTTmgxSbsMydFzM9IUNCjQ/bYD7Nmct7XQ0CoD/d/\
YORBSnMhrOk4vJ9vh6W5l/J2nl9N4lzl7WbO6A8mhKF5WYDstT6dmEunOWoAN0Ln6YK1g/\
EanS1zYlz66O34JPrRq2MNpHR3YMlT91hxJ0NHZgQZ70iUt5dm9CECEKazNFKe+\
cRSlkdFyU56NRs7DqwXzQpN28PlWQIM8tLYJDe3yqkjobhosUHCtjzTopVqOOdkoK1MyvV1ENK5ryv\
fUd/H7QNAia0tlG6sOSVE4BjDJjQyDg6VIeXt3R27GHbl1yDk3iEpmBKdSWKZ+H+ys/\
d3d4pnvAXf1q+\
Zo8njAXSpuLXrWcUO6z5TDU9xFS0NBpUq0Ms2CkJFw4k3lqz7ckr8hln3hGVlneQvNZ0H8swLDvw5L\
baFFlVaNraigI/TmkGqlC0LQYkRhx40RM/0gly+cWblrIakB/\
PNslfctL1aVXhja5TsR1braSK3TFmnp2xV3re1AEcp4xFBaOD0rmJ2afLULHexdi28AUq1dvCLjNsK\
1p0arIR0pqa3wdVd84Dae4etT/Cw909Y92jUPfXsYF6ayZLBvOs0CFDIUxo0yc6eZYr/\
r7N3aXLcurJG/0paE9sRzIq4EXfkGiiqJdmu78pyh6RuRw9BEsyEiwSyATDT/H79PXut/\
ToAmKXuQUdbWSQIHJzHfqyH4aaVhJGvwqPeCsrKJgwoucbKz21zlHL6sVUap39Ce1/\
ayJgdBvPWqFcbX0GZgYOLCIisWbmQnqVlzOYzqq+\
jGwGZdqt4VN6izKtZGqH80FKWhqZIBc3dmTsr1bZOxqLTWoBzaffDCOQvyh9S0hg7HgbUk5TiRNolR\
NxQopFEazDEActBIjgjGMPDc3c+\
ltn7MfnKKSy4arkyey6fdf7frJLqCHxxiPnNldTqIAGkyj1N9h0WjAw1q6O7k3eMry4Xo8AqbXLEQI\
CFfOQ2s/gm35gpgU4Up7U6+\
XVS3RCFjhjYLxZWFF2QGvAjlBqOYMPKXQZnChBG3KsmX0f3cGYSgYZFi/85tf/CLm/\
GdBn20yRY4L1mgOZRplo0mGW2WfZNu8rMRhsGmfKGZYVfYhTHYb27YpfDsMK+24EFM2+\
uXbSVvd7fTN6QkKCrPBKllKcWLQxVL8M3WSAUXQyxPTuDIxPvn67gh9wvGU6n6QWFHo9QI2d6rZTAF\
AcHbNTfR8aEO785dJ3KSlMA2jBNj3tJnrnUc4N+8ZIqf0m/\
QvWaQso8ObHqYLNx5L7D4Q7fzap5gTGJBt/vJ3T9NC/mG3h6Yj+p+\
nbVLwRSbhxmv3WsVp1EQpxV6ySGo8li3vcBa6/XEugswWDdNYfyZdQbfE++\
0wLCYROeQARCrbMzqZGk1iULMy0ZvCfpAewFL7n3w7ex/KD5slLxEyMWnmiAvxhGsZvo+\
iD19FEZ2Mu38Cbn6XLQJhUAEcMf4Y6KIovRuTIMWkvU+k8MgJSYitQvUL81w3+\
h2GsxGLcnHWfdcElDjHqJb3XT9UViw94Wt4zDaoHbpqtQCBRtFuQs6v9lM2jLNtE6HWfte0iQ4XUhV\
XamRc/GiKQBuTMIO5aoHNRxSY/\
G3UIfLDNh6jjBVEPnirxDA3MTM7eCPrPB2tML1U80wLvZIe36FT2B0MTEblUdWop3iU1N01Vbb0Kgn\
7K2M19R0CwxoZ8CFmn73IeH7zS3T+GTK1vEtVZXWgECDdDAWK5bNS6EMnQY9D2U9/\
00cCADvNGdv0AXRnhDO9tQu8VeqqRH2SPEZEEiD2ypnCknUZaPzokkkkv+Me+bYW+\
T9Dhlqid5BZsR9zad8OX8nw04t07dx9GP2kbCWom66/EAe80kZQWYQiPbvKYTKzsYnX8bhV2nJ//\
D3LhX65u0PaMO+yS7Hkr0f8xCrovVHg349FCM4zDW1ZREpDSxA+m4/\
8nQnFLOHoVYtm9dzoXku13EUC4C6hWwZj+\
8KhIL6NyzsG7koF4n3zoXFMwkwn5eFaSbWeNiPLqj9BvO9NJOTVbvb8/KAn8bO+AQy7L8fngC/aNE/\
o2VMORea//5fZmrx+\
EputqYMKpuu6B3KsjVb0Jb5RVQLmH8vKm4EGL2rPqtg9TzcPjysURLsgl9xgnkgmaDCxWeGgv+Xso+\
DM+YTq0GF/39P+lFZgmtysniuUwwff2rBqVgidk4xHrqWYtD1uk/r8cnVYxBECJtPqHft+\
68UTfCWU4aEkO3rJ8prDTl3sqoT6mLMnX/ejxKRiL/pg8pc+6EV+\
Vvzx5fQMeAjWrhyw5Ka44J8tH5OVGQreo5Mol8L0uj5j92GhS/dhAoDSUYD+0jU8EYxnoE8/anh+\
dHH0rRMHwZ0XwxwS9Y9k5mJphPn7iRbaVTXcV4w1PEzlIvlkI6Y32hHbnUBhFetpwaKi3Lq9KwSkZV\
AEICo+Eb09QFPgdWvWsuBhKVPlD59Xhxh+GscF0U77AW2ub1hhF8VBE9tWX0p5MvGQM3MXz/l+\
9UffH8YLeDWUSHWg3gJjW2W8go+j6jQ1p+5t+7p3ZQWOJiHSuq7BiInM/hcM9Y/\
wXf9g2f0hJy6Z2X2EqaIFViQVRoYUDhCoTufZSL8o34KtIiR4xAOUMAtDI3NUQ4agxRNr/\
z9EeHBzJg7o7zc+pXMRiWP/SDoGnO9n7LQj+LCvsEK+mTNKBnZWvYNyCWZxBF39Dwp5dydVTgT+\
KHDcGC8Up+ajPuBcE0lkijR+VkLHuq6b3OVwGHjhBJe3O/BU54wJZ3GZlvQCjZsJcsdokHeKcq+\
nfRTv+XXdoPkZ7g7bE0IuIpM3jGY9NrqyPkbBUI/\
WwuzVhzxnqMFt6kpStLOAV9icpoBl6nOrVOOTRio/Rf1hHr3DRlShHyu1YGGVer6ordeG/\
JBFxucYq7XhOrZ9oj5hTHwRZadRZvx9anhPtfKisyEnwDVhw3sfTqycYw9XR9fDwoPXRkS1cmOXPdD\
KjNTcI3eLq02rvC1qq9V0MWizrrVeJ9awhz/Vr0K9WvxxNeik7Oxfm7+\
gqWwlhWwiP3AFtRUYK0jUDDKGZ4vqJ3riBiXJE4ZCp0I+J0lr/\
qkE5fJ2GGcljrDlhpCUZtuWrnMfyUzSiweooSk+pKzg9TSPZnSHeVfYwHjs46K5weEY+\
RxoddkYONYaBsny4VYj30YOdkur4kdpo0UBL61SuXZXvGcSFlZCY6FYM5azz40XI/g+\
hO24e5c8JxzFzYqrW4R9GpSqoB5qINX0ub0/789lbUQ82Ow3q15IXKHAA7O/\
XBzTEOo5gdAvKzHq4XxRCKqXDT/37K7GyFtmT8Xs5oqxxjWUlYMlqUHxYVs5RarVMw+dF1sd/\
G8p3FV/GzqhN0wMZwXBZOFm35CeLYr60HxUznYMT73Kben+\
wJH2s3qnfeDgprWg3cLF3oZNMxxMYJf+YdkuruxBLZsFvEfHrljWHeWTOfYVQaXC+\
d19khj1TNu8rtMXMNLIY1MLF11PvJ46PiYRxpgzMJHQ8ZzCNYfDtrUsmc7k3Bufbctfj28XF2rDMPO\
2xmiENwtH94+JF3KmBa+q1cQ81llwKyypY4+INRBw4DC92I185BfTit21ijC+\
ucU2uqryXsul6dpwEWTi6d1qclCgDbdL+\
LI4OFwW1VgKpKEAbzdZ1vwe3y9eh9hliR2zWQ3froyuOgu707QfENINA0rAbaXAYf/\
J9y6nCGIcFkJrplSWibgW6b7hIIabdj1CPZOHGz0I6SlOhpZD88aD8/\
Ql5sWSZTWxd6qEtlOHGSl9OI7R+\
ZILuwmrsraWFgkY6GAWFRgSLVAc8uRBiNB0wVYTJlveWfAbFgWjn07yxZxTkMp3fLrz6tfKPenFdMT\
N6dUfYFCsLFSN/hXXnilSw7jNpWjbfSd0A12JplOrcShDiSId82bSF74RoXSHiMNPMzbEqin/\
QoihFHzqEZfKzo9SNX7X8CoKp/535qi/Y9u+/\
Vm7lzGLPKcvVWWoVF1VkmACObWtLVlflEbX1SdfpTCS9kM1totrT/ake0fcuXpNlqMmV9qy7XquSR/\
415iBf0O30TN1ZciZrYkZkTv6t7DFrZjbUwV2CKEMnCVq14EZQKArXsnKUE+SBKTKbbW6++\
H9HkZct04iC6uZ/1xN9dAHZ/ctT+Q4IGLQpxh33j/AXz49rbfMQb2KeDBmehJFeSZ+\
DMdBlQu7XyWFcFmnG0KcpsPluNxqdfOVUuevLooaInEyXA45BUSRWtK3VP/\
VDyYrb0N9rIMR1l98WuU344oKD18G1HRdF1UZhMHZHiWTXQwunwhyaJrW8EjH/\
Mp5wlNdqWDMyRbitpmukmJIWDbWuR8LqQUHHJiEnozDsgzsTkCAQl8xaDL1LOGp46Uh5faMYslHkcp\
WiXBWKv3Lv87xG5yGwJXtJ7t6txhBZqKYR5YVsyamEFlaTAdT2KWuhNiMbkZcU3Lu9TTpZo8qRB5au\
hM1psrnK6Ee4EsJghhem+\
hSmCI6BKyJP81PbhrMUnHKRyeiAmYy6kuYJtqTVQjM8i28cbzq3latiCWe4SLT7fqpQ3/bks4/c+\
Qe1Fk8NLd6c8GUJA/TR3laGmHHHl1fcTSh9W4nAcnZ/GcfR5KoqKnnsT+\
g61fNjUeMItK2Qbt5o66bv7kbLhVC1SRuHIWoZJZj+RqtYowvemqSxUA7iJiFE3dVI4+\
XzaVQeVHmMsw5865Z/oygg7r8U76ahvqAlO1Cf0BQ++xLrA85DckUTVFI+caChMipAfVPB7Dq/hX7/\
iC3qvRYyokdAZ3xkV78zNupxdlM7TzjjT+nX2k+xGKEmfFbZVgHllZSevONt+IM2VnzUJFM2+\
zKGg1V2wOtCsIlUhmachJrBxVtfUNuso3wvkak7cgnK2SFQWLFDu507TUZljVOsqKfGseQl2zGDTP6\
ksBFXrPJRvDYRjjRFB91OImviKV4M3F3sMo93Y+evV4V9NzkvBlEFbxbq9S/9Gk/\
tGg6ylFlSqQt01vw6RAE3QwulnZ7TuphLTC0sgDYfUVVjuMfO495A6wJ54RGGsYx4bJqVazu49cjkB\
fc5YNhNOt22ns13hh4fvFWrLBGmo1J3+xyaMJJu07RdPB3j2JSvG2mYxrBjxm2tVutrpLlQjbq2q+\
U2VxpVS4e+AtbspyOUPAR07DUtvwxTJ6RWwBAIgFxfEPyotllE5Ogt+2qAs5HNZvSQBmnttpUO7ul+\
t+rkBs5DqKhK96w+p/yaSrdmsNwVsqmAr3R6WJPpu6UXg61ZFsSoWhh+\
LQ5xzy8K6W96d2vZslLWHaFJxbois3D04gcDfNPTQ36g6+\
SowrfKohojQE2sBvJct6wohYcAwyQnLd2yPbm8gPhjIc0L/mPHIp3QT2vjk+j2sp5/\
un5ZE1mpwqIO42ELem9c8MDkNg0KZbTyw4x2GJ5IjnZOjJ0FjLr+JaryIvivutfWh83tmcbOC+\
cmt0zgztB0IVKSgKbQGrhtzXG+\
uWihr75RQ0czel29wpAjT8trt0oIajfuqxKgu4CyM4x8fZZN1YxV9mg8mHmb4oUo7oTFxCJZ8CUcA9\
mpP5AecmE7aaZR/GijqT2NIU0aWiyDdPqnamRWkMQtN7in+\
zAUweJIDAHKcutyROEDKuxVmr9dB7XzUbaINhXkXcpNCA5ktgkfaU9CPaHNmrgYqjoAmgcJYArhfUr\
xXEK5j8l2y+koXv18g/i3pOLajVUI+h83hhMERLgOLPTDmC7CFjaG+9+\
yKiZ2Zo15PRV1vW91IRhzm9q6ofLYiZCrdWokE3vKibd3TVpb7SCARq8kErZU53GPj3jeHL5gpYPxS\
TxrFG9KB8X4MPE+WxoNK9PSH5gXxL3Y5cmncC/\
TqAiTuYXJpzXLyLnLO4fOjx6NyWoZn4yxJEMd8ba05Jt7QZsaw5T7G9pJB4jxy2LYN947LloPTnVqR\
1UDlHevO6J0lS9aCtIApoMWD31ySXncZf/AhVaUSC/\
5BHKVN3c69bVEETMRlpz0J8eulMyR2lr6xo8hT1Mp/+tFwKDgHFkeIm0P+/B/ff/7bDz/9+unn/\
9o9fPr157//+18///D97uHvPz98+re///zrD9+X//mXTz/\
9IgwHpghjZhtCEQKha3BLQhiep0lzeWGuqMaANk2ScMUFU8Udqawv9+\
fqUM320tAxY8EwMytj6qhPkDo7CFxRNtHrJcHdvtk35dLj8VGW7TfyVYJm3Bv21K5EU8R9+\
KlTh5V8Q9i+/yR/x/2w5dY3X1piQs7DPuQVr0JcBRbEv/8xEO76LQRRBITqx6Jp0Z5fO57pz12v/\
pBay7CpYAjgfI+a5C1GnzDQj6sIxhyJtHLTtjM0Uk6DODAIUh1V/\
dQiNxBF9PpFY2vg13iMC4UuqdOvfsCuRyWvA/r0Edw+XS+\
T7w50EjOBZ4kIrr0cBsK0hmi9KrUq2wjKpY26OAApTVSvhIiYEfUo42n1PF8CfwTYVblJxXmhcKSF6\
yb3Q4ekyxEH7nLyHZXBP51ZmFAjPcmnLrSzQLVVmplKW+\
bXJ2mFsmmg2jXhEgYlGuw16YSwH5Dhl9ejgpLnW+SAcuVHJWWXw/\
cCSfAzp79lzb9DpcGg6ttzzI2njf6TtKr+VE21NNFVO9WLDi4X+vAHhI9JyQz/\
ppHfH7cZwTVuWvFPWpwGj7VNvQdX0wcSZ4IbwBvrDshqtCcK2Y5qppiDohqyA7xGQ+tLpSZFsJ/\
vPXENj+6sO/bzejSDBEytZCtxDVL06hrdVDX7kns83/\
CCnfP7J92qLQ5Y1ZG4aWJPxa55bsMUx8vV9spUDri3wMZRhnq7HvhRy1i4nyHbIltIoJ0ujRsAWqjZ\
Hkbo8ZTk8kutZ6bTpBe+\
IABEgIj5lbGrlPw7T8e5HHveA70ej7mngZn1b4OaoymR1RFnB6qvsR0QL2AlQ4PMCq1u3O/\
nPrd6qca6NWl1I59BevKrQxKcavN5ou2cSsWPda4mFPehCL3PJgGrdUy1QZJ2wL+\
sHIvXG2bBLogaJxrB1RTC58z+/4bz2ArQNkPlxdpViI1MEaSRLFfOv0+GZmjz1I3v/HMYD/ygE35u+\
7E7JnDXm6ETw51UN74MfVfZvMVCizNHda/\
0t3AYThPXkYlle2wL12aV1clW0gBAuChCgDQWW6FvwzBe1G0eFFSXFlwUuPSiH7XKiSxA71i4aKcSM\
1veEs0EBvvAQqudy0xQXJeM0HRoaVyI5gL+LKXK/nG+7lsjj2leOrxezzQxqE+/QTK86+VB+\
dklhjIZX/6CGrypL1/\
509OlMVpf5ATTfDu3tRzId7AP62ZTtrZZWnYDjzNQ2USiGtriZWzEiAQ5r05j3op9qZvuhGu7mpsvc\
/mtb70Pynt3eS7es1No623NhZrKeTM/\
2zWeofpGLK0iSNJD2js071dBnIkgtUXOfDcQArIN5DqOsvrYeZILsuwB2rH7iG7PRlWdcJgif9TyG9\
oBMN90EPoAI8o/5QYzGse4lbfu8ljyadlSq3Plnd/MTqpPHc+I63ATeYOd8kN8g11pm/\
WNVr8lk6H0NdWuRgTUJT9h9KxFyTirainUzfO1W0rzb2/\
Znm2szYzCFSd35rWUzFdvoYfYaY7toAn8UgG92h/\
1qlm314qwT03SMfDGWbX9ZAlxFpi5fcpyhfQbEEFweeh0Ppcz4vJydniI5m+z7yIMPPU/VH8A+\
vd5jrD+vTnQ5j1Rb4tp9xadumgOJ2+Z0B6maFE/V+\
I9AfDR6gXofeY3IeWOB1Ld2n8ZOOHU9RWWuZvqIeM512Xnya0JYtVH24Lxx755IetEIte5G8cyYa+\
XP8oDBf452+8sj95Td5LTG640tgN1HL8ci6D4zMZDGQnbOMKxqJrGv80o1tSr5NdoWiPZ+c7V/\
UxY5bazfKbNGCFYSd1yVjDpfLM5RsiujpTrOJFAUAIKSIAZjyh7yqoRIh8QDK/hX3x/\
MrpDmX2De6Q2fW4aNUB1pRwvZqQCwiRvsgR3nVwy1+VPiXQ9z1hQpBE8beSIJmEBeLQUi9/\
EldjATWWcWO7y+0UvOlFfmwU83Cji1SOs7KVkX4Wv5Mh00Hxf2fVnf+\
OfA51aKskou93MsqG8VNXn5g/V6k+\
UA2VFKt1c6EPHSZ16vjWSIX3PVRA4JM36nVX3t4tM065ee8osZMlDbfKzlSnedO6t66JvCzjTevpg6\
Y3t6ax6RYxuLrtw5HUdDHRVvmhsMc3ldqZnudifPA7AIqW2IF4Q9Hl142/Fgegasjt4JUhw+\
R7RmsrlHUWeyAtK/h8u5Ouxq18ZNwZxJP5I770Q5naLyJaO4wA0mUUcA9mkl67wAAzS2zB+\
gbb9omZ8r0AV22T1Xivv1G9i5L6wuHy7lL2xTL5vVMukZKdlDL9Bd0f1TfH5Q3lJiQHw8ZvYYlOtXE\
6YChOkqbVYEeBYzLmLTJkPD/+\
gEZiaykjlSoCPHrZngziRZpSNU67fohDwOpwJXBUT5RcmoVeQgEfNuSQEFBBrA5/luTVdrpg/\
Gh7HF/Tyu4e7g/XQWAPsnSH6VhIhtXOsrMABtLqiPG/\
xbKrqbe24whVGdyYpHbQ3lZ3DEY0KgKAjlSslNLppUqjFP4O3jhsFOoFnpEr0rfwXqItblgp0KCKZo\
MmM1l+mRQqas+RFnGBq05wOqASezxB8mbtpMnoKSvplVnz78N2d+6qUj+qyResK1mjEXPfJanc/\
DeNecg6tLw50hUCCevAu1lie9qjcNlTGkjnD+eRIXwy23gLEtmCx/TxML88a+\
J3LbX1L1eRGiV0nQUSOFdft8nKdmYTFJtALHTdL2FEnw3PA6+\
UFpXmG6CZiunTzmCTqlmSMsQAvWjGfSFBCe8gMT896dlOSMEo82BDSJBNVkZtOtR259YvKgbwP/\
uZg8C4PUC6yNUhBtq1LudQB4iZbGbEN7yjmado+dk/dakJEWZVSzoETLv/RE+bwXs1/\
Wd1KDGKaBfoLYTAoRGoctOX/42hXHikZF/o6NPBuGy7SEg6sPmliNNZ31ZV4bPonlGsp6oJq99inr/\
N5qIm3IDjuFNqpvdb/Gq7lc0ilsvIVHsv2zCqFIXenUr8vG3FJelSw/x/udNYuar1GrvfQCZkBkvB/\
A5wAVd6Qbu1NitT7/9LNeHtgC9St19973xt0tV0tcbMnesP30rjjgCOgScAOz/ImLbdl+\
V8NCtF9MSX1Zj9eXyBvVNb8tFKPVBaG56JcFnLjgpm+mWcqk/\
uzluwCjJAg0AF3aVA8RXPDtiYbeztEqHY4B2ZpVfHgvF6wu+aESHNHlR6wKhnBYzN+KZ8tj2/\
W4svEly3C9JVBgDhlRXXTmZyXrKBDe1iMSxn8g6rMyQGcezH4bFJcPEPq5Fkl8dm5uUGpaVnrKSMvI\
hp8eU7LCPenGgkaZye/gLpEQvHXD6rNGLJWZLZOUnVXIA+xFfrMG/jPNXxXaRBK8XmYqBI/\
Ww8r8gt7tyqU5rWN52a8qNrgsc4YPgkYGNOT3YXebNfxJkzONKnsSUetl97MTR9KDZK7SpPWR3/\
1MJEV+Zuw23QiAG/IIHsGMdlZUFzHMloXjqrcEhpdYdCiVqdtqThpxlQHNCqM50L2K0QhKYCRnt4+\
alNUvBWc4C9A75z1bqTye8X77M9eS50WKmKa+pVo8vDlDrK7/GJSPlsodxrJa0xTiTNmSkUfrx+\
hkRe5w74NaQwTPAkSF+g3xti6T+qyk/l/hnw3TKJuvyl/VvCp9W65vWfjMqdCVrh9chO5oyhVDXr+\
uHq38JzTetSWd3TrNQIrD7jwyvYJlAsEoaSkxLH6Gjk1V/\
7jKbGzrBcxDod2UliV7fEIoaw48FXiOccokc839fp8Fv0hYenR/F/7zPGnrWf7x1UIiGILNzEjIu+\
drSY7tuYIbWUs3/\
jJ49kVip4K0UqTKnmyCupquNx2CUqFQECXqgsNuqIjz9wZfuVc0bU721g5K1IAQI8OPXNVbkIwVEZA\
nBrlJwtSrSGxxcUn8SGXHmO8pGeMEJjOze3jYlHaoDHpxZySymgboEVzGF9PQ4e5vp9aEuRdpn1Sy5\
WflTgEESqKMmZY5wtSpbQzzROQOzKXaMadZ+Xj42pZOTsmI/Y94q8R67sFUl4z2PJvDs5n6Xk5+\
9BJ0tfWTFFgS3ZwEinbi32WjdH9DEQ7POXtcnuB6XuvVu9aUx4inOH1a13oQbwJjTI9+\
2zV2vj57CoRGoTY+\
WeH7Dj05ejpdGjo5Of8eEKuDmciaY2uYCdNGf3uNcyukZl8PclSALxprEbCVzHVcgBelTU9u93lGld\
Gv7kHg7Y3dqHvqKUGEgUNOCf1eNGLnW+\
agLa3ZCZzHCJTUCub43CYx45HOGphLE4xZHi1bj7T8vJjZXtpXKJaoyEt2mhQsHf/vGlxtn14+OU//\
va3Tz//V1gG6fZjBVTJnC9mUSGZSAXC3fOmvesHCPqsHAkD5egqvDiVQVqeoAGVYf8Yl9PsRNeu2YF\
Oz91L2gvlexqzZsw5WUQopggvgKGIWmbtHkrGITMQllMySGJQ3c0SmblTcjlyu96UTWcaupVMRXAZW\
oHiiXH2opxBUp7TK5avlymGsa+Zblj9Du2ptwx1NKEYzyRiJS/\
CKE0W692JjL5Gu45lopVPK0dKdYt1E3jt5mrxu//js9qLlLl1QnJef8ZcOrZKehIkD+nzHzWXEDm/\
FyrVU7+Ej2DqguzSYTMa1OpEQon8YHgdIQ4t9ym4en0besoocFI6OXgBH0vqJ7oMHFn08lAlXXgXMK\
pImFml0hKxT2h41OASEHTx1kgg63hUECOXOacVoP6uussuaKwV5RgBASdxpwJfkHt5sp3KR4fcfL1L\
1gOMrbVxCHVzYtxWKPq0I4bWuW2onucnSw4mJDI1mp4aszYK2AQIPCL7iJY1UqI7t0dJj0LmdKPjHo\
ydRP40+tS+dkoRji39WVSvhW3JQUW514+iFSrwPMKhk9VDp6vXflULSiICgelZplqKsDedImsu3Z/\
0+K+iBU0LYj+tOYF2+\
oIoqbmJqk8l3U51TdJfFTbfFEO8i3E1fUHTsNmxMmoLzoRsjPI30UTqq2ercTcJN3d2wd/A/\
0RD3ksR6GA8IZoUzSddNbXfj7atJdzow4XB8WFsc+eqkJq6MZFUWI3oT3UJJb/\
2oYn290fYHwzLyzOKypRpK2HnG+zWUi8KWcCOLJgFj1NqTkQiGy+\
NTHaqPxtuJuUOU3NsKanzjlDGb2QyGNPkndxxzR8JssPHB6oBKcIv0W6I4lgZE0VTvx7vCltOpQxXR\
yGwdGkX91X6pBU5AoG+uL/35sa9+/QO/OScEqVc52zYsRYSb1n7VU6O5HYXCdaHhx+\
VDji2C0voqsCoIxHif1ncZe1qv6xFZXB9NSNres7GpFnXOxabhV+\
OZXhjhNRELbza1PRdwNmdw4YXu1EJov7EquTTKNxjUQTYqAStXZlCasMWTHXjyN0EDUSEzHtlIT1eB\
NE7vpOzRkWFfHkrD+ycHCyupjC5K6Hov8pedqADWgopP9p+\
JJHDqNgcarFqvpx07enj8lonByxGJJbXcApOGI6n7NDBuvh2tWhBzwb4Mu31VQxmJdR00gHP0YN2gL\
TJDk53IKk58X/uevaEGGlQ50uPLxTOCeRYiFWmUK6rs5pQy2SJUEpV56YT2plhL1J+0/\
X99dLSkW51tGLDcYm400rPoDIphjTCeD5SPmQos8nRrOdzcLF33N60SG3TVbcn9WI0eaUc2E6p0dBg\
B828ZuuRJL9tJUwrF1YDRflZSc2eW0GwMhw9Di9zBJoKbO5OWJgtkq3A/paohBsz34qE/OPTVTFi3/\
3107//+sPPD//P//vh4ecfvvv0759//Y8fP/36+e8/PXz66fuH7/7+03c//scv5T/LP7eH5qWbr+\
fKNajKsXSWzZRqLJ/\
4SefRL1F13r6MMcmojoR9lfngxQClOvKn5rUMWLlx17HKX0dZ8eTI0svlOpfN96yMdEcN/\
jVU99PNrrsnGvAyuJXl+kModCFqlPeAp/De+rF6boXblNtl3UP2NAoVG4m8m7Q3+\
jqchSfXGXNNNnh9T3T2cT9gCTx0h9Jmr3bX1dB7Cahim8iFWPYlLj1BDsBfBHeiZibhhKx1uRahyDi\
N9Oeb46u8DrXi1IZZDOHdIPW9DOyzYTKPbX9ziJiMON41axwge/CJXVVJmgZo8AX3qzE5MXD/\
CXxAfc7naVV9dmoY03C3HP1XPifkOSURnKoaMxazFqWsZr6/\
qbw9AsQOUW24T7j3hYxO2WeuF3SwpCSutTrmDy7qq+uj2u/\
WkSqZplJeNyhQpsJYhbn2Dttx5uUa2MojQ6otVzrGWC2p6/\
FgqD4jJN3lZlNs72KmoUaiMBrBXYUIFsR6J2uWauAqB3eT1V68Vskxtjp1b4BEZbPJm/\
Gg1YuMuBOPZDC/3lhqhKBZvEYvN8cw6uL+IhGT3pXXy5YzohkpQITcp5xW+n4al/bzTh0ish2sv/\
NpNqo1tYTMT0+\
q4BU1UVvJ1jCQyGJ89amBm6aWFcOT9rXzf0yKEjFUqiYOHxiHSeQXom90Z6YVO5Whf7nOqgXQIT0yc\
l30gGKJkWcDcQfZQOCoemOKnt7vpTJNnraX1VJnuynH65NgO8fhS9vrcd+\
hcBYKMPWhT5SakjjFdFt/\
F2Xger4Z1kMbLxqGRGpfxkYW6zfc34WRL3usFHWa83y97L55MAQ9QYjsYSTab3OdO2LaBZLo8JE7s3\
ognIUHBB5mp3PXxU9F3+6V2UHtIybtzb1SoontAB9NWu6YA6T1VaZxYQrkoCY7i2OnWB/\
yG416atd60ZicUO26+6zTSL6Wqnsb6IUIqbX2hMZGuRu1qxI8KwqS0lsrO+zZ+BC1DW+lQ9NARI/\
KI9u18wdKtFcbopXsL/LbUMHYkllUHf9AjfOu6niDKZAeS0Lcg+0SNixWO0EpdveCRvOJaY7y0+\
p3ymk+++9ENQ+/5L/xmW92bE9aFIxQgf+\
1FYkxZiA42wqSgchpZXt7jrjdukYevYcHC3EmWf4esgU2PuogLsu78WlWfml4u7DgSHA9zzOhUx/\
0aWWKlPXUGvWpTO7TXMmLEVXsFn6SKB4lYzrL3EU9qTz1fauMyniSpUMPNCEhoQMc8aRbtFY7KwSRO\
BqD4+dfm2nOpUP/zQm4es+WMY9Bgk00KPthAYzK5iQ7okG9zDhFlp3rrk867SiyoRZGFBnWDLi3P1+\
c1Ni+O7uqEQisFirufTnzyiA7dXQzOJB2qs3jj0Ir1tdcrlCJSsRNqK8SyKgq3CH7qVR28nuWnxIeq\
QH19fDX1k567VPYrW6+63WYV05YaQ6nUk/mkyXrlmq06vRXOFC0dYcE1dDXP8AazKaJk8rlVX/\
NptVuQljCWiHKzG2ss10cRrBAcC6WOGmKmg/TbcBZ/EucBdVeRlrwxGAF7ylKaABbqF4ZFeHyZhcg+\
OV4pxpUJbFiBUMc+FIdmaH9+KaSy129mar1s+qk9NRRk8k2qaOIUFMVGp2YKJ+\
I0yEyjlVdU6mNzqgcHyX0k1DQamW9VzCy7YGfRiGFWc+4LMskVM+\
rYMkBI10rgEIpon1bWKOzePgmXLCWAQDU5Mx0TDZre0lWOty6xfw26ls8gNwI4x0JqWr2R9wzHlEt3\
YVXe6VJAzfmYLEmjIdx0YQUfz6XSTpdgKnOJQoH1elnuIvTwlTK7+xnCsbfqsI4qHLdW0+r1+\
5J8hZEhnkfi563BYY6P4zV7i/DULepMbzxJprcs4s9bzjFK/\
VajwpejWl70D5SNZy6q8YtbT0L1Bko9rgSaLdtFoFE/RQbz8Cuky4i6w6bXlJ97zsiz/\
q4jcqgIKvrKkTtf/frteSd/rSNRx6DX69jr4nRUys6pi/PKJjKBBy7/\
TUAhHdRAKtA9n71AtyokWUJ2UzL9qE9t6+wl7X3qh9O7Q3/\
IAQxAlYkYIHWa4rhDbMQhqzrjN5ZoQDkjtB+6+EGPqGbBqrtOkBJboMl0NnNmaQ4Jqt6x7/\
hHlbFyjtgcpIjqPe6smrxsJkQaMRNdNGew9rw2lNaeJ1CepR+WBzPBjL+\
8PBfIgiXUIcbgENgv4bEL6+Zi/ULPNEd4oI9kyT0kIWT2ouoopSk5nxzp2m38SvbyU3MCaU/\
OlBBo0xNIDDzcbwXBFAXK8nJ0ARyyOxlALkxu0guUOjz6vbwje5iWj/o2DTnN7Fz3LtzrSzTA6sO+\
L1L96SgQEseLyp5aSk3MtSygoSfILEo0mgpuzgtdxPmlNAU9iThDuShdcm1O4lfxvaJBwcFHjWKPEr\
l8+g5Ntp0E5Sb8PDmXuCpzBXk+jnxBY3QcDgL7F8LztUGYvtWCt/\
cKh7PAXljHfOySUgPWgdcvbflTftVZNCH/\
WvHSUIorMlRl5Tm3FEey4edYswSLTYX4FPfTVoZGtU0kLDZ0Gf+\
y7lBcmWNOeWAp42SMVOeYNZsMpqeoo1dRccBY76B+GrWN5Ji5uV7wbRKE501U4CMyv+\
QmGCdbXtgcXcPzfQQDVA3dj6dWIb5y6johQTnVPX/qWV2FqCd7eZ+\
27FmQtGKYb1pUblNwXKRflwjzqsz6+ab9GozeGcgpmXsx8NbdshPG12adeOj0TxPsgm5//\
6KZAvF6LRKGdbEIeXF1HO3gCQtT0BDbRCRuL/lOlwDpiMmkgQ/VtJKgJpohzTTF/\
m9fzzfVKgNLmvMxafW74M3CiINObrX6Vt8iQfevBUclufGeevPYEgKKedpO7gs80GutJisrpKrAUzA\
0+u81Y6pfngYO60Xanr2BzWxZBw/IvuXotwfdTFA8eHh+88///Ddrz/+\
l4mnw6apPHMEVDOI8XRsxjTmnzH4Jm9VibxLVC6gGQ2/\
Pjz88ErP7YZzsNxJk0HbPrXTrFa5ntaZR8N1y5yNm3CbwIQbUaJTjJw8JGInsIFAgNHoTiY5x+\
Fwfem05ZnLINCy0QRj89PNXUGY9IrgY7Z8Tzz0VNikXh0R62+dcP+\
33CG1Nr8SrOC90R8m14KSHYYOkdWR+7baXGRq23EEVjM5YBE02Qkj1QB19otW++bzJPk+\
b7g5LYFdlnuPPAXVIfR89m2edtYG45vQ1KkP88X+GEgiMywkCMmWXdc724Y7l/\
1qBVip2F3dRQWkgc0qqdnhi/Bsmtm7hPdGwxaDP7cmQPrLtZbHvQEtN+\
cam1hI4xWKrnlcFFjNXRlvzrA/GZqusZZ+yrtmEhYIdvd6VF5MvV/s8oaxheTWwzUL6+\
HY1wRnXnnQ6U6QL1ttM+AuQOQyLbbnmxXyWq0FOhImWPuCiXlqwzLkmY/\
wrZ4Cbb5AmEKgZCDnsZl0iSX3SYQU6ZfrnuIGKbADCbcrQIKqSp4VrL+Fa6HYZ+\
OWylaBu7IrJqJcZ7VWKRgyKmRyP4yHTvVCI0KK7jtnmOk44emtAe/WmOJJdnPL+\
6P5JSZfhGpr006vN34DjIusj/\
vaqWwK2BXts1oSUjRpeU7xvzh7U8iwQOm9Ucz728URjd2SqMaXTtVHoaLdlCfsRWsM1/\
ulO5fjRWQAUZoVystQsWLsVQ7OcTNtfPuTXyIGgtOg3NOfQ5yFzxA+\
o5Pma3JHCHDkoEQFMhfFWlalTMB6Cn1ssFRUcMvUEcqnD89+GmD5/\
H4KjMhnghb66Y1V63K1EhNOGhRtgTKGPPTXgPz7drOWQ+/\
ILDMBRK2LYovDrNRvCMBeT6FFDsafb6P2Nba1HD5SzqS+\
ctIuZnORpDC3Z3kqfXTcwrl5Uex4d0nc9mnQmbKhs1smpjRDcJDouUFcBeFvrTW8I4DF9L+\
0yjKSPegq1hRTe72wur0vqcKVGj6T63Kt+VhIcVGuyvUPbK32D9H/\
AyPaJ1qOldk8evamrsS0eiq6X4U1yAhdxTxH3cfxEH3rQmEe8wB9YfROySblfJBo0LEK7qt5pQaEwM\
C7L+2b/KIZYR91K0rdLzu9VnEm7J8IsND7U05MdKSjUjXpJseroBKfjN9xiyEaZ/\
HuQuzf528FJFvM+A8PPwl6RnZajw8AXRC6Hrdx1yqUWrIJzkio5DGNn9SKJXgejIvZKu+\
hmcmCN4fIyZEGeujog2rsY0/UGig3M1vsQzYRjq00MHcBN0Xtj8g/\
5xmNZnFdRnbxfFBQtCf4VlJAL1alzlX9PuXOl+1H3cfAe7J5J9/\
yklAd2NyWD2qwYYipEM2m1lDC5TEDXCraVcm+\
RDoIgqkboE7fdf3St4uYAQhGX0TL9KhXWKR4Q6iJG3rV5TtatQpWDjDeYaIbEo7PgI8QC9mhuM1I9Q\
IgeamNJbMU6lZenLWcmgFeBfV4+\
izt3d3jI0oz6trJ7pMJDla6fxtLE4uaDdEPDz8O4MZWESeT5RdBBSi7rnoDUjvRckkW/\
sisLCyOzTj6o2o3cWvA0c9fwuyJWcHx3YrztPzMLINIvgb7mgcdpkiGQ8jMNJVGzSmW5lfy/\
5Xe7TTHL2XokZY9ZtTVvP+TIXm+hXUovTYGYmwu0qg4s4rsOdwunWPiXRqC9GV9S7D01PpV/\
HiysjN99CyiTvdLmxATmV4yMMpBaIXpB2FZfOFTvVqPAvxOaN9jWpcIdlQ5jEsYrZUEyJxS6P4t2Y3\
ub1JV0uh4l7itHCJ0VkQ5AaEB696tqmxKruIxkwcu+zKX2Bx1nMnUNh8evr/6XG/\
OQvYJX2QS9M7ta4ToiCDxn7LKziIIqyEiAh+\
bGRiQfO3JbZrt0qle7ifAXnvUxPMphKVf5wIfrSCS7pNPyFSAeDavhd+BFe2db3/\
vFVVhstBey9uJaBlx604jSryNMgrXIFndXmSmiDUggT76JH2ZJw7uUUjw3TAyqQ6ez7pMBUD2cYW/\
iTCTP69FSZ6zn2nYCYUlcbhzI+ZYSrisMQ2NqUaxAE7Q1fTe6S3fXLqxnKHnZmyV/A/1mdz/\
Ud0YX9u36s82PuZ8ymzMcwV9gCk5lFff1oqLyvU0CY7HCyIGzBZezBVtdlU5q3b/\
xJziOi92ha5XtOlNG8pqMz6uPOAQE/qGoQqkaiJn6RF/Kl3ezoQNwpeMuXp+duZNfYm1rASRZ8Hmp/\
SFB03qzkaaK7W283vZLt9UkhPdhLVzNSGjmkxDyYQlPS7n/\
qVypESYe1Hs1J49qMp3CvbAMIi1yqu0B6wfJKEAun5uP6EnxRuQc6rOIlB3hBeTQ1vlLIaMYIVGDzn\
dNGx8h/IDkR665aS2xdRWrc3tF4KtmINLIEdFDOvN8IuYigrHx2escB+\
2GtKj6RQ9l6r2udBDtbwp5P+pmaq7AKE6H2UYIq3USDp196qfR+ByjJbL97l7dYxzAruC55Hafx3G+\
qJ47pT7tg9/\
iQ3uZ9vgPjz8Bfk2U64p5nE1EQwAfpE5e3y6OFlaB3EA6H5UsdD561gD4TK8idoHpLOvo81Jo9t3x7\
BNVH7Ih4f/WMPGDPCMPSCdWorFyeLxF90iQ79lAxanW4qKkYIEO6FDoUnKV/\
EeuRAqN6AVHYSI8MVxaJUivnaAIalBgmHUAmhjVtqwjoikWA3d/zOf0+WYk/\
fQs7h8oY0xeR6iviFR9s3NiEM0gxKWtyy0fXXxfmvUjTgBqxwUgi/\
oJa8GwaDXnXpqpEafHA2TpiMUaXyzDTz1Je/pSaqcHZsCfeuYd2iX01MLHKDYYLQe4+\
HpWaqqCdZUs1F1lww6qhx1GW3wIeeV2zPArDWsXbn7WuujWYrIeNepOUsucXtY2Bxue7wrJ4QSeAtZ\
IS1PGcJaq+S5YJQu5UTywDv5I3j9GHeeFpxOcdVihBlprdm0i6K1YmAOgnZiiC5pS50nauU8i+\
Y7fFQaX1f1YNJKJMRsbF8Q6E/MmZIHlSf3Hy+T+Jovlx/i48OzijZcJUgUEKv+\
NlUJp2VqLX6FdyCMjjxWZRnSEk1tJ0tDUToHqW+1g8khKkU+1kuPfAR2r/200Hnrx/\
pzd3EFEb8JSAVb3sLqmGukT1B5sAjtr2oWCLmU6cFULF1jgBRz2dik0ivB+\
aljKexMQBAuITPxOHADvLTzc5ndBzJp5cv+751A/SXIOyhuZH+zioQddBl3Rm6AK4vJk+\
oaZyxsDFLUdFQeG/2AOYoJEIA1YXwrimAqP1ORANsDdxGFl2CRGz8ZF+RVAKRsVZx9563+\
TcTYLpPVMhY/\
cansmKK806rmC7UEobBjere31tCmgewIYEOFlNGq8pMplWkHIemfeuziFSlVn5Kh9m2Y4rmZQqlfVV\
XdvDwvTe/e6A0H1SBKq/\
F0XIb1x9RoqbfTp8IiINqcvCAYhoi8mUtdBgS3aE8Z3PiJdDz1g3eodHeW7hyHSKn3NUgKTYHy2twu\
CZvFOi5Jxe70xayEq6pXa7rbyQihefZDmLQ5yPikQNB0mc63R6S+qEf/\
kkl2PxjvaGehUkSqokQJwbceBnjjY8NeqcefSUZT2gt32Hvl/\
byCmWdaSFPYekMVqmSpogbPzFoek6U8hbu68rl5dQ4bOBWd7bjcqJLFfgUug1fV3WrOB61h7RyVF4T\
mxleoypKXYTt3jQg/\
yOufqriHfJUpzdLYtKdaQZFxbzceo7DwN7qUp3c4Ug2JiahsN5pvgPzx2kkX6pNkG53XKvYN9UNQMB\
AjkBEdDh2z2FSoFHSWbSfU5PnHY0cVnE4jZClZDyHOzA/FWPYaFOzWF2r5GRoFUxzBVEK01uNiil+\
zO7LWavZNZKyAaS15vFAfSvha1rGCzsRDosrm04zcwj1IO1OmdZuztstHL9DvnXEGawpUJZYf/\
5qGFEkM/6LTmHy7m291kngPv8bzff0Qji/F1ra4Iw07cNMlzBxmp1ZNh+\
achLx1weJsQYoqjHZokHUkTynPUtE0ECdzjC0F/\
8nYBgCLomVJVKLDuzHQUXpNtOuGiCODCKNUO1J7wR12OaZkP7aRWSiyhZlirAstLFqc4jaPlTFhrnR\
22gAm9RMAYR/+/NrItoSeDnuEGRVBLiaHGFcTAsPSxEkT8sF3OBwDnJXcgQS4e/\
Ofj6brHSbGYoqXgMuuRzyARox68TyZju1L2xsXyzs1gr1umxclivmef2xPrSv39X5cBzkQDx/\
YpK05ht+GMZbYmHUHdv4/Tat6pXGPtWCJ5X2mmsgUaZ5BKHxaMAmn3GaIz7CTarWVRaT+\
Fmh6rbLks9hRSVifb83NxTJjwNff1bFB9bN+\
Y1UsIKrXR2npcB7KpOtvVYl9cSumBYxPClWASHPEP7RU20KzPjcMN+\
q0y72KbV8BF3JqKR5q9oP8i2rqWASa3H3LexpOiX0UKAdPQmqVf2P7d1q8uCALLdtsSakkt/\
lb04cYg/sbAdHVLwSBzjRkP+\
oTlLsqV2XGwLaMJXKqXNOwBWXQrEZnD89yhNJH7DLXFzqh3gnNZcvqps0qxEePmNgdRuU+\
3D3USjb1Tu/9wJZBAlaxANVI7pusfqJfIzA799EZXiqpneFO5pqvEHyY1hA9SPgVGocx+\
Ff16TKGzzRb01phH2rCB3ouSRUPIyCvQezWMLNR4/fLAXivO+udkQBSLiQ/FILAg+\
SNakJj63uGyhCmcgHwvPvH6lD2UP/\
HdlbPpGGvzW6pOeUR5L04SVlaiWmoRHLqyeuTyDUWhAG2xkSp7ipmlPj9n2T4Hj6VGVZ2AXR1ZiX1R\
gnLFkveCoAzTKH5ExAm5LOwGCTxscELsfiJKDQdpdYL8k1WULGMX/a2SKJNL8r3s25UQyRS261+\
6Hq46TiyLcpBBLvcHVXTUitAfUvYXnfyioYk++WamKZa1Eh3u072y2fKDmRpFQfupE4ynofnS/\
Db9mzYp4lxWh+\
t8gvlMwoI1ZUONJ8sYtm8HDFx1f4eFMvfECbzlzV2Ym3wySz9SuIpzYnpMF7Lp7rJEjeiFjMzdZd11\
HkEmqAejkXAAOQfHx+ZINqlaDgvP9b+U0eBEVIZdLZGJesriS4fZHH3XZ8bd/tWpDsYmFAy12zPwQ+\
zNTBobL45NVR75T7vIoS8tNEJom/\
tPCO3uKv80tzbrwxKmQrWs24Tspvro2qN7Sgy340EuqkdlLohvdBppO50yEHjXag/\
oem20aawCCq0p1xuDAgpvCGLmGZFrmYdcTL0EuyIwnRQ/4tNDoU38bjuF9wQr1+\
z6KTXIaZGMXfUN9eMzyU3J7Skb1kjHlOjV3G28sNawdAZL9t67OC+\
xzJZP5vdWruw0cvFIBurRlPwkBWv4UGBSKtUfO9fV7wMjoBBNG+bgrJrmdGFPL5V7QgAMjAH8p+\
s0UnC0fouLEdu2VO+kVV6lsU5Pe+soZbzXt2/\
DC54sUhQzzwQFO1y8q9XmWC6kKKVr9U9inemMJgR8I5v3hQm1OLTuBuzlta7Xvs52SFXexooBGRNDE\
IVupcuyZdmbYiNTBdFv9EVC/XlEovuZUknEFSRCpF2i5/\
bKXuVJUWr3VoSuSwqLsaUvUoe8xs4ooYosohqk3QJtqPjsHxEYPT8+\
bjnbbNrSDnZGpWsbqENIobMRjj1hW6AtPOVOj0gYHRiYWaAbxK+tHvKH3587Kxf7iUWXEqFaVNxA/\
c/tdp5Idk1bey1tHm15WTFhzK/kGnyiRS3pk4qY63LDHBlgqesdq50a5+m+icpBCJWS/\
O0XVuMxi7riam6pZ4BrPHr5HPtER5uivNTLrpxQapbsPpRC+LgsfqNPfRF0dN0hINlk1otU60+\
UYdxlUw97ska8UCgXMk7A+nHphauOn1IGa4Ei0u4nNR+1PYlCkS7XBXZqx4TkS/\
Z1mSdZkJJpVVDzWgcUDV+fqgkIgw+\
G5KUWFIVme7RepbHxLtfWxdqflBlQr7iO2Ro9RayVa1L5jrNFSiG9hhVR9uRcmqy/ol3Cno/\
tW81y2oBRE2FciM8LelODEzOkPWjlYkztu4S72wDv05VQOFIg3UPxiTHKhQyo57yGN8P9KH2q+\
1beVEJkm67GLceG1WIV+47yXu0L8qupV4NWVLAI7TWMz615txh+j4mPI1jij/l/\
CsfcpAnYh09KZA1GRZIMYzuCXajisPhSEmZjCtPV66JyUAc2sgaRF2/\
RS9noIjEZReL259Qf2bf6o3iBdq/agcjLy4fSh/JMoiwZFnf0kOYM+hf/\
VE3nCGi0a8zzjSA2AWUFQbuliM03Q+\
Km2AWTSanipXPjAHdkYCIGw8zltYdWLRU4VUZwT2yFKMo9KRnKXGTRKaoqbxpCUUpzLkRIaEP7Ec6b\
IRrRxcdZZqnoFbmRLdyS7YtrWnQOdMI3k2SxF7RyS2Kxfm0wS2HkmpJ8tjXDmi1lF/\
VnzF6xTvNGBo7lQ3UoZmnlbh6IwlJAwcA8WqrNLQZCgRkQt+0j4CSGAstUBmHQOJfo8Mtko/yWO+\
IPioBFNc7lSPgGZU0OxQk3/GoPRbzRQwpydmxaiAgSAe1V9eYXcdVAe05UiBsVMZA6z+\
WwUSlUUane6LNhec7Wlzsu6enZtR13g9m6fRv4LfcNGFwrxLZJ9/ikAyHuWXofSfU6Qevb+\
h6Qqmz1qZuTHtzztOOKzDPNh8WSjlbXJbSlwaWoal8wzRd6OfDcHwRW8RxtxZ6c0YBjvIbN5ypTQCV\
Jyw+Fd27vpypH9JK74+zoEcvRzwCG/hUT2/d5Z1fYuuo3UNZq23nj3b/ZQlfp+d3b/\
FoTc1TSzi91Pqa/76iDKn3/TESYpFBm0Wg7/\
2b2Qq34K2A3XUOtp4gusgtbq5fKITe7tvfqawAx04UHWm8ideM5hLn2HuhczTvH+\
bxpsfrViOWfNv1FrOsCkrBRoMlVHSEiIPS1EYkC60A6Ty4QIAkXefzo/\
83AkiPAVtLZzmHgd0yUjsnJjpGL+343JQD4WuGYe/\
tmmqe5R1F0fAjHomd5YqizdqY5G0oxjOsX7hTWJaIdv+\
CSie0l2kaxCSuTdGJCdBBfA5U59Cf27gLC3T1RuTk0/3HEV/qr4aZsF0zCflfm6kIeuTRW5O9hj2G/\
gahqhJtqETwWl3Aq9w1JE41JZSLJqtbKvmjSja9qYHpKNySLk5/\
CLZ2ry5Ur3vkHlznXXJz1LKLIIVlpwuqqY6+evqeVDZLgTugAj4PxLCYLPexbUhm7ua+\
LDAcBq4MqLdoYeGsxzuqny2ct73eWv779wStHYVP8lG+\
dBxFqUGH0QtL4HsDKjEZ0y08dOV6Z4B5suUNKvvTuZHRMw8vTi0TTBRaEVQSrH82zUPfTSDdvon2Lu\
amsPh7QzeWjPgRArAfY85pR+VVmgjzGDyi/74SHEBkDoiSbyZiJ4bovDFeqezefXu9lJ8/\
Ni32VNxEWBMDRLIvJ2prTunt+FJ2hmbUbVbCj9lN0XSz+\
xXBMs4hORtlIKfdOmraKAYrDNekX5zvqFJKNn3y0lU6hFKxra+\
jRRitS8udaomEvHQ4EBIhXXUKnBFCsO5qGk9tmyyycJXU0HfI9byC1U3Do8AerRKU6G6fVYuKD7wFp\
DatYSrNedHzOtszKSSbyKaP0KICADdSTsluyUkXRRLlGVaAWjGClEQrVuHSDi/\
VvEQ93VSVywujsIs9yKIZZ/l2DSm/81DU5tHnoFPOQxapTsS8pdqw6eRKE0FNovtJTQUtBxueSv74+\
Cya0OVGrocvGWBNR/Kq1W3m6bLBkavkOae/n4cwf/f+sFwaTct8U3YXe0G3kNR9PVzl/\
3aBe6veyf4MC6PQLZ691nkp2YQnTQ0ECcoRdI2vaduIhRnp5N0QZZCBSh2RL11//\
yb1GivnejynuddjYmhfEz/IpudX5sI27yDiX04JWrA1rCkFK0hEFXdxNJv+\
M7QWPSL3up0rrDLUrvTNQtf4/bsdW9TmZCUqCe/xjKZXWh5ivsTI/LclilZdT5JwJPyaJ5IkSC/\
hL8P4VZnK5/\
YpVqQydBaVqHJ0Tu0jWxVKwuM0UL3c3zGL0AxLXVmQIicgI3pyFTtBmxiZRrhQ6Wz0zo9JmKQG1Cij\
UCuszjCqkcU4Arun1vb3xa9whl65oeybEQ4cw+HLI7/zOyctVJHW/6JcnZrpvv+\
dqOPhzqEO7apssu9r1W23HnYLvu05qTChQ1D96oNX89kPECaqhLXaWq93v/QAh+GsvchGelMiu2I/\
azriAzn7ChHIomLR/\
topgqnuMezuxLIWwVZjrK5TXqNGLeBMrDPvbFKSZoo6F4OaWnFpX64v8q3ALVa91be2ZDdL8AicG5N\
WW4x29sBD/QrYY80kvCe7bWWoC+\
vjgilrHWoFkZVg8qB9w71sAs8I6E62qEz81tcUin4m5JAmY56DxskdvGNu8xfHhBd7FzNxIa1rix6D\
G0PikI88eVim5W/\
9pmm8VIwPkpIxOFTpTTlLTvInoMvYG79x05XV3PCoOApZfngxNQbUsa5lNgkcSXeor6yAhf4wY0Rhs\
4QbMOhnOx5xUqhLtndz1UTcpbJT0A1DLc7jU5DcdqrbRDmUWXXG5xonuYsptTokftMM2xFvyCFZYPw\
SPmnhy1rNnEUvOt1qICmtbCATx6aM1uv5UZUAq16Y95rqV7YLZuSblXfL8aD5mYTFSr3d2GejMJc6b\
rrL4T72LkMzm6FOKnSr7KUbU9CZLpUIK/Ldhigqt2yNalHzmZfaqt7E8e7c/\
rZsm61yqg8ihtsf1CnMbZx2mjCfocc2MfBuRk8NcERZhVn7YMra1CY447gyoVtInrnx0nL1pdJDKu4\
Mp6ribVVwSWqSuVNFyPTiL3o2lRGyF4AvgwSl+5X/j9blGHZn2wHGt/mQptp+wl/b6vGx+/C+QvGF+\
nwQzXxe2HaGxB4Y0h7fCWSTBf9mPDyXiXLggAGYFVFdGavHMhVKpCnhuFtS4e1Jx2PKSHyJoIlxLw9\
8Y6NIn4Bc2W5OCl0qQiiozLJN9BMcvHRXQ9ZrLOeGXdm+vc7YJFFztUyEQPR+MBg6q5iY+/\
h2It8sJi4SjBoWNdw9+FM0pUHcKgyt5OLdlbL2l8WbkgMUn906vhcQoZVUqqQfqI0aDLySCUp+\
IRtAQ9mPdNtX2/hljpnelzHRtEZeLvLLcA1Q6TLkEwzXhOJP35qr0uV65P4oEeC/\
lRHopufoxi8GPvzecpRs6EAzBL9rcViZdkRpbhryU2nFLAFf5NMusYKajZ2AF1Hi+\
OLuAoqWiktZfc/0nLiuZVle5R18yFHgfiMIvAuu0zkBVdpD6w0nbg1mXxFAh/\
qFpqg0uPeRjDGAZIZGwxXgVcIpejZDZXNXBYxHh20/\
DXAnwWKvMUyJeOqONJoGpmrdy9DxmnDa4epePZAswozAS1icFTPc2gIeG1qbSu27T3Xq+\
F7iVaMBfxvm73Nlv/jbhHyocK12dW5hyCKujJF26Zis6gUE22DJzvib/UAJCakleOgUoRVrIcsk+\
G0z59foej9BtomYjDFyGbSTbMkgsD1sCASJ8eoSGdRlL3K26lk6rc0LPIHqVdC61llNG6J35lm/\
meBnMb2U2AGRBmMpPUtUB9R2dWvDm8ruArYQjNKhX5+sG5Z8KNSfTU/ZddKqxki/\
hOloVfYn1V7WIr89fz+\
M68eWrhvV2tzLrLyRDgPnFYgggIcoAmY0PSY46IxazrXqfQ2aSeVndO9rqYyT7yze5duZnsC8Bm1ww\
iAO3Zgv0hbMKnSaUh5D5am7lIiwbJmk7G97JMhzZfDFQt3JijIhdrxp5VShnXLOWzH1TMcpyZSZfNx\
+0M6xAJjeSCxn+\
SsqXt6qqX7NNWa7xbvVpe6vzlAmrrdl6s9LmX1AqDwFBCqNgjNvVEbDBmJ0jJMEHYK854R0hBq+N+\
gfqhs2xM2KgJ1ErudY4tG4qrf92nDH2bw6/\
VPmvoy9ehPiyPUKNkg87VOg1nEJXnrOisYcD2nNMzDKveuaH3t/ejC8Kw/\
RTUYclguemdXEBRNwboGOnx24aULHNoe7SckDchvtSDx1I+f4e7PXDQlMmxW7PSNL24F/\
5hwIMdPE9SRJguLAyty1n3ttnq4So/QCzlBfJc1uQ6PZXrti8CpQMS6Enpd+W08+\
DhfzfYp0pd3SDrP+v6/EGBpsUavVGbm4WApWGM5iAuSN/\
Oiuwa3hcNjCgQae6EdqpXwpmp87NDNKKSXCEZBbM5atv2M74+HTVWKTEl+\
iPNPCLHNu8C8WUTeBofbepgRgUwVJ2qmRkALbRIVMbSC0M6+Bg41+XnhUJPVy0d4dAPa32Fx+LO/\
767Zf3UbsMyZF6aVgWMBrwU+\
i6pKbumAde1vFmrA0zXJfiSRNLIMvyc9XLYYaokOxpBaWOJAZUdnwICBLMiq2mRqTrTK0jbby3Qist\
q1kSa72jS+vMMusecUhbQVjm2p1ItlSPv2FCObK7G/DcmhY2jTnE3N6aUw33/\
ODrCkfQhX5mHVd067qIqM/wp9IZXgaIAQgZD8wmtuIUbySlyx/\
aq8gu6ott8oSFjZU8s2EwiAgABLNTfiXh5MOSkhfFFI4iw6dcCrcLP1BnUG21nfCvAUCfcp6XPaRZ8\
jfiMbScObcQRDddATNSPRtkwp6hYoKk73jWeLbPIEy7EfXvxr8OK6VktqKVVQhytQIWAtVLNBZ/\
qxZ5R97OM5D6XX0wlpd8J2qwFjXpi9u0LX2JlWSBBA21svGcjOrks4BJ7XZFjc8uA+\
bJ7ScTAL4pWpUTC1QZLDl2V5+8Sps4EVcjEhCYHtb08Y791oLPXb0aHN99+\
1fzHiHDcOPqW1sKfcDKImKrpLii/yHFADbMVm9KNQrZCd0wJgyIRCYx+\
EFi3o4lCUixor6JVEfb2D4KkVv44XFJLgvsrf7GkgNQW08HkO+ZTa4S1G+rW/\
Wq7PTEWsZwHDdFWTmJPe0OXr9ZjQLUJf97+wRkvQ/T6oIczYAdGLmxFBFkVxOWTjD+\
7pIhozU4ynvbTwgbF61X5UhHc0l75wnHk15c1Ri18hvm6ViU2ZxkymT3afOZyxeK76ltaqOL3s1S9t\
en3Y8YT4JEHY6IwqNg0rfPadj8lVSnyz1pzf8FZob/\
l1TRfLTMOv28lTEqtKam0vMQn9C6kl00cIBhwmL2yS4qmxrGhS0IwlvaOZcLhBNSbpZ+\
gDLRzTN9Vs4w6ZqlCX3oesUZeR9E1VrNBXkxBl1n9A71N8HY08TjROpdb2P8akJw1FNf25xNKlCcFV\
F4ro+KAT13p15lSeEsUFVwOP5CMmiqkdkR9+\
C30RbSLW3FSHXqkBJPWJBaRzGe2aJXZgpYPrvZFWf2WH/\
H0RrXsPj7sc8VM8zPJvPaYl88Es6HxLnxfWhwXg10BAwPSqLuk3UtAmXHoLVa5xsh9RNja4gfbjRys\
TAiT/ROz8lDYC1yaNAiXb8/NLUoqqJbpDa4rBTQBK74w1ov/IFVWBDwNHNtxjhLSC1PLWSx1xB+\
84xKY2LFo5B2F6lDCZw8Qs2MvlcUuZRG6GxezUrmCT/\
rR0Ql2CmzmSToGgWdDTn5qV5GiY2zF7KLT4NyOX+z7Ws5j+LdEyZ2P/\
XPfhib9AEL5YwD0N7ytxe9uBeIQE6AvdvqxfN670KMvgPQW24CRO3YfKY47vmRaK+h/\
9sx2ObnyWln59O9f3qXdif7ep43Yin95UGjOO2uAvpKSkxQpIGf4/TZBW8yme4vDVbojAoaaba/\
GaR6bi6Ba2RWS3zmq0JI8seQALgFonM/C5mJ6tFLVatu85aOrQaiybeVhFb5O6/\
xRfUK0bBmdPVlyrkwcfzvTK4h2yTTO0iNrfOavQY0453uc6AXZygzZuXeyrEK3E85x6RdUxDhX4+\
dOPhWvKH6+RrTo7uNYQIX3a/\
LOivlgPGYRIMzhHd4beCbiaygiYU8tpWoCSjP5yQIrNtscbCmArdyK2Ktkjo8sVHu375s3yMuH3dWX\
gWj1e6cEhyCxBovhcJkvl4m3cgM8q2zPSbMlFem/\
O19dDjob3sx5tn6ouh9L1EvmS44jJRuawAnqjf8gYhUa6jUuXavGb6MuLsufaaaFX16Hpt8RiQCdPY\
fSZa5y7ghLa8s+UqS8d9O+Xzen+LR4vGaX7rC5E/JiESAJ/zGyW8RzeZMjlaEZNCGJQIGX7QWeNIN/\
VGNubdEuxz6kKXXBAqnSmYn1uvRgAgu3t89Csn6QnRQ9uPDfsH9vN9e/jipaNuFIPsfLSU/\
eKl3JXUGpk19GLBxfcdNUTswDtvJmvnQS4gkkavgfe9Ex+\
h40PiJsY0NQgXUBkZzqm7dOdm1NnxAscXz03erPKsg6Jjp8vjOilUqZIcK2+\
6ZJUDBk4v809paGdQclMOjmYfH3hpZ8bycyMWdHwRLxL1nKeMQ8Xm7PHL1i5t2dGcGmXL7heR3tL3g\
+NCsIqlfA/wg2kgIM5IrQaLerDUvbddVVLSaCdpKXopg303XV+\
EfNIr2EoaywxnTGXeWlsGQAFFEWj46WWg3iWMPHlzal6eMvzt7KvVHYhlOksNhA0KoZQXIf7owJ86q\
WPVFcyISsv4qGBa/vdr76i6Mujn2Vqk/+DiJftP0WT65HFPeMXlgOzGx70EFM+\
MpuQeIeomSbkhTIBKlASwzG4XUhLSlLRYr32vZ/t5GOQs15saJoXkyqOl/rOE4/\
hBvfMOado0nNXh7K1Bw6kuZwEREkhDu6OyPX1vRgjdUWkqxFvtb1s0ptScMkGEsQVpW45QmZq1RL5C\
i69yiYmkR22xmvDXmKXLVhKTNJvQ1CdPkgRlGnKRwSq7unHmc5IrhxBM5epgSqSIqKpakl6+\
0CWrns4AyBf5N8ON6jsiSE3SuiuiyAAHbAtMJ88z9OpwWCkNCmA5AlZMRNKG2/\
ofHBUO17MT3vkR94fbq4UIX5kmugq9zCNlvh6+\
yJV01og4XY3HegZJyJb93Lbis5HZ0wc0zYmmwgZ3DZHV64uQrcpOu/\
MG62r70jW0mMD4IZ8YPGrVo81DTXzGsx71J0BWw21TR8GlxjdF7Yk81+kyjLas5qF/\
UpbGSwPDgYwmOzFD2VpCXL7DmyoNK6RA+Lnd8SMT+\
KBdccDjWSLNPLcnwQiXsBdw51Dpl9NirNxNtjAlOdgC2TZv1OibbSHXFYCoksy6i1vmqNnRsbmtIHc\
sRubIT0v9hygn61StMHlLpjAir+0KUIIyajjsW3s1Dbh3w7C2jO0DmrL6uelZ4uszNYolOI06/\
ISmr/7DI2LHyWvs5V7nc0K6U3hlEPEIVDZRFG1Gy6+lEV0ihhe+\
husMwPnvHn5SmC8x4ZNs20Y1EXigoBW6Xv1zXltpG5Z3vt7deBjfykBdJG6Xmq8jmCVylXitzJjLhv\
6Qa14rXU0J4mXzoFKi7yKx9X7Ipl1rsy6ahIV4oENIub0noEVZCNgh0PrpXwXff4QcYtYPzD5sWjJ3\
CxWFl7n+5f4Ws3JMxoLZ/HER+WjkuSlRon7cnYP2m+kL5iMJL+fIGJTkYIiULMCqvWOzZKaQZXusK+\
SaIxsRIbBY39bWzaZu/LAlA0194FkdBMyaZYQ/4z/VvK+vyBcL/\
y4gGt7VQbYdytsEIQmKjGwphiyGZRuaudbGB9mMWoy7bTFG3es32E0LU2upGs2EPVXThwe3tKkMC0p\
ciNdRlca+hGjmSiu55h/dhYxfUV+qxjUgAci/\
GDACwrqruhPOq9PiFqHUfMH7P7eVlsEbRJ6UGlKmaHckqL72aVrgDlXXCf9I1QOSUmRWQSrH3Ep5kv\
bDmy97tfNQOLQViBtHq2R775051YmLHtQ5BmVdh1/\
NUlt7E71ads3kYj6HRjjvBrKKAkifdCN1n6a0cBbAzl2F7wuxdftoGBRwtwKkEL2c6+\
in97WXza8sLVFncBdLXXqJRSWzmSZFLhB23wh55yeWjp7lWmeQbbXQaU4F2nsnZ2w4RVFDvekMoFAB\
slQA6dfnNtNczNVRigON3gK8EVXTj55btk9pxPvjrSw9FTAsBxEVDPFV2vRZFYUVW2lVn04TxtyarR\
fbtfkor4IouYm/yKF5VQlFZQigFlD59hyGZpof34SYrYYE0vPQNe/2IiV3nl7w+S2YhowL8/\
LnMg3gByUvtfwIrAXzHtgcjyKcrtB5VpX9sonpwX5iaHp7Ozf557rbxG+\
1JfOmOWyIefbGoWgPMwpHQv9Dzo7K/VXOk+EsqgdrzSS5kb1AxKTs/Rkx6qBYmDBpt9/Dn0bIVx+\
rs+wN6ekF0H6ewsPhi/HvmwdBz5ZQgPaGGgAIDa7caAq4myViSz0eNc4Eih+\
njpyNlIIoYwFB425W8gT0GWbdPErofKOQ9pFkEHXEPNhATNSDk7CAvHfdN7+RdkHeo3ffPHyTy4/\
lQuVP7Xz4sAuol4jL2wJ+on5T1Xkw+QE17eWB3GA8xC2BDEyOpMDBDI0ryK0Jzl+\
y08xzY8av9B2Vv177wPZWws6kpDIkr5ogpyQnGxOPrwaRXRCmGJiEPavY9UhnPb3/HY84e+FIKk/\
nkstG2HJxhYfyhDUzeN8+XfswVdUERc+\
9Zdyzs5DLzcoUeeKTnJyvz1R5wP0Aq6gOfoOuXFV3Gh5uJZhhAjJSqbx6LrlZVws1kqrMP7ZA4VYwu\
B7NlDopAsWdu4audv94HpD9SumvzR7i9YHfjBrtmS/\
OcaDSudXvoRIl3nFw6QMY3aav2EpSKES8R4IX0AOwfp2UUSiwyAb7RvnaP0vCcKj4/\
N3kQaGIdJR7LrP2fGlRI5NMD83MX5QpaNHtyplBAkBAyq/\
7s1TizFQ9RzmLbWFsX65z1ZdWlBm1HcZWnUSjIZ3cqCt6vvZyiaVUmupXeDhL59SLeuTgeE3aK7ICx\
xFrm+2HWz77lxud0hg4tNT1BJpophmF18ItGkO8Z0GjbT2VFGRkOHilAZG2LkXzz8Hq4NU8jkvAYNo\
yUbW3FCTi2oaE6q8nVrowy8drMLnRUrgtkLhTe4fC5Meh26/\
IxnK6Uk8NCq3HCENYusvREvUccbRWtB5nscCLl1XFOXn0qvew3+CNrh2QgkWSAbW2Mib/\
bA9W0LOBRqShkg5LPkn1RlicfY+xlWZKkmCaSJBuEGUCf0dbkcnYyc2478okhIqLbsOdUrkUzOX+j/\
DrsOgwp1QJopVUq46NZvCoWSqdpwvyEKMH3OHhSrBY+\
RdgyXMgBvWcXq0YxbpR2j1oSw4vJarR5EYqq1fJ6VXiSSIMimOWLfJs7QEhBpdzC+wpsmhcz4DQ/\
plVTsXwIqTW6u1gE0rhpdlndq56VIZ4i+7I/Pz7yRMlOxLLREIhRcicw6UGF18uDTgglCIls/\
90bqZnMlQ005+7kvFImv693tzyrtQ4U3VElk8sEyEZx5j3LXYIm2jfPvyD7Z6zhvoMJIVeKs8rA+\
lkyw1TU9fbK5He0xNK7+XtHLEqGq1Ti2JR/20Cazst2tsvb+4DYBeU8pZ1E0/\
lM2iafKGhIF0CkAs7W+eCufx7kdq47L+NgDefKlj/VOMCP+aC6o1G4HVgw+\
0sJTj6QzQli5PXKsHbUcZg2HSB6cOZG8+ICFKVFwB0tdNSFwQzooXEUZxob7ENafGLqkuQ/O/\
OLdzdPtdlJVQ5BajwOe+Tx+\
Ewj2pgwUGsG4TZ9TNCk6XEWAnz3yjJw0SXVxrb5Iv03CZ2jqeZ6ruMR9gt1d/\
DFeQEwZ438vPLZQ4qeaEqDPYxb3bKBBIad6tqGnhcau8KLvOTldZaKhQOxtBUcWWz7wgGgItEs9WkR\
LwAIuyMlORfVQREe6ww+F4u/6oA9IeHP9fEv+\
ihWYvsJJtsSSjxYMCMBilxRZqSGscojVoWdFHLy4Xe0GdzreBnK9xsN1COqRfEjiKSyuimIDPJDhl9\
ENophJnlxRTy+JBVa6JEuAUXTuB/mZ/O8qjfpYGUo2BNyA5KB/\
XLYcffKfNyJ17YF7bxnABF1gV2P4jARqtFLiRdPlvyn4yl3gEsVI8pPw4McLOer37T2n//\
vDgYwtRxzTeclZbRgyJ8HWlJ+lqxJnZ5i/cu2n/\
rISLxkduPSNLZwJmQVTV4F16IW5NSkZkTJWqKwYdSFC8LfH24bN0/KQg9bnce5tuL6d/\
oXdimJ56rbQc86NO1rI5FeKeerzxhgvqz1LhwcpH0N5RNcLGkeqf/9kQLgnNZilN3OJPXgC+\
1Jdo5N5VIjiKVu5HqBoML+iF5TO4bNdqz1TqMSPmN3YnQAeLULpP23MJHT2f0ABYnO+\
sKb5HWq9aa1rjMqEGjz8GvT+\
Jdm6gZT2XoHk9nd4EXx7Fe3Jeukz6K43JKHChKc2xyDs0XqLLW60P7W9B+spnGF8m+\
G62qAuO69KaMdg9S4zPDRo1DEZh9bRZ1F9l+G8KGdwy/VJ5FBKyl0M3zWAESR+\
CUoxmpcqFz8jOOUplrGIuNdh0aKP+\
djyuDx4vV9FUDpjqepWzZWLey8YTM4MqNREVVJIOVO7F902rPGqmWHNxsCad5WpUoXq7jdG19tgpQF\
8UtvBd0Zj9GHpbxAFLlKxu7JofXLKs8lZNjeFOwtnuRY8hs7qGoSMMy2WgwtXMk0okZGYg7k6+oz/\
KB5otpOniBcecP1btf/IiNRxH7qj4upbLr3IY7+jCyAg42VneaK1srk4MpG7Rs/\
gpdTHmtVb9KmLs1xqxuaNRf9ik5vP9Afw1DSbhNTjPd/uh3JdG7DU/\
lQOkaV1VTgMRUfNMUt9CqSZqtSGK7aNd0+icKGsX7CQbOgZow1c8HDQkPRIubJgQg+\
8b9Jc44ZrUOq0+J9LEJHC1e+9yRuxXdXWZw7MrnOXgaKueZJZZy5+GQ0Sx0MMQLVibsmRvD/\
rYUBlD1KWWJVHUSnKFVI3ZKQ4KWeiPQPFT4GPrquQeTzBxb/\
1XgGZi3b636hVM97YXAAbhWJn8I258xgba8Qr/a3KzR0/\
pG5BHBJ1YjasQTR58yHgzb6RDYjHdHztAnVTvSWSmsKdq11VYjChL0063dGespYchVvZuKgXPnnu5N\
hzz6Ou5IIUxhWypNZ5WbgcqgSKq6bACkzWvxv2SFlm3UrbfAh9NGUxt734SeaYaM1ZZ+\
0o5uYR0RL1SinmefR/s2qoHuRVstxonsBNNGkVNwHBS7dhjeysJ5+\
RgJu4nsaclYLsIPgspTwoinq3tXh4eyeC+PR3qNf+7ZHE6jbMDpGZ27lN56/JK1b+\
Xm8nLjt8Iir2qfmkfc6CMlVXRZmwzg9l1vZqnNkZA5qXiX4Je5MzYqiFMqLkLCv3ZUsXv4wfHk84dx\
x2IhvY1tm5R3X4HOaYWs4tYY4tY+\
mbw0qfz2B2zMdu7lLmOVi0dNE5PTDAuPAnyaPR1eHPd8QaC5Ikmm4wNWSTspEF5+\
aiKgOZBmGPHIeG+7oJk+dy+7GlcvIflOsilRi5fPljt8eYZ5+\
W6b8FChBCUaLQnxbOoX0hZChyyOVF8Ec1MuDAO7BHRkV8hQUVLPDE2pf2jzrKcyNdR8qOJt0McAkwF\
70bzKxJYPTawv8oEZBCEnpxFBeT7UDG8iEsAOyqXsSeXnJqVd8IfHFpY6rVWikua9IWom7eAZNFdS7\
cZeYVxJCDZtSZplb+\
PljMAS6pJcwBoMmIT09XJRD29rNmd3ih0z2fAPZiYgufQkKqdKOcvLVD3fl7roATC4tAIxQPbUySqz\
uvX6dngcSaC5s26jB3I4O8vrN7kFZEQsHxM8hkG0mqXwIsqcivHCSYOWwBo5uPPqGPVadEXgXyyyJA\
N6GVjiEebr8ba13BjY/\
O7hkxK4WCRSuE1JmGBCdera85GnleBibh75DS9lUYdih8pSgTygiWNqhwz9tky8fz0BDGprAf+\
E2iIERiJ6OUkYgnR+2cikbv5rfvwtv/e05XQXYTSoeyQOT+kBC+lYjacYMWHfuRjAeF/\
FhRFmcmb7a/ICKkgYuCHyr3pz0LKQ6HjM1ExsZ9poSybIRASF2ON1Sd+\
a0lmHzSibX3iDiIQAOWJ2QSYypQWbPsKlvgrORHbFNxLKbwzSGf0R4bkB9hKaasUtu1GlAHmYJlhmC\
CjltTa8C3SP1OC/\
VQNDvJiyQlB50DUPddISQlF6UYr6YxlQOUe1QB8k4hUTCoGS1LC0q9ibkFWXwT1WAZP8OMGj0oDttO\
6a7DXkWtKWyAUA4D5qdPGHh5/XaFaMEBd1mQHCgtwDiTq72atNkN6bluFjEIXEktlleuE9eT+4z/\
JdNvtWaGRzbv3J2z6J4BSDy3jxWp1SkTbdbwTCe520Dn5RIZ3u4L3V59DdqpqNHx5+MNqdhQFA/\
AL3oTtxEnKu9biG/\
XQQkfhdRNtaegv6c5JxiWNWFgESdQHujYbtilaTdabueI5aUR3b3zbvHLXhKQJBTASXl5LwDUdjjS5\
f1IJUuSkL37YqKrEqF6FfCAlbIzTySUt8L4H3l15lTDHZQwwoFCpkxTsojfUIzgOC426KlxQwf4ppT\
PiXE3MURb6hdx0pVYuSDYJiLplqd5aCfJyt/TGF4PJSOOeSQS5XLJU+Q2jZKN3PlrzFQ/\
nb26C6sxiv2oY/\
vNKVRZO1ndmVRaMv1xjuX1RkZqywZrgtB9E0WenIZCFiITMi11708tJgLeiXH9ZmaEKoUPXdeLdK2+\
fbxTzhW9UDAG+rJ7mG69KUvm7KPB1keJFZMeD/i04EmfDTw9N5GG+RTJj0qkuyphyYB5eyasZrSC+\
xDBrqgJd9i2PQektgwWuqU+nlNSwfSKcJ+s9Te72oKTXESQckTmfjiCCZaoTF9H8lyNU+\
ymgG1mhN8faWiPm0hXC/K1sWwrjQubRwQJ6yxPQTe86uZ/3CBU0Sk+ncC5DgOo7OMk/\
V8qQZIurBXzaaZwxPA8o/\
A4je1BrPCMOmAD2rP2YqJVg19am5PrVKTMWZ3B7I78LEv1b1jKlq5t0o0G2qjFHyONCBDDEZTXnZ62\
Nom4iHKnNQYshZZ76psasknQWPyD+S3ShyDEE7imipF0uitgN2hwCbjhStWul9+\
F5nKWqSZhtMf3VxVH2q3ZgdEoOoPwyfiZExjW3XhkyKIvInxs07xaKzdldhRCodF6O6lDCvkZ7Gy7P\
Fa817qksanA8hWaeg6i5nc90UcN2QksElZq8EmA2kA0PsHzf0rLLcm6sgfE0/\
SmncqjFpPsU43JD4SrDUnW1Hrj422h6kr8B+\
RYoRxDqriGqqLkY5bDk0tQitvAQBlR2uqA8kMVrvAaGszA5ECZnKvCmb8JT2decPaCWOrsafEjTVJ6\
VWiHcPX9r2RZmyjVj33VR8hXvjhp7XtXe2UHmrZ5WLtzIZ+\
24q7WZWCL6m85rQU4NawvT8pgimBZSH4eL/\
mkw9uYNIA0gYIGHAudMb14jf7LoqX07f6CU8H80zXTbjsiBuG+\
8IQ51HGSP6fWaHGhYqnzWBhdqFyHO1yB2DtFcOzJvmC5qpaLqvZCO9m7cmTwbw4N1WcXbYzFF4Po6x\
o7MfsB9lhP0esLfjp3JIr+Xj4+avo8QajqNGqFjKoaufI+KeLebMru6gWck9XE8lhDm3/VN5y6wQl/\
01iklymJTZc7WEoCr61mdjg+\
KnyEQ82SonsYZnieGsMQWe2rqXiqWUfJZ0bIOxrGlA0gPIADkTnEG1osuWE9Q0lDfpoNnPIf4JWTCg\
qqXu0rIIwhIJM92NUoCMoxRXJSH79+\
l2eE5JThmTfTNpXIA1BkWyrJg1mBQRsShu12BDhtBEYXykTGNxNi/i8H0z8xQ9+39kQK8/HbFf3QO+\
NDxnZMPwTuwnxTYOZl7y9Nw69e8QDpD7VpE2k3QUATHy16hkdccF/ibr7TJhB8Hlg/0ihsEo20+\
W0tB/WjcQ5De+275RqbiddIQvbCTpgf+\
dXH4Y01GQ6p16lCfNfHxgKYu0lVGAfrZyqFbBl4DM2rmfhA+\
OLQ8ud7YFnwqlMOnsR8Zhealmsp85sIznADsAn2faQllrcMzsTioYS5FS1/\
esEAzELWgFw3zEDHcQDJ1funPZe0XDUBXQxYuiZQp0VLivTRQrTeE4aHvkGeVl/5/\
rEfUXTylk0HeGxpuaU2tWXHxxOC56V0OvGtwCbZ+k6yJpxbW3SEWG3Elt9boGj+FTZKfhFPBmv+\
Cbdf0TZpGTiz+4fiUpqL/hqrHJnUyrMdt6QajeyBAK7C3haMzQaRVCRNYS/mYb9jvKe0vFCZDs+\
6HeD2XWZNc8o6PrEgllZaqNC3lb8i/Ep1JxfTqr3pPgAq+\
mGzGp2LSojz4499E3J3foYplBxE0fpxcpgqZABeL7Xejvn5vxybiH5rRgemGK6wQu8TyjEgGYUPtaA\
kpd1wN3HReb9It4tfVTIN68BJYjBwPVby8vQ+jeX1S+hsq6OTz7zEedypDb0WM3oHhKW/\
YrewqKUixNKizDxCJCRnE430os/oxFOw3Baa+qJGiB210F/Qj7Rs1BaphDGhEJU/K/r+\
ql17xIgkhHIIYTXHjNlnm8dEsEY3pGOYhdOFtBoA7ZbDfNL9SkzM4MbUiekE5Sth1CwaqyekduCW+\
NnC5RvghXwijnky3o/\
S2AQssCf5IyxL5k6zupB87PThWTVaZwNlt0AK2rSB7EfWBOokIn2P2vFKnGJ6IkBIMusTJWmux+\
uFq9Fich5uJhbN40RQoRkqMIMCD+\
dTrf2J7OTjxmDtBKf2vk0gBqR2JP44bAqjfxUlaquzirPHPss5ERwYGuYucmfy4nsKLT4AS3zHmEVO\
t1Mq6F/ONOZSI0VcPal3iZjglMF/9C9CIG5+cEX/xY4rrQA1klwID74i7G6kv/mQwT/\
YiSE3k0l6tVn8pz0rpXVfNscK2681Vyh4efZRHLJz/3sjFN6NhAxI67J9CsWGq/ZIGdH/\
26JLcYG4rr8iddX7+ExFEk1d9XwoffufOGVaN+qKIiAac9Lt12fn2+GqEVu0czRv9Y/\
35qJG6M2GYXxYv2X3JOH63n42B89ikcGKYkHCz3XGWom9YeqrqL2C5ItVoMUMCnvH30QdtreDeaQoU\
ma1aitMz5RZ1tq4ob4mhydBSRqXiTnOKp00uJXD76NuwZO501y37RUnIJ5P3D7XA2HSSEwOnUO3X/\
ao9mrFEe4hXABm0NaCIp9YO23FnPIgpxhbwbjPu+leqbdNUJ25DKgYv8eyAbGiS61Qp+U+iS/\
z8Psokw", "TotalMatchCount" -> 74, "LexicalStructure" -> TextElement[{
       TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{
         TextElement[{
           Alternatives[
            TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
            TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
          "GrammaticalUnit" -> "Alternatives"|>]}, <|
        "GrammaticalUnit" -> "BoundToken"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[25]=",
 CellID->172948514,ExpressionUUID->"630390c5-b700-4f0d-bba8-6fbba88f6e91"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LexicalSummary Properties", "TechNoteSection",
 CellID->1668282004,ExpressionUUID->"6f4bb9aa-42a4-41a6-8fb7-61cc35a8ed3e"],

Cell["\<\
LexicalSummary properties vary in output from data to metadata. One can \
access various forms of the results, including the data, and their \
visualization.\
\>", "TechNoteText",
 CellID->665750961,ExpressionUUID->"a8323631-4c97-44c6-a350-f86a9bf643ce"],

Cell[BoxData[GridBox[{
   {"\"\<Data\>\"", Cell["\<\
Returns a list of Associations which contain the match and related metadata \
like string position\
\>", "TechNoteTableText",ExpressionUUID->
     "e9616af1-47a4-49e6-a09d-aa26572d1ce6"]},
   {"\"\<Dataset\>\"", Cell[TextData[{
     "Returns ",
     Cell[BoxData["\"\<Data\>\""], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "1be3d22d-4dc4-4a19-8df8-3de93b9e2e8d"],
     " as a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Dataset"]], "paclet:ref/Dataset"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "39a1b3fd-e364-4166-952c-e784236d61ed"]
    }], "TechNoteTableText",ExpressionUUID->
     "e89f6588-6860-440d-8bc9-4ec850196c44"]},
   {"\"\<Counts\>\"", Cell[TextData[{
     "Returns a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Dataset"]], "paclet:ref/Dataset"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "20d7d173-aea5-425d-8169-9b13792472ee"],
     "  of matches and their counts"
    }], "TechNoteTableText",ExpressionUUID->
     "52bf38ac-4afb-482e-b2ab-961787ceccdf"]},
   {"\"\<CountGroups\>\"", Cell[TextData[{
     "Returns a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Dataset"]], "paclet:ref/Dataset"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fe79b3e5-7ca9-4b85-9e13-082b21cb2431"],
     " of matches grouped by their count"
    }], "TechNoteTableText",ExpressionUUID->
     "7a7f7831-8ae7-4f8c-8e84-1cd7c4f375d2"]},
   {"\"\<CountGroupPercentages\>\"", Cell[
    "Returns \"CountGroups\" with the count replaced by percentage", 
     "TechNoteTableText",ExpressionUUID->
     "0472a6c0-f177-40ce-8030-cf6e8ec82d5b"]},
   {"\"\<PartOfSpeechGroups\>\"", Cell[TextData[{
     "Returns a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Dataset"]], "paclet:ref/Dataset"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6084aba7-79a3-4610-9d96-c538a7a8ef4f"],
     " of unique words in matches grouped by POS"
    }], "TechNoteTableText",ExpressionUUID->
     "af6b43d3-74f8-48ed-a5d7-eb39db65a95c"]},
   {"\"\<WordStemGroups\>\"", Cell[TextData[{
     "Returns a ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Dataset"]], "paclet:ref/Dataset"},
       "RefLink",
       BaseStyle->{"DefinitionBox", CellFrame -> 0}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "402c72a5-8e5b-4448-bd7f-6be6b0a9bd12"],
     " of unique words in matches grouped by word stem"
    }], "TechNoteTableText",ExpressionUUID->
     "d4063f45-a004-4394-ad07-df30121adc62"]},
   {"\"\<Source\>\"", Cell["\<\
Returns a string indicating whether the source is \"Wikipedia\" or \"Text\"\
\>", "TechNoteTableText",ExpressionUUID->
     "723a381a-f7ca-4c42-8a10-0d40617b9483"]},
   {"\"\<TotalMatchCount\>\"", Cell[
    "Returns the total number of matches found", "TechNoteTableText",
     ExpressionUUID->"7c0452a1-5617-474d-bb0b-c04daf51b789"]},
   {"\"\<LexicalStructure\>\"", Cell[
    "Returns a text structure diagram of the lexical pattern", 
     "TechNoteTableText",ExpressionUUID->
     "8d2effd0-e168-4537-bd60-df50b0f67bd2"]},
   {"\"\<Survey\>\"", Cell[
    "Returns a Dashboard of results", "TechNoteTableText",ExpressionUUID->
     "17bc05c1-d4cd-46f1-84bd-1233b3ecbafe"]}
  }]], "DefinitionBox",
 CellID->1696821134,ExpressionUUID->"6c6b3b60-a94e-4e0f-bd32-29b34770b6e7"],

Cell["LexicalSummary properties", "TechNoteCaption",
 CellID->2037450625,ExpressionUUID->"56233729-d4cb-4b82-901d-10696ca15e7e"],

Cell[TextData[{
 "View the list of properties by calling ",
 Cell[BoxData["\"\<Properties\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3c3650f6-99ce-4b2b-9fb5-2fe72ca733eb"],
 " on the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalSummary"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalSummary", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "086a8706-2b55-4529-95de-1a33a9668e5e"],
 " object."
}], "TechNoteText",
 CellID->1363090665,ExpressionUUID->"d5c2ce35-001d-4efb-b849-bdb65b29f971"],

Cell["View the list of properties.", "TechNoteMathCaption",
 CellID->1229863116,ExpressionUUID->"47a7c140-30ca-449b-9032-f0febc449809"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->"In[26]:=",
 CellID->779288237,ExpressionUUID->"84165a8b-4058-4f75-b93a-83d9676da775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"Dataset\"\>", ",", "\<\"Counts\"\>", 
   ",", "\<\"CountGroups\"\>", ",", "\<\"CountGroupPercentages\"\>", 
   ",", "\<\"LowercaseCountGroupPercentages\"\>", 
   ",", "\<\"PartOfSpeechGroups\"\>", ",", "\<\"WordStemCountGroups\"\>", 
   ",", "\<\"Source\"\>", ",", "\<\"TotalMatchCount\"\>", 
   ",", "\<\"LexicalStructure\"\>", ",", "\<\"Survey\"\>"}], "}"}]], "Output",\

 CellLabel->"Out[26]=",
 CellID->1682420800,ExpressionUUID->"8be5b880-6d8b-4845-858a-1fcf314c129c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LexicalStructure", "Subsection",
 CellID->240664990,ExpressionUUID->"cc925254-58d9-4b92-939e-9f63c3655eb5"],

Cell[TextData[{
 "Use the ",
 Cell[BoxData["\"\<LexicalStructure\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4713da59-1184-40f0-9186-b32039d11544"],
 " property or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalStructure"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalStructure", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2475934f-8982-42c7-b76f-995c780508ae"],
 " function to visualize a lexical pattern."
}], "TechNoteText",
 CellID->1110995588,ExpressionUUID->"ccae3372-1545-42f6-97b8-3500b733ab87"],

Cell["\<\
View a lexical pattern's structure via the \"LexicalStructure\" property\
\>", "TechNoteMathCaption",
 CellID->1687971595,ExpressionUUID->"8375b190-bd4e-42b5-83d5-6a0cc23089ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<LexicalStructure\>\"", "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->1179255129,ExpressionUUID->"8e7294a7-d813-4b92-aadf-a20f8a111ff9"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adverb\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adjective\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\" \""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>]], 
       InterpretationBox[
        GridBox[{{
           TemplateBox[{"\[ThinSpace]", "\" \"", 
             InterpretationBox[
              GridBox[{{
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   RowBox[{
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"specie\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>]],
                     "|", 
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"species\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    
                    TextElement[{"species"}, <|
                    "GrammaticalUnit" -> "Text"|>]]}]}, 
                  "RowWithSeparators"]}, {
                 StyleBox["\"Alternatives\"", "TextElementLabel"]}}, 
               BaseStyle -> "TextElementGrid"], 
              TextElement[{
                Alternatives[
                 TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
                 
                 TextElement[{"species"}, <|
                  "GrammaticalUnit" -> "Text"|>]]}, <|
               "GrammaticalUnit" -> "Alternatives"|>]]}, 
            "RowWithSeparators"]}, {
           StyleBox["\"BoundToken\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{
          TextElement[{
            Alternatives[
             TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
             TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
           "GrammaticalUnit" -> "Alternatives"|>]}, <|
         "GrammaticalUnit" -> "BoundToken"|>]]},
      "RowWithSeparators"]},
    {
     StyleBox["\<\"StringExpression\"\>", "TextElementLabel"]}
   },
   BaseStyle->"TextElementGrid"],
  TextElement[{
    TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>], 
    TextElement[{
      TextElement[{
        Alternatives[
         TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
         TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
       "GrammaticalUnit" -> "Alternatives"|>]}, <|
     "GrammaticalUnit" -> "BoundToken"|>]}, <|
   "GrammaticalUnit" -> "StringExpression"|>]]], "Output",
 CellLabel->"Out[12]=",
 CellID->1336198925,ExpressionUUID->"6b38ac91-f7a3-44f4-8f9e-78bcb23ab1f2"]
}, Open  ]],

Cell["\<\
View a lexical pattern's structure via the LexicalStructure function\
\>", "TechNoteMathCaption",
 CellID->1944246427,ExpressionUUID->"3368106e-29f7-405a-a101-7db20b4fd6a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalStructure", "[", 
  RowBox[{
   RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}], "~~", 
   RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
   RowBox[{"BoundToken", "[", 
    RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->1246165327,ExpressionUUID->"bb550aec-4287-4243-9481-e448ba084f48"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adverb\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adjective\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\" \""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>]], 
       InterpretationBox[
        GridBox[{{
           TemplateBox[{"\[ThinSpace]", "\" \"", 
             InterpretationBox[
              GridBox[{{
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   RowBox[{
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"specie\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>]],
                     "|", 
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"species\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    
                    TextElement[{"species"}, <|
                    "GrammaticalUnit" -> "Text"|>]]}]}, 
                  "RowWithSeparators"]}, {
                 StyleBox["\"Alternatives\"", "TextElementLabel"]}}, 
               BaseStyle -> "TextElementGrid"], 
              TextElement[{
                Alternatives[
                 TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
                 
                 TextElement[{"species"}, <|
                  "GrammaticalUnit" -> "Text"|>]]}, <|
               "GrammaticalUnit" -> "Alternatives"|>]]}, 
            "RowWithSeparators"]}, {
           StyleBox["\"BoundToken\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{
          TextElement[{
            Alternatives[
             TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
             TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
           "GrammaticalUnit" -> "Alternatives"|>]}, <|
         "GrammaticalUnit" -> "BoundToken"|>]]},
      "RowWithSeparators"]},
    {
     StyleBox["\<\"StringExpression\"\>", "TextElementLabel"]}
   },
   BaseStyle->"TextElementGrid"],
  TextElement[{
    TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>], 
    TextElement[{
      TextElement[{
        Alternatives[
         TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
         TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
       "GrammaticalUnit" -> "Alternatives"|>]}, <|
     "GrammaticalUnit" -> "BoundToken"|>]}, <|
   "GrammaticalUnit" -> "StringExpression"|>]]], "Output",
 CellLabel->"Out[11]=",
 CellID->581361726,ExpressionUUID->"555559b6-cc8e-451a-b691-ee9527dabc47"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data", "Subsection",
 CellID->1786817302,ExpressionUUID->"589d0476-0d9b-42e1-b026-d92c31cec39a"],

Cell[TextData[{
 "Use the ",
 Cell[BoxData["\"\<Data\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2682590d-f74f-4c7e-a517-8e7c4e276c57"],
 " and ",
 Cell[BoxData["\"\<Dataset\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7a5b56e4-abea-47f4-9f99-d0d011bf611e"],
 " properties to extract the results from the summary object."
}], "TechNoteText",
 CellID->1523155587,ExpressionUUID->"eab2a1eb-d5dd-44ab-a5ea-2dd34e9fb688"],

Cell[TextData[{
 "View search results in a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dataset"]], "paclet:ref/Dataset"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "df080833-31b8-4914-8a96-ca7ba1ea6627"],
 "."
}], "TechNoteMathCaption",
 CellID->826374024,ExpressionUUID->"9fd2e131-3474-47ed-8c44-aed1cccad008"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellLabel->"In[27]:=",
 CellID->342895442,ExpressionUUID->"43626db2-c9df-4068-8732-614372ce235d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Match" -> "generally extinct species", 
        "Position" -> {{9949, 9973}}|>, <|
       "Match" -> "aboriginally distinct species", 
        "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
       "Match" -> "as well-defined species", 
        "Position" -> {{39968, 39990}}|>, <|
       "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
       "Match" -> "extraordinarily abnormal species", 
        "Position" -> {{43663, 43694}}|>, <|
       "Match" -> "as distinct species", 
        "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {
         207958, 207976}, {450417, 450435}, {464593, 464611}, {542018, 
         542036}, {544853, 544871}, {549985, 550003}, {611433, 611451}, {
         676879, 676897}, {685573, 685591}, {690461, 690479}, {723909, 
         723927}, {735758, 735776}, {737225, 737243}}|>, <|
       "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
       "Match" -> "as undoubted species", 
        "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
       "Match" -> "as independent species", 
        "Position" -> {{95992, 96013}}|>, <|
       "Match" -> "closely related species", 
        "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
       "Match" -> "as incipient species", 
        "Position" -> {{102609, 102628}}|>, <|
       "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
       "Match" -> "most vigorous species", 
        "Position" -> {{122687, 122707}}|>, <|
       "Match" -> "already existing species", 
        "Position" -> {{193555, 193578}}|>, <|
       "Match" -> "as new species", 
        "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
       "Match" -> "nearly extreme species", 
        "Position" -> {{221865, 221886}}|>, <|
       "Match" -> "widely diffused species", 
        "Position" -> {{224108, 224130}}|>, <|
       "Match" -> "more ancient species", 
        "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
       "Match" -> "most ancient species", 
        "Position" -> {{232133, 232152}}|>, <|
       "Match" -> "very distinct species", 
        "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
         498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
       "Match" -> "most distinct species", 
        "Position" -> {{304406, 304426}}|>, <|
       "Match" -> "as representative species", 
        "Position" -> {{325002, 325026}}|>, <|
       "Match" -> "very same species", 
        "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
       "Match" -> "more aboriginal species", 
        "Position" -> {{463660, 463682}}|>, <|
       "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
       "Match" -> "extremely close species", 
        "Position" -> {{469855, 469877}}|>, <|
       "Match" -> "particularly distinct species", 
        "Position" -> {{470144, 470172}}|>, <|
       "Match" -> "together various species", 
        "Position" -> {{480798, 480821}}|>, <|
       "Match" -> "widely distinct species", 
        "Position" -> {{495622, 495644}}|>, <|
       "Match" -> "nearly related species", 
        "Position" -> {{500963, 500984}}|>, <|
       "Match" -> "still existing species", 
        "Position" -> {{535639, 535660}}|>, <|
       "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
       "Match" -> "now extinct species", 
        "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
       "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
       "Match" -> "more dominant species", 
        "Position" -> {{593129, 593149}}|>, <|
       "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
       "Match" -> "all peculiar species", 
        "Position" -> {{635730, 635749}}|>, <|
       "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
       "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
       "Match" -> "quite distinct species", 
        "Position" -> {{694106, 694127}}|>, <|
       "Match" -> "only herbaceous species", 
        "Position" -> {{713843, 713865}}|>, <|
       "Match" -> "extremely few species", 
        "Position" -> {{782509, 782529}}|>, <|
       "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
       "Match" -> "yet distinct species", 
        "Position" -> {{870851, 870870}}|>, <|
       "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
       "Match" -> "already recorded species", 
        "Position" -> {{885795, 885818}}|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Position"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Position" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 1, 
              DirectedInfinity[1], {All, "Position"}]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Position"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Position" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 1, 
              DirectedInfinity[1], {All, "Position"}]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, 
     "DataRowCount" -> 46, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["generally extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{9949, 9973}, ShowStringCharacters -> False], 
                  Style[
                   Style[{9949, 9973}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["aboriginally distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{27844, 27872}, ShowStringCharacters -> False], 
                  Style[
                   Style[{27844, 27872}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as well-defined species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{39968, 39990}, ShowStringCharacters -> False], 
                  Style[
                   Style[{39968, 39990}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["so many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{42078, 42092}, ShowStringCharacters -> False], 
                  Style[
                   Style[{42078, 42092}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["extraordinarily abnormal species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{43663, 43694}, ShowStringCharacters -> False], 
                  Style[
                   Style[{43663, 43694}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{85564, 85582}, ShowStringCharacters -> False], 
                  Style[
                   Style[{85564, 85582}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["16 total \:203a ", ""], 
                  Style[
                   Superscript["16 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as good species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{87408, 87422}, ShowStringCharacters -> False], 
                  Style[
                   Style[{87408, 87422}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as undoubted species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{88427, 88446}, ShowStringCharacters -> False], 
                  Style[
                   Style[{88427, 88446}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as independent species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{95992, 96013}, ShowStringCharacters -> False], 
                  Style[
                   Style[{95992, 96013}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["closely related species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{100728, 100750}, ShowStringCharacters -> False], 
                  Style[
                   Style[{100728, 100750}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as incipient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{102609, 102628}, ShowStringCharacters -> False], 
                  Style[
                   Style[{102609, 102628}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as doubtful species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{107226, 107244}, ShowStringCharacters -> False], 
                  Style[
                   Style[{107226, 107244}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["most vigorous species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{122687, 122707}, ShowStringCharacters -> False], 
                  Style[
                   Style[{122687, 122707}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["already existing species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{193555, 193578}, ShowStringCharacters -> False], 
                  Style[
                   Style[{193555, 193578}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as new species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{201928, 201941}, ShowStringCharacters -> False], 
                  Style[
                   Style[{201928, 201941}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["nearly extreme species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{221865, 221886}, ShowStringCharacters -> False], 
                  Style[
                   Style[{221865, 221886}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["widely diffused species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{224108, 224130}, ShowStringCharacters -> False], 
                  Style[
                   Style[{224108, 224130}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["more ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{231849, 231868}, ShowStringCharacters -> False], 
                  Style[
                   Style[{231849, 231868}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["most ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{232133, 232152}, ShowStringCharacters -> False], 
                  Style[
                   Style[{232133, 232152}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["very distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{303893, 303913}, ShowStringCharacters -> False], 
                  Style[
                   Style[{303893, 303913}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["6 total \:203a ", ""], 
                  Style[
                   Superscript["6 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{461., {370.8544921875, 376.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{461., {370.8544921875, 376.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[27]=",
 CellID->1399355230,ExpressionUUID->"e7530567-1608-4e2f-9c19-15c58d7fce42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counts", "Subsection",
 CellID->1603752961,ExpressionUUID->"eb70a302-58ce-41dc-8cf0-69b6cd297ffb"],

Cell[TextData[{
 "Use ",
 Cell[BoxData["\"\<Counts\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1587eefd-3bdd-4c98-8d76-45dacddef179"],
 " to view the frequency of matches, or use ",
 Cell[BoxData["\"\<CountGroups\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2a3a4c50-7b20-47fd-a3d2-90db960f72de"],
 " to group matches by frequency."
}], "TechNoteText",
 CellID->302090059,ExpressionUUID->"ec349d03-13cd-4e10-8395-81ba1c38718f"],

Cell["Return a dataset of matches grouped by their count", \
"TechNoteMathCaption",
 CellID->793577259,ExpressionUUID->"ec82f14a-37fa-424f-8bf2-1b438f97932b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->82992742,ExpressionUUID->"6cb01e60-61c5-446d-9cf1-7b2a06afbe66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"as distinct species"}, "CountGroup" -> 16|>, <|
       "Matches" -> {"very distinct species"}, "CountGroup" -> 6|>, <|
       "Matches" -> {"aboriginally distinct species"}, "CountGroup" -> 3|>, <|
       "Matches" -> {
         "very same species", "now extinct species", "more ancient species", 
          "closely related species", "as undoubted species", 
          "as new species"}, "CountGroup" -> 2|>, <|
       "Matches" -> {
         "yet distinct species", "widely distinct species", 
          "widely diffused species", "very many species", "very fine species",
           "very few species", "too few species", "together various species", 
          "still older species", "still existing species", "so many species", 
          "so certain species", "quite distinct species", 
          "particularly distinct species", "only herbaceous species", 
          "not real species", "nearly related species", 
          "nearly extreme species", "most vigorous species", 
          "most distinct species", "most ancient species", 
          "more dominant species", "more aboriginal species", 
          "generally extinct species", "extremely few species", 
          "extremely close species", "extraordinarily abnormal species", 
          "as well-defined species", "as representative species", 
          "as many species", "as independent species", "as incipient species",
           "as good species", "as doubtful species", 
          "already recorded species", "already existing species", 
          "all peculiar species"}, "CountGroup" -> 1|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 2, "DataRowCount" -> 5, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"as distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"as distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"very distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"aboriginally distinct species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"aboriginally distinct species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{817., {87.8544921875, 93.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{817., {87.8544921875, 93.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[28]=",
 CellID->922247217,ExpressionUUID->"c7692aeb-d46b-478e-9fe2-6f15d86476c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Survey", "Subsection",
 CellID->1187753310,ExpressionUUID->"0cda6fe9-0d84-4491-92a5-5e7950d6cda9"],

Cell[TextData[{
 Cell[BoxData["\"\<Survey\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7d041340-7d90-48e1-92ea-d29e8a8ddeb8"],
 " returns a dashboard of selected properties."
}], "TechNoteText",
 CellID->1840397229,ExpressionUUID->"a513bde1-3a38-4874-b1c8-37b92423ed0e"],

Cell["Return a Survey of results", "TechNoteMathCaption",
 CellID->181087201,ExpressionUUID->"1336ec09-39d7-40cd-b3bd-36f0f14b3e8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Survey\>\"", "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->548259408,ExpressionUUID->"bac61a70-1670-43f7-a1dc-e6195d7720e3"],

Cell[BoxData[
 DynamicModuleBox[{FaizonZaman`LexicalCases`Private`tab$$ = 
  "LexicalDispersion"}, 
  TagBox[GridBox[{
     {
      PanelBox[
       InterpretationBox[
        StyleBox[GridBox[{
           {
            
            SetterBox[Dynamic[FaizonZaman`LexicalCases`Private`tab$$], {
             "LexicalDispersion"}, "\<\"LexicalDispersion\"\>"], 
            
            SetterBox[Dynamic[FaizonZaman`LexicalCases`Private`tab$$], {
             "WordCloud"}, "\<\"WordCloud\"\>"]}
          },
          BaselinePosition->{1, 1},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Deployed->True],
        SetterBar[
         Dynamic[FaizonZaman`LexicalCases`Private`tab$$], {
         "LexicalDispersion", "WordCloud"}]]]},
     {
      DynamicBox[ToBoxes[
        Switch[FaizonZaman`LexicalCases`Private`tab$$, "LexicalDispersion", 
         Graphics[
          Raster[CompressedData["
1:eJzt2j9Lw0AYB+CALo5FRFc/gA4u6iBxdhLp4CaIDi7qB9BdnN0dRCiufgnF
oSC4CiL+Gf0Cgi4VRUtEk95d8hRChyfQOy6Xe98fnVzfWdkcyrJs+v3aeL+G
s97nJf/5m3POOec8Pb+aGd07WXzI93ey0+7sQ9462H0+e3ruc3984+eccx7G
nR+cc84555xzzjnnnHPOf/K5y/Hb7shdfjnVXug83uXbF6edw2P5cSwu3+ec
c84555z3RH/AOeecc845T8X1L5xzzjnnnPOyXH/BOeecc84555xzzjmP1eWX
nHPO+eDd+cs555zzQbv6g3POOeeccz4o139wzjnnnHPOOeec8ypd/sQ555xz
zjnnnPPUXb6Rtls/zjnnnHPOOeeccx6zy68455xzzjnnnJfh+kvOOee8fHe+
cs4555xzznkcrj/jnHPOOa+Xq+8455xzzjnnvB6uv+Occ84555xzznnVLn/g
nHPOOeecc845j9vlN5xzzjnn/LOrDznnnHPOv7r6iHPOOeecc845D+/6c845
55xzztNx9TvnvJ97P3DOOeecc84555xz/neXr3HOOeecc8455zx1l29wzjnn
5bvzlXPOOeecc875b1z/yDnnnHPOeX1cfc8555xzzjn/resfOOecc845H5yr
vznnnHPOv7r6iHPOOeecc84550UuP+Ccc84555xzzjmP2+U3nNsfnHPOOec9
Uf/U260v55zH6d7PnHPO+Xd3PnLOOec8NVe/cM55GPf+5by5bv9zzjnnnHPO
m+L/7X/0T5xzzjnnvE5eVN+qfznnnIdw+Q3nnPMq3PnAOeecc94sj73+i318
Tfeq18f685Q99PMb+vc5b7K35vcX1s6v87F2+3Xp6Sa/XV2eONq6/7jP/ozb
rQ/n8e6vpu/PovkXnT+hx1/1/EOPr+r5xf7/xaY/n7xafwM3BHrr
           "], {{0, 0}, {100, 46}}, {0, 1}], AspectRatio -> GoldenRatio^(-1), 
          Axes -> False, Frame -> True, FrameLabel -> {None, None}, 
          FrameStyle -> Automatic, 
          FrameTicks -> {{{{45.5, "as distinct species"}, {
              44.5, "very distinct species"}, {
              43.5, "aboriginally distinct species"}, {
              42.5, "very same species"}, {41.5, "now extinct species"}, {
              40.5, "more ancient species"}, {
              39.5, "closely related species"}, {
              38.5, "as undoubted species"}, {37.5, "as new species"}, {
              36.5, "yet distinct species"}, {
              35.5, "widely distinct species"}, {
              34.5, "widely diffused species"}, {33.5, "very many species"}, {
              32.5, "very fine species"}, {31.5, "very few species"}, {
              30.5, "too few species"}, {29.5, "together various species"}, {
              28.5, "still older species"}, {
              27.5, "still existing species"}, {26.5, "so many species"}, {
              25.5, "so certain species"}, {24.5, "quite distinct species"}, {
              23.5, "particularly distinct species"}, {
              22.5, "only herbaceous species"}, {21.5, "not real species"}, {
              20.5, "nearly related species"}, {
              19.5, "nearly extreme species"}, {
              18.5, "most vigorous species"}, {
              17.5, "most distinct species"}, {
              16.5, "most ancient species"}, {
              15.5, "more dominant species"}, {
              14.5, "more aboriginal species"}, {
              13.5, "generally extinct species"}, {
              12.5, "extremely few species"}, {
              11.5, "extremely close species"}, {
              10.5, "extraordinarily abnormal species"}, {
              9.5, "as well-defined species"}, {
              8.5, "as representative species"}, {7.5, "as many species"}, {
              6.5, "as independent species"}, {5.5, "as incipient species"}, {
              4.5, "as good species"}, {3.5, "as doubtful species"}, {
              2.5, "already recorded species"}, {
              1.5, "already existing species"}, {
              0.5, "all peculiar species"}}, 
             None}, {{{22.393326324204672`, 200000}, {
              44.78670863186511, 400000}, {67.18009093952556, 600000}, {
              89.57347324718599, 800000}}, None}}, GridLines -> None, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Full, 
          LabelStyle -> {FontFamily -> "Times"}, 
          Method -> {
           "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
            "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
          "Lexical Dispersion Plot"], "WordCloud", 
         Graphics[{
           Style[{
             Inset[
              Style[
              "as distinct species", FontSize -> Scaled[0.13257575757575757`],
                FontColor -> RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, 
              Center, Automatic], 
             Inset[
              Style[
              "very distinct species", FontSize -> 
               Scaled[0.05681818181818182], FontColor -> 
               RGBColor[0.880722, 0.611041, 0.142051]], {1.5, 40.5}, Center, 
              Automatic], 
             Inset[
              Style[
              "aboriginally distinct species", FontSize -> 
               Scaled[0.03409090909090909], FontColor -> 
               RGBColor[0.560181, 0.691569, 0.194885]], {-26.5, -35.5}, 
              Center, Automatic], 
             Inset[
              Style[
              "closely related species", FontSize -> 
               Scaled[0.026515151515151516`], FontColor -> 
               RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, -52.5}, Center,
               Automatic], 
             Inset[
              Style[
              "as undoubted species", FontSize -> 
               Scaled[0.026515151515151516`], FontColor -> 
               RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, 60.5}, Center, 
              Automatic], 
             Inset[
              Style[
              "more ancient species", FontSize -> 
               Scaled[0.026515151515151516`], FontColor -> 
               RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, -68.5}, Center,
               Automatic], 
             Inset[
              Style[
              "extraordinarily abnormal species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.28240003484173815`, 0.6090799721266095, 
                 0.7538800418100857]], {-3.5, 73.5}, Center, Automatic], 
             Inset[
              Style[
              "now extinct species", FontSize -> 
               Scaled[0.026515151515151516`], FontColor -> 
               RGBColor[1, 0.75, 0]], {-0.5, -84.5}, Center, Automatic], 
             Inset[
              Style[
              "very same species", FontSize -> Scaled[0.026515151515151516`], 
               FontColor -> RGBColor[0.647624, 0.37816, 0.614037]], {3.5, 
              86.5}, Center, Automatic], 
             Inset[
              Style[
              "particularly distinct species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.35558897405758294`, 0.5505288207539337, 
                 0.8417067688690995]], {-6.5, -98.5}, Center, Automatic], 
             Inset[
              Style[
              "as representative species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-13.5, 
              98.5}, Center, Automatic], 
             Inset[
              Style[
              "already recorded species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.40082222609352647`, 0.5220066643438841, 
                 0.85]], {-0.5, -110.5}, Center, Automatic], 
             Inset[
              Style[
              "as new species", FontSize -> Scaled[0.026515151515151516`], 
               FontColor -> RGBColor[0.922526, 0.385626, 0.209179]], {102.5, 
              20.5}, Center, Automatic], 
             Inset[
              Style[
              "generally extinct species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.5407932311309059, 0.715, 0.09762679674248334]], {-5.5, 
              110.5}, Center, Automatic], 
             Inset[
              Style[
              "together various species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-0.5, 
              122.5}, Center, Automatic], 
             Inset[
              Style[
              "only herbaceous species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.8878600487784333, 0.33792799024431336`, 
                 0.2577332520359445]], {-0.5, -122.5}, Center, Automatic], 
             Inset[
              Style[
              "more aboriginal species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.8857244243136628, 0.3764133635295058, 
                 0.1393110607841571]], {118.5, -48.5}, Center, Automatic], 
             Inset[
              Style[
              "extremely close species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.9324333565611593, 0.5282889043741062, 
                 0.0921900209050434]], {-116.5, 55.5}, Center, Automatic], 
             Inset[
              Style[
              "more dominant species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.47401116530937026`, 0.47809330081437784`, 
                 0.85]], {-117.5, -53.5}, Center, Automatic], 
             Inset[
              Style[
              "as well-defined species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.8439466852489265, 0.3467106629502147, 
                 0.3309221912517893]], {115.5, 59.5}, Center, Automatic], 
             Inset[
              Style[
              "as independent species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.838355547812947, 0.44746667828057946`, 
                 0.0208888695323676]], {113.5, -63.5}, Center, Automatic], 
             Inset[
              Style[
              "already existing species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[0.915, 0.3325, 0.2125]], {-114.5, -65.5}, Center, 
              Automatic], 
             Inset[
              Style[
              "widely diffused species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-101.5,
               84.5}, Center, Automatic], 
             Inset[
              Style[
              "nearly extreme species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.8613800418100862, 0.48092002787339083`, 
                 0.02824203762907758]], {89.5, 98.5}, Center, Automatic], 
             Inset[
              Style[
              "widely distinct species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.9038177251280404, 0.3492734123079395, 
                 0.18454431282010084`]], {105.5, -79.5}, Center, Automatic], 
             Inset[
              Style[
              "most vigorous species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.16397784358994957`, 0.7038177251280403, 
                 0.6117734123079395]], {-106.5, -79.5}, Center, Automatic], 
             Inset[
              Style[
              "extremely few species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.6753413537738198, 0.3589675436319385, 
                 0.5991466155654507]], {-0.5, 134.5}, Center, Automatic], 
             Inset[
              Style[
              "nearly related species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.6184987019729621, 0.39212575718243875`, 
                 0.7412532450675947]], {104.5, 83.5}, Center, Automatic], 
             Inset[
              Style[
              "quite distinct species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {
              0.5, -134.5}, Center, Automatic], 
             Inset[
              Style[
              "most distinct species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {
              96.5, -96.5}, Center, Automatic], 
             Inset[
              Style[
              "most ancient species", FontSize -> Scaled[0.01893939393939394],
                FontColor -> 
               RGBColor[
                0.9874666782805795, 0.6948333914028977, 
                 0.033839968642435214`]], {-119.5, 67.5}, Center, Automatic], 
             
             Inset[
              Style[
              "still existing species", FontSize -> 
               Scaled[0.01893939393939394], FontColor -> 
               RGBColor[
                0.8564488486273256, 0.42032672705901153`, 
                 0.06612212156831418]], {133.5, -32.5}, Center, Automatic], 
             Inset[
              Style[
              "yet distinct species", FontSize -> Scaled[0.01893939393939394],
                FontColor -> 
               RGBColor[
                0.428777913273419, 0.5052332520359486, 
                 0.85]], {-106.5, -93.5}, Center, Automatic], 
             Inset[
              Style[
              "as incipient species", FontSize -> Scaled[0.01893939393939394],
                FontColor -> 
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {
              89.5, 111.5}, Center, Automatic], 
             Inset[
              Style[
              "as doubtful species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.9728288904374106, 0.621644452187053, 
                 0.07336199581899142]], {94.5, -108.5}, Center, Automatic], 
             Inset[
              Style[
              "very many species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.6536293927965667, 0.37163285420200276`, 
                 0.6534265180085832]], {-107.5, 98.5}, Center, Automatic], 
             Inset[
              Style[
              "all peculiar species", FontSize -> Scaled[0.01893939393939394],
                FontColor -> RGBColor[0.571589, 0.586483, 0.]], {-0.5, 146.5},
               Center, Automatic], 
             Inset[
              Style[
              "so certain species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.7132613816472081, 0.358, 
                 0.5392132590042952]], {-94.5, -110.5}, Center, Automatic], 
             Inset[
              Style[
              "still older species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.5472001045252132, 0.43417993728487203`, 0.85]], {-95.5, 
              110.5}, Center, Automatic], 
             Inset[
              Style[
              "very fine species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.9052934053395919, 0.510195603559728, 
                 0.06776406480563275]], {-0.5, -146.5}, Center, Automatic], 
             Inset[
              Style[
              "very few species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.23716678280579248`, 0.645266573755366, 
                 0.699600139366951]], {90.5, -120.5}, Center, Automatic], 
             Inset[
              Style[
              "so many species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.37977756485605163`, 0.715, 0.3025558265468435]], {-21.5, 
              20.5}, Center, Automatic], 
             Inset[
              Style[
              "as many species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.5833680111493557, 0.4126186601628758, 
                 0.8290799721266107]], {-88.5, 122.5}, Center, Automatic], 
             Inset[
              Style[
              "not real species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.7678998606330495, 0.7317110956258943, 0.]], {-87.5, -122.5},
               Center, Automatic], 
             Inset[
              Style[
              "as good species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {85.5,
               124.5}, Center, Automatic], 
             Inset[
              Style[
              "too few species", FontSize -> Scaled[0.01893939393939394], 
               FontColor -> 
               RGBColor[
                0.8168067340273636, 0.3521386531945273, 
                 0.3761554432877274]], {-78.5, -134.5}, Center, 
              Automatic]}, {}]}, PlotRange -> {{-264., 264.}, {-155., 153.}}, 
          DefaultBaseStyle -> {"Graphics", FontFamily -> "Source Sans Pro"}, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultPlotStyle" -> Automatic}]], StandardForm],
       ImageSizeCache->{753., {202., 206.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellLabel->"Out[6]=",
 CellID->393486785,ExpressionUUID->"f561765b-b6b4-4be8-b7e3-f9396bc36ff6"]
}, Open  ]],

Cell["\<\
Note that \"Survey\" returns a lexical dispersion plot. This plot is not \
particular to the survey property, there are two other ways to produce it .\
\>", "TechNoteText",
 CellID->2063534856,ExpressionUUID->"f466a206-1b99-420f-95d8-6abb961e5391"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LexicalDispersion", "Subsection",
 CellID->1345260134,ExpressionUUID->"3eed0890-b4fd-407f-a65e-891bc8689c3b"],

Cell[TextData[{
 "One can use the ",
 Cell[BoxData["\"\<LexicalDispersion\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c5239807-47ed-4647-a02d-da19cc59455f"],
 " property, or use the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionPlot"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionPlot", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "17f3ff27-4876-438b-88d7-64d6b8e3a592"],
 " function."
}], "TechNoteText",
 CellID->29989925,ExpressionUUID->"e8501228-085a-452c-8c4c-ddc2c46dc439"],

Cell["Quickly get a lexical dispersion plot from a summary object", \
"TechNoteMathCaption",
 CellID->651208592,ExpressionUUID->"376676f7-779b-41d2-92a4-64dffe959dde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<LexicalDispersion\>\"", "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1697399034,ExpressionUUID->"4422b071-24e0-4fd5-aa1e-a354a2ad9d80"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2j9Lw0AYB+CALo5FRFc/gA4u6iBxdhLp4CaIDi7qB9BdnN0dRCiufgnF
oSC4CiL+Gf0Cgi4VRUtEk95d8hRChyfQOy6Xe98fnVzfWdkcyrJs+v3aeL+G
s97nJf/5m3POOec8Pb+aGd07WXzI93ey0+7sQ9462H0+e3ruc3984+eccx7G
nR+cc84555xzzjnnnHPOf/K5y/Hb7shdfjnVXug83uXbF6edw2P5cSwu3+ec
c84555z3RH/AOeecc845T8X1L5xzzjnnnPOyXH/BOeecc84555xzzjmP1eWX
nHPO+eDd+cs555zzQbv6g3POOeeccz4o139wzjnnnHPOOeec8ypd/sQ555xz
zjnnnPPUXb6Rtls/zjnnnHPOOeeccx6zy68455xzzjnnnJfh+kvOOee8fHe+
cs4555xzznkcrj/jnHPOOa+Xq+8455xzzjnnvB6uv+Occ84555xzznnVLn/g
nHPOOeecc845j9vlN5xzzjnn/LOrDznnnHPOv7r6iHPOOeecc845D+/6c845
55xzztNx9TvnvJ97P3DOOeecc84555xz/neXr3HOOeecc8455zx1l29wzjnn
5bvzlXPOOeecc875b1z/yDnnnHPOeX1cfc8555xzzjn/resfOOecc845H5yr
vznnnHPOv7r6iHPOOeecc84550UuP+Ccc84555xzzjmP2+U3nNsfnHPOOec9
Uf/U260v55zH6d7PnHPO+Xd3PnLOOec8NVe/cM55GPf+5by5bv9zzjnnnHPO
m+L/7X/0T5xzzjnnvE5eVN+qfznnnIdw+Q3nnPMq3PnAOeecc94sj73+i318
Tfeq18f685Q99PMb+vc5b7K35vcX1s6v87F2+3Xp6Sa/XV2eONq6/7jP/ozb
rQ/n8e6vpu/PovkXnT+hx1/1/EOPr+r5xf7/xaY/n7xafwM3BHrr
   "], {{0, 0}, {100, 46}}, {0, 1}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->Automatic,
  FrameTicks->{{{{45.5, 
       FormBox["\"as distinct species\"", TraditionalForm]}, {44.5, 
       FormBox["\"very distinct species\"", TraditionalForm]}, {43.5, 
       FormBox["\"aboriginally distinct species\"", TraditionalForm]}, {
      42.5, 
       FormBox["\"very same species\"", TraditionalForm]}, {41.5, 
       FormBox["\"now extinct species\"", TraditionalForm]}, {40.5, 
       FormBox["\"more ancient species\"", TraditionalForm]}, {39.5, 
       FormBox["\"closely related species\"", TraditionalForm]}, {38.5, 
       FormBox["\"as undoubted species\"", TraditionalForm]}, {37.5, 
       FormBox["\"as new species\"", TraditionalForm]}, {36.5, 
       FormBox["\"yet distinct species\"", TraditionalForm]}, {35.5, 
       FormBox["\"widely distinct species\"", TraditionalForm]}, {34.5, 
       FormBox["\"widely diffused species\"", TraditionalForm]}, {33.5, 
       FormBox["\"very many species\"", TraditionalForm]}, {32.5, 
       FormBox["\"very fine species\"", TraditionalForm]}, {31.5, 
       FormBox["\"very few species\"", TraditionalForm]}, {30.5, 
       FormBox["\"too few species\"", TraditionalForm]}, {29.5, 
       FormBox["\"together various species\"", TraditionalForm]}, {28.5, 
       FormBox["\"still older species\"", TraditionalForm]}, {27.5, 
       FormBox["\"still existing species\"", TraditionalForm]}, {26.5, 
       FormBox["\"so many species\"", TraditionalForm]}, {25.5, 
       FormBox["\"so certain species\"", TraditionalForm]}, {24.5, 
       FormBox["\"quite distinct species\"", TraditionalForm]}, {23.5, 
       FormBox["\"particularly distinct species\"", TraditionalForm]}, {
      22.5, 
       FormBox["\"only herbaceous species\"", TraditionalForm]}, {21.5, 
       FormBox["\"not real species\"", TraditionalForm]}, {20.5, 
       FormBox["\"nearly related species\"", TraditionalForm]}, {19.5, 
       FormBox["\"nearly extreme species\"", TraditionalForm]}, {18.5, 
       FormBox["\"most vigorous species\"", TraditionalForm]}, {17.5, 
       FormBox["\"most distinct species\"", TraditionalForm]}, {16.5, 
       FormBox["\"most ancient species\"", TraditionalForm]}, {15.5, 
       FormBox["\"more dominant species\"", TraditionalForm]}, {14.5, 
       FormBox["\"more aboriginal species\"", TraditionalForm]}, {13.5, 
       FormBox["\"generally extinct species\"", TraditionalForm]}, {12.5, 
       FormBox["\"extremely few species\"", TraditionalForm]}, {11.5, 
       FormBox["\"extremely close species\"", TraditionalForm]}, {10.5, 
       FormBox["\"extraordinarily abnormal species\"", TraditionalForm]}, {
      9.5, 
       FormBox["\"as well-defined species\"", TraditionalForm]}, {8.5, 
       FormBox["\"as representative species\"", TraditionalForm]}, {7.5, 
       FormBox["\"as many species\"", TraditionalForm]}, {6.5, 
       FormBox["\"as independent species\"", TraditionalForm]}, {5.5, 
       FormBox["\"as incipient species\"", TraditionalForm]}, {4.5, 
       FormBox["\"as good species\"", TraditionalForm]}, {3.5, 
       FormBox["\"as doubtful species\"", TraditionalForm]}, {2.5, 
       FormBox["\"already recorded species\"", TraditionalForm]}, {1.5, 
       FormBox["\"already existing species\"", TraditionalForm]}, {0.5, 
       FormBox["\"all peculiar species\"", TraditionalForm]}}, 
     None}, {{{22.393326324204672`, 
       FormBox["200000", TraditionalForm]}, {44.78670863186511, 
       FormBox["400000", TraditionalForm]}, {67.18009093952556, 
       FormBox["600000", TraditionalForm]}, {89.57347324718599, 
       FormBox["800000", TraditionalForm]}}, None}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Lexical Dispersion Plot\"", TraditionalForm]]], "Output",
 CellLabel->"Out[7]=",
 CellID->2060323229,ExpressionUUID->"2c8f4662-78d8-4fea-b7ab-c1d7f3d74067"]
}, Open  ]],

Cell[TextData[{
 "One may want to truncate the number of matches displayed, this can be done \
by setting the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MaxItems"]], "paclet:ref/MaxItems"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "df44aeb5-6dde-447d-b0d6-c5fdc21eb58c"],
 " option."
}], "TechNoteText",
 CellID->328780263,ExpressionUUID->"a6f99105-fe82-405f-bede-980d6b71f1d1"],

Cell["Display the first 5 examples", "TechNoteMathCaption",
 CellID->242970758,ExpressionUUID->"06639e9d-6947-47c9-bde9-67d4c5c3d692"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", 
  RowBox[{"\"\<LexicalDispersion\>\"", ",", 
   RowBox[{"MaxItems", "->", "5"}]}], "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->1243116759,ExpressionUUID->"ce2bf8c2-473c-458f-a503-1e75eeeeabec"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt2qEKAkEQgOEFtQqCitjsFqNBtmsRuaBJEA1i8AkEH+KC2Vcw2Qw+gAhi
s2zQ6AsIXtGkXHGZkf0PlgvfHjfD7rDDcbXRvDfJGGNyyRgnI2te191+vuM4
juM4LuGd3Ww9qDubLy9X59jZRvWwLe5vX+b//nkcx3Ecx3Ec1+Rp/S39L47j
OC7hfL/BcRzHfTjnA47jOI7jeFiuvf/THl/o7nt9WH/8n116/0q/H8dD9kJz
0RpujrYURY/29WQv/W4lnrr3POpTt7M+OK63vkKvz7T8084f6fh95y8dn+/8
tP+/GPr+xP36E2Lx2jE=
   "], {{0, 0}, {100, 5}}, {0, 1}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->Automatic,
  FrameTicks->{{{{4.5, 
       FormBox["\"as distinct species\"", TraditionalForm]}, {3.5, 
       FormBox["\"very distinct species\"", TraditionalForm]}, {2.5, 
       FormBox["\"aboriginally distinct species\"", TraditionalForm]}, {1.5, 
       FormBox["\"very same species\"", TraditionalForm]}, {0.5, 
       FormBox["\"now extinct species\"", TraditionalForm]}}, 
     None}, {{{22.393326324204672`, 
       FormBox["200000", TraditionalForm]}, {44.78670863186511, 
       FormBox["400000", TraditionalForm]}, {67.18009093952556, 
       FormBox["600000", TraditionalForm]}, {89.57347324718599, 
       FormBox["800000", TraditionalForm]}}, None}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Lexical Dispersion Plot\"", TraditionalForm]]], "Output",
 CellLabel->"Out[8]=",
 CellID->589390258,ExpressionUUID->"09dc0c52-5788-42db-bea2-06343b6f9e5b"]
}, Open  ]],

Cell[TextData[{
 "As mentioned earlier, one can also use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionPlot"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionPlot", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b9b7457d-66e8-4b2b-9cd8-3251faedebec"],
 ". This function takes a string or list of strings as its first argument \
(the source) and a list of strings or lexical patterns as its second argument \
(the queries). In the case that multiples sources are given, multiple plots \
are returned. Set the DataJoin option to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["True"]], "paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "970974e5-91f9-47b9-a814-6dbf0d2b2ad3"],
 " to return a single plot."
}], "TechNoteText",
 CellID->762522647,ExpressionUUID->"f6708022-1e7b-4eda-928f-88382c0c4105"],

Cell["\<\
Get a lexical dispersion plot of the 5 most common bigrams in the origin of \
species\
\>", "TechNoteMathCaption",
 CellID->1576750802,ExpressionUUID->"a2b99a19-e275-40cf-9da7-e365ccb08d08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bgrams", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WordCounts", "[", 
      RowBox[{"oosp", ",", "2"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", "5"}], "]"}], "]"}], "//", "Keys"}], "//", 
   RowBox[{"Map", "[", "StringRiffle", "]"}]}]}]], "Input",
 CellLabel->"In[9]:=",
 CellID->856160354,ExpressionUUID->"e47b4a12-d65a-465b-91e6-6e941f5695a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"of the\"\>", ",", "\<\"in the\"\>", ",", "\<\"the same\"\>", 
   ",", "\<\"to the\"\>", ",", "\<\"on the\"\>"}], "}"}]], "Output",
 CellLabel->"Out[9]=",
 CellID->1706613329,ExpressionUUID->"921e1ba9-a6d7-41cc-b5b6-ccc498214335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalDispersionPlot", "[", 
  RowBox[{"oosp", ",", "bgrams"}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->346072959,ExpressionUUID->"cfe0f820-3548-43ad-a541-0d1d16ed80f2"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {100, 5}}, {0, 1}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->Automatic,
  FrameTicks->{{{{4.5, 
       FormBox["\"of the\"", TraditionalForm]}, {3.5, 
       FormBox["\"in the\"", TraditionalForm]}, {2.5, 
       FormBox["\"the same\"", TraditionalForm]}, {1.5, 
       FormBox["\"to the\"", TraditionalForm]}, {0.5, 
       FormBox["\"on the\"", TraditionalForm]}}, 
     None}, {{{22.393326324204672`, 
       FormBox["200000", TraditionalForm]}, {44.78670863186511, 
       FormBox["400000", TraditionalForm]}, {67.18009093952556, 
       FormBox["600000", TraditionalForm]}, {89.57347324718599, 
       FormBox["800000", TraditionalForm]}}, None}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Lexical Dispersion Plot\"", TraditionalForm]]], "Output",
 CellLabel->"Out[10]=",
 CellID->690165259,ExpressionUUID->"35735744-b44b-46a2-a0d7-9c0710f016c1"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionPlot"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionPlot", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f38ca052-c17f-45ea-822a-a5782fc7f5f1"],
 " also supports lexical patterns as the second argument."
}], "TechNoteText",
 CellID->2128274670,ExpressionUUID->"8f52efd0-b5fc-4103-a7c0-9eead4c13852"],

Cell[TextData[{
 "Plot lexical dispersion as a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MatrixPlot"]], "paclet:ref/MatrixPlot"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "330c713b-6ae7-4579-9111-bc1be0233fa6"]
}], "TechNoteMathCaption",
 CellID->1477714146,ExpressionUUID->"b3398068-abc7-46b7-8ea4-248fc02f6787"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalDispersionPlot", "[", 
  RowBox[{"oosp", ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", 
      "~~", 
      RowBox[{"BoundToken", "[", 
       RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
      RowBox[{"BoundToken", "[", 
       RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[21]:=",
 CellID->1648982275,ExpressionUUID->"ffc0ee92-466c-4ed7-b3e6-5e7bff6aa024"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzNWGlIVGEUHc0Md2a0VDTNNpS0MJU0szsoKI25iymKieNStiih5FoqBCNJ
4mBOMooUWJZQpqlopRIUllrhEu7pjM7uEmWlVuaffD8q7sDnwxl4zI8z93vn
nnvuvW+eXXxqaOIWBoOhvXYlrF06jD+fBfj3N4Nhkb1aweQrQJgjqEpOlkNz
FvfzI2/5f37/d3wHM3bI0m4O2oPkl3NdVfB4uS3u1lX14zcb93zC/WJTqYKR
tGDDEG0lzPuJ58sTKf4uSxcdHfhyYDXauC1XyeCCyMW4zJnCNzt/Ta8f6flY
fGDmRDubL4MiRU1P8YAU9vjrOGTu2jgc8wfGj+78Sc/H8qM7njR/0vOx/tH0
/tB0HNOXVH+65zfdOKYflh+m33DtD4OScCUYKrlheQwFmIe9q6sPUl+fAnY0
RyCeA+eOJid+rwqYA/stK4rVjyf1B6k+mt5fGL9forikythZCJi0fpEkVEKw
XVCt4JL6/ie9/2brp+n7mW59SXG6/bHCPOg7aqYCE9GI/7BAAboixcT1mI2r
DxZfmPLA4zhrGOSQwm9rHgOjslr37FDZOu77XP6Vw5uBTsf0Rbe0Gbg9E+6X
oaJwUn9h+LlvASGRfClo7XZKsDWQwkjjgE+MCYU3t95j3+dNQbV+aVg+RwQ5
vPKGrbUUvytPu6yyeWKoFxbujR4Xg3HLYq7XGwqPjN+ml546CDYfTrz1sRqG
hYUe65NsyTouPOr+sJQnAvt+vWezpmJ4aftKYNdKxWPzG+NPut8x/9HtH0z/
CJaptKl4HKz1+3tKbCaBl999qDdTpnZ+eirJmS6OBFwq2XX+ehLQ6uhczVii
4pkeeV6nG/tge3j4T450ECYigy3KzorV9i9WH7qf7zH9uMeiiuJ50+CRsFLc
dXcaTgXui48aVZ8/1t9Yf2D3p3u/YPqSznfS/tzs/2+k85NzvtvMhDUK399H
c2+emICIA0M7y7lUfcdSjbrrmR/hRlZ1YU3LJMijjsh6r1F4n7t5fydvEnZ4
WyhZBVNw+FNSr7xcfX9iOOn+weYzVl+sP7D8sXiMP5Y/tp8wflj+GD+sfph/
Mf4YTvf7LdL9gelLej62P7D5j/U36fsBjD+mP93P76TzAeOP+RerH93+lL3O
d2nQlULEHUMH1yoJGLV62uvqUvhvde6l5A==
   "], {{0, 0}, {100, 2}}, {0, 1}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  Frame->True,
  FrameLabel->{None, None},
  FrameStyle->Automatic,
  FrameTicks->{{{{1.5, 
       FormBox[
        RowBox[{
          RowBox[{"TextType", "(", "\"Adjective\"", ")"}], "~~", 
          RowBox[{"BoundToken", "(", 
            RowBox[{"\"specie\"", "|", "\"species\""}], ")"}]}], 
        TraditionalForm]}, {0.5, 
       FormBox[
        RowBox[{
          RowBox[{"TextType", "(", "\"Noun\"", ")"}], "~~", 
          RowBox[{"BoundToken", "(", 
            RowBox[{"\"specie\"", "|", "\"species\""}], ")"}]}], 
        TraditionalForm]}}, None}, {{{22.393326324204672`, 
       FormBox["200000", TraditionalForm]}, {44.78670863186511, 
       FormBox["400000", TraditionalForm]}, {67.18009093952556, 
       FormBox["600000", TraditionalForm]}, {89.57347324718599, 
       FormBox["800000", TraditionalForm]}}, None}},
  GridLines->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Full,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Lexical Dispersion Plot\"", TraditionalForm]]], "Output",
 CellLabel->"Out[21]=",
 CellID->832155429,ExpressionUUID->"79509a60-49d1-4810-8d50-c04e981fdefd"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionSmoothHistogram"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionSmoothHistogram", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "50bf7187-1d7c-40de-9e4d-6595aafa9b05"],
 " for the histogram variant of the same plot"
}], "TechNoteText",
 CellID->851163527,ExpressionUUID->"714c7ab0-de5d-472f-bf32-4f29c773cde8"],

Cell[TextData[{
 "Plot lexical dispersion as a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SmoothHistogram"]], "paclet:ref/SmoothHistogram"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4935d12e-75a7-47bc-b089-9335e2b9d20c"]
}], "TechNoteMathCaption",
 CellID->1920953233,ExpressionUUID->"66de2baf-e252-4155-a163-b39d48253d54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalDispersionSmoothHistogram", "[", 
  RowBox[{"oosp", ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", 
      "~~", 
      RowBox[{"BoundToken", "[", 
       RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
      RowBox[{"BoundToken", "[", 
       RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1335982774,ExpressionUUID->"b32ac932-5079-47ac-be53-4bc778806bb7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQm4FNW1thsUFHEgGiUqBAcimqByRVCC0aghSDBofhJnLqACYpAIQgAH
0IuAJhq5gJgICnIVE4wYJgEVSYIMB5RJ7znxiAwKIYbgETF6ELD/lV6XnW1N
XT13db/vs57znK6urtq7qnb1+nqtverkG3/2/3rXjcVidxwqf/5fzyEXDxzY
c1jXRvLiJ/3v6Nunf6+bO/Uf1KtPr4Hn33iQLPx+nVhs4MGx2L/+jwMAAAAA
AAAAAAAAAABAqfB2AvtlARsTkrJtpONkZXfLudgsAAAAAEBpM3v27N69ez+c
QP6ZnUD+L3S7gtAWamtT/Yii/c1pI+PWsc3WBs1pCtimKKOAnmqT7HfNMcx6
awEAAAAAygF1pG1tYrzuArYqDKmqKvtTeeud+/BmTlJVZa/m11MjqeyFuWgt
AAAAAEDJ4+mfq3ddkPYE4EhOS08ChJQkxYwchzBdCFbH2ToOSDAAAAAAKHMC
/PNi0x3upMT0VFUJJLkVj6rSlmSyBQAAAACAqKNesac2yV09hDTwlEKoquDV
cq2qzMWT9hYAAAAAAEoDU7UgWJ5oAQSVWmbCjl3lwMxycmsx/Yhx4z13FLCO
XV3BLrxgVJVnk/xISVXZW3a0yjRYD4tZ4jgCZjX3ls1Bcx8TfUvLhrg7lTtV
5dlauzF27xwnxbPXAWfcFEXpfaBAii3k7ZY4Tpl5y+/gmD26S5qkdKkAAAAA
AITEoVk8g1ZmHXVT7SW2lPAULJ4F6Bx7SbqOp46wSxfaIiXYWw6vqkxnTSN7
e5X1sFWep0jxbLm9HXMk7c2ad3ULDs2SC1Xl2VpHYzxb7t5y0jPu2UdzKu2W
2JUb3VvTQ2EfOrdMM6fJ8+oNPoYAAAAAACFxlNr2VCVuTWESwGzX1CEB/DSU
I86VdJ0AVZVUfHl2Noyq8uuvXzs9vXR3k9yVQByddexF189EVc32wujo4NZ6
hq7sQ+ToS5izGXfVSHGfFHduqh4Bx9FwN9jzNLkvbLdWBQAAAADIHEfQKmnB
PU/f3uGsesYyHH5vmHVCqiq/rbk/FVKSvG3hGeAw7fTLc3O33FO32tuc/eUc
wvTEYzyZqvLLAHSrKvfe7b546hfPgxBwNj175Lcp9xlPuinthbtJJAECAAAA
QNZxPD3WfstPwgSoqgDn38iTMOv4bSqnqspOJHOQ0gYdLfdssx+O3Eu/bfph
PhvQwaSqKlg2Orbv1zBHWNNPQyW9uhzbtKduBbcBVQUAAAAAecYzPaw8VVXw
Oo6dholVhVRVbx+oDeL5kXyqqviXg5jBRzvk2XS/9NQ4fpuy61G4V0NVAQAA
AECe8fMq/aoWpKGqPL16h6oKXideOFUVZt7NbKucQtJ5VWH27pg6VHBV5dia
I5vRraqSnk17zdkHSjh6BsL8wl4BU7RQVQAAAACQZ9zzp8zyLKoq9y6M7x1m
nXh+VdVsq1S7X/jJXvlhr+rf9sr28oD++kWmCquqPCeR+c2bC3k2TfM0xdFP
unr20b0dVBUAAAAAFBZ3hTezPKlvH0+mquKBrrvZVJh18qaqZh8o0OeuQWdW
cJRrcHTWsb5f/Qd3X2YfeMRSUj2bT1XluUJANZIwZ9PubwBhVFXIwheoKgAA
AADIHZ7CxFN3hPTt3Ylz7uDFbNdznZKuYwdBlIAmBasqT7c/bpWGcMi93lbN
ioddjyf23Lu7gp9nX8yW7c06UuPsvDtHxzNUVWaz7o84VJVbXDsOptGD9pbD
nM3ZX8azhZ4LZ3/5WVS9XQmTYS6wMMcQAAAAACApZkpL7y8/cdUz1mDWMR90
RHPMEk9X3GTWBUzbCVjH+M+mAbY28WuSu7O9k+FuuedbfuG8pEcpeLOO7dhT
z/w6Hqanjr3b7xpFE3BOdR27hoZnU9M4m54H326hQ3DZH9Tl5orVY+Xogr0k
6XkBAAAAAMgQOwxUqO0Hr5PT5gWQo/0Gb7YgPQ0g+LwEfMTzXRNsMqh66h2u
7qJjm8V2rAAAAAAAAHJKwKQqUvIAAAAAAACCcdS7cEA+HgAAAAAAQDCOchxm
obuGCQAAAAAAAHjiLlXh99w0AAAAAAAACKBQ5UcAAAAAAAAAAAAAAAAAAAAA
AAAKxV/+8pePP/640K0AAAAAAACIKqgqAAAAAACATEBVAQAAAAAAZAKqCgAA
AAAAIBNQVZAeldU1M1/cPHrcOjH5R0yWFLpRAAAAAAAFAFUFqSLqSZRUt9v+
5GkirwrdQAAAAACAvIKqgpQI0FMIKwAAAAAoT1BVEJLK6hqHeho2epXYxKlV
YvIP2goAAAAAyhNUFYTBIalEQ81auGX1m/+wTeUVwgoAAAAAyg1UFSTFIalE
Ojn0lENbIawAAAAAoKxAVUEwKUkqtVkLt9gfoTYgAAAAAJQ2qCoIxi5PEUZS
IawAAAAAoNxAVUEAM1/cnIakcgsrkWaF7goAAAAAQK5AVYEfmUgq9xwrhBUA
AAAAlCqoKvDDrviXhqRyCysqVwAAAABASYKqAk/sQJW7iHpKZj/KiglWAAAA
AFB6oKrATea5f0ywAgAAAIDyAVUFbuy6fxlKKnceIOEqAAAAACgxUFXgILuB
Ks88wEJ3EQAAAAAgm6CqwEEuJBV5gAAAAABQwqCqwMYOVGVRUpEHCAAAAAAl
DKoKbHIUqHLnARKuAgAAAICSAVUFhpwGqtx5gISrAAAAAKA0QFWBIdeBKsJV
AAAAAFCSoKpAyUOginAVAAAAAJQkqCpQ8hOocoSrqLIOAAAAACUAqgrieQxU
ucNVsutC9x4AAAAAICNQVRDPb6CKcBUAAAAAlBioKshzoIpwFQAAAACUGKgq
GD1uXZ4DVYSrAAAAAKCUQFWVOXagKs+qinAVAAAAAJQGqKoyx6iqYaNX5VNS
Ea4CAAAAgJIBVVXmFCpQRbgKAAAAAEoGVFU5U5A6FYSrAAAAAKDEQFWVM4UN
VBGuAgAAAIDSAFVVthRDoIpwFQAAAACUAKiqssWoqgIGqtzhqsrqmkIfGAAA
AACA1EBVlS3FkP7nDleNHreu0AcGAAAAACA1UFXlSfGk/xGuAgAAAICoU8Kq
SpxzMZEPYjjqDooqUEW4CgAAAAAiTUmqKtFQ4pkb4WCXmKPKXLz4AlWEqwAA
AAAg0pSYqvLTUw5tVeZOe/HUqSBcBQAAAAAlQCmpKjsEoyZeupqntip0ewtG
Gul/b82bW/3re8Q2D+vw1xuOVJP/dSHhKgAAAAAoZ0pGVTkklSgpcdFtj10U
hBjCKtX0P9FTtpLyM9FWsibhKgAAAAAoQ0pDVTkklUNPObRVmQur8IGqkHrK
oa0yDF0RrgIAAACAyFECqsqWVMNGr0rJby83YRU+UCXiyKGYNg1oJ7Zu8iNq
VaNvFpMlntqKcBUAAAAAlA9RV1WpSipPYVU+MRFzuIKPlSNEpWKqYtZLfiby
KovainAVAAAAAESLSKsqcbnDSypTb0Ft0fCBZSiswqT/OSRVsJ4K1layqfQm
W5l2Eq4CAAAAgOIn0qoqzFyqgMlBr/VoX1bee5j0P/tYbRrQLqSeCtZWaQSt
7OlvhT5sAAAAAABJiK6qsjWCZ+TFPTPIbdN63VI+E6zMk7z8AlX2ERNxlIak
8tNWItbSDleV/HkBAAAAgKgTUVUVLKn84lNab8FRY2FE3wllkgcYXoRmKKmy
ErQiXAUAAAAAUSGiqsrO/Uuqp/yKLRi33wirEs4DDE7/syVVeol/IbVVeGFl
16wgXAUAAAAAxUwUVZVfoMqzGHjSYgvi9tsTrErVgQ8OVNkHLYuSKsOglSmx
TrgKAAAAAIqZKKoqT4GQajFwh9tvT7BaO2tOobuYZcIHqsIftJRMNut4slUY
YUWJdQAAAACIBJFTVW6B4M76S2NakLj9ZrMj+k7YU7mk0B3NJgGPqcr6dKrs
Bq14IjAAAAAAFD/RUlXu3D9H1l9KISqHzZz6itn4ygeHFLqv2SQg/S9vkio9
YUW4CgAAAACKn+iqqqyEqBw2dPhiE67aOapzobubHQLS/2xNmgdJlZ62IlwF
AAAAAEVOhFSVrQ6m9brF4ZZnZUKQHa6SXZRGHqA5bo5AVT5z/8IIKz9tRbgK
AAAAAIqcCKkqP0mV3UrgJlwlJhsvdKezgF/6X6ECVWloK8JVAAAAAFDMREVV
+QWqsl6zzhGuinoeoF/6X2EDVSG1lZFXhKsAAAAAoJiJhKraU7nELamyG6Ky
bfwji+xwVaTzAEePW+cZqCoeSWWElae2Ets8rIPIK8JVAAAAAFC0FLmqEkWz
c1Rn+2FS8n8mhf5Cml1lPbrhqsrqGtORWQu3FGegyjY5rX7ayn5S89pZcz5+
frRYpAUvAAAAAJQMRaiqxFVWMWU8aqOqHr9zXK71lJodrhJ/PqLeu1/6X3FK
Kts8Q1eicI3UdbwlV4vqrEIfcgAAAAAoR4pHVamSssWUQ1KJidjJm2NfAuEq
zzoVxVCkIlV5tWlAO0e4Sv73DGmJIa8AAAAAIM8UVlW5w1JuM6pq6PDF+fTn
HeGqyDnq0Q1U+dm6yY/YDxQLuGaMvCr0SQAAAACAsqBQqipYTP196PliH896
6LPVLxYkUKVmh6siV2XdqKpho1dFNFDlNrtC49p5C+TykIuk5tEbxeSCQVsB
AAAAQEHIv6oK0FOqpFRMqc148t9edP59+EiHqzzT/6IbqDJmwlUjR71qrhNj
qrDQVgAAAACQT/KsqsS59RNTbg+5sIEqNUdF97wdqAzxTP8r2tJ/KZk7XOVp
bm2FsAIAAACAHJFPVeUIUQWIqWIIVKlF9NlVRlV51qmIrqRSCw5XBWurqJxB
AAAAAIgQeVNVDkkl7m6wP1wMgSo1O1wVlWKA7vS/t+bNLYFAlZodrhLpHXwV
iXJ3TLkiaAUAAAAA2SU/qsqWVElDVMUTqFIzkZGohKuSpv8VXBZl96QkvZbc
QSuEFQAAAABkkTyoKnsuVZgQlUNVFTZQVfHlyEgkwlWlWqfC76QkDVchrAAA
AAAgp+RaVaUnqYon/U/N8ZikYg5XVVbXmEM3a+GWkgxUqdlT3gLKViCsAAAA
ACDX5FRVpS2piif9T82OjLzWo30xh6s8H1NVYoEqY+akJC1bYU+zongFAAAA
AGSXnKoqey5VeElVbIEqtaiEq9zpfyUZqFJLI1yFsAIAAACArJM7VWUHqsKU
pyjaQJVaJMJVwXUqSixQpRa+yrpfKmBxnkoAAAAAiBA5UlVp5/6JiXtcbIEq
hwOv4aqsH7TM8XxMVamm/6mlUbYCYQUAAAAA2SVHqirt3L+18xYUYfqf24F/
rUf7IswcK6v0P2N2lfXweYAOYUXlCgAAAABIm1yoqrRz/4o2/c/twI/oO6HY
Ahye6X+lHahSs9VuSnmAYvYDgotQJgMAAABAJMiFqko79++zoqxT4efAF1u4
qjwDVWrpla1QsytXFPocAgAAAEAkybqqsgNVqUqqIg9UqRVnuKoM61T4nRex
lK46uyRg8ZxQAAAAAIgQWVdVmQSqjKoqzkCVmiNclcVDlwllWKci4LykmgfI
BCsAAAAAyITsqqpMAlXFn/5nzLRzRN8JRZIEWM7pf8YyyQNkghUAAAAApE12
VVVWAlXFnP7n9t6LIWesbOtUuI08QAAAAADIP1lUVWUSqFIzrZ3W65aChzaC
A1XrJj9S8MOVNyMPEAAAAADyTxZVVZkEqtSKJ1wVXKdi04B2BT9W+T81JmKV
0nOByQMEAAAAgPTIlqrKMFBlVJX4wwV3y8OYHROZ1uuWzA9g2lCnwm1pPxeY
PEAAAAAASIOsq6o0AlWRS/9zu+4FjGtQp8Jt5AECAAAAQD7Jlqoqq/Q/t+u+
8sEhmR/DNOAxVX5mp2iSBwgAAAAAOSUrqipb6X8RClSp2U8ELoj77Q5Ukf5n
LG1hRR4gAAAAAKREVlRVJoGqiKb/qRU2XBUcqCrb9D/b0p5gZecBEq4CAAAA
gGAyV1XZClRFK/3P7bePHrcuWyclJASqkpote1MVViYPkHAVAAAAAASTRVUl
XmgaqmrkqFcjGqhy++2V1TXZOi9JSRqoKqvHVIU8QSlVrrDzAClbAQAAAAAB
ZK6qMkn/WztvgfF4xfstuAeenhUkXCX7cgeqyvkxVQFmT7BKSVhRtgIAAAAA
wpChqirz9D81Oxoy88XNWTw7ftiBKtL/wljalSsoWwEAAAAAScmWqiq3OhUO
G9F3gulLFs+OH55P/qVORbClJ6woWwEAAAAASclQVWX+mCpNnyu4y52hvTK4
d97CVX6BKh5TldTskoDhhRVlKwAAAAAgmExUVbbS/8TXLbi/naGtm/xI3sJV
nnUqSP8LaWkIK8pWAAAAAEAwWVFVZZ7+p2aHq3JXtiJpoIr0v6SWhrCyy1bk
6MwCAAAAQHTJRFVlnv4X9ToVtq2b/Mi0Xrfkuso6garMzfEQqzDCyg5XkQcI
AAAAAA7SVlXZSv8rjUBVRUJVyaHIabjKL1D11ry5PKYqJUtDWFG2ArLL1q1b
q8KxZ8+eXDSgtrY2ZAO2bduWiwZki0mTJn3++ecpfWT9+vUjRox44403zJKP
Pvpo6NChv/71r7Pdui+xefPm/v37z5o1K6d7AYNcuu7r+d133929e3ehm+aL
fXHm4i6xcePG8ePHz507N5edKGpKexiWdu+Kn8xVFel/xjYNaPdaj/a5C1d5
SioeU5WepSGsKFsBWaRLly6xcKxZsyYXDVi9enXIBlxxxRW5aEBWWLVqlbTw
mWeeCbn+xIkTTzzxRO3X/PnzzfLHHntMF27YsCE3Lf0X/fr1k10cfvjhe/fu
zd1ewPDwww9fcMEFnld1w4YNL7/88meffbbQbfw37oszu3eJadOmnX766br+
fffdl/sOFSmlPQxLu3fFT9qqivQ/t2m4KkdlK/wCVaT/pW2pCis7D5BwFWRI
hw4d6tSpM3DgwCVLllRXV69cuVK9nW7dum3evFl8JPH3vvWtb8mS5cuXZ3G/
H3zwgf6zdOlS2bjsYvr06bI72em1116rbRDB9fbbb0vDBg0aJC87duyYxQak
xCeffCIHZOrUqX4r/Od//qe0sE2bNiE3KJ6GCjHhlVdeMcuXLVt2xBFHnHba
abW1tZk22sIcbUXc2nr16nXq1CmLuxBmzZrVtWvXjz76KLubLRm6d++uZ3zs
2LFyRW3fvn3BggUXXnihLrz11lu/+OKLQrfxX7gvzuzeJWT77733nlzneVZV
SUdxnsnRMCwSsts77i2pkp6qEpeS9D9PkwNih6uyWGU9aaCKOhVpWKrCinAV
ZIsLLrjgpptuMi//9re/qb/Ur18/s1D8qLp16y5evDhbO62qqhIfTP8Xt02+
fDdu3GjeveWWW7QN//jHP8xCcYcuuuiibDUgJXbt2tWyZcsbb7zRz+n9+9//
fsghh2ibX3vttfBbPuigg+QjjgP76aef7t+/P5MGO7CPtkE8zCzuwjBgwIDm
zZvLAcnFxqPOww8/rBeJnfb2+eefd+zYUZeLpi5g8xzYF2cu7hIavMubqko6
igtCjoZhkZDd3nFvSYn0VJVJ/xMnk/Q/2zYNaCeHJetlK/yKVPCYqswtJWFF
lXXIFueee67tCHn6S0L79u0XLFiQlT3KV604+c2aNdOX4mE65JKnqnr55ZfP
P//8rDQgJcQH69Kli3iAAc7Y/fffX79+fXEppc0//vGPw2/84IMPlo/86U85
fAqG42jngc6dO1988cWk/biZMGGCW1UJTz31lC4X2VWotrmxL85c3CVk1OdN
VYUZxRFFjuHzzz9f6FbkCe4t4UlPVe0c1Zn0P0/TJEA7DzDzshUBuX+k/2XF
UhJWVFmHrPDOO+/YX1J+/tKWLVv++c9/mpfykXXr1q1evfqzzz4zCz///PPd
FrW1tfYSreQg93n5WpTtn3DCCX9PsGvXrvfee8/el6eqkj1KU/fv32/v4tNP
PzXv6hL719HNmzdv2rRJ/pFGzp8/f+nSpZ5pdZ59MYjXV6dOnVWrVvkdQPl4
kyZNBg0aJHpK2nzQQQfJfv1WFt5//31xqtesWSN9Ucf1z3/+s2OdN9980+05
yKlZtmyZfNxzs7K1ysrKhQsX7ty50yx0H+19+/bpW+JerlixQp3MPXv2/K+F
af+OHTt0iWzZdkeDj1hVVZX06/bbbw84COWJn6qaM2eOLh85cqT7UzLuKioq
5IJxXL1yJWxM8Ne//tWxRLDDnXLSzTUm51QuEr9MKr+LM727RDwxBkWXmRba
OFSVPa4dMY6A6y1k1/xGsXRz5cqVzz33nPyVw2vfcOR+JXcM/b+6uvqFF15w
3Kbso5HqwDTYwzD8Nm0CVFUUeydvzUuwdevWDz/80NyvFO4t4UlPVf375/pZ
D6WqqkaOerVUA1VqGq6y8wAzFFZmO8NGr/ILVJH+l6GFF1aEqyAX+PlLBvk6
vu222xo0aFCvXj1ZTf554IEH1IWbPn36N77xDf344YcfPn78ePm6P/roo+Xl
SSed9Pvf/17WMclOBrem8FRVivh7TZs21XcPOeSQvn376nL5Fj755JNjiflZ
27dvHzt2bLt27cSPGjVqVM+ePQ877DD9iMgfcTDC9EWRb/a6det+97vfDThi
4rTIjt59993FixfrXu644w7PNcWLaNu27ZFHHikH4atf/WqLFi10/SVL/m92
5IYNG8aMGdOyZUtZaHsp0mZZWfSahsOka+LJ2FueMmVKo0aNzjnnnPbt28tq
F1xwgYYYPI/2+vXr77777lNPPVVeqtTdtm2burh64kzEZMGCBV//+tdl4Xe+
8x0VsEmPmHLFFVfIuyLHAo5bGeKnqm688UZd/tJLL9nLxdHt0KGDnPRmzZrV
r19f/MmrrrrKZEANHDhQriX5lAw6XdKrV6/jjjtONyUXpCyRa/Kmm26Si02W
yOV32WWX6SUkp2/GjBn2vpJenDZJ7xLxRN0VGftHHHHE1772NVnzxBNP/N3v
fmevYKsqEURXX321blM+deWVV+pFFXC9he+a3yj+4IMP2rRpIw2T43bWWWfJ
4ZV7RTyRkyxLjjnmGBlTohdMYQ3hpz/9qV3nM+2BGU+UWHQMw5DbdOCnqqLY
uyeffLJhw4adOnW67rrrDj30UGmz6HRHv7i3hCQNVZVhTfUSTv9TM+EqOw8w
7QlWdqBq1sItBKpyZw5htXbeAr9rmCrrkHWC/aUvvvji0ksvPe2008Rnk//F
e9EftH/5y1/qCp988ol+TYt+qa2tFVdcfKrOnTubH5lloSgdWaF58+afJnD/
khmgquIJV1O+eeXdH/3oR/Zycc/EH9u1a9eqVat69+5tXAX50r/33nu7desm
2kdeihvw4YcfhumL8OCDD8oSceQCjtiFF15oZmTrhP2jjjrKXTF706ZNcijE
PdZI0J49e4wvbaZiiUg877zzdKFRVeJpi36UNohzIi3X4gbiLNXU/F9S9+DB
g6XlImn15U9+8hM9vHv37nUfbWHAgAHiZelejMMja55xxhmyRP7azR4yZIic
Si2XHeaIKVrJcNiwYQHHrQwxqkrcYBkpImZffPHFG264QRfKZW+vLH6jXKty
Sa9b96+fQ8VBUhly7LHHikzQdXSkGFUliHKxVdVvf/vbVq1a6ZLjjz++a9eu
999/v/7+IHrHhHrDXJw2SVWVDsD+/ftr6OqFF15QL/rOO+806zhiVSNGjJBx
LX61uSEEX28huxb3H8XXX3+9tEojJnL9i+wSZ17+HzNmjI4F4Stf+Ur37t3l
BqICQZB26sczGZhyP/Qchkm36cZPVUWud3LPlKtdrhxdecGCBfJudXW1o1/c
W0KSiaoi/c/PjMtt1wNMY4JVcO4fgaqsW3hhxUOBI8QXtf/cV7M9DyY7SruR
wf6STgCxa9bJl3Us8Ruy+epcuXKlznMfOXLkoEGD5EtTVYzhoYceknfFWfJr
Q7CqEuQrNZaIVUlrzUJRT+LFmZeNGzeWddq3b28iKU888YRu9u677w7ZF51Q
v2LFCr+miscrK8yZM0dfmrro48aNc6x5zTXXyHJxBc0S8WDdjuuf/vQnW1VJ
S+RASTPMCn/84x91Bc0Wq6ioELUoPrB7BU3p8Tzas2bNcjg88US8Txfa/RUH
THSZ/h/miClVVVWyvGXLln7HrTwxqsqNyCt7TREReu1NnDjRLNyxY4dGfrt0
6aJL5DKLfVlVvfXWW7pBVVXxRGxCl0yaNEmXmPp+pgp6yIvTEHyXePnll+Ut
0Wh2wt7w4cNjifxYk4ZnVNW+ffv69Okjymj16tX2dpJeb2G6FvcfxdJCaY/J
Tpw/f76ZFGkGspkm9tFHH5155pmxRDBXVEDmAzPuGoZJt+lJzEdVRa53U6ZM
kf9N+oFw3nnnyfXs6Bf3lpCkoaoyqale8oEqNU0CdOQBpiqsgiUVdSpyZHJl
hhFWhKsixD8XPWlOVk5NdpR2I4P9pW9+85vy1rXXXnvDAU466SRd3/76+/nP
f64L5Zt34cKFjo2on9+iRQu/NiRVVdJIrbmn+kiorKx0uFLa1DFjxtgfbN26
tSy89NJLQ/ZFsw3dWSiGXr16yaeMcNu9e7cmZTVv3tzOixNPQA6FQ32I56w/
4JsJDvHEjCptg6qqGTNmyP+nnHKKaaT+Jhw7UBbjBz/4QcyVRSkelHgs+r/n
0V60aJHt8CjSYP3JWjOF4omi9wcffPD27dvtQ5r07McTTposlEPhd9zMEViy
ZMnAgQPlNNlFIBX73IVfMz3y0xKjqn71q18tXrxYTo0cTE2arVevXvfu3Y0P
vHz5cl3T8diyW2+9VZdrDCKMqjJCwyzZu3dv/fr1ZckLL7wQT+XiNATfJTTv
VC4Pe6FcRfpji6klqKpK7hWXX3756aef7p6NmPR6S9o1xW8U69gRV1+fdCyf
NQpOx53cZOz1Z8+erbuTCyDzgRl3DcOk2/Qk5qOqItc7Ldcvl+LQoUM1OC6j
YNeuXY5+hby3QKqqKpOa6uKg/jsjbuorBfefc2cmCVBsweQZaQgrW1K56/6R
/pdTcwirpGUrCFcVOVFXVfJNJ36RuH+TvLCfiPTZZ5/pvAzx99wJfurnix/l
14akqip+IMXomGOO0RSjO++88+yzz7ZX8FRVt99+uyw8+eSTw/TFTNi3s4ls
Pvzww8MOO6xNmza/shA3Rhs/a9Yss+bTTz8d8wrP6fbtetoOVXXPPffI/127
dnU3Uh/PqpNWAnSf59H2VFVmZemUTvnv0aOH7FrfCn/2FZ0I46hd4OCSSy4R
171JkyaxRABCTpYpiTBnzpxWrVqlsWZ65KclfvOqhgwZosvbtm2rW3v88cfl
pezIUbTkpZde0jU1ypCeqhL0WVHqjYe/OA3BquqEE06Qt+TSdSz/9re/LctN
JU8zlS9mSS1DmOstadfigaN45syZ+nE5ziJp7ZLdnrpD/Xnhqaeeynxgxl3D
MOk2PfFTVVHsnUkaFPkc8FzsMPcWSFVVZVJTvUzS/9RMuGrzsA4Tp1bZXnrS
OVYOSeWeTkX6X67NFlYjR72atGwF4apiJuqqqrq6Wt9yTxpyM2DAAF3ZTmFS
1HV3zN+xCaOq9OE4ss6jjz4qwq1Zs2Zjx461V/BUVQ888EAsEbgJ0xfxx3QX
+sOpm1/+8pf169dv9WWMY3DxxRebNdWjaN68uWMLSVXVddddF/Mvf7Fr1y5d
ee3atX698DzafqpKdipKQZaPHz9eNi7yytRPSOnsCxpMDFh5+vTp4mare7xi
xQqdjifS+De/+Y0crmOPPfaRRx5Jdc30yFtL/FSVoKl9gkYWRo4cqS8dVe82
bNigyydPnhzPkqoKf3EaAu4SMhj1g0OHDnW8pTPIRJDqS1VVRx11lG7qmWee
sVcOc72FVFUBo1hWa9SokW6kadOmppSNp+4QDj30UFkuDn/mAzPuGobB2/Qj
5l8DMHK9k/vPlVdeGTuASDDHDUpJem+BeOqqKpOa6mWS/qdmh6vemjc3vLAK
I6kIVOXBwggrwlWRIOrzqmpqavQt+bp0du2LL+xoxZo1a+rVq6fpZIcffrgj
t0f9fFE9fm0Io6oE+c5Vb3Dx4sWyux07dtjveqqqwYMHy8IrrrgiZF+0wphJ
gbPZt2/fSSed1K1bN/dbbdq0cXgdI0aMUDfG4dqp/7l8+XKzxKGqfvazn8US
Jfjce5GDI1vTfCf3NC7phRYl9jzafqoqfqAe3ZlnnvnYY4+dcsopJtQY/uzH
Ew8yljWlbe5mG4YPH27/1l1bW3vXXXfJ1RJLzL7p27evKaocfs30yFtLAlSV
nGJ9Sz1k8wSrqqoqezXxlOyzkBVVFf7iNATHqrRkxNVXX+1YrrO3zMWsqure
e+9VR7phw4Z2HmmY6y2MqooHjuJ4YgaZlpXTNqgj6qk7PvnkE11N7m+ZD8y4
axgGb9Pv0ooFPq8qir2bNGnSscceq591F1EPc2+BeOqqyjjzqdZUt9P/Cu4w
58fscJXoIIewUm1lEgLlH4eeCpBUBKryY7aw8qy1TrgKskWwv6R1mx0P7Y0n
fu42OTziarZs2VJ8KtmU+jMdOnSwV858XpVSUVGhqx1//PGOeoBxH1V12WWX
xRKzWkL2RYtleVbxVc/E8wG+mlIl9OjRQ5f89re/1SXylr1mUlU1ceJEfWk/
gzWeqIPdtGlTcZm06mCTJk0cj/gZOHDg448/Hk9lXpXy+uuv61ua3ma/FeaI
KVu3bo0lHpLlPjjBiHO1adMmz8eKpb1meuSiJQGqSivYC9u2bZOXq1ev1pcP
PvigvdrUqVNjibknmtClqspEf+JpqarwF6ch+C7RpUuXWKK+nOOY6Kwo8xFT
rUIElOj3WCIL0S52l/R6C6mq/EbxeeedZxIspe+qFKZMmRL30R0rVqyIJWow
Sr8yH5hx1zBMus24FzEfVRW53knbjEyTu59WCJRrwNGvtO8t5UZKqiqTmuom
/W/o8MUF95bzY1WjbzaHS9WQW1j52bDRq/wklZjINAJV+TG5XIOFFeEqyArv
vPOOfvfZ9Z0MZgKICB91mXbv3i0iRb6g5R6u6wwaNOjoo4/WH5ONvph0oEhX
/MCckSOPPFLjIG7pdP311+un/B5MaTBTM2bPnu14S1WVNMYsefvtt8UdFQmm
MyzC9EXnU7snNUjLzz33XHEFPVu1Z88ecSljiR9UtQi2+IrHHHNMLBFZM7+Z
v/HGG9oAe2a9Q1Xt2LFDQyEnnniiqRuwfv36Vq1ade/eXf4fPXq0ri9OlIZR
Kisr+/fvf9ZZZ9kzdBxHW6sWx3zmJpx//vmxRP0Eu8RiyCOmaLGF73//+57H
p2z5xS9+oQfQFI1UnnnmGV1uVzbr0KGDCg07hNSnT5+YNQtp2rRp+kFT5uKu
u+7SJeY5U8uWLXNLD831eu655+KpXJyG4LuE7FqfYqA+vCJbVk/e1N/Q8JxW
VpfdaVrX9773PaP0k15vSbum+I1i8czt0ot623nsscfiB3SH6Er7mcK6giZ5
Zj4w465hmHSbnsR8VFXkeid3qrZt25r2aLJr48aNHf3i3hKS9FQV6X8hzU4C
NJooqbbyrPjnGahCVeXBbGHlLglIuAqywuTJk42D5/75Xb4ZRZXoCkcddVSb
Nm3UFzLu0x/+8Ie6devaGuqcc86JJQogmIrKr776qm6hd+/effv2FZ/H3oV8
BZuCD44fz92I26DfvI5J/fEDqkp0jayzf//+6urqFi1ayEtpYci+xA+oQlua
xROxCXWP/+M//sOvYe3atdMt33DDDZrcouomlqiCNXz48MGDB4t3Yfauj5KJ
u1SVoA+ciiUiFGeccYamV5155pn6jSku6Nlnnx07gGbONGzYsKKiIuBoP/ro
o7pQn4Xk4H/+53/kLcd5CXnElPvvvz+WmPLmd3zKELkIf/jDH+rRu/baa9eu
XSt+vmgK8Q919r1csXa+n3iVqs1NxFO0w3HHHdekSRNTeUDW18J6cm3369dP
Lg9zMcj41afujh8/XpfMnDlTP7Vx40ZdYp4eFfLiNATfJYTbbrstlnhulFzP
ukQGkSwRb1xfynWr1TLNs95MLKNLly4asEt6vYXpWtxnFMcTukOOuf50IGdH
+iJu/6ZNm+IHdEcskS0szRBhO2bMGHl54YUXmpluGQ7MuNcwDN6mJzF/VRWt
3ulFaMJV+uS1CRMmOPrFvSUkKakq4z2mqqrKqk6FbY4kQNvc2mrY6FXBISrS
/wpiSR9iRbgKMmHRokVauM/QqFEj82Qcw5YtW84991yzjvh4Jk40bNgw9Q8v
vfRSrSs+d+5cTeNRF0t/CJVvZDOL5KqrrrLn48tLM3tdOf300+fNmxfQbHEV
PGdAq6oST+zoo4/WCgynnnrqyy+/HLIvSk1NjXz8rLPOshca3ziWmNJi/EZl
+fLlogr1t3rla1/7mubJiHenKZGxRB3CJ5544uCDD27duvXYsWNNrMGtquKJ
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
pL/97W/uFbZs2eJo+RdffJH/doIbuYTc19W77767e/fuQjfNl/Xr148YMeKN
N96I52a0bty4cfz48XPnzs1lJ4qazZs39+/ff9asWYVuSE4o7d6BH56qKtXn
/5L+h2Ge5ghXkQQIhi5dusTCsWbNmlw0YPXq1SEbcMUVV+SiAalyxx13nHji
idqkY445RkSWY4W777771FNP1RUaNGggR7impqYQLQUnDz/88AUXXOB5dTVs
2PDyyy9/9tlnC93GfzNx4kRzpc2fPz+e7dE6bdq0008/Xde/7777ct+hIqVf
v35yBA4//PC9e/cWui3Zp7R7B354qqpUJ1WR/odhfmZGx4wnX+HBVWDo0KFD
nTp1Bg4cuGTJkurq6pUrV6qX1a1bt82bN4tvJn7mt771LVmyfPnyLO73gw8+
0H+WLl0qG5ddTJ8+XXYnO7322mu1DSK43n77bWnYoEGD5GXHjh2z2ICU+OST
T+SATJ061TS+ZcuW2shWrVp9+umnjvU///zzZs2aybtyPPPe2PisWbO6du36
0Ucf5X/XkaB79+567saOHStndvv27QsWLLjwwgt14a233loksUVxg1etWqWt
euWVV+LZHq2y/ffee++II47Is6pyjKaCI+qyXr16nTp1KnRDckJ2e8e9JSq4
VVWqz/8l/Q/DAmz8I4vMAKESIBguuOCCm266ybz829/+pn5av379zELx3+rW
rbt48eJs7bSqqkp8P/1f3EX50t+4caN595ZbbtE2/OMf/zALxQ276KKLstWA
lNi1a5doqBtvvNF2tn/+85+buMB1113n/pQc1caNG+exmV9iwIABzZs3//vf
/16oBhQzDz/8sJ44O+1NhLDIdl2+bNmyAjbPwUEHHSRN0tGXi9Gqwbu8qSrP
0VRwROgVugk5JLu9494SCdyqKtVJVSNHvUqgCsMCjCRAcHPuuefaDpinnya0
b99+wYIFWdmjfMWLpGrWrJm+FM/WIZc8VdXLL798/vnnZ6UBKSG+X5cuXcTz
dDiBoqoOPvjgQw89VJsqjrrjg0OHDj3jjDPy2FInnTt3vvjii0n7cTNhwgS3
qhKeeuopv7NZQOQykyb96U9/iudmtMroy5uq8htNJYAcw+eff77QrcgT3FuK
nwBVFXJSFel/GBZsnjUrSAIsc9555x37y9HPT9uyZcs///lP81I+sm7dutWr
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
    "], {{0, 163.}, {569., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{569., 163.},
  PlotRange->{{0, 569.}, {0, 163.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->2120011808,ExpressionUUID->"99fadb77-cc49-40bc-8c2d-5d026fa1ab35"]
}, Open  ]],

Cell[TextData[{
 "For more information on ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionPlot"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionPlot", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ccb86ba0-f89c-4262-b0ec-27becd4135e7"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionSmoothHistogram"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionSmoothHistogram", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4f84f362-a5d8-45a5-a2c9-db500b239049"],
 ", see the documentation."
}], "TechNoteText",
 CellID->1709934464,ExpressionUUID->"fea0fe20-6b36-43f4-b216-3aa16b32f155"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Searching Files and Services", "TechNoteSection",
 CellID->156924819,ExpressionUUID->"1ce78c82-afd1-4553-9fe5-f050cd6437b1"],

Cell[CellGroupData[{

Cell["Services \[LongDash] Wikipedia", "Subsection",
 CellID->7236515,ExpressionUUID->"bd32fe03-b659-43ca-b3e8-6894a657b099"],

Cell[TextData[{
 "It's nice to be able to search strings, but one may want more data to \
search over. Using a ",
 Cell[BoxData["\"\<Content\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "577ba4fa-7307-4153-b394-16e1e5d22869"],
 " or ",
 Cell[BoxData["\"\<Category\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3e483b2c-5cc3-4c87-93bb-c1001229b855"],
 " rule, or just a lexical pattern itself as input will search over \
Wikipedia. The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["MaxItems"]], "paclet:ref/MaxItems"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f7d679bc-f681-44f3-a9cb-d17918468adf"],
 " option will restrict the number of articles collected. Note that when \
LexicalCases is given just a lexical pattern, and no source text, an attempt \
is made to convert the pattern to a Wikipedia search query, which might not \
always work. "
}], "TechNoteText",
 CellID->1086904220,ExpressionUUID->"dce84237-2fdd-43fb-852a-750c86179cee"],

Cell["\<\
Search over Wikipedia articles containing the keyword \"science fiction\"\
\>", "TechNoteMathCaption",
 CellID->2078442571,ExpressionUUID->"e1ed36fb-17b2-4b3d-9934-9e0edb4d761c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scifi", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<science fiction\>\""}], ",", 
     RowBox[{
      RowBox[{"WordToken", "[", 
       RowBox[{"1", ",", "\"\<KeepContractions\>\""}], "]"}], "~~", 
      "\"\< car\>\""}], ",", 
     RowBox[{"MaxItems", "->", "1000"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->383905135,ExpressionUUID->"61130799-a8e4-4c3d-93ba-b9503c5956bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scifi", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->858358621,ExpressionUUID->"28bcfa4d-f7e2-4147-b61d-b823d8c926ed"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Matches" -> {"the car"}, "CountGroup" -> 63|>, <|
       "Matches" -> {"his car"}, "CountGroup" -> 62|>, <|
       "Matches" -> {"a car"}, "CountGroup" -> 59|>, <|
       "Matches" -> {"to car"}, "CountGroup" -> 52|>, <|
       "Matches" -> {"and car"}, "CountGroup" -> 46|>, <|
       "Matches" -> {"writing car"}, "CountGroup" -> 31|>, <|
       "Matches" -> {"of car"}, "CountGroup" -> 20|>, <|
       "Matches" -> {"her car"}, "CountGroup" -> 18|>, <|
       "Matches" -> {"their car"}, "CountGroup" -> 16|>, <|
       "Matches" -> {"not car"}, "CountGroup" -> 14|>, <|
       "Matches" -> {"Writing car", "early car"}, "CountGroup" -> 13|>, <|
       "Matches" -> {"aircraft car"}, "CountGroup" -> 12|>, <|
       "Matches" -> {"The car", "literary car", "also car"}, "CountGroup" -> 
        11|>, <|"Matches" -> {"flying car"}, "CountGroup" -> 10|>, <|
       "Matches" -> {"take car", "health car", "be car"}, "CountGroup" -> 
        9|>, <|"Matches" -> {"is car"}, "CountGroup" -> 8|>, <|
       "Matches" -> {"which car", "collectible car"}, "CountGroup" -> 7|>, <|
       "Matches" -> {
         "was car", "that car", "successful car", "or car", "it car", 
          "for car", "as car"}, "CountGroup" -> 6|>, <|
       "Matches" -> {
         "trading car", "Magic car", "hover car", "by car", "been car", 
          "are car", "animated car"}, "CountGroup" -> 5|>, <|
       "Matches" -> {
         "This car", "she car", "playing car", "Literary car", "later car", 
          "had car", "fiction car", "fantasy car", "being car"}, "CountGroup" -> 
        4|>, <|"Matches" -> {
         "with car", "whose car", "two car", "they car", "silicon car", 
          "own car", "only car", "on car", "morning car", "long car", 
          "from car", "editorial car", "can car", "after car"}, "CountGroup" -> 
        3|>, <|"Matches" -> {
         "Zelazny's car", "would car", "web car", "vessels car", "using car", 
          "traveling car", "titles car", "this car", "They car", "them car", 
          "than car", "taking car", "short car", "ship car", "scientific car",
           "research car", "rarely car", "race car", "pursue car", 
          "professional car", "period car", "parental car", "often car", 
          "newspaper car", "new car", "my car", "military car", "lobby car", 
          "like car", "It car", "Italian car", "into car", "including car", 
          "in car", "humble car", "His car", "He car", "he car", "has car", 
          "habitually car", "French car", "Flying car", "fictional car", 
          "Fantasy car", "famous car", "extensive car", "credit car", 
          "concept car", "Canadian car", "armoured car", "American car", 
          "always car", "actually car", "acting car", "A car"}, "CountGroup" -> 
        2|>, <|"Matches" -> {
         "worked car", "Woodpecker car", "women car", "within car", 
          "winner's car", "will car", "wild car", "who car", "Whilst car", 
          "while car", "when car", "West car", "were car", "Wells's car", 
          "well car", "we car", "weapons car", "Watts car", "watch car", 
          "walled car", "Vogt's car", "virus car", "version car", 
          "venomous car", "various car", "use car", "us car", 
          "university car", "unit car", "Turtles car", "turbolift car", 
          "tungsten car", "trundle car", "transport car", "train car", 
          "took car", "title car", "through car", "thick car", "these car", 
          "then car", "terrorist car", "teaching car", "TCG car", "takes car",
           "tabletop car", "swipe car", "surgically car", "Superman car", 
          "superhero car", "successfully car", "stories car", "stopped car", 
          "Stephenson car", "steal car", "stalkers car", "squad car", 
          "spent car", "Spear car", "space car", "someone car", "some car", 
          "solo car", "solid car", "soldiers car", "simultaneously car", 
          "Shrugged car", "should car", "ships car", "share car", "SF car", 
          "second car", "seafaring car", "scrutinized car", "science car", 
          "rocketship car", "robot car", "releases car", "recreational car", 
          "really car", "protagonist car", "props car", "primitive car", 
          "Podzemna car", "pod car", "platoon car", "plague car", "pins car", 
          "Phoebus car", "people car", "paying car", "pay car", "patrol car", 
          "patient car", "past car", "particular car", "Pan car", "Pal's car",
           "pages car", "overall car", "out car", "our car", 
          "operational car", "one car", "Oliver's car", "offer car", 
          "off car", "occasional car", "Numerous car", "now car", 
          "notable car", "newspapers car", "New's car", "never car", 
          "navigated car", "nations car", "nasty car", "mystic car", 
          "must car", "music car", "museums car", "museum car", "muscle car", 
          "moist car", "message car", "medical car", "Marryat's car", 
          "man car", "major car", "magic car", "magazine car", "M4A1 car", 
          "loving car", "love car", "lived car", "lifetime car", "Later car", 
          "Late car", "Lambert car", "Kuang's car", "known car", 
          "Joseph's car", "Joe's car", "Jetfire car", "Japanese car", 
          "IRA car", "interplanetary car", "intensive car", "intelligent car",
           "initially car", "information car", "influential car", 
          "individual car", "increasing car", "includes car", "include car", 
          "implantable car", "identification car", "ideal car", "hunted car", 
          "human car", "hospice car", "hologram car", "Hollywood car", 
          "him car", "high car", "Heinlein's car", "heighliners car", 
          "head car", "have car", "hauler car", "Harris car", "handgun car", 
          "Guin's car", "German car", "gag car", "flaming car", "first car", 
          "film car", "fighting car", "fighter car", "fi car", "female car", 
          "Faye car", "faulty car", "father's car", "fatal car", "failed car",
           "factor car", "explorative car", "experiments car", "exhaled car", 
          "eponymous car", "Epitaf car", "Epilogues car", "edition car", 
          "Editing car", "Early car", "each car", "drug car", "driving car", 
          "distinguished car", "disease car", "Dilbert car", "Dedicated car", 
          "Dart car", "Cybertron car", "Crusaders car", "Crusader car", 
          "creature car", "creative car", "covers car", "could car", 
          "convoys car", "convoy car", "convicted car", "contributing car", 
          "continue car", "contemporary car", "computer car", "Commander car",
           "Collectible car", "classic car", "Clarke's car", "Clarke car", 
          "Circle car", "cigarette car", "Christmas car", "chosen car", 
          "children's car", "Charlie car", "character car", "changed car", 
          "certain car", "cemented car", "cell car", "celebrity car", 
          "calling car", "called car", "California car", "calcium car", 
          "Bulletin car", "brilliant car", "Bower car", "both car", 
          "blocked car", "blame car", "between car", "Benz car", "begun car", 
          "began car", "band's car", "bad car", "avoiding car", 
          "Autonomous car", "author's car", "aunt car", "attendees car", 
          "assault car", "Asimov's car", "artistic car", "artificial car", 
          "art car", "antagonist's car", "Another car", "Animated car", 
          "an car", "Amy car", "America car", "all car", "airflow car", 
          "air car", "accelerator car", "Academic car", "absurdists car", 
          "about car", "90s car", "89 car", "2010 car", "1990 car", 
          "1950s car", "1643 car", "100 car"}, "CountGroup" -> 1|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 23], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 23], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 23, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"the car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"the car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"his car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"his car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"a car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"a car"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"to car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"to car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"and car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"and car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"writing car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"writing car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"of car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"of car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"her car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"her car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"their car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"their car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"not car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"not car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Writing car", "early car"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Writing car", "early car"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"aircraft car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"aircraft car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"The car", "literary car", "also car"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"The car", "literary car", "also car"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"flying car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"flying car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"take car", "health car", "be car"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"take car", "health car", "be car"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"is car"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"is car"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"which car", "collectible car"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"which car", "collectible car"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"was car", "that car", "successful car", "or car", 
                    "it car", "for car", "as car"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"was car", "that car", "successful car", "or car", 
                    "it car", "for car", "as car"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"trading car", "Magic car", "hover car", "by car", 
                    "been car", "are car", "animated car"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"trading car", "Magic car", "hover car", "by car", 
                    "been car", "are car", "animated car"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 9], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 9], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 23, 1], {1, 23 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 23, 1], {1, 23 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[23, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 23, 1], {1, 23 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 23, 1], {1, 23 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{528., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{528., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[10]=",
 CellID->258167904,ExpressionUUID->"5a4eba5a-9b7b-4a5c-8380-7cbed03c5315"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Files", "Subsection",
 CellID->1655250449,ExpressionUUID->"38a52a14-206f-472c-a0a7-47fdb25ea7b3"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalCases"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalCases", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a396f7f9-38b7-412a-aa1b-e05368dd6a44"],
 " supports ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["File"]], "paclet:ref/File"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "890566aa-7418-4d6b-b273-b6c6bf5dba90"],
 " objects, File paths and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SearchIndexObject"]], "paclet:ref/SearchIndexObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c01eb36a-fc41-432a-9b7e-3894e0a8d2db"],
 "'s as input. If using a file-path string, surround it with either ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["File"]], "paclet:ref/File"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1a917c76-6481-4acd-8d75-38f597e89752"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["List"]], "paclet:ref/List"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8cbc3b54-c13f-4cf3-8c96-cbdb7ece801a"],
 ". ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SearchIndexObject"]], "paclet:ref/SearchIndexObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8675d84a-2756-4677-884b-b9d73cac0e98"],
 "'s allow one to search over files in a particular set of directories. Use \
",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CreateSearchIndex"]], "paclet:ref/CreateSearchIndex"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "efeb5c07-7954-45fd-aeea-8a1e8442d1b4"],
 " to make one. In ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalCases"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalCases", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0a0fd76b-8568-4d87-8362-29c271e19233"],
 " specify which files to use from the index by supplying a search query. \
This is done with a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Rule"]], "paclet:ref/Rule"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d0b359eb-c0bd-4b99-88c3-2342ec0ac0f0"],
 " where the left-hand-side (lhs) is the index and the right-hand-side (rhs) \
is the search query.  A ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["String"]], "paclet:ref/String"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "84944d2a-c786-495f-b72d-c6af97ad5215"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SearchQueryString"]], "paclet:ref/SearchQueryString"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b5379020-d330-4043-8d96-33fd3f2fbfdd"],
 " is valid rhs."
}], "TechNoteText",
 CellID->1035615851,ExpressionUUID->"d3986bb1-9f19-42c4-a0b0-2b24c0721d2a"],

Cell["", "TechNoteText",
 CellID->1620210775,ExpressionUUID->"dec31401-a033-4079-b8fc-980a9873f719"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Built-in String Functions", "TechNoteSection",
 CellID->323829644,ExpressionUUID->"6f142400-d912-4e1c-a863-0699c0cc257e"],

Cell[TextData[{
 "If you prefer lightweight output, instead of the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalSummary"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalSummary", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a11d6fa6-2e4f-48aa-9ec6-d7344df7cfcc"],
 " object, consider using the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalPattern"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalPattern", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7c434514-a218-4971-8175-8cf458205a81"],
 " wrapper with native String functions (Note: options are not supported at \
the moment)."
}], "TechNoteText",
 CellID->1280570768,ExpressionUUID->"d283c6c1-9fe7-486f-9062-7d6e9450f4a8"],

Cell["Get example text", "TechNoteMathCaption",
 CellID->1454019210,ExpressionUUID->"38c93abd-95dd-48ed-b0e9-67156499e9e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alice", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->102638739,ExpressionUUID->"32e7c471-9ff6-4dd6-bb66-8a005ee7cfc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aliceVerbAdverbPattern", "=", 
   RowBox[{"LexicalPattern", "[", 
    RowBox[{"\"\<Alice \>\"", "~~", 
     RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->2050338705,ExpressionUUID->"2f8f1ddc-9c67-44ba-9e09-6cf37ae5ac0e"],

Cell[TextData[{
 "Find cases of ",
 Cell[BoxData[
  StyleBox["aliceVerbAdverbPattern", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c950bba0-5f39-48c6-8ef6-238677ae74db"],
 " in \"Alice In Wonderland\""
}], "TechNoteMathCaption",
 CellID->16361184,ExpressionUUID->"00619b1c-f6e3-4900-9cc6-6bae56500e35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"alice", ",", " ", "aliceVerbAdverbPattern"}], "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->509781875,ExpressionUUID->"302559fc-253b-4376-9fdb-3cd6fbc3ff12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Alice had not\"\>", ",", "\<\"Alice was not\"\>", 
   ",", "\<\"Alice went back\"\>", ",", "\<\"Alice took up\"\>", 
   ",", "\<\"Alice had no\"\>", ",", "\<\"Alice was soon\"\>", 
   ",", "\<\"Alice could only\"\>", ",", "\<\"Alice looked all\"\>", 
   ",", "\<\"Alice could not\"\>", ",", "\<\"Alice was more\"\>", 
   ",", "\<\"Alice crouched down\"\>", ",", "\<\"Alice went timidly\"\>", 
   ",", "\<\"Alice was just\"\>", ",", "\<\"Alice looked down\"\>", 
   ",", "\<\"Alice had not\"\>", ",", "\<\"Alice got up\"\>", 
   ",", "\<\"Alice was very\"\>", ",", "\<\"Alice looked up\"\>", 
   ",", "\<\"Alice was too\"\>", ",", "\<\"Alice got up\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[18]=",
 CellID->2056356806,ExpressionUUID->"e29fdfad-9084-411c-86c6-6a4820744385"]
}, Open  ]],

Cell[TextData[{
 "Find string positions of ",
 Cell[BoxData[
  StyleBox["aliceVerbAdverbPattern", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3e56c6e7-2bc7-4115-b3fc-200b618812b7"],
 " matches in \"Alice In Wonderland\""
}], "TechNoteMathCaption",
 CellID->1991854146,ExpressionUUID->"d85f8561-3d0b-4024-9bb3-1c5090254f47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringPosition", "[", 
  RowBox[{"alice", ",", " ", "aliceVerbAdverbPattern"}], "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->586211615,ExpressionUUID->"c3547231-5860-47b2-9a75-ca973cbc6c95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1349", ",", "1361"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2548", ",", "2560"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4360", ",", "4374"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8488", ",", "8500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16084", ",", "16095"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18290", ",", "18303"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22528", ",", "22543"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25145", ",", "25160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26380", ",", "26394"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29462", ",", "29475"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30448", ",", "30466"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32290", ",", "32307"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35021", ",", "35034"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35170", ",", "35186"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36142", ",", "36154"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38307", ",", "38318"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43702", ",", "43715"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44556", ",", "44570"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44958", ",", "44970"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51619", ",", "51630"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[19]=",
 CellID->2030616376,ExpressionUUID->"d55bcb2a-b786-4083-b9b1-49b01de64181"]
}, Open  ]],

Cell[TextData[{
 "Check if a string matches ",
 Cell[BoxData[
  StyleBox["aliceVerbAdverbPattern", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1d1e2db5-c8c5-4cb1-9b86-1fc220bc48bc"]
}], "TechNoteMathCaption",
 CellID->198413051,ExpressionUUID->"0382078e-eb1d-4b80-a773-1aa5617e0d05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{
  "\"\<Alice walked quickly\>\"", ",", " ", "aliceVerbAdverbPattern"}], 
  "]"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->474450722,ExpressionUUID->"22fda337-b58a-49b8-a024-d3dd0ae08a8a"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[20]=",
 CellID->90174421,ExpressionUUID->"1383e070-1d1c-4fbc-a640-fcbaa1f5dc80"]
}, Open  ]],

Cell["Uppercase all verbs in a string", "TechNoteMathCaption",
 CellID->505478639,ExpressionUUID->"ba2bb5ac-6717-4e5d-9b7d-b87bffa511fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Alice walked quickly\>\"", ",", " ", 
   RowBox[{"LexicalPattern", "[", 
    RowBox[{
     RowBox[{"v", ":", 
      RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}]}], ":>", 
     RowBox[{"ToUpperCase", "[", "v", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->134178141,ExpressionUUID->"ef40ae50-a779-4116-a06e-e77da9593c86"],

Cell[BoxData["\<\"Alice WALKED quickly\"\>"], "Output",
 CellLabel->"Out[22]=",
 CellID->486719834,ExpressionUUID->"24f16544-bf7b-46d5-bf7c-1e35173187b6"]
}, Open  ]],

Cell["\<\
It's also possible to use the operator forms of these functions.\
\>", "TechNoteText",
 CellID->586218473,ExpressionUUID->"91ca8a30-18d0-4da3-9ee1-40e2e9263d11"],

Cell["Define a Q operator for matching a lexical pattern", \
"TechNoteMathCaption",
 CellID->806281427,ExpressionUUID->"7c249bac-ecdc-4ed8-bee4-c7095549da06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aliceVerbAdverbQ", "=", 
   RowBox[{"StringMatchQ", "[", "aliceVerbAdverbPattern", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->945678457,ExpressionUUID->"b73fd11b-ac49-4ad1-9080-704a3281e984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aliceVerbAdverbQ", "[", "\"\<Alice walked quickly\>\"", 
  "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->1358433434,ExpressionUUID->"6d729271-36c6-4fab-ba39-f728b3e70897"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[24]=",
 CellID->2031580328,ExpressionUUID->"6140c966-160a-416f-8892-dba2d9a20c0f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Abstractions", "TechNoteSection",
 CellID->739144260,ExpressionUUID->"e3408bf7-840b-4053-bd74-0bc686f2291b"],

Cell[CellGroupData[{

Cell["LexicalMap", "Subsection",
 CellID->911769301,ExpressionUUID->"9eb51b1e-f4f9-49ad-8909-ca9b070dbbe1"],

Cell["\<\
Map a function over lexical patterns in a string. This is effectively the \
same as using a LexicalPattern in StringReplace.\
\>", "TechNoteText",
 CellID->348127237,ExpressionUUID->"8df3fc63-2a2e-46ee-bf42-8723cc720ba2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\"\<**\>\"", "<>", "#", "<>", "\"\<**\>\""}], "&"}], ",", 
   "\"\<emphasize cool words\>\"", ",", 
   RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}]}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->1883758637,ExpressionUUID->"c84a1c4c-e792-4d0b-886c-a96780bfcf50"],

Cell[BoxData["\<\"emphasize **cool** words\"\>"], "Output",
 CellLabel->"Out[25]=",
 CellID->51980830,ExpressionUUID->"d05e3bf6-f9ac-44cc-961d-f9f22f4fc785"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LexigramCount", "Subsection",
 CellID->268386053,ExpressionUUID->"46fe0999-275c-455c-9de8-45db4b42e666"],

Cell[TextData[{
 "In NLP an n-gram is a length-n sequence of words (or perhaps lexemes). \
Similarly, the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexigramCount"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexigramCount", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3adbb665-1bf1-4ee8-a3e3-1a037cec5869"],
 " represents the 'length' of a lexical pattern."
}], "TechNoteText",
 CellID->1763449128,ExpressionUUID->"aa771def-2453-4851-8f1c-c055547a2618"],

Cell["Compute the LexigramCount for a lexical pattern", "TechNoteMathCaption",
 CellID->325781772,ExpressionUUID->"3707f605-29fc-4bab-b6a7-2ae0937c476e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexigramCount", "[", 
  RowBox[{
   RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
   RowBox[{"BoundToken", "[", 
    RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[26]:=",
 CellID->1478425801,ExpressionUUID->"c18c0092-c210-4dc8-a8ab-708b530aca23"],

Cell[BoxData["3"], "Output",
 CellLabel->"Out[26]=",
 CellID->810350803,ExpressionUUID->"14657af0-acc2-4ab7-bbc2-128d18c67c95"]
}, Open  ]],

Cell[TextData[{
 "The LexicalPattern here has 3 elements including the whitespace. Note below \
that ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["OptionalToken"]], 
    "paclet:FaizonZaman/LexicalCases/ref/OptionalToken", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "27fcba94-841d-4250-a6f0-13d000a6ff6c"],
 " is counted as the Interval 0 to the maximum LexigramCount of the optional \
token's arguments."
}], "TechNoteText",
 CellID->234817779,ExpressionUUID->"e12ed454-c3c3-4d83-8ba5-96c334481b15"],

Cell["Compute the LexigramCount for a lexical pattern", "TechNoteMathCaption",
 CellID->1137381590,ExpressionUUID->"10b946f4-311d-46ae-97c2-aa5cfa9b850b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"patt", "=", 
   RowBox[{
    RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", "\"\< \>\"", "~~", 
    RowBox[{"OptionalToken", "[", "\"\<green\>\"", "]"}], "~~", 
    RowBox[{"BoundToken", "[", 
     RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LexicalCases", "[", 
  RowBox[{"\"\<cool green species. amazing species\>\"", ",", "patt"}], 
  "]"}]}], "Input",
 CellLabel->"In[37]:=",
 CellID->1402498802,ExpressionUUID->"aa40a78d-2ffe-42c1-bd0d-0f48c89e13a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  FaizonZaman`LexicalCases`LexicalSummary[<|
   "Data" -> {<|"Match" -> "green species", "Position" -> {{6, 18}}|>, <|
      "Match" -> "amazing species", "Position" -> {{21, 35}}|>}, "Dataset" -> 
    Dataset[{<|"Match" -> "green species", "Position" -> {{6, 18}}|>, <|
       "Match" -> "amazing species", "Position" -> {{21, 35}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], 1]}], 2], <||>], "Source" -> "Text", 
    "SourceData" -> 
    "1:eJxTTMoPClZmYGBIzs/PUUgvSk3NUyguSE3OTC3WU0jMTazKzEuHCQAAMukO5g==", 
    "TotalMatchCount" -> 2, "LexicalStructure" -> TextElement[{
       TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{" "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{
         TextElement[{"green"}, <|"GrammaticalUnit" -> "Text"|>]}, <|
        "GrammaticalUnit" -> "Optional"|>], 
       TextElement[{
         TextElement[{
           Alternatives[
            TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
            TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
          "GrammaticalUnit" -> "Alternatives"|>]}, <|
        "GrammaticalUnit" -> "BoundToken"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[38]=",
 CellID->2043123980,ExpressionUUID->"af4ad611-23b1-4e5a-a043-f333c6b10d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexigramCount", "[", "patt", "]"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->1220441183,ExpressionUUID->"95131637-0205-4775-8ba6-c147fddda31a"],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}], "]"}]], "Output",
 CellLabel->"Out[39]=",
 CellID->1654515660,ExpressionUUID->"2ba001d9-bc4a-45e0-9879-b5b7afc9237e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "TechNoteSection",
 CellID->2118948183,ExpressionUUID->"26100ca1-edc6-4947-a726-808e8b81c06c"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalCases"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalCases", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fa578aac-da3e-4f9f-8e53-a1b1c955deb6"],
 " provides a set of lexical pattern objects, a way to query them on strings, \
files, and large datasets like Wikipedia articles, and easy access to \
properties of results. Additionally, one can use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalDispersionPlot"]], 
    "paclet:FaizonZaman/LexicalCases/ref/LexicalDispersionPlot", 
    "FaizonZaman Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4c1a60ab-484e-4dc3-8f16-1e0d3c994fbc"],
 " to see how these structures are used across a text. With this paclet, I \
hope lexical researchers and enthusiasts can easily explore lexical patterns \
in a consistent, wolfram language way. Feedback is welcome! Please send a \
message on the paclet repository, or visit the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GitHub"]], "https://github.com/dishmint/LexicalCases"},
   "WebLink",
   BaseStyle->{"TechNoteText"}]],ExpressionUUID->
  "5441ec13-b55a-4f57-b45d-12ec157525ed"],
 " repository. "
}], "TechNoteText",
 CellID->667725448,ExpressionUUID->"90fd1f81-66c9-4f1b-8889-cdd332486d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "TutorialMoreAboutSection"]},
      {
       RowBox[{
       "\[FilledVerySmallSquare]", Cell[TextData[ButtonBox[
        "LexicalCasesOverview",
         BaseStyle->"Link",
         ButtonData->"paclet:FaizonZaman/LexicalCases/guide/LexicalCases"]], 
         "TutorialMoreAbout",ExpressionUUID->
         "042a4c88-412a-49b0-8a10-6a37ed4440c8"]}]}
     }]}
  }]], "TutorialMoreAboutSection",ExpressionUUID->"2f60c51e-5759-4bd9-856a-\
0f42e9bf1ed6"],

Cell[BoxData[""], "Input",ExpressionUUID->"76a66799-7a75-4419-80b8-85bae8cabfba"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"e8e02054-c270-46c9-b7e0-c837dd56a928"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LexicalCases Overview",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {$Failed, ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2024, 5, 24, 23, 19, 52.243633}", 
    "history" -> {"??", "", "", ""}, "context" -> "FaizonZaman`LexicalCases`",
     "keywords" -> {
     "lexical cases overview", "lexical cases tutorial", 
      "lexical cases notes", "lexical cases examples"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Faizon Zaman/ Lexical Cases Tech Note", "language" -> "en", 
    "paclet" -> "FaizonZaman/LexicalCases", "status" -> "None", "summary" -> 
    "This paclet is hosted on the Wolfram Paclet Repository. First install \
the paclet from the ResourceObject, then load it with Needs. Where \
StringCases aims for character patterns and TextCases for text patterns, \
LexicalCases aims for lexical patterns. This is accomplished by expanding the \
scope of StringExpression where types can be expressed anywhere within. \
Listed below are the pattern types one can use when searching at the lexical \
level. Here we can search the Origin Of Species for adverb~adjective patterns \
ending with \"specie\" or \"species\". Note the whitespace string between \
TextType[\"Adjective\"] and BoundToken. Whitespace is given \"for free\" \
between some tokens like TextType. LexicalCases returns a LexicalSummary \
object with several properties.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "LexicalCases Overview", "titlemodifier" -> "", 
    "metadescription" -> "", "windowtitle" -> "LexicalCases Overview", "type" -> 
    "Tech Note", "uri" -> 
    "FaizonZaman/LexicalCases/tutorial/LexicalCasesOverview"}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"9274e45b-07ab-47d3-ac1c-6ac8dcafcae2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[648293, 11431, 30265, 502, 184, "Output",ExpressionUUID->"99fadb77-cc49-40bc-8c2d-5d026fa1ab35",
   CellTags->"RasterizedOutput",
   CellID->2120011808]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 798885, 14425}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[593, 21, 3524, 82, 57, "AnchorBarGrid",ExpressionUUID->"cec06e71-0cbf-4b9a-a051-447ce4dd00ea",
 CellID->1],
Cell[CellGroupData[{
Cell[4142, 107, 1296, 35, 61, "ObjectNameGrid",ExpressionUUID->"1319610f-9d53-49fa-99d6-7d0a5d18f41e"],
Cell[5441, 144, 6239, 146, 141, "TechNoteJumpBox",ExpressionUUID->"d3c45db2-bca9-4214-880f-35627ef2d637"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11717, 295, 114, 1, 81, "TechNoteSection",ExpressionUUID->"81206874-2ab9-4eda-8571-5bfd19c17f2a",
 CellID->580651078],
Cell[11834, 298, 976, 30, 38, "TechNoteText",ExpressionUUID->"2cd2e377-4f73-4e7c-9697-b1fb9044cb72",
 CellID->1692548],
Cell[12813, 330, 162, 2, 36, "TechNoteMathCaption",ExpressionUUID->"fbedece9-bbff-4d2e-a657-3f0a6861f437",
 CellID->803553206],
Cell[12978, 334, 329, 6, 48, "Input",ExpressionUUID->"2a140a42-8a9b-4152-941c-64e7b79828b9",
 CellID->700096613]
}, Open  ]],
Cell[CellGroupData[{
Cell[13344, 345, 114, 1, 81, "TechNoteSection",ExpressionUUID->"323f2b7a-e2fe-480c-9276-87fa003c04b7",
 CellID->652844990],
Cell[13461, 348, 932, 24, 86, "TechNoteText",ExpressionUUID->"cc9fa8cd-9370-4fec-979f-018e02af5085",
 CellID->293313137],
Cell[14396, 374, 7675, 222, 335, "DefinitionBox",ExpressionUUID->"31414309-8b06-40ba-86ca-84d7c1e4868f",
 CellID->1238923694],
Cell[22074, 598, 182, 3, 70, "TechNoteCaption",ExpressionUUID->"856dbd55-977a-4328-8b6c-ceb453c2d31b",
 CellID->589083746],
Cell[22259, 603, 2054, 59, 70, "TechNoteText",ExpressionUUID->"8b5c74c4-1d2c-4ee2-9b0a-30498b50912c",
 CellID->1092979763],
Cell[24316, 664, 158, 2, 70, "TechNoteMathCaption",ExpressionUUID->"36e47171-b37e-4437-baa6-676d8dd9ffcd",
 CellID->830906352],
Cell[24477, 668, 306, 8, 70, "Input",ExpressionUUID->"bde1c105-5cdc-4295-9501-2dcc16518afd",
 CellID->1445746235],
Cell[CellGroupData[{
Cell[24808, 680, 481, 11, 70, "Input",ExpressionUUID->"10f149e4-2d2f-4099-8305-cb7787387d53",
 CellID->1493889061],
Cell[25292, 693, 400348, 6328, 70, "Output",ExpressionUUID->"630390c5-b700-4f0d-bba8-6fbba88f6e91",
 CellID->172948514]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425689, 7027, 128, 1, 70, "TechNoteSection",ExpressionUUID->"6f4bb9aa-42a4-41a6-8fb7-61cc35a8ed3e",
 CellID->1668282004],
Cell[425820, 7030, 264, 5, 70, "TechNoteText",ExpressionUUID->"a8323631-4c97-44c6-a350-f86a9bf643ce",
 CellID->665750961],
Cell[426087, 7037, 3856, 93, 70, "DefinitionBox",ExpressionUUID->"6c6b3b60-a94e-4e0f-bd32-29b34770b6e7",
 CellID->1696821134],
Cell[429946, 7132, 128, 1, 70, "TechNoteCaption",ExpressionUUID->"56233729-d4cb-4b82-901d-10696ca15e7e",
 CellID->2037450625],
Cell[430077, 7135, 656, 18, 70, "TechNoteText",ExpressionUUID->"d5c2ce35-001d-4efb-b849-bdb65b29f971",
 CellID->1363090665],
Cell[430736, 7155, 135, 1, 70, "TechNoteMathCaption",ExpressionUUID->"47a7c140-30ca-449b-9032-f0febc449809",
 CellID->1229863116],
Cell[CellGroupData[{
Cell[430896, 7160, 172, 3, 70, "Input",ExpressionUUID->"84165a8b-4058-4f75-b93a-83d9676da775",
 CellID->779288237],
Cell[431071, 7165, 538, 10, 55, "Output",ExpressionUUID->"8be5b880-6d8b-4845-858a-1fcf314c129c",
 CellID->1682420800]
}, Open  ]],
Cell[CellGroupData[{
Cell[431646, 7180, 113, 1, 70, "Subsection",ExpressionUUID->"cc925254-58d9-4b92-939e-9f63c3655eb5",
 CellID->240664990],
Cell[431762, 7183, 673, 18, 70, "TechNoteText",ExpressionUUID->"ccae3372-1545-42f6-97b8-3500b733ab87",
 CellID->1110995588],
Cell[432438, 7203, 187, 3, 70, "TechNoteMathCaption",ExpressionUUID->"8375b190-bd4e-42b5-83d5-6a0cc23089ce",
 CellID->1687971595],
Cell[CellGroupData[{
Cell[432650, 7210, 179, 3, 70, "Input",ExpressionUUID->"8e7294a7-d813-4b92-aadf-a20f8a111ff9",
 CellID->1179255129],
Cell[432832, 7215, 3955, 92, 113, "Output",ExpressionUUID->"6b38ac91-f7a3-44f4-8f9e-78bcb23ab1f2",
 CellID->1336198925]
}, Open  ]],
Cell[436802, 7310, 183, 3, 70, "TechNoteMathCaption",ExpressionUUID->"3368106e-29f7-405a-a101-7db20b4fd6a0",
 CellID->1944246427],
Cell[CellGroupData[{
Cell[437010, 7317, 417, 9, 70, "Input",ExpressionUUID->"bb550aec-4287-4243-9481-e448ba084f48",
 CellID->1246165327],
Cell[437430, 7328, 3954, 92, 113, "Output",ExpressionUUID->"555559b6-cc8e-451a-b691-ee9527dabc47",
 CellID->581361726]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441433, 7426, 102, 1, 70, "Subsection",ExpressionUUID->"589d0476-0d9b-42e1-b026-d92c31cec39a",
 CellID->1786817302],
Cell[441538, 7429, 480, 11, 70, "TechNoteText",ExpressionUUID->"eab2a1eb-d5dd-44ab-a5ea-2dd34e9fb688",
 CellID->1523155587],
Cell[442021, 7442, 401, 12, 70, "TechNoteMathCaption",ExpressionUUID->"9fd2e131-3474-47ed-8c44-aed1cccad008",
 CellID->826374024],
Cell[CellGroupData[{
Cell[442447, 7458, 169, 3, 70, "Input",ExpressionUUID->"43626db2-c9df-4068-8732-614372ce235d",
 CellID->342895442],
Cell[442619, 7463, 124287, 2267, 70, "Output",ExpressionUUID->"e7530567-1608-4e2f-9c19-15c58d7fce42",
 CellID->1399355230]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566955, 9736, 104, 1, 70, "Subsection",ExpressionUUID->"eb70a302-58ce-41dc-8cf0-69b6cd297ffb",
 CellID->1603752961],
Cell[567062, 9739, 490, 11, 70, "TechNoteText",ExpressionUUID->"ec349d03-13cd-4e10-8395-81ba1c38718f",
 CellID->302090059],
Cell[567555, 9752, 158, 2, 70, "TechNoteMathCaption",ExpressionUUID->"ec82f14a-37fa-424f-8bf2-1b438f97932b",
 CellID->793577259],
Cell[CellGroupData[{
Cell[567738, 9758, 172, 3, 70, "Input",ExpressionUUID->"6cb01e60-61c5-446d-9cf1-7b2a06afbe66",
 CellID->82992742],
Cell[567913, 9763, 37070, 675, 70, "Output",ExpressionUUID->"c7692aeb-d46b-478e-9fe2-6f15d86476c4",
 CellID->922247217]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[605032, 10444, 104, 1, 70, "Subsection",ExpressionUUID->"0cda6fe9-0d84-4491-92a5-5e7950d6cda9",
 CellID->1187753310],
Cell[605139, 10447, 301, 6, 70, "TechNoteText",ExpressionUUID->"a513bde1-3a38-4874-b1c8-37b92423ed0e",
 CellID->1840397229],
Cell[605443, 10455, 132, 1, 70, "TechNoteMathCaption",ExpressionUUID->"1336ec09-39d7-40cd-b3bd-36f0f14b3e8e",
 CellID->181087201],
Cell[CellGroupData[{
Cell[605600, 10460, 167, 3, 70, "Input",ExpressionUUID->"bac61a70-1670-43f7-a1dc-e6195d7720e3",
 CellID->548259408],
Cell[605770, 10465, 19702, 431, 70, "Output",ExpressionUUID->"f561765b-b6b4-4be8-b7e3-f9396bc36ff6",
 CellID->393486785]
}, Open  ]],
Cell[625487, 10899, 258, 4, 70, "TechNoteText",ExpressionUUID->"f466a206-1b99-420f-95d8-6abb961e5391",
 CellID->2063534856]
}, Open  ]],
Cell[CellGroupData[{
Cell[625782, 10908, 115, 1, 70, "Subsection",ExpressionUUID->"3eed0890-b4fd-407f-a65e-891bc8689c3b",
 CellID->1345260134],
Cell[625900, 10911, 668, 18, 70, "TechNoteText",ExpressionUUID->"e8501228-085a-452c-8c4c-ddc2c46dc439",
 CellID->29989925],
Cell[626571, 10931, 167, 2, 70, "TechNoteMathCaption",ExpressionUUID->"376676f7-779b-41d2-92a4-64dffe959dde",
 CellID->651208592],
Cell[CellGroupData[{
Cell[626763, 10937, 179, 3, 70, "Input",ExpressionUUID->"4422b071-24e0-4fd5-aa1e-a354a2ad9d80",
 CellID->1697399034],
Cell[626945, 10942, 5642, 99, 422, "Output",ExpressionUUID->"2c8f4662-78d8-4fea-b7ab-c1d7f3d74067",
 CellID->2060323229]
}, Open  ]],
Cell[632602, 11044, 470, 13, 70, "TechNoteText",ExpressionUUID->"a6f99105-fe82-405f-bede-980d6b71f1d1",
 CellID->328780263],
Cell[633075, 11059, 134, 1, 70, "TechNoteMathCaption",ExpressionUUID->"06639e9d-6947-47c9-bde9-67d4c5c3d692",
 CellID->242970758],
Cell[CellGroupData[{
Cell[633234, 11064, 234, 5, 70, "Input",ExpressionUUID->"ce2bf8c2-473c-458f-a503-1e75eeeeabec",
 CellID->1243116759],
Cell[633471, 11071, 2078, 45, 435, "Output",ExpressionUUID->"09dc0c52-5788-42db-bea2-06343b6f9e5b",
 CellID->589390258]
}, Open  ]],
Cell[635564, 11119, 1048, 26, 70, "TechNoteText",ExpressionUUID->"f6708022-1e7b-4eda-928f-88382c0c4105",
 CellID->762522647],
Cell[636615, 11147, 200, 4, 70, "TechNoteMathCaption",ExpressionUUID->"a2b99a19-e275-40cf-9da7-e365ccb08d08",
 CellID->1576750802],
Cell[CellGroupData[{
Cell[636840, 11155, 395, 11, 70, "Input",ExpressionUUID->"e47b4a12-d65a-465b-91e6-6e941f5695a0",
 CellID->856160354],
Cell[637238, 11168, 273, 5, 37, "Output",ExpressionUUID->"921e1ba9-a6d7-41cc-b5b6-ccc498214335",
 CellID->1706613329]
}, Open  ]],
Cell[CellGroupData[{
Cell[637548, 11178, 204, 4, 70, "Input",ExpressionUUID->"cfe0f820-3548-43ad-a541-0d1d16ed80f2",
 CellID->346072959],
Cell[637755, 11184, 4043, 78, 482, "Output",ExpressionUUID->"35735744-b44b-46a2-a0d7-9c0710f016c1",
 CellID->690165259]
}, Open  ]],
Cell[641813, 11265, 514, 13, 70, "TechNoteText",ExpressionUUID->"8f52efd0-b5fc-4103-a7c0-9eead4c13852",
 CellID->2128274670],
Cell[642330, 11280, 406, 11, 70, "TechNoteMathCaption",ExpressionUUID->"b3398068-abc7-46b7-8ea4-248fc02f6787",
 CellID->1477714146],
Cell[CellGroupData[{
Cell[642761, 11295, 748, 17, 70, "Input",ExpressionUUID->"ffc0ee92-466c-4ed7-b3e6-5e7bff6aa024",
 CellID->1648982275],
Cell[643512, 11314, 3029, 64, 369, "Output",ExpressionUUID->"79509a60-49d1-4810-8d50-c04e981fdefd",
 CellID->832155429]
}, Open  ]],
Cell[646556, 11381, 532, 14, 70, "TechNoteText",ExpressionUUID->"714c7ab0-de5d-472f-bf32-4f29c773cde8",
 CellID->851163527],
Cell[647091, 11397, 416, 11, 70, "TechNoteMathCaption",ExpressionUUID->"66de2baf-e252-4155-a163-b39d48253d54",
 CellID->1920953233],
Cell[CellGroupData[{
Cell[647532, 11412, 758, 17, 70, "Input",ExpressionUUID->"b32ac932-5079-47ac-be53-4bc778806bb7",
 CellID->1335982774],
Cell[648293, 11431, 30265, 502, 184, "Output",ExpressionUUID->"99fadb77-cc49-40bc-8c2d-5d026fa1ab35",
 CellTags->"RasterizedOutput",
 CellID->2120011808]
}, Open  ]],
Cell[678573, 11936, 888, 25, 70, "TechNoteText",ExpressionUUID->"fea0fe20-6b36-43f4-b216-3aa16b32f155",
 CellID->1709934464]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[679510, 11967, 130, 1, 70, "TechNoteSection",ExpressionUUID->"1ce78c82-afd1-4553-9fe5-f050cd6437b1",
 CellID->156924819],
Cell[CellGroupData[{
Cell[679665, 11972, 125, 1, 70, "Subsection",ExpressionUUID->"bd32fe03-b659-43ca-b3e8-6894a657b099",
 CellID->7236515],
Cell[679793, 11975, 1091, 25, 70, "TechNoteText",ExpressionUUID->"dce84237-2fdd-43fb-852a-750c86179cee",
 CellID->1086904220],
Cell[680887, 12002, 188, 3, 70, "TechNoteMathCaption",ExpressionUUID->"e1ed36fb-17b2-4b3d-9934-9e0edb4d761c",
 CellID->2078442571],
Cell[681078, 12007, 480, 12, 70, "Input",ExpressionUUID->"61130799-a8e4-4c3d-93ba-b9503c5956bd",
 CellID->383905135],
Cell[CellGroupData[{
Cell[681583, 12023, 175, 3, 70, "Input",ExpressionUUID->"28bcfa4d-f7e2-4147-b61d-b823d8c926ed",
 CellID->858358621],
Cell[681761, 12028, 91363, 1684, 70, "Output",ExpressionUUID->"5a4eba5a-9b7b-4a5c-8380-7cbed03c5315",
 CellID->258167904]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[773173, 13718, 103, 1, 70, "Subsection",ExpressionUUID->"38a52a14-206f-472c-a0a7-47fdb25ea7b3",
 CellID->1655250449],
Cell[773279, 13721, 3525, 108, 70, "TechNoteText",ExpressionUUID->"d3986bb1-9f19-42c4-a0b0-2b24c0721d2a",
 CellID->1035615851],
Cell[776807, 13831, 100, 1, 70, "TechNoteText",ExpressionUUID->"dec31401-a033-4079-b8fc-980a9873f719",
 CellID->1620210775]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[776956, 13838, 127, 1, 70, "TechNoteSection",ExpressionUUID->"6f142400-d912-4e1c-a863-0699c0cc257e",
 CellID->323829644],
Cell[777086, 13841, 950, 26, 70, "TechNoteText",ExpressionUUID->"d283c6c1-9fe7-486f-9062-7d6e9450f4a8",
 CellID->1280570768],
Cell[778039, 13869, 123, 1, 70, "TechNoteMathCaption",ExpressionUUID->"38c93abd-95dd-48ed-b0e9-67156499e9e7",
 CellID->1454019210],
Cell[778165, 13872, 310, 8, 70, "Input",ExpressionUUID->"32e7c471-9ff6-4dd6-bb66-8a005ee7cfc3",
 CellID->102638739],
Cell[778478, 13882, 383, 9, 70, "Input",ExpressionUUID->"2f8f1ddc-9c67-44ba-9e09-6cf37ae5ac0e",
 CellID->2050338705],
Cell[778864, 13893, 335, 8, 70, "TechNoteMathCaption",ExpressionUUID->"00619b1c-f6e3-4900-9cc6-6bae56500e35",
 CellID->16361184],
Cell[CellGroupData[{
Cell[779224, 13905, 216, 4, 70, "Input",ExpressionUUID->"302559fc-253b-4376-9fdb-3cd6fbc3ff12",
 CellID->509781875],
Cell[779443, 13911, 820, 14, 89, "Output",ExpressionUUID->"e29fdfad-9084-411c-86c6-6a4820744385",
 CellID->2056356806]
}, Open  ]],
Cell[780278, 13928, 356, 8, 70, "TechNoteMathCaption",ExpressionUUID->"d85f8561-3d0b-4024-9bb3-1c5090254f47",
 CellID->1991854146],
Cell[CellGroupData[{
Cell[780659, 13940, 219, 4, 70, "Input",ExpressionUUID->"c3547231-5860-47b2-9a75-ca973cbc6c95",
 CellID->586211615],
Cell[780881, 13946, 1485, 44, 89, "Output",ExpressionUUID->"d55bcb2a-b786-4083-b9b1-49b01de64181",
 CellID->2030616376]
}, Open  ]],
Cell[782381, 13993, 316, 7, 70, "TechNoteMathCaption",ExpressionUUID->"0382078e-eb1d-4b80-a773-1aa5617e0d05",
 CellID->198413051],
Cell[CellGroupData[{
Cell[782722, 14004, 246, 6, 70, "Input",ExpressionUUID->"22fda337-b58a-49b8-a024-d3dd0ae08a8a",
 CellID->474450722],
Cell[782971, 14012, 129, 2, 37, "Output",ExpressionUUID->"1383e070-1d1c-4fbc-a640-fcbaa1f5dc80",
 CellID->90174421]
}, Open  ]],
Cell[783115, 14017, 137, 1, 70, "TechNoteMathCaption",ExpressionUUID->"ba2bb5ac-6717-4e5d-9b7d-b87bffa511fe",
 CellID->505478639],
Cell[CellGroupData[{
Cell[783277, 14022, 405, 9, 70, "Input",ExpressionUUID->"ef40ae50-a779-4116-a06e-e77da9593c86",
 CellID->134178141],
Cell[783685, 14033, 154, 2, 37, "Output",ExpressionUUID->"24f16544-bf7b-46d5-bf7c-1e35173187b6",
 CellID->486719834]
}, Open  ]],
Cell[783854, 14038, 171, 3, 70, "TechNoteText",ExpressionUUID->"91ca8a30-18d0-4da3-9ee1-40e2e9263d11",
 CellID->586218473],
Cell[784028, 14043, 158, 2, 70, "TechNoteMathCaption",ExpressionUUID->"7c249bac-ecdc-4ed8-bee4-c7095549da06",
 CellID->806281427],
Cell[784189, 14047, 245, 6, 70, "Input",ExpressionUUID->"b73fd11b-ac49-4ad1-9080-704a3281e984",
 CellID->945678457],
Cell[CellGroupData[{
Cell[784459, 14057, 199, 4, 70, "Input",ExpressionUUID->"6d729271-36c6-4fab-ba39-f728b3e70897",
 CellID->1358433434],
Cell[784661, 14063, 131, 2, 37, "Output",ExpressionUUID->"6140c966-160a-416f-8892-dba2d9a20c0f",
 CellID->2031580328]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[784841, 14071, 114, 1, 70, "TechNoteSection",ExpressionUUID->"e3408bf7-840b-4053-bd74-0bc686f2291b",
 CellID->739144260],
Cell[CellGroupData[{
Cell[784980, 14076, 107, 1, 70, "Subsection",ExpressionUUID->"9eb51b1e-f4f9-49ad-8909-ca9b070dbbe1",
 CellID->911769301],
Cell[785090, 14079, 231, 4, 70, "TechNoteText",ExpressionUUID->"8df3fc63-2a2e-46ee-bf42-8723cc720ba2",
 CellID->348127237],
Cell[CellGroupData[{
Cell[785346, 14087, 353, 8, 70, "Input",ExpressionUUID->"c84a1c4c-e792-4d0b-886c-a96780bfcf50",
 CellID->1883758637],
Cell[785702, 14097, 157, 2, 37, "Output",ExpressionUUID->"d05e3bf6-f9ac-44cc-961d-f9f22f4fc785",
 CellID->51980830]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[785908, 14105, 110, 1, 70, "Subsection",ExpressionUUID->"46fe0999-275c-455c-9de8-45db4b42e666",
 CellID->268386053],
Cell[786021, 14108, 582, 15, 70, "TechNoteText",ExpressionUUID->"aa771def-2453-4851-8f1c-c055547a2618",
 CellID->1763449128],
Cell[786606, 14125, 153, 1, 70, "TechNoteMathCaption",ExpressionUUID->"3707f605-29fc-4bab-b6a7-2ae0937c476e",
 CellID->325781772],
Cell[CellGroupData[{
Cell[786784, 14130, 354, 8, 70, "Input",ExpressionUUID->"c18c0092-c210-4dc8-a8ab-708b530aca23",
 CellID->1478425801],
Cell[787141, 14140, 127, 2, 37, "Output",ExpressionUUID->"14657af0-acc2-4ab7-bbc2-128d18c67c95",
 CellID->810350803]
}, Open  ]],
Cell[787283, 14145, 625, 16, 70, "TechNoteText",ExpressionUUID->"e12ed454-c3c3-4d83-8ba5-96c334481b15",
 CellID->234817779],
Cell[787911, 14163, 154, 1, 70, "TechNoteMathCaption",ExpressionUUID->"10b946f4-311d-46ae-97c2-aa5cfa9b850b",
 CellID->1137381590],
Cell[CellGroupData[{
Cell[788090, 14168, 566, 13, 70, "Input",ExpressionUUID->"aa40a78d-2ffe-42c1-bd0d-0f48c89e13a9",
 CellID->1402498802],
Cell[788659, 14183, 4150, 87, 70, "Output",ExpressionUUID->"af4ad611-23b1-4e5a-a043-f333c6b10d03",
 CellID->2043123980]
}, Open  ]],
Cell[CellGroupData[{
Cell[792846, 14275, 169, 3, 70, "Input",ExpressionUUID->"95131637-0205-4775-8ba6-c147fddda31a",
 CellID->1220441183],
Cell[793018, 14280, 209, 5, 37, "Output",ExpressionUUID->"2ba001d9-bc4a-45e0-9879-b5b7afc9237e",
 CellID->1654515660]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[793288, 14292, 113, 1, 70, "TechNoteSection",ExpressionUUID->"26100ca1-edc6-4947-a726-808e8b81c06c",
 CellID->2118948183],
Cell[793404, 14295, 1502, 37, 70, "TechNoteText",ExpressionUUID->"90fd1f81-66c9-4f1b-8889-cdd332486d7c",
 CellID->667725448]
}, Open  ]],
Cell[CellGroupData[{
Cell[794943, 14337, 716, 18, 70, "TutorialMoreAboutSection",ExpressionUUID->"2f60c51e-5759-4bd9-856a-0f42e9bf1ed6"],
Cell[795662, 14357, 81, 0, 70, "Input",ExpressionUUID->"76a66799-7a75-4419-80b8-85bae8cabfba"]
}, Open  ]],
Cell[795758, 14360, 78, 0, 70, "FooterCell",ExpressionUUID->"e8e02054-c270-46c9-b7e0-c837dd56a928"]
}
]
*)

(* End of internal cache information *)

