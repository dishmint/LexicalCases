(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1760225,      34576]
NotebookOptionsPosition[   1742677,      34284]
NotebookOutlinePosition[   1743073,      34300]
CellTagsIndexPosition[   1743030,      34297]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["TextPatternCases | Demo", "Title",
 CellChangeTimes->{{3.846034381638287*^9, 3.846034390760312*^9}, {
  3.84628454102489*^9, 3.846284541997562*^9}, {3.846284796267688*^9, 
  3.846284798722208*^9}},ExpressionUUID->"7428b188-1d93-45c3-ac0b-\
40bc273b6198"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.846037292237047*^9, 3.846037293044958*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"677e03af-6afa-49c0-afa1-d8f32ee345b8"],

Cell[CellGroupData[{

Cell[TextData[{
 "for some reason this ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"<<", "TextPatternCases`"}], "Input"], TraditionalForm]],
  ExpressionUUID->"a3882fca-0907-4f15-8111-b7337a2c31f9"],
 "loads the old definitions, the code below with the full path loads the new \
definitions."
}], "Item",
 CellChangeTimes->{{3.846037067454616*^9, 3.846037095674312*^9}, {
  3.846284558521923*^9, 3.846284558521968*^9}, {3.8463715253908653`*^9, 
  3.8463715262191477`*^9}},ExpressionUUID->"6330727c-6baf-45b0-b6eb-\
f99d78a79b1f"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  "\"\</Users/faizonzaman/Documents/Programs/comp-exp/prj/TextSequenceCases/\
TextPatternCases.wl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8460370393303823`*^9, 3.8460370465098133`*^9}, {
  3.846284548224585*^9, 3.846284549520116*^9}, {3.846284803250808*^9, 
  3.84628480631293*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"40e2ebf9-2e3c-4029-863f-1431d04dc66f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TextPatternCases`*"}]], "Input",
 CellChangeTimes->{{3.84603705037425*^9, 3.846037055522493*^9}, 
   3.846284563600247*^9, {3.846284823589716*^9, 3.846284826802766*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9b5829f8-2560-449e-96f0-b35e1c319419"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["TextPatternCases`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["TextPatternCases`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ContentAssociation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "ContentAssociation", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["EscapePunctuation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "EscapePunctuation", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OptionalTextPattern", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "OptionalTextPattern", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TextPattern", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextPattern", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TextPatternSequence", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextPatternSequence", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["TextPatternToRegularExpression", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextPatternToRegularExpression", "TextPatternCases`"}, 
                   False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["ConvertToWikipediaSearchQuery", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "ConvertToWikipediaSearchQuery", "TextPatternCases`"}, 
                   False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["GenerateRegularExpressionTemplate", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "GenerateRegularExpressionTemplate", "TextPatternCases`"}, 
                   False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OrderlessTextPattern", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "OrderlessTextPattern", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TextPatternCases", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextPatternCases", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TextPatternSummary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextPatternSummary", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TextType", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-ad0c918b-9c53-47bb-a0b0-fda0c3b9839f", {
                   "TextType", "TextPatternCases`"}, False},
                 ButtonNote->"TextPatternCases`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.15833333333333333`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.846037056010913*^9, 3.8460378516541967`*^9, 
  3.84603827297647*^9, 3.8462845848655167`*^9, 3.846284830520833*^9, 
  3.846287206414019*^9, 3.846370989296157*^9, 3.846371387213366*^9, 
  3.846371531469516*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"37055b34-32db-4032-a23a-117837a4274c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Example", "Section",
 CellChangeTimes->{{3.8461641833464108`*^9, 3.8461641839486*^9}, {
  3.8462850529251823`*^9, 
  3.846285054433629*^9}},ExpressionUUID->"26cfe700-1bd4-41c4-80f4-\
8cc395b6a19f"],

Cell["Find cases of a TextPattern in a string.", "CodeText",
 CellChangeTimes->{{3.8462848764587107`*^9, 
  3.8462848933462267`*^9}},ExpressionUUID->"62977076-cf0b-4791-bd62-\
4e7892dad6a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternCases", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{"\"\<here is a very \>\"", ",", 
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], ",", 
     "\"\< sentence\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.846037107444057*^9, 3.846037109334264*^9}, {
   3.84603786656485*^9, 3.846037871016097*^9}, 3.84628483934088*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"06f13119-0eca-4f3e-af45-9d64c3b15725"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TextPatternSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> here is a very  (: Adjective :)  sentence <)\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> here is a very  (: Adjective :)  sentence <)\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TextPatternCases`TextPatternSummary[
   Association["Data" -> {
      Association[
      "Match" -> "here is a very nice sentence", "Position" -> {{1, 28}}]}, 
    "Source" -> "Text", "MatchCount" -> 1, "TextPattern" -> 
    "(> here is a very  (: Adjective :)  sentence <)"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.846036092985343*^9, 3.846036862790895*^9, {3.846036993984003*^9, 
   3.846036997611322*^9}, {3.846037099176839*^9, 3.846037110018897*^9}, 
   3.8460373200712347`*^9, {3.8460378647275248`*^9, 3.846037871447194*^9}, 
   3.8460799687636003`*^9, {3.846098075398444*^9, 3.846098102371751*^9}, 
   3.8460981578974037`*^9, 3.8462848484277773`*^9, 3.8462858479610033`*^9, 
   3.846286285954921*^9, 3.8463709948319263`*^9, 3.846371153105966*^9, 
   3.846371394169989*^9, {3.84637150986777*^9, 3.846371539661772*^9}, 
   3.8463715824456463`*^9, 3.846371628179248*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"3aaac103-3ffc-41d4-b84c-0109cc8e11f6"]
}, Open  ]],

Cell["Whitespace can be its own token.", "CodeText",
 CellChangeTimes->{{3.8462849615932703`*^9, 
  3.846285001379883*^9}},ExpressionUUID->"fcd4dee6-7d65-4ef2-8491-\
3cd4cfb93dc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternCases", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{"\"\<here is a very\>\"", ",", "\"\< \>\"", ",", 
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], ",", "\"\< \>\"", 
     ",", " ", "\"\<sentence.\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8460378804457808`*^9, 3.846037893676643*^9}, 
   3.846098116559553*^9, 3.846284940444901*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"fe3127a9-13df-4639-bcb3-b0fc696bed26"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TextPatternSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> here is a very   (: Adjective :)   sentence. <)\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> here is a very   (: Adjective :)   sentence. <)\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TextPatternCases`TextPatternSummary[
   Association["Data" -> {
      Association[
      "Match" -> "here is a very nice sentence.", "Position" -> {{1, 29}}]}, 
    "Source" -> "Text", "MatchCount" -> 1, "TextPattern" -> 
    "(> here is a very   (: Adjective :)   sentence. <)"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846037894677404*^9, 3.846079984012663*^9, 
  3.846098117126865*^9, 3.8460981593295097`*^9, 3.846284941965589*^9, 
  3.846285850469153*^9, 3.846286288218339*^9, 3.846371639970579*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"0b5ce1b0-a0de-4703-a608-a90833203045"]
}, Open  ]],

Cell["Look just for TextContent types.", "CodeText",
 CellChangeTimes->{{3.846285016865449*^9, 
  3.846285032324238*^9}},ExpressionUUID->"3ad239d7-ccc5-4219-a84b-\
f205659c780f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternCases", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "|", 
     RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.846285006309843*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"b00caf5f-56f6-422f-b115-2a1b976b2f5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TextPatternSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> (: Adjective :) | (: Noun :) <)\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"TextPattern: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"(> (: Adjective :) | (: Noun :) <)\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MatchCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TextPatternCases`TextPatternSummary[
   Association["Data" -> {
      Association["Match" -> "nice", "Position" -> {{16, 19}}], 
      Association["Match" -> "sentence", "Position" -> {{21, 28}}]}, "Source" -> 
    "Text", "MatchCount" -> 2, "TextPattern" -> 
    "(> (: Adjective :) | (: Noun :) <)"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8460360982411213`*^9, 3.84603711625149*^9, 
  3.846037322949741*^9, 3.846037903316023*^9, 3.84607999418266*^9, 
  3.846098167593576*^9, 3.846285009072295*^9, 3.846285852970093*^9, 
  3.846286290238372*^9, 3.846371650987759*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"55e1126f-5065-4e0b-b7e0-0da45fb62cb0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Process", "Section",
 CellChangeTimes->{{3.8462850434174013`*^9, 
  3.846285047050827*^9}},ExpressionUUID->"dee133f7-20eb-44dd-bd76-\
04b6aa748b9e"],

Cell[TextData[{
 "The first thing that happens is the ",
 Cell[BoxData[
  FormBox[
   StyleBox["TextPattern", "Input"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df7a9942-571a-4ee3-96e8-3fbf5391985a"],
 " is converted to a regular expression."
}], "Text",
 CellChangeTimes->{{3.846285068098103*^9, 
  3.84628509354996*^9}},ExpressionUUID->"82176a71-d3d5-424a-b334-\
64233911f4fe"],

Cell["Convert a TextPattern to a RegularExpression", "CodeText",
 CellChangeTimes->{{3.846285063657876*^9, 3.846285064539233*^9}, {
  3.846285104484865*^9, 
  3.846285116932267*^9}},ExpressionUUID->"b4b3563d-1025-4f7e-809f-\
764980aaa76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternToRegularExpression", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "|", 
     RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.84603715688697*^9, 3.8460371669610233`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ca8b0da6-7555-4040-956e-ce57386bd9b0"],

Cell[BoxData[
 RowBox[{"RegularExpression", "[", "\<\"(nice|sentence)\"\>", "]"}]], "Output",\

 CellChangeTimes->{3.846037167394102*^9, 3.8460373536163073`*^9, 
  3.846037906537759*^9, 3.846080012439888*^9, 3.8462851189369497`*^9, 
  3.846285858452078*^9, 3.846286293186388*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"cb4abd08-6401-47bf-9411-0f7eec9aaeea"]
}, Closed]],

Cell["\<\
You\[CloseCurlyQuote]ll notice this function takes the source text as its \
first argument, that\[CloseCurlyQuote]s because TextTypes are replaced by \
their examples from the source text. Essentially what happens next is \
StringCases is called on the source text using this RegularExpression.\
\>", "Text",
 CellChangeTimes->{{3.846285122563258*^9, 3.846285177517223*^9}, {
  3.846285234541601*^9, 
  3.846285256437153*^9}},ExpressionUUID->"8ec4de0f-0ecc-48f8-b06a-\
a93a5d43e045"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternToRegularExpression", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}], ",", 
     RowBox[{"TextType", "[", "\"\<Punctuation\>\"", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.846285282102869*^9, 3.8462852930831842`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"71edd9b1-5585-4a72-afeb-a92148b90faf"],

Cell[BoxData[
 RowBox[{"RegularExpression", "[", "\<\"sentence.\"\>", "]"}]], "Output",
 CellChangeTimes->{{3.8462852871672*^9, 3.8462852934775963`*^9}, 
   3.8462858608878202`*^9, 3.846286301021606*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ec8fe3f7-86a6-4f4b-b460-c9016ae5615c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternCases", "[", 
  RowBox[{
  "\"\<here is a very nice sentence. this one is what it is.\>\"", ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Noun\>\"", "]"}], ",", 
     RowBox[{"TextType", "[", "\"\<Punctuation\>\"", "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.846285227271325*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"a3d67757-5fec-4ab8-853c-8855ca2df6d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"sentence.\"\>"}], ",", 
    RowBox[{"\<\"Position\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"21", ",", "29"}], "}"}], "}"}]}]}], "\[RightAssociation]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.846036109517632*^9, 3.846037363589321*^9, 
  3.846037912408003*^9, 3.846080020336376*^9, 3.846286324278995*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"ddc89d5e-d9c7-46e4-b26f-979483ef551b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextPatternCases", "[", 
  RowBox[{
   RowBox[{"\"\<Content\>\"", "->", "\"\<music\>\""}], ",", 
   RowBox[{"TextPattern", "[", 
    RowBox[{"\"\<music by \>\"", ",", 
     RowBox[{"TextType", "[", "\"\<Person\>\"", "]"}]}], "]"}], ",", 
   RowBox[{"MaxItems", "->", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.846038863298153*^9, 3.846038871628324*^9}, {
  3.8460390646869183`*^9, 3.8460390648303127`*^9}, {3.846286450604988*^9, 
  3.846286468813737*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"96a2829d-390b-4432-a7b6-4acf2b0eda5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Music\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Music (disambiguation)\"\>"}],
      ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Electronic music\"\>"}], ",", 
     
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Music genre\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Music video\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846039709503243*^9, 3.846039862574863*^9, 
  3.846040745315424*^9, 3.846286572944277*^9, 3.846287295997707*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fef961dd-83cc-4ee2-94b9-a3f07ba4ff3f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Origin of Species Example", "Section",
 CellChangeTimes->{{3.8461641392447023`*^9, 
  3.846164143085919*^9}},ExpressionUUID->"e0ff93e8-103d-44df-80c7-\
8ce5a0be5d47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"originOfSpecies", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<OriginOfSpecies\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.846040873818598*^9, 3.846040894667199*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cd6d984d-5274-4ad1-b15e-3af149fe6cd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oosp1", "=", 
   RowBox[{"TextPattern", "[", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}], ",", "\"\< \>\"", ",", 
     
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], ",", 
     RowBox[{"\"\< species\>\"", "|", "\"\< specie\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.846040904826392*^9, 3.846040914421834*^9}, {
  3.846040951231185*^9, 3.8460409592546864`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6b0768fe-1278-4d09-8c4a-c1c57f27af94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oosp1R", "=", 
   RowBox[{"TextPatternCases", "[", 
    RowBox[{"originOfSpecies", ",", "oosp1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.846040923840867*^9, 3.846040932869364*^9}, {
  3.846164028210785*^9, 3.846164072690855*^9}, {3.846287354013919*^9, 
  3.846287356653007*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c4308c4e-98bb-4fb2-9fd2-ae7b621fb429"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TextPatternSummary"}]], "Input",
 CellChangeTimes->{{3.846371691479726*^9, 3.846371695215795*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9c79765b-3482-41c5-8855-99e1d448d335"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"TextPatternString\\\", \\\"Counts\\\", and \\\"CountGroups\\\"\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Data\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Dataset\"", "]"}], ":=", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Counts\"", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}], "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Match\"", "\[Rule]", "\"Match\""}], ",", 
                    RowBox[{"\"Count\"", "\[Rule]", 
                    RowBox[{"\"Position\"", "/*", "Length"}]}]}], "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}], "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Match\"", "\[Rule]", "\"Match\""}], ",", 
                    RowBox[{"\"Count\"", "\[Rule]", 
                    RowBox[{"\"Position\"", "/*", "Length"}]}]}], "]"}]}], 
                    "]"}], "[", 
                    RowBox[{"SortBy", "[", "\"Count\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}], "[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Match\"", "\[Rule]", "\"Match\""}], ",", 
                    RowBox[{"\"Count\"", "\[Rule]", 
                    RowBox[{"\"Position\"", "/*", "Length"}]}]}], "]"}]}], 
                    "]"}], "[", 
                    RowBox[{"ReverseSortBy", "[", "\"Count\"", "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"CountGroups\"", "]"}], ":=", 
                    RowBox[{"Private`CountGroups", "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCount\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"MatchCount\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPattern\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"TextPattern\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Source\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPatternString\"", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "\"TextPatternString\"", "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" Format Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"FormatValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "FormatValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    StyleBox[
                    "TextPatternSummary /: \
MakeBoxes[Private`obj:TextPatternSummary[(Private`asc_)?Private`\
TextPatternSummaryAscQ], Private`form:StandardForm | TraditionalForm] := \
Module[{Private`above, Private`below}, Private`above = \
{{BoxForm`SummaryItem[{\"Source: \", Private`asc[\"Source\"]}]}, \
{BoxForm`SummaryItem[{\"TextPatternString: \", \
Private`asc[\"TextPatternString\"]}]}, {BoxForm`SummaryItem[{\"MatchCount: \
\", Private`asc[\"MatchCount\"]}]}}; Private`below = {}; \
BoxForm`ArrangeSummaryBox[TextPatternSummary, Private`obj, None, \
Private`above, Private`below, Private`form, \"Interpretable\" -> Automatic]]",
                     ShowStringCharacters -> True, NumberMarks -> True]}, {
                   " "}}, ColumnAlignments -> Left, 
                  GridBaseline -> {Baseline, {1, 1}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TextPatternCases`TextPatternSummary\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"TextPatternString\\\", \\\"Counts\\\", and \\\"CountGroups\\\"\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Represents the results of TextPatternCases. Possible accessors are: \
\"Data\", \"Source\", \"MatchCount\", \"TextPatternString\", \"Counts\", and \
\"CountGroups\"", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> 
    Information`InformationValueForm[
     SubValues, TextPatternCases`TextPatternSummary, {
      TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Data"] :> 
       Private`asc["Data"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Dataset"] :> Dataset[
         Private`asc["Data"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts"] :> Dataset[
         Private`asc["Data"]][All, 
         Association[
         "Match" -> "Match", "Count" -> 
          RightComposition["Position", Length]]], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Ascending"] :> 
       Dataset[
         Private`asc["Data"]][All, 
         Association[
         "Match" -> "Match", "Count" -> RightComposition["Position", Length]]][
         SortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Descending"] :> 
       Dataset[
         Private`asc["Data"]][All, 
         Association[
         "Match" -> "Match", "Count" -> RightComposition["Position", Length]]][
         ReverseSortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["CountGroups"] :> 
       Private`CountGroups[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCount"] :> 
       Private`asc["MatchCount"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPattern"] :> 
       Private`asc["TextPattern"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Source"] :> 
       Private`asc["Source"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPatternString"] :> 
       Private`asc["TextPatternString"]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> 
    Information`InformationValueForm[
     FormatValues, TextPatternCases`TextPatternSummary, {MakeBoxes[
         Pattern[Private`obj, 
          TextPatternCases`TextPatternSummary[
           PatternTest[
            Pattern[Private`asc, 
             Blank[]], Private`TextPatternSummaryAscQ]]], 
         Pattern[Private`form, 
          Alternatives[StandardForm, TraditionalForm]]] :> 
       Module[{Private`above, Private`below}, Private`above = {{
             BoxForm`SummaryItem[{"Source: ", 
               Private`asc["Source"]}]}, {
             BoxForm`SummaryItem[{"TextPatternString: ", 
               Private`asc["TextPatternString"]}]}, {
             BoxForm`SummaryItem[{"MatchCount: ", 
               Private`asc["MatchCount"]}]}}; Private`below = {}; 
         BoxForm`ArrangeSummaryBox[
          TextPatternCases`TextPatternSummary, Private`obj, None, 
           Private`above, Private`below, Private`form, "Interpretable" -> 
           Automatic]]}], "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TextPatternCases`TextPatternSummary"], False]]], "Output",
 CellChangeTimes->{3.846371698710642*^9, 3.8463718547904673`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"551712b8-d776-4464-b1fc-dd53b749a6d6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846371737775423*^9, 3.846371748882962*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5caee727-bf0d-4b92-aa8c-f846ebd158eb"],

Cell[BoxData["\<\"Text\"\>"], "Output",
 CellChangeTimes->{3.846371749334936*^9, 3.8463717801969433`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"00879887-b84a-4c9e-b27d-6de85a4bf40d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", "\"\<MatchCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846371788349237*^9, 3.846371789596223*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"f9be4e86-268a-4767-92f1-034fb218b02d"],

Cell[BoxData["83"], "Output",
 CellChangeTimes->{3.846371790033235*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"fdf0bc18-09d0-4e50-9563-3c449ecfaed9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", "\"\<TextPatternString\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846371796396654*^9, 3.846371798283517*^9}, {
  3.846371857971775*^9, 3.8463718586419287`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c6172845-d914-4dc3-9cc6-83c8a17c82ce"],

Cell[BoxData["\<\"(> (: Adverb :)   (: Adjective :)  species |  specie \
<)\"\>"], "Output",
 CellChangeTimes->{3.846371798820119*^9, 3.8463718590531397`*^9, 
  3.8463718904565496`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"06a1c2e6-c558-4f58-8f6b-51b326669698"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463719048023148`*^9, 3.846371905260289*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"685c1aa8-6594-4d20-bd1e-348ac01c36be"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "generally extinct species", "Count" -> 1], 
       Association["Match" -> "aboriginally distinct species", "Count" -> 3], 
       
       Association["Match" -> "even wild species", "Count" -> 1], 
       Association["Match" -> "so many species", "Count" -> 1], 
       Association[
       "Match" -> "extraordinarily abnormal species", "Count" -> 1], 
       Association["Match" -> "as distinct species", "Count" -> 16], 
       Association["Match" -> "as good species", "Count" -> 1], 
       Association["Match" -> "as undoubted species", "Count" -> 2], 
       Association["Match" -> "as independent species", "Count" -> 1], 
       Association["Match" -> "closely related species", "Count" -> 2], 
       Association["Match" -> "here many species", "Count" -> 4], 
       Association["Match" -> "ever many species", "Count" -> 2], 
       Association["Match" -> "as incipient species", "Count" -> 1], 
       Association["Match" -> "as doubtful species", "Count" -> 1], 
       Association["Match" -> "most vigorous species", "Count" -> 1], 
       Association["Match" -> "already existing species", "Count" -> 1], 
       Association["Match" -> "here more species", "Count" -> 1], 
       Association["Match" -> "as new species", "Count" -> 2], 
       Association["Match" -> "nearly extreme species", "Count" -> 1], 
       Association["Match" -> "widely diffused species", "Count" -> 1], 
       Association["Match" -> "more ancient species", "Count" -> 2], 
       Association["Match" -> "most ancient species", "Count" -> 1], 
       Association["Match" -> "very distinct species", "Count" -> 6], 
       Association["Match" -> "most distinct species", "Count" -> 1], 
       Association["Match" -> "as representative species", "Count" -> 1], 
       Association["Match" -> "very same species", "Count" -> 2], 
       Association["Match" -> "more aboriginal species", "Count" -> 1], 
       Association["Match" -> "very many species", "Count" -> 1], 
       Association["Match" -> "extremely close species", "Count" -> 1], 
       Association["Match" -> "particularly distinct species", "Count" -> 1], 
       
       Association["Match" -> "together various species", "Count" -> 1], 
       Association["Match" -> "widely distinct species", "Count" -> 1], 
       Association["Match" -> "nearly related species", "Count" -> 1], 
       Association["Match" -> "all living species", "Count" -> 1], 
       Association["Match" -> "still existing species", "Count" -> 1], 
       Association["Match" -> "very fine species", "Count" -> 1], 
       Association["Match" -> "now extinct species", "Count" -> 2], 
       Association["Match" -> "very few species", "Count" -> 1], 
       Association["Match" -> "more dominant species", "Count" -> 1], 
       Association["Match" -> "too few species", "Count" -> 1], 
       Association["Match" -> "all peculiar species", "Count" -> 1], 
       Association["Match" -> "so certain species", "Count" -> 1], 
       Association["Match" -> "as many species", "Count" -> 1], 
       Association["Match" -> "quite distinct species", "Count" -> 1], 
       Association["Match" -> "only herbaceous species", "Count" -> 1], 
       Association["Match" -> "extremely few species", "Count" -> 1], 
       Association["Match" -> "still older species", "Count" -> 1], 
       Association["Match" -> "either single species", "Count" -> 1], 
       Association["Match" -> "yet distinct species", "Count" -> 1], 
       Association["Match" -> "not real species", "Count" -> 1], 
       Association["Match" -> "already recorded species", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 51, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["generally extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["aboriginally distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["even wild species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["so many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["extraordinarily abnormal species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as good species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as undoubted species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as independent species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["closely related species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["here many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ever many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as incipient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as doubtful species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most vigorous species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["already existing species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["here more species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as new species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["nearly extreme species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["widely diffused species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{397., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{397., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8463719059645853`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"437ce6ac-f380-4312-85ad-387f3c912e1a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", 
  RowBox[{"\"\<Counts\>\"", ",", "\"\<Ascending\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.84637191641406*^9, 3.8463719192286777`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"fef8778e-69d1-46f0-8693-9be51fe04d71"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "all living species", "Count" -> 1], 
       Association["Match" -> "all peculiar species", "Count" -> 1], 
       Association["Match" -> "already existing species", "Count" -> 1], 
       Association["Match" -> "already recorded species", "Count" -> 1], 
       Association["Match" -> "as doubtful species", "Count" -> 1], 
       Association["Match" -> "as good species", "Count" -> 1], 
       Association["Match" -> "as incipient species", "Count" -> 1], 
       Association["Match" -> "as independent species", "Count" -> 1], 
       Association["Match" -> "as many species", "Count" -> 1], 
       Association["Match" -> "as representative species", "Count" -> 1], 
       Association["Match" -> "either single species", "Count" -> 1], 
       Association["Match" -> "even wild species", "Count" -> 1], 
       Association[
       "Match" -> "extraordinarily abnormal species", "Count" -> 1], 
       Association["Match" -> "extremely close species", "Count" -> 1], 
       Association["Match" -> "extremely few species", "Count" -> 1], 
       Association["Match" -> "generally extinct species", "Count" -> 1], 
       Association["Match" -> "here more species", "Count" -> 1], 
       Association["Match" -> "more aboriginal species", "Count" -> 1], 
       Association["Match" -> "more dominant species", "Count" -> 1], 
       Association["Match" -> "most ancient species", "Count" -> 1], 
       Association["Match" -> "most distinct species", "Count" -> 1], 
       Association["Match" -> "most vigorous species", "Count" -> 1], 
       Association["Match" -> "nearly extreme species", "Count" -> 1], 
       Association["Match" -> "nearly related species", "Count" -> 1], 
       Association["Match" -> "not real species", "Count" -> 1], 
       Association["Match" -> "only herbaceous species", "Count" -> 1], 
       Association["Match" -> "particularly distinct species", "Count" -> 1], 
       
       Association["Match" -> "quite distinct species", "Count" -> 1], 
       Association["Match" -> "so certain species", "Count" -> 1], 
       Association["Match" -> "so many species", "Count" -> 1], 
       Association["Match" -> "still existing species", "Count" -> 1], 
       Association["Match" -> "still older species", "Count" -> 1], 
       Association["Match" -> "together various species", "Count" -> 1], 
       Association["Match" -> "too few species", "Count" -> 1], 
       Association["Match" -> "very few species", "Count" -> 1], 
       Association["Match" -> "very fine species", "Count" -> 1], 
       Association["Match" -> "very many species", "Count" -> 1], 
       Association["Match" -> "widely diffused species", "Count" -> 1], 
       Association["Match" -> "widely distinct species", "Count" -> 1], 
       Association["Match" -> "yet distinct species", "Count" -> 1], 
       Association["Match" -> "as new species", "Count" -> 2], 
       Association["Match" -> "as undoubted species", "Count" -> 2], 
       Association["Match" -> "closely related species", "Count" -> 2], 
       Association["Match" -> "ever many species", "Count" -> 2], 
       Association["Match" -> "more ancient species", "Count" -> 2], 
       Association["Match" -> "now extinct species", "Count" -> 2], 
       Association["Match" -> "very same species", "Count" -> 2], 
       Association["Match" -> "aboriginally distinct species", "Count" -> 3], 
       
       Association["Match" -> "here many species", "Count" -> 4], 
       Association["Match" -> "very distinct species", "Count" -> 6], 
       Association["Match" -> "as distinct species", "Count" -> 16]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 51, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["all living species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["all peculiar species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["already existing species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["already recorded species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as doubtful species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as good species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as incipient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as independent species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as representative species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["either single species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["even wild species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["extraordinarily abnormal species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["extremely close species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["extremely few species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["generally extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["here more species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["more aboriginal species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["more dominant species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{431., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{431., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846371919621895*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"725eb6b4-2d79-43ab-be8b-9755c68a6bdd"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", 
  RowBox[{"\"\<Counts\>\"", ",", "\"\<Descending\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8463719331501207`*^9, 3.846371934131104*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"0fcb6e2e-13b5-4a76-a09c-2322505e75b8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "as distinct species", "Count" -> 16], 
       Association["Match" -> "very distinct species", "Count" -> 6], 
       Association["Match" -> "here many species", "Count" -> 4], 
       Association["Match" -> "aboriginally distinct species", "Count" -> 3], 
       
       Association["Match" -> "very same species", "Count" -> 2], 
       Association["Match" -> "now extinct species", "Count" -> 2], 
       Association["Match" -> "more ancient species", "Count" -> 2], 
       Association["Match" -> "ever many species", "Count" -> 2], 
       Association["Match" -> "closely related species", "Count" -> 2], 
       Association["Match" -> "as undoubted species", "Count" -> 2], 
       Association["Match" -> "as new species", "Count" -> 2], 
       Association["Match" -> "yet distinct species", "Count" -> 1], 
       Association["Match" -> "widely distinct species", "Count" -> 1], 
       Association["Match" -> "widely diffused species", "Count" -> 1], 
       Association["Match" -> "very many species", "Count" -> 1], 
       Association["Match" -> "very fine species", "Count" -> 1], 
       Association["Match" -> "very few species", "Count" -> 1], 
       Association["Match" -> "too few species", "Count" -> 1], 
       Association["Match" -> "together various species", "Count" -> 1], 
       Association["Match" -> "still older species", "Count" -> 1], 
       Association["Match" -> "still existing species", "Count" -> 1], 
       Association["Match" -> "so many species", "Count" -> 1], 
       Association["Match" -> "so certain species", "Count" -> 1], 
       Association["Match" -> "quite distinct species", "Count" -> 1], 
       Association["Match" -> "particularly distinct species", "Count" -> 1], 
       
       Association["Match" -> "only herbaceous species", "Count" -> 1], 
       Association["Match" -> "not real species", "Count" -> 1], 
       Association["Match" -> "nearly related species", "Count" -> 1], 
       Association["Match" -> "nearly extreme species", "Count" -> 1], 
       Association["Match" -> "most vigorous species", "Count" -> 1], 
       Association["Match" -> "most distinct species", "Count" -> 1], 
       Association["Match" -> "most ancient species", "Count" -> 1], 
       Association["Match" -> "more dominant species", "Count" -> 1], 
       Association["Match" -> "more aboriginal species", "Count" -> 1], 
       Association["Match" -> "here more species", "Count" -> 1], 
       Association["Match" -> "generally extinct species", "Count" -> 1], 
       Association["Match" -> "extremely few species", "Count" -> 1], 
       Association["Match" -> "extremely close species", "Count" -> 1], 
       Association[
       "Match" -> "extraordinarily abnormal species", "Count" -> 1], 
       Association["Match" -> "even wild species", "Count" -> 1], 
       Association["Match" -> "either single species", "Count" -> 1], 
       Association["Match" -> "as representative species", "Count" -> 1], 
       Association["Match" -> "as many species", "Count" -> 1], 
       Association["Match" -> "as independent species", "Count" -> 1], 
       Association["Match" -> "as incipient species", "Count" -> 1], 
       Association["Match" -> "as good species", "Count" -> 1], 
       Association["Match" -> "as doubtful species", "Count" -> 1], 
       Association["Match" -> "already recorded species", "Count" -> 1], 
       Association["Match" -> "already existing species", "Count" -> 1], 
       Association["Match" -> "all peculiar species", "Count" -> 1], 
       Association["Match" -> "all living species", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 51], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 51, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["as distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["here many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["aboriginally distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very same species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["now extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["more ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ever many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["closely related species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as undoubted species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as new species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yet distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["widely distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["widely diffused species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very fine species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very few species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["too few species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["together various species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["still older species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 51, 1], {1, 51 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[51, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 51, 1], {1, 51 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{397., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{397., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846371934612978*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"36995695-1f4d-44d3-aaff-d3826e05fe26"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oosp1R", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846371944101722*^9, 3.8463719515900183`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"96c8253f-eeaf-4792-b1b7-bcf90876d91b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 16, "Matches" -> {"as distinct species"}], 
       
       Association["CountGroup" -> 6, "Matches" -> {"very distinct species"}], 
       Association["CountGroup" -> 4, "Matches" -> {"here many species"}], 
       Association[
       "CountGroup" -> 3, "Matches" -> {"aboriginally distinct species"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {
         "very same species", "now extinct species", "more ancient species", 
          "ever many species", "closely related species", 
          "as undoubted species", "as new species"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "yet distinct species", "widely distinct species", 
          "widely diffused species", "very many species", "very fine species",
           "very few species", "too few species", "together various species", 
          "still older species", "still existing species", "so many species", 
          "so certain species", "quite distinct species", 
          "particularly distinct species", "only herbaceous species", 
          "not real species", "nearly related species", 
          "nearly extreme species", "most vigorous species", 
          "most distinct species", "most ancient species", 
          "more dominant species", "more aboriginal species", 
          "here more species", "generally extinct species", 
          "extremely few species", "extremely close species", 
          "extraordinarily abnormal species", "even wild species", 
          "either single species", "as representative species", 
          "as many species", "as independent species", "as incipient species",
           "as good species", "as doubtful species", 
          "already recorded species", "already existing species", 
          "all peculiar species", "all living species"}]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 6], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     6, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{All, "CountGroup"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{All, "Matches"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{All, "Matches"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"as distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"as distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"very distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"here many species"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"here many species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"aboriginally distinct species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"aboriginally distinct species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very same species", "now extinct species", 
                    "more ancient species", "ever many species", 
                    "closely related species", "as undoubted species", 
                    "as new species"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"very same species", "now extinct species", 
                    "more ancient species", "ever many species", 
                    "closely related species", "as undoubted species", 
                    "as new species"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 40], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 40], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "1ae4387e-c7d6-4c47-b4d7-002b4eb87ef2"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{930., {101.134033203125, 106.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{930., {101.134033203125, 106.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.846371946138072*^9, 3.846371952113326*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"49bf304c-1738-47ee-9fd9-4ea192e16016"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Alice in Wonderland Example", "Section",
 CellChangeTimes->{{3.8461641467594337`*^9, 
  3.846164154161223*^9}},ExpressionUUID->"229d1031-7682-4ea6-b782-\
ff3021029701"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TextPatternSummary"}]], "Input",
 CellChangeTimes->{{3.8463723101057873`*^9, 3.84637231308165*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"bf75812a-d53c-4e9c-8711-c1879e0fa0f5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Data\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Dataset\"", "]"}], ":=", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Counts\"", "]"}], ":=", 
                    RowBox[{"Private`GetDatasetCounts", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Dataset\"", "]"}], ",", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"SortBy", "[", "\"Count\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    RowBox[{"Private`asc_", "?", 
                    "Private`TextPatternSummaryAscQ"}], "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"ReverseSortBy", "[", "\"Count\"", "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"CountGroups\"", "]"}], ":=", 
                    RowBox[{"Private`CountGroups", "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCount\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"MatchCount\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPattern\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"TextPattern\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Source\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPatternString\"", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "\"TextPatternString\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCounts\"", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "Private`invalidkey_", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "Private`invalidkey", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Ascending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Descending\""}], "]"}],
                     ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" Format Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"FormatValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "FormatValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    StyleBox[
                    "TextPatternSummary /: \
MakeBoxes[Private`obj:TextPatternSummary[(Private`asc_)?Private`\
TextPatternSummaryAscQ], Private`form:StandardForm | TraditionalForm] := \
Module[{Private`above, Private`below}, Private`above = \
{{BoxForm`SummaryItem[{\"Source: \", Private`asc[\"Source\"]}]}, \
{BoxForm`SummaryItem[{\"TextPatternString: \", \
Private`asc[\"TextPatternString\"]}]}, {BoxForm`SummaryItem[{\"MatchCount: \
\", Private`asc[\"MatchCount\"]}]}}; Private`below = {}; \
BoxForm`ArrangeSummaryBox[TextPatternSummary, Private`obj, None, \
Private`above, Private`below, Private`form, \"Interpretable\" -> Automatic]]",
                     ShowStringCharacters -> True, NumberMarks -> True]}, {
                   " "}}, ColumnAlignments -> Left, 
                  GridBaseline -> {Baseline, {1, 1}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TextPatternCases`TextPatternSummary\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Represents the results of TextPatternCases. Possible accessors are: \
\"Data\", \"Source\", \"MatchCount\", \"MatchCounts\", \"TextPatternString\", \
\"Counts\", and \"CountGroups\"", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
    Information`InformationValueForm[
     SubValues, TextPatternCases`TextPatternSummary, {
      TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Data"] :> 
       Private`asc["Data"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Dataset"] :> Dataset[
         Private`asc["Data"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts"] :> 
       Private`GetDatasetCounts[
         TextPatternCases`TextPatternSummary[Private`asc]["Dataset"], 
         Private`asc["Source"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Ascending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         SortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Descending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         ReverseSortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["CountGroups"] :> 
       Private`CountGroups[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCount"] :> 
       Private`asc["MatchCount"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPattern"] :> 
       Private`asc["TextPattern"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Source"] :> 
       Private`asc["Source"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPatternString"] :> 
       Private`asc["TextPatternString"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCounts"] :> (
        DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc]["Counts"]], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
         Pattern[Private`invalidkey, 
          Blank[]]] :> Private`asc[Private`invalidkey], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Ascending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Ascending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Descending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> 
    Information`InformationValueForm[
     FormatValues, TextPatternCases`TextPatternSummary, {MakeBoxes[
         Pattern[Private`obj, 
          TextPatternCases`TextPatternSummary[
           PatternTest[
            Pattern[Private`asc, 
             Blank[]], Private`TextPatternSummaryAscQ]]], 
         Pattern[Private`form, 
          Alternatives[StandardForm, TraditionalForm]]] :> 
       Module[{Private`above, Private`below}, Private`above = {{
             BoxForm`SummaryItem[{"Source: ", 
               Private`asc["Source"]}]}, {
             BoxForm`SummaryItem[{"TextPatternString: ", 
               Private`asc["TextPatternString"]}]}, {
             BoxForm`SummaryItem[{"MatchCount: ", 
               Private`asc["MatchCount"]}]}}; Private`below = {}; 
         BoxForm`ArrangeSummaryBox[
          TextPatternCases`TextPatternSummary, Private`obj, None, 
           Private`above, Private`below, Private`form, "Interpretable" -> 
           Automatic]]}], "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TextPatternCases`TextPatternSummary"], False]]], "Output",
 CellChangeTimes->{3.846372313696796*^9, 3.8463743978319817`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"d52b1d03-83d7-4767-a7e4-c6762aa57c1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"aliceInWonderland", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<AliceInWonderland\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.846040873818598*^9, 3.846040894667199*^9}, {
  3.846080058763612*^9, 3.8460800652200108`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0de3c16d-9adb-4cf0-bbd5-eabcb168bf12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aiw1", "=", 
   RowBox[{"TextPattern", "[", 
    RowBox[{"\"\<Alice \>\"", ",", 
     RowBox[{"TextType", "[", "\"\<Verb\>\"", "]"}], ",", "\"\< \>\"", ",", 
     " ", 
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.846040904826392*^9, 3.846040914421834*^9}, {
  3.846040951231185*^9, 3.8460409592546864`*^9}, {3.846080070169529*^9, 
  3.846080123159918*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5804ab16-c52a-4773-9f4e-3579ee6af9f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aiwlEX", "=", 
   RowBox[{"TextPatternCases", "[", 
    RowBox[{"aliceInWonderland", ",", "aiw1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.846040923840867*^9, 3.846040932869364*^9}, {
  3.846080128286763*^9, 3.846080131087381*^9}, {3.846372230334141*^9, 
  3.846372232675026*^9}, {3.8463722816598597`*^9, 3.8463722983936157`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"45f275ee-4988-4899-a2a3-8ce662a7b087"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372301854748*^9, 3.846372333440486*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"598cb319-97cd-4a69-a6f5-a97550a62130"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice had not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1349", ",", "1361"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"36142", ",", "36154"}], "}"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2548", ",", "2560"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice went back\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4360", ",", "4374"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice took up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"8488", ",", "8500"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice had no\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1349", ",", "1360"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"16084", ",", "16095"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"36142", ",", "36153"}], "}"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was so\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"18290", ",", "18301"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice could only\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"22528", ",", "22543"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice looked all\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"25145", ",", "25160"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice could not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"26380", ",", "26394"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was more\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"29462", ",", "29475"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice crouched down\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"30448", ",", "30466"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice went timidly\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"32290", ",", "32307"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was just\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"35021", ",", "35034"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice looked down\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"35170", ",", "35186"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice got up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"38307", ",", "38318"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"51619", ",", "51630"}], "}"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was very\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"43702", ",", "43715"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice looked up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"44556", ",", "44570"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was too\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"44958", ",", "44970"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846372333899991*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"bd0baadc-b504-42d5-8bef-09bd63ca82a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372344462983*^9, 3.8463723446690893`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"533df013-561d-4d45-9851-2895e4a95c13"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Match" -> "Alice had not", 
        "Position" -> {{1349, 1361}, {36142, 36154}}], 
       Association["Match" -> "Alice was not", "Position" -> {{2548, 2560}}], 
       
       Association[
       "Match" -> "Alice went back", "Position" -> {{4360, 4374}}], 
       Association["Match" -> "Alice took up", "Position" -> {{8488, 8500}}], 
       
       Association[
       "Match" -> "Alice had no", 
        "Position" -> {{1349, 1360}, {16084, 16095}, {36142, 36153}}], 
       Association["Match" -> "Alice was so", "Position" -> {{18290, 18301}}], 
       Association[
       "Match" -> "Alice could only", "Position" -> {{22528, 22543}}], 
       Association[
       "Match" -> "Alice looked all", "Position" -> {{25145, 25160}}], 
       Association[
       "Match" -> "Alice could not", "Position" -> {{26380, 26394}}], 
       Association[
       "Match" -> "Alice was more", "Position" -> {{29462, 29475}}], 
       Association[
       "Match" -> "Alice crouched down", "Position" -> {{30448, 30466}}], 
       Association[
       "Match" -> "Alice went timidly", "Position" -> {{32290, 32307}}], 
       Association[
       "Match" -> "Alice was just", "Position" -> {{35021, 35034}}], 
       Association[
       "Match" -> "Alice looked down", "Position" -> {{35170, 35186}}], 
       Association[
       "Match" -> "Alice got up", 
        "Position" -> {{38307, 38318}, {51619, 51630}}], 
       Association[
       "Match" -> "Alice was very", "Position" -> {{43702, 43715}}], 
       Association[
       "Match" -> "Alice looked up", "Position" -> {{44556, 44570}}], 
       Association[
       "Match" -> "Alice was too", "Position" -> {{44958, 44970}}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 18], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 18], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 2, 
     "DataRowCount" -> 18, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Alice had not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1349, 1361}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1349, 1361}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{36142, 36154}, ShowStringCharacters -> False], 
                  Style[
                   Style[{36142, 36154}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice was not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2548, 2560}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2548, 2560}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice went back", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{4360, 4374}, ShowStringCharacters -> False], 
                  Style[
                   Style[{4360, 4374}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice took up", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{8488, 8500}, ShowStringCharacters -> False], 
                  Style[
                   Style[{8488, 8500}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice had no", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1349, 1360}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1349, 1360}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{16084, 16095}, ShowStringCharacters -> False], 
                  Style[
                   Style[{16084, 16095}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["Alice was so", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{18290, 18301}, ShowStringCharacters -> False], 
                  Style[
                   Style[{18290, 18301}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice could only", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{22528, 22543}, ShowStringCharacters -> False], 
                  Style[
                   Style[{22528, 22543}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice looked all", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{25145, 25160}, ShowStringCharacters -> False], 
                  Style[
                   Style[{25145, 25160}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice could not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{26380, 26394}, ShowStringCharacters -> False], 
                  Style[
                   Style[{26380, 26394}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Alice was more", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{29462, 29475}, ShowStringCharacters -> False], 
                  Style[
                   Style[{29462, 29475}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 18, 1], {1, 18 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[18, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 18, 1], {1, 18 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{302., {202.634033203125, 208.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{302., {202.634033203125, 208.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846372345169668*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"bfdada70-1d72-46cd-9e02-96360e0f75d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372362513012*^9, 3.8463723632957277`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7b2f346a-7266-4dff-bc86-85884e7be711"],

Cell[BoxData["\<\"Text\"\>"], "Output",
 CellChangeTimes->{3.846372363599305*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"dc804625-5677-48ec-9e3b-148375b377d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<MatchCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372371833109*^9, 3.846372374621583*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"80107659-885a-4981-8bf4-35bd379a5941"],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.846372375062256*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a43e6184-08c4-47ac-9787-b43176c9ae14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<TextPatternString\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463723773823423`*^9, 3.8463723863352947`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"0ac9212d-651c-4b0b-af50-e8a6823d263e"],

Cell[BoxData["\<\"(> Alice  (: Verb :)   (: Adverb :) <)\"\>"], "Output",
 CellChangeTimes->{3.846372386820181*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"921c8451-dc50-4b4b-a050-80a95ef4bbb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372395286337*^9, 3.846372424328861*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"4b9a33f0-4079-4d24-b974-bd21e3253e25"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "Alice had not", "Count" -> 2], 
       Association["Match" -> "Alice was not", "Count" -> 1], 
       Association["Match" -> "Alice went back", "Count" -> 1], 
       Association["Match" -> "Alice took up", "Count" -> 1], 
       Association["Match" -> "Alice had no", "Count" -> 3], 
       Association["Match" -> "Alice was so", "Count" -> 1], 
       Association["Match" -> "Alice could only", "Count" -> 1], 
       Association["Match" -> "Alice looked all", "Count" -> 1], 
       Association["Match" -> "Alice could not", "Count" -> 1], 
       Association["Match" -> "Alice was more", "Count" -> 1], 
       Association["Match" -> "Alice crouched down", "Count" -> 1], 
       Association["Match" -> "Alice went timidly", "Count" -> 1], 
       Association["Match" -> "Alice was just", "Count" -> 1], 
       Association["Match" -> "Alice looked down", "Count" -> 1], 
       Association["Match" -> "Alice got up", "Count" -> 2], 
       Association["Match" -> "Alice was very", "Count" -> 1], 
       Association["Match" -> "Alice looked up", "Count" -> 1], 
       Association["Match" -> "Alice was too", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 18, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 18], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 18, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 18], "Path" -> {}, "DisplayedRowCount" -> 
     18, "DisplayedColumnCount" -> 2, "DataRowCount" -> 18, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Alice had not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice went back", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice took up", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice had no", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was so", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice could only", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice looked all", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice could not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was more", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice crouched down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice went timidly", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was just", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice looked down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice got up", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was very", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice looked up", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was too", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{234., {263.134033203125, 268.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{234., {263.134033203125, 268.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846372424980157*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"bc0bb8fa-b985-401a-8ad5-a590b3e0a512"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEX", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372429470476*^9, 3.846372435745194*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"14c415ea-0cc3-4f0b-bfcc-840d22af2152"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 3, "Matches" -> {"Alice had no"}], 
       Association[
       "CountGroup" -> 2, "Matches" -> {"Alice had not", "Alice got up"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "Alice went timidly", "Alice went back", "Alice was very", 
          "Alice was too", "Alice was so", "Alice was not", "Alice was more", 
          "Alice was just", "Alice took up", "Alice looked up", 
          "Alice looked down", "Alice looked all", "Alice crouched down", 
          "Alice could only", "Alice could not"}]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     3, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"Alice had no"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"Alice had no"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Alice had not", "Alice got up"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Alice had not", "Alice got up"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 15], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 15], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{249., {60.634033203125, 66.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{249., {60.634033203125, 66.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8463724384586887`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"29f92ad3-f472-450e-b3e1-78417dfb6c4b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"aiwlEXWiki", " ", "=", " ", 
   RowBox[{"TextPatternCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<alice in wonderland\>\""}], ",", 
     "aiw1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8460809253762693`*^9, 3.8460809255469017`*^9}, {
  3.846372476777514*^9, 3.8463724845354347`*^9}, {3.846372594473555*^9, 
  3.846372597553783*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"90ee521d-a460-45f5-b776-52659ceaf24f"],

Cell["Data", "CodeText",
 CellChangeTimes->{{3.846372639982904*^9, 
  3.846372640326778*^9}},ExpressionUUID->"fee0666f-f212-49f4-8cef-\
13e636c9fc80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463727281667213`*^9, 3.846372737224074*^9}, {
   3.8463729419140787`*^9, 3.846372943430479*^9}, 3.846372981634721*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"3f6b3900-cda9-4cf9-9f23-2770a74aaca9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice's Adventures in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is then\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"10580", ",", "10592"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice's Adventures in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice meets as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"12616", ",", "12629"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice's Adventures in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice might as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"22099", ",", "22112"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice's Adventures in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice do not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"23398", ",", "23409"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice fights again\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"865", ",", "882"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice feel more\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"16207", ",", "16221"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was also\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"21171", ",", "21184"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice plays better\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"29935", ",", "29952"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice did not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"30946", ",", "30958"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1951 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", 
      "\[Rule]", "\<\"Alice listens distractedly\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1703", ",", "1728"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1951 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is also\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"30147", ",", "30159"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1951 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice appears as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"31330", ",", "31345"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland syndrome\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice does not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"11044", ",", "11057"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice served as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"11562", ",", "11576"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice had previously\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"12177", ",", "12196"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (franchise)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1976 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice falls as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1536", ",", "1549"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Queen of Hearts (Alice's Adventures in \
Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice has never\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"852", ",", "866"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Queen of Hearts (Alice's Adventures in \
Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is only\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1225", ",", "1237"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Through the Looking-Glass\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Hatter (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice does not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2400", ",", "2413"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Hatter (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"13013", ",", "13024"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1999 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice shrinks again\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1823", ",", "1841"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1999 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice meets so\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"3345", ",", "3358"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1999 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is then\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3747", ",", "3759"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3932", ",", "3944"}], "}"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Caterpillar (Alice's Adventures in Wonderland)\"\>"}], 
     ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice does not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"465", ",", "478"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"White Rabbit\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Goodbye Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (disambiguation)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Works based on Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice runs away\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2368", ",", "2382"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice shrink again\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2433", ",", "2450"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice catches up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2719", ",", "2734"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice stumbles up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4337", ",", "4353"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice heads up\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"11272", ",", "11285"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1985 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice ran happily\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"12316", ",", "12332"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Films and television programmes based on Alice in \
Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1949 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is then\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"5992", ",", "6004"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1949 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice shouts angrily\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"6338", ",", "6357"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Portrayals of Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is well\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2422", ",", "2434"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Portrayals of Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice can also\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4855", ",", "4868"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Portrayals of Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was originally\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"6413", ",", "6432"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Portrayals of Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is again\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"13315", ",", "13328"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Portrayals of Alice in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice appears as\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"15855", ",", "15870"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"American McGee's Alice\"\>"}],
      ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice must first\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"6320", ",", "6335"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Alice's Wonderland\"\>"}], 
     ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Knave of Hearts (Alice's Adventures in \
Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"List of minor characters in the Alice series\"\>"}], 
     ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice falls asleep\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"351", ",", "368"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"The Dormouse\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1933 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Duchess (Alice's Adventures in Wonderland)\"\>"}], ",", 
     
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice did not\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"191", ",", "203"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Gryphon (Alice's Adventures in Wonderland)\"\>"}], ",", 
     
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (song)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice's Adventures in Wonderland (ballet)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice will undoubtedly\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"3711", ",", "3732"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Red Queen (Through the Looking-Glass)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice turns again\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1099", ",", "1115"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice of Wonderland in Paris\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"King of Hearts (Alice's Adventures in \
Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1915 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice lives happily\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"630", ",", "648"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"March Hare\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Alice Liddell\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was clearly\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"6894", ",", "6910"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Alice Liddell\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice was entirely\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"10517", ",", "10534"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (musical)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice receives so\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"4276", ",", "4292"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (Disneyland attraction)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice explained as\"\>"}], ",", 
     
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"12436", ",", "12453"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Lewis Carroll\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Once Upon a Time in Wonderland\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland dress\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Alice: Madness Returns\"\>"}],
      ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice wandering around\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"10360", ",", "10381"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Jewel (singer)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Cheshire Cat\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Alice Comedies\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (2010 video game)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Dodo (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice having magically\"\>"}], 
     ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2462", ",", "2483"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Dodo (Alice's Adventures in Wonderland)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Alice is soon\"\>"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2908", ",", "2920"}], "}"}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1931 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Wonderland (fictional country)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Article\"\>", 
      "\[Rule]", "\<\"Alice in Wonderland (1903 film)\"\>"}], ",", 
     RowBox[{"\<\"Match\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846372988686063*^9, 3.846374054334914*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"8297321a-2afa-4e5e-bd06-45e7f84e351d"]
}, Open  ]],

Cell["Dataset", "CodeText",
 CellChangeTimes->{{3.846372667616679*^9, 
  3.846372669102085*^9}},ExpressionUUID->"99f41258-05b7-4ac9-b6f0-\
24344de097fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372750193081*^9, 3.846372750441102*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"7b1574ec-ff2a-490a-b57f-03249c342a27"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Article" -> "Alice's Adventures in Wonderland", "Match" -> 
        "Alice is then", "Position" -> {{10580, 10592}}], 
       Association[
       "Article" -> "Alice's Adventures in Wonderland", "Match" -> 
        "Alice meets as", "Position" -> {{12616, 12629}}], 
       Association[
       "Article" -> "Alice's Adventures in Wonderland", "Match" -> 
        "Alice might as", "Position" -> {{22099, 22112}}], 
       Association[
       "Article" -> "Alice's Adventures in Wonderland", "Match" -> 
        "Alice do not", "Position" -> {{23398, 23409}}], 
       Association[
       "Article" -> "Alice in Wonderland (2010 film)", "Match" -> 
        "Alice fights again", "Position" -> {{865, 882}}], 
       Association[
       "Article" -> "Alice in Wonderland (2010 film)", "Match" -> 
        "Alice feel more", "Position" -> {{16207, 16221}}], 
       Association[
       "Article" -> "Alice in Wonderland (2010 film)", "Match" -> 
        "Alice was also", "Position" -> {{21171, 21184}}], 
       Association[
       "Article" -> "Alice in Wonderland (2010 film)", "Match" -> 
        "Alice plays better", "Position" -> {{29935, 29952}}], 
       Association[
       "Article" -> "Alice in Wonderland (2010 film)", "Match" -> 
        "Alice did not", "Position" -> {{30946, 30958}}], 
       Association[
       "Article" -> "Alice in Wonderland (1951 film)", "Match" -> 
        "Alice listens distractedly", "Position" -> {{1703, 1728}}], 
       Association[
       "Article" -> "Alice in Wonderland (1951 film)", "Match" -> 
        "Alice is also", "Position" -> {{30147, 30159}}], 
       Association[
       "Article" -> "Alice in Wonderland (1951 film)", "Match" -> 
        "Alice appears as", "Position" -> {{31330, 31345}}], 
       Association[
       "Article" -> "Alice in Wonderland syndrome", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice does not", "Position" -> {{11044, 11057}}], 
       Association[
       "Article" -> "Alice (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice served as", "Position" -> {{11562, 11576}}], 
       Association[
       "Article" -> "Alice (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice had previously", "Position" -> {{12177, 12196}}], 
       Association[
       "Article" -> "Alice in Wonderland (franchise)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1976 film)", "Match" -> 
        "Alice falls as", "Position" -> {{1536, 1549}}], 
       Association[
       "Article" -> "Queen of Hearts (Alice's Adventures in Wonderland)", 
        "Match" -> "Alice has never", "Position" -> {{852, 866}}], 
       Association[
       "Article" -> "Queen of Hearts (Alice's Adventures in Wonderland)", 
        "Match" -> "Alice is only", "Position" -> {{1225, 1237}}], 
       Association[
       "Article" -> "Through the Looking-Glass", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Hatter (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice does not", "Position" -> {{2400, 2413}}], 
       Association[
       "Article" -> "Hatter (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice is not", "Position" -> {{13013, 13024}}], 
       Association[
       "Article" -> "Alice in Wonderland (1999 film)", "Match" -> 
        "Alice shrinks again", "Position" -> {{1823, 1841}}], 
       Association[
       "Article" -> "Alice in Wonderland (1999 film)", "Match" -> 
        "Alice meets so", "Position" -> {{3345, 3358}}], 
       Association[
       "Article" -> "Alice in Wonderland (1999 film)", "Match" -> 
        "Alice is then", "Position" -> {{3747, 3759}, {3932, 3944}}], 
       Association[
       "Article" -> "Caterpillar (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice does not", "Position" -> {{465, 478}}], 
       Association[
       "Article" -> "White Rabbit", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Goodbye Alice in Wonderland", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (disambiguation)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Works based on Alice in Wonderland", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice runs away", "Position" -> {{2368, 2382}}], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice shrink again", "Position" -> {{2433, 2450}}], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice catches up", "Position" -> {{2719, 2734}}], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice stumbles up", "Position" -> {{4337, 4353}}], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice heads up", "Position" -> {{11272, 11285}}], 
       Association[
       "Article" -> "Alice in Wonderland (1985 film)", "Match" -> 
        "Alice ran happily", "Position" -> {{12316, 12332}}], 
       Association[
       "Article" -> 
        "Films and television programmes based on Alice in Wonderland", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1949 film)", "Match" -> 
        "Alice is then", "Position" -> {{5992, 6004}}], 
       Association[
       "Article" -> "Alice in Wonderland (1949 film)", "Match" -> 
        "Alice shouts angrily", "Position" -> {{6338, 6357}}], 
       Association[
       "Article" -> "Portrayals of Alice in Wonderland", "Match" -> 
        "Alice is well", "Position" -> {{2422, 2434}}], 
       Association[
       "Article" -> "Portrayals of Alice in Wonderland", "Match" -> 
        "Alice can also", "Position" -> {{4855, 4868}}], 
       Association[
       "Article" -> "Portrayals of Alice in Wonderland", "Match" -> 
        "Alice was originally", "Position" -> {{6413, 6432}}], 
       Association[
       "Article" -> "Portrayals of Alice in Wonderland", "Match" -> 
        "Alice is again", "Position" -> {{13315, 13328}}], 
       Association[
       "Article" -> "Portrayals of Alice in Wonderland", "Match" -> 
        "Alice appears as", "Position" -> {{15855, 15870}}], 
       Association[
       "Article" -> "American McGee's Alice", "Match" -> "Alice must first", 
        "Position" -> {{6320, 6335}}], 
       Association[
       "Article" -> "Alice's Wonderland", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Knave of Hearts (Alice's Adventures in Wonderland)", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of minor characters in the Alice series", "Match" -> 
        "Alice falls asleep", "Position" -> {{351, 368}}], 
       Association[
       "Article" -> "The Dormouse", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1933 film)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Duchess (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice did not", "Position" -> {{191, 203}}], 
       Association[
       "Article" -> "Gryphon (Alice's Adventures in Wonderland)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (song)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice's Adventures in Wonderland (ballet)", "Match" -> 
        "Alice will undoubtedly", "Position" -> {{3711, 3732}}], 
       Association[
       "Article" -> "Red Queen (Through the Looking-Glass)", "Match" -> 
        "Alice turns again", "Position" -> {{1099, 1115}}], 
       Association[
       "Article" -> "Alice of Wonderland in Paris", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "King of Hearts (Alice's Adventures in Wonderland)", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1915 film)", "Match" -> 
        "Alice lives happily", "Position" -> {{630, 648}}], 
       Association[
       "Article" -> "March Hare", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice Liddell", "Match" -> "Alice was clearly", 
        "Position" -> {{6894, 6910}}], 
       Association[
       "Article" -> "Alice Liddell", "Match" -> "Alice was entirely", 
        "Position" -> {{10517, 10534}}], 
       Association[
       "Article" -> "Alice in Wonderland (musical)", "Match" -> 
        "Alice receives so", "Position" -> {{4276, 4292}}], 
       Association[
       "Article" -> "Alice in Wonderland (Disneyland attraction)", "Match" -> 
        "Alice explained as", "Position" -> {{12436, 12453}}], 
       Association[
       "Article" -> "Lewis Carroll", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Once Upon a Time in Wonderland", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland dress", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice: Madness Returns", "Match" -> 
        "Alice wandering around", "Position" -> {{10360, 10381}}], 
       Association[
       "Article" -> "Jewel (singer)", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Cheshire Cat", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice Comedies", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (2010 video game)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Dodo (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice having magically", "Position" -> {{2462, 2483}}], 
       Association[
       "Article" -> "Dodo (Alice's Adventures in Wonderland)", "Match" -> 
        "Alice is soon", "Position" -> {{2908, 2920}}], 
       Association[
       "Article" -> "Alice in Wonderland (1931 film)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Wonderland (fictional country)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Alice in Wonderland (1903 film)", "Match" -> 
        Missing["MatchNotFound"]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 2], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> 
            TypeSystem`PackageScope`AtomShape[492.80000000000007`], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MatrixShape[1, 2], 1, 2, {
              All, "Position", All}]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], 1]}], 77], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 2], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> 
            TypeSystem`PackageScope`AtomShape[492.80000000000007`], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`MatrixShape[1, 2], 1, 2, {
              All, "Position", All}]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], 1]}], 77], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     77, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Article", 
                  Style[
                  "Article", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][{All, "Article"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{All, "Article"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][{All, "Match"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{All, "Match"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][{All, "Position"},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{All, "Position"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation["Alice's Adventures in Wonderland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{1, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice is then", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10580"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{1, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10592"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{1, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice's Adventures in Wonderland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{2, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice meets as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{2, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12629"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{2, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice's Adventures in Wonderland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{3, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice might as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22099"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{3, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{3, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice's Adventures in Wonderland", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{4, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice do not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23398"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{4, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23409"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{4, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (2010 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{5, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice fights again", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{5, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["882"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{5, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (2010 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{6, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice feel more", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16207"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{6, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16221"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{6, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (2010 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{7, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice was also", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{7, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21184"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{7, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (2010 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{8, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice plays better", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29935"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{8, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29952"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{8, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (2010 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{9, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice did not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30946"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{9, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{9, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (1951 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{10, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice listens distractedly", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1703"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{10, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{10, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (1951 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{11, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice is also", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{11, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{11, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (1951 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{12, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice appears as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31330"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{12, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31345"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{12, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland syndrome", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{13, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{13, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][{13, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{13, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position", All}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position", All}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position", All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position", All}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation["Alice (Alice's Adventures in Wonderland)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{14, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice does not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11044"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{14, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{14, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice (Alice's Adventures in Wonderland)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{15, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice served as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11562"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{15, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11576"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{15, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice (Alice's Adventures in Wonderland)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{16, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice had previously", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{16, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{16, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (franchise)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{17, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{17, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][{17, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{17, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position", All}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position", All}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position", All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position", All}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation["Alice in Wonderland (1976 film)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{18, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice falls as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{18, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1549"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{18, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Queen of Hearts (Alice's Adventures in Wonderland)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{19, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice has never", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["852"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{19, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["866"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{19, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Queen of Hearts (Alice's Adventures in Wonderland)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{20, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Alice is only", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1225"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{20, 
                 Key["Position"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1237"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][{20, 
                 Key["Position"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 77, 1], {1, 77 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 77, 1], {1, 77 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[77, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[77, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 77, 1], {1, 77 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 77, 1], {1, 77 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "d4a87581-f2a6-409b-8c65-4719ce3c2b0c", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "d4a87581-f2a6-409b-8c65-4719ce3c2b0c"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{864., {320.634033203125, 326.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{864., {320.634033203125, 326.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846372750869378*^9, 3.846373009111329*^9, 
  3.846374060954122*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"65b15640-4eb6-4298-9da8-e53df07da0bb"]
}, Open  ]],

Cell["Source", "CodeText",
 CellChangeTimes->{{3.846372672926098*^9, 
  3.846372673486966*^9}},ExpressionUUID->"cb03717f-34d9-4a25-8583-\
442cee084ed5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372848056892*^9, 3.846372848799479*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"e03fb28f-2e8c-4abe-93c6-bf59a6edeac0"],

Cell[BoxData["\<\"Wikipedia\"\>"], "Output",
 CellChangeTimes->{3.846372849146998*^9, 3.846373035630417*^9, 
  3.846374087035275*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"8618c90c-d7c6-4b1d-8fab-d70b4825ab4b"]
}, Open  ]],

Cell["MatchCount", "CodeText",
 CellChangeTimes->{{3.846372680672224*^9, 
  3.846372685733238*^9}},ExpressionUUID->"c87c8874-d68d-4eea-b098-\
383c8e463fbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<MatchCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372852944648*^9, 3.846372854464447*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"26df04ff-3753-4598-b388-0c9227ea380f"],

Cell[BoxData["78"], "Output",
 CellChangeTimes->{3.846372854829227*^9, 3.8463730372459917`*^9, 
  3.846374088307282*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"05fff715-e047-4de1-9d2d-6f8db712081d"]
}, Open  ]],

Cell["TextPatternString", "CodeText",
 CellChangeTimes->{{3.846372689615489*^9, 
  3.8463726932958727`*^9}},ExpressionUUID->"792c5572-9c2c-4ffd-bb58-\
df718ac9888c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<TextPatternString\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846372877920817*^9, 3.846372880213485*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"dec73d93-a3a4-43de-b50d-697bbc472d85"],

Cell[BoxData["\<\"(> Alice  (: Verb :)   (: Adverb :) <)\"\>"], "Output",
 CellChangeTimes->{3.846372880648747*^9, 3.846373043050323*^9, 
  3.846374138448599*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"f4530dff-82cd-4e8a-823e-c6117a380493"]
}, Open  ]],

Cell["Counts", "CodeText",
 CellChangeTimes->{{3.8463726969525023`*^9, 
  3.846372697278001*^9}},ExpressionUUID->"3f96faac-e9c4-4733-a799-\
38f245120cec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463728841527042`*^9, 3.846372884632126*^9}, {
  3.846373051450345*^9, 3.84637307780056*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0ab23f0f-3a4d-4afd-b15b-0a848ad7f684"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "Alice is then", "Count" -> 3], 
       Association["Match" -> "Alice meets as", "Count" -> 1], 
       Association["Match" -> "Alice might as", "Count" -> 1], 
       Association["Match" -> "Alice do not", "Count" -> 1], 
       Association["Match" -> "Alice fights again", "Count" -> 1], 
       Association["Match" -> "Alice feel more", "Count" -> 1], 
       Association["Match" -> "Alice was also", "Count" -> 1], 
       Association["Match" -> "Alice plays better", "Count" -> 1], 
       Association["Match" -> "Alice did not", "Count" -> 2], 
       Association["Match" -> "Alice listens distractedly", "Count" -> 1], 
       Association["Match" -> "Alice is also", "Count" -> 1], 
       Association["Match" -> "Alice appears as", "Count" -> 2], 
       Association["Match" -> Missing["MatchNotFound"], "Count" -> 27], 
       Association["Match" -> "Alice does not", "Count" -> 3], 
       Association["Match" -> "Alice served as", "Count" -> 1], 
       Association["Match" -> "Alice had previously", "Count" -> 1], 
       Association["Match" -> "Alice falls as", "Count" -> 1], 
       Association["Match" -> "Alice has never", "Count" -> 1], 
       Association["Match" -> "Alice is only", "Count" -> 1], 
       Association["Match" -> "Alice is not", "Count" -> 1], 
       Association["Match" -> "Alice shrinks again", "Count" -> 1], 
       Association["Match" -> "Alice meets so", "Count" -> 1], 
       Association["Match" -> "Alice runs away", "Count" -> 1], 
       Association["Match" -> "Alice shrink again", "Count" -> 1], 
       Association["Match" -> "Alice catches up", "Count" -> 1], 
       Association["Match" -> "Alice stumbles up", "Count" -> 1], 
       Association["Match" -> "Alice heads up", "Count" -> 1], 
       Association["Match" -> "Alice ran happily", "Count" -> 1], 
       Association["Match" -> "Alice shouts angrily", "Count" -> 1], 
       Association["Match" -> "Alice is well", "Count" -> 1], 
       Association["Match" -> "Alice can also", "Count" -> 1], 
       Association["Match" -> "Alice was originally", "Count" -> 1], 
       Association["Match" -> "Alice is again", "Count" -> 1], 
       Association["Match" -> "Alice must first", "Count" -> 1], 
       Association["Match" -> "Alice falls asleep", "Count" -> 1], 
       Association["Match" -> "Alice will undoubtedly", "Count" -> 1], 
       Association["Match" -> "Alice turns again", "Count" -> 1], 
       Association["Match" -> "Alice lives happily", "Count" -> 1], 
       Association["Match" -> "Alice was clearly", "Count" -> 1], 
       Association["Match" -> "Alice was entirely", "Count" -> 1], 
       Association["Match" -> "Alice receives so", "Count" -> 1], 
       Association["Match" -> "Alice explained as", "Count" -> 1], 
       Association["Match" -> "Alice wandering around", "Count" -> 1], 
       Association["Match" -> "Alice having magically", "Count" -> 1], 
       Association["Match" -> "Alice is soon", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 45], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 45], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 45, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1547e2d9-e9ff-45a1-bea5-fe5391027e78"]][{All, "Match"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{All, "Match"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "1547e2d9-e9ff-45a1-bea5-fe5391027e78"]][{All, "Count"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{All, "Count"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Alice is then", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice meets as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice might as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice do not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice fights again", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice feel more", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice was also", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice plays better", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice did not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice listens distractedly", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice is also", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice appears as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice does not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice served as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice had previously", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice falls as", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice has never", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice is only", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Alice is not", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 45, 1], {1, 45 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 45, 1], {1, 45 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[45, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[45, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 45, 1], {1, 45 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 45, 1], {1, 45 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "1547e2d9-e9ff-45a1-bea5-fe5391027e78", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "1547e2d9-e9ff-45a1-bea5-fe5391027e78"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{297., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{297., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8463728850262117`*^9, {3.8463730449787607`*^9, 3.846373078300498*^9}, 
   3.846374143678049*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"0303c59f-ac26-45b1-a8c1-c2352b6f28ff"]
}, Open  ]],

Cell["MatchCounts", "CodeText",
 CellChangeTimes->{{3.846374420252617*^9, 
  3.846374421497406*^9}},ExpressionUUID->"48502178-d168-4cfc-8b8d-\
8a0cec967006"],

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", 
  RowBox[{"\"\<MatchCounts\>\"", ",", "\"\<Descending\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.8463744376818953`*^9, 
  3.8463744381956987`*^9}},ExpressionUUID->"c2644fe1-fafa-4462-9edb-\
f48de3501990"],

Cell["CountGroups", "CodeText",
 CellChangeTimes->{{3.846372704102776*^9, 
  3.8463727059499807`*^9}},ExpressionUUID->"a964e9ed-c0da-4563-ab55-\
0de422a18e88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463728981527243`*^9, 3.84637289906992*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"51d2e2cd-7759-4f92-83d8-7428b8abd96d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 27, "Matches" -> {
          Missing["MatchNotFound"]}], 
       Association[
       "CountGroup" -> 3, "Matches" -> {"Alice is then", "Alice does not"}], 
       Association[
       "CountGroup" -> 2, "Matches" -> {"Alice did not", "Alice appears as"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "Alice will undoubtedly", "Alice was originally", 
          "Alice was entirely", "Alice was clearly", "Alice was also", 
          "Alice wandering around", "Alice turns again", "Alice stumbles up", 
          "Alice shrinks again", "Alice shrink again", "Alice shouts angrily",
           "Alice served as", "Alice runs away", "Alice receives so", 
          "Alice ran happily", "Alice plays better", "Alice must first", 
          "Alice might as", "Alice meets so", "Alice meets as", 
          "Alice lives happily", "Alice listens distractedly", 
          "Alice is well", "Alice is soon", "Alice is only", "Alice is not", 
          "Alice is also", "Alice is again", "Alice heads up", 
          "Alice having magically", "Alice has never", "Alice had previously",
           "Alice fights again", "Alice feel more", "Alice falls asleep", 
          "Alice falls as", "Alice explained as", "Alice do not", 
          "Alice catches up", "Alice can also"}]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 4], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 4], "Path" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Alice is then", "Alice does not"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Alice is then", "Alice does not"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Alice did not", "Alice appears as"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Alice did not", "Alice appears as"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 40], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 40], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{272., {74.134033203125, 79.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{272., {74.134033203125, 79.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846372899527697*^9, 3.846373083119306*^9, 
  3.846374382286763*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"76a2b89a-17d3-4601-9933-13188208efa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aiwlEXWiki", "[", 
  RowBox[{"\"\<CountGroups\>\"", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8464325698228197`*^9, 3.8464325746472816`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"87f2f164-c1d9-4ebd-9227-2ceda637538b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 27, "Matches" -> {
          Missing["MatchNotFound"]}], 
       Association[
       "CountGroup" -> 3, "Matches" -> {"Alice is then", "Alice does not"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {"Alice did not", "Alice appears as"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     3, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Alice is then", "Alice does not"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Alice is then", "Alice does not"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Alice did not", "Alice appears as"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"Alice did not", "Alice appears as"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{272., {60.634033203125, 66.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{272., {60.634033203125, 66.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.846432570634213*^9, 3.846432575748609*^9}},
 CellLabel->
  "Out[160]=",ExpressionUUID->"303171e4-6c50-437e-bbd3-35e418796aef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wikipedia Examples", "Section",
 CellChangeTimes->{{3.846164162065659*^9, 3.846164164827036*^9}, 
   3.846376755696026*^9},ExpressionUUID->"aed26e69-d386-43b7-bf1e-\
38c87b529836"],

Cell[CellGroupData[{

Cell["Videogames", "Subsection",
 CellChangeTimes->{{3.846376760687169*^9, 
  3.846376762844852*^9}},ExpressionUUID->"b91583f5-438c-4fb8-b688-\
912d29fe8379"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TextPatternSummary"}]], "Input",
 CellChangeTimes->{{3.84637457786478*^9, 3.846374589280531*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"2c8b2bb9-47a0-4e66-a8b8-9de2ec9c5710"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Data\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Dataset\"", "]"}], ":=", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Counts\"", "]"}], ":=", 
                    RowBox[{"Private`GetDatasetCounts", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Dataset\"", "]"}], ",", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"SortBy", "[", "\"Count\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    RowBox[{"Private`asc_", "?", 
                    "Private`TextPatternSummaryAscQ"}], "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"ReverseSortBy", "[", "\"Count\"", "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"CountGroups\"", "]"}], ":=", 
                    RowBox[{"Private`CountGroups", "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCount\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"MatchCount\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPattern\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"TextPattern\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Source\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPatternString\"", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "\"TextPatternString\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCounts\"", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "Private`invalidkey_", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "Private`invalidkey", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Ascending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Descending\""}], "]"}],
                     ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" Format Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"FormatValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "FormatValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    StyleBox[
                    "TextPatternSummary /: \
MakeBoxes[Private`obj:TextPatternSummary[(Private`asc_)?Private`\
TextPatternSummaryAscQ], Private`form:StandardForm | TraditionalForm] := \
Module[{Private`above, Private`below}, Private`above = \
{{BoxForm`SummaryItem[{\"Source: \", Private`asc[\"Source\"]}]}, \
{BoxForm`SummaryItem[{\"TextPatternString: \", \
Private`asc[\"TextPatternString\"]}]}, {BoxForm`SummaryItem[{\"MatchCount: \
\", Private`asc[\"MatchCount\"]}]}}; Private`below = {}; \
BoxForm`ArrangeSummaryBox[TextPatternSummary, Private`obj, None, \
Private`above, Private`below, Private`form, \"Interpretable\" -> Automatic]]",
                     ShowStringCharacters -> True, NumberMarks -> True]}, {
                   " "}}, ColumnAlignments -> Left, 
                  GridBaseline -> {Baseline, {1, 1}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TextPatternCases`TextPatternSummary\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Represents the results of TextPatternCases. Possible accessors are: \
\"Data\", \"Source\", \"MatchCount\", \"MatchCounts\", \"TextPatternString\", \
\"Counts\", and \"CountGroups\"", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
    Information`InformationValueForm[
     SubValues, TextPatternCases`TextPatternSummary, {
      TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Data"] :> 
       Private`asc["Data"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Dataset"] :> Dataset[
         Private`asc["Data"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts"] :> 
       Private`GetDatasetCounts[
         TextPatternCases`TextPatternSummary[Private`asc]["Dataset"], 
         Private`asc["Source"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Ascending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         SortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Descending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         ReverseSortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["CountGroups"] :> 
       Private`CountGroups[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCount"] :> 
       Private`asc["MatchCount"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPattern"] :> 
       Private`asc["TextPattern"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Source"] :> 
       Private`asc["Source"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPatternString"] :> 
       Private`asc["TextPatternString"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCounts"] :> (
        DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc]["Counts"]], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
         Pattern[Private`invalidkey, 
          Blank[]]] :> Private`asc[Private`invalidkey], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Ascending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Ascending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Descending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> 
    Information`InformationValueForm[
     FormatValues, TextPatternCases`TextPatternSummary, {MakeBoxes[
         Pattern[Private`obj, 
          TextPatternCases`TextPatternSummary[
           PatternTest[
            Pattern[Private`asc, 
             Blank[]], Private`TextPatternSummaryAscQ]]], 
         Pattern[Private`form, 
          Alternatives[StandardForm, TraditionalForm]]] :> 
       Module[{Private`above, Private`below}, Private`above = {{
             BoxForm`SummaryItem[{"Source: ", 
               Private`asc["Source"]}]}, {
             BoxForm`SummaryItem[{"TextPatternString: ", 
               Private`asc["TextPatternString"]}]}, {
             BoxForm`SummaryItem[{"MatchCount: ", 
               Private`asc["MatchCount"]}]}}; Private`below = {}; 
         BoxForm`ArrangeSummaryBox[
          TextPatternCases`TextPatternSummary, Private`obj, None, 
           Private`above, Private`below, Private`form, "Interpretable" -> 
           Automatic]]}], "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TextPatternCases`TextPatternSummary"], False]]], "Output",
 CellChangeTimes->{{3.8463745828209953`*^9, 3.846374589624487*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"df643ef0-01b3-4f02-8a2d-faabdf77c933"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"vgex", "=", 
   RowBox[{"TextPatternCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<video games\>\""}], ",", 
     RowBox[{"TextPattern", "[", 
      RowBox[{
       RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], ",", " ", 
       "\"\< \>\"", ",", " ", 
       RowBox[{
       "\"\<videogame\>\"", "|", "\"\<video-game\>\"", "|", 
        "\"\<video game\>\""}]}], "]"}], ",", 
     RowBox[{"MaxItems", "->", "250"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8460982579342937`*^9, 3.846098327299438*^9}, {
  3.846098988061303*^9, 3.846098989584482*^9}, {3.846374469608592*^9, 
  3.846374499253868*^9}, {3.846375065115913*^9, 3.846375066201137*^9}, {
  3.846375542526744*^9, 3.846375605129695*^9}, {3.8463756411775*^9, 
  3.846375642339307*^9}, {3.846375675439721*^9, 3.846375680377293*^9}, {
  3.8463758522575283`*^9, 3.8463758790824137`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"6d7aa374-63ba-4376-a6b7-f1ed628b5650"],

Cell["Metadata", "CodeText",
 CellChangeTimes->{{3.846374541046163*^9, 
  3.8463745541881237`*^9}},ExpressionUUID->"1c7d84f8-0999-4e81-92d6-\
67f19c68bfc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846374559378756*^9, 3.8463745649334097`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"9793953a-c5e6-4492-809f-c7780f938a11"],

Cell[BoxData["\<\"Wikipedia\"\>"], "Output",
 CellChangeTimes->{3.8463749532138987`*^9, 3.8463762274242163`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"10669208-e19d-4519-a690-afdb4ac34d22"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<TextPatternString\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846374570052847*^9, 3.846374572162999*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"e5ab5117-10a7-40b0-b1aa-142f023a7bc2"],

Cell[BoxData["\<\"(> (: Adjective :)   videogame | video-game | video game <)\
\"\>"], "Output",
 CellChangeTimes->{
  3.846374954630041*^9, 3.846375516488749*^9, {3.846375631830391*^9, 
   3.846375661506588*^9}, 3.8463762284611797`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"e5fed129-8e90-4ae5-8347-31a265ee8a79"]
}, Closed]],

Cell["Data", "CodeText",
 CellChangeTimes->{{3.846374532621029*^9, 
  3.846374532974513*^9}},ExpressionUUID->"6f8c0572-9f9e-4866-b08b-\
3e2025219119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749586613417`*^9, 3.846374962543784*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"fb3d35ba-84f0-44b1-b2f4-c4a3a4c023c9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"arcade video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"694", ",", "710"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1219", ",", "1235"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4816", ",", "4832"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"16964", ",", "16980"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"17865", ",", "17881"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"first video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1033", ",", "1048"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"American video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1423", ",", "1441"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"independent video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2206", ",", "2227"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"global video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2588", ",", "2604"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"51955", ",", "51971"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Early video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2829", ",", "2844"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"646"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Tank (video games)\"\>"}], ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", 
              RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"1970s in video games\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"earliest video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"120", ",", "138"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"204", ",", "222"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"1970s in video games\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"Notable video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2667", ",", "2684"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"artistic video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1469", ",", "1487"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"first video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"11049", ",", "11064"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"professional video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"11391", ",", "11413"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[22955574563165579241 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.84637496288818*^9, 3.846375518619452*^9, {3.846375634041102*^9, 
   3.8463756633904963`*^9}, 3.846375755195282*^9, 3.846376230496402*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"9695f2a9-3e51-4929-bca2-f824be59b88c"]
}, Closed]],

Cell["Dataset", "CodeText",
 CellChangeTimes->{{3.846374537724442*^9, 
  3.84637453857155*^9}},ExpressionUUID->"911c3eca-fd69-4e0a-b57e-\
0c6b838ff3ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749766495857`*^9, 3.846374976860765*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"d69594a7-fcee-475d-a54b-70ebfde4b680"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Article" -> "Video game", "Match" -> "arcade video game", 
        "Position" -> {{694, 710}, {1219, 1235}, {4816, 4832}, {16964, 
         16980}, {17865, 17881}}], 
       Association[
       "Article" -> "Video game", "Match" -> "first video game", 
        "Position" -> {{1033, 1048}}], 
       Association[
       "Article" -> "Video game", "Match" -> "American video game", 
        "Position" -> {{1423, 1441}}], 
       Association[
       "Article" -> "Video game", "Match" -> "independent video game", 
        "Position" -> {{2206, 2227}}], 
       Association[
       "Article" -> "Video game", "Match" -> "global video game", 
        "Position" -> {{2588, 2604}, {51955, 51971}}], 
       Association[
       "Article" -> "Video game", "Match" -> "Early video game", 
        "Position" -> {{2829, 2844}}], 
       Association[
       "Article" -> "Video game", "Match" -> "Most video game", 
        "Position" -> {{9723, 9737}, {27925, 27939}}], 
       Association[
       "Article" -> "Video game", "Match" -> "most video game", 
        "Position" -> {{21074, 21088}}], 
       Association[
       "Article" -> "Video game", "Match" -> "multiplayer video game", 
        "Position" -> {{26988, 27009}}], 
       Association[
       "Article" -> "Video game", "Match" -> "educational video game", 
        "Position" -> {{29555, 29576}}], 
       Association[
       "Article" -> "Video game", "Match" -> "larger video game", 
        "Position" -> {{46754, 46770}}], 
       Association[
       "Article" -> "Video game", "Match" -> "other video game", 
        "Position" -> {{54926, 54941}}], 
       Association[
       "Article" -> "Video game", "Match" -> "early video game", 
        "Position" -> {{55714, 55729}}], 
       Association[
       "Article" -> "Video game", "Match" -> "violent video game", 
        "Position" -> {{61083, 61100}}], 
       Association[
       "Article" -> "Video game", "Match" -> "many video game", 
        "Position" -> {{64548, 64562}}], 
       Association[
       "Article" -> "Video game", "Match" -> "dedicated video game", 
        "Position" -> {{64997, 65016}}], 
       Association[
       "Article" -> "Video game", "Match" -> "French video game", 
        "Position" -> {{66294, 66310}}], 
       Association[
       "Article" -> "List of video games considered the best", "Match" -> 
        "reputable video game", "Position" -> {{45, 64}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "ready video game", 
        "Position" -> {{287, 302}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "handheld video game", "Position" -> {{1968, 1986}, {28277, 28295}}], 
       
       Association[
       "Article" -> "History of video games", "Match" -> "modern video game", 
        "Position" -> {{10116, 10132}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "commercial video game", "Position" -> {{10683, 10703}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "other video game", 
        "Position" -> {{15281, 15296}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "larger video game", 
        "Position" -> {{18877, 18893}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "first video game", 
        "Position" -> {{22028, 22043}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "entire video game", 
        "Position" -> {{22282, 22298}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "early video game", 
        "Position" -> {{25033, 25048}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "American video game", "Position" -> {{31000, 31018}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "global video game", 
        "Position" -> {{31262, 31278}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "educational video game", "Position" -> {{34846, 34867}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "major video game", 
        "Position" -> {{38783, 38798}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "fundamental video game", "Position" -> {{45626, 45647}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "most video game", 
        "Position" -> {{56769, 56783}}], 
       Association[
       "Article" -> "List of best-selling video games", "Match" -> 
        "known video game", "Position" -> {{369, 384}}], 
       Association[
       "Article" -> "2021 in video games", "Match" -> "new video game", 
        "Position" -> {{73, 86}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "fewer video game", "Position" -> {{2146, 2161}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "many video game", "Position" -> {{4380, 4394}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "unrated video game", "Position" -> {{4640, 4657}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "Chinese video game", "Position" -> {{4980, 4997}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> "top video game",
         "Position" -> {{11558, 11571}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "violent video game", "Position" -> {{13424, 13441}, {21304, 21321}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "foreign video game", "Position" -> {{14735, 14752}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "major video game", "Position" -> {{22501, 22516}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "controversial video game", "Position" -> {{23852, 23875}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "dedicated video game",
         "Position" -> {{7625, 7644}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "stereoscopic video game", "Position" -> {{9271, 9293}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "Christian video game",
         "Position" -> {{13173, 13192}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "educational video game", "Position" -> {{13203, 13224}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "erotic video game", 
        "Position" -> {{13235, 13251}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "ninja video game", 
        "Position" -> {{13361, 13376}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "Western video game", 
        "Position" -> {{13478, 13495}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "shaded video game", 
        "Position" -> {{13624, 13640}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "commercial video game", 
        "Position" -> {{13770, 13790}, {13822, 13842}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "cooperative video game", "Position" -> {{14129, 14150}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "controversial video game", "Position" -> {{14821, 14844}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "expensive video game",
         "Position" -> {{14994, 15013}}], 
       Association[
       "Article" -> "2022 in video games", "Match" -> "new video game", 
        "Position" -> {{73, 86}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "playable video game", "Position" -> {{1784, 1802}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "important video game", "Position" -> {{4837, 4856}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "modern video game", "Position" -> {{5869, 5885}, {23323, 23339}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "many video game", "Position" -> {{8428, 8442}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "mature video game", "Position" -> {{13224, 13240}}], 
       Association[
       "Article" -> "2020 in video games", "Match" -> "global video game", 
        "Position" -> {{1667, 1683}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "first video game", 
        "Position" -> {{1939, 1954}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "interactive video game",
         "Position" -> {{3260, 3281}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "Other video game", 
        "Position" -> {{8655, 8670}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "major video game", 
        "Position" -> {{11022, 11037}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> 
        "inspired video game", "Position" -> {{155, 173}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> "novel video game",
         "Position" -> {{7999, 8014}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> 
        "masterful video game", "Position" -> {{9812, 9831}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> "best video game", 
        "Position" -> {{13837, 13851}}], 
       Association[
       "Article" -> "List of Games Workshop video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game industry", "Match" -> "global video game", 
        "Position" -> {{1237, 1253}, {12967, 12983}, {19181, 19197}, {27897, 
         27913}, {34561, 34577}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "true video game", 
        "Position" -> {{5741, 5755}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "commercial video game",
         "Position" -> {{6842, 6862}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "successful video game",
         "Position" -> {{7387, 7407}, {31147, 31167}, {33509, 33529}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "early video game", 
        "Position" -> {{7581, 7596}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "European video game", 
        "Position" -> {{10962, 10980}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "mobile video game", 
        "Position" -> {{14452, 14468}, {46026, 46042}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "other video game", 
        "Position" -> {{23503, 23518}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "annual video game", 
        "Position" -> {{26199, 26215}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> 
        "International video game", "Position" -> {{27454, 27477}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "largest video game", 
        "Position" -> {{28054, 28071}, {28177, 28194}, {29079, 29096}, {30115,
          30132}, {30437, 30454}, {30956, 30973}, {31086, 31103}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "certain video game", 
        "Position" -> {{33886, 33903}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "Japanese video game", 
        "Position" -> {{35723, 35741}, {37011, 37029}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "active video game", 
        "Position" -> {{39020, 39036}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "local video game", 
        "Position" -> {{39795, 39810}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "dedicated video game", 
        "Position" -> {{42337, 42356}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "handheld video game", 
        "Position" -> {{46284, 46302}}], 
       Association[
       "Article" -> "Single-player video game", "Match" -> 
        "earliest video game", "Position" -> {{716, 734}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "first video game", 
        "Position" -> {{4114, 4129}, {5909, 5924}, {38533, 38548}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "American video game", 
        "Position" -> {{9545, 9563}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "modern video game", 
        "Position" -> {{12102, 12118}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "global video game", 
        "Position" -> {{12447, 12463}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "console video game", 
        "Position" -> {{19782, 19799}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "Japanese video game", 
        "Position" -> {{20032, 20050}, {45747, 45765}, {47055, 47073}, {47459,
          47477}, {48920, 48938}, {55647, 55665}, {55738, 55756}, {55777, 
         55795}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "few video game", 
        "Position" -> {{32854, 32867}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "known video game", 
        "Position" -> {{32926, 32941}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> 
        "multiplayer video game", "Position" -> {{3, 24}, {1665, 1686}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> 
        "earliest video game", "Position" -> {{891, 909}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "early video game", 
        "Position" -> {{1348, 1363}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "popular video-game",
         "Position" -> {{4589, 4606}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "new video game", 
        "Position" -> {{6635, 6648}}], 
       Association[
       "Article" -> "List of Telltale Games video games", "Match" -> 
        "popular video game", "Position" -> {{516, 533}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "Certain video game", "Position" -> {{1, 18}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "controversial video game", 
        "Position" -> {{1131, 1154}, {88197, 88220}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "current video game", "Position" -> {{2518, 2535}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "top video game", "Position" -> {{4407, 4420}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "licensed video game", "Position" -> {{9472, 9490}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "worst video game", 
        "Position" -> {{9605, 9620}, {12307, 12322}, {16590, 16605}, {20208, 
         20223}, {23080, 23095}, {37881, 37896}, {48471, 48486}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "adult video game", "Position" -> {{31578, 31593}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "Russian video game", "Position" -> {{46746, 46763}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "other video game", "Position" -> {{73888, 73903}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "first video game", "Position" -> {{3767, 3782}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "modern video game", "Position" -> {{9587, 9603}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "Commercial videogame", "Position" -> {{10295, 10314}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "contemporary video game", "Position" -> {{12069, 12091}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "complex video game", "Position" -> {{15244, 15261}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "female video game", 
        "Position" -> {{1068, 1084}, {3311, 3327}, {8849, 8865}, {31470, 
         31486}, {33618, 33634}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "owned video game", 
        "Position" -> {{2255, 2270}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> 
        "commercial videogame", "Position" -> {{4554, 4573}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "primary video game", 
        "Position" -> {{6206, 6223}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "good video game", 
        "Position" -> {{30928, 30942}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "largest video game", 
        "Position" -> {{473, 490}, {26047, 26064}, {26172, 26189}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "American video game", 
        "Position" -> {{3287, 3305}, {39040, 39058}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "most video game", 
        "Position" -> {{4329, 4343}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "Chinese video game", 
        "Position" -> {{9444, 9461}, {11236, 11253}, {11705, 11722}, {13370, 
         13387}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "global video game", 
        "Position" -> {{19612, 19628}, {25996, 26012}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "mobile video game", 
        "Position" -> {{20065, 20081}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "online video game", 
        "Position" -> {{21357, 21373}, {39181, 39197}, {50445, 50461}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "foreign video game", 
        "Position" -> {{26397, 26414}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "major video game", 
        "Position" -> {{33029, 33044}, {40117, 40132}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "multiple video game", 
        "Position" -> {{37901, 37919}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> 
        "established video game", "Position" -> {{39914, 39935}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "net video game", 
        "Position" -> {{46620, 46633}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "popular video game", 
        "Position" -> {{47994, 48011}}], 
       Association[
       "Article" -> "Computer and Video Games", "Match" -> 
        "dedicated video game", "Position" -> {{734, 753}}], 
       Association[
       "Article" -> "Video Games (song)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Batman video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of erotic video games", "Match" -> 
        "erotic video game", "Position" -> {{19, 35}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "violent video game", "Position" -> CompressedData["
1:eJwV0UtIFFAYhuGXqIRWRggRBKURSSEUSRcqXbQxLMsui8w0TV0oM2mJ5kKI
YFCMEjdmBaXpIlt0sQTJKCbUdHQqsiFTKwkSukmXTRDq2+I5Bw4czvd/Z3VB
MDuwAMjW/32XS5ZeLoIpHVwMJ3VbvToaB6U6pyaFkqFZPZtgSOEt8FqH0qBI
HbuhWyN74L0KM+GMvuqf1mRBqtblwDYtO+aZjuRCidLz4IDy86FcF0/AddUV
QIsihTChrUWQoU/6o+MBCOp7EGZ175TZ9LgcotpXAXlKOA1rVV0J9RqsgncK
nXUutalLK2sgRYdVrOe1MKbi81Clh+rX0gZI1IoLsF7hRvtQb7MdqOky3FRu
CwQUvQIf1HbVd5R0DTYrR2WqbjWX0tvtQas6YKOe3YJRpXRCmj7qpxLuOI9q
7kKD+u5DTDOiCxp7oFV/n8CSp97VfnWG4ZFCg86tKf1SbAimdSkCN1QybCYN
6K02jMBOxUVhubo1oOQXsF3j+qbIK/9JO97AXk3G4Ifax+xOvydg4STMfYb4
aXjwxeyaB4BFsJM=
         "]], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "re video game", 
        "Position" -> {{953, 965}, {2491, 2503}, {16297, 16309}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "mature video game", "Position" -> {{16293, 16309}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "many video game", 
        "Position" -> {{17115, 17129}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "unquote video game", "Position" -> {{18919, 18936}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "grisly video game", "Position" -> {{20903, 20919}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "interactive video game", "Position" -> {{32891, 32912}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "favorite video game", "Position" -> {{36651, 36669}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "experimental video game", "Position" -> {{40239, 40261}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "such video game", 
        "Position" -> {{44168, 44182}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "high video game", 
        "Position" -> {{46710, 46724}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "typical video game", "Position" -> {{54228, 54245}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "nonsignificant video game", "Position" -> {{54375, 54399}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "numerous video game", "Position" -> {{58567, 58585}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "several video game", "Position" -> {{59349, 59366}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "low video game", 
        "Position" -> {{62530, 62543}}], 
       Association[
       "Article" -> "List of Pok\[EAcute]mon video games", "Match" -> 
        "Pok\[EAcute]mon video game", "Position" -> {{420, 437}}], 
       Association[
       "Article" -> "James Bond in video games", "Match" -> 
        "numerous video game", "Position" -> {{685, 703}}], 
       Association[
       "Article" -> "James Bond in video games", "Match" -> 
        "other video game", "Position" -> {{10343, 10358}}], 
       Association[
       "Article" -> "Video game genre", "Match" -> "popular video game", 
        "Position" -> {{6700, 6717}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "latest video game", "Position" -> {{4419, 4435}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "evil video game", "Position" -> {{4617, 4631}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "classic video game", "Position" -> {{5979, 5996}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "obscure video game", "Position" -> {{6701, 6718}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "licensed video game", "Position" -> {{7277, 7295}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "vintage video game", "Position" -> {{7962, 7979}}], 
       Association[
       "Article" -> "Sexism and video games", "Match" -> "online video game", 
        "Position" -> {{2670, 2686}, {5761, 5777}}], 
       Association[
       "Article" -> "Sexism and video games", "Match" -> 
        "prominent video game", "Position" -> {{22549, 22568}}], 
       Association[
       "Article" -> "List of racing video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of most-played video games by player count", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Level (video games)", "Match" -> "short video game", 
        "Position" -> {{12793, 12808}}], 
       Association[
       "Article" -> "Level (video games)", "Match" -> "other video game", 
        "Position" -> {{12835, 12850}}], 
       Association[
       "Article" -> "2019 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2001 in video games", "Match" -> "dominant video game", 
        "Position" -> {{5507, 5525}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "earliest video game", "Position" -> {{1010, 1028}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "fanservice video game", "Position" -> {{9995, 10015}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "erotic video game", "Position" -> {{11266, 11282}, {11342, 11358}}], 
       
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "controversial video game", "Position" -> {{11432, 11455}}], 
       Association[
       "Article" -> "Cheating in video games", "Match" -> 
        "multiplayer video game", "Position" -> {{21624, 21645}}], 
       Association[
       "Article" -> "List of controversial video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video Games (disambiguation)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2004 in video games", "Match" -> "biggest video game", 
        "Position" -> {{3000, 3017}}], 
       Association[
       "Article" -> "List of Dungeons & Dragons video games", "Match" -> 
        "own video game", "Position" -> {{709, 722}}], 
       Association[
       "Article" -> "Homebrew (video games)", "Match" -> 
        "proprietary video game", "Position" -> {{82, 103}}], 
       Association[
       "Article" -> "Homebrew (video games)", "Match" -> "many video game", 
        "Position" -> {{23170, 23184}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "Japanese video game", "Position" -> {{18, 36}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "various video game", "Position" -> {{652, 669}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "own video game", "Position" -> {{782, 795}}], 
       Association[
       "Article" -> "Marvel Games", "Match" -> "related video game", 
        "Position" -> {{1213, 1230}}], 
       Association[
       "Article" -> "2011 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Spider-Man in video games", "Match" -> 
        "Numerous video game", "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Spider-Man in video games", "Match" -> 
        "original video game", "Position" -> {{19632, 19650}}], 
       Association[
       "Article" -> "List of Disney video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of party video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "earliest video game", "Position" -> {{1219, 1237}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "roguelike video game", "Position" -> {{23689, 23708}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "online video game", "Position" -> {{37659, 37675}, {44581, 44597}}], 
       
       Association[
       "Article" -> "List of video game genres", "Match" -> "many video game",
         "Position" -> {{45378, 45392}, {53040, 53054}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "major video game", "Position" -> {{49111, 49126}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> "most video game",
         "Position" -> {{52992, 53006}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "other video game", "Position" -> {{55027, 55042}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "Christian video game", "Position" -> {{55289, 55308}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "Japanese video game", "Position" -> {{14, 32}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "other video game", "Position" -> {{170, 185}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "recognizable video game", "Position" -> {{1029, 1051}}], 
       Association[
       "Article" -> "Simulation video game", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Puzzle video game", "Match" -> "matching video game", 
        "Position" -> {{7217, 7235}}], 
       Association[
       "Article" -> "2005 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "corresponding video-game", "Position" -> {{11388, 11411}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "popular video game", "Position" -> {{11507, 11524}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "old video game", "Position" -> {{11925, 11938}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "violent video game", "Position" -> {{12209, 12226}, {20286, 20303}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "cursed video game", "Position" -> {{12601, 12617}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "new video game", "Position" -> {{15804, 15817}, {26063, 26076}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "sexist video game", "Position" -> {{20488, 20504}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "poor video game", "Position" -> {{22636, 22650}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "favorite video game", "Position" -> {{23698, 23716}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "holographic video game", "Position" -> {{25647, 25668}}], 
       Association[
       "Article" -> "2017 in video games", "Match" -> "numerous video game", 
        "Position" -> {{25, 43}}], 
       Association[
       "Article" -> "2017 in video games", "Match" -> "global video game", 
        "Position" -> {{1962, 1978}}], 
       Association[
       "Article" -> "First-person (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of games based on Dune", "Match" -> 
        "related video game", "Position" -> {{1427, 1444}}], 
       Association[
       "Article" -> "List of most expensive video games to develop", "Match" -> 
        "expensive video game", "Position" -> {{37, 56}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "numerous video game", 
        "Position" -> {{31, 49}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "total video game", 
        "Position" -> {{739, 754}, {1378, 1393}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "Cancelled video game", 
        "Position" -> {{3410, 3429}}], 
       Association[
       "Article" -> "List of zombie video games", "Match" -> 
        "first video game", "Position" -> {{526, 541}}], 
       Association[
       "Article" -> "List of horror video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2002 in video games", "Match" -> "dominant video game", 
        "Position" -> {{938, 956}}], 
       Association[
       "Article" -> "Strafing (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Racing game", "Match" -> "arcade video game", 
        "Position" -> {{7601, 7617}, {11308, 11324}}], 
       Association[
       "Article" -> "Racing game", "Match" -> "first video game", 
        "Position" -> {{10950, 10965}, {14733, 14748}}], 
       Association[
       "Article" -> "Racing game", "Match" -> "successful video game", 
        "Position" -> {{20579, 20599}}], 
       Association[
       "Article" -> "List of crossovers in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games in development", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "American video game", "Position" -> {{1124, 1142}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "console video game", "Position" -> {{3504, 3521}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "commercial videogame", "Position" -> {{4493, 4512}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "popular video game", "Position" -> {{5152, 5169}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "new video game", "Position" -> {{10077, 10090}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "female video game", "Position" -> {{15675, 15691}, {16906, 16922}}], 
       
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Female video game", "Position" -> {{17097, 17113}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "male video game", 
        "Position" -> {{15677, 15691}, {16908, 16922}, {17099, 17113}, {22692,
          22706}, {26285, 26299}, {39576, 39590}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "many video game", "Position" -> {{24565, 24579}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Asian video game", "Position" -> {{26680, 26695}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Japanese video game", 
        "Position" -> {{26710, 26728}, {30897, 30915}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "more video game", "Position" -> {{34251, 34265}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "violent video game", "Position" -> {{34697, 34714}, {34917, 34934}}], 
       Association[
       "Article" -> "List of video games featuring Mario", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bethesda Softworks video games", "Match" -> 
        "American video game", "Position" -> {{67, 85}}], 
       Association[
       "Article" -> "List of Lego video games", "Match" -> 
        "commercial video game", "Position" -> {{16, 36}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> "other video game", 
        "Position" -> {{2169, 2184}, {63206, 63221}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "notable video game", "Position" -> {{13183, 13200}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "earlier video game", "Position" -> {{13909, 13926}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Japanese video game", 
        "Position" -> {{33588, 33606}, {40418, 40436}, {58466, 58484}, {59807,
          59825}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "multiplayer video game", "Position" -> {{52842, 52863}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Western video game", "Position" -> {{58601, 58618}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Eastern video game", "Position" -> {{58751, 58768}}], 
       Association[
       "Article" -> "List of Final Fantasy video games", "Match" -> 
        "related video game", "Position" -> {{365, 382}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "adult video game", "Position" -> {{305, 320}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "major video game", "Position" -> {{1127, 1142}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "popular video game", "Position" -> {{1308, 1325}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "commercial video game", "Position" -> {{1527, 1547}}], 
       Association[
       "Article" -> "2014 in video games", "Match" -> "online video game", 
        "Position" -> {{335, 351}}], 
       Association[
       "Article" -> "2007 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Activision video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "strategic video game", "Position" -> {{1461, 1480}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "multiplayer video game", 
        "Position" -> {{20831, 20852}, {61532, 61553}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "Casual video game", "Position" -> {{21867, 21883}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "earlier video game", "Position" -> {{25116, 25133}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "certain video game", "Position" -> {{44610, 44627}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "competitive video game", 
        "Position" -> {{46066, 46087}, {48473, 48494}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "established video game", "Position" -> {{49279, 49300}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "early video game", "Position" -> {{49326, 49341}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "independent video game", "Position" -> {{65063, 65084}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "inclined video-game", "Position" -> {{106816, 106834}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "licensed video game", "Position" -> {{114546, 114564}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "certain videogame", "Position" -> {{115472, 115488}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> "global video game", 
        "Position" -> {{1021, 1037}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> 
        "professional video game", "Position" -> {{1680, 1702}}], 
       Association[
       "Article" -> "2000 in video games", "Match" -> "numerous video game", 
        "Position" -> {{34, 52}}], 
       Association[
       "Article" -> "List of Xbox Game Studios video games", "Match" -> 
        "American video game", "Position" -> {{98, 116}}], 
       Association[
       "Article" -> "Grinding (video games)", "Match" -> "Many video game", 
        "Position" -> {{160, 174}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "Japanese video game", "Position" -> {{8872, 8890}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "earlier video game", "Position" -> {{15224, 15241}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "later video game", "Position" -> {{15828, 15843}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "first video game", 
        "Position" -> {{20454, 20469}, {23829, 23844}, {26899, 26914}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "other video game", "Position" -> {{32183, 32198}}], 
       Association[
       "Article" -> "Formula One video games", "Match" -> "arcade video game",
         "Position" -> {{654, 670}}], 
       Association[
       "Article" -> "Formula One video games", "Match" -> 
        "different video game", "Position" -> {{8200, 8219}}], 
       Association[
       "Article" -> "List of Superman video games", "Match" -> 
        "licensed video game", "Position" -> {{13, 31}}], 
       Association[
       "Article" -> "List of Superman video games", "Match" -> 
        "worst video game", "Position" -> {{371, 386}}], 
       Association[
       "Article" -> "2013 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "1997 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game culture", "Match" -> "online video game", 
        "Position" -> {{5123, 5139}, {6554, 6570}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "multiplayer video game",
         "Position" -> {{6096, 6117}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "major video game", 
        "Position" -> {{6825, 6840}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "modern video game", 
        "Position" -> {{7209, 7225}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "many video game", 
        "Position" -> {{10143, 10157}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "mobile video game", 
        "Position" -> {{11553, 11569}, {11753, 11769}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "competitive video game",
         "Position" -> {{17656, 17677}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "thin video game", 
        "Position" -> {{23925, 23939}, {26439, 26453}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "first video game", 
        "Position" -> {{27421, 27436}, {29049, 29064}, {39326, 39341}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "Other video game", 
        "Position" -> {{27500, 27515}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "violent video game", 
        "Position" -> {{28816, 28833}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "old video game", 
        "Position" -> {{31495, 31508}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "past video game", 
        "Position" -> {{33650, 33664}}], 
       Association[
       "Article" -> "2010 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Early video game", 
        "Position" -> {{66, 81}, {963, 978}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "first video game", 
        "Position" -> {{263, 278}, {2400, 2415}, {49551, 49566}, {59857, 
         59872}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "known video game", 
        "Position" -> {{7531, 7546}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "other video game", 
        "Position" -> {{10571, 10586}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "popular video game", 
        "Position" -> {{16718, 16735}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "influential video game", 
        "Position" -> {{22780, 22801}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "recent video game", 
        "Position" -> {{27463, 27479}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Many video game", 
        "Position" -> {{33521, 33535}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "large video game", 
        "Position" -> {{35346, 35361}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Outside video game", 
        "Position" -> {{41327, 41344}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "retro video game", 
        "Position" -> {{50268, 50283}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "early video game", 
        "Position" -> {{53175, 53190}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Other video game", 
        "Position" -> {{60045, 60060}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "Swedish video game", 
        "Position" -> {{543, 560}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "top video game", 
        "Position" -> {{3558, 3571}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "individual video game",
         "Position" -> {{3726, 3746}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "online video game", 
        "Position" -> {{4627, 4643}}], 
       Association[
       "Article" -> "List of cooperative video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games with LGBT characters", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2003 in video games", "Match" -> "European video game", 
        "Position" -> {{3525, 3543}}], 
       Association[
       "Article" -> "2003 in video games", "Match" -> "dominant video game", 
        "Position" -> {{4646, 4664}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "certain video game", 
        "Position" -> {{583, 600}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "Most video game", 
        "Position" -> {{1080, 1094}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> 
        "successful video-game", "Position" -> {{4731, 4751}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "large video game", 
        "Position" -> {{9001, 9016}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "larger video game", 
        "Position" -> {{16880, 16896}}], 
       Association[
       "Article" -> "Field of view in video games", "Match" -> 
        "different video game", "Position" -> {{4278, 4297}}], 
       Association[
       "Article" -> "Field of view in video games", "Match" -> 
        "modern video game", "Position" -> {{4533, 4549}}], 
       Association[
       "Article" -> "Arcade game", "Match" -> "arcade video game", 
        "Position" -> {{235, 251}, {4022, 4038}, {8133, 8149}, {8267, 8283}, {
         13838, 13854}, {14799, 14815}, {15791, 15807}, {15872, 15888}, {
         19736, 19752}, {20274, 20290}, {21646, 21662}, {21973, 21989}, {
         22075, 22091}, {22361, 22377}, {23392, 23408}, {23479, 23495}, {
         23643, 23659}, {23995, 24011}}], 
       Association[
       "Article" -> "Arcade game", "Match" -> "global video game", 
        "Position" -> {{23537, 23553}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "true video game", 
        "Position" -> {{616, 630}, {1208, 1222}, {11279, 11293}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "first video game", 
        "Position" -> {{961, 976}, {1805, 1820}, {4409, 4424}, {5627, 5642}, {
         6897, 6912}, {18518, 18533}, {28387, 28402}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "commercial video game", 
        "Position" -> {{2840, 2860}, {17589, 17609}, {22893, 22913}, {23320, 
         23340}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "early video game", "Position" -> {{12552, 12567}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "previous video game", "Position" -> {{14208, 14226}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "several video game", "Position" -> {{17517, 17534}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "available video game", "Position" -> {{26362, 26381}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "first video game", 
        "Position" -> {{2100, 2115}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "Handheld video game", 
        "Position" -> {{6919, 6937}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "most video game", 
        "Position" -> {{33034, 33048}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "specific video game", 
        "Position" -> {{37934, 37952}}], 
       Association[
       "Article" -> "CSI (video games)", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bomberman video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1998 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "largest video game",
         "Position" -> {{24, 41}, {371, 388}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "popular video-game",
         "Position" -> {{482, 499}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "main video game", 
        "Position" -> {{3844, 3858}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "major video game", 
        "Position" -> {{4064, 4079}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "musical video game", 
        "Position" -> {{2992, 3009}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "local video game", 
        "Position" -> {{3595, 3610}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "first video game", 
        "Position" -> {{4737, 4752}, {4859, 4874}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "significant video game", 
        "Position" -> {{9361, 9382}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "Most video game", 
        "Position" -> {{10870, 10884}, {10922, 10936}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "live video game", 
        "Position" -> {{10992, 11006}}], 
       Association[
       "Article" -> "List of open-source video games", "Match" -> 
        "Commercial video game", "Position" -> {{2887, 2907}}], 
       Association[
       "Article" -> "List of open-source video games", "Match" -> 
        "commercial video game", "Position" -> {{3046, 3066}, {3104, 3124}}], 
       
       Association[
       "Article" -> "Sports video game", "Match" -> "Olympic video game", 
        "Position" -> {{4503, 4520}, {14655, 14672}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "first video game", 
        "Position" -> {{6863, 6878}, {10358, 10373}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "new video game", 
        "Position" -> {{7260, 7273}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "successful video game", 
        "Position" -> {{7334, 7354}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "arcade video game", 
        "Position" -> {{7385, 7401}, {7728, 7744}, {10633, 10649}, {12071, 
         12087}, {12170, 12186}}], 
       Association[
       "Article" -> "List of best-selling Xbox One video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Online game", "Match" -> "modern video game", 
        "Position" -> {{2031, 2047}}], 
       Association[
       "Article" -> "Online game", "Match" -> "Many video game", 
        "Position" -> {{2603, 2617}}], 
       Association[
       "Article" -> "Online game", "Match" -> "Multiplayer video game", 
        "Position" -> {{15273, 15294}}], 
       Association[
       "Article" -> "1999 in video games", "Match" -> "acclaimed video game", 
        "Position" -> {{504, 523}}], 
       Association[
       "Article" -> "Crunch (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2008 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "violent video game", 
        "Position" -> {{1456, 1473}, {1656, 1673}, {1893, 1910}, {2088, 
         2105}, {9927, 9944}, {10524, 10541}, {40981, 40998}, {45586, 
         45603}, {46052, 46069}, {47429, 47446}, {64692, 64709}, {64734, 
         64751}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "first video game",
         "Position" -> {{17935, 17950}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "Later video game",
         "Position" -> {{40501, 40516}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "grisly video game", "Position" -> {{46530, 46546}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "non video-game", 
        "Position" -> {{55028, 55041}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "multiplayer video game", "Position" -> {{59908, 59929}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "right video game",
         "Position" -> {{60535, 60550}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "neutral video game", "Position" -> {{63409, 63426}}], 
       Association[
       "Article" -> "2012 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "1992 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Quest (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Nintendo Switch games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of grand strategy video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of South Park video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Board game", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "oldest video game", 
        "Position" -> {{1897, 1913}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "specific video game",
         "Position" -> {{2829, 2847}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "British video game", 
        "Position" -> {{3248, 3265}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "electronic video game", "Position" -> {{3821, 3841}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "national videogame", 
        "Position" -> {{5090, 5107}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "Independent video game", "Position" -> {{7546, 7567}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "major video game", 
        "Position" -> {{12125, 12140}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "subsequent video game", "Position" -> {{16002, 16022}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "older video game", 
        "Position" -> {{17525, 17540}, {17825, 17840}}], 
       Association[
       "Article" -> "List of Nintendo DS games", "Match" -> 
        "physical video game", "Position" -> {{19, 37}}], 
       Association[
       "Article" -> "2006 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Digimon video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Skybox (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of best-selling PlayStation 4 video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Elder Scrolls video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1995 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of god video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Star Wars video games", "Match" -> 
        "other video game", "Position" -> {{15341, 15356}}], 
       Association[
       "Article" -> "1994 in video games", "Match" -> "first video game", 
        "Position" -> {{1824, 1839}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "various video game", "Position" -> {{587, 604}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "specific video game", "Position" -> {{850, 868}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "whole video game", "Position" -> {{8925, 8940}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "many video game", "Position" -> {{9270, 9284}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "small video game", "Position" -> {{10523, 10538}}], 
       Association[
       "Article" -> "Video game design", "Match" -> "most video game", 
        "Position" -> {{3228, 3242}}], 
       Association[
       "Article" -> "Video game design", "Match" -> "Japanese video game", 
        "Position" -> {{6025, 6043}}], 
       Association[
       "Article" -> "List of real-time strategy video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Race and video games", "Match" -> "annual video game", 
        "Position" -> {{2473, 2489}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "several video game", 
        "Position" -> {{5905, 5922}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "male video game", 
        "Position" -> {{6748, 6762}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "black video game", 
        "Position" -> {{11812, 11827}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "largest video game", 
        "Position" -> {{2395, 2412}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "Other video game", 
        "Position" -> {{3692, 3707}}], 
       Association[
       "Article" -> "Middle-earth in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Religion and video games", "Match" -> 
        "Religious video game", "Position" -> {{6101, 6120}}], 
       Association[
       "Article" -> "Religion and video games", "Match" -> 
        "German video game", "Position" -> {{7545, 7561}}], 
       Association[
       "Article" -> "1993 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Advertising in video games", "Match" -> 
        "online video game", "Position" -> {{3157, 3173}}], 
       Association[
       "Article" -> "List of PlayStation Portable games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "female video game", "Position" -> {{1986, 2002}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "male video game", "Position" -> {{1988, 2002}, {2046, 2060}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "American video game", "Position" -> {{2396, 2414}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "Japanese video game", "Position" -> {{2469, 2487}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "better video game", "Position" -> {{6429, 6445}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "first video game", "Position" -> {{6698, 6713}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "violent video game", "Position" -> {{14925, 14942}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "Japanese video game", 
        "Position" -> {{2933, 2951}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "other video game", 
        "Position" -> {{5286, 5301}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "larger video game", 
        "Position" -> {{5488, 5504}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "handheld video game", 
        "Position" -> {{5541, 5559}}], 
       Association[
       "Article" -> "List of artillery video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Teenage Mutant Ninja Turtles video games", 
        "Match" -> "Japanese video game", "Position" -> {{88, 106}}], 
       Association[
       "Article" -> "List of Teenage Mutant Ninja Turtles video games", 
        "Match" -> "TMNT video game", "Position" -> {{504, 518}}], 
       Association[
       "Article" -> "List of best-selling Nintendo Switch video games", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "AAA (video game industry)", "Match" -> 
        "first video game", "Position" -> {{994, 1009}}], 
       Association[
       "Article" -> "AAA (video game industry)", "Match" -> 
        "expensive video game", "Position" -> {{1206, 1225}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> 
        "official video game", "Position" -> {{242, 260}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> 
        "Standalone video game", "Position" -> {{416, 436}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> "first video game", 
        "Position" -> {{3643, 3658}}], 
       Association[
       "Article" -> "List of World War II video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Music video game", "Match" -> Missing["MatchNotFound"]], 
       
       Association[
       "Article" -> "List of video games based on DC Comics", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of basketball video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Strategy video game", "Match" -> "online video game", 
        "Position" -> {{20309, 20325}}], 
       Association[
       "Article" -> "List of Naruto video games", "Match" -> 
        "Naruto video game", "Position" -> {{1, 17}, {596, 612}, {721, 737}}], 
       Association[
       "Article" -> 
        "List of commercial video games with available source code", "Match" -> 
        "commercial video game", "Position" -> {{19, 39}, {4178, 4198}}], 
       Association[
       "Article" -> 
        "List of commercial video games with available source code", "Match" -> 
        "Commercial video game", "Position" -> {{219, 239}, {4009, 4029}}], 
       Association[
       "Article" -> "List of Techland video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Clan (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games considered artistic", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in India", "Match" -> "global video game", 
        "Position" -> {{804, 820}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> 
        "international video game", "Position" -> {{853, 876}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> "more video game", 
        "Position" -> {{5610, 5624}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> "Korean video game", 
        "Position" -> {{8615, 8631}, {12148, 12164}}], 
       Association[
       "Article" -> "Camping (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1990 in video games", "Match" -> "following video game", 
        "Position" -> {{2174, 2193}}], 
       Association[
       "Article" -> "1990 in video games", "Match" -> "Notable video game", 
        "Position" -> {{2360, 2377}}], 
       Association[
       "Article" -> "Open world", "Match" -> "current video game", 
        "Position" -> {{3534, 3551}}], 
       Association[
       "Article" -> "Virtual camera system", "Match" -> "first video game", 
        "Position" -> {{10021, 10036}}], 
       Association[
       "Article" -> "1989 in video games", "Match" -> "Notable video game", 
        "Position" -> {{2325, 2342}}], 
       Association[
       "Article" -> "1989 in video games", "Match" -> "first video game", 
        "Position" -> {{6171, 6186}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "Numerous video game", "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "other video game", "Position" -> {{1002, 1017}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> "full video game",
         "Position" -> {{14895, 14909}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "several video game", "Position" -> {{15353, 15370}}], 
       Association[
       "Article" -> "List of Sonic the Hedgehog video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1988 in video games", "Match" -> "various video game", 
        "Position" -> {{4449, 4466}}], 
       Association[
       "Article" -> "List of PlayStation 2 games (A\[Dash]K)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "large video game", "Position" -> {{1157, 1172}}], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "Large video game", "Position" -> {{2612, 2627}}], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "other video game", "Position" -> {{34732, 34747}}], 
       Association[
       "Article" -> "List of Nancy Drew video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Combo (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "Olympic video game", 
        "Position" -> {{1, 18}, {1997, 2014}, {2210, 2227}, {5486, 5503}}], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "older video game", 
        "Position" -> {{224, 239}}], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "related video game", 
        "Position" -> {{2885, 2902}}], 
       Association[
       "Article" -> "List of Terminator video games", "Match" -> 
        "Several video game", "Position" -> {{695, 712}, {4319, 4336}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Japanese video game", "Position" -> {{11481, 11499}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Christian video game", "Position" -> {{11939, 11958}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "simplistic video game", "Position" -> {{13967, 13987}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "other video game", 
        "Position" -> {{14014, 14029}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "traditional video game", "Position" -> {{14168, 14189}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Handheld video game", "Position" -> {{15569, 15587}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "multiplayer video game", "Position" -> {{15944, 15965}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Specific video game", "Position" -> {{16352, 16370}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Controversial video game", "Position" -> {{16565, 16588}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "indie video game", 
        "Position" -> {{18524, 18539}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "First video game", 
        "Position" -> {{22191, 22206}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Interactive video game", "Position" -> {{24511, 24532}}], 
       Association[
       "Article" -> "FIFA (video game series)", "Match" -> "first video game",
         "Position" -> {{43703, 43718}}], 
       Association[
       "Article" -> "Spawning (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2009 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Codemasters video games", "Match" -> 
        "British video game", "Position" -> {{18, 35}}], 
       Association[
       "Article" -> "List of music video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "handheld video game", "Position" -> {{109, 127}}], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "own video game", "Position" -> {{1376, 1389}, {14216, 14229}}], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "programmable video game", "Position" -> {{14650, 14672}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "Isometric video game", "Position" -> {{1, 20}, {15869, 15888}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "isometric video game", 
        "Position" -> {{1848, 1867}, {4474, 4493}, {5583, 5602}, {15755, 
         15774}, {15914, 15933}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "first video game", "Position" -> {{5701, 5716}, {6413, 6428}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "oblique video game", "Position" -> {{15832, 15849}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "most video game", 
        "Position" -> {{2325, 2339}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "online video game", 
        "Position" -> {{9733, 9749}, {31549, 31565}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> 
        "pathological video game", "Position" -> {{23183, 23205}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "several video game", 
        "Position" -> {{29106, 29123}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "first video game", 
        "Position" -> {{29831, 29846}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "violent video game", 
        "Position" -> {{34888, 34905}}], 
       Association[
       "Article" -> "List of 4X video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1987 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of anime based on video games", "Match" -> 
        "Japanese video game", "Position" -> {{255, 273}}], 
       Association[
       "Article" -> "List of Sony Interactive Entertainment video games", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Simpsons video games", "Match" -> 
        "motivated video game", "Position" -> {{904, 923}}], 
       Association[
       "Article" -> "List of The Simpsons video games", "Match" -> 
        "first video game", "Position" -> {{1416, 1431}}], 
       Association[
       "Article" -> "Pok\[EAcute]mon (video game series)", "Match" -> 
        "Pok\[EAcute]mon video game", 
        "Position" -> {{4797, 4814}, {28290, 28307}}], 
       Association[
       "Article" -> "Machine learning in video games", "Match" -> 
        "various video game", "Position" -> {{11827, 11844}}], 
       Association[
       "Article" -> "Machine learning in video games", "Match" -> 
        "different video game", "Position" -> {{17774, 17793}}], 
       Association[
       "Article" -> "Split screen (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bandai Namco video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of 505 video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of city-building video games", "Match" -> 
        "related video game", "Position" -> {{382, 399}}], 
       Association[
       "Article" -> "Action game", "Match" -> "earlier video game", 
        "Position" -> {{17008, 17025}}], 
       Association[
       "Article" -> "Action game", "Match" -> "later video game", 
        "Position" -> {{17610, 17625}}], 
       Association[
       "Article" -> "Life (video games)", "Match" -> "older video game", 
        "Position" -> {{3069, 3084}}], 
       Association[
       "Article" -> "List of baseball video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1986 in video games", "Match" -> "first video game", 
        "Position" -> {{6041, 6056}}], 
       Association[
       "Article" -> "Shrek video games", "Match" -> "licensed video game", 
        "Position" -> {{25, 43}}], 
       Association[
       "Article" -> "List of Yoshi video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1980 in video games", "Match" -> "first video game", 
        "Position" -> {{1281, 1296}, {2260, 2275}}], 
       Association[
       "Article" -> "1980 in video games", "Match" -> "first video-game", 
        "Position" -> {{3057, 3072}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "competitive video-game", 
        "Position" -> {{2042, 2063}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "independent video game", 
        "Position" -> {{6392, 6413}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "competitive video game", 
        "Position" -> {{8030, 8051}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "own video game", 
        "Position" -> {{1122, 1135}, {7860, 7873}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "first video game", 
        "Position" -> {{2883, 2898}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "re video game", 
        "Position" -> {{9743, 9755}, {32709, 32721}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "more video game", 
        "Position" -> {{32707, 32721}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "other videogame", 
        "Position" -> {{36083, 36097}, {41883, 41897}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "licensed videogame", 
        "Position" -> {{39498, 39515}}], 
       Association[
       "Article" -> "1980s in video games", "Match" -> "entire video game", 
        "Position" -> {{4098, 4114}}], 
       Association[
       "Article" -> "1980s in video games", "Match" -> "Notable video-game", 
        "Position" -> {{6711, 6728}}], 
       Association[
       "Article" -> "Monopoly video games", "Match" -> "several video game", 
        "Position" -> {{17, 34}}], 
       Association[
       "Article" -> "1971 in video games", "Match" -> "commercial video game",
         "Position" -> {{314, 334}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "certain video game", "Position" -> {{920, 937}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "current video game", "Position" -> {{1127, 1144}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "violent video game", "Position" -> {{2510, 2527}, {2686, 2703}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "European video game", "Position" -> {{6679, 6697}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "official video game", "Position" -> {{8756, 8774}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "governmental video game", "Position" -> {{10327, 10349}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "commercial video game", "Position" -> {{10808, 10828}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "Korean video game", "Position" -> {{19576, 19592}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "statutory video game", "Position" -> {{21340, 21359}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "various video game", "Position" -> {{22136, 22153}}], 
       Association[
       "Article" -> "List of Game Boy Advance games", "Match" -> 
        "handheld video game", "Position" -> {{59, 77}, {455, 473}}], 
       Association[
       "Article" -> "List of World War I video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Sims video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of historical video games", "Match" -> 
        "historical video game", 
        "Position" -> {{5, 25}, {125, 145}, {321, 341}}], 
       Association[
       "Article" -> "List of business simulation video games", "Match" -> 
        "related video game", "Position" -> {{425, 442}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "independent video game", 
        "Position" -> {{26, 47}, {3528, 3549}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "Indie video game", 
        "Position" -> {{19296, 19311}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "dedicated video game", 
        "Position" -> {{39516, 39535}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "indie video game", 
        "Position" -> {{43439, 43454}}], 
       Association[
       "Article" -> "Fog of war", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1985 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Matchmaking (video games)", "Match" -> 
        "multiplayer video game", "Position" -> {{4, 25}}], 
       Association[
       "Article" -> "Cult following", "Match" -> "later video game", 
        "Position" -> {{5741, 5756}}], 
       Association[
       "Article" -> "List of NASCAR video games", "Match" -> 
        "several video game", "Position" -> {{107, 124}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "educational video game", 
        "Position" -> {{4, 25}, {1266, 1287}, {10161, 10182}, {10358, 
         10379}, {15914, 15935}, {30498, 30519}, {31660, 31681}, {32690, 
         32711}, {32887, 32908}, {33032, 33053}, {33293, 33314}, {33598, 
         33619}, {34266, 34287}, {34535, 34556}, {35180, 35201}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "specific video game", "Position" -> {{13206, 13224}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "interactive video game", "Position" -> {{20119, 20140}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "commercial video game", 
        "Position" -> {{25576, 25596}, {29324, 29344}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "Commercial video game", "Position" -> {{26004, 26024}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> "many video game", 
        "Position" -> {{30152, 30166}}], 
       Association[
       "Article" -> "1991 in video games", "Match" -> "top video game", 
        "Position" -> {{430, 443}}], 
       Association[
       "Article" -> "List of Megami Tensei video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Mob (video games)", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "3D video game", "Position" -> {{3258, 3270}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "greatest video game", "Position" -> {{19180, 19198}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "later video game", "Position" -> {{23322, 23337}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "female video game", "Position" -> {{23449, 23465}}], 
       Association[
       "Article" -> "List of video games based on cartoons", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in the Philippines", "Match" -> 
        "French video game", "Position" -> {{1753, 1769}}], 
       Association[
       "Article" -> "Video games in the Philippines", "Match" -> 
        "various video game", "Position" -> {{2968, 2985}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "American video game", 
        "Position" -> {{2447, 2465}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "total video game", 
        "Position" -> {{2515, 2530}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "first video game", 
        "Position" -> {{6526, 6541}, {7172, 7187}}], 
       Association[
       "Article" -> "List of Metal Slug video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Transformers video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of puzzle video games", "Match" -> 
        "matching video game", "Position" -> {{111, 129}}], 
       Association[
       "Article" -> "List of Middle-earth video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "best video game", "Position" -> {{1351, 1365}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "numerous video game", "Position" -> {{1498, 1516}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "Korean video game", "Position" -> {{2203, 2219}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "successful video game", "Position" -> {{4158, 4178}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "first video game", "Position" -> {{8883, 8898}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "Japanese video game", "Position" -> {{9855, 9873}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "major video game", "Position" -> {{12280, 12295}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "popular video game", "Position" -> {{17033, 17050}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "widespread video game", "Position" -> {{18015, 18035}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "online video game", "Position" -> {{20030, 20046}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "largest video game", 
        "Position" -> {{16, 33}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "local video game", 
        "Position" -> {{1115, 1130}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "foreign video game", 
        "Position" -> {{1197, 1214}}], 
       Association[
       "Article" -> "Rush (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of best-selling Wii video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1984 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1982 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Sunsoft video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games featuring Miis", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "Australian video game", 
        "Position" -> {{573, 593}, {1331, 1351}, {1817, 1837}, {4787, 4807}}], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "multinational video game", "Position" -> {{3056, 3079}}], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "Notable video game", "Position" -> {{6576, 6593}, {8094, 8111}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "first video game", 
        "Position" -> {{723, 738}, {7801, 7816}, {9735, 9750}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "early video game", 
        "Position" -> {{11190, 11205}, {12282, 12297}}], 
       Association[
       "Article" -> "Video game development", "Match" -> 
        "external video game", 
        "Position" -> {{16885, 16903}, {18332, 18350}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "Large video game", 
        "Position" -> {{17374, 17389}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "larger video game", 
        "Position" -> {{17512, 17528}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "Most video game", 
        "Position" -> {{18301, 18315}, {52014, 52028}}], 
       Association[
       "Article" -> "Video game development", "Match" -> 
        "successful video game", "Position" -> {{32334, 32354}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "capable video game",
         "Position" -> {{45044, 45061}}], 
       Association[
       "Article" -> "1981 in video games", "Match" -> "British video game", 
        "Position" -> {{1972, 1989}}], 
       Association[
       "Article" -> "1981 in video games", "Match" -> "first video game", 
        "Position" -> {{2870, 2885}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "and/or video game", 
        "Position" -> {{1527, 1543}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "dedicated video game", 
        "Position" -> {{6138, 6157}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "other video game", 
        "Position" -> {{6287, 6302}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "older video game", 
        "Position" -> {{9847, 9862}}], 
       Association[
       "Article" -> "List of Sega video games", "Match" -> "Sega video game", 
        "Position" -> {{795, 809}}], 
       Association[
       "Article" -> "List of cricket video games", "Match" -> " video game", 
        "Position" -> {{35, 45}}], 
       Association[
       "Article" -> "List of LucasArts games", "Match" -> " video game", 
        "Position" -> {{18, 28}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "mobile video game", "Position" -> {{1151, 1167}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "independent video game", "Position" -> {{2720, 2741}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "new video game", "Position" -> {{5336, 5349}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "successful video game", "Position" -> {{9378, 9398}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "funded video game", "Position" -> {{11021, 11037}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "particular video game", "Position" -> {{13114, 13134}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "American video game", 
        "Position" -> {{29, 47}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "successful video game", 
        "Position" -> {{693, 713}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "acclaimed video game", 
        "Position" -> {{2339, 2358}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "best video game", 
        "Position" -> {{2398, 2412}, {28412, 28426}}], 
       Association[
       "Article" -> "List of PC games (A)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Tank (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1970s in video games", "Match" -> "earliest video game", 
        "Position" -> {{120, 138}, {204, 222}}], 
       Association[
       "Article" -> "1970s in video games", "Match" -> "Notable video game", 
        "Position" -> {{2667, 2684}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> "artistic video game", 
        "Position" -> {{1469, 1487}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> "first video game", 
        "Position" -> {{11049, 11064}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> 
        "professional video game", "Position" -> {{11391, 11413}}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> TypeSystem`PackageScope`AtomShape[313.6], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 3, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 658], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> TypeSystem`PackageScope`AtomShape[313.6], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 3, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 658], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 658, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Article", 
                  Style[
                  "Article", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Article"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Article"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["arcade video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{694, 710}, ShowStringCharacters -> False], 
                  Style[
                   Style[{694, 710}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1219, 1235}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1219, 1235}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["5 total \:203a ", ""], 
                  Style[
                   Superscript["5 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1033, 1048}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1033, 1048}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1423, 1441}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1423, 1441}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["independent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2206, 2227}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2206, 2227}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2588, 2604}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2588, 2604}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{51955, 51971}, ShowStringCharacters -> False], 
                  Style[
                   Style[{51955, 51971}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2829, 2844}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2829, 2844}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{9723, 9737}, ShowStringCharacters -> False], 
                  Style[
                   Style[{9723, 9737}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{27925, 27939}, ShowStringCharacters -> False], 
                  Style[
                   Style[{27925, 27939}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{21074, 21088}, ShowStringCharacters -> False], 
                  Style[
                   Style[{21074, 21088}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{26988, 27009}, ShowStringCharacters -> False], 
                  Style[
                   Style[{26988, 27009}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["educational video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{29555, 29576}, ShowStringCharacters -> False], 
                  Style[
                   Style[{29555, 29576}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 658, 1], {1, 658 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 658, 1], {1, 658 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[658, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[658, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 658, 1], {1, 658 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 658, 1], {1, 658 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{691., {216.134033203125, 221.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{691., {216.134033203125, 221.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846374977226075*^9, 3.846375768992614*^9, 
  3.8463762354458647`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"560bb57e-b813-4a5f-a225-719816d75636"]
}, Closed]],

Cell["MatchCount", "CodeText",
 CellChangeTimes->{{3.846374601292663*^9, 
  3.846374605322412*^9}},ExpressionUUID->"ff637d78-adc5-4752-ad47-\
089fbc41c85e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<MatchCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749911451387`*^9, 3.846374992504616*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"218e950e-8f0b-4e1b-9c7e-c04d72a5c88b"],

Cell[BoxData["935"], "Output",
 CellChangeTimes->{3.846374992867779*^9, 3.8463757781918287`*^9, 
  3.846376238241053*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"1ad7a448-3dc0-42c1-8b6d-8aa1c7796974"]
}, Closed]],

Cell["Counts", "CodeText",
 CellChangeTimes->{{3.84637460851322*^9, 
  3.8463746138292303`*^9}},ExpressionUUID->"0456c81a-eb1a-4eb0-b26c-\
8a640cb91555"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846375006728085*^9, 3.8463750072147713`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"673b1405-3c58-479c-9ffe-0305353ea9db"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "arcade video game", "Count" -> 5], 
       Association["Match" -> "first video game", "Count" -> 33], 
       Association["Match" -> "American video game", "Count" -> 10], 
       Association["Match" -> "independent video game", "Count" -> 5], 
       Association["Match" -> "global video game", "Count" -> 10], 
       Association["Match" -> "Early video game", "Count" -> 2], 
       Association["Match" -> "Most video game", "Count" -> 4], 
       Association["Match" -> "most video game", "Count" -> 7], 
       Association["Match" -> "multiplayer video game", "Count" -> 9], 
       Association["Match" -> "educational video game", "Count" -> 4], 
       Association["Match" -> "larger video game", "Count" -> 5], 
       Association["Match" -> "other video game", "Count" -> 17], 
       Association["Match" -> "early video game", "Count" -> 8], 
       Association["Match" -> "violent video game", "Count" -> 10], 
       Association["Match" -> "many video game", "Count" -> 10], 
       Association["Match" -> "dedicated video game", "Count" -> 6], 
       Association["Match" -> "French video game", "Count" -> 2], 
       Association["Match" -> "reputable video game", "Count" -> 1], 
       Association["Match" -> "ready video game", "Count" -> 1], 
       Association["Match" -> "handheld video game", "Count" -> 5], 
       Association["Match" -> "modern video game", "Count" -> 7], 
       Association["Match" -> "commercial video game", "Count" -> 11], 
       Association["Match" -> "entire video game", "Count" -> 2], 
       Association["Match" -> "major video game", "Count" -> 10], 
       Association["Match" -> "fundamental video game", "Count" -> 1], 
       Association["Match" -> "known video game", "Count" -> 3], 
       Association["Match" -> "new video game", "Count" -> 7], 
       Association["Match" -> "fewer video game", "Count" -> 1], 
       Association["Match" -> "unrated video game", "Count" -> 1], 
       Association["Match" -> "Chinese video game", "Count" -> 2], 
       Association["Match" -> "top video game", "Count" -> 4], 
       Association["Match" -> "foreign video game", "Count" -> 3], 
       Association["Match" -> "controversial video game", "Count" -> 4], 
       Association["Match" -> "stereoscopic video game", "Count" -> 1], 
       Association["Match" -> "Christian video game", "Count" -> 3], 
       Association["Match" -> "erotic video game", "Count" -> 3], 
       Association["Match" -> "ninja video game", "Count" -> 1], 
       Association["Match" -> "Western video game", "Count" -> 2], 
       Association["Match" -> "shaded video game", "Count" -> 1], 
       Association["Match" -> "cooperative video game", "Count" -> 1], 
       Association["Match" -> "expensive video game", "Count" -> 3], 
       Association["Match" -> "playable video game", "Count" -> 1], 
       Association["Match" -> "important video game", "Count" -> 1], 
       Association["Match" -> "mature video game", "Count" -> 2], 
       Association["Match" -> "interactive video game", "Count" -> 3], 
       Association["Match" -> "Other video game", "Count" -> 4], 
       Association["Match" -> "inspired video game", "Count" -> 1], 
       Association["Match" -> "novel video game", "Count" -> 1], 
       Association["Match" -> "masterful video game", "Count" -> 1], 
       Association["Match" -> "best video game", "Count" -> 3], 
       Association["Match" -> Missing["MatchNotFound"], "Count" -> 89], 
       Association["Match" -> "true video game", "Count" -> 2], 
       Association["Match" -> "successful video game", "Count" -> 7], 
       Association["Match" -> "European video game", "Count" -> 3], 
       Association["Match" -> "mobile video game", "Count" -> 4], 
       Association["Match" -> "annual video game", "Count" -> 2], 
       Association["Match" -> "International video game", "Count" -> 1], 
       Association["Match" -> "largest video game", "Count" -> 5], 
       Association["Match" -> "certain video game", "Count" -> 4], 
       Association["Match" -> "Japanese video game", "Count" -> 14], 
       Association["Match" -> "active video game", "Count" -> 1], 
       Association["Match" -> "local video game", "Count" -> 3], 
       Association["Match" -> "earliest video game", "Count" -> 5], 
       Association["Match" -> "console video game", "Count" -> 2], 
       Association["Match" -> "few video game", "Count" -> 1], 
       Association["Match" -> "popular video-game", "Count" -> 2], 
       Association["Match" -> "popular video game", "Count" -> 8], 
       Association["Match" -> "Certain video game", "Count" -> 1], 
       Association["Match" -> "current video game", "Count" -> 3], 
       Association["Match" -> "licensed video game", "Count" -> 5], 
       Association["Match" -> "worst video game", "Count" -> 2], 
       Association["Match" -> "adult video game", "Count" -> 2], 
       Association["Match" -> "Russian video game", "Count" -> 1], 
       Association["Match" -> "Commercial videogame", "Count" -> 1], 
       Association["Match" -> "contemporary video game", "Count" -> 1], 
       Association["Match" -> "complex video game", "Count" -> 1], 
       Association["Match" -> "female video game", "Count" -> 4], 
       Association["Match" -> "owned video game", "Count" -> 1], 
       Association["Match" -> "commercial videogame", "Count" -> 2], 
       Association["Match" -> "primary video game", "Count" -> 1], 
       Association["Match" -> "good video game", "Count" -> 1], 
       Association["Match" -> "online video game", "Count" -> 10], 
       Association["Match" -> "multiple video game", "Count" -> 1], 
       Association["Match" -> "established video game", "Count" -> 2], 
       Association["Match" -> "net video game", "Count" -> 1], 
       Association["Match" -> "re video game", "Count" -> 2], 
       Association["Match" -> "unquote video game", "Count" -> 1], 
       Association["Match" -> "grisly video game", "Count" -> 2], 
       Association["Match" -> "favorite video game", "Count" -> 2], 
       Association["Match" -> "experimental video game", "Count" -> 1], 
       Association["Match" -> "such video game", "Count" -> 1], 
       Association["Match" -> "high video game", "Count" -> 1], 
       Association["Match" -> "typical video game", "Count" -> 1], 
       Association["Match" -> "nonsignificant video game", "Count" -> 1], 
       Association["Match" -> "numerous video game", "Count" -> 6], 
       Association["Match" -> "several video game", "Count" -> 7], 
       Association["Match" -> "low video game", "Count" -> 1], 
       Association["Match" -> "Pok\[EAcute]mon video game", "Count" -> 2], 
       Association["Match" -> "latest video game", "Count" -> 1], 
       Association["Match" -> "evil video game", "Count" -> 1], 
       Association["Match" -> "classic video game", "Count" -> 1], 
       Association["Match" -> "obscure video game", "Count" -> 1], 
       Association["Match" -> "vintage video game", "Count" -> 1], 
       Association["Match" -> "prominent video game", "Count" -> 1], 
       Association["Match" -> "short video game", "Count" -> 1], 
       Association["Match" -> "dominant video game", "Count" -> 3], 
       Association["Match" -> "fanservice video game", "Count" -> 1], 
       Association["Match" -> "biggest video game", "Count" -> 1], 
       Association["Match" -> "own video game", "Count" -> 4], 
       Association["Match" -> "proprietary video game", "Count" -> 1], 
       Association["Match" -> "various video game", "Count" -> 6], 
       Association["Match" -> "related video game", "Count" -> 6], 
       Association["Match" -> "Numerous video game", "Count" -> 8], 
       Association["Match" -> "original video game", "Count" -> 1], 
       Association["Match" -> "roguelike video game", "Count" -> 1], 
       Association["Match" -> "recognizable video game", "Count" -> 1], 
       Association["Match" -> "matching video game", "Count" -> 2], 
       Association["Match" -> "corresponding video-game", "Count" -> 1], 
       Association["Match" -> "old video game", "Count" -> 2], 
       Association["Match" -> "cursed video game", "Count" -> 1], 
       Association["Match" -> "sexist video game", "Count" -> 1], 
       Association["Match" -> "poor video game", "Count" -> 1], 
       Association["Match" -> "holographic video game", "Count" -> 1], 
       Association["Match" -> "total video game", "Count" -> 2], 
       Association["Match" -> "Cancelled video game", "Count" -> 1], 
       Association["Match" -> "Female video game", "Count" -> 1], 
       Association["Match" -> "male video game", "Count" -> 3], 
       Association["Match" -> "Asian video game", "Count" -> 1], 
       Association["Match" -> "more video game", "Count" -> 3], 
       Association["Match" -> "notable video game", "Count" -> 1], 
       Association["Match" -> "earlier video game", "Count" -> 4], 
       Association["Match" -> "Eastern video game", "Count" -> 1], 
       Association["Match" -> "strategic video game", "Count" -> 1], 
       Association["Match" -> "Casual video game", "Count" -> 1], 
       Association["Match" -> "competitive video game", "Count" -> 3], 
       Association["Match" -> "inclined video-game", "Count" -> 1], 
       Association["Match" -> "certain videogame", "Count" -> 1], 
       Association["Match" -> "professional video game", "Count" -> 2], 
       Association["Match" -> "Many video game", "Count" -> 3], 
       Association["Match" -> "later video game", "Count" -> 4], 
       Association["Match" -> "different video game", "Count" -> 3], 
       Association["Match" -> "thin video game", "Count" -> 1], 
       Association["Match" -> "past video game", "Count" -> 1], 
       Association["Match" -> "influential video game", "Count" -> 1], 
       Association["Match" -> "recent video game", "Count" -> 1], 
       Association["Match" -> "large video game", "Count" -> 3], 
       Association["Match" -> "Outside video game", "Count" -> 1], 
       Association["Match" -> "retro video game", "Count" -> 1], 
       Association["Match" -> "Swedish video game", "Count" -> 1], 
       Association["Match" -> "individual video game", "Count" -> 1], 
       Association["Match" -> "successful video-game", "Count" -> 1], 
       Association["Match" -> "previous video game", "Count" -> 1], 
       Association["Match" -> "available video game", "Count" -> 1], 
       Association["Match" -> "Handheld video game", "Count" -> 2], 
       Association["Match" -> "specific video game", "Count" -> 4], 
       Association["Match" -> "main video game", "Count" -> 1], 
       Association["Match" -> "musical video game", "Count" -> 1], 
       Association["Match" -> "significant video game", "Count" -> 1], 
       Association["Match" -> "live video game", "Count" -> 1], 
       Association["Match" -> "Commercial video game", "Count" -> 3], 
       Association["Match" -> "Olympic video game", "Count" -> 2], 
       Association["Match" -> "Multiplayer video game", "Count" -> 1], 
       Association["Match" -> "acclaimed video game", "Count" -> 2], 
       Association["Match" -> "Later video game", "Count" -> 1], 
       Association["Match" -> "non video-game", "Count" -> 1], 
       Association["Match" -> "right video game", "Count" -> 1], 
       Association["Match" -> "neutral video game", "Count" -> 1], 
       Association["Match" -> "oldest video game", "Count" -> 1], 
       Association["Match" -> "British video game", "Count" -> 3], 
       Association["Match" -> "electronic video game", "Count" -> 1], 
       Association["Match" -> "national videogame", "Count" -> 1], 
       Association["Match" -> "Independent video game", "Count" -> 1], 
       Association["Match" -> "subsequent video game", "Count" -> 1], 
       Association["Match" -> "older video game", "Count" -> 4], 
       Association["Match" -> "physical video game", "Count" -> 1], 
       Association["Match" -> "whole video game", "Count" -> 1], 
       Association["Match" -> "small video game", "Count" -> 1], 
       Association["Match" -> "black video game", "Count" -> 1], 
       Association["Match" -> "Religious video game", "Count" -> 1], 
       Association["Match" -> "German video game", "Count" -> 1], 
       Association["Match" -> "better video game", "Count" -> 1], 
       Association["Match" -> "TMNT video game", "Count" -> 1], 
       Association["Match" -> "official video game", "Count" -> 2], 
       Association["Match" -> "Standalone video game", "Count" -> 1], 
       Association["Match" -> "Naruto video game", "Count" -> 1], 
       Association["Match" -> "international video game", "Count" -> 1], 
       Association["Match" -> "Korean video game", "Count" -> 3], 
       Association["Match" -> "following video game", "Count" -> 1], 
       Association["Match" -> "Notable video game", "Count" -> 4], 
       Association["Match" -> "full video game", "Count" -> 1], 
       Association["Match" -> "Large video game", "Count" -> 2], 
       Association["Match" -> "Several video game", "Count" -> 1], 
       Association["Match" -> "simplistic video game", "Count" -> 1], 
       Association["Match" -> "traditional video game", "Count" -> 1], 
       Association["Match" -> "Specific video game", "Count" -> 1], 
       Association["Match" -> "Controversial video game", "Count" -> 1], 
       Association["Match" -> "indie video game", "Count" -> 2], 
       Association["Match" -> "First video game", "Count" -> 1], 
       Association["Match" -> "Interactive video game", "Count" -> 1], 
       Association["Match" -> "programmable video game", "Count" -> 1], 
       Association["Match" -> "Isometric video game", "Count" -> 1], 
       Association["Match" -> "isometric video game", "Count" -> 1], 
       Association["Match" -> "oblique video game", "Count" -> 1], 
       Association["Match" -> "pathological video game", "Count" -> 1], 
       Association["Match" -> "motivated video game", "Count" -> 1], 
       Association["Match" -> "first video-game", "Count" -> 1], 
       Association["Match" -> "competitive video-game", "Count" -> 1], 
       Association["Match" -> "other videogame", "Count" -> 1], 
       Association["Match" -> "licensed videogame", "Count" -> 1], 
       Association["Match" -> "Notable video-game", "Count" -> 1], 
       Association["Match" -> "governmental video game", "Count" -> 1], 
       Association["Match" -> "statutory video game", "Count" -> 1], 
       Association["Match" -> "historical video game", "Count" -> 1], 
       Association["Match" -> "Indie video game", "Count" -> 1], 
       Association["Match" -> "3D video game", "Count" -> 1], 
       Association["Match" -> "greatest video game", "Count" -> 1], 
       Association["Match" -> "widespread video game", "Count" -> 1], 
       Association["Match" -> "Australian video game", "Count" -> 1], 
       Association["Match" -> "multinational video game", "Count" -> 1], 
       Association["Match" -> "external video game", "Count" -> 1], 
       Association["Match" -> "capable video game", "Count" -> 1], 
       Association["Match" -> "and/or video game", "Count" -> 1], 
       Association["Match" -> "Sega video game", "Count" -> 1], 
       Association["Match" -> " video game", "Count" -> 2], 
       Association["Match" -> "funded video game", "Count" -> 1], 
       Association["Match" -> "particular video game", "Count" -> 1], 
       Association["Match" -> "artistic video game", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 227], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 227], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 227, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["arcade video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["independent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["educational video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["larger video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["other video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["violent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["many video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["dedicated video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["French video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["reputable video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ready video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["handheld video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 227, 1], {1, 227 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 227, 1], {1, 227 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[227, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[227, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 227, 1], {1, 227 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 227, 1], {1, 227 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{319., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{319., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846375007579973*^9, 3.846375787355423*^9, 
  3.846376241310463*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"c72b5b9d-a813-456a-9f31-fe71c4778e58"]
}, Closed]],

Cell["MatchCounts", "CodeText",
 CellChangeTimes->{{3.8463746190138063`*^9, 
  3.846374620507051*^9}},ExpressionUUID->"dd4e1ecd-bfe5-4667-95a3-\
bc6b88962075"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", 
  RowBox[{"\"\<MatchCounts\>\"", ",", "\"\<Descending\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.846375032672676*^9, 3.846375034079361*^9}, {
  3.8463757982824497`*^9, 3.846375801024427*^9}, {3.846376146795705*^9, 
  3.8463762153453817`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"cb8bbf12-28df-421f-827f-0354990b3c6a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "first video game", "Count" -> 33], 
       Association["Match" -> "other video game", "Count" -> 17], 
       Association["Match" -> "Japanese video game", "Count" -> 14], 
       Association["Match" -> "commercial video game", "Count" -> 11], 
       Association["Match" -> "violent video game", "Count" -> 10], 
       Association["Match" -> "online video game", "Count" -> 10], 
       Association["Match" -> "many video game", "Count" -> 10], 
       Association["Match" -> "major video game", "Count" -> 10], 
       Association["Match" -> "global video game", "Count" -> 10], 
       Association["Match" -> "American video game", "Count" -> 10], 
       Association["Match" -> "multiplayer video game", "Count" -> 9], 
       Association["Match" -> "popular video game", "Count" -> 8], 
       Association["Match" -> "Numerous video game", "Count" -> 8], 
       Association["Match" -> "early video game", "Count" -> 8], 
       Association["Match" -> "successful video game", "Count" -> 7], 
       Association["Match" -> "several video game", "Count" -> 7], 
       Association["Match" -> "new video game", "Count" -> 7], 
       Association["Match" -> "most video game", "Count" -> 7], 
       Association["Match" -> "modern video game", "Count" -> 7], 
       Association["Match" -> "various video game", "Count" -> 6], 
       Association["Match" -> "related video game", "Count" -> 6], 
       Association["Match" -> "numerous video game", "Count" -> 6], 
       Association["Match" -> "dedicated video game", "Count" -> 6], 
       Association["Match" -> "licensed video game", "Count" -> 5], 
       Association["Match" -> "largest video game", "Count" -> 5], 
       Association["Match" -> "larger video game", "Count" -> 5], 
       Association["Match" -> "independent video game", "Count" -> 5], 
       Association["Match" -> "handheld video game", "Count" -> 5], 
       Association["Match" -> "earliest video game", "Count" -> 5], 
       Association["Match" -> "arcade video game", "Count" -> 5], 
       Association["Match" -> "top video game", "Count" -> 4], 
       Association["Match" -> "specific video game", "Count" -> 4], 
       Association["Match" -> "own video game", "Count" -> 4], 
       Association["Match" -> "Other video game", "Count" -> 4], 
       Association["Match" -> "older video game", "Count" -> 4], 
       Association["Match" -> "Notable video game", "Count" -> 4], 
       Association["Match" -> "Most video game", "Count" -> 4], 
       Association["Match" -> "mobile video game", "Count" -> 4], 
       Association["Match" -> "later video game", "Count" -> 4], 
       Association["Match" -> "female video game", "Count" -> 4], 
       Association["Match" -> "educational video game", "Count" -> 4], 
       Association["Match" -> "earlier video game", "Count" -> 4], 
       Association["Match" -> "controversial video game", "Count" -> 4], 
       Association["Match" -> "certain video game", "Count" -> 4], 
       Association["Match" -> "more video game", "Count" -> 3], 
       Association["Match" -> "Many video game", "Count" -> 3], 
       Association["Match" -> "male video game", "Count" -> 3], 
       Association["Match" -> "local video game", "Count" -> 3], 
       Association["Match" -> "large video game", "Count" -> 3], 
       Association["Match" -> "Korean video game", "Count" -> 3], 
       Association["Match" -> "known video game", "Count" -> 3], 
       Association["Match" -> "interactive video game", "Count" -> 3], 
       Association["Match" -> "foreign video game", "Count" -> 3], 
       Association["Match" -> "expensive video game", "Count" -> 3], 
       Association["Match" -> "European video game", "Count" -> 3], 
       Association["Match" -> "erotic video game", "Count" -> 3], 
       Association["Match" -> "dominant video game", "Count" -> 3], 
       Association["Match" -> "different video game", "Count" -> 3], 
       Association["Match" -> "current video game", "Count" -> 3], 
       Association["Match" -> "competitive video game", "Count" -> 3], 
       Association["Match" -> "Commercial video game", "Count" -> 3], 
       Association["Match" -> "Christian video game", "Count" -> 3], 
       Association["Match" -> "British video game", "Count" -> 3], 
       Association["Match" -> "best video game", "Count" -> 3], 
       Association["Match" -> "worst video game", "Count" -> 2], 
       Association["Match" -> "Western video game", "Count" -> 2], 
       Association["Match" -> " video game", "Count" -> 2], 
       Association["Match" -> "true video game", "Count" -> 2], 
       Association["Match" -> "total video game", "Count" -> 2], 
       Association["Match" -> "re video game", "Count" -> 2], 
       Association["Match" -> "professional video game", "Count" -> 2], 
       Association["Match" -> "popular video-game", "Count" -> 2], 
       Association["Match" -> "Pok\[EAcute]mon video game", "Count" -> 2], 
       Association["Match" -> "Olympic video game", "Count" -> 2], 
       Association["Match" -> "old video game", "Count" -> 2], 
       Association["Match" -> "official video game", "Count" -> 2], 
       Association["Match" -> "mature video game", "Count" -> 2], 
       Association["Match" -> "matching video game", "Count" -> 2], 
       Association["Match" -> "Large video game", "Count" -> 2], 
       Association["Match" -> "indie video game", "Count" -> 2], 
       Association["Match" -> "Handheld video game", "Count" -> 2], 
       Association["Match" -> "grisly video game", "Count" -> 2], 
       Association["Match" -> "French video game", "Count" -> 2], 
       Association["Match" -> "favorite video game", "Count" -> 2], 
       Association["Match" -> "established video game", "Count" -> 2], 
       Association["Match" -> "entire video game", "Count" -> 2], 
       Association["Match" -> "Early video game", "Count" -> 2], 
       Association["Match" -> "console video game", "Count" -> 2], 
       Association["Match" -> "commercial videogame", "Count" -> 2], 
       Association["Match" -> "Chinese video game", "Count" -> 2], 
       Association["Match" -> "annual video game", "Count" -> 2], 
       Association["Match" -> "adult video game", "Count" -> 2], 
       Association["Match" -> "acclaimed video game", "Count" -> 2], 
       Association["Match" -> "widespread video game", "Count" -> 1], 
       Association["Match" -> "whole video game", "Count" -> 1], 
       Association["Match" -> "vintage video game", "Count" -> 1], 
       Association["Match" -> "unrated video game", "Count" -> 1], 
       Association["Match" -> "unquote video game", "Count" -> 1], 
       Association["Match" -> "typical video game", "Count" -> 1], 
       Association["Match" -> "traditional video game", "Count" -> 1], 
       Association["Match" -> "TMNT video game", "Count" -> 1], 
       Association["Match" -> "thin video game", "Count" -> 1], 
       Association["Match" -> "Swedish video game", "Count" -> 1], 
       Association["Match" -> "such video game", "Count" -> 1], 
       Association["Match" -> "successful video-game", "Count" -> 1], 
       Association["Match" -> "subsequent video game", "Count" -> 1], 
       Association["Match" -> "strategic video game", "Count" -> 1], 
       Association["Match" -> "stereoscopic video game", "Count" -> 1], 
       Association["Match" -> "statutory video game", "Count" -> 1], 
       Association["Match" -> "Standalone video game", "Count" -> 1], 
       Association["Match" -> "Specific video game", "Count" -> 1], 
       Association["Match" -> "small video game", "Count" -> 1], 
       Association["Match" -> "simplistic video game", "Count" -> 1], 
       Association["Match" -> "significant video game", "Count" -> 1], 
       Association["Match" -> "short video game", "Count" -> 1], 
       Association["Match" -> "shaded video game", "Count" -> 1], 
       Association["Match" -> "sexist video game", "Count" -> 1], 
       Association["Match" -> "Several video game", "Count" -> 1], 
       Association["Match" -> "Sega video game", "Count" -> 1], 
       Association["Match" -> "Russian video game", "Count" -> 1], 
       Association["Match" -> "roguelike video game", "Count" -> 1], 
       Association["Match" -> "right video game", "Count" -> 1], 
       Association["Match" -> "retro video game", "Count" -> 1], 
       Association["Match" -> "reputable video game", "Count" -> 1], 
       Association["Match" -> "Religious video game", "Count" -> 1], 
       Association["Match" -> "recognizable video game", "Count" -> 1], 
       Association["Match" -> "recent video game", "Count" -> 1], 
       Association["Match" -> "ready video game", "Count" -> 1], 
       Association["Match" -> "proprietary video game", "Count" -> 1], 
       Association["Match" -> "prominent video game", "Count" -> 1], 
       Association["Match" -> "programmable video game", "Count" -> 1], 
       Association["Match" -> "primary video game", "Count" -> 1], 
       Association["Match" -> "previous video game", "Count" -> 1], 
       Association["Match" -> "poor video game", "Count" -> 1], 
       Association["Match" -> "playable video game", "Count" -> 1], 
       Association["Match" -> "physical video game", "Count" -> 1], 
       Association["Match" -> "pathological video game", "Count" -> 1], 
       Association["Match" -> "past video game", "Count" -> 1], 
       Association["Match" -> "particular video game", "Count" -> 1], 
       Association["Match" -> "owned video game", "Count" -> 1], 
       Association["Match" -> "Outside video game", "Count" -> 1], 
       Association["Match" -> "other videogame", "Count" -> 1], 
       Association["Match" -> "original video game", "Count" -> 1], 
       Association["Match" -> "oldest video game", "Count" -> 1], 
       Association["Match" -> "obscure video game", "Count" -> 1], 
       Association["Match" -> "oblique video game", "Count" -> 1], 
       Association["Match" -> "novel video game", "Count" -> 1], 
       Association["Match" -> "Notable video-game", "Count" -> 1], 
       Association["Match" -> "notable video game", "Count" -> 1], 
       Association["Match" -> "non video-game", "Count" -> 1], 
       Association["Match" -> "nonsignificant video game", "Count" -> 1], 
       Association["Match" -> "ninja video game", "Count" -> 1], 
       Association["Match" -> "neutral video game", "Count" -> 1], 
       Association["Match" -> "net video game", "Count" -> 1], 
       Association["Match" -> "national videogame", "Count" -> 1], 
       Association["Match" -> "Naruto video game", "Count" -> 1], 
       Association["Match" -> "musical video game", "Count" -> 1], 
       Association["Match" -> "multiple video game", "Count" -> 1], 
       Association["Match" -> "Multiplayer video game", "Count" -> 1], 
       Association["Match" -> "multinational video game", "Count" -> 1], 
       Association["Match" -> "motivated video game", "Count" -> 1], 
       Association["Match" -> "masterful video game", "Count" -> 1], 
       Association["Match" -> "main video game", "Count" -> 1], 
       Association["Match" -> "low video game", "Count" -> 1], 
       Association["Match" -> "live video game", "Count" -> 1], 
       Association["Match" -> "licensed videogame", "Count" -> 1], 
       Association["Match" -> "latest video game", "Count" -> 1], 
       Association["Match" -> "Later video game", "Count" -> 1], 
       Association["Match" -> "Isometric video game", "Count" -> 1], 
       Association["Match" -> "isometric video game", "Count" -> 1], 
       Association["Match" -> "International video game", "Count" -> 1], 
       Association["Match" -> "international video game", "Count" -> 1], 
       Association["Match" -> "Interactive video game", "Count" -> 1], 
       Association["Match" -> "inspired video game", "Count" -> 1], 
       Association["Match" -> "influential video game", "Count" -> 1], 
       Association["Match" -> "individual video game", "Count" -> 1], 
       Association["Match" -> "Indie video game", "Count" -> 1], 
       Association["Match" -> "Independent video game", "Count" -> 1], 
       Association["Match" -> "inclined video-game", "Count" -> 1], 
       Association["Match" -> "important video game", "Count" -> 1], 
       Association["Match" -> "holographic video game", "Count" -> 1], 
       Association["Match" -> "historical video game", "Count" -> 1], 
       Association["Match" -> "high video game", "Count" -> 1], 
       Association["Match" -> "greatest video game", "Count" -> 1], 
       Association["Match" -> "governmental video game", "Count" -> 1], 
       Association["Match" -> "good video game", "Count" -> 1], 
       Association["Match" -> "German video game", "Count" -> 1], 
       Association["Match" -> "funded video game", "Count" -> 1], 
       Association["Match" -> "fundamental video game", "Count" -> 1], 
       Association["Match" -> "full video game", "Count" -> 1], 
       Association["Match" -> "following video game", "Count" -> 1], 
       Association["Match" -> "First video game", "Count" -> 1], 
       Association["Match" -> "first video-game", "Count" -> 1], 
       Association["Match" -> "few video game", "Count" -> 1], 
       Association["Match" -> "fewer video game", "Count" -> 1], 
       Association["Match" -> "Female video game", "Count" -> 1], 
       Association["Match" -> "fanservice video game", "Count" -> 1], 
       Association["Match" -> "external video game", "Count" -> 1], 
       Association["Match" -> "experimental video game", "Count" -> 1], 
       Association["Match" -> "evil video game", "Count" -> 1], 
       Association["Match" -> "electronic video game", "Count" -> 1], 
       Association["Match" -> "Eastern video game", "Count" -> 1], 
       Association["Match" -> "cursed video game", "Count" -> 1], 
       Association["Match" -> "corresponding video-game", "Count" -> 1], 
       Association["Match" -> "cooperative video game", "Count" -> 1], 
       Association["Match" -> "Controversial video game", "Count" -> 1], 
       Association["Match" -> "contemporary video game", "Count" -> 1], 
       Association["Match" -> "complex video game", "Count" -> 1], 
       Association["Match" -> "competitive video-game", "Count" -> 1], 
       Association["Match" -> "Commercial videogame", "Count" -> 1], 
       Association["Match" -> "classic video game", "Count" -> 1], 
       Association["Match" -> "certain videogame", "Count" -> 1], 
       Association["Match" -> "Certain video game", "Count" -> 1], 
       Association["Match" -> "Casual video game", "Count" -> 1], 
       Association["Match" -> "capable video game", "Count" -> 1], 
       Association["Match" -> "Cancelled video game", "Count" -> 1], 
       Association["Match" -> "black video game", "Count" -> 1], 
       Association["Match" -> "biggest video game", "Count" -> 1], 
       Association["Match" -> "better video game", "Count" -> 1], 
       Association["Match" -> "available video game", "Count" -> 1], 
       Association["Match" -> "Australian video game", "Count" -> 1], 
       Association["Match" -> "Asian video game", "Count" -> 1], 
       Association["Match" -> "artistic video game", "Count" -> 1], 
       Association["Match" -> "and/or video game", "Count" -> 1], 
       Association["Match" -> "active video game", "Count" -> 1], 
       Association["Match" -> "3D video game", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 226], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 226], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 226, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "15faf85c-e7cb-464f-a171-95c728f10162"]][{All, "Match"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{All, "Match"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "15faf85c-e7cb-464f-a171-95c728f10162"]][{All, "Count"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{All, "Count"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["other video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Japanese video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["commercial video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["violent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["online video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["many video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["major video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["popular video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Numerous video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["successful video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["several video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["new video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["modern video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["various video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 226, 1], {1, 226 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 226, 1], {1, 226 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[226, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[226, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 226, 1], {1, 226 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 226, 1], {1, 226 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "15faf85c-e7cb-464f-a171-95c728f10162", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "15faf85c-e7cb-464f-a171-95c728f10162"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{308., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{308., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.846375034514323*^9, {3.846375792667054*^9, 3.846375801363153*^9}, {
   3.846376153928172*^9, 3.8463762444600677`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"4ff0b29f-9a3c-4d4c-88e0-0bab0afd31c5"]
}, Closed]],

Cell["CountGroups", "CodeText",
 CellChangeTimes->{{3.846374624996148*^9, 
  3.84637462736395*^9}},ExpressionUUID->"a2ff4a2c-8a62-4ee4-93f8-\
104ff81a2cd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<MatchCountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463763639408693`*^9, 3.846376364507389*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"4cfc2ecd-542a-42cc-8e09-9539ef0e9874"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 33, "Matches" -> {"first video game"}], 
       Association["CountGroup" -> 17, "Matches" -> {"other video game"}], 
       Association["CountGroup" -> 14, "Matches" -> {"Japanese video game"}], 
       
       Association[
       "CountGroup" -> 11, "Matches" -> {"commercial video game"}], 
       Association[
       "CountGroup" -> 10, 
        "Matches" -> {
         "violent video game", "online video game", "many video game", 
          "major video game", "global video game", "American video game"}], 
       Association[
       "CountGroup" -> 9, "Matches" -> {"multiplayer video game"}], 
       Association[
       "CountGroup" -> 8, 
        "Matches" -> {
         "popular video game", "Numerous video game", "early video game"}], 
       Association[
       "CountGroup" -> 7, 
        "Matches" -> {
         "successful video game", "several video game", "new video game", 
          "most video game", "modern video game"}], 
       Association[
       "CountGroup" -> 6, 
        "Matches" -> {
         "various video game", "related video game", "numerous video game", 
          "dedicated video game"}], 
       Association[
       "CountGroup" -> 5, 
        "Matches" -> {
         "licensed video game", "largest video game", "larger video game", 
          "independent video game", "handheld video game", 
          "earliest video game", "arcade video game"}], 
       Association[
       "CountGroup" -> 4, 
        "Matches" -> {
         "top video game", "specific video game", "own video game", 
          "Other video game", "older video game", "Notable video game", 
          "Most video game", "mobile video game", "later video game", 
          "female video game", "educational video game", "earlier video game",
           "controversial video game", "certain video game"}], 
       Association[
       "CountGroup" -> 3, 
        "Matches" -> {
         "more video game", "Many video game", "male video game", 
          "local video game", "large video game", "Korean video game", 
          "known video game", "interactive video game", "foreign video game", 
          "expensive video game", "European video game", "erotic video game", 
          "dominant video game", "different video game", "current video game",
           "competitive video game", "Commercial video game", 
          "Christian video game", "British video game", "best video game"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {
         "worst video game", "Western video game", " video game", 
          "true video game", "total video game", "re video game", 
          "professional video game", "popular video-game", 
          "Pok\[EAcute]mon video game", "Olympic video game", 
          "old video game", "official video game", "mature video game", 
          "matching video game", "Large video game", "indie video game", 
          "Handheld video game", "grisly video game", "French video game", 
          "favorite video game", "established video game", 
          "entire video game", "Early video game", "console video game", 
          "commercial videogame", "Chinese video game", "annual video game", 
          "adult video game", "acclaimed video game"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "widespread video game", "whole video game", "vintage video game", 
          "unrated video game", "unquote video game", "typical video game", 
          "traditional video game", "TMNT video game", "thin video game", 
          "Swedish video game", "such video game", "successful video-game", 
          "subsequent video game", "strategic video game", 
          "stereoscopic video game", "statutory video game", 
          "Standalone video game", "Specific video game", "small video game", 
          "simplistic video game", "significant video game", 
          "short video game", "shaded video game", "sexist video game", 
          "Several video game", "Sega video game", "Russian video game", 
          "roguelike video game", "right video game", "retro video game", 
          "reputable video game", "Religious video game", 
          "recognizable video game", "recent video game", "ready video game", 
          "proprietary video game", "prominent video game", 
          "programmable video game", "primary video game", 
          "previous video game", "poor video game", "playable video game", 
          "physical video game", "pathological video game", "past video game",
           "particular video game", "owned video game", "Outside video game", 
          "other videogame", "original video game", "oldest video game", 
          "obscure video game", "oblique video game", "novel video game", 
          "Notable video-game", "notable video game", "non video-game", 
          "nonsignificant video game", "ninja video game", 
          "neutral video game", "net video game", "national videogame", 
          "Naruto video game", "musical video game", "multiple video game", 
          "Multiplayer video game", "multinational video game", 
          "motivated video game", "masterful video game", "main video game", 
          "low video game", "live video game", "licensed videogame", 
          "latest video game", "Later video game", "Isometric video game", 
          "isometric video game", "International video game", 
          "international video game", "Interactive video game", 
          "inspired video game", "influential video game", 
          "individual video game", "Indie video game", 
          "Independent video game", "inclined video-game", 
          "important video game", "holographic video game", 
          "historical video game", "high video game", "greatest video game", 
          "governmental video game", "good video game", "German video game", 
          "funded video game", "fundamental video game", "full video game", 
          "following video game", "First video game", "first video-game", 
          "few video game", "fewer video game", "Female video game", 
          "fanservice video game", "external video game", 
          "experimental video game", "evil video game", 
          "electronic video game", "Eastern video game", "cursed video game", 
          "corresponding video-game", "cooperative video game", 
          "Controversial video game", "contemporary video game", 
          "complex video game", "competitive video-game", 
          "Commercial videogame", "classic video game", "certain videogame", 
          "Certain video game", "Casual video game", "capable video game", 
          "Cancelled video game", "black video game", "biggest video game", 
          "better video game", "available video game", 
          "Australian video game", "Asian video game", "artistic video game", 
          "and/or video game", "active video game", "3D video game"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 14], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 14], "Path" -> {},
      "DisplayedRowCount" -> 14, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     14, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"first video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"first video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"other video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Japanese video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Japanese video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"commercial video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"commercial video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"multiplayer video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"multiplayer video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                    ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{969., {209.134033203125, 214.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{969., {209.134033203125, 214.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846376365050374*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"51fe65ba-7cee-404c-9715-fd000855cf53"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846375809010648*^9, 3.846375814041267*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"8d76ac15-7da5-4f44-b43d-9c9b404fa698"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 89, "Matches" -> {
          Missing["MatchNotFound"]}], 
       Association["CountGroup" -> 33, "Matches" -> {"first video game"}], 
       Association["CountGroup" -> 17, "Matches" -> {"other video game"}], 
       Association["CountGroup" -> 14, "Matches" -> {"Japanese video game"}], 
       
       Association[
       "CountGroup" -> 11, "Matches" -> {"commercial video game"}], 
       Association[
       "CountGroup" -> 10, 
        "Matches" -> {
         "violent video game", "online video game", "many video game", 
          "major video game", "global video game", "American video game"}], 
       Association[
       "CountGroup" -> 9, "Matches" -> {"multiplayer video game"}], 
       Association[
       "CountGroup" -> 8, 
        "Matches" -> {
         "popular video game", "Numerous video game", "early video game"}], 
       Association[
       "CountGroup" -> 7, 
        "Matches" -> {
         "successful video game", "several video game", "new video game", 
          "most video game", "modern video game"}], 
       Association[
       "CountGroup" -> 6, 
        "Matches" -> {
         "various video game", "related video game", "numerous video game", 
          "dedicated video game"}], 
       Association[
       "CountGroup" -> 5, 
        "Matches" -> {
         "licensed video game", "largest video game", "larger video game", 
          "independent video game", "handheld video game", 
          "earliest video game", "arcade video game"}], 
       Association[
       "CountGroup" -> 4, 
        "Matches" -> {
         "top video game", "specific video game", "own video game", 
          "Other video game", "older video game", "Notable video game", 
          "Most video game", "mobile video game", "later video game", 
          "female video game", "educational video game", "earlier video game",
           "controversial video game", "certain video game"}], 
       Association[
       "CountGroup" -> 3, 
        "Matches" -> {
         "more video game", "Many video game", "male video game", 
          "local video game", "large video game", "Korean video game", 
          "known video game", "interactive video game", "foreign video game", 
          "expensive video game", "European video game", "erotic video game", 
          "dominant video game", "different video game", "current video game",
           "competitive video game", "Commercial video game", 
          "Christian video game", "British video game", "best video game"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {
         "worst video game", "Western video game", " video game", 
          "true video game", "total video game", "re video game", 
          "professional video game", "popular video-game", 
          "Pok\[EAcute]mon video game", "Olympic video game", 
          "old video game", "official video game", "mature video game", 
          "matching video game", "Large video game", "indie video game", 
          "Handheld video game", "grisly video game", "French video game", 
          "favorite video game", "established video game", 
          "entire video game", "Early video game", "console video game", 
          "commercial videogame", "Chinese video game", "annual video game", 
          "adult video game", "acclaimed video game"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "widespread video game", "whole video game", "vintage video game", 
          "unrated video game", "unquote video game", "typical video game", 
          "traditional video game", "TMNT video game", "thin video game", 
          "Swedish video game", "such video game", "successful video-game", 
          "subsequent video game", "strategic video game", 
          "stereoscopic video game", "statutory video game", 
          "Standalone video game", "Specific video game", "small video game", 
          "simplistic video game", "significant video game", 
          "short video game", "shaded video game", "sexist video game", 
          "Several video game", "Sega video game", "Russian video game", 
          "roguelike video game", "right video game", "retro video game", 
          "reputable video game", "Religious video game", 
          "recognizable video game", "recent video game", "ready video game", 
          "proprietary video game", "prominent video game", 
          "programmable video game", "primary video game", 
          "previous video game", "poor video game", "playable video game", 
          "physical video game", "pathological video game", "past video game",
           "particular video game", "owned video game", "Outside video game", 
          "other videogame", "original video game", "oldest video game", 
          "obscure video game", "oblique video game", "novel video game", 
          "Notable video-game", "notable video game", "non video-game", 
          "nonsignificant video game", "ninja video game", 
          "neutral video game", "net video game", "national videogame", 
          "Naruto video game", "musical video game", "multiple video game", 
          "Multiplayer video game", "multinational video game", 
          "motivated video game", "masterful video game", "main video game", 
          "low video game", "live video game", "licensed videogame", 
          "latest video game", "Later video game", "Isometric video game", 
          "isometric video game", "International video game", 
          "international video game", "Interactive video game", 
          "inspired video game", "influential video game", 
          "individual video game", "Indie video game", 
          "Independent video game", "inclined video-game", 
          "important video game", "holographic video game", 
          "historical video game", "high video game", "greatest video game", 
          "governmental video game", "good video game", "German video game", 
          "funded video game", "fundamental video game", "full video game", 
          "following video game", "First video game", "first video-game", 
          "few video game", "fewer video game", "Female video game", 
          "fanservice video game", "external video game", 
          "experimental video game", "evil video game", 
          "electronic video game", "Eastern video game", "cursed video game", 
          "corresponding video-game", "cooperative video game", 
          "Controversial video game", "contemporary video game", 
          "complex video game", "competitive video-game", 
          "Commercial videogame", "classic video game", "certain videogame", 
          "Certain video game", "Casual video game", "capable video game", 
          "Cancelled video game", "black video game", "biggest video game", 
          "better video game", "available video game", 
          "Australian video game", "Asian video game", "artistic video game", 
          "and/or video game", "active video game", "3D video game"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 15, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 15], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 15, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 15], "Path" -> {},
      "DisplayedRowCount" -> 15, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     15, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"first video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"first video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"other video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Japanese video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Japanese video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"commercial video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"commercial video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"multiplayer video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"multiplayer video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                    ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{969., {222.634033203125, 228.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{969., {222.634033203125, 228.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846375814330749*^9, 3.846376255905051*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"44b57345-858c-42bf-822c-1980895b58ff"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Videogames", "Subsection",
 CellChangeTimes->{{3.846376760687169*^9, 
  3.846376762844852*^9}},ExpressionUUID->"ceb19bc6-f2ef-44f6-b342-\
4d1fb140860c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TextPatternSummary"}]], "Input",
 CellChangeTimes->{{3.84637457786478*^9, 3.846374589280531*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"000ed661-9d11-42aa-8738-d8a19f6e010a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" SubValue Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"SubValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "SubValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Data\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}]}]}, {" "}, {
                   
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Dataset\"", "]"}], ":=", 
                    RowBox[{"Dataset", "[", 
                    RowBox[{"Private`asc", "[", "\"Data\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Counts\"", "]"}], ":=", 
                    RowBox[{"Private`GetDatasetCounts", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Dataset\"", "]"}], ",", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"SortBy", "[", "\"Count\"", "]"}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    RowBox[{"Private`asc_", "?", 
                    "Private`TextPatternSummaryAscQ"}], "]"}], "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "[", 
                    RowBox[{"ReverseSortBy", "[", "\"Count\"", "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"CountGroups\"", "]"}], ":=", 
                    RowBox[{"Private`CountGroups", "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCount\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"MatchCount\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPattern\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"TextPattern\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"Source\"", "]"}], ":=", 
                    RowBox[{"Private`asc", "[", "\"Source\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"TextPatternString\"", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "\"TextPatternString\"", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "\"MatchCounts\"", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", "\"Counts\"", "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", "Private`invalidkey_", "]"}], ":=", 
                    
                    RowBox[{
                    "Private`asc", "[", "Private`invalidkey", "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Ascending\""}], "]"}], 
                    ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Ascending\""}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", 
                    
                    RowBox[{
                    "Private`asc_", "?", "Private`TextPatternSummaryAscQ"}], 
                    "]"}], "[", 
                    RowBox[{"\"MatchCounts\"", ",", "\"Descending\""}], "]"}],
                     ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"#1", ",", "1", ",", "1"}], "]"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"TextPatternSummary", "[", "Private`asc", "]"}], 
                    "[", 
                    RowBox[{"\"Counts\"", ",", "\"Descending\""}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]},
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  
                  StyleBox["\<\" Format Definitions\"\>", 
                   "InformationRowLabel",
                   StripOnInput->False],
                  "\"FormatValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "FormatValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    StyleBox[
                    "TextPatternSummary /: \
MakeBoxes[Private`obj:TextPatternSummary[(Private`asc_)?Private`\
TextPatternSummaryAscQ], Private`form:StandardForm | TraditionalForm] := \
Module[{Private`above, Private`below}, Private`above = \
{{BoxForm`SummaryItem[{\"Source: \", Private`asc[\"Source\"]}]}, \
{BoxForm`SummaryItem[{\"TextPatternString: \", \
Private`asc[\"TextPatternString\"]}]}, {BoxForm`SummaryItem[{\"MatchCount: \
\", Private`asc[\"MatchCount\"]}]}}; Private`below = {}; \
BoxForm`ArrangeSummaryBox[TextPatternSummary, Private`obj, None, \
Private`above, Private`below, Private`form, \"Interpretable\" -> Automatic]]",
                     ShowStringCharacters -> True, NumberMarks -> True]}, {
                   " "}}, ColumnAlignments -> Left, 
                  GridBaseline -> {Baseline, {1, 1}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TextPatternCases`TextPatternSummary\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Represents the results of TextPatternCases. \
Possible accessors are: \\\"Data\\\", \\\"Source\\\", \\\"MatchCount\\\", \
\\\"MatchCounts\\\", \\\"TextPatternString\\\", \\\"Counts\\\", and \
\\\"CountGroups\\\"\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "Represents the results of TextPatternCases. Possible accessors are: \
\"Data\", \"Source\", \"MatchCount\", \"MatchCounts\", \"TextPatternString\", \
\"Counts\", and \"CountGroups\"", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
    Information`InformationValueForm[
     SubValues, TextPatternCases`TextPatternSummary, {
      TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Data"] :> 
       Private`asc["Data"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Dataset"] :> Dataset[
         Private`asc["Data"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts"] :> 
       Private`GetDatasetCounts[
         TextPatternCases`TextPatternSummary[Private`asc]["Dataset"], 
         Private`asc["Source"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Ascending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         SortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Counts", "Descending"] :> 
       TextPatternCases`TextPatternSummary[Private`asc]["Counts"][
         ReverseSortBy["Count"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["CountGroups"] :> 
       Private`CountGroups[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCount"] :> 
       Private`asc["MatchCount"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPattern"] :> 
       Private`asc["TextPattern"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["Source"] :> 
       Private`asc["Source"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["TextPatternString"] :> 
       Private`asc["TextPatternString"], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]]["MatchCounts"] :> (
        DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc]["Counts"]], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
         Pattern[Private`invalidkey, 
          Blank[]]] :> Private`asc[Private`invalidkey], 
       TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Ascending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Ascending"]], TextPatternCases`TextPatternSummary[
         PatternTest[
          Pattern[Private`asc, 
           Blank[]], Private`TextPatternSummaryAscQ]][
        "MatchCounts", "Descending"] :> (DeleteMissing[#, 1, 1]& )[
         TextPatternCases`TextPatternSummary[Private`asc][
         "Counts", "Descending"]]}], "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> 
    Information`InformationValueForm[
     FormatValues, TextPatternCases`TextPatternSummary, {MakeBoxes[
         Pattern[Private`obj, 
          TextPatternCases`TextPatternSummary[
           PatternTest[
            Pattern[Private`asc, 
             Blank[]], Private`TextPatternSummaryAscQ]]], 
         Pattern[Private`form, 
          Alternatives[StandardForm, TraditionalForm]]] :> 
       Module[{Private`above, Private`below}, Private`above = {{
             BoxForm`SummaryItem[{"Source: ", 
               Private`asc["Source"]}]}, {
             BoxForm`SummaryItem[{"TextPatternString: ", 
               Private`asc["TextPatternString"]}]}, {
             BoxForm`SummaryItem[{"MatchCount: ", 
               Private`asc["MatchCount"]}]}}; Private`below = {}; 
         BoxForm`ArrangeSummaryBox[
          TextPatternCases`TextPatternSummary, Private`obj, None, 
           Private`above, Private`below, Private`form, "Interpretable" -> 
           Automatic]]}], "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TextPatternCases`TextPatternSummary"], False]]], "Output",
 CellChangeTimes->{{3.8463745828209953`*^9, 3.846374589624487*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"663aae38-539f-436d-8d8b-538d059b9aca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"vgex", "=", 
   RowBox[{"TextPatternCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<video games\>\""}], ",", 
     RowBox[{"TextPattern", "[", 
      RowBox[{
       RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], ",", " ", 
       "\"\< \>\"", ",", " ", 
       RowBox[{
       "\"\<videogame\>\"", "|", "\"\<video-game\>\"", "|", 
        "\"\<video game\>\""}]}], "]"}], ",", 
     RowBox[{"MaxItems", "->", "250"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8460982579342937`*^9, 3.846098327299438*^9}, {
  3.846098988061303*^9, 3.846098989584482*^9}, {3.846374469608592*^9, 
  3.846374499253868*^9}, {3.846375065115913*^9, 3.846375066201137*^9}, {
  3.846375542526744*^9, 3.846375605129695*^9}, {3.8463756411775*^9, 
  3.846375642339307*^9}, {3.846375675439721*^9, 3.846375680377293*^9}, {
  3.8463758522575283`*^9, 3.8463758790824137`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"694fb306-84c7-4fe4-9197-f41adf2c8021"],

Cell["Metadata", "CodeText",
 CellChangeTimes->{{3.846374541046163*^9, 
  3.8463745541881237`*^9}},ExpressionUUID->"fec73000-6ee2-4d64-8f24-\
7f574870bc53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846374559378756*^9, 3.8463745649334097`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"46e84df5-61b6-46d6-883f-018a50b61f84"],

Cell[BoxData["\<\"Wikipedia\"\>"], "Output",
 CellChangeTimes->{3.8463749532138987`*^9, 3.8463762274242163`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"5cb810ac-bb35-44fc-b57e-9b04f5281fe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<TextPatternString\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846374570052847*^9, 3.846374572162999*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"abbd5955-46ae-4070-a8a2-1878c0168776"],

Cell[BoxData["\<\"(> (: Adjective :)   videogame | video-game | video game <)\
\"\>"], "Output",
 CellChangeTimes->{
  3.846374954630041*^9, 3.846375516488749*^9, {3.846375631830391*^9, 
   3.846375661506588*^9}, 3.8463762284611797`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"719020e4-991f-485e-8ad1-cb5dafa764fa"]
}, Open  ]],

Cell["Data", "CodeText",
 CellChangeTimes->{{3.846374532621029*^9, 
  3.846374532974513*^9}},ExpressionUUID->"5eecf5ee-2699-4c8d-b715-\
9a3919f34ca6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749586613417`*^9, 3.846374962543784*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"aaa3c59e-e5f3-40c2-9d04-37647c85d9cf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"arcade video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"694", ",", "710"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1219", ",", "1235"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"4816", ",", "4832"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"16964", ",", "16980"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"17865", ",", "17881"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"first video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1033", ",", "1048"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"American video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1423", ",", "1441"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"independent video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2206", ",", "2227"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"global video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2588", ",", "2604"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"51955", ",", "51971"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Article\"\>", "\[Rule]", "\<\"Video game\"\>"}], 
             ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"Early video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2829", ",", "2844"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"646"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Tank (video games)\"\>"}], ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", 
              RowBox[{"Missing", "[", "\<\"MatchNotFound\"\>", "]"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"1970s in video games\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"earliest video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"120", ",", "138"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"204", ",", "222"}], "}"}]}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"1970s in video games\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"Notable video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"2667", ",", "2684"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"artistic video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"1469", ",", "1487"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             RowBox[{"\<\"Match\"\>", "\[Rule]", "\<\"first video game\"\>"}],
              ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"11049", ",", "11064"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             
             RowBox[{"\<\"Article\"\>", 
              "\[Rule]", "\<\"Video game modding\"\>"}], ",", 
             
             RowBox[{"\<\"Match\"\>", 
              "\[Rule]", "\<\"professional video game\"\>"}], ",", 
             RowBox[{"\<\"Position\"\>", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"11391", ",", "11413"}], "}"}], "}"}]}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 22955574563165579241, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[22955574563165579241 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.84637496288818*^9, 3.846375518619452*^9, {3.846375634041102*^9, 
   3.8463756633904963`*^9}, 3.846375755195282*^9, 3.846376230496402*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"0c7c9b29-4ead-4505-aa67-273784920baa"]
}, Closed]],

Cell["Dataset", "CodeText",
 CellChangeTimes->{{3.846374537724442*^9, 
  3.84637453857155*^9}},ExpressionUUID->"9d8102f0-c46f-4873-a027-\
0c13fc33277e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749766495857`*^9, 3.846374976860765*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"b690e7d7-0439-488b-a868-3cd5ac0be671"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Article" -> "Video game", "Match" -> "arcade video game", 
        "Position" -> {{694, 710}, {1219, 1235}, {4816, 4832}, {16964, 
         16980}, {17865, 17881}}], 
       Association[
       "Article" -> "Video game", "Match" -> "first video game", 
        "Position" -> {{1033, 1048}}], 
       Association[
       "Article" -> "Video game", "Match" -> "American video game", 
        "Position" -> {{1423, 1441}}], 
       Association[
       "Article" -> "Video game", "Match" -> "independent video game", 
        "Position" -> {{2206, 2227}}], 
       Association[
       "Article" -> "Video game", "Match" -> "global video game", 
        "Position" -> {{2588, 2604}, {51955, 51971}}], 
       Association[
       "Article" -> "Video game", "Match" -> "Early video game", 
        "Position" -> {{2829, 2844}}], 
       Association[
       "Article" -> "Video game", "Match" -> "Most video game", 
        "Position" -> {{9723, 9737}, {27925, 27939}}], 
       Association[
       "Article" -> "Video game", "Match" -> "most video game", 
        "Position" -> {{21074, 21088}}], 
       Association[
       "Article" -> "Video game", "Match" -> "multiplayer video game", 
        "Position" -> {{26988, 27009}}], 
       Association[
       "Article" -> "Video game", "Match" -> "educational video game", 
        "Position" -> {{29555, 29576}}], 
       Association[
       "Article" -> "Video game", "Match" -> "larger video game", 
        "Position" -> {{46754, 46770}}], 
       Association[
       "Article" -> "Video game", "Match" -> "other video game", 
        "Position" -> {{54926, 54941}}], 
       Association[
       "Article" -> "Video game", "Match" -> "early video game", 
        "Position" -> {{55714, 55729}}], 
       Association[
       "Article" -> "Video game", "Match" -> "violent video game", 
        "Position" -> {{61083, 61100}}], 
       Association[
       "Article" -> "Video game", "Match" -> "many video game", 
        "Position" -> {{64548, 64562}}], 
       Association[
       "Article" -> "Video game", "Match" -> "dedicated video game", 
        "Position" -> {{64997, 65016}}], 
       Association[
       "Article" -> "Video game", "Match" -> "French video game", 
        "Position" -> {{66294, 66310}}], 
       Association[
       "Article" -> "List of video games considered the best", "Match" -> 
        "reputable video game", "Position" -> {{45, 64}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "ready video game", 
        "Position" -> {{287, 302}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "handheld video game", "Position" -> {{1968, 1986}, {28277, 28295}}], 
       
       Association[
       "Article" -> "History of video games", "Match" -> "modern video game", 
        "Position" -> {{10116, 10132}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "commercial video game", "Position" -> {{10683, 10703}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "other video game", 
        "Position" -> {{15281, 15296}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "larger video game", 
        "Position" -> {{18877, 18893}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "first video game", 
        "Position" -> {{22028, 22043}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "entire video game", 
        "Position" -> {{22282, 22298}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "early video game", 
        "Position" -> {{25033, 25048}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "American video game", "Position" -> {{31000, 31018}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "global video game", 
        "Position" -> {{31262, 31278}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "educational video game", "Position" -> {{34846, 34867}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "major video game", 
        "Position" -> {{38783, 38798}}], 
       Association[
       "Article" -> "History of video games", "Match" -> 
        "fundamental video game", "Position" -> {{45626, 45647}}], 
       Association[
       "Article" -> "History of video games", "Match" -> "most video game", 
        "Position" -> {{56769, 56783}}], 
       Association[
       "Article" -> "List of best-selling video games", "Match" -> 
        "known video game", "Position" -> {{369, 384}}], 
       Association[
       "Article" -> "2021 in video games", "Match" -> "new video game", 
        "Position" -> {{73, 86}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "fewer video game", "Position" -> {{2146, 2161}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "many video game", "Position" -> {{4380, 4394}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "unrated video game", "Position" -> {{4640, 4657}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "Chinese video game", "Position" -> {{4980, 4997}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> "top video game",
         "Position" -> {{11558, 11571}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "violent video game", "Position" -> {{13424, 13441}, {21304, 21321}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "foreign video game", "Position" -> {{14735, 14752}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "major video game", "Position" -> {{22501, 22516}}], 
       Association[
       "Article" -> "List of banned video games", "Match" -> 
        "controversial video game", "Position" -> {{23852, 23875}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "dedicated video game",
         "Position" -> {{7625, 7644}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "stereoscopic video game", "Position" -> {{9271, 9293}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "Christian video game",
         "Position" -> {{13173, 13192}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "educational video game", "Position" -> {{13203, 13224}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "erotic video game", 
        "Position" -> {{13235, 13251}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "ninja video game", 
        "Position" -> {{13361, 13376}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "Western video game", 
        "Position" -> {{13478, 13495}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "shaded video game", 
        "Position" -> {{13624, 13640}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "commercial video game", 
        "Position" -> {{13770, 13790}, {13822, 13842}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "cooperative video game", "Position" -> {{14129, 14150}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> 
        "controversial video game", "Position" -> {{14821, 14844}}], 
       Association[
       "Article" -> "Lists of video games", "Match" -> "expensive video game",
         "Position" -> {{14994, 15013}}], 
       Association[
       "Article" -> "2022 in video games", "Match" -> "new video game", 
        "Position" -> {{73, 86}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "playable video game", "Position" -> {{1784, 1802}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "important video game", "Position" -> {{4837, 4856}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "modern video game", "Position" -> {{5869, 5885}, {23323, 23339}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "many video game", "Position" -> {{8428, 8442}}], 
       Association[
       "Article" -> "Video games as an art form", "Match" -> 
        "mature video game", "Position" -> {{13224, 13240}}], 
       Association[
       "Article" -> "2020 in video games", "Match" -> "global video game", 
        "Position" -> {{1667, 1683}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "first video game", 
        "Position" -> {{1939, 1954}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "interactive video game",
         "Position" -> {{3260, 3281}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "Other video game", 
        "Position" -> {{8655, 8670}}], 
       Association[
       "Article" -> "Boss (video games)", "Match" -> "major video game", 
        "Position" -> {{11022, 11037}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> 
        "inspired video game", "Position" -> {{155, 173}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> "novel video game",
         "Position" -> {{7999, 8014}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> 
        "masterful video game", "Position" -> {{9812, 9831}}], 
       Association[
       "Article" -> "Harry Potter video games", "Match" -> "best video game", 
        "Position" -> {{13837, 13851}}], 
       Association[
       "Article" -> "List of Games Workshop video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game industry", "Match" -> "global video game", 
        "Position" -> {{1237, 1253}, {12967, 12983}, {19181, 19197}, {27897, 
         27913}, {34561, 34577}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "true video game", 
        "Position" -> {{5741, 5755}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "commercial video game",
         "Position" -> {{6842, 6862}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "successful video game",
         "Position" -> {{7387, 7407}, {31147, 31167}, {33509, 33529}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "early video game", 
        "Position" -> {{7581, 7596}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "European video game", 
        "Position" -> {{10962, 10980}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "mobile video game", 
        "Position" -> {{14452, 14468}, {46026, 46042}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "other video game", 
        "Position" -> {{23503, 23518}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "annual video game", 
        "Position" -> {{26199, 26215}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> 
        "International video game", "Position" -> {{27454, 27477}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "largest video game", 
        "Position" -> {{28054, 28071}, {28177, 28194}, {29079, 29096}, {30115,
          30132}, {30437, 30454}, {30956, 30973}, {31086, 31103}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "certain video game", 
        "Position" -> {{33886, 33903}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "Japanese video game", 
        "Position" -> {{35723, 35741}, {37011, 37029}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "active video game", 
        "Position" -> {{39020, 39036}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "local video game", 
        "Position" -> {{39795, 39810}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "dedicated video game", 
        "Position" -> {{42337, 42356}}], 
       Association[
       "Article" -> "Video game industry", "Match" -> "handheld video game", 
        "Position" -> {{46284, 46302}}], 
       Association[
       "Article" -> "Single-player video game", "Match" -> 
        "earliest video game", "Position" -> {{716, 734}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "first video game", 
        "Position" -> {{4114, 4129}, {5909, 5924}, {38533, 38548}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "American video game", 
        "Position" -> {{9545, 9563}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "modern video game", 
        "Position" -> {{12102, 12118}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "global video game", 
        "Position" -> {{12447, 12463}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "console video game", 
        "Position" -> {{19782, 19799}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "Japanese video game", 
        "Position" -> {{20032, 20050}, {45747, 45765}, {47055, 47073}, {47459,
          47477}, {48920, 48938}, {55647, 55665}, {55738, 55756}, {55777, 
         55795}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "few video game", 
        "Position" -> {{32854, 32867}}], 
       Association[
       "Article" -> "Video games in Japan", "Match" -> "known video game", 
        "Position" -> {{32926, 32941}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> 
        "multiplayer video game", "Position" -> {{3, 24}, {1665, 1686}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> 
        "earliest video game", "Position" -> {{891, 909}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "early video game", 
        "Position" -> {{1348, 1363}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "popular video-game",
         "Position" -> {{4589, 4606}}], 
       Association[
       "Article" -> "Multiplayer video game", "Match" -> "new video game", 
        "Position" -> {{6635, 6648}}], 
       Association[
       "Article" -> "List of Telltale Games video games", "Match" -> 
        "popular video game", "Position" -> {{516, 533}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "Certain video game", "Position" -> {{1, 18}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "controversial video game", 
        "Position" -> {{1131, 1154}, {88197, 88220}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "current video game", "Position" -> {{2518, 2535}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "top video game", "Position" -> {{4407, 4420}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "licensed video game", "Position" -> {{9472, 9490}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "worst video game", 
        "Position" -> {{9605, 9620}, {12307, 12322}, {16590, 16605}, {20208, 
         20223}, {23080, 23095}, {37881, 37896}, {48471, 48486}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "adult video game", "Position" -> {{31578, 31593}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "Russian video game", "Position" -> {{46746, 46763}}], 
       Association[
       "Article" -> "List of video games notable for negative reception", 
        "Match" -> "other video game", "Position" -> {{73888, 73903}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "first video game", "Position" -> {{3767, 3782}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "modern video game", "Position" -> {{9587, 9603}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "Commercial videogame", "Position" -> {{10295, 10314}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "contemporary video game", "Position" -> {{12069, 12091}}], 
       Association[
       "Article" -> "Artificial intelligence in video games", "Match" -> 
        "complex video game", "Position" -> {{15244, 15261}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "female video game", 
        "Position" -> {{1068, 1084}, {3311, 3327}, {8849, 8865}, {31470, 
         31486}, {33618, 33634}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "owned video game", 
        "Position" -> {{2255, 2270}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> 
        "commercial videogame", "Position" -> {{4554, 4573}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "primary video game", 
        "Position" -> {{6206, 6223}}], 
       Association[
       "Article" -> "Women and video games", "Match" -> "good video game", 
        "Position" -> {{30928, 30942}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "largest video game", 
        "Position" -> {{473, 490}, {26047, 26064}, {26172, 26189}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "American video game", 
        "Position" -> {{3287, 3305}, {39040, 39058}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "most video game", 
        "Position" -> {{4329, 4343}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "Chinese video game", 
        "Position" -> {{9444, 9461}, {11236, 11253}, {11705, 11722}, {13370, 
         13387}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "global video game", 
        "Position" -> {{19612, 19628}, {25996, 26012}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "mobile video game", 
        "Position" -> {{20065, 20081}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "online video game", 
        "Position" -> {{21357, 21373}, {39181, 39197}, {50445, 50461}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "foreign video game", 
        "Position" -> {{26397, 26414}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "major video game", 
        "Position" -> {{33029, 33044}, {40117, 40132}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "multiple video game", 
        "Position" -> {{37901, 37919}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> 
        "established video game", "Position" -> {{39914, 39935}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "net video game", 
        "Position" -> {{46620, 46633}}], 
       Association[
       "Article" -> "Video games in China", "Match" -> "popular video game", 
        "Position" -> {{47994, 48011}}], 
       Association[
       "Article" -> "Computer and Video Games", "Match" -> 
        "dedicated video game", "Position" -> {{734, 753}}], 
       Association[
       "Article" -> "Video Games (song)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Batman video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of erotic video games", "Match" -> 
        "erotic video game", "Position" -> {{19, 35}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "violent video game", "Position" -> CompressedData["
1:eJwV0UtIFFAYhuGXqIRWRggRBKURSSEUSRcqXbQxLMsui8w0TV0oM2mJ5kKI
YFCMEjdmBaXpIlt0sQTJKCbUdHQqsiFTKwkSukmXTRDq2+I5Bw4czvd/Z3VB
MDuwAMjW/32XS5ZeLoIpHVwMJ3VbvToaB6U6pyaFkqFZPZtgSOEt8FqH0qBI
HbuhWyN74L0KM+GMvuqf1mRBqtblwDYtO+aZjuRCidLz4IDy86FcF0/AddUV
QIsihTChrUWQoU/6o+MBCOp7EGZ175TZ9LgcotpXAXlKOA1rVV0J9RqsgncK
nXUutalLK2sgRYdVrOe1MKbi81Clh+rX0gZI1IoLsF7hRvtQb7MdqOky3FRu
CwQUvQIf1HbVd5R0DTYrR2WqbjWX0tvtQas6YKOe3YJRpXRCmj7qpxLuOI9q
7kKD+u5DTDOiCxp7oFV/n8CSp97VfnWG4ZFCg86tKf1SbAimdSkCN1QybCYN
6K02jMBOxUVhubo1oOQXsF3j+qbIK/9JO97AXk3G4Ifax+xOvydg4STMfYb4
aXjwxeyaB4BFsJM=
         "]], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "re video game", 
        "Position" -> {{953, 965}, {2491, 2503}, {16297, 16309}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "mature video game", "Position" -> {{16293, 16309}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "many video game", 
        "Position" -> {{17115, 17129}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "unquote video game", "Position" -> {{18919, 18936}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "grisly video game", "Position" -> {{20903, 20919}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "interactive video game", "Position" -> {{32891, 32912}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "favorite video game", "Position" -> {{36651, 36669}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "experimental video game", "Position" -> {{40239, 40261}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "such video game", 
        "Position" -> {{44168, 44182}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "high video game", 
        "Position" -> {{46710, 46724}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "typical video game", "Position" -> {{54228, 54245}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "nonsignificant video game", "Position" -> {{54375, 54399}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "numerous video game", "Position" -> {{58567, 58585}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> 
        "several video game", "Position" -> {{59349, 59366}}], 
       Association[
       "Article" -> "Violence and video games", "Match" -> "low video game", 
        "Position" -> {{62530, 62543}}], 
       Association[
       "Article" -> "List of Pok\[EAcute]mon video games", "Match" -> 
        "Pok\[EAcute]mon video game", "Position" -> {{420, 437}}], 
       Association[
       "Article" -> "James Bond in video games", "Match" -> 
        "numerous video game", "Position" -> {{685, 703}}], 
       Association[
       "Article" -> "James Bond in video games", "Match" -> 
        "other video game", "Position" -> {{10343, 10358}}], 
       Association[
       "Article" -> "Video game genre", "Match" -> "popular video game", 
        "Position" -> {{6700, 6717}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "latest video game", "Position" -> {{4419, 4435}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "evil video game", "Position" -> {{4617, 4631}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "classic video game", "Position" -> {{5979, 5996}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "obscure video game", "Position" -> {{6701, 6718}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "licensed video game", "Position" -> {{7277, 7295}}], 
       Association[
       "Article" -> "List of films based on video games", "Match" -> 
        "vintage video game", "Position" -> {{7962, 7979}}], 
       Association[
       "Article" -> "Sexism and video games", "Match" -> "online video game", 
        "Position" -> {{2670, 2686}, {5761, 5777}}], 
       Association[
       "Article" -> "Sexism and video games", "Match" -> 
        "prominent video game", "Position" -> {{22549, 22568}}], 
       Association[
       "Article" -> "List of racing video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of most-played video games by player count", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Level (video games)", "Match" -> "short video game", 
        "Position" -> {{12793, 12808}}], 
       Association[
       "Article" -> "Level (video games)", "Match" -> "other video game", 
        "Position" -> {{12835, 12850}}], 
       Association[
       "Article" -> "2019 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2001 in video games", "Match" -> "dominant video game", 
        "Position" -> {{5507, 5525}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "earliest video game", "Position" -> {{1010, 1028}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "fanservice video game", "Position" -> {{9995, 10015}}], 
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "erotic video game", "Position" -> {{11266, 11282}, {11342, 11358}}], 
       
       Association[
       "Article" -> "Sexual content in video games", "Match" -> 
        "controversial video game", "Position" -> {{11432, 11455}}], 
       Association[
       "Article" -> "Cheating in video games", "Match" -> 
        "multiplayer video game", "Position" -> {{21624, 21645}}], 
       Association[
       "Article" -> "List of controversial video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video Games (disambiguation)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2004 in video games", "Match" -> "biggest video game", 
        "Position" -> {{3000, 3017}}], 
       Association[
       "Article" -> "List of Dungeons & Dragons video games", "Match" -> 
        "own video game", "Position" -> {{709, 722}}], 
       Association[
       "Article" -> "Homebrew (video games)", "Match" -> 
        "proprietary video game", "Position" -> {{82, 103}}], 
       Association[
       "Article" -> "Homebrew (video games)", "Match" -> "many video game", 
        "Position" -> {{23170, 23184}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "Japanese video game", "Position" -> {{18, 36}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "various video game", "Position" -> {{652, 669}}], 
       Association[
       "Article" -> "List of Square Enix video games", "Match" -> 
        "own video game", "Position" -> {{782, 795}}], 
       Association[
       "Article" -> "Marvel Games", "Match" -> "related video game", 
        "Position" -> {{1213, 1230}}], 
       Association[
       "Article" -> "2011 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Spider-Man in video games", "Match" -> 
        "Numerous video game", "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Spider-Man in video games", "Match" -> 
        "original video game", "Position" -> {{19632, 19650}}], 
       Association[
       "Article" -> "List of Disney video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of party video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "earliest video game", "Position" -> {{1219, 1237}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "roguelike video game", "Position" -> {{23689, 23708}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "online video game", "Position" -> {{37659, 37675}, {44581, 44597}}], 
       
       Association[
       "Article" -> "List of video game genres", "Match" -> "many video game",
         "Position" -> {{45378, 45392}, {53040, 53054}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "major video game", "Position" -> {{49111, 49126}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> "most video game",
         "Position" -> {{52992, 53006}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "other video game", "Position" -> {{55027, 55042}}], 
       Association[
       "Article" -> "List of video game genres", "Match" -> 
        "Christian video game", "Position" -> {{55289, 55308}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "Japanese video game", "Position" -> {{14, 32}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "other video game", "Position" -> {{170, 185}}], 
       Association[
       "Article" -> "List of Pac-Man video games", "Match" -> 
        "recognizable video game", "Position" -> {{1029, 1051}}], 
       Association[
       "Article" -> "Simulation video game", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Puzzle video game", "Match" -> "matching video game", 
        "Position" -> {{7217, 7235}}], 
       Association[
       "Article" -> "2005 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "corresponding video-game", "Position" -> {{11388, 11411}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "popular video game", "Position" -> {{11507, 11524}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "old video game", "Position" -> {{11925, 11938}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "violent video game", "Position" -> {{12209, 12226}, {20286, 20303}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "cursed video game", "Position" -> {{12601, 12617}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "new video game", "Position" -> {{15804, 15817}, {26063, 26076}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "sexist video game", "Position" -> {{20488, 20504}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "poor video game", "Position" -> {{22636, 22650}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "favorite video game", "Position" -> {{23698, 23716}}], 
       Association[
       "Article" -> "List of television series based on video games", "Match" -> 
        "holographic video game", "Position" -> {{25647, 25668}}], 
       Association[
       "Article" -> "2017 in video games", "Match" -> "numerous video game", 
        "Position" -> {{25, 43}}], 
       Association[
       "Article" -> "2017 in video games", "Match" -> "global video game", 
        "Position" -> {{1962, 1978}}], 
       Association[
       "Article" -> "First-person (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of games based on Dune", "Match" -> 
        "related video game", "Position" -> {{1427, 1444}}], 
       Association[
       "Article" -> "List of most expensive video games to develop", "Match" -> 
        "expensive video game", "Position" -> {{37, 56}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "numerous video game", 
        "Position" -> {{31, 49}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "total video game", 
        "Position" -> {{739, 754}, {1378, 1393}}], 
       Association[
       "Article" -> "2015 in video games", "Match" -> "Cancelled video game", 
        "Position" -> {{3410, 3429}}], 
       Association[
       "Article" -> "List of zombie video games", "Match" -> 
        "first video game", "Position" -> {{526, 541}}], 
       Association[
       "Article" -> "List of horror video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2002 in video games", "Match" -> "dominant video game", 
        "Position" -> {{938, 956}}], 
       Association[
       "Article" -> "Strafing (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Racing game", "Match" -> "arcade video game", 
        "Position" -> {{7601, 7617}, {11308, 11324}}], 
       Association[
       "Article" -> "Racing game", "Match" -> "first video game", 
        "Position" -> {{10950, 10965}, {14733, 14748}}], 
       Association[
       "Article" -> "Racing game", "Match" -> "successful video game", 
        "Position" -> {{20579, 20599}}], 
       Association[
       "Article" -> "List of crossovers in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games in development", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "American video game", "Position" -> {{1124, 1142}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "console video game", "Position" -> {{3504, 3521}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "commercial videogame", "Position" -> {{4493, 4512}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "popular video game", "Position" -> {{5152, 5169}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "new video game", "Position" -> {{10077, 10090}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "female video game", "Position" -> {{15675, 15691}, {16906, 16922}}], 
       
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Female video game", "Position" -> {{17097, 17113}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "male video game", 
        "Position" -> {{15677, 15691}, {16908, 16922}, {17099, 17113}, {22692,
          22706}, {26285, 26299}, {39576, 39590}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "many video game", "Position" -> {{24565, 24579}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Asian video game", "Position" -> {{26680, 26695}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "Japanese video game", 
        "Position" -> {{26710, 26728}, {30897, 30915}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "more video game", "Position" -> {{34251, 34265}}], 
       Association[
       "Article" -> "Gender representation in video games", "Match" -> 
        "violent video game", "Position" -> {{34697, 34714}, {34917, 34934}}], 
       Association[
       "Article" -> "List of video games featuring Mario", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bethesda Softworks video games", "Match" -> 
        "American video game", "Position" -> {{67, 85}}], 
       Association[
       "Article" -> "List of Lego video games", "Match" -> 
        "commercial video game", "Position" -> {{16, 36}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> "other video game", 
        "Position" -> {{2169, 2184}, {63206, 63221}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "notable video game", "Position" -> {{13183, 13200}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "earlier video game", "Position" -> {{13909, 13926}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Japanese video game", 
        "Position" -> {{33588, 33606}, {40418, 40436}, {58466, 58484}, {59807,
          59825}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "multiplayer video game", "Position" -> {{52842, 52863}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Western video game", "Position" -> {{58601, 58618}}], 
       Association[
       "Article" -> "Role-playing video game", "Match" -> 
        "Eastern video game", "Position" -> {{58751, 58768}}], 
       Association[
       "Article" -> "List of Final Fantasy video games", "Match" -> 
        "related video game", "Position" -> {{365, 382}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "adult video game", "Position" -> {{305, 320}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "major video game", "Position" -> {{1127, 1142}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "popular video game", "Position" -> {{1308, 1325}}], 
       Association[
       "Article" -> "List of AO-rated video games", "Match" -> 
        "commercial video game", "Position" -> {{1527, 1547}}], 
       Association[
       "Article" -> "2014 in video games", "Match" -> "online video game", 
        "Position" -> {{335, 351}}], 
       Association[
       "Article" -> "2007 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Activision video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "strategic video game", "Position" -> {{1461, 1480}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "multiplayer video game", 
        "Position" -> {{20831, 20852}, {61532, 61553}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "Casual video game", "Position" -> {{21867, 21883}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "earlier video game", "Position" -> {{25116, 25133}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "certain video game", "Position" -> {{44610, 44627}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "competitive video game", 
        "Position" -> {{46066, 46087}, {48473, 48494}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "established video game", "Position" -> {{49279, 49300}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "early video game", "Position" -> {{49326, 49341}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "independent video game", "Position" -> {{65063, 65084}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "inclined video-game", "Position" -> {{106816, 106834}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "licensed video game", "Position" -> {{114546, 114564}}], 
       Association[
       "Article" -> "Glossary of video game terms", "Match" -> 
        "certain videogame", "Position" -> {{115472, 115488}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> "global video game", 
        "Position" -> {{1021, 1037}}], 
       Association[
       "Article" -> "2016 in video games", "Match" -> 
        "professional video game", "Position" -> {{1680, 1702}}], 
       Association[
       "Article" -> "2000 in video games", "Match" -> "numerous video game", 
        "Position" -> {{34, 52}}], 
       Association[
       "Article" -> "List of Xbox Game Studios video games", "Match" -> 
        "American video game", "Position" -> {{98, 116}}], 
       Association[
       "Article" -> "Grinding (video games)", "Match" -> "Many video game", 
        "Position" -> {{160, 174}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "Japanese video game", "Position" -> {{8872, 8890}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "earlier video game", "Position" -> {{15224, 15241}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "later video game", "Position" -> {{15828, 15843}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "first video game", 
        "Position" -> {{20454, 20469}, {23829, 23844}, {26899, 26914}}], 
       Association[
       "Article" -> "Golden age of arcade video games", "Match" -> 
        "other video game", "Position" -> {{32183, 32198}}], 
       Association[
       "Article" -> "Formula One video games", "Match" -> "arcade video game",
         "Position" -> {{654, 670}}], 
       Association[
       "Article" -> "Formula One video games", "Match" -> 
        "different video game", "Position" -> {{8200, 8219}}], 
       Association[
       "Article" -> "List of Superman video games", "Match" -> 
        "licensed video game", "Position" -> {{13, 31}}], 
       Association[
       "Article" -> "List of Superman video games", "Match" -> 
        "worst video game", "Position" -> {{371, 386}}], 
       Association[
       "Article" -> "2013 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "1997 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game culture", "Match" -> "online video game", 
        "Position" -> {{5123, 5139}, {6554, 6570}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "multiplayer video game",
         "Position" -> {{6096, 6117}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "major video game", 
        "Position" -> {{6825, 6840}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "modern video game", 
        "Position" -> {{7209, 7225}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "many video game", 
        "Position" -> {{10143, 10157}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "mobile video game", 
        "Position" -> {{11553, 11569}, {11753, 11769}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "competitive video game",
         "Position" -> {{17656, 17677}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "thin video game", 
        "Position" -> {{23925, 23939}, {26439, 26453}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "first video game", 
        "Position" -> {{27421, 27436}, {29049, 29064}, {39326, 39341}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "Other video game", 
        "Position" -> {{27500, 27515}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "violent video game", 
        "Position" -> {{28816, 28833}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "old video game", 
        "Position" -> {{31495, 31508}}], 
       Association[
       "Article" -> "Video game culture", "Match" -> "past video game", 
        "Position" -> {{33650, 33664}}], 
       Association[
       "Article" -> "2010 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Early video game", 
        "Position" -> {{66, 81}, {963, 978}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "first video game", 
        "Position" -> {{263, 278}, {2400, 2415}, {49551, 49566}, {59857, 
         59872}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "known video game", 
        "Position" -> {{7531, 7546}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "other video game", 
        "Position" -> {{10571, 10586}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "popular video game", 
        "Position" -> {{16718, 16735}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "influential video game", 
        "Position" -> {{22780, 22801}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "recent video game", 
        "Position" -> {{27463, 27479}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Many video game", 
        "Position" -> {{33521, 33535}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "large video game", 
        "Position" -> {{35346, 35361}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Outside video game", 
        "Position" -> {{41327, 41344}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "retro video game", 
        "Position" -> {{50268, 50283}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "early video game", 
        "Position" -> {{53175, 53190}}], 
       Association[
       "Article" -> "Video game music", "Match" -> "Other video game", 
        "Position" -> {{60045, 60060}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "Swedish video game", 
        "Position" -> {{543, 560}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "top video game", 
        "Position" -> {{3558, 3571}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "individual video game",
         "Position" -> {{3726, 3746}}], 
       Association[
       "Article" -> "1996 in video games", "Match" -> "online video game", 
        "Position" -> {{4627, 4643}}], 
       Association[
       "Article" -> "List of cooperative video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games with LGBT characters", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2003 in video games", "Match" -> "European video game", 
        "Position" -> {{3525, 3543}}], 
       Association[
       "Article" -> "2003 in video games", "Match" -> "dominant video game", 
        "Position" -> {{4646, 4664}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "certain video game", 
        "Position" -> {{583, 600}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "Most video game", 
        "Position" -> {{1080, 1094}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> 
        "successful video-game", "Position" -> {{4731, 4751}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "large video game", 
        "Position" -> {{9001, 9016}}], 
       Association[
       "Article" -> "Video game developer", "Match" -> "larger video game", 
        "Position" -> {{16880, 16896}}], 
       Association[
       "Article" -> "Field of view in video games", "Match" -> 
        "different video game", "Position" -> {{4278, 4297}}], 
       Association[
       "Article" -> "Field of view in video games", "Match" -> 
        "modern video game", "Position" -> {{4533, 4549}}], 
       Association[
       "Article" -> "Arcade game", "Match" -> "arcade video game", 
        "Position" -> {{235, 251}, {4022, 4038}, {8133, 8149}, {8267, 8283}, {
         13838, 13854}, {14799, 14815}, {15791, 15807}, {15872, 15888}, {
         19736, 19752}, {20274, 20290}, {21646, 21662}, {21973, 21989}, {
         22075, 22091}, {22361, 22377}, {23392, 23408}, {23479, 23495}, {
         23643, 23659}, {23995, 24011}}], 
       Association[
       "Article" -> "Arcade game", "Match" -> "global video game", 
        "Position" -> {{23537, 23553}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "true video game", 
        "Position" -> {{616, 630}, {1208, 1222}, {11279, 11293}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "first video game", 
        "Position" -> {{961, 976}, {1805, 1820}, {4409, 4424}, {5627, 5642}, {
         6897, 6912}, {18518, 18533}, {28387, 28402}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "commercial video game", 
        "Position" -> {{2840, 2860}, {17589, 17609}, {22893, 22913}, {23320, 
         23340}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "early video game", "Position" -> {{12552, 12567}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "previous video game", "Position" -> {{14208, 14226}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "several video game", "Position" -> {{17517, 17534}}], 
       Association[
       "Article" -> "Early history of video games", "Match" -> 
        "available video game", "Position" -> {{26362, 26381}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "first video game", 
        "Position" -> {{2100, 2115}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "Handheld video game", 
        "Position" -> {{6919, 6937}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "most video game", 
        "Position" -> {{33034, 33048}}], 
       Association[
       "Article" -> "Video game console", "Match" -> "specific video game", 
        "Position" -> {{37934, 37952}}], 
       Association[
       "Article" -> "CSI (video games)", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bomberman video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1998 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "largest video game",
         "Position" -> {{24, 41}, {371, 388}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "popular video-game",
         "Position" -> {{482, 499}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "main video game", 
        "Position" -> {{3844, 3858}}], 
       Association[
       "Article" -> "Video games in Germany", "Match" -> "major video game", 
        "Position" -> {{4064, 4079}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "musical video game", 
        "Position" -> {{2992, 3009}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "local video game", 
        "Position" -> {{3595, 3610}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "first video game", 
        "Position" -> {{4737, 4752}, {4859, 4874}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "significant video game", 
        "Position" -> {{9361, 9382}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "Most video game", 
        "Position" -> {{10870, 10884}, {10922, 10936}}], 
       Association[
       "Article" -> "Video Games Live", "Match" -> "live video game", 
        "Position" -> {{10992, 11006}}], 
       Association[
       "Article" -> "List of open-source video games", "Match" -> 
        "Commercial video game", "Position" -> {{2887, 2907}}], 
       Association[
       "Article" -> "List of open-source video games", "Match" -> 
        "commercial video game", "Position" -> {{3046, 3066}, {3104, 3124}}], 
       
       Association[
       "Article" -> "Sports video game", "Match" -> "Olympic video game", 
        "Position" -> {{4503, 4520}, {14655, 14672}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "first video game", 
        "Position" -> {{6863, 6878}, {10358, 10373}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "new video game", 
        "Position" -> {{7260, 7273}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "successful video game", 
        "Position" -> {{7334, 7354}}], 
       Association[
       "Article" -> "Sports video game", "Match" -> "arcade video game", 
        "Position" -> {{7385, 7401}, {7728, 7744}, {10633, 10649}, {12071, 
         12087}, {12170, 12186}}], 
       Association[
       "Article" -> "List of best-selling Xbox One video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Online game", "Match" -> "modern video game", 
        "Position" -> {{2031, 2047}}], 
       Association[
       "Article" -> "Online game", "Match" -> "Many video game", 
        "Position" -> {{2603, 2617}}], 
       Association[
       "Article" -> "Online game", "Match" -> "Multiplayer video game", 
        "Position" -> {{15273, 15294}}], 
       Association[
       "Article" -> "1999 in video games", "Match" -> "acclaimed video game", 
        "Position" -> {{504, 523}}], 
       Association[
       "Article" -> "Crunch (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2008 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "violent video game", 
        "Position" -> {{1456, 1473}, {1656, 1673}, {1893, 1910}, {2088, 
         2105}, {9927, 9944}, {10524, 10541}, {40981, 40998}, {45586, 
         45603}, {46052, 46069}, {47429, 47446}, {64692, 64709}, {64734, 
         64751}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "first video game",
         "Position" -> {{17935, 17950}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "Later video game",
         "Position" -> {{40501, 40516}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "grisly video game", "Position" -> {{46530, 46546}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "non video-game", 
        "Position" -> {{55028, 55041}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "multiplayer video game", "Position" -> {{59908, 59929}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> "right video game",
         "Position" -> {{60535, 60550}}], 
       Association[
       "Article" -> "Video game controversies", "Match" -> 
        "neutral video game", "Position" -> {{63409, 63426}}], 
       Association[
       "Article" -> "2012 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "1992 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Quest (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Nintendo Switch games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of grand strategy video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of South Park video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Board game", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "oldest video game", 
        "Position" -> {{1897, 1913}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "specific video game",
         "Position" -> {{2829, 2847}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "British video game", 
        "Position" -> {{3248, 3265}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "electronic video game", "Position" -> {{3821, 3841}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "national videogame", 
        "Position" -> {{5090, 5107}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "Independent video game", "Position" -> {{7546, 7567}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "major video game", 
        "Position" -> {{12125, 12140}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> 
        "subsequent video game", "Position" -> {{16002, 16022}}], 
       Association[
       "Article" -> "Video game journalism", "Match" -> "older video game", 
        "Position" -> {{17525, 17540}, {17825, 17840}}], 
       Association[
       "Article" -> "List of Nintendo DS games", "Match" -> 
        "physical video game", "Position" -> {{19, 37}}], 
       Association[
       "Article" -> "2006 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Digimon video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Skybox (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of best-selling PlayStation 4 video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Elder Scrolls video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1995 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of god video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Star Wars video games", "Match" -> 
        "other video game", "Position" -> {{15341, 15356}}], 
       Association[
       "Article" -> "1994 in video games", "Match" -> "first video game", 
        "Position" -> {{1824, 1839}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "various video game", "Position" -> {{587, 604}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "specific video game", "Position" -> {{850, 868}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "whole video game", "Position" -> {{8925, 8940}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "many video game", "Position" -> {{9270, 9284}}], 
       Association[
       "Article" -> "Digital distribution of video games", "Match" -> 
        "small video game", "Position" -> {{10523, 10538}}], 
       Association[
       "Article" -> "Video game design", "Match" -> "most video game", 
        "Position" -> {{3228, 3242}}], 
       Association[
       "Article" -> "Video game design", "Match" -> "Japanese video game", 
        "Position" -> {{6025, 6043}}], 
       Association[
       "Article" -> "List of real-time strategy video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Race and video games", "Match" -> "annual video game", 
        "Position" -> {{2473, 2489}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "several video game", 
        "Position" -> {{5905, 5922}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "male video game", 
        "Position" -> {{6748, 6762}}], 
       Association[
       "Article" -> "Race and video games", "Match" -> "black video game", 
        "Position" -> {{11812, 11827}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "Numerous video game", 
        "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "largest video game", 
        "Position" -> {{2395, 2412}}], 
       Association[
       "Article" -> "2018 in video games", "Match" -> "Other video game", 
        "Position" -> {{3692, 3707}}], 
       Association[
       "Article" -> "Middle-earth in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Religion and video games", "Match" -> 
        "Religious video game", "Position" -> {{6101, 6120}}], 
       Association[
       "Article" -> "Religion and video games", "Match" -> 
        "German video game", "Position" -> {{7545, 7561}}], 
       Association[
       "Article" -> "1993 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Advertising in video games", "Match" -> 
        "online video game", "Position" -> {{3157, 3173}}], 
       Association[
       "Article" -> "List of PlayStation Portable games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "female video game", "Position" -> {{1986, 2002}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "male video game", "Position" -> {{1988, 2002}, {2046, 2060}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "American video game", "Position" -> {{2396, 2414}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "Japanese video game", "Position" -> {{2469, 2487}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "better video game", "Position" -> {{6429, 6445}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "first video game", "Position" -> {{6698, 6713}}], 
       Association[
       "Article" -> "Video games in the United States", "Match" -> 
        "violent video game", "Position" -> {{14925, 14942}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "Japanese video game", 
        "Position" -> {{2933, 2951}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "other video game", 
        "Position" -> {{5286, 5301}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "larger video game", 
        "Position" -> {{5488, 5504}}], 
       Association[
       "Article" -> "Mobile game", "Match" -> "handheld video game", 
        "Position" -> {{5541, 5559}}], 
       Association[
       "Article" -> "List of artillery video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Teenage Mutant Ninja Turtles video games", 
        "Match" -> "Japanese video game", "Position" -> {{88, 106}}], 
       Association[
       "Article" -> "List of Teenage Mutant Ninja Turtles video games", 
        "Match" -> "TMNT video game", "Position" -> {{504, 518}}], 
       Association[
       "Article" -> "List of best-selling Nintendo Switch video games", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "AAA (video game industry)", "Match" -> 
        "first video game", "Position" -> {{994, 1009}}], 
       Association[
       "Article" -> "AAA (video game industry)", "Match" -> 
        "expensive video game", "Position" -> {{1206, 1225}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> 
        "official video game", "Position" -> {{242, 260}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> 
        "Standalone video game", "Position" -> {{416, 436}}], 
       Association[
       "Article" -> "List of WWE video games", "Match" -> "first video game", 
        "Position" -> {{3643, 3658}}], 
       Association[
       "Article" -> "List of World War II video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Music video game", "Match" -> Missing["MatchNotFound"]], 
       
       Association[
       "Article" -> "List of video games based on DC Comics", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of basketball video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Strategy video game", "Match" -> "online video game", 
        "Position" -> {{20309, 20325}}], 
       Association[
       "Article" -> "List of Naruto video games", "Match" -> 
        "Naruto video game", "Position" -> {{1, 17}, {596, 612}, {721, 737}}], 
       Association[
       "Article" -> 
        "List of commercial video games with available source code", "Match" -> 
        "commercial video game", "Position" -> {{19, 39}, {4178, 4198}}], 
       Association[
       "Article" -> 
        "List of commercial video games with available source code", "Match" -> 
        "Commercial video game", "Position" -> {{219, 239}, {4009, 4029}}], 
       Association[
       "Article" -> "List of Techland video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Clan (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games considered artistic", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in India", "Match" -> "global video game", 
        "Position" -> {{804, 820}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> 
        "international video game", "Position" -> {{853, 876}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> "more video game", 
        "Position" -> {{5610, 5624}}], 
       Association[
       "Article" -> "Video games in India", "Match" -> "Korean video game", 
        "Position" -> {{8615, 8631}, {12148, 12164}}], 
       Association[
       "Article" -> "Camping (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1990 in video games", "Match" -> "following video game", 
        "Position" -> {{2174, 2193}}], 
       Association[
       "Article" -> "1990 in video games", "Match" -> "Notable video game", 
        "Position" -> {{2360, 2377}}], 
       Association[
       "Article" -> "Open world", "Match" -> "current video game", 
        "Position" -> {{3534, 3551}}], 
       Association[
       "Article" -> "Virtual camera system", "Match" -> "first video game", 
        "Position" -> {{10021, 10036}}], 
       Association[
       "Article" -> "1989 in video games", "Match" -> "Notable video game", 
        "Position" -> {{2325, 2342}}], 
       Association[
       "Article" -> "1989 in video games", "Match" -> "first video game", 
        "Position" -> {{6171, 6186}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "Numerous video game", "Position" -> {{1, 19}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "other video game", "Position" -> {{1002, 1017}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> "full video game",
         "Position" -> {{14895, 14909}}], 
       Association[
       "Article" -> "Jurassic Park video games", "Match" -> 
        "several video game", "Position" -> {{15353, 15370}}], 
       Association[
       "Article" -> "List of Sonic the Hedgehog video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1988 in video games", "Match" -> "various video game", 
        "Position" -> {{4449, 4466}}], 
       Association[
       "Article" -> "List of PlayStation 2 games (A\[Dash]K)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "large video game", "Position" -> {{1157, 1172}}], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "Large video game", "Position" -> {{2612, 2627}}], 
       Association[
       "Article" -> "Intellectual property protection of video games", 
        "Match" -> "other video game", "Position" -> {{34732, 34747}}], 
       Association[
       "Article" -> "List of Nancy Drew video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Combo (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "Olympic video game", 
        "Position" -> {{1, 18}, {1997, 2014}, {2210, 2227}, {5486, 5503}}], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "older video game", 
        "Position" -> {{224, 239}}], 
       Association[
       "Article" -> "Olympic video games", "Match" -> "related video game", 
        "Position" -> {{2885, 2902}}], 
       Association[
       "Article" -> "List of Terminator video games", "Match" -> 
        "Several video game", "Position" -> {{695, 712}, {4319, 4336}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Japanese video game", "Position" -> {{11481, 11499}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Christian video game", "Position" -> {{11939, 11958}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "simplistic video game", "Position" -> {{13967, 13987}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "other video game", 
        "Position" -> {{14014, 14029}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "traditional video game", "Position" -> {{14168, 14189}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Handheld video game", "Position" -> {{15569, 15587}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "multiplayer video game", "Position" -> {{15944, 15965}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Specific video game", "Position" -> {{16352, 16370}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Controversial video game", "Position" -> {{16565, 16588}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "indie video game", 
        "Position" -> {{18524, 18539}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> "First video game", 
        "Position" -> {{22191, 22206}}], 
       Association[
       "Article" -> "Outline of video games", "Match" -> 
        "Interactive video game", "Position" -> {{24511, 24532}}], 
       Association[
       "Article" -> "FIFA (video game series)", "Match" -> "first video game",
         "Position" -> {{43703, 43718}}], 
       Association[
       "Article" -> "Spawning (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "2009 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Codemasters video games", "Match" -> 
        "British video game", "Position" -> {{18, 35}}], 
       Association[
       "Article" -> "List of music video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "handheld video game", "Position" -> {{109, 127}}], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "own video game", "Position" -> {{1376, 1389}, {14216, 14229}}], 
       Association[
       "Article" -> "First generation of video game consoles", "Match" -> 
        "programmable video game", "Position" -> {{14650, 14672}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "Isometric video game", "Position" -> {{1, 20}, {15869, 15888}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "isometric video game", 
        "Position" -> {{1848, 1867}, {4474, 4493}, {5583, 5602}, {15755, 
         15774}, {15914, 15933}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "first video game", "Position" -> {{5701, 5716}, {6413, 6428}}], 
       Association[
       "Article" -> "Isometric video game graphics", "Match" -> 
        "oblique video game", "Position" -> {{15832, 15849}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "most video game", 
        "Position" -> {{2325, 2339}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "online video game", 
        "Position" -> {{9733, 9749}, {31549, 31565}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> 
        "pathological video game", "Position" -> {{23183, 23205}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "several video game", 
        "Position" -> {{29106, 29123}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "first video game", 
        "Position" -> {{29831, 29846}}], 
       Association[
       "Article" -> "Video game addiction", "Match" -> "violent video game", 
        "Position" -> {{34888, 34905}}], 
       Association[
       "Article" -> "List of 4X video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1987 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of anime based on video games", "Match" -> 
        "Japanese video game", "Position" -> {{255, 273}}], 
       Association[
       "Article" -> "List of Sony Interactive Entertainment video games", 
        "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Simpsons video games", "Match" -> 
        "motivated video game", "Position" -> {{904, 923}}], 
       Association[
       "Article" -> "List of The Simpsons video games", "Match" -> 
        "first video game", "Position" -> {{1416, 1431}}], 
       Association[
       "Article" -> "Pok\[EAcute]mon (video game series)", "Match" -> 
        "Pok\[EAcute]mon video game", 
        "Position" -> {{4797, 4814}, {28290, 28307}}], 
       Association[
       "Article" -> "Machine learning in video games", "Match" -> 
        "various video game", "Position" -> {{11827, 11844}}], 
       Association[
       "Article" -> "Machine learning in video games", "Match" -> 
        "different video game", "Position" -> {{17774, 17793}}], 
       Association[
       "Article" -> "Split screen (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Bandai Namco video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of 505 video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of city-building video games", "Match" -> 
        "related video game", "Position" -> {{382, 399}}], 
       Association[
       "Article" -> "Action game", "Match" -> "earlier video game", 
        "Position" -> {{17008, 17025}}], 
       Association[
       "Article" -> "Action game", "Match" -> "later video game", 
        "Position" -> {{17610, 17625}}], 
       Association[
       "Article" -> "Life (video games)", "Match" -> "older video game", 
        "Position" -> {{3069, 3084}}], 
       Association[
       "Article" -> "List of baseball video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1986 in video games", "Match" -> "first video game", 
        "Position" -> {{6041, 6056}}], 
       Association[
       "Article" -> "Shrek video games", "Match" -> "licensed video game", 
        "Position" -> {{25, 43}}], 
       Association[
       "Article" -> "List of Yoshi video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1980 in video games", "Match" -> "first video game", 
        "Position" -> {{1281, 1296}, {2260, 2275}}], 
       Association[
       "Article" -> "1980 in video games", "Match" -> "first video-game", 
        "Position" -> {{3057, 3072}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "competitive video-game", 
        "Position" -> {{2042, 2063}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "independent video game", 
        "Position" -> {{6392, 6413}}], 
       Association[
       "Article" -> "Game engine", "Match" -> "competitive video game", 
        "Position" -> {{8030, 8051}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "own video game", 
        "Position" -> {{1122, 1135}, {7860, 7873}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "first video game", 
        "Position" -> {{2883, 2898}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "re video game", 
        "Position" -> {{9743, 9755}, {32709, 32721}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "more video game", 
        "Position" -> {{32707, 32721}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "other videogame", 
        "Position" -> {{36083, 36097}, {41883, 41897}}], 
       Association[
       "Article" -> "Star Wars video games", "Match" -> "licensed videogame", 
        "Position" -> {{39498, 39515}}], 
       Association[
       "Article" -> "1980s in video games", "Match" -> "entire video game", 
        "Position" -> {{4098, 4114}}], 
       Association[
       "Article" -> "1980s in video games", "Match" -> "Notable video-game", 
        "Position" -> {{6711, 6728}}], 
       Association[
       "Article" -> "Monopoly video games", "Match" -> "several video game", 
        "Position" -> {{17, 34}}], 
       Association[
       "Article" -> "1971 in video games", "Match" -> "commercial video game",
         "Position" -> {{314, 334}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "certain video game", "Position" -> {{920, 937}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "current video game", "Position" -> {{1127, 1144}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "violent video game", "Position" -> {{2510, 2527}, {2686, 2703}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "European video game", "Position" -> {{6679, 6697}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "official video game", "Position" -> {{8756, 8774}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "governmental video game", "Position" -> {{10327, 10349}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "commercial video game", "Position" -> {{10808, 10828}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "Korean video game", "Position" -> {{19576, 19592}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "statutory video game", "Position" -> {{21340, 21359}}], 
       Association[
       "Article" -> "Video game content rating system", "Match" -> 
        "various video game", "Position" -> {{22136, 22153}}], 
       Association[
       "Article" -> "List of Game Boy Advance games", "Match" -> 
        "handheld video game", "Position" -> {{59, 77}, {455, 473}}], 
       Association[
       "Article" -> "List of World War I video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of The Sims video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of historical video games", "Match" -> 
        "historical video game", 
        "Position" -> {{5, 25}, {125, 145}, {321, 341}}], 
       Association[
       "Article" -> "List of business simulation video games", "Match" -> 
        "related video game", "Position" -> {{425, 442}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "independent video game", 
        "Position" -> {{26, 47}, {3528, 3549}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "Indie video game", 
        "Position" -> {{19296, 19311}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "dedicated video game", 
        "Position" -> {{39516, 39535}}], 
       Association[
       "Article" -> "Indie game", "Match" -> "indie video game", 
        "Position" -> {{43439, 43454}}], 
       Association[
       "Article" -> "Fog of war", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1985 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Matchmaking (video games)", "Match" -> 
        "multiplayer video game", "Position" -> {{4, 25}}], 
       Association[
       "Article" -> "Cult following", "Match" -> "later video game", 
        "Position" -> {{5741, 5756}}], 
       Association[
       "Article" -> "List of NASCAR video games", "Match" -> 
        "several video game", "Position" -> {{107, 124}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "educational video game", 
        "Position" -> {{4, 25}, {1266, 1287}, {10161, 10182}, {10358, 
         10379}, {15914, 15935}, {30498, 30519}, {31660, 31681}, {32690, 
         32711}, {32887, 32908}, {33032, 33053}, {33293, 33314}, {33598, 
         33619}, {34266, 34287}, {34535, 34556}, {35180, 35201}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "specific video game", "Position" -> {{13206, 13224}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "interactive video game", "Position" -> {{20119, 20140}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "commercial video game", 
        "Position" -> {{25576, 25596}, {29324, 29344}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> 
        "Commercial video game", "Position" -> {{26004, 26024}}], 
       Association[
       "Article" -> "Educational video game", "Match" -> "many video game", 
        "Position" -> {{30152, 30166}}], 
       Association[
       "Article" -> "1991 in video games", "Match" -> "top video game", 
        "Position" -> {{430, 443}}], 
       Association[
       "Article" -> "List of Megami Tensei video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Mob (video games)", "Match" -> Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "3D video game", "Position" -> {{3258, 3270}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "greatest video game", "Position" -> {{19180, 19198}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "later video game", "Position" -> {{23322, 23337}}], 
       Association[
       "Article" -> "Fifth generation of video game consoles", "Match" -> 
        "female video game", "Position" -> {{23449, 23465}}], 
       Association[
       "Article" -> "List of video games based on cartoons", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in the Philippines", "Match" -> 
        "French video game", "Position" -> {{1753, 1769}}], 
       Association[
       "Article" -> "Video games in the Philippines", "Match" -> 
        "various video game", "Position" -> {{2968, 2985}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "American video game", 
        "Position" -> {{2447, 2465}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "total video game", 
        "Position" -> {{2515, 2530}}], 
       Association[
       "Article" -> "1983 in video games", "Match" -> "first video game", 
        "Position" -> {{6526, 6541}, {7172, 7187}}], 
       Association[
       "Article" -> "List of Metal Slug video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Transformers video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of puzzle video games", "Match" -> 
        "matching video game", "Position" -> {{111, 129}}], 
       Association[
       "Article" -> "List of Middle-earth video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "best video game", "Position" -> {{1351, 1365}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "numerous video game", "Position" -> {{1498, 1516}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "Korean video game", "Position" -> {{2203, 2219}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "successful video game", "Position" -> {{4158, 4178}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "first video game", "Position" -> {{8883, 8898}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "Japanese video game", "Position" -> {{9855, 9873}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "major video game", "Position" -> {{12280, 12295}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "popular video game", "Position" -> {{17033, 17050}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "widespread video game", "Position" -> {{18015, 18035}}], 
       Association[
       "Article" -> "Video games in South Korea", "Match" -> 
        "online video game", "Position" -> {{20030, 20046}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "largest video game", 
        "Position" -> {{16, 33}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "local video game", 
        "Position" -> {{1115, 1130}}], 
       Association[
       "Article" -> "Video games in Russia", "Match" -> "foreign video game", 
        "Position" -> {{1197, 1214}}], 
       Association[
       "Article" -> "Rush (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of best-selling Wii video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1984 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1982 in video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of Sunsoft video games", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "List of video games featuring Miis", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "Australian video game", 
        "Position" -> {{573, 593}, {1331, 1351}, {1817, 1837}, {4787, 4807}}], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "multinational video game", "Position" -> {{3056, 3079}}], 
       Association[
       "Article" -> "Video games in Australia", "Match" -> 
        "Notable video game", "Position" -> {{6576, 6593}, {8094, 8111}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "first video game", 
        "Position" -> {{723, 738}, {7801, 7816}, {9735, 9750}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "early video game", 
        "Position" -> {{11190, 11205}, {12282, 12297}}], 
       Association[
       "Article" -> "Video game development", "Match" -> 
        "external video game", 
        "Position" -> {{16885, 16903}, {18332, 18350}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "Large video game", 
        "Position" -> {{17374, 17389}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "larger video game", 
        "Position" -> {{17512, 17528}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "Most video game", 
        "Position" -> {{18301, 18315}, {52014, 52028}}], 
       Association[
       "Article" -> "Video game development", "Match" -> 
        "successful video game", "Position" -> {{32334, 32354}}], 
       Association[
       "Article" -> "Video game development", "Match" -> "capable video game",
         "Position" -> {{45044, 45061}}], 
       Association[
       "Article" -> "1981 in video games", "Match" -> "British video game", 
        "Position" -> {{1972, 1989}}], 
       Association[
       "Article" -> "1981 in video games", "Match" -> "first video game", 
        "Position" -> {{2870, 2885}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "and/or video game", 
        "Position" -> {{1527, 1543}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "dedicated video game", 
        "Position" -> {{6138, 6157}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "other video game", 
        "Position" -> {{6287, 6302}}], 
       Association[
       "Article" -> "Gamer", "Match" -> "older video game", 
        "Position" -> {{9847, 9862}}], 
       Association[
       "Article" -> "List of Sega video games", "Match" -> "Sega video game", 
        "Position" -> {{795, 809}}], 
       Association[
       "Article" -> "List of cricket video games", "Match" -> " video game", 
        "Position" -> {{35, 45}}], 
       Association[
       "Article" -> "List of LucasArts games", "Match" -> " video game", 
        "Position" -> {{18, 28}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "mobile video game", "Position" -> {{1151, 1167}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "independent video game", "Position" -> {{2720, 2741}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "new video game", "Position" -> {{5336, 5349}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "successful video game", "Position" -> {{9378, 9398}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "funded video game", "Position" -> {{11021, 11037}}], 
       Association[
       "Article" -> "Crowdfunding in video games", "Match" -> 
        "particular video game", "Position" -> {{13114, 13134}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "American video game", 
        "Position" -> {{29, 47}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "successful video game", 
        "Position" -> {{693, 713}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "acclaimed video game", 
        "Position" -> {{2339, 2358}}], 
       Association[
       "Article" -> "Insomniac Games", "Match" -> "best video game", 
        "Position" -> {{2398, 2412}, {28412, 28426}}], 
       Association[
       "Article" -> "List of PC games (A)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "Tank (video games)", "Match" -> 
        Missing["MatchNotFound"]], 
       Association[
       "Article" -> "1970s in video games", "Match" -> "earliest video game", 
        "Position" -> {{120, 138}, {204, 222}}], 
       Association[
       "Article" -> "1970s in video games", "Match" -> "Notable video game", 
        "Position" -> {{2667, 2684}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> "artistic video game", 
        "Position" -> {{1469, 1487}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> "first video game", 
        "Position" -> {{11049, 11064}}], 
       Association[
       "Article" -> "Video game modding", "Match" -> 
        "professional video game", "Position" -> {{11391, 11413}}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> TypeSystem`PackageScope`AtomShape[313.6], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 3, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 658], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Article"} -> 1, {All, "Match"} -> 
        1, {All, "Position"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Article" -> TypeSystem`PackageScope`AtomShape[313.6], "Match" -> 
            TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "Position"}]]], 
          DirectedInfinity[1], 3, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 658], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 658, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Article", 
                  Style[
                  "Article", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Article"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Article"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["arcade video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{694, 710}, ShowStringCharacters -> False], 
                  Style[
                   Style[{694, 710}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1219, 1235}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1219, 1235}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["5 total \:203a ", ""], 
                  Style[
                   Superscript["5 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1033, 1048}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1033, 1048}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1423, 1441}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1423, 1441}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["independent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2206, 2227}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2206, 2227}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2588, 2604}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2588, 2604}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{51955, 51971}, ShowStringCharacters -> False], 
                  Style[
                   Style[{51955, 51971}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2829, 2844}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2829, 2844}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{9723, 9737}, ShowStringCharacters -> False], 
                  Style[
                   Style[{9723, 9737}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{27925, 27939}, ShowStringCharacters -> False], 
                  Style[
                   Style[{27925, 27939}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{21074, 21088}, ShowStringCharacters -> False], 
                  Style[
                   Style[{21074, 21088}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{26988, 27009}, ShowStringCharacters -> False], 
                  Style[
                   Style[{26988, 27009}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["Video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Article"]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["educational video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{29555, 29576}, ShowStringCharacters -> False], 
                  Style[
                   Style[{29555, 29576}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 658, 1], {1, 658 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 658, 1], {1, 658 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[658, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[658, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 658, 1], {1, 658 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 658, 1], {1, 658 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{691., {216.134033203125, 221.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{691., {216.134033203125, 221.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846374977226075*^9, 3.846375768992614*^9, 
  3.8463762354458647`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"48fbefff-6d62-4bf0-91a5-0298f2aadaa7"]
}, Open  ]],

Cell["MatchCount", "CodeText",
 CellChangeTimes->{{3.846374601292663*^9, 
  3.846374605322412*^9}},ExpressionUUID->"064b9cf9-7c45-4ac2-a3f6-\
13755bac3124"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<MatchCount\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463749911451387`*^9, 3.846374992504616*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"1e324bce-7e2c-4f30-bfe3-a2999bf3f267"],

Cell[BoxData["935"], "Output",
 CellChangeTimes->{3.846374992867779*^9, 3.8463757781918287`*^9, 
  3.846376238241053*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"a4e514fd-16a5-4f0d-9129-ee567af14996"]
}, Open  ]],

Cell["Counts", "CodeText",
 CellChangeTimes->{{3.84637460851322*^9, 
  3.8463746138292303`*^9}},ExpressionUUID->"43f64c6c-dd1f-4b74-aa5e-\
8645264d9ac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846375006728085*^9, 3.8463750072147713`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"34abe808-f073-4f9a-a861-6d3f4edc32e9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "arcade video game", "Count" -> 5], 
       Association["Match" -> "first video game", "Count" -> 33], 
       Association["Match" -> "American video game", "Count" -> 10], 
       Association["Match" -> "independent video game", "Count" -> 5], 
       Association["Match" -> "global video game", "Count" -> 10], 
       Association["Match" -> "Early video game", "Count" -> 2], 
       Association["Match" -> "Most video game", "Count" -> 4], 
       Association["Match" -> "most video game", "Count" -> 7], 
       Association["Match" -> "multiplayer video game", "Count" -> 9], 
       Association["Match" -> "educational video game", "Count" -> 4], 
       Association["Match" -> "larger video game", "Count" -> 5], 
       Association["Match" -> "other video game", "Count" -> 17], 
       Association["Match" -> "early video game", "Count" -> 8], 
       Association["Match" -> "violent video game", "Count" -> 10], 
       Association["Match" -> "many video game", "Count" -> 10], 
       Association["Match" -> "dedicated video game", "Count" -> 6], 
       Association["Match" -> "French video game", "Count" -> 2], 
       Association["Match" -> "reputable video game", "Count" -> 1], 
       Association["Match" -> "ready video game", "Count" -> 1], 
       Association["Match" -> "handheld video game", "Count" -> 5], 
       Association["Match" -> "modern video game", "Count" -> 7], 
       Association["Match" -> "commercial video game", "Count" -> 11], 
       Association["Match" -> "entire video game", "Count" -> 2], 
       Association["Match" -> "major video game", "Count" -> 10], 
       Association["Match" -> "fundamental video game", "Count" -> 1], 
       Association["Match" -> "known video game", "Count" -> 3], 
       Association["Match" -> "new video game", "Count" -> 7], 
       Association["Match" -> "fewer video game", "Count" -> 1], 
       Association["Match" -> "unrated video game", "Count" -> 1], 
       Association["Match" -> "Chinese video game", "Count" -> 2], 
       Association["Match" -> "top video game", "Count" -> 4], 
       Association["Match" -> "foreign video game", "Count" -> 3], 
       Association["Match" -> "controversial video game", "Count" -> 4], 
       Association["Match" -> "stereoscopic video game", "Count" -> 1], 
       Association["Match" -> "Christian video game", "Count" -> 3], 
       Association["Match" -> "erotic video game", "Count" -> 3], 
       Association["Match" -> "ninja video game", "Count" -> 1], 
       Association["Match" -> "Western video game", "Count" -> 2], 
       Association["Match" -> "shaded video game", "Count" -> 1], 
       Association["Match" -> "cooperative video game", "Count" -> 1], 
       Association["Match" -> "expensive video game", "Count" -> 3], 
       Association["Match" -> "playable video game", "Count" -> 1], 
       Association["Match" -> "important video game", "Count" -> 1], 
       Association["Match" -> "mature video game", "Count" -> 2], 
       Association["Match" -> "interactive video game", "Count" -> 3], 
       Association["Match" -> "Other video game", "Count" -> 4], 
       Association["Match" -> "inspired video game", "Count" -> 1], 
       Association["Match" -> "novel video game", "Count" -> 1], 
       Association["Match" -> "masterful video game", "Count" -> 1], 
       Association["Match" -> "best video game", "Count" -> 3], 
       Association["Match" -> Missing["MatchNotFound"], "Count" -> 89], 
       Association["Match" -> "true video game", "Count" -> 2], 
       Association["Match" -> "successful video game", "Count" -> 7], 
       Association["Match" -> "European video game", "Count" -> 3], 
       Association["Match" -> "mobile video game", "Count" -> 4], 
       Association["Match" -> "annual video game", "Count" -> 2], 
       Association["Match" -> "International video game", "Count" -> 1], 
       Association["Match" -> "largest video game", "Count" -> 5], 
       Association["Match" -> "certain video game", "Count" -> 4], 
       Association["Match" -> "Japanese video game", "Count" -> 14], 
       Association["Match" -> "active video game", "Count" -> 1], 
       Association["Match" -> "local video game", "Count" -> 3], 
       Association["Match" -> "earliest video game", "Count" -> 5], 
       Association["Match" -> "console video game", "Count" -> 2], 
       Association["Match" -> "few video game", "Count" -> 1], 
       Association["Match" -> "popular video-game", "Count" -> 2], 
       Association["Match" -> "popular video game", "Count" -> 8], 
       Association["Match" -> "Certain video game", "Count" -> 1], 
       Association["Match" -> "current video game", "Count" -> 3], 
       Association["Match" -> "licensed video game", "Count" -> 5], 
       Association["Match" -> "worst video game", "Count" -> 2], 
       Association["Match" -> "adult video game", "Count" -> 2], 
       Association["Match" -> "Russian video game", "Count" -> 1], 
       Association["Match" -> "Commercial videogame", "Count" -> 1], 
       Association["Match" -> "contemporary video game", "Count" -> 1], 
       Association["Match" -> "complex video game", "Count" -> 1], 
       Association["Match" -> "female video game", "Count" -> 4], 
       Association["Match" -> "owned video game", "Count" -> 1], 
       Association["Match" -> "commercial videogame", "Count" -> 2], 
       Association["Match" -> "primary video game", "Count" -> 1], 
       Association["Match" -> "good video game", "Count" -> 1], 
       Association["Match" -> "online video game", "Count" -> 10], 
       Association["Match" -> "multiple video game", "Count" -> 1], 
       Association["Match" -> "established video game", "Count" -> 2], 
       Association["Match" -> "net video game", "Count" -> 1], 
       Association["Match" -> "re video game", "Count" -> 2], 
       Association["Match" -> "unquote video game", "Count" -> 1], 
       Association["Match" -> "grisly video game", "Count" -> 2], 
       Association["Match" -> "favorite video game", "Count" -> 2], 
       Association["Match" -> "experimental video game", "Count" -> 1], 
       Association["Match" -> "such video game", "Count" -> 1], 
       Association["Match" -> "high video game", "Count" -> 1], 
       Association["Match" -> "typical video game", "Count" -> 1], 
       Association["Match" -> "nonsignificant video game", "Count" -> 1], 
       Association["Match" -> "numerous video game", "Count" -> 6], 
       Association["Match" -> "several video game", "Count" -> 7], 
       Association["Match" -> "low video game", "Count" -> 1], 
       Association["Match" -> "Pok\[EAcute]mon video game", "Count" -> 2], 
       Association["Match" -> "latest video game", "Count" -> 1], 
       Association["Match" -> "evil video game", "Count" -> 1], 
       Association["Match" -> "classic video game", "Count" -> 1], 
       Association["Match" -> "obscure video game", "Count" -> 1], 
       Association["Match" -> "vintage video game", "Count" -> 1], 
       Association["Match" -> "prominent video game", "Count" -> 1], 
       Association["Match" -> "short video game", "Count" -> 1], 
       Association["Match" -> "dominant video game", "Count" -> 3], 
       Association["Match" -> "fanservice video game", "Count" -> 1], 
       Association["Match" -> "biggest video game", "Count" -> 1], 
       Association["Match" -> "own video game", "Count" -> 4], 
       Association["Match" -> "proprietary video game", "Count" -> 1], 
       Association["Match" -> "various video game", "Count" -> 6], 
       Association["Match" -> "related video game", "Count" -> 6], 
       Association["Match" -> "Numerous video game", "Count" -> 8], 
       Association["Match" -> "original video game", "Count" -> 1], 
       Association["Match" -> "roguelike video game", "Count" -> 1], 
       Association["Match" -> "recognizable video game", "Count" -> 1], 
       Association["Match" -> "matching video game", "Count" -> 2], 
       Association["Match" -> "corresponding video-game", "Count" -> 1], 
       Association["Match" -> "old video game", "Count" -> 2], 
       Association["Match" -> "cursed video game", "Count" -> 1], 
       Association["Match" -> "sexist video game", "Count" -> 1], 
       Association["Match" -> "poor video game", "Count" -> 1], 
       Association["Match" -> "holographic video game", "Count" -> 1], 
       Association["Match" -> "total video game", "Count" -> 2], 
       Association["Match" -> "Cancelled video game", "Count" -> 1], 
       Association["Match" -> "Female video game", "Count" -> 1], 
       Association["Match" -> "male video game", "Count" -> 3], 
       Association["Match" -> "Asian video game", "Count" -> 1], 
       Association["Match" -> "more video game", "Count" -> 3], 
       Association["Match" -> "notable video game", "Count" -> 1], 
       Association["Match" -> "earlier video game", "Count" -> 4], 
       Association["Match" -> "Eastern video game", "Count" -> 1], 
       Association["Match" -> "strategic video game", "Count" -> 1], 
       Association["Match" -> "Casual video game", "Count" -> 1], 
       Association["Match" -> "competitive video game", "Count" -> 3], 
       Association["Match" -> "inclined video-game", "Count" -> 1], 
       Association["Match" -> "certain videogame", "Count" -> 1], 
       Association["Match" -> "professional video game", "Count" -> 2], 
       Association["Match" -> "Many video game", "Count" -> 3], 
       Association["Match" -> "later video game", "Count" -> 4], 
       Association["Match" -> "different video game", "Count" -> 3], 
       Association["Match" -> "thin video game", "Count" -> 1], 
       Association["Match" -> "past video game", "Count" -> 1], 
       Association["Match" -> "influential video game", "Count" -> 1], 
       Association["Match" -> "recent video game", "Count" -> 1], 
       Association["Match" -> "large video game", "Count" -> 3], 
       Association["Match" -> "Outside video game", "Count" -> 1], 
       Association["Match" -> "retro video game", "Count" -> 1], 
       Association["Match" -> "Swedish video game", "Count" -> 1], 
       Association["Match" -> "individual video game", "Count" -> 1], 
       Association["Match" -> "successful video-game", "Count" -> 1], 
       Association["Match" -> "previous video game", "Count" -> 1], 
       Association["Match" -> "available video game", "Count" -> 1], 
       Association["Match" -> "Handheld video game", "Count" -> 2], 
       Association["Match" -> "specific video game", "Count" -> 4], 
       Association["Match" -> "main video game", "Count" -> 1], 
       Association["Match" -> "musical video game", "Count" -> 1], 
       Association["Match" -> "significant video game", "Count" -> 1], 
       Association["Match" -> "live video game", "Count" -> 1], 
       Association["Match" -> "Commercial video game", "Count" -> 3], 
       Association["Match" -> "Olympic video game", "Count" -> 2], 
       Association["Match" -> "Multiplayer video game", "Count" -> 1], 
       Association["Match" -> "acclaimed video game", "Count" -> 2], 
       Association["Match" -> "Later video game", "Count" -> 1], 
       Association["Match" -> "non video-game", "Count" -> 1], 
       Association["Match" -> "right video game", "Count" -> 1], 
       Association["Match" -> "neutral video game", "Count" -> 1], 
       Association["Match" -> "oldest video game", "Count" -> 1], 
       Association["Match" -> "British video game", "Count" -> 3], 
       Association["Match" -> "electronic video game", "Count" -> 1], 
       Association["Match" -> "national videogame", "Count" -> 1], 
       Association["Match" -> "Independent video game", "Count" -> 1], 
       Association["Match" -> "subsequent video game", "Count" -> 1], 
       Association["Match" -> "older video game", "Count" -> 4], 
       Association["Match" -> "physical video game", "Count" -> 1], 
       Association["Match" -> "whole video game", "Count" -> 1], 
       Association["Match" -> "small video game", "Count" -> 1], 
       Association["Match" -> "black video game", "Count" -> 1], 
       Association["Match" -> "Religious video game", "Count" -> 1], 
       Association["Match" -> "German video game", "Count" -> 1], 
       Association["Match" -> "better video game", "Count" -> 1], 
       Association["Match" -> "TMNT video game", "Count" -> 1], 
       Association["Match" -> "official video game", "Count" -> 2], 
       Association["Match" -> "Standalone video game", "Count" -> 1], 
       Association["Match" -> "Naruto video game", "Count" -> 1], 
       Association["Match" -> "international video game", "Count" -> 1], 
       Association["Match" -> "Korean video game", "Count" -> 3], 
       Association["Match" -> "following video game", "Count" -> 1], 
       Association["Match" -> "Notable video game", "Count" -> 4], 
       Association["Match" -> "full video game", "Count" -> 1], 
       Association["Match" -> "Large video game", "Count" -> 2], 
       Association["Match" -> "Several video game", "Count" -> 1], 
       Association["Match" -> "simplistic video game", "Count" -> 1], 
       Association["Match" -> "traditional video game", "Count" -> 1], 
       Association["Match" -> "Specific video game", "Count" -> 1], 
       Association["Match" -> "Controversial video game", "Count" -> 1], 
       Association["Match" -> "indie video game", "Count" -> 2], 
       Association["Match" -> "First video game", "Count" -> 1], 
       Association["Match" -> "Interactive video game", "Count" -> 1], 
       Association["Match" -> "programmable video game", "Count" -> 1], 
       Association["Match" -> "Isometric video game", "Count" -> 1], 
       Association["Match" -> "isometric video game", "Count" -> 1], 
       Association["Match" -> "oblique video game", "Count" -> 1], 
       Association["Match" -> "pathological video game", "Count" -> 1], 
       Association["Match" -> "motivated video game", "Count" -> 1], 
       Association["Match" -> "first video-game", "Count" -> 1], 
       Association["Match" -> "competitive video-game", "Count" -> 1], 
       Association["Match" -> "other videogame", "Count" -> 1], 
       Association["Match" -> "licensed videogame", "Count" -> 1], 
       Association["Match" -> "Notable video-game", "Count" -> 1], 
       Association["Match" -> "governmental video game", "Count" -> 1], 
       Association["Match" -> "statutory video game", "Count" -> 1], 
       Association["Match" -> "historical video game", "Count" -> 1], 
       Association["Match" -> "Indie video game", "Count" -> 1], 
       Association["Match" -> "3D video game", "Count" -> 1], 
       Association["Match" -> "greatest video game", "Count" -> 1], 
       Association["Match" -> "widespread video game", "Count" -> 1], 
       Association["Match" -> "Australian video game", "Count" -> 1], 
       Association["Match" -> "multinational video game", "Count" -> 1], 
       Association["Match" -> "external video game", "Count" -> 1], 
       Association["Match" -> "capable video game", "Count" -> 1], 
       Association["Match" -> "and/or video game", "Count" -> 1], 
       Association["Match" -> "Sega video game", "Count" -> 1], 
       Association["Match" -> " video game", "Count" -> 2], 
       Association["Match" -> "funded video game", "Count" -> 1], 
       Association["Match" -> "particular video game", "Count" -> 1], 
       Association["Match" -> "artistic video game", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 227], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 227], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 227, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["arcade video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["independent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["educational video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["larger video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["other video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["violent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["many video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["dedicated video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["French video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["reputable video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ready video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["handheld video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 227, 1], {1, 227 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 227, 1], {1, 227 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[227, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[227, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 227, 1], {1, 227 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 227, 1], {1, 227 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{319., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{319., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846375007579973*^9, 3.846375787355423*^9, 
  3.846376241310463*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"2c898ccc-af53-4f2a-91a6-81954fbad7cc"]
}, Open  ]],

Cell["MatchCounts", "CodeText",
 CellChangeTimes->{{3.8463746190138063`*^9, 
  3.846374620507051*^9}},ExpressionUUID->"e8714426-241f-4497-993d-\
62cf5c839e71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", 
  RowBox[{"\"\<MatchCounts\>\"", ",", "\"\<Descending\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.846375032672676*^9, 3.846375034079361*^9}, {
  3.8463757982824497`*^9, 3.846375801024427*^9}, {3.846376146795705*^9, 
  3.8463762153453817`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"b9285ea9-5501-4391-9ea1-837259c946e1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Match" -> "first video game", "Count" -> 33], 
       Association["Match" -> "other video game", "Count" -> 17], 
       Association["Match" -> "Japanese video game", "Count" -> 14], 
       Association["Match" -> "commercial video game", "Count" -> 11], 
       Association["Match" -> "violent video game", "Count" -> 10], 
       Association["Match" -> "online video game", "Count" -> 10], 
       Association["Match" -> "many video game", "Count" -> 10], 
       Association["Match" -> "major video game", "Count" -> 10], 
       Association["Match" -> "global video game", "Count" -> 10], 
       Association["Match" -> "American video game", "Count" -> 10], 
       Association["Match" -> "multiplayer video game", "Count" -> 9], 
       Association["Match" -> "popular video game", "Count" -> 8], 
       Association["Match" -> "Numerous video game", "Count" -> 8], 
       Association["Match" -> "early video game", "Count" -> 8], 
       Association["Match" -> "successful video game", "Count" -> 7], 
       Association["Match" -> "several video game", "Count" -> 7], 
       Association["Match" -> "new video game", "Count" -> 7], 
       Association["Match" -> "most video game", "Count" -> 7], 
       Association["Match" -> "modern video game", "Count" -> 7], 
       Association["Match" -> "various video game", "Count" -> 6], 
       Association["Match" -> "related video game", "Count" -> 6], 
       Association["Match" -> "numerous video game", "Count" -> 6], 
       Association["Match" -> "dedicated video game", "Count" -> 6], 
       Association["Match" -> "licensed video game", "Count" -> 5], 
       Association["Match" -> "largest video game", "Count" -> 5], 
       Association["Match" -> "larger video game", "Count" -> 5], 
       Association["Match" -> "independent video game", "Count" -> 5], 
       Association["Match" -> "handheld video game", "Count" -> 5], 
       Association["Match" -> "earliest video game", "Count" -> 5], 
       Association["Match" -> "arcade video game", "Count" -> 5], 
       Association["Match" -> "top video game", "Count" -> 4], 
       Association["Match" -> "specific video game", "Count" -> 4], 
       Association["Match" -> "own video game", "Count" -> 4], 
       Association["Match" -> "Other video game", "Count" -> 4], 
       Association["Match" -> "older video game", "Count" -> 4], 
       Association["Match" -> "Notable video game", "Count" -> 4], 
       Association["Match" -> "Most video game", "Count" -> 4], 
       Association["Match" -> "mobile video game", "Count" -> 4], 
       Association["Match" -> "later video game", "Count" -> 4], 
       Association["Match" -> "female video game", "Count" -> 4], 
       Association["Match" -> "educational video game", "Count" -> 4], 
       Association["Match" -> "earlier video game", "Count" -> 4], 
       Association["Match" -> "controversial video game", "Count" -> 4], 
       Association["Match" -> "certain video game", "Count" -> 4], 
       Association["Match" -> "more video game", "Count" -> 3], 
       Association["Match" -> "Many video game", "Count" -> 3], 
       Association["Match" -> "male video game", "Count" -> 3], 
       Association["Match" -> "local video game", "Count" -> 3], 
       Association["Match" -> "large video game", "Count" -> 3], 
       Association["Match" -> "Korean video game", "Count" -> 3], 
       Association["Match" -> "known video game", "Count" -> 3], 
       Association["Match" -> "interactive video game", "Count" -> 3], 
       Association["Match" -> "foreign video game", "Count" -> 3], 
       Association["Match" -> "expensive video game", "Count" -> 3], 
       Association["Match" -> "European video game", "Count" -> 3], 
       Association["Match" -> "erotic video game", "Count" -> 3], 
       Association["Match" -> "dominant video game", "Count" -> 3], 
       Association["Match" -> "different video game", "Count" -> 3], 
       Association["Match" -> "current video game", "Count" -> 3], 
       Association["Match" -> "competitive video game", "Count" -> 3], 
       Association["Match" -> "Commercial video game", "Count" -> 3], 
       Association["Match" -> "Christian video game", "Count" -> 3], 
       Association["Match" -> "British video game", "Count" -> 3], 
       Association["Match" -> "best video game", "Count" -> 3], 
       Association["Match" -> "worst video game", "Count" -> 2], 
       Association["Match" -> "Western video game", "Count" -> 2], 
       Association["Match" -> " video game", "Count" -> 2], 
       Association["Match" -> "true video game", "Count" -> 2], 
       Association["Match" -> "total video game", "Count" -> 2], 
       Association["Match" -> "re video game", "Count" -> 2], 
       Association["Match" -> "professional video game", "Count" -> 2], 
       Association["Match" -> "popular video-game", "Count" -> 2], 
       Association["Match" -> "Pok\[EAcute]mon video game", "Count" -> 2], 
       Association["Match" -> "Olympic video game", "Count" -> 2], 
       Association["Match" -> "old video game", "Count" -> 2], 
       Association["Match" -> "official video game", "Count" -> 2], 
       Association["Match" -> "mature video game", "Count" -> 2], 
       Association["Match" -> "matching video game", "Count" -> 2], 
       Association["Match" -> "Large video game", "Count" -> 2], 
       Association["Match" -> "indie video game", "Count" -> 2], 
       Association["Match" -> "Handheld video game", "Count" -> 2], 
       Association["Match" -> "grisly video game", "Count" -> 2], 
       Association["Match" -> "French video game", "Count" -> 2], 
       Association["Match" -> "favorite video game", "Count" -> 2], 
       Association["Match" -> "established video game", "Count" -> 2], 
       Association["Match" -> "entire video game", "Count" -> 2], 
       Association["Match" -> "Early video game", "Count" -> 2], 
       Association["Match" -> "console video game", "Count" -> 2], 
       Association["Match" -> "commercial videogame", "Count" -> 2], 
       Association["Match" -> "Chinese video game", "Count" -> 2], 
       Association["Match" -> "annual video game", "Count" -> 2], 
       Association["Match" -> "adult video game", "Count" -> 2], 
       Association["Match" -> "acclaimed video game", "Count" -> 2], 
       Association["Match" -> "widespread video game", "Count" -> 1], 
       Association["Match" -> "whole video game", "Count" -> 1], 
       Association["Match" -> "vintage video game", "Count" -> 1], 
       Association["Match" -> "unrated video game", "Count" -> 1], 
       Association["Match" -> "unquote video game", "Count" -> 1], 
       Association["Match" -> "typical video game", "Count" -> 1], 
       Association["Match" -> "traditional video game", "Count" -> 1], 
       Association["Match" -> "TMNT video game", "Count" -> 1], 
       Association["Match" -> "thin video game", "Count" -> 1], 
       Association["Match" -> "Swedish video game", "Count" -> 1], 
       Association["Match" -> "such video game", "Count" -> 1], 
       Association["Match" -> "successful video-game", "Count" -> 1], 
       Association["Match" -> "subsequent video game", "Count" -> 1], 
       Association["Match" -> "strategic video game", "Count" -> 1], 
       Association["Match" -> "stereoscopic video game", "Count" -> 1], 
       Association["Match" -> "statutory video game", "Count" -> 1], 
       Association["Match" -> "Standalone video game", "Count" -> 1], 
       Association["Match" -> "Specific video game", "Count" -> 1], 
       Association["Match" -> "small video game", "Count" -> 1], 
       Association["Match" -> "simplistic video game", "Count" -> 1], 
       Association["Match" -> "significant video game", "Count" -> 1], 
       Association["Match" -> "short video game", "Count" -> 1], 
       Association["Match" -> "shaded video game", "Count" -> 1], 
       Association["Match" -> "sexist video game", "Count" -> 1], 
       Association["Match" -> "Several video game", "Count" -> 1], 
       Association["Match" -> "Sega video game", "Count" -> 1], 
       Association["Match" -> "Russian video game", "Count" -> 1], 
       Association["Match" -> "roguelike video game", "Count" -> 1], 
       Association["Match" -> "right video game", "Count" -> 1], 
       Association["Match" -> "retro video game", "Count" -> 1], 
       Association["Match" -> "reputable video game", "Count" -> 1], 
       Association["Match" -> "Religious video game", "Count" -> 1], 
       Association["Match" -> "recognizable video game", "Count" -> 1], 
       Association["Match" -> "recent video game", "Count" -> 1], 
       Association["Match" -> "ready video game", "Count" -> 1], 
       Association["Match" -> "proprietary video game", "Count" -> 1], 
       Association["Match" -> "prominent video game", "Count" -> 1], 
       Association["Match" -> "programmable video game", "Count" -> 1], 
       Association["Match" -> "primary video game", "Count" -> 1], 
       Association["Match" -> "previous video game", "Count" -> 1], 
       Association["Match" -> "poor video game", "Count" -> 1], 
       Association["Match" -> "playable video game", "Count" -> 1], 
       Association["Match" -> "physical video game", "Count" -> 1], 
       Association["Match" -> "pathological video game", "Count" -> 1], 
       Association["Match" -> "past video game", "Count" -> 1], 
       Association["Match" -> "particular video game", "Count" -> 1], 
       Association["Match" -> "owned video game", "Count" -> 1], 
       Association["Match" -> "Outside video game", "Count" -> 1], 
       Association["Match" -> "other videogame", "Count" -> 1], 
       Association["Match" -> "original video game", "Count" -> 1], 
       Association["Match" -> "oldest video game", "Count" -> 1], 
       Association["Match" -> "obscure video game", "Count" -> 1], 
       Association["Match" -> "oblique video game", "Count" -> 1], 
       Association["Match" -> "novel video game", "Count" -> 1], 
       Association["Match" -> "Notable video-game", "Count" -> 1], 
       Association["Match" -> "notable video game", "Count" -> 1], 
       Association["Match" -> "non video-game", "Count" -> 1], 
       Association["Match" -> "nonsignificant video game", "Count" -> 1], 
       Association["Match" -> "ninja video game", "Count" -> 1], 
       Association["Match" -> "neutral video game", "Count" -> 1], 
       Association["Match" -> "net video game", "Count" -> 1], 
       Association["Match" -> "national videogame", "Count" -> 1], 
       Association["Match" -> "Naruto video game", "Count" -> 1], 
       Association["Match" -> "musical video game", "Count" -> 1], 
       Association["Match" -> "multiple video game", "Count" -> 1], 
       Association["Match" -> "Multiplayer video game", "Count" -> 1], 
       Association["Match" -> "multinational video game", "Count" -> 1], 
       Association["Match" -> "motivated video game", "Count" -> 1], 
       Association["Match" -> "masterful video game", "Count" -> 1], 
       Association["Match" -> "main video game", "Count" -> 1], 
       Association["Match" -> "low video game", "Count" -> 1], 
       Association["Match" -> "live video game", "Count" -> 1], 
       Association["Match" -> "licensed videogame", "Count" -> 1], 
       Association["Match" -> "latest video game", "Count" -> 1], 
       Association["Match" -> "Later video game", "Count" -> 1], 
       Association["Match" -> "Isometric video game", "Count" -> 1], 
       Association["Match" -> "isometric video game", "Count" -> 1], 
       Association["Match" -> "International video game", "Count" -> 1], 
       Association["Match" -> "international video game", "Count" -> 1], 
       Association["Match" -> "Interactive video game", "Count" -> 1], 
       Association["Match" -> "inspired video game", "Count" -> 1], 
       Association["Match" -> "influential video game", "Count" -> 1], 
       Association["Match" -> "individual video game", "Count" -> 1], 
       Association["Match" -> "Indie video game", "Count" -> 1], 
       Association["Match" -> "Independent video game", "Count" -> 1], 
       Association["Match" -> "inclined video-game", "Count" -> 1], 
       Association["Match" -> "important video game", "Count" -> 1], 
       Association["Match" -> "holographic video game", "Count" -> 1], 
       Association["Match" -> "historical video game", "Count" -> 1], 
       Association["Match" -> "high video game", "Count" -> 1], 
       Association["Match" -> "greatest video game", "Count" -> 1], 
       Association["Match" -> "governmental video game", "Count" -> 1], 
       Association["Match" -> "good video game", "Count" -> 1], 
       Association["Match" -> "German video game", "Count" -> 1], 
       Association["Match" -> "funded video game", "Count" -> 1], 
       Association["Match" -> "fundamental video game", "Count" -> 1], 
       Association["Match" -> "full video game", "Count" -> 1], 
       Association["Match" -> "following video game", "Count" -> 1], 
       Association["Match" -> "First video game", "Count" -> 1], 
       Association["Match" -> "first video-game", "Count" -> 1], 
       Association["Match" -> "few video game", "Count" -> 1], 
       Association["Match" -> "fewer video game", "Count" -> 1], 
       Association["Match" -> "Female video game", "Count" -> 1], 
       Association["Match" -> "fanservice video game", "Count" -> 1], 
       Association["Match" -> "external video game", "Count" -> 1], 
       Association["Match" -> "experimental video game", "Count" -> 1], 
       Association["Match" -> "evil video game", "Count" -> 1], 
       Association["Match" -> "electronic video game", "Count" -> 1], 
       Association["Match" -> "Eastern video game", "Count" -> 1], 
       Association["Match" -> "cursed video game", "Count" -> 1], 
       Association["Match" -> "corresponding video-game", "Count" -> 1], 
       Association["Match" -> "cooperative video game", "Count" -> 1], 
       Association["Match" -> "Controversial video game", "Count" -> 1], 
       Association["Match" -> "contemporary video game", "Count" -> 1], 
       Association["Match" -> "complex video game", "Count" -> 1], 
       Association["Match" -> "competitive video-game", "Count" -> 1], 
       Association["Match" -> "Commercial videogame", "Count" -> 1], 
       Association["Match" -> "classic video game", "Count" -> 1], 
       Association["Match" -> "certain videogame", "Count" -> 1], 
       Association["Match" -> "Certain video game", "Count" -> 1], 
       Association["Match" -> "Casual video game", "Count" -> 1], 
       Association["Match" -> "capable video game", "Count" -> 1], 
       Association["Match" -> "Cancelled video game", "Count" -> 1], 
       Association["Match" -> "black video game", "Count" -> 1], 
       Association["Match" -> "biggest video game", "Count" -> 1], 
       Association["Match" -> "better video game", "Count" -> 1], 
       Association["Match" -> "available video game", "Count" -> 1], 
       Association["Match" -> "Australian video game", "Count" -> 1], 
       Association["Match" -> "Asian video game", "Count" -> 1], 
       Association["Match" -> "artistic video game", "Count" -> 1], 
       Association["Match" -> "and/or video game", "Count" -> 1], 
       Association["Match" -> "active video game", "Count" -> 1], 
       Association["Match" -> "3D video game", "Count" -> 1]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 226], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Match"} -> 1, {All, "Count"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Match" -> TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            "Count" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 226], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 226, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "15faf85c-e7cb-464f-a171-95c728f10162"]][{All, "Match"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{All, "Match"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "15faf85c-e7cb-464f-a171-95c728f10162"]][{All, "Count"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{All, "Count"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["first video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["other video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Japanese video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["commercial video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["violent video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["online video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["many video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["major video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["global video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["American video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["multiplayer video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["popular video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Numerous video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["early video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["successful video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["several video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["new video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["most video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["modern video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["various video game", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "15faf85c-e7cb-464f-a171-95c728f10162"][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 226, 1], {1, 226 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 226, 1], {1, 226 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[226, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[226, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 226, 1], {1, 226 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 226, 1], {1, 226 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "15faf85c-e7cb-464f-a171-95c728f10162", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "15faf85c-e7cb-464f-a171-95c728f10162"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "15faf85c-e7cb-464f-a171-95c728f10162"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "15faf85c-e7cb-464f-a171-95c728f10162"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{308., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{308., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.846375034514323*^9, {3.846375792667054*^9, 3.846375801363153*^9}, {
   3.846376153928172*^9, 3.8463762444600677`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"802454d8-c58f-4de0-8c48-1edc997caeb4"]
}, Open  ]],

Cell["CountGroups", "CodeText",
 CellChangeTimes->{{3.846374624996148*^9, 
  3.84637462736395*^9}},ExpressionUUID->"840d97a8-171f-4778-a86a-\
d75cad3ac3b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<MatchCountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8463763639408693`*^9, 3.846376364507389*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"4a386bdc-44f1-4d2e-9bb0-db829edb89de"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 33, "Matches" -> {"first video game"}], 
       Association["CountGroup" -> 17, "Matches" -> {"other video game"}], 
       Association["CountGroup" -> 14, "Matches" -> {"Japanese video game"}], 
       
       Association[
       "CountGroup" -> 11, "Matches" -> {"commercial video game"}], 
       Association[
       "CountGroup" -> 10, 
        "Matches" -> {
         "violent video game", "online video game", "many video game", 
          "major video game", "global video game", "American video game"}], 
       Association[
       "CountGroup" -> 9, "Matches" -> {"multiplayer video game"}], 
       Association[
       "CountGroup" -> 8, 
        "Matches" -> {
         "popular video game", "Numerous video game", "early video game"}], 
       Association[
       "CountGroup" -> 7, 
        "Matches" -> {
         "successful video game", "several video game", "new video game", 
          "most video game", "modern video game"}], 
       Association[
       "CountGroup" -> 6, 
        "Matches" -> {
         "various video game", "related video game", "numerous video game", 
          "dedicated video game"}], 
       Association[
       "CountGroup" -> 5, 
        "Matches" -> {
         "licensed video game", "largest video game", "larger video game", 
          "independent video game", "handheld video game", 
          "earliest video game", "arcade video game"}], 
       Association[
       "CountGroup" -> 4, 
        "Matches" -> {
         "top video game", "specific video game", "own video game", 
          "Other video game", "older video game", "Notable video game", 
          "Most video game", "mobile video game", "later video game", 
          "female video game", "educational video game", "earlier video game",
           "controversial video game", "certain video game"}], 
       Association[
       "CountGroup" -> 3, 
        "Matches" -> {
         "more video game", "Many video game", "male video game", 
          "local video game", "large video game", "Korean video game", 
          "known video game", "interactive video game", "foreign video game", 
          "expensive video game", "European video game", "erotic video game", 
          "dominant video game", "different video game", "current video game",
           "competitive video game", "Commercial video game", 
          "Christian video game", "British video game", "best video game"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {
         "worst video game", "Western video game", " video game", 
          "true video game", "total video game", "re video game", 
          "professional video game", "popular video-game", 
          "Pok\[EAcute]mon video game", "Olympic video game", 
          "old video game", "official video game", "mature video game", 
          "matching video game", "Large video game", "indie video game", 
          "Handheld video game", "grisly video game", "French video game", 
          "favorite video game", "established video game", 
          "entire video game", "Early video game", "console video game", 
          "commercial videogame", "Chinese video game", "annual video game", 
          "adult video game", "acclaimed video game"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "widespread video game", "whole video game", "vintage video game", 
          "unrated video game", "unquote video game", "typical video game", 
          "traditional video game", "TMNT video game", "thin video game", 
          "Swedish video game", "such video game", "successful video-game", 
          "subsequent video game", "strategic video game", 
          "stereoscopic video game", "statutory video game", 
          "Standalone video game", "Specific video game", "small video game", 
          "simplistic video game", "significant video game", 
          "short video game", "shaded video game", "sexist video game", 
          "Several video game", "Sega video game", "Russian video game", 
          "roguelike video game", "right video game", "retro video game", 
          "reputable video game", "Religious video game", 
          "recognizable video game", "recent video game", "ready video game", 
          "proprietary video game", "prominent video game", 
          "programmable video game", "primary video game", 
          "previous video game", "poor video game", "playable video game", 
          "physical video game", "pathological video game", "past video game",
           "particular video game", "owned video game", "Outside video game", 
          "other videogame", "original video game", "oldest video game", 
          "obscure video game", "oblique video game", "novel video game", 
          "Notable video-game", "notable video game", "non video-game", 
          "nonsignificant video game", "ninja video game", 
          "neutral video game", "net video game", "national videogame", 
          "Naruto video game", "musical video game", "multiple video game", 
          "Multiplayer video game", "multinational video game", 
          "motivated video game", "masterful video game", "main video game", 
          "low video game", "live video game", "licensed videogame", 
          "latest video game", "Later video game", "Isometric video game", 
          "isometric video game", "International video game", 
          "international video game", "Interactive video game", 
          "inspired video game", "influential video game", 
          "individual video game", "Indie video game", 
          "Independent video game", "inclined video-game", 
          "important video game", "holographic video game", 
          "historical video game", "high video game", "greatest video game", 
          "governmental video game", "good video game", "German video game", 
          "funded video game", "fundamental video game", "full video game", 
          "following video game", "First video game", "first video-game", 
          "few video game", "fewer video game", "Female video game", 
          "fanservice video game", "external video game", 
          "experimental video game", "evil video game", 
          "electronic video game", "Eastern video game", "cursed video game", 
          "corresponding video-game", "cooperative video game", 
          "Controversial video game", "contemporary video game", 
          "complex video game", "competitive video-game", 
          "Commercial videogame", "classic video game", "certain videogame", 
          "Certain video game", "Casual video game", "capable video game", 
          "Cancelled video game", "black video game", "biggest video game", 
          "better video game", "available video game", 
          "Australian video game", "Asian video game", "artistic video game", 
          "and/or video game", "active video game", "3D video game"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 14], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 14], "Path" -> {},
      "DisplayedRowCount" -> 14, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     14, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"first video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"first video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"other video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Japanese video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Japanese video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"commercial video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"commercial video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"multiplayer video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"multiplayer video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                    ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{969., {209.134033203125, 214.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{969., {209.134033203125, 214.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846376365050374*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"e593c7d9-3acf-4c2d-8394-2bb977e1c27d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.846375809010648*^9, 3.846375814041267*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"3f86d0a2-f996-4b6a-b50e-6529b069e10b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 89, "Matches" -> {
          Missing["MatchNotFound"]}], 
       Association["CountGroup" -> 33, "Matches" -> {"first video game"}], 
       Association["CountGroup" -> 17, "Matches" -> {"other video game"}], 
       Association["CountGroup" -> 14, "Matches" -> {"Japanese video game"}], 
       
       Association[
       "CountGroup" -> 11, "Matches" -> {"commercial video game"}], 
       Association[
       "CountGroup" -> 10, 
        "Matches" -> {
         "violent video game", "online video game", "many video game", 
          "major video game", "global video game", "American video game"}], 
       Association[
       "CountGroup" -> 9, "Matches" -> {"multiplayer video game"}], 
       Association[
       "CountGroup" -> 8, 
        "Matches" -> {
         "popular video game", "Numerous video game", "early video game"}], 
       Association[
       "CountGroup" -> 7, 
        "Matches" -> {
         "successful video game", "several video game", "new video game", 
          "most video game", "modern video game"}], 
       Association[
       "CountGroup" -> 6, 
        "Matches" -> {
         "various video game", "related video game", "numerous video game", 
          "dedicated video game"}], 
       Association[
       "CountGroup" -> 5, 
        "Matches" -> {
         "licensed video game", "largest video game", "larger video game", 
          "independent video game", "handheld video game", 
          "earliest video game", "arcade video game"}], 
       Association[
       "CountGroup" -> 4, 
        "Matches" -> {
         "top video game", "specific video game", "own video game", 
          "Other video game", "older video game", "Notable video game", 
          "Most video game", "mobile video game", "later video game", 
          "female video game", "educational video game", "earlier video game",
           "controversial video game", "certain video game"}], 
       Association[
       "CountGroup" -> 3, 
        "Matches" -> {
         "more video game", "Many video game", "male video game", 
          "local video game", "large video game", "Korean video game", 
          "known video game", "interactive video game", "foreign video game", 
          "expensive video game", "European video game", "erotic video game", 
          "dominant video game", "different video game", "current video game",
           "competitive video game", "Commercial video game", 
          "Christian video game", "British video game", "best video game"}], 
       Association[
       "CountGroup" -> 2, 
        "Matches" -> {
         "worst video game", "Western video game", " video game", 
          "true video game", "total video game", "re video game", 
          "professional video game", "popular video-game", 
          "Pok\[EAcute]mon video game", "Olympic video game", 
          "old video game", "official video game", "mature video game", 
          "matching video game", "Large video game", "indie video game", 
          "Handheld video game", "grisly video game", "French video game", 
          "favorite video game", "established video game", 
          "entire video game", "Early video game", "console video game", 
          "commercial videogame", "Chinese video game", "annual video game", 
          "adult video game", "acclaimed video game"}], 
       Association[
       "CountGroup" -> 1, 
        "Matches" -> {
         "widespread video game", "whole video game", "vintage video game", 
          "unrated video game", "unquote video game", "typical video game", 
          "traditional video game", "TMNT video game", "thin video game", 
          "Swedish video game", "such video game", "successful video-game", 
          "subsequent video game", "strategic video game", 
          "stereoscopic video game", "statutory video game", 
          "Standalone video game", "Specific video game", "small video game", 
          "simplistic video game", "significant video game", 
          "short video game", "shaded video game", "sexist video game", 
          "Several video game", "Sega video game", "Russian video game", 
          "roguelike video game", "right video game", "retro video game", 
          "reputable video game", "Religious video game", 
          "recognizable video game", "recent video game", "ready video game", 
          "proprietary video game", "prominent video game", 
          "programmable video game", "primary video game", 
          "previous video game", "poor video game", "playable video game", 
          "physical video game", "pathological video game", "past video game",
           "particular video game", "owned video game", "Outside video game", 
          "other videogame", "original video game", "oldest video game", 
          "obscure video game", "oblique video game", "novel video game", 
          "Notable video-game", "notable video game", "non video-game", 
          "nonsignificant video game", "ninja video game", 
          "neutral video game", "net video game", "national videogame", 
          "Naruto video game", "musical video game", "multiple video game", 
          "Multiplayer video game", "multinational video game", 
          "motivated video game", "masterful video game", "main video game", 
          "low video game", "live video game", "licensed videogame", 
          "latest video game", "Later video game", "Isometric video game", 
          "isometric video game", "International video game", 
          "international video game", "Interactive video game", 
          "inspired video game", "influential video game", 
          "individual video game", "Indie video game", 
          "Independent video game", "inclined video-game", 
          "important video game", "holographic video game", 
          "historical video game", "high video game", "greatest video game", 
          "governmental video game", "good video game", "German video game", 
          "funded video game", "fundamental video game", "full video game", 
          "following video game", "First video game", "first video-game", 
          "few video game", "fewer video game", "Female video game", 
          "fanservice video game", "external video game", 
          "experimental video game", "evil video game", 
          "electronic video game", "Eastern video game", "cursed video game", 
          "corresponding video-game", "cooperative video game", 
          "Controversial video game", "contemporary video game", 
          "complex video game", "competitive video-game", 
          "Commercial videogame", "classic video game", "certain videogame", 
          "Certain video game", "Casual video game", "capable video game", 
          "Cancelled video game", "black video game", "biggest video game", 
          "better video game", "available video game", 
          "Australian video game", "Asian video game", "artistic video game", 
          "and/or video game", "active video game", "3D video game"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 15, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 15], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 15, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 15], "Path" -> {},
      "DisplayedRowCount" -> 15, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     15, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Missing["MatchNotFound"]}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"first video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"first video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"other video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Japanese video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Japanese video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"commercial video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"commercial video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"multiplayer video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"multiplayer video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"popular video game", "Numerous video game", 
                    "early video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                    ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"successful video game", "several video game", 
                    "new video game", "most video game", "modern video game"},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"various video game", "related video game", 
                    "numerous video game", "dedicated video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"licensed video game", "largest video game", 
                    "larger video game", "independent video game", 
                    "handheld video game", "earliest video game", 
                    "arcade video game"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 14], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 29], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 133], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{969., {222.634033203125, 228.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{969., {222.634033203125, 228.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846375814330749*^9, 3.846376255905051*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"a7d04a81-7a31-47b7-a5f1-2c8a67d22bbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vgex", "[", 
  RowBox[{"\"\<MatchCountGroups\>\"", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.846432456318688*^9, 3.846432462117086*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"ce6b7f24-1512-4010-a729-72d1cc4c44a1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["CountGroup" -> 33, "Matches" -> {"first video game"}], 
       Association["CountGroup" -> 17, "Matches" -> {"other video game"}], 
       Association["CountGroup" -> 14, "Matches" -> {"Japanese video game"}], 
       
       Association[
       "CountGroup" -> 11, "Matches" -> {"commercial video game"}], 
       Association[
       "CountGroup" -> 10, 
        "Matches" -> {
         "violent video game", "online video game", "many video game", 
          "major video game", "global video game", "American video game"}]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 5], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "CountGroup"} -> 1, {All, "Matches"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "CountGroup" -> TypeSystem`PackageScope`AtomShape[34], "Matches" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"CountGroup", "Matches"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 5], "Path" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     5, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"first video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"first video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other video game"}, ShowStringCharacters -> False], 
                  
                  Style[
                   Style[{"other video game"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Japanese video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Japanese video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"commercial video game"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"commercial video game"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"violent video game", "online video game", 
                    "many video game", "major video game", 
                    "global video game", "American video game"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "d04f56fb-82b6-4ca4-9a54-9ec9c179f222"][{5, 
      Key["Matches"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{792., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{792., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.846432489366123*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"b96e689c-7cbc-424b-b745-4f04aaa6365b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2560, 1387},
WindowMargins->{{0, Automatic}, {Automatic, -540}},
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (June 24, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"062ed9de-a110-4faa-beaf-5afb664927a4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 260, 4, 98, "Title",ExpressionUUID->"7428b188-1d93-45c3-ac0b-40bc273b6198"],
Cell[843, 28, 201, 4, 30, "Input",ExpressionUUID->"677e03af-6afa-49c0-afa1-d8f32ee345b8"],
Cell[CellGroupData[{
Cell[1069, 36, 539, 13, 32, "Item",ExpressionUUID->"6330727c-6baf-45b0-b6eb-f99d78a79b1f"],
Cell[1611, 51, 406, 8, 30, "Input",ExpressionUUID->"40e2ebf9-2e3c-4029-863f-1431d04dc66f"],
Cell[CellGroupData[{
Cell[2042, 63, 276, 4, 30, "Input",ExpressionUUID->"9b5829f8-2560-449e-96f0-b35e1c319419"],
Cell[2321, 69, 8222, 190, 114, "Output",ExpressionUUID->"37055b34-32db-4032-a23a-117837a4274c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10592, 265, 209, 4, 67, "Section",ExpressionUUID->"26cfe700-1bd4-41c4-80f4-8cc395b6a19f"],
Cell[10804, 271, 190, 3, 38, "CodeText",ExpressionUUID->"62977076-cf0b-4791-bd62-4e7892dad6a8"],
Cell[CellGroupData[{
Cell[11019, 278, 541, 10, 30, "Input",ExpressionUUID->"06f13119-0eca-4f3e-af45-9d64c3b15725"],
Cell[11563, 290, 4157, 86, 78, "Output",ExpressionUUID->"3aaac103-3ffc-41d4-b84c-0109cc8e11f6"]
}, Open  ]],
Cell[15735, 379, 180, 3, 38, "CodeText",ExpressionUUID->"fcd4dee6-7d65-4ef2-8491-3cd4cfb93dc6"],
Cell[CellGroupData[{
Cell[15940, 386, 561, 10, 30, "Input",ExpressionUUID->"fe3127a9-13df-4639-bcb3-b0fc696bed26"],
Cell[16504, 398, 3789, 80, 78, "Output",ExpressionUUID->"0b5ce1b0-a0de-4703-a608-a90833203045"]
}, Open  ]],
Cell[20308, 481, 178, 3, 38, "CodeText",ExpressionUUID->"3ad239d7-ccc5-4219-a84b-f205659c780f"],
Cell[CellGroupData[{
Cell[20511, 488, 445, 10, 32, "Input",ExpressionUUID->"b00caf5f-56f6-422f-b115-2a1b976b2f5e"],
Cell[20959, 500, 3786, 79, 78, "Output",ExpressionUUID->"55e1126f-5065-4e0b-b7e0-0da45fb62cb0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24794, 585, 154, 3, 53, "Section",ExpressionUUID->"dee133f7-20eb-44dd-bd76-04b6aa748b9e"],
Cell[24951, 590, 407, 11, 35, "Text",ExpressionUUID->"82176a71-d3d5-424a-b334-64233911f4fe"],
Cell[25361, 603, 239, 4, 38, "CodeText",ExpressionUUID->"b4b3563d-1025-4f7e-809f-764980aaa76c"],
Cell[CellGroupData[{
Cell[25625, 611, 485, 10, 32, "Input",ExpressionUUID->"ca8b0da6-7555-4040-956e-ce57386bd9b0"],
Cell[26113, 623, 358, 6, 34, "Output",ExpressionUUID->"cb4abd08-6401-47bf-9411-0f7eec9aaeea"]
}, Closed]],
Cell[26486, 632, 493, 9, 31, "Text",ExpressionUUID->"8ec4de0f-0ecc-48f8-b06a-a93a5d43e045"],
Cell[CellGroupData[{
Cell[27004, 645, 488, 10, 30, "Input",ExpressionUUID->"71edd9b1-5585-4a72-afeb-a92148b90faf"],
Cell[27495, 657, 282, 4, 34, "Output",ExpressionUUID->"ec8fe3f7-86a6-4f4b-b460-c9016ae5615c"]
}, Closed]],
Cell[CellGroupData[{
Cell[27814, 666, 448, 10, 26, "Input",ExpressionUUID->"a3d67757-5fec-4ab8-853c-8855ca2df6d2"],
Cell[28265, 678, 535, 12, 37, "Output",ExpressionUUID->"ddc89d5e-d9c7-46e4-b26f-979483ef551b"]
}, Closed]],
Cell[CellGroupData[{
Cell[28837, 695, 563, 11, 26, "Input",ExpressionUUID->"96a2829d-390b-4432-a7b6-4acf2b0eda5f"],
Cell[29403, 708, 1612, 37, 37, "Output",ExpressionUUID->"fef961dd-83cc-4ee2-94b9-a3f07ba4ff3f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[31064, 751, 172, 3, 53, "Section",ExpressionUUID->"e0ff93e8-103d-44df-80c7-8ce5a0be5d47"],
Cell[31239, 756, 352, 8, 30, "Input",ExpressionUUID->"cd6d984d-5274-4ad1-b15e-3af149fe6cd3"],
Cell[31594, 766, 528, 12, 32, "Input",ExpressionUUID->"6b0768fe-1278-4d09-8c4a-c1c57f27af94"],
Cell[32125, 780, 402, 8, 30, "Input",ExpressionUUID->"c4308c4e-98bb-4fb2-9fd2-ae7b621fb429"],
Cell[CellGroupData[{
Cell[32552, 792, 206, 3, 30, "Input",ExpressionUUID->"9c79765b-3482-41c5-8855-99e1d448d335"],
Cell[32761, 797, 20878, 483, 95, "Output",ExpressionUUID->"551712b8-d776-4464-b1fc-dd53b749a6d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[53676, 1285, 217, 3, 30, "Input",ExpressionUUID->"5caee727-bf0d-4b92-aa8c-f846ebd158eb"],
Cell[53896, 1290, 184, 2, 34, "Output",ExpressionUUID->"00879887-b84a-4c9e-b27d-6de85a4bf40d"]
}, Closed]],
Cell[CellGroupData[{
Cell[54117, 1297, 221, 3, 30, "Input",ExpressionUUID->"f9be4e86-268a-4767-92f1-034fb218b02d"],
Cell[54341, 1302, 150, 2, 34, "Output",ExpressionUUID->"fdf0bc18-09d0-4e50-9563-3c449ecfaed9"]
}, Closed]],
Cell[CellGroupData[{
Cell[54528, 1309, 279, 4, 30, "Input",ExpressionUUID->"c6172845-d914-4dc3-9cc6-83c8a17c82ce"],
Cell[54810, 1315, 264, 4, 34, "Output",ExpressionUUID->"06a1c2e6-c558-4f58-8f6b-51b326669698"]
}, Closed]],
Cell[CellGroupData[{
Cell[55111, 1324, 219, 3, 30, "Input",ExpressionUUID->"685c1aa8-6594-4d20-bd1e-348ac01c36be"],
Cell[55333, 1329, 62946, 1182, 627, "Output",ExpressionUUID->"437ce6ac-f380-4312-85ad-387f3c912e1a"]
}, Closed]],
Cell[CellGroupData[{
Cell[118316, 2516, 257, 4, 30, "Input",ExpressionUUID->"fef8778e-69d1-46f0-8693-9be51fe04d71"],
Cell[118576, 2522, 63262, 1182, 627, "Output",ExpressionUUID->"725eb6b4-2d79-43ab-be8b-9755c68a6bdd"]
}, Closed]],
Cell[CellGroupData[{
Cell[181875, 3709, 259, 4, 26, "Input",ExpressionUUID->"0fcb6e2e-13b5-4a76-a09c-2322505e75b8"],
Cell[182137, 3715, 62923, 1182, 627, "Output",ExpressionUUID->"36995695-1f4d-44d3-aaff-d3826e05fe26"]
}, Closed]],
Cell[CellGroupData[{
Cell[245097, 4902, 224, 3, 30, "Input",ExpressionUUID->"96c8253f-eeaf-4792-b1b7-bcf90876d91b"],
Cell[245324, 4907, 37507, 699, 227, "Output",ExpressionUUID->"49bf304c-1738-47ee-9fd9-4ea192e16016"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[282880, 5612, 174, 3, 53, "Section",ExpressionUUID->"229d1031-7682-4ea6-b782-ff3021029701"],
Cell[CellGroupData[{
Cell[283079, 5619, 211, 4, 30, "Input",ExpressionUUID->"bf75812a-d53c-4e9c-8711-c1879e0fa0f5"],
Cell[283293, 5625, 23920, 549, 95, "Output",ExpressionUUID->"d52b1d03-83d7-4767-a7e4-c6762aa57c1e"]
}, Open  ]],
Cell[307228, 6177, 409, 9, 30, "Input",ExpressionUUID->"0de3c16d-9adb-4cf0-bbd5-eabcb168bf12"],
Cell[307640, 6188, 534, 12, 30, "Input",ExpressionUUID->"5804ab16-c52a-4773-9f4e-3579ee6af9f6"],
Cell[308177, 6202, 453, 8, 30, "Input",ExpressionUUID->"45f275ee-4988-4899-a2a3-8ce662a7b087"],
Cell[CellGroupData[{
Cell[308655, 6214, 215, 3, 30, "Input",ExpressionUUID->"598cb319-97cd-4a69-a6f5-a97550a62130"],
Cell[308873, 6219, 6001, 160, 106, "Output",ExpressionUUID->"bd0baadc-b504-42d5-8bef-09bd63ca82a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314911, 6384, 220, 3, 30, "Input",ExpressionUUID->"533df013-561d-4d45-9851-2895e4a95c13"],
Cell[315134, 6389, 71804, 1321, 431, "Output",ExpressionUUID->"bfdada70-1d72-46cd-9e02-96360e0f75d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386975, 7715, 219, 3, 30, "Input",ExpressionUUID->"7b2f346a-7266-4dff-bc86-85884e7be711"],
Cell[387197, 7720, 160, 2, 34, "Output",ExpressionUUID->"dc804625-5677-48ec-9e3b-148375b377d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387394, 7727, 221, 3, 30, "Input",ExpressionUUID->"80107659-885a-4981-8bf4-35bd379a5941"],
Cell[387618, 7732, 150, 2, 34, "Output",ExpressionUUID->"a43e6184-08c4-47ac-9787-b43176c9ae14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387805, 7739, 232, 3, 30, "Input",ExpressionUUID->"0ac9212d-651c-4b0b-af50-e8a6823d263e"],
Cell[388040, 7744, 194, 2, 34, "Output",ExpressionUUID->"921c8451-dc50-4b4b-a050-80a95ef4bbb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388271, 7751, 217, 3, 30, "Input",ExpressionUUID->"4b9a33f0-4079-4d24-b974-bd21e3253e25"],
Cell[388491, 7756, 43167, 813, 551, "Output",ExpressionUUID->"bc0bb8fa-b985-401a-8ad5-a590b3e0a512"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431695, 8574, 222, 3, 30, "Input",ExpressionUUID->"14c415ea-0cc3-4f0b-bfcc-840d22af2152"],
Cell[431920, 8579, 31315, 566, 147, "Output",ExpressionUUID->"29f92ad3-f472-450e-b3e1-78417dfb6c4b"]
}, Open  ]],
Cell[463250, 9148, 480, 10, 30, "Input",ExpressionUUID->"90ee521d-a460-45f5-b776-52659ceaf24f"],
Cell[463733, 9160, 150, 3, 38, "CodeText",ExpressionUUID->"fee0666f-f212-49f4-8cef-13e636c9fc80"],
Cell[CellGroupData[{
Cell[463908, 9167, 295, 4, 30, "Input",ExpressionUUID->"3f6b3900-cda9-4cf9-9f23-2770a74aaca9"],
Cell[464206, 9173, 28499, 709, 589, "Output",ExpressionUUID->"8297321a-2afa-4e5e-bd06-45e7f84e351d"]
}, Open  ]],
Cell[492720, 9885, 153, 3, 38, "CodeText",ExpressionUUID->"99f41258-05b7-4ac9-b6f0-24344de097fa"],
Cell[CellGroupData[{
Cell[492898, 9892, 222, 3, 30, "Input",ExpressionUUID->"7b1574ec-ff2a-490a-b57f-03249c342a27"],
Cell[493123, 9897, 94942, 1874, 667, "Output",ExpressionUUID->"65b15640-4eb6-4298-9da8-e53df07da0bb"]
}, Open  ]],
Cell[588080, 11774, 152, 3, 38, "CodeText",ExpressionUUID->"cb03717f-34d9-4a25-8583-442cee084ed5"],
Cell[CellGroupData[{
Cell[588257, 11781, 221, 3, 30, "Input",ExpressionUUID->"e03fb28f-2e8c-4abe-93c6-bf59a6edeac0"],
Cell[588481, 11786, 212, 3, 34, "Output",ExpressionUUID->"8618c90c-d7c6-4b1d-8fab-d70b4825ab4b"]
}, Open  ]],
Cell[588708, 11792, 156, 3, 38, "CodeText",ExpressionUUID->"c87c8874-d68d-4eea-b098-383c8e463fbf"],
Cell[CellGroupData[{
Cell[588889, 11799, 225, 3, 30, "Input",ExpressionUUID->"26df04ff-3753-4598-b388-0c9227ea380f"],
Cell[589117, 11804, 199, 3, 34, "Output",ExpressionUUID->"05fff715-e047-4de1-9d2d-6f8db712081d"]
}, Open  ]],
Cell[589331, 11810, 165, 3, 38, "CodeText",ExpressionUUID->"792c5572-9c2c-4ffd-bb58-df718ac9888c"],
Cell[CellGroupData[{
Cell[589521, 11817, 232, 3, 30, "Input",ExpressionUUID->"dec73d93-a3a4-43de-b50d-697bbc472d85"],
Cell[589756, 11822, 241, 3, 34, "Output",ExpressionUUID->"f4530dff-82cd-4e8a-823e-c6117a380493"]
}, Open  ]],
Cell[590012, 11828, 154, 3, 38, "CodeText",ExpressionUUID->"3f96faac-e9c4-4733-a799-38f245120cec"],
Cell[CellGroupData[{
Cell[590191, 11835, 271, 4, 30, "Input",ExpressionUUID->"0ab23f0f-3a4d-4afd-b15b-0a848ad7f684"],
Cell[590465, 11841, 57996, 1115, 627, "Output",ExpressionUUID->"0303c59f-ac26-45b1-a8c1-c2352b6f28ff"]
}, Open  ]],
Cell[648476, 12959, 157, 3, 38, "CodeText",ExpressionUUID->"48502178-d168-4cfc-8b8d-8a0cec967006"],
Cell[648636, 12964, 253, 6, 30, "Input",ExpressionUUID->"c2644fe1-fafa-4462-9edb-f48de3501990"],
Cell[648892, 12972, 159, 3, 38, "CodeText",ExpressionUUID->"a964e9ed-c0da-4563-ab55-0de422a18e88"],
Cell[CellGroupData[{
Cell[649076, 12979, 231, 4, 30, "Input",ExpressionUUID->"51d2e2cd-7759-4f92-83d8-7428b8abd96d"],
Cell[649310, 12985, 34469, 627, 173, "Output",ExpressionUUID->"76a2b89a-17d3-4601-9933-13188208efa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683816, 13617, 257, 5, 30, "Input",ExpressionUUID->"87f2f164-c1d9-4ebd-9227-2ceda637538b"],
Cell[684076, 13624, 31008, 563, 147, "Output",ExpressionUUID->"303171e4-6c50-437e-bbd3-35e418796aef"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[715133, 14193, 186, 3, 67, "Section",ExpressionUUID->"aed26e69-d386-43b7-bf1e-38c87b529836"],
Cell[CellGroupData[{
Cell[715344, 14200, 158, 3, 54, "Subsection",ExpressionUUID->"b91583f5-438c-4fb8-b688-912d29fe8379"],
Cell[CellGroupData[{
Cell[715527, 14207, 209, 4, 30, "Input",ExpressionUUID->"2c8b2bb9-47a0-4e66-a8b8-9de2ec9c5710"],
Cell[715739, 14213, 23922, 549, 95, "Output",ExpressionUUID->"df643ef0-01b3-4f02-8a2d-faabdf77c933"]
}, Closed]],
Cell[739676, 14765, 999, 21, 32, "Input",ExpressionUUID->"6d7aa374-63ba-4376-a6b7-f1ed628b5650"],
Cell[740678, 14788, 156, 3, 38, "CodeText",ExpressionUUID->"1c7d84f8-0999-4e81-92d6-67f19c68bfc0"],
Cell[CellGroupData[{
Cell[740859, 14795, 221, 4, 30, "Input",ExpressionUUID->"9793953a-c5e6-4492-809f-c7780f938a11"],
Cell[741083, 14801, 195, 3, 34, "Output",ExpressionUUID->"10669208-e19d-4519-a690-afdb4ac34d22"]
}, Closed]],
Cell[CellGroupData[{
Cell[741315, 14809, 230, 4, 30, "Input",ExpressionUUID->"e5ab5117-10a7-40b0-b1aa-142f023a7bc2"],
Cell[741548, 14815, 320, 6, 34, "Output",ExpressionUUID->"e5fed129-8e90-4ae5-8347-31a265ee8a79"]
}, Closed]],
Cell[741883, 14824, 150, 3, 38, "CodeText",ExpressionUUID->"6f8c0572-9f9e-4866-b08b-3e2025219119"],
Cell[CellGroupData[{
Cell[742058, 14831, 219, 4, 30, "Input",ExpressionUUID->"fb3d35ba-84f0-44b1-b2f4-c4a3a4c023c9"],
Cell[742280, 14837, 15354, 388, 167, "Output",ExpressionUUID->"9695f2a9-3e51-4929-bca2-f824be59b88c"]
}, Closed]],
Cell[757649, 15228, 152, 3, 27, "CodeText",ExpressionUUID->"911c3eca-fd69-4e0a-b57e-0c6b838ff3ff"],
Cell[CellGroupData[{
Cell[757826, 15235, 222, 4, 30, "Input",ExpressionUUID->"d69594a7-fcee-475d-a54b-70ebfde4b680"],
Cell[758051, 15241, 174430, 3490, 457, "Output",ExpressionUUID->"560bb57e-b813-4a5f-a225-719816d75636"]
}, Closed]],
Cell[932496, 18734, 156, 3, 38, "CodeText",ExpressionUUID->"ff637d78-adc5-4752-ad47-089fbc41c85e"],
Cell[CellGroupData[{
Cell[932677, 18741, 225, 4, 30, "Input",ExpressionUUID->"218e950e-8f0b-4e1b-9c7e-c04d72a5c88b"],
Cell[932905, 18747, 204, 4, 34, "Output",ExpressionUUID->"1ad7a448-3dc0-42c1-8b6d-8aa1c7796974"]
}, Closed]],
Cell[933124, 18754, 153, 3, 38, "CodeText",ExpressionUUID->"0456c81a-eb1a-4eb0-b26c-8a640cb91555"],
Cell[CellGroupData[{
Cell[933302, 18761, 221, 4, 30, "Input",ExpressionUUID->"673b1405-3c58-479c-9ffe-0305353ea9db"],
Cell[933526, 18767, 75145, 1357, 627, "Output",ExpressionUUID->"c72b5b9d-a813-456a-9f31-fe71c4778e58"]
}, Closed]],
Cell[1008686, 20127, 159, 3, 38, "CodeText",ExpressionUUID->"dd4e1ecd-bfe5-4667-95a3-bc6b88962075"],
Cell[CellGroupData[{
Cell[1008870, 20134, 368, 8, 30, "Input",ExpressionUUID->"cb8bbf12-28df-421f-827f-0354990b3c6a"],
Cell[1009241, 20144, 70499, 1296, 627, "Output",ExpressionUUID->"4ff0b29f-9a3c-4d4c-88e0-0bab0afd31c5"]
}, Closed]],
Cell[1079755, 21443, 156, 3, 38, "CodeText",ExpressionUUID->"a2ff4a2c-8a62-4ee4-93f8-104ff81a2cd6"],
Cell[CellGroupData[{
Cell[1079936, 21450, 231, 4, 30, "Input",ExpressionUUID->"4cfc2ecd-542a-42cc-8e09-9539ef0e9874"],
Cell[1080170, 21456, 64006, 1193, 443, "Output",ExpressionUUID->"51fe65ba-7cee-404c-9715-fd000855cf53"]
}, Closed]],
Cell[CellGroupData[{
Cell[1144213, 22654, 224, 4, 30, "Input",ExpressionUUID->"8d76ac15-7da5-4f44-b43d-9c9b404fa698"],
Cell[1144440, 22660, 66360, 1239, 471, "Output",ExpressionUUID->"44b57345-858c-42bf-822c-1980895b58ff"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1210849, 23905, 158, 3, 38, "Subsection",ExpressionUUID->"ceb19bc6-f2ef-44f6-b342-4d1fb140860c"],
Cell[CellGroupData[{
Cell[1211032, 23912, 209, 4, 30, "Input",ExpressionUUID->"000ed661-9d11-42aa-8738-d8a19f6e010a"],
Cell[1211244, 23918, 23922, 549, 95, "Output",ExpressionUUID->"663aae38-539f-436d-8d8b-538d059b9aca"]
}, Open  ]],
Cell[1235181, 24470, 999, 21, 32, "Input",ExpressionUUID->"694fb306-84c7-4fe4-9197-f41adf2c8021"],
Cell[1236183, 24493, 156, 3, 38, "CodeText",ExpressionUUID->"fec73000-6ee2-4d64-8f24-7f574870bc53"],
Cell[CellGroupData[{
Cell[1236364, 24500, 221, 4, 30, "Input",ExpressionUUID->"46e84df5-61b6-46d6-883f-018a50b61f84"],
Cell[1236588, 24506, 195, 3, 34, "Output",ExpressionUUID->"5cb810ac-bb35-44fc-b57e-9b04f5281fe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1236820, 24514, 230, 4, 30, "Input",ExpressionUUID->"abbd5955-46ae-4070-a8a2-1878c0168776"],
Cell[1237053, 24520, 320, 6, 34, "Output",ExpressionUUID->"719020e4-991f-485e-8ad1-cb5dafa764fa"]
}, Open  ]],
Cell[1237388, 24529, 150, 3, 38, "CodeText",ExpressionUUID->"5eecf5ee-2699-4c8d-b715-9a3919f34ca6"],
Cell[CellGroupData[{
Cell[1237563, 24536, 219, 4, 30, "Input",ExpressionUUID->"aaa3c59e-e5f3-40c2-9d04-37647c85d9cf"],
Cell[1237785, 24542, 15354, 388, 167, "Output",ExpressionUUID->"0c7c9b29-4ead-4505-aa67-273784920baa"]
}, Closed]],
Cell[1253154, 24933, 152, 3, 27, "CodeText",ExpressionUUID->"9d8102f0-c46f-4873-a027-0c13fc33277e"],
Cell[CellGroupData[{
Cell[1253331, 24940, 222, 4, 30, "Input",ExpressionUUID->"b690e7d7-0439-488b-a868-3cd5ac0be671"],
Cell[1253556, 24946, 174424, 3490, 457, "Output",ExpressionUUID->"48fbefff-6d62-4bf0-91a5-0298f2aadaa7"]
}, Open  ]],
Cell[1427995, 28439, 156, 3, 38, "CodeText",ExpressionUUID->"064b9cf9-7c45-4ac2-a3f6-13755bac3124"],
Cell[CellGroupData[{
Cell[1428176, 28446, 225, 4, 30, "Input",ExpressionUUID->"1e324bce-7e2c-4f30-bfe3-a2999bf3f267"],
Cell[1428404, 28452, 204, 4, 34, "Output",ExpressionUUID->"a4e514fd-16a5-4f0d-9129-ee567af14996"]
}, Open  ]],
Cell[1428623, 28459, 153, 3, 38, "CodeText",ExpressionUUID->"43f64c6c-dd1f-4b74-aa5e-8645264d9ac6"],
Cell[CellGroupData[{
Cell[1428801, 28466, 221, 4, 30, "Input",ExpressionUUID->"34abe808-f073-4f9a-a861-6d3f4edc32e9"],
Cell[1429025, 28472, 75139, 1357, 627, "Output",ExpressionUUID->"2c898ccc-af53-4f2a-91a6-81954fbad7cc"]
}, Open  ]],
Cell[1504179, 29832, 159, 3, 38, "CodeText",ExpressionUUID->"e8714426-241f-4497-993d-62cf5c839e71"],
Cell[CellGroupData[{
Cell[1504363, 29839, 368, 8, 30, "Input",ExpressionUUID->"b9285ea9-5501-4391-9ea1-837259c946e1"],
Cell[1504734, 29849, 70493, 1296, 627, "Output",ExpressionUUID->"802454d8-c58f-4de0-8c48-1edc997caeb4"]
}, Open  ]],
Cell[1575242, 31148, 156, 3, 38, "CodeText",ExpressionUUID->"840d97a8-171f-4778-a86a-d75cad3ac3b0"],
Cell[CellGroupData[{
Cell[1575423, 31155, 231, 4, 30, "Input",ExpressionUUID->"4a386bdc-44f1-4d2e-9bb0-db829edb89de"],
Cell[1575657, 31161, 64006, 1193, 443, "Output",ExpressionUUID->"e593c7d9-3acf-4c2d-8394-2bb977e1c27d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1639700, 32359, 224, 4, 30, "Input",ExpressionUUID->"3f86d0a2-f996-4b6a-b50e-6529b069e10b"],
Cell[1639927, 32365, 66360, 1239, 471, "Output",ExpressionUUID->"a7d04a81-7a31-47b7-a5f1-2c8a67d22bbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1706324, 33609, 252, 5, 30, "Input",ExpressionUUID->"ce6b7f24-1512-4010-a729-72d1cc4c44a1"],
Cell[1706579, 33616, 36046, 662, 201, "Output",ExpressionUUID->"b96e689c-7cbc-424b-b745-4f04aaa6365b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

