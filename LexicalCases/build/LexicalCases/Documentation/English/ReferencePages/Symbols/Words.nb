(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    141947,       2736]
NotebookOptionsPosition[    135806,       2604]
NotebookOutlinePosition[    137973,       2660]
CellTagsIndexPosition[    137886,       2655]
WindowTitle->Words
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["LEXICAL CASES SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "2b37f91e-f7f5-4c8e-926d-02346d12a9b6"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "94b94bcf-1d99-4e95-91e2-9d2bc3efb4a9"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "2d313ccb-bf42-4499-bfe8-67bd41267770"]
        }],ExpressionUUID->"2f60bb9b-f1fc-431f-9596-04356313b1c5"],
        StripOnInput->False], {"\<\"LexicalCases/ref/Words\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["LexicalCases/ref/Words"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/LexicalCases/ref/Words.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$19994], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"] <> 
            "LexicalCases/ref/Words" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "2d409a9b-433d-466f-8bfa-ef5f1a437d0f"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "c9594562-483e-47ae-9b57-8d52b8e9e2ea"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"f555cfbc-6360-453b-bb7a-73b72742d997"],

Cell["LexicalCases`", "ContextNameCell",ExpressionUUID->"203d6819-0fff-4a68-ba70-387186f16d45"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "Words", "ObjectName",ExpressionUUID->
      "db94acd5-0d1c-4105-aa74-450728f0111f"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"61df7619-b632-4f42-b1bb-2a6642815677"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "2654527e-a317-46fc-810e-09de4e987820"]
    }],ExpressionUUID->"f72ab6bf-5053-4763-bc27-a92abd758db2"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"d67e6f57-bfec-4d9b-8bef-\
4eac141fa4b3"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Words"]], "paclet:LexicalCases/ref/Words", 
         "LexicalCases Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["n", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "11a0cc2c-9368-44f7-9fe2-456732b83503"],
     "\[LineSeparator]represents n words separated by spaces"
    }],ExpressionUUID->"78adabc6-8ca4-436c-998c-060058379e7b"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Words"]], "paclet:LexicalCases/ref/Words", 
         "LexicalCases Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["m", "TI"], ",", " ", 
        StyleBox["n", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "96b22950-2278-4fbb-b87a-4b88418689a7"],
     "\[LineSeparator]represents ",
     Cell[BoxData[
      StyleBox["m", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c6c08e38-807d-46a5-9abf-6ac99cfa8aa2"],
     " to ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "b62fa598-b038-45de-9c49-9c878648c0c7"],
     " words separated by spaces"
    }],ExpressionUUID->"83f84b63-4ea7-4f82-aca0-8bc56778f55f"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->1062607464,ExpressionUUID->"1507e4d6-b013-40d0-962c-d7364c7841b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"207ed06b-f103-4532-a568-f7998244837b"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"1447cc95-05bd-4b75-990d-a6573a3b6886"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"6ab158a6-b61f-4ff5-a375-143d45f0b422"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"b82deb13-aa19-46d0-9de9-09936e92f1b3"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->2023627186,ExpressionUUID->"e9eb7f5a-218f-47ce-b08d-37fcc788ead9"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b2b7a3aa-6b4d-42be-9d65-7447184e21e1"],
 " and ",
 Cell[BoxData[
  StyleBox["m", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f90e1c05-5995-4957-82b9-4ba8b9549dd4"],
 " must be Integers."
}], "Notes",
 CellID->769638996,ExpressionUUID->"5893ab31-3beb-4852-82e2-495cd0eb6500"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "d6ebdea9-592c-465c-baaa-83a658863ddb"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"8b3ed23d-b3be-4090-b0b5-84e5e5277817"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "b23d8056-ac3d-4752-b769-61fa979f9c8f"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1403597563,ExpressionUUID->"bef8f565-c029-4894-bfd5-0ebcc5b041ef"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "73344bb0-7f2b-4912-a8ad-26686da0a25a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"fd77d951-4984-4e52-af36-2e11a34cf38c"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "6bc2dd95-16a1-4da8-ae50-36b7dba74132"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->156379046,ExpressionUUID->"310b1897-df65-42ac-973c-f73d551fb1a7"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<LexicalCases`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1816155740,ExpressionUUID->"7896e8df-1be9-413b-bc9c-c577ec7af727"],

Cell["Represent a single word", "ExampleText",
 CellID->1396638090,ExpressionUUID->"ba24964a-6b48-4781-a420-e8cad2e40e02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Words", "[", "1", "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->206702419,ExpressionUUID->"465093eb-5b71-4f21-8563-8a519be9755c"],

Cell[BoxData[
 RowBox[{"RegularExpression", "[", "\<\"\\\\b\\\\w+\\\\b\"\>", 
  "]"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1234051995,ExpressionUUID->"92b8070e-c631-496d-bd2f-3f1eeba37f88"]
}, Open  ]],

Cell["Represent multiple words", "ExampleText",
 CellID->314817239,ExpressionUUID->"d10c1c7d-df90-45b5-92c1-080b20364b50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Words", "[", "4", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1564015144,ExpressionUUID->"5c265e2e-892b-4eb7-8bb2-2479e0ec45ab"],

Cell[BoxData[
 RowBox[{"RegularExpression", 
  "[", "\<\"\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\
\\b\\\\w+\\\\b\"\>", "]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->912662360,ExpressionUUID->"9109f327-5e4e-441a-aec0-007c67ee29e5"]
}, Open  ]],

Cell["Represent a range of words", "ExampleText",
 CellID->1788077646,ExpressionUUID->"6f34bfe1-610f-478c-bc49-8082e6609963"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Words", "[", 
  RowBox[{"2", ",", "5"}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->2049080563,ExpressionUUID->"4a16a071-8367-4fc5-bcf3-aa4f19fbe61b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "RegularExpression", "[", "\<\"\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\"\>", 
   "]"}], "|", 
  RowBox[{
  "RegularExpression", 
   "[", "\<\"\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\"\>", 
   "]"}], "|", 
  RowBox[{
  "RegularExpression", 
   "[", "\<\"\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\
\\b\\\\w+\\\\b\"\>", "]"}], "|", 
  RowBox[{
  "RegularExpression", 
   "[", "\<\"\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\\\\s\\\
\\b\\\\w+\\\\b\\\\s\\\\b\\\\w+\\\\b\"\>", "]"}]}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1835219876,ExpressionUUID->"e4620c90-4f54-4724-9276-36af043b650c"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"b296ba9c-068f-47ee-a019-7a6ad1279037"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"5c596ab3-2376-4fd2-8ef3-03c0ed20e35a"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "57483219-b0d3-490f-9499-c25bdba8eefe"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1487590934,ExpressionUUID->"5053b488-1af6-406f-a254-b21dd6166c89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalCases", "[", 
  RowBox[{"$SampleStringLong", ",", 
   RowBox[{
    RowBox[{"Words", "[", "1", "]"}], "~~", "\"\< computer \>\"", "~~", 
    RowBox[{"Words", "[", "1", "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->527026463,ExpressionUUID->"2bcf239c-8dc0-4dfd-8fe2-f2907ded8cb4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LexicalCases`LexicalSummary[<|
   "Data" -> {<|"Match" -> "A computer is", "Position" -> {{1, 13}}|>, <|
      "Match" -> "A computer system", "Position" -> {{263, 279}}|>, <|
      "Match" -> "a computer network", "Position" -> {{527, 544}}|>, <|
      "Match" -> "or computer cluster", "Position" -> {{546, 564}}|>, <|
      "Match" -> "modern computer consists", "Position" -> {{2032, 2055}}|>, <|
      "Match" -> "of computer memory", "Position" -> {{2189, 2206}}|>}, 
    "Dataset" -> 
    Dataset[{<|"Match" -> "A computer is", "Position" -> {{1, 13}}|>, <|
       "Match" -> "A computer system", "Position" -> {{263, 279}}|>, <|
       "Match" -> "a computer network", "Position" -> {{527, 544}}|>, <|
       "Match" -> "or computer cluster", "Position" -> {{546, 564}}|>, <|
       "Match" -> "modern computer consists", 
        "Position" -> {{2032, 2055}}|>, <|
       "Match" -> "of computer memory", "Position" -> {{2189, 2206}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], 1]}], 6], <||>], "Source" -> "Text", 
    "TotalMatchCount" -> 6, "Structure" -> TextElement[{
       TextElement[{
         TextElement[{"\\b\\w+\\b"}, <|"GrammaticalUnit" -> "Text"|>]}, <|
        "GrammaticalUnit" -> "RegularExpression"|>], 
       TextElement[{" computer "}, <|"GrammaticalUnit" -> "Text"|>], 
       TextElement[{
         TextElement[{"\\b\\w+\\b"}, <|"GrammaticalUnit" -> "Text"|>]}, <|
        "GrammaticalUnit" -> "RegularExpression"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->1895116563,ExpressionUUID->"aeac82d2-ff9e-4359-bfa7-b7b24c532067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LexicalCases", "[", 
  RowBox[{"$SampleStringLong", ",", 
   RowBox[{"Words", "[", "1", "]"}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1894105684,ExpressionUUID->"371ed679-370d-446f-8d0d-df4805f98ead"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["416", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["416", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "A", "Position" -> {{1, 1}, {263, 263}, {567, 567}}|>, <|
      "Match" -> "computer", 
       "Position" -> {{3, 10}, {265, 272}, {297, 304}, {529, 536}, {549, 
        556}, {787, 794}, {2039, 2046}, {2192, 2199}}|>, <|
      "Match" -> "is", "Position" -> {{12, 13}, {281, 282}}|>, <|
      "Match" -> "a", 
       "Position" -> {{15, 15}, {240, 240}, {284, 284}, {459, 459}, {527, 
        527}, {1890, 1890}, {2030, 2030}, {2103, 2103}, {2150, 2150}, {2321, 
        2321}}|>, <|"Match" -> "machine", "Position" -> {{17, 23}}|>, <|
      "Match" -> "that", 
       "Position" -> {{25, 28}, {306, 309}, {480, 483}, {2572, 2575}}|>, <|
      "Match" -> "can", 
       "Position" -> {{30, 32}, {139, 141}, {2351, 2353}}|>, <|
      "Match" -> "be", 
       "Position" -> {{34, 35}, {1029, 1030}, {2675, 2676}, {2756, 2757}}|>, <|
      "Match" -> "programmed", "Position" -> {{37, 46}}|>, <|
      "Match" -> "to", 
       "Position" -> {{48, 49}, {229, 230}, {456, 457}, {1026, 1027}, {1234, 
        1235}, {1687, 1688}, {1942, 1943}, {1989, 1990}, {2398, 2399}, {2672, 
        2673}, {2753, 2754}}|>, <|
      "Match" -> "carry", "Position" -> {{51, 55}}|>, <|
      "Match" -> "out", "Position" -> {{57, 59}, {2278, 2280}}|>, <|
      "Match" -> "sequences", "Position" -> {{61, 69}}|>, <|
      "Match" -> "of", 
       "Position" -> {{71, 72}, {164, 165}, {253, 254}, {467, 468}, {581, 
        582}, {957, 958}, {969, 970}, {1789, 1790}, {2057, 2058}, {2147, 
        2148}, {2189, 2190}, {2372, 2373}, {2739, 2740}}|>, <|
      "Match" -> "arithmetic", "Position" -> {{74, 83}, {2282, 2291}}|>, <|
      "Match" -> "or", "Position" -> {{85, 86}, {546, 547}}|>, <|
      "Match" -> "logical", "Position" -> {{88, 94}, {2297, 2303}}|>, <|
      "Match" -> "operations", 
       "Position" -> {{96, 105}, {167, 176}, {2305, 2314}, {2375, 2384}, {
        2742, 2751}}|>, <|
      "Match" -> "automatically", "Position" -> {{107, 119}}|>, <|
      "Match" -> "Modern", "Position" -> {{122, 127}}|>, <|
      "Match" -> "computers", 
       "Position" -> {{129, 137}, {219, 227}, {470, 478}, {621, 629}, {859, 
        867}, {978, 986}, {1005, 1013}, {1792, 1800}}|>, <|
      "Match" -> "perform", 
       "Position" -> {{143, 149}, {232, 238}, {2577, 2583}}|>, <|
      "Match" -> "generic", "Position" -> {{151, 157}}|>, <|
      "Match" -> "sets", "Position" -> {{159, 162}}|>, <|
      "Match" -> "known", "Position" -> {{178, 182}}|>, <|
      "Match" -> "as", 
       "Position" -> {{184, 185}, {524, 525}, {631, 632}, {737, 738}, {810, 
        811}, {818, 819}, {1271, 1272}, {1904, 1905}}|>, <|
      "Match" -> "programs", "Position" -> {{187, 194}, {203, 210}}|>, <|
      "Match" -> "These", "Position" -> {{197, 201}}|>, <|
      "Match" -> "enable", "Position" -> {{212, 217}, {2721, 2726}}|>, <|
      "Match" -> "wide", "Position" -> {{242, 245}}|>, <|
      "Match" -> "range", "Position" -> {{247, 251}, {575, 579}}|>, <|
      "Match" -> "tasks", "Position" -> {{256, 260}, {1259, 1263}}|>, <|
      "Match" -> "system", "Position" -> {{274, 279}, {344, 349}}|>, <|
      "Match" -> "complete", "Position" -> {{287, 294}}|>, <|
      "Match" -> "includes", "Position" -> {{311, 318}}|>, <|
      "Match" -> "the", 
       "Position" -> {{320, 322}, {922, 924}, {1091, 1093}, {1172, 1174}, {
        1380, 1382}, {1529, 1531}, {1561, 1563}, {1663, 1665}, {1690, 1692}, {
        1713, 1715}, {1745, 1747}, {1945, 1947}, {1975, 1977}, {2138, 2140}, {
        2362, 2364}, {2607, 2609}, {2728, 2730}}|>, <|
      "Match" -> "hardware", "Position" -> {{324, 331}}|>, <|
      "Match" -> "operating", "Position" -> {{334, 342}}|>, <|
      "Match" -> "main", "Position" -> {{352, 355}}|>, <|
      "Match" -> "software", "Position" -> {{357, 364}}|>, <|
      "Match" -> "and", 
       "Position" -> {{368, 370}, {400, 402}, {496, 498}, {595, 597}, {703, 
        705}, {783, 785}, {869, 871}, {988, 990}, {1603, 1605}, {1709, 
        1711}, {1773, 1775}, {2293, 2295}, {2317, 2319}, {2334, 2336}, {2547, 
        2549}, {2712, 2714}, {2765, 2767}}|>, <|
      "Match" -> "peripheral", "Position" -> {{372, 381}}|>, <|
      "Match" -> "equipment", "Position" -> {{383, 391}}|>, <|
      "Match" -> "needed", "Position" -> {{393, 398}}|>, <|
      "Match" -> "used", "Position" -> {{404, 407}, {1032, 1035}}|>, <|
      "Match" -> "for", 
       "Position" -> {{409, 411}, {1042, 1044}, {1291, 1293}}|>, <|
      "Match" -> "full", "Position" -> {{414, 417}}|>, <|
      "Match" -> "operation", "Position" -> {{420, 428}}|>, <|
      "Match" -> "This", "Position" -> {{431, 434}}|>, <|
      "Match" -> "term", "Position" -> {{436, 439}}|>, <|
      "Match" -> "may", "Position" -> {{441, 443}}|>, <|
      "Match" -> "also", "Position" -> {{445, 448}}|>, <|
      "Match" -> "refer", "Position" -> {{450, 454}}|>, <|
      "Match" -> "group", "Position" -> {{461, 465}}|>, <|
      "Match" -> "are", 
       "Position" -> {{485, 487}, {723, 725}, {740, 742}}|>, <|
      "Match" -> "linked", "Position" -> {{489, 494}}|>, <|
      "Match" -> "function", "Position" -> {{500, 507}}|>, <|
      "Match" -> "together", "Position" -> {{509, 516}}|>, <|
      "Match" -> "such", "Position" -> {{519, 522}, {1266, 1269}}|>, <|
      "Match" -> "network", "Position" -> {{538, 544}}|>, <|
      "Match" -> "cluster", "Position" -> {{558, 564}}|>, <|
      "Match" -> "broad", "Position" -> {{569, 573}}|>, <|
      "Match" -> "industrial", "Position" -> {{584, 593}, {765, 774}}|>, <|
      "Match" -> "consumer", "Position" -> {{599, 606}}|>, <|
      "Match" -> "products", "Position" -> {{608, 615}}|>, <|
      "Match" -> "use", "Position" -> {{617, 619}}|>, <|
      "Match" -> "control", "Position" -> {{634, 640}, {2338, 2344}}|>, <|
      "Match" -> "systems", "Position" -> {{642, 648}}|>, <|
      "Match" -> "Simple", "Position" -> {{651, 656}, {1060, 1065}}|>, <|
      "Match" -> "special", "Position" -> {{658, 664}}|>, <|
      "Match" -> "purpose", "Position" -> {{666, 672}, {829, 835}}|>, <|
      "Match" -> "devices", 
       "Position" -> {{674, 680}, {752, 758}, {837, 843}, {880, 886}, {1215, 
        1221}, {2432, 2438}, {2454, 2460}, {2504, 2510}, {2564, 2570}, {2646, 
        2652}}|>, <|
      "Match" -> "like", 
       "Position" -> {{682, 685}, {760, 763}, {845, 848}, {888, 891}, {1086, 
        1089}}|>, <|"Match" -> "microwave", "Position" -> {{687, 695}}|>, <|
      "Match" -> "ovens", "Position" -> {{697, 701}}|>, <|
      "Match" -> "remote", "Position" -> {{707, 712}}|>, <|
      "Match" -> "controls", "Position" -> {{714, 721}}|>, <|
      "Match" -> "included", "Position" -> {{727, 734}}|>, <|
      "Match" -> "factory", "Position" -> {{744, 750}}|>, <|
      "Match" -> "robots", "Position" -> {{776, 781}}|>, <|
      "Match" -> "aided", "Position" -> {{796, 800}, {1107, 1111}}|>, <|
      "Match" -> "design", "Position" -> {{802, 807}}|>, <|
      "Match" -> "well", "Position" -> {{813, 816}}|>, <|
      "Match" -> "general", "Position" -> {{821, 827}}|>, <|
      "Match" -> "personal", "Position" -> {{850, 857}}|>, <|
      "Match" -> "mobile", "Position" -> {{873, 878}}|>, <|
      "Match" -> "smartphones", "Position" -> {{893, 903}}|>, <|
      "Match" -> "Computers", "Position" -> {{906, 914}}|>, <|
      "Match" -> "power", "Position" -> {{916, 920}, {1767, 1771}}|>, <|
      "Match" -> "Internet", "Position" -> {{926, 933}}|>, <|
      "Match" -> "which", "Position" -> {{936, 940}}|>, <|
      "Match" -> "links", "Position" -> {{942, 946}}|>, <|
      "Match" -> "hundreds", "Position" -> {{948, 955}}|>, <|
      "Match" -> "millions", "Position" -> {{960, 967}}|>, <|
      "Match" -> "other", "Position" -> {{972, 976}}|>, <|
      "Match" -> "users", "Position" -> {{992, 996}}|>, <|
      "Match" -> "Early", "Position" -> {{999, 1003}, {1163, 1167}}|>, <|
      "Match" -> "were", 
       "Position" -> {{1015, 1018}, {1223, 1226}, {1454, 1457}, {1544, 
        1547}}|>, <|"Match" -> "meant", "Position" -> {{1020, 1024}}|>, <|
      "Match" -> "only", "Position" -> {{1037, 1040}}|>, <|
      "Match" -> "calculations", 
       "Position" -> {{1046, 1057}, {1129, 1140}, {1364, 1375}}|>, <|
      "Match" -> "manual", "Position" -> {{1067, 1072}}|>, <|
      "Match" -> "instruments", "Position" -> {{1074, 1084}}|>, <|
      "Match" -> "abacus", "Position" -> {{1095, 1100}}|>, <|
      "Match" -> "have", "Position" -> {{1102, 1105}, {1802, 1805}}|>, <|
      "Match" -> "people", "Position" -> {{1113, 1118}}|>, <|
      "Match" -> "in", 
       "Position" -> {{1120, 1121}, {1169, 1170}, {1377, 1378}, {1526, 
        1527}, {1660, 1661}, {1742, 1743}, {2135, 2136}, {2386, 2387}}|>, <|
      "Match" -> "doing", "Position" -> {{1123, 1127}}|>, <|
      "Match" -> "since", "Position" -> {{1142, 1146}, {1841, 1845}}|>, <|
      "Match" -> "ancient", "Position" -> {{1148, 1154}}|>, <|
      "Match" -> "times", "Position" -> {{1156, 1160}}|>, <|
      "Match" -> "Industrial", "Position" -> {{1176, 1185}}|>, <|
      "Match" -> "Revolution", "Position" -> {{1187, 1196}, {1957, 1966}}|>, <|
      "Match" -> "some", "Position" -> {{1199, 1202}, {2179, 2182}}|>, <|
      "Match" -> "mechanical", "Position" -> {{1204, 1213}}|>, <|
      "Match" -> "built", "Position" -> {{1228, 1232}}|>, <|
      "Match" -> "automate", "Position" -> {{1237, 1244}}|>, <|
      "Match" -> "long", "Position" -> {{1246, 1249}}|>, <|
      "Match" -> "tedious", "Position" -> {{1251, 1257}}|>, <|
      "Match" -> "guiding", "Position" -> {{1274, 1280}}|>, <|
      "Match" -> "patterns", "Position" -> {{1282, 1289}}|>, <|
      "Match" -> "looms", "Position" -> {{1295, 1299}}|>, <|
      "Match" -> "More", "Position" -> {{1302, 1305}}|>, <|
      "Match" -> "sophisticated", "Position" -> {{1307, 1319}}|>, <|
      "Match" -> "electrical", "Position" -> {{1321, 1330}}|>, <|
      "Match" -> "machines", "Position" -> {{1332, 1339}, {1445, 1452}}|>, <|
      "Match" -> "did", "Position" -> {{1341, 1343}}|>, <|
      "Match" -> "specialized", "Position" -> {{1345, 1355}}|>, <|
      "Match" -> "analog", "Position" -> {{1357, 1362}}|>, <|
      "Match" -> "early", "Position" -> {{1384, 1388}, {1992, 1996}}|>, <|
      "Match" -> "20th", "Position" -> {{1390, 1393}, {1984, 1987}}|>, <|
      "Match" -> "century", "Position" -> {{1395, 1401}}|>, <|
      "Match" -> "The", 
       "Position" -> {{1404, 1406}, {1490, 1492}, {1756, 1758}, {2247, 
        2249}}|>, <|
      "Match" -> "first", "Position" -> {{1408, 1412}, {1494, 1498}}|>, <|
      "Match" -> "digital", "Position" -> {{1414, 1420}}|>, <|
      "Match" -> "electronic", "Position" -> {{1422, 1431}}|>, <|
      "Match" -> "calculating", "Position" -> {{1433, 1443}}|>, <|
      "Match" -> "developed", "Position" -> {{1459, 1467}}|>, <|
      "Match" -> "during", "Position" -> {{1469, 1474}, {1968, 1973}}|>, <|
      "Match" -> "World", "Position" -> {{1476, 1480}}|>, <|
      "Match" -> "War", "Position" -> {{1482, 1484}}|>, <|
      "Match" -> "II", "Position" -> {{1486, 1487}}|>, <|
      "Match" -> "semiconductor", 
       "Position" -> {{1500, 1512}, {2219, 2231}}|>, <|
      "Match" -> "transistors", "Position" -> {{1514, 1524}}|>, <|
      "Match" -> "late", 
       "Position" -> {{1533, 1536}, {1667, 1670}, {1979, 1982}}|>, <|
      "Match" -> "1940s", "Position" -> {{1538, 1542}}|>, <|
      "Match" -> "followed", "Position" -> {{1549, 1556}}|>, <|
      "Match" -> "by", "Position" -> {{1558, 1559}, {1917, 1918}}|>, <|
      "Match" -> "silicon", "Position" -> {{1565, 1571}}|>, <|
      "Match" -> "based", "Position" -> {{1573, 1577}}|>, <|
      "Match" -> "MOSFET", "Position" -> {{1579, 1584}}|>, <|
      "Match" -> "MOS", "Position" -> {{1587, 1589}}|>, <|
      "Match" -> "transistor", "Position" -> {{1591, 1600}, {1858, 1867}}|>, <|
      "Match" -> "monolithic", "Position" -> {{1607, 1616}}|>, <|
      "Match" -> "integrated", "Position" -> {{1618, 1627}}|>, <|
      "Match" -> "circuit", "Position" -> {{1629, 1635}}|>, <|
      "Match" -> "IC", "Position" -> {{1638, 1639}}|>, <|
      "Match" -> "chip", "Position" -> {{1642, 1645}}|>, <|
      "Match" -> "technologies", "Position" -> {{1647, 1658}}|>, <|
      "Match" -> "1950s", "Position" -> {{1672, 1676}}|>, <|
      "Match" -> "leading", "Position" -> {{1679, 1685}, {1934, 1940}}|>, <|
      "Match" -> "microprocessor", 
       "Position" -> {{1694, 1707}, {2152, 2165}}|>, <|
      "Match" -> "microcomputer", "Position" -> {{1717, 1729}}|>, <|
      "Match" -> "revolution", "Position" -> {{1731, 1740}}|>, <|
      "Match" -> "1970s", "Position" -> {{1749, 1753}}|>, <|
      "Match" -> "speed", "Position" -> {{1760, 1764}}|>, <|
      "Match" -> "versatility", "Position" -> {{1777, 1787}}|>, <|
      "Match" -> "been", "Position" -> {{1807, 1810}}|>, <|
      "Match" -> "increasing", "Position" -> {{1812, 1821}, {1876, 1885}}|>, <|
      "Match" -> "dramatically", "Position" -> {{1823, 1834}}|>, <|
      "Match" -> "ever", "Position" -> {{1836, 1839}}|>, <|
      "Match" -> "then", "Position" -> {{1847, 1850}}|>, <|
      "Match" -> "with", "Position" -> {{1853, 1856}, {2174, 2177}}|>, <|
      "Match" -> "counts", "Position" -> {{1869, 1874}}|>, <|
      "Match" -> "at", "Position" -> {{1887, 1888}, {2060, 2061}}|>, <|
      "Match" -> "rapid", "Position" -> {{1892, 1896}}|>, <|
      "Match" -> "pace", "Position" -> {{1898, 1901}}|>, <|
      "Match" -> "predicted", "Position" -> {{1907, 1915}}|>, <|
      "Match" -> "Moore", "Position" -> {{1920, 1924}}|>, <|
      "Match" -> "s", "Position" -> {{1926, 1926}}|>, <|
      "Match" -> "law", "Position" -> {{1928, 1930}}|>, <|
      "Match" -> "Digital", "Position" -> {{1949, 1955}}|>, <|
      "Match" -> "21st", "Position" -> {{1998, 2001}}|>, <|
      "Match" -> "centuries", "Position" -> {{2003, 2011}}|>, <|
      "Match" -> "Conventionally", "Position" -> {{2014, 2027}}|>, <|
      "Match" -> "modern", "Position" -> {{2032, 2037}}|>, <|
      "Match" -> "consists", "Position" -> {{2048, 2055}}|>, <|
      "Match" -> "least", "Position" -> {{2063, 2067}}|>, <|
      "Match" -> "one", "Position" -> {{2069, 2071}}|>, <|
      "Match" -> "processing", 
       "Position" -> {{2073, 2082}, {2113, 2122}, {2251, 2260}}|>, <|
      "Match" -> "element", "Position" -> {{2084, 2090}, {2262, 2268}}|>, <|
      "Match" -> "typically", "Position" -> {{2093, 2101}, {2209, 2217}}|>, <|
      "Match" -> "central", "Position" -> {{2105, 2111}}|>, <|
      "Match" -> "unit", "Position" -> {{2124, 2127}, {2346, 2349}}|>, <|
      "Match" -> "CPU", "Position" -> {{2130, 2132}}|>, <|
      "Match" -> "form", "Position" -> {{2142, 2145}}|>, <|
      "Match" -> "along", "Position" -> {{2168, 2172}}|>, <|
      "Match" -> "type", "Position" -> {{2184, 2187}}|>, <|
      "Match" -> "memory", "Position" -> {{2201, 2206}, {2233, 2238}}|>, <|
      "Match" -> "chips", "Position" -> {{2240, 2244}}|>, <|
      "Match" -> "carries", "Position" -> {{2270, 2276}}|>, <|
      "Match" -> "sequencing", "Position" -> {{2323, 2332}}|>, <|
      "Match" -> "change", "Position" -> {{2355, 2360}}|>, <|
      "Match" -> "order", "Position" -> {{2366, 2370}}|>, <|
      "Match" -> "response", "Position" -> {{2389, 2396}}|>, <|
      "Match" -> "stored", "Position" -> {{2401, 2406}}|>, <|
      "Match" -> "information", 
       "Position" -> {{2408, 2418}, {2660, 2670}}|>, <|
      "Match" -> "Peripheral", "Position" -> {{2421, 2430}, {2635, 2644}}|>, <|
      "Match" -> "include", "Position" -> {{2440, 2446}}|>, <|
      "Match" -> "input", "Position" -> {{2448, 2452}, {2551, 2555}}|>, <|
      "Match" -> "keyboards", "Position" -> {{2463, 2471}}|>, <|
      "Match" -> "mice", "Position" -> {{2474, 2477}}|>, <|
      "Match" -> "joystick", "Position" -> {{2480, 2487}}|>, <|
      "Match" -> "etc", "Position" -> {{2490, 2492}, {2540, 2542}}|>, <|
      "Match" -> "output", "Position" -> {{2497, 2502}, {2557, 2562}}|>, <|
      "Match" -> "monitor", "Position" -> {{2513, 2519}}|>, <|
      "Match" -> "screens", "Position" -> {{2521, 2527}}|>, <|
      "Match" -> "printers", "Position" -> {{2530, 2537}}|>, <|
      "Match" -> "both", "Position" -> {{2585, 2588}}|>, <|
      "Match" -> "functions", "Position" -> {{2590, 2598}}|>, <|
      "Match" -> "e", "Position" -> {{2601, 2601}}|>, <|
      "Match" -> "g", "Position" -> {{2603, 2603}}|>, <|
      "Match" -> "2000s", "Position" -> {{2611, 2615}}|>, <|
      "Match" -> "era", "Position" -> {{2617, 2619}}|>, <|
      "Match" -> "touchscreen", "Position" -> {{2621, 2631}}|>, <|
      "Match" -> "allow", "Position" -> {{2654, 2658}}|>, <|
      "Match" -> "retrieved", "Position" -> {{2678, 2686}, {2769, 2777}}|>, <|
      "Match" -> "from", "Position" -> {{2688, 2691}}|>, <|
      "Match" -> "an", "Position" -> {{2693, 2694}}|>, <|
      "Match" -> "external", "Position" -> {{2696, 2703}}|>, <|
      "Match" -> "source", "Position" -> {{2705, 2710}}|>, <|
      "Match" -> "they", "Position" -> {{2716, 2719}}|>, <|
      "Match" -> "result", "Position" -> {{2732, 2737}}|>, <|
      "Match" -> "saved", "Position" -> {{2759, 2763}}|>}, "Dataset" -> 
    Dataset[{<|
       "Match" -> "A", "Position" -> {{1, 1}, {263, 263}, {567, 567}}|>, <|
       "Match" -> "computer", 
        "Position" -> {{3, 10}, {265, 272}, {297, 304}, {529, 536}, {549, 
         556}, {787, 794}, {2039, 2046}, {2192, 2199}}|>, <|
       "Match" -> "is", "Position" -> {{12, 13}, {281, 282}}|>, <|
       "Match" -> "a", 
        "Position" -> {{15, 15}, {240, 240}, {284, 284}, {459, 459}, {527, 
         527}, {1890, 1890}, {2030, 2030}, {2103, 2103}, {2150, 2150}, {2321, 
         2321}}|>, <|"Match" -> "machine", "Position" -> {{17, 23}}|>, <|
       "Match" -> "that", 
        "Position" -> {{25, 28}, {306, 309}, {480, 483}, {2572, 2575}}|>, <|
       "Match" -> "can", 
        "Position" -> {{30, 32}, {139, 141}, {2351, 2353}}|>, <|
       "Match" -> "be", 
        "Position" -> {{34, 35}, {1029, 1030}, {2675, 2676}, {2756, 
         2757}}|>, <|"Match" -> "programmed", "Position" -> {{37, 46}}|>, <|
       "Match" -> "to", 
        "Position" -> {{48, 49}, {229, 230}, {456, 457}, {1026, 1027}, {1234, 
         1235}, {1687, 1688}, {1942, 1943}, {1989, 1990}, {2398, 2399}, {2672,
          2673}, {2753, 2754}}|>, <|
       "Match" -> "carry", "Position" -> {{51, 55}}|>, <|
       "Match" -> "out", "Position" -> {{57, 59}, {2278, 2280}}|>, <|
       "Match" -> "sequences", "Position" -> {{61, 69}}|>, <|
       "Match" -> "of", 
        "Position" -> {{71, 72}, {164, 165}, {253, 254}, {467, 468}, {581, 
         582}, {957, 958}, {969, 970}, {1789, 1790}, {2057, 2058}, {2147, 
         2148}, {2189, 2190}, {2372, 2373}, {2739, 2740}}|>, <|
       "Match" -> "arithmetic", "Position" -> {{74, 83}, {2282, 2291}}|>, <|
       "Match" -> "or", "Position" -> {{85, 86}, {546, 547}}|>, <|
       "Match" -> "logical", "Position" -> {{88, 94}, {2297, 2303}}|>, <|
       "Match" -> "operations", 
        "Position" -> {{96, 105}, {167, 176}, {2305, 2314}, {2375, 2384}, {
         2742, 2751}}|>, <|
       "Match" -> "automatically", "Position" -> {{107, 119}}|>, <|
       "Match" -> "Modern", "Position" -> {{122, 127}}|>, <|
       "Match" -> "computers", 
        "Position" -> {{129, 137}, {219, 227}, {470, 478}, {621, 629}, {859, 
         867}, {978, 986}, {1005, 1013}, {1792, 1800}}|>, <|
       "Match" -> "perform", 
        "Position" -> {{143, 149}, {232, 238}, {2577, 2583}}|>, <|
       "Match" -> "generic", "Position" -> {{151, 157}}|>, <|
       "Match" -> "sets", "Position" -> {{159, 162}}|>, <|
       "Match" -> "known", "Position" -> {{178, 182}}|>, <|
       "Match" -> "as", 
        "Position" -> {{184, 185}, {524, 525}, {631, 632}, {737, 738}, {810, 
         811}, {818, 819}, {1271, 1272}, {1904, 1905}}|>, <|
       "Match" -> "programs", "Position" -> {{187, 194}, {203, 210}}|>, <|
       "Match" -> "These", "Position" -> {{197, 201}}|>, <|
       "Match" -> "enable", "Position" -> {{212, 217}, {2721, 2726}}|>, <|
       "Match" -> "wide", "Position" -> {{242, 245}}|>, <|
       "Match" -> "range", "Position" -> {{247, 251}, {575, 579}}|>, <|
       "Match" -> "tasks", "Position" -> {{256, 260}, {1259, 1263}}|>, <|
       "Match" -> "system", "Position" -> {{274, 279}, {344, 349}}|>, <|
       "Match" -> "complete", "Position" -> {{287, 294}}|>, <|
       "Match" -> "includes", "Position" -> {{311, 318}}|>, <|
       "Match" -> "the", 
        "Position" -> {{320, 322}, {922, 924}, {1091, 1093}, {1172, 1174}, {
         1380, 1382}, {1529, 1531}, {1561, 1563}, {1663, 1665}, {1690, 
         1692}, {1713, 1715}, {1745, 1747}, {1945, 1947}, {1975, 1977}, {2138,
          2140}, {2362, 2364}, {2607, 2609}, {2728, 2730}}|>, <|
       "Match" -> "hardware", "Position" -> {{324, 331}}|>, <|
       "Match" -> "operating", "Position" -> {{334, 342}}|>, <|
       "Match" -> "main", "Position" -> {{352, 355}}|>, <|
       "Match" -> "software", "Position" -> {{357, 364}}|>, <|
       "Match" -> "and", 
        "Position" -> {{368, 370}, {400, 402}, {496, 498}, {595, 597}, {703, 
         705}, {783, 785}, {869, 871}, {988, 990}, {1603, 1605}, {1709, 
         1711}, {1773, 1775}, {2293, 2295}, {2317, 2319}, {2334, 2336}, {2547,
          2549}, {2712, 2714}, {2765, 2767}}|>, <|
       "Match" -> "peripheral", "Position" -> {{372, 381}}|>, <|
       "Match" -> "equipment", "Position" -> {{383, 391}}|>, <|
       "Match" -> "needed", "Position" -> {{393, 398}}|>, <|
       "Match" -> "used", "Position" -> {{404, 407}, {1032, 1035}}|>, <|
       "Match" -> "for", 
        "Position" -> {{409, 411}, {1042, 1044}, {1291, 1293}}|>, <|
       "Match" -> "full", "Position" -> {{414, 417}}|>, <|
       "Match" -> "operation", "Position" -> {{420, 428}}|>, <|
       "Match" -> "This", "Position" -> {{431, 434}}|>, <|
       "Match" -> "term", "Position" -> {{436, 439}}|>, <|
       "Match" -> "may", "Position" -> {{441, 443}}|>, <|
       "Match" -> "also", "Position" -> {{445, 448}}|>, <|
       "Match" -> "refer", "Position" -> {{450, 454}}|>, <|
       "Match" -> "group", "Position" -> {{461, 465}}|>, <|
       "Match" -> "are", 
        "Position" -> {{485, 487}, {723, 725}, {740, 742}}|>, <|
       "Match" -> "linked", "Position" -> {{489, 494}}|>, <|
       "Match" -> "function", "Position" -> {{500, 507}}|>, <|
       "Match" -> "together", "Position" -> {{509, 516}}|>, <|
       "Match" -> "such", "Position" -> {{519, 522}, {1266, 1269}}|>, <|
       "Match" -> "network", "Position" -> {{538, 544}}|>, <|
       "Match" -> "cluster", "Position" -> {{558, 564}}|>, <|
       "Match" -> "broad", "Position" -> {{569, 573}}|>, <|
       "Match" -> "industrial", "Position" -> {{584, 593}, {765, 774}}|>, <|
       "Match" -> "consumer", "Position" -> {{599, 606}}|>, <|
       "Match" -> "products", "Position" -> {{608, 615}}|>, <|
       "Match" -> "use", "Position" -> {{617, 619}}|>, <|
       "Match" -> "control", "Position" -> {{634, 640}, {2338, 2344}}|>, <|
       "Match" -> "systems", "Position" -> {{642, 648}}|>, <|
       "Match" -> "Simple", "Position" -> {{651, 656}, {1060, 1065}}|>, <|
       "Match" -> "special", "Position" -> {{658, 664}}|>, <|
       "Match" -> "purpose", "Position" -> {{666, 672}, {829, 835}}|>, <|
       "Match" -> "devices", 
        "Position" -> {{674, 680}, {752, 758}, {837, 843}, {880, 886}, {1215, 
         1221}, {2432, 2438}, {2454, 2460}, {2504, 2510}, {2564, 2570}, {2646,
          2652}}|>, <|
       "Match" -> "like", 
        "Position" -> {{682, 685}, {760, 763}, {845, 848}, {888, 891}, {1086, 
         1089}}|>, <|"Match" -> "microwave", "Position" -> {{687, 695}}|>, <|
       "Match" -> "ovens", "Position" -> {{697, 701}}|>, <|
       "Match" -> "remote", "Position" -> {{707, 712}}|>, <|
       "Match" -> "controls", "Position" -> {{714, 721}}|>, <|
       "Match" -> "included", "Position" -> {{727, 734}}|>, <|
       "Match" -> "factory", "Position" -> {{744, 750}}|>, <|
       "Match" -> "robots", "Position" -> {{776, 781}}|>, <|
       "Match" -> "aided", "Position" -> {{796, 800}, {1107, 1111}}|>, <|
       "Match" -> "design", "Position" -> {{802, 807}}|>, <|
       "Match" -> "well", "Position" -> {{813, 816}}|>, <|
       "Match" -> "general", "Position" -> {{821, 827}}|>, <|
       "Match" -> "personal", "Position" -> {{850, 857}}|>, <|
       "Match" -> "mobile", "Position" -> {{873, 878}}|>, <|
       "Match" -> "smartphones", "Position" -> {{893, 903}}|>, <|
       "Match" -> "Computers", "Position" -> {{906, 914}}|>, <|
       "Match" -> "power", "Position" -> {{916, 920}, {1767, 1771}}|>, <|
       "Match" -> "Internet", "Position" -> {{926, 933}}|>, <|
       "Match" -> "which", "Position" -> {{936, 940}}|>, <|
       "Match" -> "links", "Position" -> {{942, 946}}|>, <|
       "Match" -> "hundreds", "Position" -> {{948, 955}}|>, <|
       "Match" -> "millions", "Position" -> {{960, 967}}|>, <|
       "Match" -> "other", "Position" -> {{972, 976}}|>, <|
       "Match" -> "users", "Position" -> {{992, 996}}|>, <|
       "Match" -> "Early", "Position" -> {{999, 1003}, {1163, 1167}}|>, <|
       "Match" -> "were", 
        "Position" -> {{1015, 1018}, {1223, 1226}, {1454, 1457}, {1544, 
         1547}}|>, <|"Match" -> "meant", "Position" -> {{1020, 1024}}|>, <|
       "Match" -> "only", "Position" -> {{1037, 1040}}|>, <|
       "Match" -> "calculations", 
        "Position" -> {{1046, 1057}, {1129, 1140}, {1364, 1375}}|>, <|
       "Match" -> "manual", "Position" -> {{1067, 1072}}|>, <|
       "Match" -> "instruments", "Position" -> {{1074, 1084}}|>, <|
       "Match" -> "abacus", "Position" -> {{1095, 1100}}|>, <|
       "Match" -> "have", "Position" -> {{1102, 1105}, {1802, 1805}}|>, <|
       "Match" -> "people", "Position" -> {{1113, 1118}}|>, <|
       "Match" -> "in", 
        "Position" -> {{1120, 1121}, {1169, 1170}, {1377, 1378}, {1526, 
         1527}, {1660, 1661}, {1742, 1743}, {2135, 2136}, {2386, 2387}}|>, <|
       "Match" -> "doing", "Position" -> {{1123, 1127}}|>, <|
       "Match" -> "since", "Position" -> {{1142, 1146}, {1841, 1845}}|>, <|
       "Match" -> "ancient", "Position" -> {{1148, 1154}}|>, <|
       "Match" -> "times", "Position" -> {{1156, 1160}}|>, <|
       "Match" -> "Industrial", "Position" -> {{1176, 1185}}|>, <|
       "Match" -> "Revolution", 
        "Position" -> {{1187, 1196}, {1957, 1966}}|>, <|
       "Match" -> "some", "Position" -> {{1199, 1202}, {2179, 2182}}|>, <|
       "Match" -> "mechanical", "Position" -> {{1204, 1213}}|>, <|
       "Match" -> "built", "Position" -> {{1228, 1232}}|>, <|
       "Match" -> "automate", "Position" -> {{1237, 1244}}|>, <|
       "Match" -> "long", "Position" -> {{1246, 1249}}|>, <|
       "Match" -> "tedious", "Position" -> {{1251, 1257}}|>, <|
       "Match" -> "guiding", "Position" -> {{1274, 1280}}|>, <|
       "Match" -> "patterns", "Position" -> {{1282, 1289}}|>, <|
       "Match" -> "looms", "Position" -> {{1295, 1299}}|>, <|
       "Match" -> "More", "Position" -> {{1302, 1305}}|>, <|
       "Match" -> "sophisticated", "Position" -> {{1307, 1319}}|>, <|
       "Match" -> "electrical", "Position" -> {{1321, 1330}}|>, <|
       "Match" -> "machines", "Position" -> {{1332, 1339}, {1445, 1452}}|>, <|
       "Match" -> "did", "Position" -> {{1341, 1343}}|>, <|
       "Match" -> "specialized", "Position" -> {{1345, 1355}}|>, <|
       "Match" -> "analog", "Position" -> {{1357, 1362}}|>, <|
       "Match" -> "early", "Position" -> {{1384, 1388}, {1992, 1996}}|>, <|
       "Match" -> "20th", "Position" -> {{1390, 1393}, {1984, 1987}}|>, <|
       "Match" -> "century", "Position" -> {{1395, 1401}}|>, <|
       "Match" -> "The", 
        "Position" -> {{1404, 1406}, {1490, 1492}, {1756, 1758}, {2247, 
         2249}}|>, <|
       "Match" -> "first", "Position" -> {{1408, 1412}, {1494, 1498}}|>, <|
       "Match" -> "digital", "Position" -> {{1414, 1420}}|>, <|
       "Match" -> "electronic", "Position" -> {{1422, 1431}}|>, <|
       "Match" -> "calculating", "Position" -> {{1433, 1443}}|>, <|
       "Match" -> "developed", "Position" -> {{1459, 1467}}|>, <|
       "Match" -> "during", "Position" -> {{1469, 1474}, {1968, 1973}}|>, <|
       "Match" -> "World", "Position" -> {{1476, 1480}}|>, <|
       "Match" -> "War", "Position" -> {{1482, 1484}}|>, <|
       "Match" -> "II", "Position" -> {{1486, 1487}}|>, <|
       "Match" -> "semiconductor", 
        "Position" -> {{1500, 1512}, {2219, 2231}}|>, <|
       "Match" -> "transistors", "Position" -> {{1514, 1524}}|>, <|
       "Match" -> "late", 
        "Position" -> {{1533, 1536}, {1667, 1670}, {1979, 1982}}|>, <|
       "Match" -> "1940s", "Position" -> {{1538, 1542}}|>, <|
       "Match" -> "followed", "Position" -> {{1549, 1556}}|>, <|
       "Match" -> "by", "Position" -> {{1558, 1559}, {1917, 1918}}|>, <|
       "Match" -> "silicon", "Position" -> {{1565, 1571}}|>, <|
       "Match" -> "based", "Position" -> {{1573, 1577}}|>, <|
       "Match" -> "MOSFET", "Position" -> {{1579, 1584}}|>, <|
       "Match" -> "MOS", "Position" -> {{1587, 1589}}|>, <|
       "Match" -> "transistor", 
        "Position" -> {{1591, 1600}, {1858, 1867}}|>, <|
       "Match" -> "monolithic", "Position" -> {{1607, 1616}}|>, <|
       "Match" -> "integrated", "Position" -> {{1618, 1627}}|>, <|
       "Match" -> "circuit", "Position" -> {{1629, 1635}}|>, <|
       "Match" -> "IC", "Position" -> {{1638, 1639}}|>, <|
       "Match" -> "chip", "Position" -> {{1642, 1645}}|>, <|
       "Match" -> "technologies", "Position" -> {{1647, 1658}}|>, <|
       "Match" -> "1950s", "Position" -> {{1672, 1676}}|>, <|
       "Match" -> "leading", "Position" -> {{1679, 1685}, {1934, 1940}}|>, <|
       "Match" -> "microprocessor", 
        "Position" -> {{1694, 1707}, {2152, 2165}}|>, <|
       "Match" -> "microcomputer", "Position" -> {{1717, 1729}}|>, <|
       "Match" -> "revolution", "Position" -> {{1731, 1740}}|>, <|
       "Match" -> "1970s", "Position" -> {{1749, 1753}}|>, <|
       "Match" -> "speed", "Position" -> {{1760, 1764}}|>, <|
       "Match" -> "versatility", "Position" -> {{1777, 1787}}|>, <|
       "Match" -> "been", "Position" -> {{1807, 1810}}|>, <|
       "Match" -> "increasing", 
        "Position" -> {{1812, 1821}, {1876, 1885}}|>, <|
       "Match" -> "dramatically", "Position" -> {{1823, 1834}}|>, <|
       "Match" -> "ever", "Position" -> {{1836, 1839}}|>, <|
       "Match" -> "then", "Position" -> {{1847, 1850}}|>, <|
       "Match" -> "with", "Position" -> {{1853, 1856}, {2174, 2177}}|>, <|
       "Match" -> "counts", "Position" -> {{1869, 1874}}|>, <|
       "Match" -> "at", "Position" -> {{1887, 1888}, {2060, 2061}}|>, <|
       "Match" -> "rapid", "Position" -> {{1892, 1896}}|>, <|
       "Match" -> "pace", "Position" -> {{1898, 1901}}|>, <|
       "Match" -> "predicted", "Position" -> {{1907, 1915}}|>, <|
       "Match" -> "Moore", "Position" -> {{1920, 1924}}|>, <|
       "Match" -> "s", "Position" -> {{1926, 1926}}|>, <|
       "Match" -> "law", "Position" -> {{1928, 1930}}|>, <|
       "Match" -> "Digital", "Position" -> {{1949, 1955}}|>, <|
       "Match" -> "21st", "Position" -> {{1998, 2001}}|>, <|
       "Match" -> "centuries", "Position" -> {{2003, 2011}}|>, <|
       "Match" -> "Conventionally", "Position" -> {{2014, 2027}}|>, <|
       "Match" -> "modern", "Position" -> {{2032, 2037}}|>, <|
       "Match" -> "consists", "Position" -> {{2048, 2055}}|>, <|
       "Match" -> "least", "Position" -> {{2063, 2067}}|>, <|
       "Match" -> "one", "Position" -> {{2069, 2071}}|>, <|
       "Match" -> "processing", 
        "Position" -> {{2073, 2082}, {2113, 2122}, {2251, 2260}}|>, <|
       "Match" -> "element", "Position" -> {{2084, 2090}, {2262, 2268}}|>, <|
       "Match" -> "typically", "Position" -> {{2093, 2101}, {2209, 2217}}|>, <|
       "Match" -> "central", "Position" -> {{2105, 2111}}|>, <|
       "Match" -> "unit", "Position" -> {{2124, 2127}, {2346, 2349}}|>, <|
       "Match" -> "CPU", "Position" -> {{2130, 2132}}|>, <|
       "Match" -> "form", "Position" -> {{2142, 2145}}|>, <|
       "Match" -> "along", "Position" -> {{2168, 2172}}|>, <|
       "Match" -> "type", "Position" -> {{2184, 2187}}|>, <|
       "Match" -> "memory", "Position" -> {{2201, 2206}, {2233, 2238}}|>, <|
       "Match" -> "chips", "Position" -> {{2240, 2244}}|>, <|
       "Match" -> "carries", "Position" -> {{2270, 2276}}|>, <|
       "Match" -> "sequencing", "Position" -> {{2323, 2332}}|>, <|
       "Match" -> "change", "Position" -> {{2355, 2360}}|>, <|
       "Match" -> "order", "Position" -> {{2366, 2370}}|>, <|
       "Match" -> "response", "Position" -> {{2389, 2396}}|>, <|
       "Match" -> "stored", "Position" -> {{2401, 2406}}|>, <|
       "Match" -> "information", 
        "Position" -> {{2408, 2418}, {2660, 2670}}|>, <|
       "Match" -> "Peripheral", 
        "Position" -> {{2421, 2430}, {2635, 2644}}|>, <|
       "Match" -> "include", "Position" -> {{2440, 2446}}|>, <|
       "Match" -> "input", "Position" -> {{2448, 2452}, {2551, 2555}}|>, <|
       "Match" -> "keyboards", "Position" -> {{2463, 2471}}|>, <|
       "Match" -> "mice", "Position" -> {{2474, 2477}}|>, <|
       "Match" -> "joystick", "Position" -> {{2480, 2487}}|>, <|
       "Match" -> "etc", "Position" -> {{2490, 2492}, {2540, 2542}}|>, <|
       "Match" -> "output", "Position" -> {{2497, 2502}, {2557, 2562}}|>, <|
       "Match" -> "monitor", "Position" -> {{2513, 2519}}|>, <|
       "Match" -> "screens", "Position" -> {{2521, 2527}}|>, <|
       "Match" -> "printers", "Position" -> {{2530, 2537}}|>, <|
       "Match" -> "both", "Position" -> {{2585, 2588}}|>, <|
       "Match" -> "functions", "Position" -> {{2590, 2598}}|>, <|
       "Match" -> "e", "Position" -> {{2601, 2601}}|>, <|
       "Match" -> "g", "Position" -> {{2603, 2603}}|>, <|
       "Match" -> "2000s", "Position" -> {{2611, 2615}}|>, <|
       "Match" -> "era", "Position" -> {{2617, 2619}}|>, <|
       "Match" -> "touchscreen", "Position" -> {{2621, 2631}}|>, <|
       "Match" -> "allow", "Position" -> {{2654, 2658}}|>, <|
       "Match" -> "retrieved", "Position" -> {{2678, 2686}, {2769, 2777}}|>, <|
       "Match" -> "from", "Position" -> {{2688, 2691}}|>, <|
       "Match" -> "an", "Position" -> {{2693, 2694}}|>, <|
       "Match" -> "external", "Position" -> {{2696, 2703}}|>, <|
       "Match" -> "source", "Position" -> {{2705, 2710}}|>, <|
       "Match" -> "they", "Position" -> {{2716, 2719}}|>, <|
       "Match" -> "result", "Position" -> {{2732, 2737}}|>, <|
       "Match" -> "saved", "Position" -> {{2759, 2763}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 234], <||>],
     "Source" -> "Text", "TotalMatchCount" -> 416, "Structure" -> 
    LexicalCases`Structure[
      RegularExpression["\\b\\w+\\b"]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->515290221,ExpressionUUID->"04ba254f-e1b4-4ff3-886a-553cc91408b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LexicalCases", "[", 
   RowBox[{"$SampleStringLong", ",", 
    RowBox[{"Words", "[", "3", "]"}]}], "]"}], "[", "\"\<CountGroups\>\"", 
  "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->993543782,ExpressionUUID->"7f1e4796-446a-4b5a-b3fa-40ce1e9492a1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"purpose devices like", "leading to the"}, "CountGroup" -> 
        2|>, <|"Matches" -> {
         "World War II", "with transistor counts", "which links hundreds", 
          "were developed during", "were built to", "used only for", 
          "typically semiconductor memory", "typically a central", 
          "type of computer", "transistors in the", "to early 21st", 
          "to carry out", "to be saved", "This term may", "they enable the", 
          "These programs enable", "The processing element", "the late 20th", 
          "the late 1950s", "The first semiconductor", "The first digital", 
          "the early 20th", "such as guiding", "such as a", 
          "some mechanical devices", "since ancient times", 
          "Simple manual instruments", "sequences of arithmetic", 
          "robots and computer", "retrieved from an", "result of operations", 
          "remote controls are", "power and versatility", 
          "personal computers and", "Peripheral devices include", 
          "Peripheral devices allow", "perform generic sets", 
          "perform both functions", "patterns for looms", 
          "output devices that", "other computers and", 
          "or logical operations", "order of operations", 
          "of operations known", "of millions of", "of industrial and", 
          "of computers have", "of a microprocessor", "needed and used", 
          "More sophisticated electrical", "Modern computers can", 
          "mobile devices like", "microwave ovens and", 
          "microprocessor and the", "microcomputer revolution in", 
          "meant to be", "machines did specialized", "linked and function", 
          "like the abacus", "least one processing", "late 1940s were", 
          "in the form", "in response to", "information to be", 
          "in doing calculations", "increasing at a", "have aided people", 
          "followed by the", "external source and", "ever since then", 
          "electronic calculating machines", "Early in the", 
          "Early computers were", "Digital Revolution during", 
          "devices like industrial", "consumer products use", 
          "consists of at", "computer that includes", "computers to perform", 
          "computers that are", "Computers power the", "computers as control",
           "computer network or", "chip technologies in", 
          "carries out arithmetic", "can change the", "can be programmed", 
          "been increasing dramatically", "a wide range", 
          "automate long tedious", "as well as", "as predicted by", 
          "as are factory", "and peripheral equipment", 
          "and monolithic integrated", "and logical operations", 
          "and control unit", "and a sequencing", "analog calculations in", 
          "a modern computer", "a machine that", "also refer to", 
          "along with some", "a group of", "A computer system", 
          "A computer is", "A broad range"}, "CountGroup" -> 1|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 2, "DataRowCount" -> 2, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][{All, "Matches"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{All, "Matches"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{All, "CountGroup"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"purpose devices like", "leading to the"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"purpose devices like", "leading to the"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 107], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 107], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "79d9e60d-55b8-423f-98d9-1687268b4fb3"][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "79d9e60d-55b8-423f-98d9-1687268b4fb3", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "79d9e60d-55b8-423f-98d9-1687268b4fb3"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "79d9e60d-55b8-423f-98d9-1687268b4fb3"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "79d9e60d-55b8-423f-98d9-1687268b4fb3"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "79d9e60d-55b8-423f-98d9-1687268b4fb3"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "79d9e60d-55b8-423f-98d9-1687268b4fb3"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{304., {47.3544921875, 52.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{304., {47.3544921875, 52.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->1726348754,ExpressionUUID->"05f266be-bff4-4703-bf2a-5f34e22c68fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LexicalCases", "[", 
   RowBox[{"$SampleStringLong", ",", 
    RowBox[{"Words", "[", 
     RowBox[{"2", ",", "4"}], "]"}]}], "]"}], "[", "\"\<CountGroups\>\"", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->91953861,ExpressionUUID->"72b2e4aa-8262-4541-b04c-9b3d205a828d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Matches" -> {"in the"}, "CountGroup" -> 5|>, <|
       "Matches" -> {"to be", "of operations"}, "CountGroup" -> 3|>, <|
       "Matches" -> {
         "The first", "such as", "range of", "purpose devices", 
          "Peripheral devices", "output devices", "leading to", "A computer"},
         "CountGroup" -> 2|>, <|
       "Matches" -> {
         "with transistor", "which links", "were meant", "were followed", 
          "were developed", "War II", "versatility of", "used only", 
          "use computers", "typically semiconductor", "typically a", 
          "to stored", "to perform", "This term", "they enable", "The speed", 
          "These programs", "the result", "The processing", "the order", 
          "the microprocessor", "the late", "the Internet", "the Industrial", 
          "the Digital", "the abacus", "the 2000s", "that perform", 
          "that are", "tedious tasks", "system is", "source and", "some type",
           "some mechanical", "s law", "since then", "since ancient", 
          "Simple special", "Simple manual", "sequencing and", "sequences of",
           "semiconductor transistors", "saved and", "robots and", 
          "Revolution during", "retrieved from", "remote controls", 
          "refer to", "rapid pace", "programmed to", "processing element", 
          "power and", "people in", "ovens and", "out arithmetic", 
          "other computers", "operating system", "of computers", 
          "of computer", "of at", "network or", "MOS transistor", 
          "More sophisticated", "monitor screens", "Modern computers", 
          "mobile devices", "millions of", "microcomputer revolution", 
          "memory chips", "may also", "main software", "machine that", 
          "logical operations", "linked and", "like smartphones", 
          "like personal", "like microwave", "like industrial", "least one", 
          "late 1950s", "late 1940s", "known as", "is a", 
          "integrated circuit", "instruments like", "in response", 
          "industrial and", "includes the", "include input", "hundreds of", 
          "have aided", "guiding patterns", "generic sets", 
          "function together", "form of", "for looms", "for calculations", 
          "factory devices", "era touchscreen", "equipment needed", 
          "enable computers", "element carries", "electrical machines", 
          "Early in", "Early computers", "early 21st", "early 20th", 
          "during World", "dramatically ever", "doing calculations", 
          "digital electronic", "did specialized", "devices were", 
          "counts increasing", "control unit", "consumer products", 
          "computer that", "Computers power", "computers have", 
          "computers and", "computer consists", "computer cluster", 
          "chip technologies", "central processing", "carry out", 
          "can perform", "can change", "can be", "calculating machines", 
          "by the", "by Moore", "built to", "both functions", 
          "been increasing", "based MOSFET", "a wide", "automate long", 
          "at a", "as well", "as predicted", "as general", "as control", 
          "as are", "arithmetic or", "are included", "an external", 
          "and users", "and used", "and the", "and peripheral", 
          "and monolithic", "and logical", "and input", "and a", 
          "analog calculations", "a modern", "a microprocessor", "along with",
           "allow information", "aided design", "a group", "a computer", 
          "A broad", "20th to"}, "CountGroup" -> 1|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[201.60000000000002`]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], TypeSystem`AnyLength], "Path" -> {4, 
       Key["Matches"]}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 164, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {4, 
     Key["Matches"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["with transistor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["which links", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["were meant", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["were followed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 4}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["were developed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 5}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["War II", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 6}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["versatility of", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 7}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["used only", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 8}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["use computers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 9}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["typically semiconductor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 10}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["typically a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 11}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["to stored", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 12}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["to perform", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 13}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["This term", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 14}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["they enable", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 15}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["The speed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 16}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["These programs", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 17}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["the result", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 18}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["The processing", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 19}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["the order", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][{4, 
                 Key["Matches"], 20}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 164, 1], {1, 164 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 164, 1], {1, 164 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[164, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[164, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 164, 1], {1, 164 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 164, 1], {1, 164 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "f7e5e10e-bdd7-42b6-b975-58a1427229c9", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "f7e5e10e-bdd7-42b6-b975-58a1427229c9"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{230., {298.8544921875, 304.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{230., {298.8544921875, 304.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->1627184866,ExpressionUUID->"4be77b50-9297-4b7d-b6b1-7998a819f6de"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[" ", "FooterCell",ExpressionUUID->"59fd9d9b-34b5-49b1-a21f-2349bca05cb7"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Words",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed}, "NotesSection" -> 
    Closed}, "NewStyles" -> True, "CitationPopupData" -> $Failed, 
  "ShowCitation" -> False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 2, 1, 18, 35, 27.747045}", 
    "history" -> {"XX", "", "", ""}, "context" -> "LexicalCases`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Lexical Cases Symbol", "language" -> "en", "paclet" -> "LexicalCases", 
    "status" -> "None", "summary" -> 
    "Words[n] represents n words separated by spaces Words[m, n] represents m \
to n words separated by spaces", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "Words", "titlemodifier" -> "", "windowtitle" -> "Words", "type" -> 
    "Symbol", "uri" -> "LexicalCases/ref/Words", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Mac OS X ARM (64-bit) (December 2, 2021)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"1f325b2f-6bad-43fd-bd36-214ed3194732"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8736, 235, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"bef8f565-c029-4894-bfd5-0ebcc5b041ef",
   CellTags->"PrimaryExamplesSection",
   CellID->1403597563]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 137686, 2648}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[577, 21, 3298, 76, 57, "AnchorBarGrid",ExpressionUUID->"f555cfbc-6360-453b-bb7a-73b72742d997",
 CellID->1],
Cell[3878, 99, 95, 0, 23, "ContextNameCell",ExpressionUUID->"203d6819-0fff-4a68-ba70-387186f16d45"],
Cell[CellGroupData[{
Cell[3998, 103, 548, 14, 60, "ObjectNameGrid",ExpressionUUID->"d67e6f57-bfec-4d9b-8bef-4eac141fa4b3"],
Cell[4549, 119, 1702, 44, 192, "Usage",ExpressionUUID->"1507e4d6-b013-40d0-962c-d7364c7841b8",
 CellID->1062607464]
}, Open  ]],
Cell[CellGroupData[{
Cell[6288, 168, 1887, 47, 37, "NotesSection",ExpressionUUID->"e9eb7f5a-218f-47ce-b08d-37fcc788ead9",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->2023627186],
Cell[8178, 217, 431, 12, 70, "Notes",ExpressionUUID->"5893ab31-3beb-4852-82e2-495cd0eb6500",
 CellID->769638996]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[8736, 235, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"bef8f565-c029-4894-bfd5-0ebcc5b041ef",
 CellTags->"PrimaryExamplesSection",
 CellID->1403597563],
Cell[CellGroupData[{
Cell[10151, 276, 1367, 36, 31, "ExampleSection",ExpressionUUID->"310b1897-df65-42ac-973c-f73d551fb1a7",
 CellID->156379046],
Cell[11521, 314, 177, 3, 29, "Input",ExpressionUUID->"7896e8df-1be9-413b-bc9c-c577ec7af727",
 CellID->1816155740],
Cell[11701, 319, 122, 1, 38, "ExampleText",ExpressionUUID->"ba24964a-6b48-4781-a420-e8cad2e40e02",
 CellID->1396638090],
Cell[CellGroupData[{
Cell[11848, 324, 156, 3, 29, "Input",ExpressionUUID->"465093eb-5b71-4f21-8563-8a519be9755c",
 CellID->206702419],
Cell[12007, 329, 196, 4, 37, "Output",ExpressionUUID->"92b8070e-c631-496d-bd2f-3f1eeba37f88",
 CellID->1234051995]
}, Open  ]],
Cell[12218, 336, 122, 1, 38, "ExampleText",ExpressionUUID->"d10c1c7d-df90-45b5-92c1-080b20364b50",
 CellID->314817239],
Cell[CellGroupData[{
Cell[12365, 341, 157, 3, 29, "Input",ExpressionUUID->"5c265e2e-892b-4eb7-8bb2-2479e0ec45ab",
 CellID->1564015144],
Cell[12525, 346, 260, 5, 37, "Output",ExpressionUUID->"9109f327-5e4e-441a-aec0-007c67ee29e5",
 CellID->912662360]
}, Open  ]],
Cell[12800, 354, 125, 1, 38, "ExampleText",ExpressionUUID->"6f34bfe1-610f-478c-bc49-8082e6609963",
 CellID->1788077646],
Cell[CellGroupData[{
Cell[12950, 359, 180, 4, 29, "Input",ExpressionUUID->"4a16a071-8367-4fc5-bcf3-aa4f19fbe61b",
 CellID->2049080563],
Cell[13133, 365, 683, 18, 72, "Output",ExpressionUUID->"e4620c90-4f54-4724-9276-36af043b650c",
 CellID->1835219876]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[13965, 391, 1394, 36, 30, "ExampleSection",ExpressionUUID->"5053b488-1af6-406f-a254-b21dd6166c89",
 CellID->1487590934],
Cell[CellGroupData[{
Cell[15384, 431, 323, 7, 70, "Input",ExpressionUUID->"2bcf239c-8dc0-4dfd-8fe2-f2907ded8cb4",
 CellID->527026463],
Cell[15710, 440, 4441, 90, 70, "Output",ExpressionUUID->"aeac82d2-ff9e-4359-bfa7-b7b24c532067",
 CellID->1895116563]
}, Open  ]],
Cell[CellGroupData[{
Cell[20188, 535, 236, 5, 70, "Input",ExpressionUUID->"371ed679-370d-446f-8d0d-df4805f98ead",
 CellID->1894105684],
Cell[20427, 542, 37859, 634, 70, "Output",ExpressionUUID->"04ba254f-e1b4-4ff3-886a-553cc91408b7",
 CellID->515290221]
}, Open  ]],
Cell[CellGroupData[{
Cell[58323, 1181, 286, 7, 70, "Input",ExpressionUUID->"7f1e4796-446a-4b5a-b3fa-40ce1e9492a1",
 CellID->993543782],
Cell[58612, 1190, 30092, 538, 70, "Output",ExpressionUUID->"05f266be-bff4-4703-bf2a-5f34e22c68fc",
 CellID->1726348754]
}, Open  ]],
Cell[CellGroupData[{
Cell[88741, 1733, 311, 8, 70, "Input",ExpressionUUID->"72b2e4aa-8262-4541-b04c-9b3d205a828d",
 CellID->91953861],
Cell[89055, 1743, 46427, 850, 70, "Output",ExpressionUUID->"4be77b50-9297-4b7d-b6b1-7998a819f6de",
 CellID->1627184866]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[135724, 2602, 78, 0, 70, "FooterCell",ExpressionUUID->"59fd9d9b-34b5-49b1-a21f-2349bca05cb7"]
}
]
*)

(* End of internal cache information *)

