(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    480682,       9186]
NotebookOptionsPosition[    467757,       8934]
NotebookOutlinePosition[    470826,       9006]
CellTagsIndexPosition[    470702,       9000]
WindowTitle->LexicalSummary
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["LEXICAL CASES SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "e5944e07-2564-492d-af39-ac8a41803cac"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "4839f690-70e9-449d-8f78-df98e1e5e280"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "b79f4aee-b52e-4073-bf8b-dd25c4568ee8"]
        }],ExpressionUUID->"97f18b64-6e35-4e3d-9396-2a9ecc1d4379"],
        StripOnInput->False], {"\<\"LexicalCases/ref/LexicalSummary\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["LexicalCases/ref/LexicalSummary"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/LexicalCases/ref/\
LexicalSummary.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$18050], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"] <> 
            "LexicalCases/ref/LexicalSummary" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "fd09b5e6-1261-4f1c-8c11-b99e6d9d4734"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "1cbef9b5-c596-4be3-918e-de5bdbac5edb"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"983a73b7-7971-407c-8eaf-284b7ea78daf"],

Cell["LexicalCases`", "ContextNameCell",ExpressionUUID->"a5b9460e-57ae-4b69-8ec0-52d4abf7f0e3"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "LexicalSummary", "ObjectName",ExpressionUUID->
      "7712d363-7fa5-494f-b9a0-d380acc01c4c"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"61d2e08c-7d9d-4d00-a5a0-009a737aca90"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "8a0a5c9d-7495-49ed-9f9b-43848d543ba8"]
    }],ExpressionUUID->"eb36f601-174e-4905-90be-67d82e6e9c08"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"81518e69-ccb0-4563-9abd-\
aa09dbfb6e3f"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        TemplateBox[{
          Cell[
           TextData["LexicalSummary"]], 
          "paclet:LexicalCases/ref/LexicalSummary", 
          "LexicalCases Package Symbol"},
         "PackageLink",
         BaseStyle->"InlineFormula"], "[", 
        StyleBox["\[Ellipsis]", "TR"], "]"}], "[", "\"\<Properties\>\"", 
       "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e490e0df-12a6-4641-87ee-1299e59f0d62"],
     "\[LineSeparator]Get a list of available properties"
    }],ExpressionUUID->"d6a8c970-60a0-4be7-9941-d9b53d928911"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        TemplateBox[{
          Cell[
           TextData["LexicalSummary"]], 
          "paclet:LexicalCases/ref/LexicalSummary", 
          "LexicalCases Package Symbol"},
         "PackageLink",
         BaseStyle->"InlineFormula"], "[", 
        StyleBox["\[Ellipsis]", "TR"], "]"}], "[", 
       StyleBox["property", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8181cf02-493c-453e-b584-418488d8da6c"],
     "\[LineSeparator]Return the value of a ",
     Cell[BoxData[
      StyleBox["property", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a76db869-24eb-46f9-af4e-0cb7fff66728"],
     " "
    }],ExpressionUUID->"4c1a8778-07f3-48df-85f5-b5e91d8ff649"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        TemplateBox[{
          Cell[
           TextData["LexicalSummary"]], 
          "paclet:LexicalCases/ref/LexicalSummary", 
          "LexicalCases Package Symbol"},
         "PackageLink",
         BaseStyle->"InlineFormula"], "[", 
        StyleBox["\[Ellipsis]", "TR"], "]"}], "[", 
       RowBox[{
        StyleBox["dsp", "TI"], ",", 
        StyleBox["n", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "2178cf68-ee5f-4a14-a2d3-4c2c0ea4d624"],
     "\[LineSeparator]Return ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7c9c228c-9a90-4d01-9542-47d97c51beb6"],
     " rows from ",
     Cell[BoxData[
      StyleBox["dsp", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4fda233f-d613-4c28-a73e-01f958864c24"],
     " data"
    }],ExpressionUUID->"95e24e0c-0bf4-4446-9b55-bb783d1f9127"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        TemplateBox[{
          Cell[
           TextData["LexicalSummary"]], 
          "paclet:LexicalCases/ref/LexicalSummary", 
          "LexicalCases Package Symbol"},
         "PackageLink",
         BaseStyle->"InlineFormula"], "[", 
        StyleBox["\[Ellipsis]", "TR"], "]"}], "[", 
       RowBox[{
        StyleBox["dsp", "TI"], ",", 
        TemplateBox[{
          Cell[
           TextData["DeleteStopwords"]], "paclet:ref/DeleteStopwords"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "29857c1e-f559-4739-9307-47991d158e8f"],
     "\[LineSeparator]Remove stopwords from ",
     Cell[BoxData[
      StyleBox["dsp", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "0149dad6-2173-46cc-bef1-dbb5daa8b1e0"],
     " data"
    }],ExpressionUUID->"c0dbbf9f-55cd-487d-9ac0-71ab3736f061"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        TemplateBox[{
          Cell[
           TextData["LexicalSummary"]], 
          "paclet:LexicalCases/ref/LexicalSummary", 
          "LexicalCases Package Symbol"},
         "PackageLink",
         BaseStyle->"InlineFormula"], "[", 
        StyleBox["\[Ellipsis]", "TR"], "]"}], "[", 
       RowBox[{
        StyleBox["dsp", "TI"], ",", 
        StyleBox["n", "TI"], ",", 
        TemplateBox[{
          Cell[
           TextData["DeleteStopwords"]], "paclet:ref/DeleteStopwords"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7ae02453-3b45-42bc-99de-6a162035424c"],
     "\[LineSeparator]Return ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4bb684d5-a067-4d66-aceb-864f4c65f8d3"],
     " rows after removing stopwords from ",
     Cell[BoxData[
      StyleBox["dsp", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "f44721b8-7eb8-463e-b920-49969f4d6607"],
     " data"
    }],ExpressionUUID->"e7d882dc-4500-4aea-9dcf-370aa165f0c2"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, {None}}}},
 CellID->1166372416,ExpressionUUID->"7d2cb95e-77ab-4959-a72f-82216d4bcc62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"da4e1795-acff-4dda-8e50-ff200b165039"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"e49fa0c8-9974-445d-a189-4d12a1352524"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"290f4c00-5dc2-42d7-b4cc-3f0e6ae054ff"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"1e7d1f2c-c561-401c-9747-7f63b1cb1662"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->459179288,ExpressionUUID->"70c7d514-4daf-4665-b4de-50dbfbb6d6d3"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["property", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "59d855da-8338-4368-9d8d-0f41450e0a51"],
 " can be one of the following:"
}], "Notes",
 CellID->990465896,ExpressionUUID->"fc316fef-b90e-41da-a367-f7b8b4cc32d9"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b155185a-3c94-44db-9a60-c4b0f66e109e"], Cell[
    "\"Data\"", "TableText",ExpressionUUID->
     "22ee5613-baf5-4384-9912-1d1595e03a98"], Cell[
    "Association-List of matches", "TableText",ExpressionUUID->
     "a7aa20c4-49f4-4319-bfc1-ec94cb50d41f"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b58373d6-2997-4040-9659-466ca7a6dcd2"], Cell[
    "\"Dataset\"", "TableText",ExpressionUUID->
     "5fbb6ec0-1848-4bc0-9bbc-a80641c004d3"], Cell[
    "a Dataset of matches", "TableText",ExpressionUUID->
     "71c6b19e-c14d-48b6-a8c7-327badaefae3"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "ff362a43-6531-4c2e-b909-e84c4c92900e"], Cell[
    "\"Counts\"", "TableText",ExpressionUUID->
     "b9bef25d-da02-420e-a202-75df74e84eb3"], Cell[
    "a Dataset of match counts", "TableText",ExpressionUUID->
     "5a8cc661-29cc-4dca-ac54-84eea4f0b84a"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "50443c2e-648a-4186-b242-689bad66e982"], Cell[
    "\"CountGroups\"", "TableText",ExpressionUUID->
     "c9c09aed-60b0-41d8-8984-3e6d145f40f9"], Cell[
    "a Dataset of matches grouped by count", "TableText",ExpressionUUID->
     "3990cb6d-495b-4c39-988b-448c2e249acf"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "f556c27f-deef-4324-9d1f-0179d58e77b3"], Cell[
    "\"Source\"", "TableText",ExpressionUUID->
     "5d4fe3d5-0c36-49ab-985d-6a8233cc00b8"], Cell[
    "the source of results", "TableText",ExpressionUUID->
     "b3e1f967-02d8-475f-b114-ef74e38f06e6"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "c4f720ac-be90-4bc6-b729-1070c0ea0eec"], Cell[
    "\"TotalMatchCount\"", "TableText",ExpressionUUID->
     "40aa2181-4981-40f8-87e0-9ebf1acc48c5"], Cell[
    "total number of matches found", "TableText",ExpressionUUID->
     "189ab15d-9e94-49ba-ba27-184948dbc83b"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "37cb6784-0f12-40a6-aad2-d697a5e71042"], Cell[
    "\"Survey\"", "TableText",ExpressionUUID->
     "2ef58cf6-828b-4f87-9403-003af466c143"], Cell[
    "a Dashboard of results", "TableText",ExpressionUUID->
     "83fe62c4-8468-43ec-b009-07672ae12ab4"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "44fdc6b8-b8e3-4d96-aae1-07f5a46a2b85"], Cell[
    "\"LexicalStructure\"", "TableText",ExpressionUUID->
     "842858c6-e096-46a7-8050-d874c1860632"], Cell[TextData[{
     "A visualization of the lexical pattern ",
     Cell[BoxData[
      StyleBox["lp", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c6b8f14a-46b7-4605-890b-3542efa12138"]
    }], "TableText",ExpressionUUID->"fbb0afe2-d021-4883-8904-1024461183ed"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "1e77c86a-33c7-4b86-aaf9-f5e5c9050359"], Cell[
    "\"CountGroupPercentages\"", "TableText",ExpressionUUID->
     "1abbeb75-0bd5-4c7d-a19c-10fdea1845b8"], Cell[
    "a Dataset of match counts as percentages", "TableText",ExpressionUUID->
     "558efb1b-695e-43b3-b191-1f35181cf9f5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "94595e01-95b1-41eb-8803-27910ca9bbc5"], Cell[
    "\"LowercaseCountGroupPercentages\"", "TableText",ExpressionUUID->
     "680e24e0-1228-444b-9b39-a17cfb47dc73"], Cell[
    "lowercased match count group percentages", "TableText",ExpressionUUID->
     "b3302d77-3542-46a6-ac8e-36fac86f28c5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "694ebe27-b751-4c5e-8b09-9ad177906fc1"], Cell[
    "\"PartOfSpeechGroups\"", "TableText",ExpressionUUID->
     "957db80d-b8cc-454a-af8c-6df922525997"], Cell[
    "unique words in match grouped by part of speech", "TableText",
     ExpressionUUID->"f7e20167-77a3-48b6-b6c6-a79d1237a77c"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "67cd22ed-ad82-425f-adbe-f0cc42a80358"], Cell[
    "\"WordStemCountGroups\"", "TableText",ExpressionUUID->
     "b40bb136-a941-42fc-9eb3-c6bc0ef8caee"], Cell[
    "word stems found in matches grouped by count", "TableText",
     ExpressionUUID->"742d4500-996e-4d85-afa9-847066444e0f"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True}}}},
 CellID->1912558626,ExpressionUUID->"34e3a8ff-6960-4fd9-9255-71e685c15fc4"],

Cell["\<\
The match must be a stop word for it to be removed form results when \
DeleteStopwords is specified.\
\>", "Notes",
 CellID->1057825671,ExpressionUUID->"c1967ef1-349e-4584-9f0b-55c8625e134c"],

Cell[TextData[{
 "Possible ",
 Cell[BoxData[
  StyleBox["dsp", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "45df6bb0-23de-4891-b1a8-37edf9f69f09"],
 " are:"
}], "Notes",
 CellID->824378231,ExpressionUUID->"64447b6e-3857-4d86-ace9-f14fb19a1a27"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "474dee59-1152-4aa8-a20c-51c17ef23868"], Cell[
    "\"Survey\"", "TableText",ExpressionUUID->
     "4df6a72f-547e-453c-8ebd-d7b627a91fe7"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "ee9067c7-727f-4044-a98e-b90e058ff130"], Cell[
    "\"CountGroups\"", "TableText",ExpressionUUID->
     "f74b6a10-43f6-4a9e-a72c-79af185389d4"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "10a995bb-1b10-43c7-a216-2f683a38ff84"], Cell[
    "\"PartOfSpeechGroups\"", "TableText",ExpressionUUID->
     "aa82b7b3-2273-4773-874d-f0de8fd760f7"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "cc0b7e24-d35e-4c2d-b113-b40ec47684b4"], Cell[
    "\"CountGroupPercentages\"", "TableText",ExpressionUUID->
     "41ebae44-e935-47f1-9fcb-7436011f7c43"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "d78dc69b-6f1d-4d36-91d7-9020bd828505"], Cell[
    "\"WordStemCountGroups\"", "TableText",ExpressionUUID->
     "45bf8fbd-094b-437f-90b6-a31240b5af04"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "e8bfe110-6b06-4eac-823f-2739a275d16e"], Cell[
    "\"LowercaseCountGroupPercentages\"", "TableText",ExpressionUUID->
     "5322f0ef-0e47-43c5-909a-bef8c26feb1d"]}
  }]], "1ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
 CellID->1136967896,ExpressionUUID->"242a4dee-baa1-46d3-b9ec-63488a4a3404"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "84f207ae-74b4-4ebd-affb-048c39264121"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"3f7bdd84-66d2-4deb-a339-678f99044dca"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(11)", "ExampleCount",ExpressionUUID->
  "d1add574-c062-4622-9af8-11a3baa34c26"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1517549745,ExpressionUUID->"be671882-2ca6-4d46-9555-5bcc5410d5ac"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "d3e5d917-d333-4b18-b9b9-ca506d9d60c9"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"1126cedd-af1a-4656-9bf7-6fb62d18cce7"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "e45bf3a4-1e20-4260-a3c4-5a59b0c8c517"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1942772443,ExpressionUUID->"3b61e56d-a3d3-49df-b230-88c89e84ee0f"],

Cell[TextData[{
 "Group matches by occurrence using the ",
 Cell[BoxData[
  StyleBox["\"\<CountGroups\>\"", "Input"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ec88c456-6f9e-4d80-8c65-c77e37bbd648"],
 " property"
}], "ExampleText",
 CellID->529296108,ExpressionUUID->"45db1fd4-7bae-4d37-9d48-b5bfc46e4381"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oosp", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Text\>\"", ",", "\"\<OriginOfSpecies\>\""}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1445746235,ExpressionUUID->"6709200d-0d92-464a-aad7-4fbdb5e3cf21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "=", 
  RowBox[{"LexicalCases", "[", 
   RowBox[{"oosp", ",", " ", 
    RowBox[{
     RowBox[{"TextType", "[", "\"\<Adverb\>\"", "]"}], "~~", 
     RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", 
     RowBox[{"BoundToken", "[", 
      RowBox[{"\"\<specie\>\"", "|", "\"\<species\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1493889061,ExpressionUUID->"3c9b0dd9-d421-41d3-860f-7ecb88acae89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["74", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Match" -> "generally extinct species", 
       "Position" -> {{9949, 9973}}|>, <|
      "Match" -> "aboriginally distinct species", 
       "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
      "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
      "Match" -> "extraordinarily abnormal species", 
       "Position" -> {{43663, 43694}}|>, <|
      "Match" -> "as distinct species", 
       "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {207958,
         207976}, {450417, 450435}, {464593, 464611}, {542018, 542036}, {
        544853, 544871}, {549985, 550003}, {611433, 611451}, {676879, 
        676897}, {685573, 685591}, {690461, 690479}, {723909, 723927}, {
        735758, 735776}, {737225, 737243}}|>, <|
      "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
      "Match" -> "as undoubted species", 
       "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
      "Match" -> "as independent species", "Position" -> {{95992, 96013}}|>, <|
      "Match" -> "closely related species", 
       "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
      "Match" -> "as incipient species", "Position" -> {{102609, 102628}}|>, <|
      "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
      "Match" -> "most vigorous species", 
       "Position" -> {{122687, 122707}}|>, <|
      "Match" -> "already existing species", 
       "Position" -> {{193555, 193578}}|>, <|
      "Match" -> "as new species", 
       "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
      "Match" -> "nearly extreme species", 
       "Position" -> {{221865, 221886}}|>, <|
      "Match" -> "widely diffused species", 
       "Position" -> {{224108, 224130}}|>, <|
      "Match" -> "more ancient species", 
       "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
      "Match" -> "most ancient species", "Position" -> {{232133, 232152}}|>, <|
      "Match" -> "very distinct species", 
       "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
        498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
      "Match" -> "most distinct species", 
       "Position" -> {{304406, 304426}}|>, <|
      "Match" -> "as representative species", 
       "Position" -> {{325002, 325026}}|>, <|
      "Match" -> "very same species", 
       "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
      "Match" -> "more aboriginal species", 
       "Position" -> {{463660, 463682}}|>, <|
      "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
      "Match" -> "extremely close species", 
       "Position" -> {{469855, 469877}}|>, <|
      "Match" -> "particularly distinct species", 
       "Position" -> {{470144, 470172}}|>, <|
      "Match" -> "together various species", 
       "Position" -> {{480798, 480821}}|>, <|
      "Match" -> "widely distinct species", 
       "Position" -> {{495622, 495644}}|>, <|
      "Match" -> "nearly related species", 
       "Position" -> {{500963, 500984}}|>, <|
      "Match" -> "all living species", "Position" -> {{513205, 513222}}|>, <|
      "Match" -> "still existing species", 
       "Position" -> {{535639, 535660}}|>, <|
      "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
      "Match" -> "now extinct species", 
       "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
      "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
      "Match" -> "more dominant species", 
       "Position" -> {{593129, 593149}}|>, <|
      "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
      "Match" -> "all peculiar species", "Position" -> {{635730, 635749}}|>, <|
      "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
      "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
      "Match" -> "quite distinct species", 
       "Position" -> {{694106, 694127}}|>, <|
      "Match" -> "only herbaceous species", 
       "Position" -> {{713843, 713865}}|>, <|
      "Match" -> "extremely few species", 
       "Position" -> {{782509, 782529}}|>, <|
      "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
      "Match" -> "yet distinct species", "Position" -> {{870851, 870870}}|>, <|
      "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
      "Match" -> "already recorded species", 
       "Position" -> {{885795, 885818}}|>}, "Dataset" -> 
    Dataset[{<|
       "Match" -> "generally extinct species", 
        "Position" -> {{9949, 9973}}|>, <|
       "Match" -> "aboriginally distinct species", 
        "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
       "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
       "Match" -> "extraordinarily abnormal species", 
        "Position" -> {{43663, 43694}}|>, <|
       "Match" -> "as distinct species", 
        "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {
         207958, 207976}, {450417, 450435}, {464593, 464611}, {542018, 
         542036}, {544853, 544871}, {549985, 550003}, {611433, 611451}, {
         676879, 676897}, {685573, 685591}, {690461, 690479}, {723909, 
         723927}, {735758, 735776}, {737225, 737243}}|>, <|
       "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
       "Match" -> "as undoubted species", 
        "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
       "Match" -> "as independent species", 
        "Position" -> {{95992, 96013}}|>, <|
       "Match" -> "closely related species", 
        "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
       "Match" -> "as incipient species", 
        "Position" -> {{102609, 102628}}|>, <|
       "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
       "Match" -> "most vigorous species", 
        "Position" -> {{122687, 122707}}|>, <|
       "Match" -> "already existing species", 
        "Position" -> {{193555, 193578}}|>, <|
       "Match" -> "as new species", 
        "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
       "Match" -> "nearly extreme species", 
        "Position" -> {{221865, 221886}}|>, <|
       "Match" -> "widely diffused species", 
        "Position" -> {{224108, 224130}}|>, <|
       "Match" -> "more ancient species", 
        "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
       "Match" -> "most ancient species", 
        "Position" -> {{232133, 232152}}|>, <|
       "Match" -> "very distinct species", 
        "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
         498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
       "Match" -> "most distinct species", 
        "Position" -> {{304406, 304426}}|>, <|
       "Match" -> "as representative species", 
        "Position" -> {{325002, 325026}}|>, <|
       "Match" -> "very same species", 
        "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
       "Match" -> "more aboriginal species", 
        "Position" -> {{463660, 463682}}|>, <|
       "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
       "Match" -> "extremely close species", 
        "Position" -> {{469855, 469877}}|>, <|
       "Match" -> "particularly distinct species", 
        "Position" -> {{470144, 470172}}|>, <|
       "Match" -> "together various species", 
        "Position" -> {{480798, 480821}}|>, <|
       "Match" -> "widely distinct species", 
        "Position" -> {{495622, 495644}}|>, <|
       "Match" -> "nearly related species", 
        "Position" -> {{500963, 500984}}|>, <|
       "Match" -> "all living species", "Position" -> {{513205, 513222}}|>, <|
       "Match" -> "still existing species", 
        "Position" -> {{535639, 535660}}|>, <|
       "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
       "Match" -> "now extinct species", 
        "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
       "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
       "Match" -> "more dominant species", 
        "Position" -> {{593129, 593149}}|>, <|
       "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
       "Match" -> "all peculiar species", 
        "Position" -> {{635730, 635749}}|>, <|
       "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
       "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
       "Match" -> "quite distinct species", 
        "Position" -> {{694106, 694127}}|>, <|
       "Match" -> "only herbaceous species", 
        "Position" -> {{713843, 713865}}|>, <|
       "Match" -> "extremely few species", 
        "Position" -> {{782509, 782529}}|>, <|
       "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
       "Match" -> "yet distinct species", 
        "Position" -> {{870851, 870870}}|>, <|
       "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
       "Match" -> "already recorded species", 
        "Position" -> {{885795, 885818}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], <||>], 
    "Source" -> "Text", "TotalMatchCount" -> 74, "LexicalStructure" -> 
    TextElement[{
       TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{
         TextElement[{
           Alternatives[
            TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
            TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
          "GrammaticalUnit" -> "Alternatives"|>]}, <|
        "GrammaticalUnit" -> "BoundToken"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->637137850,ExpressionUUID->"cad3f471-6ea1-4e25-8396-6c624d4188b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1230481048,ExpressionUUID->"217f8705-415c-4781-998a-4c357ca8eed7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"as distinct species"}, "CountGroup" -> 16|>, <|
       "Matches" -> {"very distinct species"}, "CountGroup" -> 6|>, <|
       "Matches" -> {"aboriginally distinct species"}, "CountGroup" -> 3|>, <|
       "Matches" -> {
         "very same species", "now extinct species", "more ancient species", 
          "closely related species", "as undoubted species", 
          "as new species"}, "CountGroup" -> 2|>, <|
       "Matches" -> {
         "yet distinct species", "widely distinct species", 
          "widely diffused species", "very many species", "very fine species",
           "very few species", "too few species", "together various species", 
          "still older species", "still existing species", "so many species", 
          "so certain species", "quite distinct species", 
          "particularly distinct species", "only herbaceous species", 
          "not real species", "nearly related species", 
          "nearly extreme species", "most vigorous species", 
          "most distinct species", "most ancient species", 
          "more dominant species", "more aboriginal species", 
          "generally extinct species", "extremely few species", 
          "extremely close species", "extraordinarily abnormal species", 
          "as representative species", "as many species", 
          "as independent species", "as incipient species", "as good species",
           "as doubtful species", "already recorded species", 
          "already existing species", "all peculiar species", 
          "all living species"}, "CountGroup" -> 1|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 2, "DataRowCount" -> 5, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"as distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"as distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"very distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"aboriginally distinct species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"aboriginally distinct species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{817., {87.8544921875, 93.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{817., {87.8544921875, 93.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->2059223880,ExpressionUUID->"1c952671-8feb-4693-b8d2-92015aa47c01"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "121cb516-921a-46e8-94eb-8bd622fbb10f"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"44567d2b-cff7-4ddf-9fc8-7e7bac662718"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(10)", "ExampleCount",ExpressionUUID->
  "1b791c79-1294-4e08-9f92-d519b8f2c4f4"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->176381940,ExpressionUUID->"a4b19f96-0139-4697-a43d-d5b3739e4361"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"2bac7846-2645-4d2a-93ed-79ffc885fbc1"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"79f8e662-c385-4d82-b7aa-3f210c09b991"],
 "Data",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "0759b64d-492b-4b00-84f4-c322f0ea391c"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1126029635,ExpressionUUID->"21bdcec4-f376-4854-84ed-830567e2d59f"],

Cell["Extract data from the summary object", "ExampleText",
 CellID->548532339,ExpressionUUID->"08c5a7aa-bbcc-4074-a63f-a2569dcc74ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ols", "[", "\"\<Data\>\"", "]"}], "//", "Short"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2071664732,ExpressionUUID->"362fc713-fc79-4425-8275-c907ce1dd01c"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Match\"\>", 
       "\[Rule]", "\<\"generally extinct species\"\>"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"9949", ",", "9973"}], "}"}], "}"}]}]}], 
     "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftSkeleton]", "44", "\[RightSkeleton]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Match\"\>", 
       "\[Rule]", "\<\"already recorded species\"\>"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"885795", ",", "885818"}], "}"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], "}"}],
  Short]], "Output",
 CellLabel->"Out[1]//Short=",
 CellID->694881156,ExpressionUUID->"92d75440-6a6f-4aae-8161-c227e479fa83"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"c2f86ddc-b945-4236-9da7-23f19990b818"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"73af9a3a-a244-46d2-863c-0c55bae8cf9f"],
 "Dataset",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "5180003a-f163-44bb-a4f4-407869c7c493"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1554178081,ExpressionUUID->"bbeaee4f-f91d-4be1-8d88-1de206646d97"],

Cell["\<\
Extract data from the summary object and display it as a Dataset\
\>", "ExampleText",
 CellID->1417329347,ExpressionUUID->"34fbc707-3ecb-40c5-bc77-d0a4260b5265"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->600725888,ExpressionUUID->"01636045-c89b-4c35-9083-408c7a3aec89"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Match" -> "generally extinct species", 
        "Position" -> {{9949, 9973}}|>, <|
       "Match" -> "aboriginally distinct species", 
        "Position" -> {{27844, 27872}, {51384, 51412}, {490687, 490715}}|>, <|
       "Match" -> "so many species", "Position" -> {{42078, 42092}}|>, <|
       "Match" -> "extraordinarily abnormal species", 
        "Position" -> {{43663, 43694}}|>, <|
       "Match" -> "as distinct species", 
        "Position" -> {{85564, 85582}, {89007, 89025}, {89482, 89500}, {
         207958, 207976}, {450417, 450435}, {464593, 464611}, {542018, 
         542036}, {544853, 544871}, {549985, 550003}, {611433, 611451}, {
         676879, 676897}, {685573, 685591}, {690461, 690479}, {723909, 
         723927}, {735758, 735776}, {737225, 737243}}|>, <|
       "Match" -> "as good species", "Position" -> {{87408, 87422}}|>, <|
       "Match" -> "as undoubted species", 
        "Position" -> {{88427, 88446}, {490097, 490116}}|>, <|
       "Match" -> "as independent species", 
        "Position" -> {{95992, 96013}}|>, <|
       "Match" -> "closely related species", 
        "Position" -> {{100728, 100750}, {727778, 727800}}|>, <|
       "Match" -> "as incipient species", 
        "Position" -> {{102609, 102628}}|>, <|
       "Match" -> "as doubtful species", "Position" -> {{107226, 107244}}|>, <|
       "Match" -> "most vigorous species", 
        "Position" -> {{122687, 122707}}|>, <|
       "Match" -> "already existing species", 
        "Position" -> {{193555, 193578}}|>, <|
       "Match" -> "as new species", 
        "Position" -> {{201928, 201941}, {846368, 846381}}|>, <|
       "Match" -> "nearly extreme species", 
        "Position" -> {{221865, 221886}}|>, <|
       "Match" -> "widely diffused species", 
        "Position" -> {{224108, 224130}}|>, <|
       "Match" -> "more ancient species", 
        "Position" -> {{231849, 231868}, {513482, 513501}}|>, <|
       "Match" -> "most ancient species", 
        "Position" -> {{232133, 232152}}|>, <|
       "Match" -> "very distinct species", 
        "Position" -> {{303893, 303913}, {353659, 353679}, {469586, 469606}, {
         498261, 498281}, {694607, 694627}, {732066, 732086}}|>, <|
       "Match" -> "most distinct species", 
        "Position" -> {{304406, 304426}}|>, <|
       "Match" -> "as representative species", 
        "Position" -> {{325002, 325026}}|>, <|
       "Match" -> "very same species", 
        "Position" -> {{452882, 452898}, {456397, 456413}}|>, <|
       "Match" -> "more aboriginal species", 
        "Position" -> {{463660, 463682}}|>, <|
       "Match" -> "very many species", "Position" -> {{469709, 469725}}|>, <|
       "Match" -> "extremely close species", 
        "Position" -> {{469855, 469877}}|>, <|
       "Match" -> "particularly distinct species", 
        "Position" -> {{470144, 470172}}|>, <|
       "Match" -> "together various species", 
        "Position" -> {{480798, 480821}}|>, <|
       "Match" -> "widely distinct species", 
        "Position" -> {{495622, 495644}}|>, <|
       "Match" -> "nearly related species", 
        "Position" -> {{500963, 500984}}|>, <|
       "Match" -> "all living species", "Position" -> {{513205, 513222}}|>, <|
       "Match" -> "still existing species", 
        "Position" -> {{535639, 535660}}|>, <|
       "Match" -> "very fine species", "Position" -> {{542308, 542324}}|>, <|
       "Match" -> "now extinct species", 
        "Position" -> {{553195, 553213}, {568399, 568417}}|>, <|
       "Match" -> "very few species", "Position" -> {{556585, 556600}}|>, <|
       "Match" -> "more dominant species", 
        "Position" -> {{593129, 593149}}|>, <|
       "Match" -> "too few species", "Position" -> {{602108, 602122}}|>, <|
       "Match" -> "all peculiar species", 
        "Position" -> {{635730, 635749}}|>, <|
       "Match" -> "so certain species", "Position" -> {{638766, 638783}}|>, <|
       "Match" -> "as many species", "Position" -> {{686468, 686482}}|>, <|
       "Match" -> "quite distinct species", 
        "Position" -> {{694106, 694127}}|>, <|
       "Match" -> "only herbaceous species", 
        "Position" -> {{713843, 713865}}|>, <|
       "Match" -> "extremely few species", 
        "Position" -> {{782509, 782529}}|>, <|
       "Match" -> "still older species", "Position" -> {{843698, 843716}}|>, <|
       "Match" -> "yet distinct species", 
        "Position" -> {{870851, 870870}}|>, <|
       "Match" -> "not real species", "Position" -> {{878602, 878617}}|>, <|
       "Match" -> "already recorded species", 
        "Position" -> {{885795, 885818}}|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Position"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 1, 
              DirectedInfinity[1], {All, "Position"}]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Position"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`], 
            "Position" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 1, 
              DirectedInfinity[1], {All, "Position"}]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Position"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 46], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, 
     "DataRowCount" -> 46, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["generally extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{9949, 9973}, ShowStringCharacters -> False], 
                  Style[
                   Style[{9949, 9973}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["aboriginally distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{27844, 27872}, ShowStringCharacters -> False], 
                  Style[
                   Style[{27844, 27872}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["so many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{42078, 42092}, ShowStringCharacters -> False], 
                  Style[
                   Style[{42078, 42092}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["extraordinarily abnormal species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{43663, 43694}, ShowStringCharacters -> False], 
                  Style[
                   Style[{43663, 43694}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{85564, 85582}, ShowStringCharacters -> False], 
                  Style[
                   Style[{85564, 85582}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["16 total \:203a ", ""], 
                  Style[
                   Superscript["16 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as good species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{87408, 87422}, ShowStringCharacters -> False], 
                  Style[
                   Style[{87408, 87422}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as undoubted species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{88427, 88446}, ShowStringCharacters -> False], 
                  Style[
                   Style[{88427, 88446}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as independent species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{95992, 96013}, ShowStringCharacters -> False], 
                  Style[
                   Style[{95992, 96013}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["closely related species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{100728, 100750}, ShowStringCharacters -> False], 
                  Style[
                   Style[{100728, 100750}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["as incipient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{102609, 102628}, ShowStringCharacters -> False], 
                  Style[
                   Style[{102609, 102628}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as doubtful species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{107226, 107244}, ShowStringCharacters -> False], 
                  Style[
                   Style[{107226, 107244}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["most vigorous species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{122687, 122707}, ShowStringCharacters -> False], 
                  Style[
                   Style[{122687, 122707}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["already existing species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{193555, 193578}, ShowStringCharacters -> False], 
                  Style[
                   Style[{193555, 193578}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["as new species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{201928, 201941}, ShowStringCharacters -> False], 
                  Style[
                   Style[{201928, 201941}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["nearly extreme species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{221865, 221886}, ShowStringCharacters -> False], 
                  Style[
                   Style[{221865, 221886}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["widely diffused species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{224108, 224130}, ShowStringCharacters -> False], 
                  Style[
                   Style[{224108, 224130}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["more ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{231849, 231868}, ShowStringCharacters -> False], 
                  Style[
                   Style[{231849, 231868}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["most ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{232133, 232152}, ShowStringCharacters -> False], 
                  Style[
                   Style[{232133, 232152}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["very distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{303893, 303913}, ShowStringCharacters -> False], 
                  Style[
                   Style[{303893, 303913}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["6 total \:203a ", ""], 
                  Style[
                   Superscript["6 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19, 
                    Key["Position"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Position"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Position"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Position"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           
            Item[
             Pane[
              Annotation["most distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{304406, 304426}, ShowStringCharacters -> False], 
                  Style[
                   Style[{304406, 304426}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20, 
                    Key["Position"], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{495., {370.8544921875, 376.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{495., {370.8544921875, 376.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->1170437276,ExpressionUUID->"22072e38-cdf8-4548-8d1d-00ad3b40f192"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"5c18e3d1-33ff-4a3f-b0ce-3578d24a01a6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e8b39658-f8c2-4b0a-9f04-bdf99b46164a"],
 "Counts",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "47eb6ae3-d4e9-433d-8ae9-dc6c456374e8"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1646726225,ExpressionUUID->"1abc2d8f-43e7-4a19-a2a6-cb6b2edc2c9d"],

Cell["Show the count for each match", "ExampleText",
 CellID->824560004,ExpressionUUID->"f24caaf8-b4eb-4655-9a41-3f037ef8f4f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Counts\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1873871641,ExpressionUUID->"3dd97054-aabe-445f-bb30-e6d5968a70a8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Match" -> "as distinct species", "Count" -> 16|>, <|
       "Match" -> "very distinct species", "Count" -> 6|>, <|
       "Match" -> "aboriginally distinct species", "Count" -> 3|>, <|
       "Match" -> "very same species", "Count" -> 2|>, <|
       "Match" -> "now extinct species", "Count" -> 2|>, <|
       "Match" -> "more ancient species", "Count" -> 2|>, <|
       "Match" -> "closely related species", "Count" -> 2|>, <|
       "Match" -> "as undoubted species", "Count" -> 2|>, <|
       "Match" -> "as new species", "Count" -> 2|>, <|
       "Match" -> "yet distinct species", "Count" -> 1|>, <|
       "Match" -> "widely distinct species", "Count" -> 1|>, <|
       "Match" -> "widely diffused species", "Count" -> 1|>, <|
       "Match" -> "very many species", "Count" -> 1|>, <|
       "Match" -> "very fine species", "Count" -> 1|>, <|
       "Match" -> "very few species", "Count" -> 1|>, <|
       "Match" -> "too few species", "Count" -> 1|>, <|
       "Match" -> "together various species", "Count" -> 1|>, <|
       "Match" -> "still older species", "Count" -> 1|>, <|
       "Match" -> "still existing species", "Count" -> 1|>, <|
       "Match" -> "so many species", "Count" -> 1|>, <|
       "Match" -> "so certain species", "Count" -> 1|>, <|
       "Match" -> "quite distinct species", "Count" -> 1|>, <|
       "Match" -> "particularly distinct species", "Count" -> 1|>, <|
       "Match" -> "only herbaceous species", "Count" -> 1|>, <|
       "Match" -> "not real species", "Count" -> 1|>, <|
       "Match" -> "nearly related species", "Count" -> 1|>, <|
       "Match" -> "nearly extreme species", "Count" -> 1|>, <|
       "Match" -> "most vigorous species", "Count" -> 1|>, <|
       "Match" -> "most distinct species", "Count" -> 1|>, <|
       "Match" -> "most ancient species", "Count" -> 1|>, <|
       "Match" -> "more dominant species", "Count" -> 1|>, <|
       "Match" -> "more aboriginal species", "Count" -> 1|>, <|
       "Match" -> "generally extinct species", "Count" -> 1|>, <|
       "Match" -> "extremely few species", "Count" -> 1|>, <|
       "Match" -> "extremely close species", "Count" -> 1|>, <|
       "Match" -> "extraordinarily abnormal species", "Count" -> 1|>, <|
       "Match" -> "as representative species", "Count" -> 1|>, <|
       "Match" -> "as many species", "Count" -> 1|>, <|
       "Match" -> "as independent species", "Count" -> 1|>, <|
       "Match" -> "as incipient species", "Count" -> 1|>, <|
       "Match" -> "as good species", "Count" -> 1|>, <|
       "Match" -> "as doubtful species", "Count" -> 1|>, <|
       "Match" -> "already recorded species", "Count" -> 1|>, <|
       "Match" -> "already existing species", "Count" -> 1|>, <|
       "Match" -> "all peculiar species", "Count" -> 1|>, <|
       "Match" -> "all living species", "Count" -> 1|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 46], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Match"} -> 
        1, {All, "Count"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Match" -> TypeSystem`PackageScope`AtomShape[324.8], "Count" -> 
            TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Match", "Count"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer]}], 46], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 46, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Match", 
                  Style[
                  "Match", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Match"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Match"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Count"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Count"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["as distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["aboriginally distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very same species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["now extinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["more ancient species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["closely related species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as undoubted species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["as new species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yet distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["widely distinct species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["widely diffused species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very fine species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["very few species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["too few species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["together various species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["still older species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["still existing species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["so many species", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Match"]}, "Item", False], "Mouse"], 
              ImageSize -> {{324.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 46, 1], {1, 46 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[46, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 46, 1], {1, 46 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{397., {300.8544921875, 306.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{397., {300.8544921875, 306.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->88169303,ExpressionUUID->"24403a66-b32a-442a-928e-18b46752ee5a"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"746bd5d1-d31c-449c-a33c-b3a49d5ae4b2"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"4889dbf9-341f-4510-a124-15d9313e4f39"],
 "CountGroups",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "50b77915-de34-4e0f-bd40-ac6fe9998e4c"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1481878219,ExpressionUUID->"94cd7585-91a1-48a9-b309-724f9f906d6e"],

Cell["Group matches by their count", "ExampleText",
 CellID->1399819658,ExpressionUUID->"a30eab01-e083-4298-81ed-794f65f84e84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<CountGroups\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->585902491,ExpressionUUID->"b897389a-90cd-41a1-8efa-aa8c018db729"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"as distinct species"}, "CountGroup" -> 16|>, <|
       "Matches" -> {"very distinct species"}, "CountGroup" -> 6|>, <|
       "Matches" -> {"aboriginally distinct species"}, "CountGroup" -> 3|>, <|
       "Matches" -> {
         "very same species", "now extinct species", "more ancient species", 
          "closely related species", "as undoubted species", 
          "as new species"}, "CountGroup" -> 2|>, <|
       "Matches" -> {
         "yet distinct species", "widely distinct species", 
          "widely diffused species", "very many species", "very fine species",
           "very few species", "too few species", "together various species", 
          "still older species", "still existing species", "so many species", 
          "so certain species", "quite distinct species", 
          "particularly distinct species", "only herbaceous species", 
          "not real species", "nearly related species", 
          "nearly extreme species", "most vigorous species", 
          "most distinct species", "most ancient species", 
          "more dominant species", "more aboriginal species", 
          "generally extinct species", "extremely few species", 
          "extremely close species", "extraordinarily abnormal species", 
          "as representative species", "as many species", 
          "as independent species", "as incipient species", "as good species",
           "as doubtful species", "already recorded species", 
          "already existing species", "all peculiar species", 
          "all living species"}, "CountGroup" -> 1|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 2, "DataRowCount" -> 5, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"as distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"as distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"very distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"aboriginally distinct species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"aboriginally distinct species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"very same species", "now extinct species", 
                    "more ancient species", "closely related species", 
                    "as undoubted species", "as new species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 37], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{817., {87.8544921875, 93.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{817., {87.8544921875, 93.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->1290694601,ExpressionUUID->"5b4a103c-0da0-4ebb-82b0-46a262eb24e4"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "4"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"93f09a24-e7f6-41d8-8370-d0941a44f5d0"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bd7f8358-3cf3-4f71-9a40-fa8935ad9b4b"],
 "Source",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "aa284a4e-5312-4bdc-a280-a6bdcdd3fef4"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->457254572,ExpressionUUID->"af609c13-052a-4810-bed1-ac99e5a0498f"],

Cell["Get the source type", "ExampleText",
 CellID->276142960,ExpressionUUID->"20c66a12-a49f-4404-9356-5693e7a49ba1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Source\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1628336659,ExpressionUUID->"d9763662-e766-42c5-a781-4da355989543"],

Cell[BoxData["\<\"Text\"\>"], "Output",
 CellLabel->"Out[1]=",
 CellID->1812465150,ExpressionUUID->"89bc0d7c-882b-4965-8fff-3d920a6faadf"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "4"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "5"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"73eb395f-49c5-4f11-bba1-17032b629b2b"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bbed4028-3cb5-4778-ba24-3a0e7486a0de"],
 "TotalMatchCount",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "62788c48-073d-498f-8ece-a912f9d24e0e"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1829783013,ExpressionUUID->"87f68a2f-794e-4a3e-9c38-b0854c248ddb"],

Cell["Return the total number of matches found", "ExampleText",
 CellID->755541896,ExpressionUUID->"3de425f4-edbd-44ec-af87-40da9317baa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<TotalMatchCount\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1244245283,ExpressionUUID->"ed6db804-ba51-4e3f-bdc0-d652ec6e35a6"],

Cell[BoxData["74"], "Output",
 CellLabel->"Out[1]=",
 CellID->1359398439,ExpressionUUID->"4b856e00-28de-4cd4-98bb-2829a820d976"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "5"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "6"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"dea15c5f-c93b-4882-b6ad-1dc0c5e54e27"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"6675c8d5-579c-498a-a2e3-a0910513b86e"],
 "Survey",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "958ccfda-51e8-469a-bf9d-0b70fe4f48ff"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1605236034,ExpressionUUID->"9ca5271f-78a1-4315-b678-d950224b16d7"],

Cell["Survey the results", "ExampleText",
 CellID->1356043807,ExpressionUUID->"3ca385d6-2e9f-41b2-bd8c-4f1873a04c3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<Survey\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1584059910,ExpressionUUID->"0df88820-97cb-46ca-837b-36ca3ea8bfe6"],

Cell[BoxData[
 DynamicModuleBox[{Private`tab$$ = "GroupPercentages"}, 
  TagBox[GridBox[{
     {
      PanelBox[
       InterpretationBox[
        StyleBox[GridBox[{
           {
            
            SetterBox[Dynamic[Private`tab$$], {
             "GroupPercentages"}, "\<\"GroupPercentages\"\>"], 
            
            SetterBox[Dynamic[Private`tab$$], {
             "LowercaseGroupPercentages"}, \
"\<\"LowercaseGroupPercentages\"\>"], 
            
            SetterBox[Dynamic[Private`tab$$], {
             "PartOfSpeechGroups"}, "\<\"PartOfSpeechGroups\"\>"], 
            
            SetterBox[Dynamic[Private`tab$$], {
             "WordStemCountGroups"}, "\<\"WordStemCountGroups\"\>"]}
          },
          BaselinePosition->{1, 1},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Deployed->True],
        SetterBar[
         Dynamic[Private`tab$$], {
         "GroupPercentages", "LowercaseGroupPercentages", 
          "PartOfSpeechGroups", "WordStemCountGroups"}]]]},
     {
      DynamicBox[ToBoxes[
        Switch[Private`tab$$, "GroupPercentages", 
         Dataset[{<|
           "Matches" -> {
             "yet distinct species", "widely distinct species", 
              "widely diffused species", "very many species", 
              "very fine species", "very few species", "too few species", 
              "together various species", "still older species", 
              "still existing species", "so many species", 
              "so certain species", "quite distinct species", 
              "particularly distinct species", "only herbaceous species", 
              "not real species", "nearly related species", 
              "nearly extreme species", "most vigorous species", 
              "most distinct species", "most ancient species", 
              "more dominant species", "more aboriginal species", 
              "generally extinct species", "extremely few species", 
              "extremely close species", "extraordinarily abnormal species", 
              "as representative species", "as many species", 
              "as independent species", "as incipient species", 
              "as good species", "as doubtful species", 
              "already recorded species", "already existing species", 
              "all peculiar species", "all living species"}, "Percentage" -> 
            Quantity[50., "Percent"]|>, <|
           "Matches" -> {"as distinct species"}, "Percentage" -> 
            Quantity[21.62162162162162, "Percent"]|>, <|
           "Matches" -> {
             "very same species", "now extinct species", 
              "more ancient species", "closely related species", 
              "as undoubted species", "as new species"}, "Percentage" -> 
            Quantity[16.216216216216218`, "Percent"]|>, <|
           "Matches" -> {"very distinct species"}, "Percentage" -> 
            Quantity[8.108108108108109, "Percent"]|>, <|
           "Matches" -> {"aboriginally distinct species"}, "Percentage" -> 
            Quantity[4.054054054054054, "Percent"]|>}, 
          TypeSystem`Vector[
           TypeSystem`Struct[{"Matches", "Percentage"}, {
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[
              Quantity[1, "Percent"]]}], 5], <||>], 
         "LowercaseGroupPercentages", 
         Dataset[{<|
           "Matches" -> {
             "yet distinct species", "widely distinct species", 
              "widely diffused species", "very many species", 
              "very fine species", "very few species", "too few species", 
              "together various species", "still older species", 
              "still existing species", "so many species", 
              "so certain species", "quite distinct species", 
              "particularly distinct species", "only herbaceous species", 
              "not real species", "nearly related species", 
              "nearly extreme species", "most vigorous species", 
              "most distinct species", "most ancient species", 
              "more dominant species", "more aboriginal species", 
              "generally extinct species", "extremely few species", 
              "extremely close species", "extraordinarily abnormal species", 
              "as representative species", "as many species", 
              "as independent species", "as incipient species", 
              "as good species", "as doubtful species", 
              "already recorded species", "already existing species", 
              "all peculiar species", "all living species"}, "Percentage" -> 
            Quantity[50., "Percent"]|>, <|
           "Matches" -> {"as distinct species"}, "Percentage" -> 
            Quantity[21.62162162162162, "Percent"]|>, <|
           "Matches" -> {
             "very same species", "now extinct species", 
              "more ancient species", "closely related species", 
              "as undoubted species", "as new species"}, "Percentage" -> 
            Quantity[16.216216216216218`, "Percent"]|>, <|
           "Matches" -> {"very distinct species"}, "Percentage" -> 
            Quantity[8.108108108108109, "Percent"]|>, <|
           "Matches" -> {"aboriginally distinct species"}, "Percentage" -> 
            Quantity[4.054054054054054, "Percent"]|>}, 
          TypeSystem`Vector[
           TypeSystem`Struct[{"Matches", "Percentage"}, {
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[
              Quantity[1, "Percent"]]}], 5], <||>], "PartOfSpeechGroups", 
         Dataset[{<|
           "Words" -> {
             "abnormal", "diffused", "distinct", "doubtful", "existing", 
              "extinct", "herbaceous", "incipient", "older", "peculiar", 
              "recorded", "related", "vigorous"}, 
            "PartOfSpeech" -> {"Adjective"}|>, <|
           "Words" -> {
             "closely", "extraordinarily", "extremely", "generally", "nearly",
               "particularly", "quite", "widely"}, 
            "PartOfSpeech" -> {"Adverb"}|>, <|
           "Words" -> {"species"}, "PartOfSpeech" -> {"Noun"}|>, <|
           "Words" -> {"new"}, "PartOfSpeech" -> {"Adjective", "Adverb"}|>, <|
           "Words" -> {"certain", "various"}, 
            "PartOfSpeech" -> {"Adjective", "Determiner"}|>, <|
           "Words" -> {
             "aboriginal", "ancient", "dominant", "extreme", "independent", 
              "living", "representative"}, 
            "PartOfSpeech" -> {"Noun", "Adjective"}|>, <|
           "Words" -> {"real"}, 
            "PartOfSpeech" -> {"Noun", "Adjective", "Adverb"}|>, <|
           "Words" -> {"good"}, 
            "PartOfSpeech" -> {
             "Noun", "Adjective", "Adverb", "Interjection"}|>, <|
           "Words" -> {"close", "fine"}, 
            "PartOfSpeech" -> {"Noun", "Adjective", "Verb", "Adverb"}|>}, 
          TypeSystem`Vector[
           TypeSystem`Struct[{"Words", "PartOfSpeech"}, {
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength]}], 9], <||>], 
         "WordStemCountGroups", 
         Dataset[{<|"WordStem" -> {"speci"}, "CountGroup" -> 46|>, <|
           "WordStem" -> {"distinct"}, "CountGroup" -> 8|>, <|
           "WordStem" -> {"extrem"}, "CountGroup" -> 3|>, <|
           "WordStem" -> {
             "wide", "relat", "nearli", "extinct", "exist", "close", 
              "ancient", "aborigin"}, "CountGroup" -> 2|>, <|
           "WordStem" -> {
             "vigor", "variou", "undoubt", "repres", "record", "real", "quit",
               "peculiar", "particularli", "older", "new", "live", "independ",
               "incipi", "herbac", "good", "gener", "fine", "extraordinarili",
               "doubt", "domin", "diffus", "certain", "abnorm"}, "CountGroup" -> 
            1|>}, 
          TypeSystem`Vector[
           TypeSystem`Struct[{"WordStem", "CountGroup"}, {
             TypeSystem`Vector[
              TypeSystem`Atom[String], TypeSystem`AnyLength], 
             TypeSystem`Atom[Integer]}], 5], <||>]], StandardForm],
       ImageSizeCache->{820., {87.8544921875, 93.1455078125}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1056605382,ExpressionUUID->"a5970403-37fb-477a-938e-bf56de3c7c9e"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "6"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "7"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"16ca5f78-c13f-4769-a1a7-96aa36b9358f"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"5cfdb31f-609b-476f-8364-f94f7fda85c4"],
 "LexicalStructure",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "a6b88431-3fd6-4e7f-83c7-48df089bc586"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->170719235,ExpressionUUID->"0b37012e-fe22-4974-88bb-c685cf59545c"],

Cell["Get the source type", "ExampleText",
 CellID->240030253,ExpressionUUID->"f7a5c247-c45a-4604-8137-344abfe501d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", "\"\<LexicalStructure\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1214173105,ExpressionUUID->"4663c08d-d5f5-4d5c-a05d-73b0d5137961"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adverb\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           
           TemplateBox[{"\[ThinSpace]", "\" \"", "\"Adjective\""}, 
            "RowWithSeparators"]}, {
           StyleBox["\"TextType\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>]], 
       InterpretationBox[
        GridBox[{{
           TemplateBox[{"\[ThinSpace]", "\" \"", 
             InterpretationBox[
              GridBox[{{
                 TemplateBox[{"\[ThinSpace]", "\" \"", 
                   RowBox[{
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"specie\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>]],
                     "|", 
                    InterpretationBox[
                    GridBox[{{
                    
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"species\""}, 
                    "RowWithSeparators"]}, {
                    StyleBox["\"Text\"", "TextElementLabel"]}}, BaseStyle -> 
                    "TextElementGrid"], 
                    
                    TextElement[{"species"}, <|
                    "GrammaticalUnit" -> "Text"|>]]}]}, 
                  "RowWithSeparators"]}, {
                 StyleBox["\"Alternatives\"", "TextElementLabel"]}}, 
               BaseStyle -> "TextElementGrid"], 
              TextElement[{
                Alternatives[
                 TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
                 TextElement[{"species"}, <|
                  "GrammaticalUnit" -> "Text"|>]]}, <|
               "GrammaticalUnit" -> "Alternatives"|>]]}, 
            "RowWithSeparators"]}, {
           StyleBox["\"Bounded\"", "TextElementLabel"]}}, BaseStyle -> 
         "TextElementGrid"], 
        TextElement[{
          TextElement[{
            Alternatives[
             TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
             TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
           "GrammaticalUnit" -> "Alternatives"|>]}, <|
         "GrammaticalUnit" -> "BoundToken"|>]]},
      "RowWithSeparators"]},
    {
     StyleBox["\<\"StringExpression\"\>", "TextElementLabel"]}
   },
   BaseStyle->"TextElementGrid"],
  TextElement[{
    TextElement[{"Adverb"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
    TextElement[{
      TextElement[{
        Alternatives[
         TextElement[{"specie"}, <|"GrammaticalUnit" -> "Text"|>], 
         TextElement[{"species"}, <|"GrammaticalUnit" -> "Text"|>]]}, <|
       "GrammaticalUnit" -> "Alternatives"|>]}, <|
     "GrammaticalUnit" -> "BoundToken"|>]}, <|
   "GrammaticalUnit" -> "StringExpression"|>]]], "Output",
 CellLabel->"Out[1]=",
 CellID->903689445,ExpressionUUID->"79ce081a-7bc9-4f57-b5b7-4c4f04f3c02b"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "7"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "8"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "7ae74ba8-becc-417e-af98-b0a633dcf35c"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"0f0548e0-07b6-4dd7-9ae3-3472c349c656"],
 "Filtering",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "2a83757f-ded0-46dd-ad86-e273ab3125ca"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->881638994,ExpressionUUID->"c84d58ca-5ad9-4e52-ba24-0e234c35aa07"],

Cell["Return the first 3 rows of the \"CountGroups\" Dataset", "ExampleText",
 CellID->1244752440,ExpressionUUID->"7898a72f-8a05-495f-8e91-fde542b4d103"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ols", "[", 
  RowBox[{"\"\<CountGroups\>\"", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1707399265,ExpressionUUID->"cf09ea8c-2e4e-4407-a9f3-bbfe58481128"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"as distinct species"}, "CountGroup" -> 16|>, <|
       "Matches" -> {"very distinct species"}, "CountGroup" -> 6|>, <|
       "Matches" -> {"aboriginally distinct species"}, "CountGroup" -> 3|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], 1], 
         TypeSystem`Atom[Integer]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], 1], 
         TypeSystem`Atom[Integer]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
     3, "DisplayedColumnCount" -> 2, "DataRowCount" -> 3, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"as distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"as distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"very distinct species"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"very distinct species"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"aboriginally distinct species"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"aboriginally distinct species"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{261., {60.8544921875, 66.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{261., {60.8544921875, 66.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->274530828,ExpressionUUID->"63a88b2e-3fc2-4fbf-9762-f98c383c19bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "39bd70f5-278b-4358-af18-c6e12b122221"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1766268639,ExpressionUUID->"c2d69ca4-8fd5-4759-8264-7185815bc175"],

Cell["Delete stopwords from results", "ExampleText",
 CellID->1010563192,ExpressionUUID->"73af1edf-a1f2-485b-9c3d-d20026314f2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"olsw", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{"oosp", ",", 
     RowBox[{"WordToken", "[", "1", "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1704270105,ExpressionUUID->"cda6bb14-d39e-4407-88a9-e100d6289473"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"olsw", "[", 
  RowBox[{"\"\<CountGroups\>\"", ",", "10", ",", "DeleteStopwords"}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1021927783,ExpressionUUID->"9189f16c-eaf3-46b4-88dd-9d0555455c4a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"Matches" -> {"species"}, "CountGroup" -> 1467|>, <|
       "Matches" -> {"forms"}, "CountGroup" -> 394|>, <|
       "Matches" -> {"varieties"}, "CountGroup" -> 390|>, <|
       "Matches" -> {"selection"}, "CountGroup" -> 351|>, <|
       "Matches" -> {"natural"}, "CountGroup" -> 318|>, <|
       "Matches" -> {"plants"}, "CountGroup" -> 296|>, <|
       "Matches" -> {"life"}, "CountGroup" -> 295|>, <|
       "Matches" -> {"different"}, "CountGroup" -> 282|>, <|
       "Matches" -> {"case"}, "CountGroup" -> 281|>, <|
       "Matches" -> {"animals"}, "CountGroup" -> 279|>}, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], 1], 
         TypeSystem`Atom[Integer]}], 10], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], 1], 
         TypeSystem`Atom[Integer]}], 10], "Path" -> {}, "DisplayedRowCount" -> 
     10, "DisplayedColumnCount" -> 2, "DataRowCount" -> 10, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"species"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"species"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1467"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"forms"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"forms"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["394"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"varieties"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"varieties"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["390"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"selection"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"selection"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["351"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"natural"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"natural"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"plants"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"plants"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"life"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"life"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["295"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"different"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"different"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["282"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"case"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"case"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["281"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"animals"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"animals"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{151., {155.3544921875, 160.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{151., {155.3544921875, 160.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->480824489,ExpressionUUID->"a6cb856a-aa53-46f4-8c0c-8f578dad1259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsColumn", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Text", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Top 5 count groups with/without Stopwords\>\"", ",", "Bold"}], 
      "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"olsw", "[", 
          RowBox[{"\"\<CountGroups\>\"", ",", "5"}], "]"}], ",", 
         "\"\<With Stopwords\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"olsw", "[", 
          RowBox[{"\"\<CountGroups\>\"", ",", "5", ",", "DeleteStopwords"}], 
          "]"}], ",", "\"\<Without Stopwords\>\""}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1607166618,ExpressionUUID->"207e3fd0-77b8-4510-8457-17e610eea57e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUFMX3/j1kRHLOsCBBkaQgKLDkKJJBQEByEskSJOcMC4gSRAEByTkn
CQtfd0kLkpGw5BwWlEUX9n3euX/q13b39HTNTs8szf2cA2enurq6usK9T1VX
Vwe07lavfVyHw9ErMf6r16pv+Z49W/WvnxI/Gnbt1alD13Ztq3ft3a5Du54l
W8dDYErE3YZ////f0QzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMF5i/vz5vQwZOnSo1XkICwtbpOHXX3+1+rpe
59q1a/7OwuvBrVu3qHVNnTpVGf7vv//iEP1948YNijN9+vQ3IScqlBkwJiQk
ZOzYsV988UXJkiWrVavWu3fvvXv3xiTB14j//e9/VDXr1q3zd14YxubUqVPH
YUiaNGmszkOTJk10L231db3Iw4cPu3btmi5dOn9n5PXg2LFjVMXFihUTgVu3
bn333XeF1z569CjF+eijj9wmuHbt2tWrVz9//tzvOfEKqgy44sWLF0OGDIkb
N6627zRr1uzly5eyCb52fP/993S/3bp183deGMbmxAa1ADv2WquFv//+O23a
tMhwqlSp/J2X1wOtj54wYQKFeOCjL1y4gGhvv/02hs/+zYlX0GbAFQsXLlT2
FzQ/5c9x48bJJvjawWqBYXwGBsXXXjF48GDqelWqVBGBVs9e/vXXX/HixcNF
c+TIMUnBlClTLL2uF4mIiBDm2t95eT149uzZ/5ycOHGCQnr27Omxj543bx6i
VaxY0e858QraDLiiUaNGFLNDhw70FOz8+fMff/wxBUKEyyb42sFqgWH8Ahw0
db06deroRjh8+DAGLDVq1IDZbN269eLFi5VHJ06c2K5du/bt20MAwC7VrFmz
ZMmSXbp0uXz5ssFFf//9d7pos2bNZDO8dOnSli1bFi9eHBayefPmu3fvlsow
7redEwxOKeT58+fIP0JgYCnkypUrFOfXX3+FKf7mm29KlSpVoUKFQYMGPX36
NNo5OG3RogXdQoIECRBz1KhRrjIM3zRixIiqVauiZHCJS5cuTZ48mQotMjIS
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
v+ck2vl2hngJUUndunXFWWbqSJsBVwV+9epV1f4Pgvjx49MLO64S9GKPNl/a
JkvJVS9o0KCB6iyRFKmFJ0+eQDXpZhjixFUxMgwjy9SpU6ln1atXT3v0r7/+
6tixo3g/GuaoUqVKygXVwrbMmTNHPE1ImjTptGnTjK+7YcOGfPnyiX6dK1cu
M1+Uw6XLly8vlAby065dO7GxjJkMRzt3jhW76yMPu3fvpsevMMIU4ciRI3RU
vKMXrVjZJbZtXLJkyVtvvUWBONfV5hLh4eEY00EzpEmTBuYR+kFcnURO8eLF
6ad2ROmV2zFZR8uWLVMtdMTtCyfiipcvX2bKlInib968mQKFhadH4QTujgJx
vxSidF4Yfk6aNEmsTlGuGFGWPMa/tJpOO23l45yIQEjfcuXKiZaQLl069CnV
Hphu60ibAYMyv3LlSuvWrcXw3OF091A1yn1NXSXorR5tvrRNlpKrXoA+0qVL
F1II6PiVK1feuHEjxRQrotEY2rRpo9yGIlmyZAMHDqTtOBiG8SXXrl2D/aS5
SiXCttDL2pcvX0Znd+U3tdy8efPgwYP0Wrd5YATg0E+fPq3ag9dMhgmMg5DP
GzduSF3XVU5gvV1FGD169MyZM2FOxRMWWD8aV8Jymr9QTG5Hqo5geA8dOoTx
nWoRnXWg9FCGBlWp5N9//8Wo1qL36KVyogLVinPFqwpazDQ5qQygBlGVwcHB
YqGvVIIW9Whj3JaSK3ALhw8ffvjwoUEc3Mu5c+fQPHDXKO0YZJNhGO+jsi2M
CrFIG0On3377bceOHc2aNaOQUqVK+SYPXEeMebi1MAxjBWxbjFHuVq1C7GNs
NVxHjHm4tTAMYwU1atRI7sR4Ldwby8uXL4OCgsRr6QR+im/z+QCuI8Y83FoY
hmH8BTTDzZs3jx8/furUKV55xTAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzBvAk+ePIlgGMZT
Xrx44VnXw4n+zjvDMBFPnz71rle1K//73/9+YxjGU/7++2/Put5ff/3l77wz
DPPb77//7l2valeOHj0aEhJy8ODBQ4y3CXHCZWtXqH5johYoBX/fB+MSdF6u
IxtD9Qsn6F2valdobuHu3bv+ng2yIVy29obqN4ZzCxjX+Ps+GJfcuXOH68jG
iPr1rle1K+zRrIPL1t6wWrA9rBbsDasFKdijWQeXrb1htWB7WC3YG1YLUrBH
sw4uW3vDasH2sFqwN6wWpGCPZh1ctvaG1YLtYbVgb1gtSMEezTq4bO0NqwXb
w2rB3rBakII9mnVw2dobVgu2h9WCvWG1IAV7NOvgsrU3rBZsD6sFe8NqQQr2
aNbBZWtvWC3YHlYL9obVghTs0ayDy9besFqwPawW7A2rBSnYo1kHl629YbVg
e1gt2BtWC1KwR7MOLlt7w2rB9rBasDesFqRgj2YdXLb2htWC7WG1YG9YLUjB
Hs06uGztDasF28Nqwd6wWpCCPZp1cNnaG1YLtofVgr1htSAFezTr4LK1N6wW
bA+rBXvDakEK9mjWwWVrb1gt2B5WC/aG1YIUtvRo27dvX79+/d69e/2bDVuW
LSNgtaDl/Pnz652Eh4f7Oy9egNWCvWG1IIUtPVrOnDkdDscnn3zi32x4XLYP
HjywIj/+5dGjR48fP/Z3LrwJqwUts2bNcjjZsGGDv/PiBWKiFh4+fOj1/Pgd
m/ViVgtSmPdoo0aNquHku+++cxXn2LFjNV7h1VqV43VUC2i3EydObNKkSb58
+eLEiZMoUaJy5crNmTMH4Vbn0zpgW+A+Wrdu/eGHHyZOnDhBggQBAQFt27Y9
dOiQv7PmBXymFs6dO0d96tNPP71586araIMGDaJoP/30k1dvVII3XC3s2rWr
e/fu6LkpU6ZEIWTJkqVr164HDx60NJNWY+NezGpBCvMerVGjRmQHcufO7SpO
//79Ha/wuAZHjhwZGBiIpDxO4bVTC6Ghoe+9955Dj8KFC58+fdoHuZXFbTWd
PHkSVaB7U2+99ZaB5nxd8JlaOHr0qCg6CEjdOFARSZIkoTgx6Tsx7H1vrFqA
S/3222/jxo2rbe0IHD9+vA9y6wFveC9mtSCFB2oB7Ny5UzcOhETM1UKtWrVw
Ov73OIXXSy38+uuvUOxUaNmzZ2/atOno0aM7duyYL18+CvTvRI0rjKsJziJ5
8uSU/7Rp09auXXvo0KEwp1WrVhU366oVvS74RS1UqlRJN86PP/4o4sRELcSw
972ZauH+/ftlypShG48fP37ZsmV79eo1bNiwmjVrJkqUiMKDg4N9k2cp3vBe
zGpBCs/UQrt27bQRdu3apVSeHtdg6dKl3xy1gCFhxowZqcSaNWumjPzw4cNu
3bpBP5w7d876zEpjUE24C6oCUL169StXriiPoljeeeedPn36+CqnVuEXtYCB
6p9//qmNU7lyZa+ohRj2vjdTLUDeC5e6detW5aH9+/cHBAQMGTLEymx6zhve
i1ktSCGrFkhqpk6dGnJaFaFDhw4igoFaOH/+/KZNm06cOOEqAs3Ju7VX169f
3759e2ho6KNHj1SHqJGXKlVKhCAabvPWrVvGaZ4+fRp5u3DhgkGcGzdu7N27
d/PmzQa3QJgp22+++YaKC6WnG8FgxePFixeRjePHj1u07gglvGXLFle3aVBN
gwYNoptq3Lixbt7cLuPEpbdt24ZerI1p9V2fOXMGBv/q1atuY/peLVDnGjNm
jCoCWmy8ePHixImTNGlSY7Vgde8TamHjxo0ipkErUuK296HGkQ5S3rNnj2/W
85hRC5cuXUqRIgVu+e233z558qQ2gkFrx6EDBw5geG6wHCWGGJs+S3vx4cOH
0VVRPtpDlvbie/fuoUgPHTrkNnFWC1LIqoUKFSrQAp6lS5cqj6LlQFcjvEGD
BrpqAW2jRo0a6dOnFyMgpKN67FWgQIFMmTLB6NGEXspXLFq0SBlt3rx5efLk
EenAQqI9X758WUQgtYCswua3bNkyQ4YMFBMpt2/fXqtz0KjGjh2LS4s0s2bN
OnfuXFU0GG1obOX8yfvvv//999+7KjG3ZYs804Qe7Ixun9IFuZ04cWKWLFlE
NpIlS9alSxeVg4OqSZMmDUrv66+/VqUwcOBAKljlKHXx4sUIwXghwvlwpESJ
EnBAlH62bNl27dolYhpXE7JBD9ATJUoEz2vypujqefPmxd+TJk1CgdClJ0+e
bOld//zzzwjJlSsXGvDQoUPFYArkz58fDtEgz75XC/Xq1cP/RYoUUUUYP348
wgMDA9OlS6erFnzW+4RaQNEZtyKBmd6HOGgVqFkRBy2kSZMmVi/pMaMWunfv
Tlnq0aOH+ZT/+OOPypUri+cUVK3r169XRZNtz8WKFUPIjBkz3Jo+K3oxXf2H
H344d+4cqp4uDb8gIljUiwsVKoSQ6dOnh4SEVKpUSTwlgbpu27YtxIOrDLNa
kEJWLWDAjkaIP+rWras8umLFCofzsfuwYcOoppRHq1Wr5nDBhAkTRDRqulpg
0ikCWnudOnV048CCiXTI5sM6BQQEaGOid6saTNWqVcVRZf/t27eviAZvrmzk
b731lvg7KChIt8Tcli1sOKWg7RSuuH37dsWKFXVLAHet7EFXrlyh8DZt2qgS
6dWrFx1SPuMQdh5GT5s4TIfQM8bVtG3bNvrZsWNHkzclrp4gQYIFCxYo09y9
e7dv7rpgwYLaxBMmTAgZ4yrPvlcLs2fPpsJXLbP/8MMPEQjhSnZSpRZ82ftE
eZYvX14bTdmKCJO9b/jw4SJc+AKQMWNGS1/oM6MWaMUCmop5wY9GRbNAWnCn
ypiy7ZlMX+3atSH7tYkrTZ8VvZiu3qdPH2qQBOqXjlrXi+m6uGUYEG3iH3/8
sSsjzGpBClm1ULRoUfJx6LPXrl0TRxs2bIjAb775RrwWoTz3q6++olpDUzx2
7Fh4eDh0INUs1K+4+rp169auXUuDEQzb175CTKOJybHUqVPPmTMHDez48eMD
BgxAUsq3xpQjxCpVqixcuBD2dsyYMZQyBKdyXg5GiWLWrFmT5ksRuWTJkghB
fOSWog0ePJiiderUCSMa2CgUHcZr8DKuJkXdlu3UqVMpTbhIt+VP9OzZk06B
fUbJQJPv3LlTWOYPPvhAzAx77DdBihQpMNDet28f8i86PkqAYhpXE0asSrNj
EnF1DHPgMlDR0AkYnNJsp2/uGlp35syZqFzc+BdffEGB0JyuZlx9rxaWLVsW
GBiIP3Av4uiRI0dEf6RoKrXgy95nvhURZnofyp8UAsbCyCR+ogFMmzYN2bD6
XVEzaoHG7/nz5zeZJsqNnlw4nAYzLCwMDRIjDqGClixZIiJ75jcJY9NnRS9W
Xr148eKrVq3asmULGgAdta4XK6/bqlUrSB0chVEVk1FoLboZZrUghaxaQKeA
o8yRIwf+njFjBh0Sb28dPnxYzMspz0XDWLlypSrBbt26UUy0KGU42THtozRY
RRp6pEqVSvUY9OLFi8qfovGgMyqHHmKh5v79+ykEXQmDAoRUrlxZmQIML/Vo
0Vwh1x3Owa/qCaD2uYbAbdl26dKF8mNy28lDhw7BmSI+yl+5Vx7yUK5cOZWp
8dhvBgQEKN+kJmcEPv30U2Uirqrp66+/pvh79uwxc1OqqwOIBN/f9Weffaaa
DhXjaIzodfPse7UAA/jDDz84nBpGNOx+/fohBHIdpo+iqdSCL3ufVCsy2ftC
QkLo3N69eyujGXQ9b+FWLQiFVr16dZNpNm7cmE4ZO3asMnzjxo0UXrhwYRHo
sd90a/oI7/ZicfUSJUqoxlCW9mK6LrSQ6vk4eihFzpUrl+4cFKsFKWTVAj1Z
JgNVpkwZOgRz6nCKyQiFFXKb4IYNGyim6hVyVw14xIgRFF81WaeFGg9arCoc
8oZSWL58OYWIGU4YLlXktm3bKhMRnn3evHlub41wW7b0GBqo1I4rxFMerVQW
L6SIeT+P/SZkvyp+1qxZHU7xrwx0VU3iplTL1erWrZvnvyinwcXV69ev75e7
1q7h3759Ox3CaCVCD9+rBbS9GzdukDLfvHkzHYUlxE+M427fvk3RzLwTYVHv
k2pFJnsf6pT2MYCFMbP61Iu4VQtwgq7amy4YPtNDTN05K/FiCz2Ai/DUb5ox
fYR3ezFdPU6cOKGhoaoELe3FBi/BVahQgeKfP39ee5TVghSeqYWwsDBqFbTK
iBo5LUgzVguoYli89u3boz2LaaJRo0Yp47hqwE2aNNFtwFpcNR70FEpBrKEi
nZ86deowDV27dsWh9OnTU8wdO3aI9VpIedGiRdp3MVS4LdvmzZtTgiZ3e/v8
888pvq7NJGsM6U4/veg3YeEdzseCykBX1eTqpooVK+b4L506ddJefc2aNbHk
rlG/VOOutjjwi1qIeNVov/zyy4hXljZDhgwPHz50qxZ80PukWpH53ieWXqRM
mRIW5tSpU24LzSu4VQvICWVMtY7LFWQ5QefOnbVHhU+fOXMmhXjLb2pNH+Hd
XuxKq0RY3IsN1MKAAQMovu6+EKwWpPBMLQB6tojRwaVLl2BU0epoXbQrtQCz
VqVKFYceGLYoY7pqwEWKFHE4p5vcZtVV44EnUnUZStMAZEac/ssvvyhXZeMq
48aNM3gr023ZDhw4kJJSCX5XFC5c2OE0mLpHS5Uq5XA+7aUN6r3oN2l5s0m1
4OqmUPiTX0ErrHTVgvbq/rprQC8RuHok7S+1sG7dOodzVQCaFq1JgG+NcK4i
o2hateCz3ifVisz3vhs3bihfR0J1169fX2qS3DPcqgVISiox1cybK5YsWUK3
ANOhPSoeRoga9Jbf1Jo+wru92MBrW9qLDa4bFBRE8XXXhrFakMJjtTB9+nT8
LFCgAC3V++yzzyhcVy0IzYwGVrFiRfwMDg7et2+flL16//33Hc6RiNusmu8y
lCao5oKGDRsqU4A2GDt2LClhAlZC+fKmErdlK/bfGzlypNubErmFm9A9WrZs
WYdzlSDNcPpLLYibUlWrksyZMztMqwV/3TWgFznpEZsWf6kFeCh6PQfylV48
RE4iXKsFX/Y+qVYk2/v27t1bu3Ztsbsy/jB4f9krmFnlSBvYwg+aWUexePFi
yrxq0QKxdetWVQ36Sy141osNvLalvdjguuIJ2qpVq7RHWS1I4bFauHr1Ki3i
pSXBYmWaVi0cOXKEZnThZJXPs/C3lL0SgyO3zy7NdxlKM1myZFLvYUEAL1q0
iJZ6gpYtW+pGc1u2Bw8epBQCAgLMfLFOlACGWtqjdNdiICx6HE1ZK7FULYgn
udmzZ3dlP6XUgr/u+uLFi3SoadOmunfhL7Ug7oW6XsGCBSlQVy34uPdJtSLP
et/JkyfhRByvOHv2rPlzZTGjFurWrUs5MSNdkBpFpukgFaL0xEBYtj17Sy14
1osNvLalvdjgurQABvzxxx/ao6wWpPBYLYD69etTRSi3dtSqhWnTplGI6pG0
K3tFy6TFihcBmiXFd/spE/NdRqxdFGvGzINmT+Y6W7ZsuhHMlG2lSpUoA64W
3iuXFtO0s7bLAzR4OiSen6JGaKpQ9S4D6Ny5s7bHyaoFV9UUoXjK7OrFJSm1
4K+7njJlCh0aOnSo7l34US0IYw5Gjx5Ngbpqwce9T6oVxaT3jRw5ks61dHrB
jFrYuXMn5QS35motk+jF4eHhNDeSJ08ebWTxGo5YLSDbnmXVgnd7sYHXtrQX
u7ou0qFZOAxs+Z2ImBMTtbBy5UqquPbt24tArVqAsaWQZcuWKRMUK6JV9opc
cLp06VQZ2Lt3L8XHKEn5Dk6Ec+sk5WsF5ruMeDnrvffeM9jyK8Jpn7ULfT/+
+GOHc3Cke4qZshUbNCVNmlS7emHXrl2ZMmUS3kp0q3z58inXS6Aj1KxZkw4p
VQc9dsf/ytXX8+fPF8s1Y6IWXFVThGJrF3RSJKuNQOeaVAu+uesff/xReVGM
oDGqcjinu12tQfWjWoh4td5M+dkIXbXg494n1YrM974lS5ao3iBYv349nSvE
khWY/E6E+KRUjRo1VGNnOKw2bdrkyJFDtDp6Fxv88MMPypgoYXKREBLKmUap
9iyrFrzbiw3UgqW9mK6LVqR6bXPcuHEUWfVIS8BqQYqYqAU0aWowSEEEatWC
6Ndly5Y9ceIEmkdwcDBEo+MVKnsltgylNYSnTp0Sm6SJkXhAQACSRV3j0MyZ
M9OmTRsYGCjUo1SXEZ33/fff37FjB/XTs2fP9uvXDynQz+vXr+fOnTt+/Ph9
+vSh9djI2Jw5c8R96ZaYybIV06qwFR07doRhPHbs2IoVK7p3707KH+HiFbPP
PvuMIhctWhTmBdk7cuSIGJKULl1ambJ4IatVq1bnz59Hfvr27av8qG5M1IJB
NUUo3temrgo7AJ+Lu1i0aJFYVm1SLfjmrlHIbdu2PXz4MNwW7OS7775L4QZv
xvlXLUyePNnh3IFHhOiqBR/3PtlWZKb30UK1ggUL0kUjnNKdnnQD1VecvItJ
tYAIYv1zgQIFJk2atG/fPjSPqVOnFi9enMKbNGlCkffs2UPz/3B8Y8aMQRne
vHlzwYIF4gs7qqKTas+yasG7vdj4c37W9WKxz0OuXLmQN5hrHBULNRMlSuTq
MyWsFqSIiVqIcH6CBwZWGaJVC0ictq8nxJ7JqFmqfZW9EtuIUYfC/zAddOjy
5ctiZZTDObASf2OAj7anbDwmuwy6qvK1IDQtsdOaiIkxvjIQlkFsUQsJoRRL
SsyXrZhe05IyZUooBxETI5dChQrplgDGL6IEiNWrV2sTREGJHbRiohYMqokQ
H8zSBbUP72Dm6r65a13Q2Ay28/WvWkC7QtdTZk9XLfi498m2IjO9j/aJJdDd
xLcPHM4dIN2WXkwwqRYinGuQlBlTAVGknHOgDWoEyk2Ylbt0ElLtWVYteLcX
G6sF63qxci9HFbjKlClTXNUaqwUpzHs0euFaLKlyBakFDIqVgZB2SjsDb4to
MG758uVzaOzVgwcPxEMuol69euIoTBbOFV8dcjhfs4JAVS52olXK5cuXV+VN
TPurugxyMmjQIKHtRQNGMxMTpGicGHumSpVKGQelsWnTJldFYb5swdKlS6tV
q6bsQalTp65Ro0ZYWJgqJoYAMCm0RQ8BG9uiRQsoam2yGOaIvdOROCz2/v37
xRZnyh4nVkFjZK1KhCZaVXbeuJqIjRs3IlC1eTtGpj169ECZK2MaXN3Suxbe
bfr06fT1XgIN+MsvvzT+0KHP1MLx48cpV6pdLlWgpZHBVy208GXvk21FEeZ6
388//yxGwaKCkBPdJXNexLxaiHCaCLhaepov2h5KXrWjBYHyoQ0oBLBa2s1G
CPPtWdb0ebcXu7q6wKJeTGohMDAQjRmKQplJA/scwWpBEimPFhMePXp06NAh
mDuTOxFh0LR+/fpVq1bp7nOIIcm+ffsWL168Z88e4yeeUjmEa4bXRgNzNaLE
tXBd3MW6devoaxEGCXpQtugCGJQtWrRIpbR1c0vliR5k/OlYWNTt27cvX77c
in3wjKtJxIFtxE0hGzE0716/a6EWyKrgLlasWIHhkplG5TO1EHPs0fvOnDkD
z4Xrovbdfn3eK0ipBeLhw4coliVLlqAju23tV65cwR2hnN3uOMe92CAaqQV6
loHyR+NE+Zv5dCarBSl8phbeQLhsYz/GT0CMeY3UAuMZHqgFxvcYPwExgNWC
FOzRrIPLNvbDaoExgNXCawGrBd/AHs06uGxjP6wWGANYLbwWsFrwDezRrIPL
NvbDaoExgNXCawGrBd/AHs06uGxjP2vWrAkMDCxbtqz23RO3sFqwPawWXgsa
NWqEXty3b1/ZE1ktSMEezTq4bO0NqwXbw2rB3rBakII9mnVw2dobVgu2h9WC
vWG1IAV7NOvgsrU3rBZsD6sFe8NqQQr2aNbBZWtvWC3YHlYL9obVghTs0ayD
y9besFqwPawW7A2rBSnYo1kHl629YbVge1gt2BtWC1KwR7MOLlt7w2rB9rBa
sDesFqRgj2YdXLb2htWC7WG1YG9YLUjBHs06uGztDasF28Nqwd6wWpCCLN7V
q1dvMt5m//79KNvw8HB/Z4SxBG+pBX/fB+MSdF7U0YEDB/ydEcYSrly5wmrB
PGTxyK8xDGMeOJHfYqwWqAMyDON7qAuzWjAJGauwsLBDjLfZvXs3yjY0NNTf
GWEswVtqwd/3wbgEnRd1hI7s74wwlgDHx2rBPDGcTWUM4LK1N956EuHdXDFe
hOvI3nD9SsEezTq4bO0NqwXbw3Vkb7h+pWCPZh1ctvaG1YLt4TqyN1y/UrBH
sw4uW3vDasH2cB3ZG65fKdijWQeXrb1htWB7uI7sDdevFOzRrIPL1t6wWrA9
XEf2hutXCvZo1sFla29YLdgeriN7w/UrBXs06+CytTesFmwP15G94fqVgj2a
dXDZ2htWC7aH68jecP1KwR7NOrhs7Q2rBdvDdWRvuH6lYI9mHVy29obVgu3h
OrI3XL9SsEezDi5be8NqwfZwHdkbrl8p2KNZB5etvWG1YHu4juwN168U7NGs
g8vW3rBasD1cR/aG61cK9mjWwWVrb1gt2B6uI3vD9SuFpR7t5s2bO508ePDA
ivRjOawW7A2rBdvDdWRvuH6l8MDiPXr0KDQ09MCBA5GRkcYxFyxY4HCya9eu
mGXz/3H16lVc9+TJk//++69XErQUVgv2xvdq4eXLl+fOnUMXOH/+vGcX9TEX
Llzo3Llz27ZtL1++7PXEUQ4wRHfv3vV6ygL2JvaG61cKWYvXv3//BAkSkAYI
CQkxjux1tdCvXz9KMG/evG6v7nfMl+2pU6d+/vnnoUOHrlq16saNG9oIx48f
P2rIpUuXVKfAiq5YsQJprlmzxmBuJyIiYuvWrWPGjJk2bRps7z///CN5l28u
PlYLZ86cyZcvH7X/6tWre3ZRH9O4cWPKcJMmTbybMoYqlHLcuHF79eplUbuV
raOoqKhjx46FhYVB15mJf+XKFeq/Bj30+vXrq1evRkeGiTh9+rQyZfRxY7MA
nj17ZjLzbyCsFqSQsnhwKw4FcC7RzhZbwcnFixdV8b2uFgYMGCCunjt37hcv
XnglWYswU7Zw1i1btnT8ly5duqgmT1KlSuUwJEuWLMr4ffv2jRMnjjgKizpu
3Djt1bds2ZI5c2ZlOlmzZj106JBXbt/2+FgtfPzxx6KaatSo4dlFfUz9+vUp
wz169PBuys+fP1e28Pnz53s3fcJ8HUHLBQUFwShRfnbv3u32lNu3b6dNm5bi
L1y4UBsBTatZs2aqnl6kSBExszR16lRjswDmzJkje9dvDqwWpJCyeB06dEDz
ix8//rp16yCGSeX+8ccf1Czxhyq+19UCRhAYRHfv3p2SDQ4O9kqyFuG2bFGA
ZcuWpXvJkSNH1apVM2TIQD8rVaqkFAxu1cK7774rIvfs2ZMCkyZNChfz1ltv
0c/Ro0crr75z506ytwkTJgwMDCxWrBhqFj8Rf9OmTVYUiM3wpVq4efMmVWKt
WrUgy1+XASOyPWTIkAkTJlixcun+/fsowGzZslF/8Xr60abr6KuvvlL1R3Qu
t4kLKaWrFm7cuFG0aFE6CrWfP3/+FClS0M+UKVNilBFtTi0sXbrU49u3PawW
pJCyeOiSaH7ly5dXBkJF+0wtEKhicnNI34vJeh23ZfvTTz9R+bRr1460Af5v
27YtBc6bN0/EvHLlymU9OnfuTJG3bNlCMU+ePEkhxYsXf/r0KUJgqGFqEBIv
XjzxmCMyMjJPnjwITJcunZhMCAkJSZ8+PQLfeeedqKgoi4rFNvhSLUAYU7Xu
2bPHs8vZlb59+6JYcuXKZUXiJuvo66+/TukkSZIkJtXCkiVLlD5dqxZat25N
hz7//PPHjx8j5MWLF4j29ttvz5w5k+JAM+iahbCwMBojlCpVKpZPwPoXVgtS
SFm8kiVLOjSPIFeuXOlWLeASFILmvXfvXrdLnuDLQkNDjx496mo1I7oMkp0y
ZYqZbPsLt2VL6guDI9V60SJFiiAcLt64p2OMSdYJAkME0sRL/Pjxr127JgLF
/I+YXhDe5/vvv1emuXr1agpftGiR1M2+gfhSLUANUr2cPXtWdejly5foUEgK
qs/MnAMaxr59+x49euQ25tWrVzEWuH37ttuY6Ne0/FjWN7nt6dHubnDChAko
Foy7pa5rEllv8ssvv5hRC7du3aJnEGXKlNFVC7hfWh7WqFEj1RIIMxXXsWNH
h3OS8Ny5cyZz/mbCakEKKYv30UcfoRG2atWKfs6ePRuD0OTJk1ODxx+pnCAa
RRBqAZZk7dq1n3zyCc11O5wT77rLFOEBK1eunDBhQoqWOHHiOnXqaJc9J0uW
DEdhKGJw65bjtmxpIN+hQwdV+OLFi+n2jZ9+VqtWjcQGDT2inVMTadKk0c7/
gPfff58mDegnRAJd4ubNm8poME00EVGuXDmTt/nG4ku1sGnTJqqv8PBwEYjK
mjFjRrp06cQQNWnSpC1atICXF3EwhkWXRL2jbYwZMwZjcIoZJ06cAgUKoGNq
r4Vkg4KCsmTJIpLNnj072qRuxpYuXZovXz6xhAAds3nz5vfv36ejEJ9kE6BP
VCea6elmbnDSpEkIx/DBTDHKYpFaqFu3LuIkSpQIieuqhU6dOrkagrkFdUrV
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
AoZFYo9ofhXCPL5UCxio6u5apqsWZHulD9RCtPN+g4KCaGaDKF68+P3795Vx
IiMj6XHk66sWCNjJjBkzOpwzddqjUBRi9SNo0aKFUHdi1GAMii4m98UQrBak
MGPxoH4xmKU5NJgU5TR1jRo1qPXqrjQgK6R8v89YLaCn0IKffPnyjRkz5nXf
TlDKmzRv3tzhfHZsvGZj2bJl9B4EbBEstnGaZtQCrBa9GOtwvkNnJqsM4Ru1
ABlJX4iAYNi2bZvqqK5akO2VvlELRFRU1KpVqwICAuj09u3bK4+S33Q4N3XB
aFo3BV8SE29CPTpevHjG8wAoEFJQUHHRzhWqZtQCRgoe3hKjgNWCFOYt3pw5
c6ihKr/j0KNHDwpcvHixKv4ff/xBz8GV7zgYqwWaYE+aNKnq24uvKVLehHZO
wBjfIM7atWvpMU3y5MnFgigD3KoFdBba38nhfKjByxWk8NkqR8TMmzevQ+8b
CrpqQbZX+lItEJAxmTJlcjhn40XgnTt3aHnDV199ZXCuLzFTR656jVg9cvv2
bYPTxZsgc+fOpZCHDx/e14DGRtFmzpyJn/wkwiuwWpDCvMV79uwZ9eURI0aI
QBgfasPvvfee8ikkehDtQgbgs0S4sVooXbq0Q/F9vdcdKW9iMG9JbNiwgVxD
4sSJ3T6tIIzVAiqUJqUdzm8VuXqxgnGFL9+JoB250QBUSxd01YJsr7RaLZw5
c0b7tgVtZQzdK0J27NhBaXrwcVuLcFtHEO3oueibqvCbN2/Sjs3Zs2cXgZGR
kWFhYcpoDx48oO0xoZqMd5ngVY5WwGpBCimLR19FUU0e1qtXT0yOoe9ERUVB
CTRs2JACVUMMY7VAdqZPnz4xuaPYg/myhQuIFy+ew/kyiG6EzZs3i0/iDh48
ePv27WvWrFmtQBjz69ev73/FoEGD6BQUO4WcOHGCosFwib3+UqdOvW3bNli8
1f/FeM9/xpdqQXx3QFUprr4TIdUrLVULERERsBsJEiRAa6SNiXDj4g1Bmn4n
5s2bR4Gx5xGk2zoiXx8nTpzOnTtv2rQJQ344fYhzsdNmz549KSakGsofA65x
48bdunULHXDv3r205zP44YcfjHPCasEKWC1I4cFejs2aNVMGPnnyhGbRCfJ6
REBAgEoVGKuFDBkyOBQ7q7/umC9b8T1i7Tc4op2eXXyu2hWwWhR54sSJBtGS
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
4Kfq1Kmzdu1aWW5pUgv+GqlHG9+wbiQYFxcnez0p4LjbtGmzfft2PRp8omwU
r3j++ecDXxfFiwdSCWChXLlycP3KEcOxQhXrEXLnzt2zZ0/TFm2imvT9MINi
p47st6PDhw+jYapBQsM71udzqYuAClJfvja8PQhKhcyFasERjiyezM02qQWP
163v3LkT3R/7W6ra59KlS1u3bp0/f751CYCVq/eL1ZnO8ePHkYE5c+asX78e
Bs1fNJhc9I/gjBYuXJiYmBh4fSXRiaRaUDuQ+FQLdkhOTl65ciXSCd9SF6Qc
GxsLO5CQkBBgJ0k8mcuXL4fjM21GHQBYmN27d6OngFvw9/ls2AeU59y5c6GW
fcrdMH2xWrDfjhBz3bp1uBfTeg1/7NmzB2kG2HKKhAzVgiMcWTzZP7BFixbh
zlVonD9/Xiyq9WPZWULWqgUSbiKpFtQXkE3T5Ih95AOOZcqUsX8KvYm7Yf06
wpHFkwHPIkWKZE+hqz7WrG+knIVQLbibSKoFdJzl2e7Vq5ej/QeIcPbsWZmR
6HNKhj/oTdwN69cRjizenDlz1EvJ8uXL79y5M9zZs8no0aPVCz6ImWzioKkW
3E0k1YJH29uwaNGiXbt2De2i1yBpaWk1atSQfasMh5Oa6E3cDevXEY4s3uXL
l/X9itetWxfu7NlExhhlBtfXX3+d1dn5/1AtuJsIq4UVK1bIEn7D8hFnEoDU
1FRlsqpWrRr4O5Um6E3cDevXESFYvFWrVo0aNQoSPfvs9RcTEzN48OBx48Yl
JiZmdV7+D6oFdxNhteDxzg+Mjo4eMmTI3LlzQ7voNQj6OCixYcOGzZs3L+hX
vE3Qm7gb1q8j6NHCB8vW3UReLZAIwzpyN6xfR9CjhQ+WrbuhWnA9rCN3w/p1
BD1a+GDZuhuqBdfDOnI3rF9H0KOFD5atu6FacD2sI3fD+nUEPVr4YNm6G6oF
18M6cjesX0fQo4UPlq27oVpwPawjd8P6dQQ9Wvhg2bobqgXXwzpyN6xfR9Cj
hQ+WrbuhWnA9rCN3w/p1BD1a+GDZuhuqBdfDOnI3rF9HiMU7ceJECsls1q5d
i7I9fvx4VmeEhIXMUgtZfR/EL8eOHUMdxcbGZnVGSFiA46NasI9YPPFrhBD7
wIn8K8NqQRogISTySBOmWrCJGKv4+PgNJLNZuXIlyjYuLi6rM0LCQmaphay+
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
eLN+982EqW2aoFoIH1QLjrBv8SZMmCAPrelrDpmiFqBGDO/eMklJSSHeSfYj
aNn6+6icel0L+y8haqX2zJkzTZEfffRRhN9///2BMyPvuHPlyqXmzMsmz9Wr
VzdlSbbSioqKCpwgidgsR8SUfUsCfNFAgFuX50SGF06dOiVjDnZ2a7e2Wfun
q5kVkyZNChwTfQGJqaYmKqy+XmUAz6p1LpPa3kGtaHCqFo4dOyZrurt06eIz
t3bqyF8rbtu2rWQm6FwOa9vUoVoIH1QLjrBv8c6fPy8tS33ASMgUtSBz/sPx
Zb0sJGjZtm7dumXLltaP26pPc6qXnujmV6pUCSH33HOP3uVXk81k5fumTZtq
1qxpnbi4evVq6XXqOz6peez6SkklS6ZOnRrqfV8rRHJNhDwScCi601ywYIFp
pYBazzJs2DAJUS7V+u7PhM82a/P0jRs3SrSyZcuavgl1/PhxfRHluHHjJOY3
33xjSsSnr3/uued8PpC4Yo4cOQzvaKRqEU7Vwm+//Sbx/W2uGLSOkI1bbrll
4cKFpvDDhw/LHmvq7aGjtqlDtRA+qBYc4cjiicPq2LGjHpgpakE+wtKzZ8+Q
biKbErhs58yZI0UBczd27NiEhAR0UtAN6d27t5jBAgUK6PM30GuT+M2aNRPz
u2fPHogHwzvaKVaoWrVqhndj3j59+qxatQoC78yZMxMnTlQTQhYtWqQSxLVE
acDcwejh6jExMRITl/b3RQ+iiKRaUFNP1WQS2UTr7rvvhhORPbt27NghA01A
DaqjZmXHZkj9zz77TDZhvnDhwrJlyxBZn7UiMxVNH463f/qTTz4pl0YKkiXo
hOjo6OLFiz/yyCOqA44TJVqtWrU2b96MpNRKQ5++fsOGDSoDw4cPP3HixLlz
52bNmlWwYEFrZKdqQT7rBvxVYtA6kgmKcPdvvvnmr7/+iuaWlpaG25dPTYH3
3ntPYjpqmwcPHlybjnpP0b9/fwnZvn27v/wQR1AtOCKEvRzbtm2rB2aKWihR
ooTx9z3VXUDgskWH6MMPP9T3p1X78Iv9mTt3rh4fVkjtbWV4t6pTvyEwJM7K
lStLly6twqEi9PS7d+9uysOPP/6oNtIXiSIGTc2uJAHIkr0cd+/eLSEvvvii
qlmoPvUpFsPyoeQZM2aoyjW8O3WoSte957vvvqseLX38yubpEBJqcYE8e+o3
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
hBDX8/8AwCw85Q==
    "], {{0, 264.}, {349., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{349., 264.},
  PlotRange->{{0, 349.}, {0, 264.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->1835080513,ExpressionUUID->"f29bc7cf-d330-4c95-8e7f-43aa1071028f"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "8"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[Cell[BoxData[
        TemplateBox[{
          Cell[
           TextData["LexicalCases"]], "paclet:ref/LexicalCases"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]], "InlineFormula",
        FontFamily->"Source Sans Pro",ExpressionUUID->
        "4b9a6b62-c960-45bf-8f61-58187bcd3369"]], "SeeAlso",ExpressionUUID->
        "4cf5e4f1-26e1-4c0f-9692-b2ad89b732a8"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"086fd636-8882-43eb-926c-\
ebb031cdf168"],

Cell[" ", "FooterCell",ExpressionUUID->"d55a0cfd-f6aa-45c9-8185-7911c88a7dfc"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LexicalSummary",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Open}, "NotesSection" -> Closed, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed, "6" -> Closed, "7" -> Closed, "8" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> $Failed, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 4, 30, 16, 29, 26.732771}", 
    "history" -> {"XX", "", "", ""}, "context" -> "LexicalCases`", 
    "keywords" -> {
     "lexical summary", "lexical cases summary", "lexical analysis", 
      "lexical data", "lexical data analysis", "lexical cases results", 
      "lexical data analysis results", "lexical statistics"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Lexical Cases Symbol", "language" -> "en", "paclet" -> 
    "LexicalCases", "status" -> "None", "summary" -> 
    "LexicalSummary[...][\"Properties\"] Get a list of available properties \
LexicalSummary[...][property] Return the value of a property \
LexicalSummary[...][dsp, n] Return n rows from dsp data \
LexicalSummary[...][dsp, DeleteStopwords] Remove stopwords from dsp data \
LexicalSummary[...][dsp, n, DeleteStopwords] Return n rows after removing \
stopwords from dsp data", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "LexicalSummary", "titlemodifier" -> "", "windowtitle" -> 
    "LexicalSummary", "type" -> "Symbol", "uri" -> 
    "LexicalCases/ref/LexicalSummary", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Mac OS X ARM (64-bit) (December 2, 2021)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"57e65971-dca2-49c8-92ba-7ed6dae7831f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[18480, 458, 1391, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"be671882-2ca6-4d46-9555-5bcc5410d5ac",
   CellTags->"PrimaryExamplesSection",
   CellID->1517549745]},
 "RasterizedOutput"->{
  Cell[406526, 7907, 59998, 990, 285, "Output",ExpressionUUID->"f29bc7cf-d330-4c95-8e7f-43aa1071028f",
   CellTags->"RasterizedOutput",
   CellID->1835080513]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 470317, 8989},
 {"RasterizedOutput", 470518, 8993}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 3335, 76, 57, "AnchorBarGrid",ExpressionUUID->"983a73b7-7971-407c-8eaf-284b7ea78daf",
 CellID->1],
Cell[3924, 99, 95, 0, 23, "ContextNameCell",ExpressionUUID->"a5b9460e-57ae-4b69-8ec0-52d4abf7f0e3"],
Cell[CellGroupData[{
Cell[4044, 103, 557, 14, 60, "ObjectNameGrid",ExpressionUUID->"81518e69-ccb0-4563-9abd-aa09dbfb6e3f"],
Cell[4604, 119, 4974, 135, 426, "Usage",ExpressionUUID->"7d2cb95e-77ab-4959-a72f-82216d4bcc62",
 CellID->1166372416]
}, Open  ]],
Cell[CellGroupData[{
Cell[9615, 259, 1886, 47, 37, "NotesSection",ExpressionUUID->"70c7d514-4daf-4665-b4de-50dbfbb6d6d3",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->459179288],
Cell[11504, 308, 291, 7, 70, "Notes",ExpressionUUID->"fc316fef-b90e-41da-a367-f7b8b4cc32d9",
 CellID->990465896],
Cell[11798, 317, 4501, 87, 70, "2ColumnTableMod",ExpressionUUID->"34e3a8ff-6960-4fd9-9255-71e685c15fc4",
 CellID->1912558626],
Cell[16302, 406, 201, 4, 70, "Notes",ExpressionUUID->"c1967ef1-349e-4584-9f0b-55c8625e134c",
 CellID->1057825671],
Cell[16506, 412, 276, 8, 70, "Notes",ExpressionUUID->"64447b6e-3857-4d86-ace9-f14fb19a1a27",
 CellID->824378231],
Cell[16785, 422, 1568, 30, 70, "1ColumnTableMod",ExpressionUUID->"242a4dee-baa1-46d3-b9ec-63488a4a3404",
 CellID->1136967896]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[18480, 458, 1391, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"be671882-2ca6-4d46-9555-5bcc5410d5ac",
 CellTags->"PrimaryExamplesSection",
 CellID->1517549745],
Cell[CellGroupData[{
Cell[19896, 499, 1368, 36, 31, "ExampleSection",ExpressionUUID->"3b61e56d-a3d3-49df-b230-88c89e84ee0f",
 CellID->1942772443],
Cell[21267, 537, 334, 8, 39, "ExampleText",ExpressionUUID->"45db1fd4-7bae-4d37-9d48-b5bfc46e4381",
 CellID->529296108],
Cell[21604, 547, 305, 8, 29, "Input",ExpressionUUID->"6709200d-0d92-464a-aad7-4fbdb5e3cf21",
 CellID->1445746235],
Cell[CellGroupData[{
Cell[21934, 559, 461, 11, 49, "Input",ExpressionUUID->"3c9b0dd9-d421-41d3-860f-7ecb88acae89",
 CellID->1493889061],
Cell[22398, 572, 12759, 246, 64, "Output",ExpressionUUID->"cad3f471-6ea1-4e25-8396-6c624d4188b9",
 CellID->637137850]
}, Open  ]],
Cell[CellGroupData[{
Cell[35194, 823, 173, 3, 70, "Input",ExpressionUUID->"217f8705-415c-4781-998a-4c357ca8eed7",
 CellID->1230481048],
Cell[35370, 828, 37065, 675, 70, "Output",ExpressionUUID->"1c952671-8feb-4693-b8d2-92015aa47c01",
 CellID->2059223880]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[72584, 1511, 1359, 36, 70, "ExampleSection",ExpressionUUID->"a4b19f96-0139-4697-a43d-d5b3739e4361",
 CellID->176381940],
Cell[CellGroupData[{
Cell[73968, 1551, 1402, 36, 70, "ExampleSubsection",ExpressionUUID->"21bdcec4-f376-4854-84ed-830567e2d59f",
 CellID->1126029635],
Cell[75373, 1589, 134, 1, 70, "ExampleText",ExpressionUUID->"08c5a7aa-bbcc-4074-a63f-a2569dcc74ac",
 CellID->548532339],
Cell[CellGroupData[{
Cell[75532, 1594, 194, 4, 70, "Input",ExpressionUUID->"362fc713-fc79-4425-8275-c907ce1dd01c",
 CellID->2071664732],
Cell[75729, 1600, 903, 25, 59, "Output",ExpressionUUID->"92d75440-6a6f-4aae-8161-c227e479fa83",
 CellID->694881156]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[76784, 1633, 1405, 36, 70, "ExampleSubsection",ExpressionUUID->"bbeaee4f-f91d-4be1-8d88-1de206646d97",
 CellID->1554178081],
Cell[78192, 1671, 171, 3, 70, "ExampleText",ExpressionUUID->"34fbc707-3ecb-40c5-bc77-d0a4260b5265",
 CellID->1417329347],
Cell[CellGroupData[{
Cell[78388, 1678, 168, 3, 70, "Input",ExpressionUUID->"01636045-c89b-4c35-9083-408c7a3aec89",
 CellID->600725888],
Cell[78559, 1683, 124522, 2263, 70, "Output",ExpressionUUID->"22072e38-cdf8-4548-8d1d-00ad3b40f192",
 CellID->1170437276]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[203233, 3954, 1404, 36, 70, "ExampleSubsection",ExpressionUUID->"1abc2d8f-43e7-4a19-a2a6-cb6b2edc2c9d",
 CellID->1646726225],
Cell[204640, 3992, 127, 1, 70, "ExampleText",ExpressionUUID->"f24caaf8-b4eb-4655-9a41-3f037ef8f4f2",
 CellID->824560004],
Cell[CellGroupData[{
Cell[204792, 3997, 168, 3, 70, "Input",ExpressionUUID->"3dd97054-aabe-445f-bb30-e6d5968a70a8",
 CellID->1873871641],
Cell[204963, 4002, 61987, 1171, 70, "Output",ExpressionUUID->"24403a66-b32a-442a-928e-18b46752ee5a",
 CellID->88169303]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed]]]],
Cell[CellGroupData[{
Cell[267102, 5181, 1409, 36, 70, "ExampleSubsection",ExpressionUUID->"94cd7585-91a1-48a9-b309-724f9f906d6e",
 CellID->1481878219],
Cell[268514, 5219, 127, 1, 70, "ExampleText",ExpressionUUID->"a30eab01-e083-4298-81ed-794f65f84e84",
 CellID->1399819658],
Cell[CellGroupData[{
Cell[268666, 5224, 172, 3, 70, "Input",ExpressionUUID->"b897389a-90cd-41a1-8efa-aa8c018db729",
 CellID->585902491],
Cell[268841, 5229, 37065, 675, 70, "Output",ExpressionUUID->"5b4a103c-0da0-4ebb-82b0-46a262eb24e4",
 CellID->1290694601]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed]]]],
Cell[CellGroupData[{
Cell[306058, 5912, 1403, 36, 70, "ExampleSubsection",ExpressionUUID->"af609c13-052a-4810-bed1-ac99e5a0498f",
 CellID->457254572],
Cell[307464, 5950, 117, 1, 70, "ExampleText",ExpressionUUID->"20c66a12-a49f-4404-9356-5693e7a49ba1",
 CellID->276142960],
Cell[CellGroupData[{
Cell[307606, 5955, 168, 3, 70, "Input",ExpressionUUID->"d9763662-e766-42c5-a781-4da355989543",
 CellID->1628336659],
Cell[307777, 5960, 138, 2, 37, "Output",ExpressionUUID->"89bc0d7c-882b-4965-8fff-3d920a6faadf",
 CellID->1812465150]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "4"}, Closed]]]],
Cell[CellGroupData[{
Cell[308067, 5970, 1413, 36, 70, "ExampleSubsection",ExpressionUUID->"87f68a2f-794e-4a3e-9c38-b0854c248ddb",
 CellID->1829783013],
Cell[309483, 6008, 138, 1, 70, "ExampleText",ExpressionUUID->"3de425f4-edbd-44ec-af87-40da9317baa4",
 CellID->755541896],
Cell[CellGroupData[{
Cell[309646, 6013, 177, 3, 70, "Input",ExpressionUUID->"ed6db804-ba51-4e3f-bdc0-d652ec6e35a6",
 CellID->1244245283],
Cell[309826, 6018, 128, 2, 37, "Output",ExpressionUUID->"4b856e00-28de-4cd4-98bb-2829a820d976",
 CellID->1359398439]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "5"}, Closed]]]],
Cell[CellGroupData[{
Cell[310106, 6028, 1404, 36, 70, "ExampleSubsection",ExpressionUUID->"9ca5271f-78a1-4315-b678-d950224b16d7",
 CellID->1605236034],
Cell[311513, 6066, 117, 1, 70, "ExampleText",ExpressionUUID->"3ca385d6-2e9f-41b2-bd8c-4f1873a04c3b",
 CellID->1356043807],
Cell[CellGroupData[{
Cell[311655, 6071, 168, 3, 70, "Input",ExpressionUUID->"0df88820-97cb-46ca-837b-36ca3ea8bfe6",
 CellID->1584059910],
Cell[311826, 6076, 8789, 172, 70, "Output",ExpressionUUID->"a5970403-37fb-477a-938e-bf56de3c7c9e",
 CellID->1056605382]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "6"}, Closed]]]],
Cell[CellGroupData[{
Cell[320767, 6256, 1413, 36, 70, "ExampleSubsection",ExpressionUUID->"0b37012e-fe22-4974-88bb-c685cf59545c",
 CellID->170719235],
Cell[322183, 6294, 117, 1, 70, "ExampleText",ExpressionUUID->"f7a5c247-c45a-4604-8137-344abfe501d5",
 CellID->240030253],
Cell[CellGroupData[{
Cell[322325, 6299, 178, 3, 70, "Input",ExpressionUUID->"4663c08d-d5f5-4d5c-a05d-73b0d5137961",
 CellID->1214173105],
Cell[322506, 6304, 3558, 82, 113, "Output",ExpressionUUID->"79ce081a-7bc9-4f57-b5b7-4c4f04f3c02b",
 CellID->903689445]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "7"}, Closed]]]],
Cell[CellGroupData[{
Cell[326216, 6394, 1371, 36, 70, "ExampleSubsection",ExpressionUUID->"c84d58ca-5ad9-4e52-ba24-0e234c35aa07",
 CellID->881638994],
Cell[327590, 6432, 153, 1, 70, "ExampleText",ExpressionUUID->"7898a72f-8a05-495f-8e91-fde542b4d103",
 CellID->1244752440],
Cell[CellGroupData[{
Cell[327768, 6437, 196, 4, 70, "Input",ExpressionUUID->"cf09ea8c-2e4e-4407-a9f3-bbfe58481128",
 CellID->1707399265],
Cell[327967, 6443, 30694, 556, 70, "Output",ExpressionUUID->"63a88b2e-3fc2-4fbf-9762-f98c383c19bb",
 CellID->274530828]
}, Open  ]],
Cell[CellGroupData[{
Cell[358698, 7004, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"c2d69ca4-8fd5-4759-8264-7185815bc175",
 CellID->1766268639],
Cell[358944, 7011, 128, 1, 70, "ExampleText",ExpressionUUID->"73af1edf-a1f2-485b-9c3d-d20026314f2a",
 CellID->1010563192],
Cell[359075, 7014, 276, 7, 70, "Input",ExpressionUUID->"cda6bb14-d39e-4407-88a9-e100d6289473",
 CellID->1704270105],
Cell[CellGroupData[{
Cell[359376, 7025, 225, 5, 70, "Input",ExpressionUUID->"9189f16c-eaf3-46b4-88dd-9d0555455c4a",
 CellID->1021927783],
Cell[359604, 7032, 45894, 844, 70, "Output",ExpressionUUID->"a6cb856a-aa53-46f4-8c0c-8f578dad1259",
 CellID->480824489]
}, Open  ]],
Cell[CellGroupData[{
Cell[405535, 7881, 988, 24, 70, "Input",ExpressionUUID->"207e3fd0-77b8-4510-8457-17e610eea57e",
 CellID->1607166618],
Cell[406526, 7907, 59998, 990, 285, "Output",ExpressionUUID->"f29bc7cf-d330-4c95-8e7f-43aa1071028f",
 CellTags->"RasterizedOutput",
 CellID->1835080513]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "8"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[466893, 8910, 779, 20, 70, "SeeAlsoSection",ExpressionUUID->"086fd636-8882-43eb-926c-ebb031cdf168"],
Cell[467675, 8932, 78, 0, 70, "FooterCell",ExpressionUUID->"d55a0cfd-f6aa-45c9-8185-7911c88a7dfc"]
}
]
*)

(* End of internal cache information *)

