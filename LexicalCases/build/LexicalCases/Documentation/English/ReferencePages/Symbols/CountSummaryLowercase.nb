(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    181297,       3534]
NotebookOptionsPosition[    176024,       3424]
NotebookOutlinePosition[    178241,       3480]
CellTagsIndexPosition[    178154,       3475]
WindowTitle->CountSummaryLowercase
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["LEXICAL CASES SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "d0183a00-f6e5-4bdb-a133-12941d858902"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "9e349adc-b201-4285-8eda-18f2e42e2eb0"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "5dc25aa4-d3a0-44a1-b585-5dad9fcf7393"]
         }],ExpressionUUID->"aecb1638-70fb-4a2a-ad7e-6eaa2c448184"],
         StripOnInput->False], {"\<\"ToLowerCase\"\>":>
        Documentation`HelpLookup["paclet:ref/ToLowerCase"], Delimiter, 
        StyleBox["\<\"Functions\"\>", "SeeAlsoSection",
         StripOnInput->False,
         FontSize->14,
         FontSlant->"Italic"]:>NotebookFind[
         EvaluationNotebook[], "SeeAlsoSection", All, CellStyle], 
        StyleBox["\<\"LexicalCases\"\>", "SeeAlsoRelated",
         StripOnInput->False]:>Documentation`HelpLookup[
        "paclet:LexicalCases/ref/LexicalCases"], 
        StyleBox["\<\"LexicalSummary\"\>", "SeeAlsoRelated",
         StripOnInput->False]:>Documentation`HelpLookup[
        "paclet:LexicalCases/ref/LexicalSummary"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a78aa633-be37-4e7a-8819-bf58f197184d"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "49b4596e-724d-4db5-8f52-5f77b772ee01"]
         }],ExpressionUUID->"9fe63243-07c3-4617-a0c4-e8bdd5c5ad39"],
         StripOnInput->False], {"\<\"LexicalCases\"\>":>
        Documentation`HelpLookup["paclet:LexicalCases/guide/LexicalCases"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "1ccc25f4-c42d-4160-857d-4ed245792d21"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tutorials",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "1ec40100-5cd4-4d9d-bd0a-7c0fead810c2"]
         }],ExpressionUUID->"0f7e55ef-18e6-47a6-aaf8-ac09e85c5ddf"],
         StripOnInput->False], {"\<\"Lexical Cases Overview\"\>":>
        Documentation`HelpLookup[
        "paclet:LexicalCases/tutorial/LexicalCasesOverview"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "b065fb54-7f20-4d1b-88f2-35983a414a47"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "4723e0f5-7c54-4e50-adea-efd4f2300216"]
         }],ExpressionUUID->"1c060729-6197-4b18-8c0f-e6cb643e6278"],
         StripOnInput->
          False], {"\<\"LexicalCases/ref/CountSummaryLowercase\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["LexicalCases/ref/CountSummaryLowercase"]}, Visible -> 
             False]]; SelectionMove[
          DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/LexicalCases/ref/\
CountSummaryLowercase.html"], StandardForm]], "Input", TextClipboardType -> 
               "PlainText"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$13294], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "LexicalCases/ref/CountSummaryLowercase" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "c30f2d5a-d85a-498e-b394-b4b79e1b7f38"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "fcf0cf0b-7eb6-4ea8-9005-fce857f3ece8"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"10b6340c-0ce4-4202-820e-0b46010e1354"],

Cell["LexicalCases`", "ContextNameCell",ExpressionUUID->"6d8bb9bf-cc3d-40c5-9299-53577aa2d1bd"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "CountSummaryLowercase", "ObjectName",ExpressionUUID->
      "3ccbe7ff-43b3-435b-ac8a-d686393e3e48"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"61b53480-eab3-498a-b745-c998a97bffd9"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "6042dc0c-2b30-45d2-91d3-039ff2e4a715"]
    }],ExpressionUUID->"1369ad8b-54ae-4ef5-a884-ac05df29dad9"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"01ecb616-285d-49a8-ac65-\
3d8f51cdfadc"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["CountSummaryLowercase"]], 
         "paclet:LexicalCases/ref/CountSummaryLowercase", 
         "LexicalCases Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["ds", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6f2c75d8-0454-4805-9e6c-97e96ab079ee"],
     "\[LineSeparator]lowercase matches and merge rows with the same match"
    }],ExpressionUUID->"6a47ba39-a0a1-406e-be25-a57acec1932c"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}},
 CellID->1835048001,ExpressionUUID->"095270e3-28d0-4c9e-97c5-90bacce254ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"0cf42c4a-bb2b-4e04-89fd-fde9063a4680"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"8e51b7d7-bd5f-41c8-9fd9-5c9bffcacced"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"5addcb69-3bdc-4ed5-ac9c-0e2a3e3325df"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"bb0f0f3f-b867-4bdf-bab3-6c00e8539651"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->1081800345,ExpressionUUID->"e2038ec2-e936-42f6-9dcb-b1b7545eee57"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["ds", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "323d6af9-7a77-4724-b643-5032427abb49"],
 " must be a counts or count groups dataset which can be accessed via ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LexicalSummary"]], "paclet:LexicalCases/ref/LexicalSummary", 
    "LexicalCases Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "37becc01-48d3-4327-a6f4-ae702639837c"],
 "'s ",
 Cell[BoxData["\"\<Counts\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7bfde7f6-18f8-46e0-8b75-0bf8c1da78a5"],
 " and ",
 Cell[BoxData["\"\<CountGroups\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d61a9fa8-c0e9-474a-9694-4ffd94265c5e"],
 " properties."
}], "Notes",
 CellID->1639098240,ExpressionUUID->"b656aa5e-8f56-4403-a545-47a778008048"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "a03efe13-a740-4ed0-9d4e-3af66c8c6e5f"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"6caff885-5150-47c4-9e53-9b03c586a00c"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "03b24995-4875-4191-b29e-6e069f244eda"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1221842913,ExpressionUUID->"03745cc5-4447-48d1-a3e0-fafda9672991"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "015aeb1b-ac22-42e1-ae19-0c457294fc78"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"cc04ce87-d9b1-43de-9f63-0fae82375bbe"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "dcc924f1-f775-4280-89d9-399070e3f050"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1275206177,ExpressionUUID->"9cc8defd-94d6-49ee-b752-bdf94d9b2db3"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<LexicalCases`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1087657768,ExpressionUUID->"87b7a16f-d65d-4d2f-bef5-3fac67dcd852"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cslp", "=", 
   RowBox[{"LexicalCases", "[", 
    RowBox[{
     RowBox[{"\"\<Content\>\"", "->", "\"\<music\>\""}], ",", 
     RowBox[{
      RowBox[{"TextType", "[", "\"\<Adjective\>\"", "]"}], "~~", 
      "\"\<music\>\""}], ",", 
     RowBox[{"MaxItems", "->", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "cslp"}], "Input",
 CellLabel->"In[2]:=",
 CellID->127674473,ExpressionUUID->"8035ea70-4278-4a03-92b7-1909ef4782be"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LexicalSummary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wikipedia\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Articles: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["362", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Source: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wikipedia\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Articles: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Matches: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["362", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LexicalCases`LexicalSummary[<|
   "Data" -> {<|
      "Article" -> "Music", "Match" -> "popular music", 
       "Position" -> {{2020, 2032}, {6520, 6532}, {7497, 7509}, {8089, 
        8101}, {8659, 8671}, {9819, 9831}, {11032, 11044}, {12875, 12887}, {
        13261, 13273}, {13346, 13358}, {26254, 26266}, {48855, 48867}, {49818,
         49830}, {50303, 50315}, {52458, 52470}, {56087, 56099}, {66477, 
        66489}, {67521, 67533}, {69250, 69262}, {78326, 78338}, {81103, 
        81115}, {88353, 88365}}|>, <|
      "Article" -> "Music", "Match" -> "traditional music", 
       "Position" -> {{2035, 2051}, {8107, 8123}, {11050, 11066}, {22644, 
        22660}, {22808, 22824}, {22919, 22935}, {23447, 23463}, {35225, 
        35241}, {52042, 52058}, {52172, 52188}, {56105, 56121}, {76284, 
        76300}, {78258, 78274}}|>, <|
      "Article" -> "Music", "Match" -> "Classical music", 
       "Position" -> {{2196, 2210}, {23012, 23026}, {41024, 41038}}|>, <|
      "Article" -> "Music", "Match" -> "improvisational music", 
       "Position" -> {{2280, 2300}}|>, <|
      "Article" -> "Music", "Match" -> "contemporary music", 
       "Position" -> {{2355, 2372}, {21532, 21549}, {34106, 34123}}|>, <|
      "Article" -> "Music", "Match" -> "professional music", 
       "Position" -> {{3654, 3671}, {6833, 6850}, {6903, 6920}, {6990, 
        7007}, {80085, 80102}}|>, <|
      "Article" -> "Music", "Match" -> "record music", 
       "Position" -> {{3940, 3951}}|>, <|
      "Article" -> "Music", "Match" -> "Italian music", 
       "Position" -> {{4816, 4828}}|>, <|
      "Article" -> "Music", "Match" -> "digital music", 
       "Position" -> {{5881, 5893}, {76106, 76118}}|>, <|
      "Article" -> "Music", "Match" -> "Professional music", 
       "Position" -> {{6377, 6394}, {6651, 6668}, {74990, 75007}}|>, <|
      "Article" -> "Music", "Match" -> "amateur music", 
       "Position" -> {{6867, 6879}, {6959, 6971}, {46902, 46914}}|>, <|
      "Article" -> "Music", "Match" -> "classical music", 
       "Position" -> {{7474, 7488}, {7897, 7911}, {8327, 8341}, {8768, 
        8782}, {8840, 8854}, {10938, 10952}, {15216, 15230}, {22570, 22584}, {
        30847, 30861}, {32051, 32065}, {33227, 33241}, {34447, 34461}, {34912,
         34926}, {35472, 35486}, {36878, 36892}, {43251, 43265}, {48475, 
        48489}, {48692, 48706}, {51633, 51647}, {51899, 51913}, {52412, 
        52426}, {53252, 53266}, {53591, 53605}, {66495, 66509}, {66744, 
        66758}, {66883, 66897}, {67150, 67164}, {68686, 68700}, {79753, 
        79767}, {80994, 81008}, {87269, 87283}, {88315, 88329}, {89275, 
        89289}, {89791, 89805}}|>, <|
      "Article" -> "Music", "Match" -> "instrumental music", 
       "Position" -> {{7767, 7784}, {41790, 41807}, {44661, 44678}}|>, <|
      "Article" -> "Music", "Match" -> "pop music", 
       "Position" -> {{8439, 8447}, {50484, 50492}, {88441, 88449}, {89080, 
        89088}}|>, <|
      "Article" -> "Music", "Match" -> "own music", 
       "Position" -> {{9331, 9339}}|>, <|
      "Article" -> "Music", "Match" -> "aleatoric music", 
       "Position" -> {{10578, 10592}}|>, <|
      "Article" -> "Music", "Match" -> "notated music", 
       "Position" -> {{11932, 11944}, {38547, 38559}}|>, <|
      "Article" -> "Music", "Match" -> "standard music", 
       "Position" -> {{12911, 12924}}|>, <|
      "Article" -> "Music", "Match" -> "spontaneous music", 
       "Position" -> {{13761, 13777}}|>, <|
      "Article" -> "Music", "Match" -> "more music", 
       "Position" -> {{15010, 15019}}|>, <|
      "Article" -> "Music", "Match" -> "appropriate music", 
       "Position" -> {{17361, 17377}}|>, <|
      "Article" -> "Music", "Match" -> "common music", 
       "Position" -> {{18780, 18791}}|>, <|
      "Article" -> "Music", "Match" -> "intended music", 
       "Position" -> {{19558, 19571}}|>, <|
      "Article" -> "Music", "Match" -> "deep music", 
       "Position" -> {{21947, 21956}}|>, <|
      "Article" -> "Music", "Match" -> "Choral music", 
       "Position" -> {{25931, 25942}}|>, <|
      "Article" -> "Music", "Match" -> "particular music", 
       "Position" -> {{26793, 26808}, {89510, 89525}}|>, <|
      "Article" -> "Music", "Match" -> "Western music", 
       "Position" -> {{30704, 30716}}|>, <|
      "Article" -> "Music", "Match" -> "oldest music", 
       "Position" -> {{33167, 33178}, {34477, 34488}}|>, <|
      "Article" -> "Music", "Match" -> "prehistoric music", 
       "Position" -> {{33357, 33373}}|>, <|
      "Article" -> "Music", "Match" -> "Egyptian music", 
       "Position" -> {{33672, 33685}, {34142, 34155}}|>, <|
      "Article" -> "Music", "Match" -> "folk music", 
       "Position" -> {{34032, 34041}, {44769, 44778}, {48416, 48425}, {53880, 
        53889}, {88552, 88561}}|>, <|
      "Article" -> "Music", "Match" -> "old music", 
       "Position" -> {{34582, 34590}}|>, <|
      "Article" -> "Music", "Match" -> "Indian music", 
       "Position" -> {{34821, 34832}, {89752, 89763}}|>, <|
      "Article" -> "Music", "Match" -> "Carnatic music", 
       "Position" -> {{35263, 35276}}|>, <|
      "Article" -> "Music", "Match" -> "Chinese music", 
       "Position" -> {{35731, 35743}}|>, <|
      "Article" -> "Music", "Match" -> "Greek music", 
       "Position" -> {{36410, 36420}, {36701, 36711}, {36766, 36776}, {36798, 
        36808}, {36985, 36995}}|>, <|
      "Article" -> "Music", "Match" -> "complete music", 
       "Position" -> {{37056, 37069}}|>, <|
      "Article" -> "Music", "Match" -> "religious music", 
       "Position" -> {{37722, 37736}, {78400, 78414}}|>, <|
      "Article" -> "Music", "Match" -> "sacred music", 
       "Position" -> {{38912, 38923}, {41735, 41746}}|>, <|
      "Article" -> "Music", "Match" -> "vibrant music", 
       "Position" -> {{39481, 39493}}|>, <|
      "Article" -> "Music", "Match" -> "Baroque music", 
       "Position" -> {{39741, 39753}, {41294, 41306}}|>, <|
      "Article" -> "Music", "Match" -> "vocal music", 
       "Position" -> {{39798, 39808}, {40027, 40037}}|>, <|
      "Article" -> "Music", "Match" -> "contrapuntal music", 
       "Position" -> {{39885, 39902}}|>, <|
      "Article" -> "Music", "Match" -> "major music", 
       "Position" -> {{40276, 40286}}|>, <|
      "Article" -> "Music", "Match" -> "Symphonic music", 
       "Position" -> {{43421, 43435}}|>, <|
      "Article" -> "Music", "Match" -> "Romantic music", 
       "Position" -> {{44268, 44281}}|>, <|
      "Article" -> "Music", "Match" -> "orchestral music", 
       "Position" -> {{44740, 44755}}|>, <|
      "Article" -> "Music", "Match" -> "ballet music", 
       "Position" -> {{45578, 45589}}|>, <|
      "Article" -> "Music", "Match" -> "new music", 
       "Position" -> {{47544, 47552}}|>, <|
      "Article" -> "Music", "Match" -> "Traditional music", 
       "Position" -> {{48374, 48390}}|>, <|
      "Article" -> "Music", "Match" -> "American music", 
       "Position" -> {{49462, 49475}}|>, <|
      "Article" -> "Music", "Match" -> "European music", 
       "Position" -> {{49635, 49648}}|>, <|
      "Article" -> "Music", "Match" -> "recorded music", 
       "Position" -> {{51212, 51225}, {75805, 75818}}|>, <|
      "Article" -> "Music", "Match" -> "other music", 
       "Position" -> {{51587, 51597}, {53033, 53043}, {54664, 54674}, {58270, 
        58280}, {66283, 66293}, {74945, 74955}, {80178, 80188}, {90935, 
        90945}}|>, <|
      "Article" -> "Music", "Match" -> "Different music", 
       "Position" -> {{54260, 54274}}|>, <|
      "Article" -> "Music", "Match" -> "many music", 
       "Position" -> {{57966, 57975}}|>, <|
      "Article" -> "Music", "Match" -> "microtonal music", 
       "Position" -> {{58347, 58362}}|>, <|
      "Article" -> "Music", "Match" -> "alternate music", 
       "Position" -> {{58381, 58395}}|>, <|
      "Article" -> "Music", "Match" -> "Cognitive music", 
       "Position" -> {{60828, 60842}}|>, <|
      "Article" -> "Music", "Match" -> "Evolutionary music", 
       "Position" -> {{61974, 61991}}|>, <|
      "Article" -> "Music", "Match" -> "numerous music", 
       "Position" -> {{62659, 62672}}|>, <|
      "Article" -> "Music", "Match" -> "familiar music", 
       "Position" -> {{62909, 62922}, {63170, 63183}}|>, <|
      "Article" -> "Music", "Match" -> "unfamiliar music", 
       "Position" -> {{63205, 63220}}|>, <|
      "Article" -> "Music", "Match" -> "academic music", 
       "Position" -> {{65554, 65567}}|>, <|
      "Article" -> "Music", "Match" -> "live music", 
       "Position" -> {{69927, 69936}, {71486, 71495}, {71802, 71811}}|>, <|
      "Article" -> "Music", "Match" -> "prerecorded music", 
       "Position" -> {{71355, 71371}}|>, <|
      "Article" -> "Music", "Match" -> "online music", 
       "Position" -> {{76550, 76561}, {94775, 94786}}|>, <|
      "Article" -> "Music", "Match" -> "private music", 
       "Position" -> {{78763, 78775}}|>, <|
      "Article" -> "Music", "Match" -> "Amateur music", 
       "Position" -> {{78844, 78856}}|>, <|
      "Article" -> "Music", "Match" -> "basic music", 
       "Position" -> {{78878, 78888}}|>, <|
      "Article" -> "Music", "Match" -> "few music", 
       "Position" -> {{79154, 79162}}|>, <|
      "Article" -> "Music", "Match" -> "different music", 
       "Position" -> {{79335, 79349}}|>, <|
      "Article" -> "Music", "Match" -> "Gamelan music", 
       "Position" -> {{80021, 80033}}|>, <|
      "Article" -> "Music", "Match" -> "regular music", 
       "Position" -> {{81894, 81906}}|>, <|
      "Article" -> "Music", "Match" -> "undergraduate music", 
       "Position" -> {{82640, 82658}}|>, <|
      "Article" -> "Music", "Match" -> "systematic music", 
       "Position" -> {{84756, 84771}}|>, <|
      "Article" -> "Music", "Match" -> "historical music", 
       "Position" -> {{84779, 84794}}|>, <|
      "Article" -> "Music", "Match" -> "comparative music", 
       "Position" -> {{84806, 84822}}|>, <|
      "Article" -> "Music", "Match" -> "tonal music", 
       "Position" -> {{85854, 85864}}|>, <|
      "Article" -> "Music", "Match" -> "atonal music", 
       "Position" -> {{86039, 86050}}|>, <|
      "Article" -> "Music", "Match" -> "Speculative music", 
       "Position" -> {{86053, 86069}}|>, <|
      "Article" -> "Music", "Match" -> "analytic music", 
       "Position" -> {{86095, 86108}}|>, <|
      "Article" -> "Music", "Match" -> "indigenous music", 
       "Position" -> {{87605, 87620}, {88664, 88679}}|>, <|
      "Article" -> "Music", "Match" -> "commercial music", 
       "Position" -> {{88371, 88386}}|>, <|
      "Article" -> "Music", "Match" -> "actual music", 
       "Position" -> {{89179, 89190}}|>, <|
      "Article" -> "Music", "Match" -> "current music", 
       "Position" -> {{89431, 89443}}|>, <|
      "Article" -> "Music", "Match" -> "percussion music", 
       "Position" -> {{89911, 89926}}|>, <|
      "Article" -> "Music", "Match" -> "clear music", 
       "Position" -> {{92692, 92702}}|>, <|
      "Article" -> "Music", "Match" -> "specialised music", 
       "Position" -> {{94839, 94855}}|>, <|
      "Article" -> "Music (disambiguation)", "Match" -> "first music", 
       "Position" -> {{1407, 1417}}|>, <|
      "Article" -> "Classical music", "Match" -> "formal music", 
       "Position" -> {{41, 52}, {10179, 10190}, {35129, 35140}}|>, <|
      "Article" -> "Classical music", "Match" -> "folk music", 
       "Position" -> {{127, 136}, {10238, 10247}, {35708, 35717}, {42150, 
        42159}, {42523, 42532}}|>, <|
      "Article" -> "Classical music", "Match" -> "popular music", 
       "Position" -> {{141, 153}, {3748, 3760}, {35693, 35705}, {41109, 
        41121}, {41580, 41592}, {41862, 41874}}|>, <|
      "Article" -> "Classical music", "Match" -> "classical music", 
       "Position" -> {{208, 222}, {362, 376}, {787, 801}, {5849, 5863}, {7892,
         7906}, {9431, 9445}, {9625, 9639}, {9984, 9998}, {10679, 10693}, {
        11810, 11824}, {13091, 13105}, {30605, 30619}, {34335, 34349}, {34755,
         34769}, {35098, 35112}, {35240, 35254}, {35650, 35664}, {35735, 
        35749}, {35777, 35791}, {37367, 37381}, {37455, 37469}, {37647, 
        37661}, {41687, 41701}, {41813, 41827}, {42111, 42125}, {42671, 
        42685}, {43394, 43408}, {43624, 43638}, {43982, 43996}, {44860, 
        44874}, {45010, 45024}}|>, <|
      "Article" -> "Classical music", "Match" -> "medieval music", 
       "Position" -> {{1044, 1057}, {1554, 1567}, {12457, 12470}, {12502, 
        12515}, {12724, 12737}, {13114, 13127}, {15205, 15218}}|>, <|
      "Article" -> "Classical music", "Match" -> "extant music", 
       "Position" -> {{1195, 1206}}|>, <|
      "Article" -> "Classical music", "Match" -> "European music", 
       "Position" -> {{1628, 1641}, {10299, 10312}, {10540, 10553}, {14209, 
        14222}, {14439, 14452}}|>, <|
      "Article" -> "Classical music", "Match" -> "secular music", 
       "Position" -> {{1745, 1757}}|>, <|
      "Article" -> "Classical music", "Match" -> "sacred music", 
       "Position" -> {{2185, 2196}, {18528, 18539}}|>, <|
      "Article" -> "Classical music", "Match" -> "central music", 
       "Position" -> {{2284, 2296}}|>, <|
      "Article" -> "Classical music", "Match" -> "galant music", 
       "Position" -> {{3010, 3021}}|>, <|
      "Article" -> "Classical music", "Match" -> "absolute music", 
       "Position" -> {{3245, 3258}}|>, <|
      "Article" -> "Classical music", "Match" -> "Romantic music", 
       "Position" -> {{3329, 3342}, {8087, 8100}}|>, <|
      "Article" -> "Classical music", "Match" -> "programmatic music", 
       "Position" -> {{3375, 3392}}|>, <|
      "Article" -> "Classical music", "Match" -> "older music", 
       "Position" -> {{4069, 4079}}|>, <|
      "Article" -> "Classical music", "Match" -> "such music", 
       "Position" -> {{6943, 6952}}|>, <|
      "Article" -> "Classical music", "Match" -> "Western music", 
       "Position" -> {{9227, 9239}}|>, <|
      "Article" -> "Classical music", "Match" -> "Hindustani music", 
       "Position" -> {{9461, 9476}}|>, <|
      "Article" -> "Classical music", "Match" -> "Gamelan music", 
       "Position" -> {{9480, 9492}}|>, <|
      "Article" -> "Classical music", "Match" -> "Early music", 
       "Position" -> {{10714, 10724}, {14139, 14149}}|>, <|
      "Article" -> "Classical music", "Match" -> "Modernist music", 
       "Position" -> {{11015, 11029}}|>, <|
      "Article" -> "Classical music", "Match" -> "Postmodern music", 
       "Position" -> {{11061, 11076}}|>, <|
      "Article" -> "Classical music", "Match" -> "predominant music", 
       "Position" -> {{11581, 11597}}|>, <|
      "Article" -> "Classical music", "Match" -> "ancient music", 
       "Position" -> {{11866, 11878}, {13995, 14007}}|>, <|
      "Article" -> "Classical music", "Match" -> "Roman music", 
       "Position" -> {{11955, 11965}}|>, <|
      "Article" -> "Classical music", "Match" -> "indisputable music", 
       "Position" -> {{13235, 13252}}|>, <|
      "Article" -> "Classical music", "Match" -> "vocal music", 
       "Position" -> {{14729, 14739}}|>, <|
      "Article" -> "Classical music", "Match" -> "earlier music", 
       "Position" -> {{20261, 20273}}|>, <|
      "Article" -> "Classical music", "Match" -> "Baroque music", 
       "Position" -> {{21893, 21905}}|>, <|
      "Article" -> "Classical music", "Match" -> "traditional music", 
       "Position" -> {{27928, 27944}}|>, <|
      "Article" -> "Classical music", "Match" -> "single music", 
       "Position" -> {{32246, 32257}}|>, <|
      "Article" -> "Classical music", "Match" -> "postmodern music", 
       "Position" -> {{34051, 34066}}|>, <|
      "Article" -> "Classical music", "Match" -> "pluralist music", 
       "Position" -> {{34689, 34703}}|>, <|
      "Article" -> "Classical music", "Match" -> "more music", 
       "Position" -> {{35973, 35982}}|>, <|
      "Article" -> "Classical music", "Match" -> "Classical music", 
       "Position" -> {{36393, 36407}, {36464, 36478}}|>, <|
      "Article" -> "Classical music", "Match" -> "other music", 
       "Position" -> {{40994, 41004}}|>, <|
      "Article" -> "Classical music", "Match" -> "occasional music", 
       "Position" -> {{41164, 41179}}|>, <|
      "Article" -> "Classical music", "Match" -> "instrumental music", 
       "Position" -> {{42057, 42074}}|>, <|
      "Article" -> "YouTube Music", "Match" -> "online music", 
       "Position" -> {{3295, 3306}}|>, <|
      "Article" -> "Music genre", "Match" -> "popular music", 
       "Position" -> {{326, 338}, {1817, 1829}, {2812, 2824}, {7791, 7803}, {
        8241, 8253}, {9102, 9114}, {9551, 9563}, {11041, 11053}, {11166, 
        11178}, {12586, 12598}, {18122, 18134}, {18684, 18696}}|>, <|
      "Article" -> "Music genre", "Match" -> "religious music", 
       "Position" -> {{358, 372}, {13700, 13714}}|>, <|
      "Article" -> "Music genre", "Match" -> "secular music", 
       "Position" -> {{378, 390}}|>, <|
      "Article" -> "Music genre", "Match" -> "electronic music", 
       "Position" -> {{4361, 4376}, {9700, 9715}, {9819, 9834}}|>, <|
      "Article" -> "Music genre", "Match" -> "written music", 
       "Position" -> {{6024, 6036}, {6937, 6949}}|>, <|
      "Article" -> "Music genre", "Match" -> "classical music", 
       "Position" -> {{6058, 6072}, {6671, 6685}, {7679, 7693}, {16844, 
        16858}}|>, <|
      "Article" -> "Music genre", "Match" -> "oral music", 
       "Position" -> {{6119, 6128}}|>, <|
      "Article" -> "Music genre", "Match" -> "folk music", 
       "Position" -> {{6136, 6145}, {13739, 13748}, {13771, 13780}, {13957, 
        13966}, {14163, 14172}, {14752, 14761}, {14786, 14795}, {14807, 
        14816}, {14931, 14940}, {15114, 15123}, {15372, 15381}, {15520, 
        15529}, {15760, 15769}, {16136, 16145}}|>, <|
      "Article" -> "Music genre", "Match" -> "ethnic music", 
       "Position" -> {{6150, 6161}}|>, <|
      "Article" -> "Music genre", "Match" -> "Audiotactile music", 
       "Position" -> {{6217, 6234}}|>, <|
      "Article" -> "Music genre", "Match" -> "Major music", 
       "Position" -> {{6534, 6544}}|>, <|
      "Article" -> "Music genre", "Match" -> "traditional music", 
       "Position" -> {{7085, 7101}, {13825, 13841}, {13927, 13943}, {14038, 
        14054}}|>, <|
      "Article" -> "Music genre", "Match" -> "commercial music", 
       "Position" -> {{8830, 8845}}|>, <|
      "Article" -> "Music genre", "Match" -> "minimalist music", 
       "Position" -> {{9169, 9184}}|>, <|
      "Article" -> "Music genre", "Match" -> "hillbilly music", 
       "Position" -> {{9520, 9534}}|>, <|
      "Article" -> "Music genre", "Match" -> "Electronic music", 
       "Position" -> {{9638, 9653}}|>, <|
      "Article" -> "Music genre", "Match" -> "rhythmic music", 
       "Position" -> {{10483, 10496}}|>, <|
      "Article" -> "Music genre", "Match" -> "Latin music", 
       "Position" -> {{10983, 10993}}|>, <|
      "Article" -> "Music genre", "Match" -> "modern music", 
       "Position" -> {{11549, 11560}}|>, <|
      "Article" -> "Music genre", "Match" -> "Reggae music", 
       "Position" -> {{11851, 11862}}|>, <|
      "Article" -> "Music genre", "Match" -> "reggae music", 
       "Position" -> {{12017, 12028}, {12446, 12457}}|>, <|
      "Article" -> "Music genre", "Match" -> "Religious music", 
       "Position" -> {{13507, 13521}}|>, <|
      "Article" -> "Music genre", "Match" -> "sacred music", 
       "Position" -> {{13550, 13561}}|>, <|
      "Article" -> "Music genre", "Match" -> "Christian music", 
       "Position" -> {{13668, 13682}}|>, <|
      "Article" -> "Music genre", "Match" -> "heavier music", 
       "Position" -> {{16666, 16678}}|>, <|
      "Article" -> "Music genre", "Match" -> "lighter music", 
       "Position" -> {{16810, 16822}}|>, <|
      "Article" -> "Music genre", "Match" -> "percussive music", 
       "Position" -> {{17175, 17190}}|>, <|
      "Article" -> "Music genre", "Match" -> "energetic music", 
       "Position" -> {{17326, 17340}}|>}, "Dataset" -> 
    Dataset[{<|
       "Article" -> "Music", "Match" -> "popular music", 
        "Position" -> {{2020, 2032}, {6520, 6532}, {7497, 7509}, {8089, 
         8101}, {8659, 8671}, {9819, 9831}, {11032, 11044}, {12875, 12887}, {
         13261, 13273}, {13346, 13358}, {26254, 26266}, {48855, 48867}, {
         49818, 49830}, {50303, 50315}, {52458, 52470}, {56087, 56099}, {
         66477, 66489}, {67521, 67533}, {69250, 69262}, {78326, 78338}, {
         81103, 81115}, {88353, 88365}}|>, <|
       "Article" -> "Music", "Match" -> "traditional music", 
        "Position" -> {{2035, 2051}, {8107, 8123}, {11050, 11066}, {22644, 
         22660}, {22808, 22824}, {22919, 22935}, {23447, 23463}, {35225, 
         35241}, {52042, 52058}, {52172, 52188}, {56105, 56121}, {76284, 
         76300}, {78258, 78274}}|>, <|
       "Article" -> "Music", "Match" -> "Classical music", 
        "Position" -> {{2196, 2210}, {23012, 23026}, {41024, 41038}}|>, <|
       "Article" -> "Music", "Match" -> "improvisational music", 
        "Position" -> {{2280, 2300}}|>, <|
       "Article" -> "Music", "Match" -> "contemporary music", 
        "Position" -> {{2355, 2372}, {21532, 21549}, {34106, 34123}}|>, <|
       "Article" -> "Music", "Match" -> "professional music", 
        "Position" -> {{3654, 3671}, {6833, 6850}, {6903, 6920}, {6990, 
         7007}, {80085, 80102}}|>, <|
       "Article" -> "Music", "Match" -> "record music", 
        "Position" -> {{3940, 3951}}|>, <|
       "Article" -> "Music", "Match" -> "Italian music", 
        "Position" -> {{4816, 4828}}|>, <|
       "Article" -> "Music", "Match" -> "digital music", 
        "Position" -> {{5881, 5893}, {76106, 76118}}|>, <|
       "Article" -> "Music", "Match" -> "Professional music", 
        "Position" -> {{6377, 6394}, {6651, 6668}, {74990, 75007}}|>, <|
       "Article" -> "Music", "Match" -> "amateur music", 
        "Position" -> {{6867, 6879}, {6959, 6971}, {46902, 46914}}|>, <|
       "Article" -> "Music", "Match" -> "classical music", 
        "Position" -> {{7474, 7488}, {7897, 7911}, {8327, 8341}, {8768, 
         8782}, {8840, 8854}, {10938, 10952}, {15216, 15230}, {22570, 
         22584}, {30847, 30861}, {32051, 32065}, {33227, 33241}, {34447, 
         34461}, {34912, 34926}, {35472, 35486}, {36878, 36892}, {43251, 
         43265}, {48475, 48489}, {48692, 48706}, {51633, 51647}, {51899, 
         51913}, {52412, 52426}, {53252, 53266}, {53591, 53605}, {66495, 
         66509}, {66744, 66758}, {66883, 66897}, {67150, 67164}, {68686, 
         68700}, {79753, 79767}, {80994, 81008}, {87269, 87283}, {88315, 
         88329}, {89275, 89289}, {89791, 89805}}|>, <|
       "Article" -> "Music", "Match" -> "instrumental music", 
        "Position" -> {{7767, 7784}, {41790, 41807}, {44661, 44678}}|>, <|
       "Article" -> "Music", "Match" -> "pop music", 
        "Position" -> {{8439, 8447}, {50484, 50492}, {88441, 88449}, {89080, 
         89088}}|>, <|
       "Article" -> "Music", "Match" -> "own music", 
        "Position" -> {{9331, 9339}}|>, <|
       "Article" -> "Music", "Match" -> "aleatoric music", 
        "Position" -> {{10578, 10592}}|>, <|
       "Article" -> "Music", "Match" -> "notated music", 
        "Position" -> {{11932, 11944}, {38547, 38559}}|>, <|
       "Article" -> "Music", "Match" -> "standard music", 
        "Position" -> {{12911, 12924}}|>, <|
       "Article" -> "Music", "Match" -> "spontaneous music", 
        "Position" -> {{13761, 13777}}|>, <|
       "Article" -> "Music", "Match" -> "more music", 
        "Position" -> {{15010, 15019}}|>, <|
       "Article" -> "Music", "Match" -> "appropriate music", 
        "Position" -> {{17361, 17377}}|>, <|
       "Article" -> "Music", "Match" -> "common music", 
        "Position" -> {{18780, 18791}}|>, <|
       "Article" -> "Music", "Match" -> "intended music", 
        "Position" -> {{19558, 19571}}|>, <|
       "Article" -> "Music", "Match" -> "deep music", 
        "Position" -> {{21947, 21956}}|>, <|
       "Article" -> "Music", "Match" -> "Choral music", 
        "Position" -> {{25931, 25942}}|>, <|
       "Article" -> "Music", "Match" -> "particular music", 
        "Position" -> {{26793, 26808}, {89510, 89525}}|>, <|
       "Article" -> "Music", "Match" -> "Western music", 
        "Position" -> {{30704, 30716}}|>, <|
       "Article" -> "Music", "Match" -> "oldest music", 
        "Position" -> {{33167, 33178}, {34477, 34488}}|>, <|
       "Article" -> "Music", "Match" -> "prehistoric music", 
        "Position" -> {{33357, 33373}}|>, <|
       "Article" -> "Music", "Match" -> "Egyptian music", 
        "Position" -> {{33672, 33685}, {34142, 34155}}|>, <|
       "Article" -> "Music", "Match" -> "folk music", 
        "Position" -> {{34032, 34041}, {44769, 44778}, {48416, 48425}, {53880,
          53889}, {88552, 88561}}|>, <|
       "Article" -> "Music", "Match" -> "old music", 
        "Position" -> {{34582, 34590}}|>, <|
       "Article" -> "Music", "Match" -> "Indian music", 
        "Position" -> {{34821, 34832}, {89752, 89763}}|>, <|
       "Article" -> "Music", "Match" -> "Carnatic music", 
        "Position" -> {{35263, 35276}}|>, <|
       "Article" -> "Music", "Match" -> "Chinese music", 
        "Position" -> {{35731, 35743}}|>, <|
       "Article" -> "Music", "Match" -> "Greek music", 
        "Position" -> {{36410, 36420}, {36701, 36711}, {36766, 36776}, {36798,
          36808}, {36985, 36995}}|>, <|
       "Article" -> "Music", "Match" -> "complete music", 
        "Position" -> {{37056, 37069}}|>, <|
       "Article" -> "Music", "Match" -> "religious music", 
        "Position" -> {{37722, 37736}, {78400, 78414}}|>, <|
       "Article" -> "Music", "Match" -> "sacred music", 
        "Position" -> {{38912, 38923}, {41735, 41746}}|>, <|
       "Article" -> "Music", "Match" -> "vibrant music", 
        "Position" -> {{39481, 39493}}|>, <|
       "Article" -> "Music", "Match" -> "Baroque music", 
        "Position" -> {{39741, 39753}, {41294, 41306}}|>, <|
       "Article" -> "Music", "Match" -> "vocal music", 
        "Position" -> {{39798, 39808}, {40027, 40037}}|>, <|
       "Article" -> "Music", "Match" -> "contrapuntal music", 
        "Position" -> {{39885, 39902}}|>, <|
       "Article" -> "Music", "Match" -> "major music", 
        "Position" -> {{40276, 40286}}|>, <|
       "Article" -> "Music", "Match" -> "Symphonic music", 
        "Position" -> {{43421, 43435}}|>, <|
       "Article" -> "Music", "Match" -> "Romantic music", 
        "Position" -> {{44268, 44281}}|>, <|
       "Article" -> "Music", "Match" -> "orchestral music", 
        "Position" -> {{44740, 44755}}|>, <|
       "Article" -> "Music", "Match" -> "ballet music", 
        "Position" -> {{45578, 45589}}|>, <|
       "Article" -> "Music", "Match" -> "new music", 
        "Position" -> {{47544, 47552}}|>, <|
       "Article" -> "Music", "Match" -> "Traditional music", 
        "Position" -> {{48374, 48390}}|>, <|
       "Article" -> "Music", "Match" -> "American music", 
        "Position" -> {{49462, 49475}}|>, <|
       "Article" -> "Music", "Match" -> "European music", 
        "Position" -> {{49635, 49648}}|>, <|
       "Article" -> "Music", "Match" -> "recorded music", 
        "Position" -> {{51212, 51225}, {75805, 75818}}|>, <|
       "Article" -> "Music", "Match" -> "other music", 
        "Position" -> {{51587, 51597}, {53033, 53043}, {54664, 54674}, {58270,
          58280}, {66283, 66293}, {74945, 74955}, {80178, 80188}, {90935, 
         90945}}|>, <|
       "Article" -> "Music", "Match" -> "Different music", 
        "Position" -> {{54260, 54274}}|>, <|
       "Article" -> "Music", "Match" -> "many music", 
        "Position" -> {{57966, 57975}}|>, <|
       "Article" -> "Music", "Match" -> "microtonal music", 
        "Position" -> {{58347, 58362}}|>, <|
       "Article" -> "Music", "Match" -> "alternate music", 
        "Position" -> {{58381, 58395}}|>, <|
       "Article" -> "Music", "Match" -> "Cognitive music", 
        "Position" -> {{60828, 60842}}|>, <|
       "Article" -> "Music", "Match" -> "Evolutionary music", 
        "Position" -> {{61974, 61991}}|>, <|
       "Article" -> "Music", "Match" -> "numerous music", 
        "Position" -> {{62659, 62672}}|>, <|
       "Article" -> "Music", "Match" -> "familiar music", 
        "Position" -> {{62909, 62922}, {63170, 63183}}|>, <|
       "Article" -> "Music", "Match" -> "unfamiliar music", 
        "Position" -> {{63205, 63220}}|>, <|
       "Article" -> "Music", "Match" -> "academic music", 
        "Position" -> {{65554, 65567}}|>, <|
       "Article" -> "Music", "Match" -> "live music", 
        "Position" -> {{69927, 69936}, {71486, 71495}, {71802, 71811}}|>, <|
       "Article" -> "Music", "Match" -> "prerecorded music", 
        "Position" -> {{71355, 71371}}|>, <|
       "Article" -> "Music", "Match" -> "online music", 
        "Position" -> {{76550, 76561}, {94775, 94786}}|>, <|
       "Article" -> "Music", "Match" -> "private music", 
        "Position" -> {{78763, 78775}}|>, <|
       "Article" -> "Music", "Match" -> "Amateur music", 
        "Position" -> {{78844, 78856}}|>, <|
       "Article" -> "Music", "Match" -> "basic music", 
        "Position" -> {{78878, 78888}}|>, <|
       "Article" -> "Music", "Match" -> "few music", 
        "Position" -> {{79154, 79162}}|>, <|
       "Article" -> "Music", "Match" -> "different music", 
        "Position" -> {{79335, 79349}}|>, <|
       "Article" -> "Music", "Match" -> "Gamelan music", 
        "Position" -> {{80021, 80033}}|>, <|
       "Article" -> "Music", "Match" -> "regular music", 
        "Position" -> {{81894, 81906}}|>, <|
       "Article" -> "Music", "Match" -> "undergraduate music", 
        "Position" -> {{82640, 82658}}|>, <|
       "Article" -> "Music", "Match" -> "systematic music", 
        "Position" -> {{84756, 84771}}|>, <|
       "Article" -> "Music", "Match" -> "historical music", 
        "Position" -> {{84779, 84794}}|>, <|
       "Article" -> "Music", "Match" -> "comparative music", 
        "Position" -> {{84806, 84822}}|>, <|
       "Article" -> "Music", "Match" -> "tonal music", 
        "Position" -> {{85854, 85864}}|>, <|
       "Article" -> "Music", "Match" -> "atonal music", 
        "Position" -> {{86039, 86050}}|>, <|
       "Article" -> "Music", "Match" -> "Speculative music", 
        "Position" -> {{86053, 86069}}|>, <|
       "Article" -> "Music", "Match" -> "analytic music", 
        "Position" -> {{86095, 86108}}|>, <|
       "Article" -> "Music", "Match" -> "indigenous music", 
        "Position" -> {{87605, 87620}, {88664, 88679}}|>, <|
       "Article" -> "Music", "Match" -> "commercial music", 
        "Position" -> {{88371, 88386}}|>, <|
       "Article" -> "Music", "Match" -> "actual music", 
        "Position" -> {{89179, 89190}}|>, <|
       "Article" -> "Music", "Match" -> "current music", 
        "Position" -> {{89431, 89443}}|>, <|
       "Article" -> "Music", "Match" -> "percussion music", 
        "Position" -> {{89911, 89926}}|>, <|
       "Article" -> "Music", "Match" -> "clear music", 
        "Position" -> {{92692, 92702}}|>, <|
       "Article" -> "Music", "Match" -> "specialised music", 
        "Position" -> {{94839, 94855}}|>, <|
       "Article" -> "Music (disambiguation)", "Match" -> "first music", 
        "Position" -> {{1407, 1417}}|>, <|
       "Article" -> "Classical music", "Match" -> "formal music", 
        "Position" -> {{41, 52}, {10179, 10190}, {35129, 35140}}|>, <|
       "Article" -> "Classical music", "Match" -> "folk music", 
        "Position" -> {{127, 136}, {10238, 10247}, {35708, 35717}, {42150, 
         42159}, {42523, 42532}}|>, <|
       "Article" -> "Classical music", "Match" -> "popular music", 
        "Position" -> {{141, 153}, {3748, 3760}, {35693, 35705}, {41109, 
         41121}, {41580, 41592}, {41862, 41874}}|>, <|
       "Article" -> "Classical music", "Match" -> "classical music", 
        "Position" -> {{208, 222}, {362, 376}, {787, 801}, {5849, 5863}, {
         7892, 7906}, {9431, 9445}, {9625, 9639}, {9984, 9998}, {10679, 
         10693}, {11810, 11824}, {13091, 13105}, {30605, 30619}, {34335, 
         34349}, {34755, 34769}, {35098, 35112}, {35240, 35254}, {35650, 
         35664}, {35735, 35749}, {35777, 35791}, {37367, 37381}, {37455, 
         37469}, {37647, 37661}, {41687, 41701}, {41813, 41827}, {42111, 
         42125}, {42671, 42685}, {43394, 43408}, {43624, 43638}, {43982, 
         43996}, {44860, 44874}, {45010, 45024}}|>, <|
       "Article" -> "Classical music", "Match" -> "medieval music", 
        "Position" -> {{1044, 1057}, {1554, 1567}, {12457, 12470}, {12502, 
         12515}, {12724, 12737}, {13114, 13127}, {15205, 15218}}|>, <|
       "Article" -> "Classical music", "Match" -> "extant music", 
        "Position" -> {{1195, 1206}}|>, <|
       "Article" -> "Classical music", "Match" -> "European music", 
        "Position" -> {{1628, 1641}, {10299, 10312}, {10540, 10553}, {14209, 
         14222}, {14439, 14452}}|>, <|
       "Article" -> "Classical music", "Match" -> "secular music", 
        "Position" -> {{1745, 1757}}|>, <|
       "Article" -> "Classical music", "Match" -> "sacred music", 
        "Position" -> {{2185, 2196}, {18528, 18539}}|>, <|
       "Article" -> "Classical music", "Match" -> "central music", 
        "Position" -> {{2284, 2296}}|>, <|
       "Article" -> "Classical music", "Match" -> "galant music", 
        "Position" -> {{3010, 3021}}|>, <|
       "Article" -> "Classical music", "Match" -> "absolute music", 
        "Position" -> {{3245, 3258}}|>, <|
       "Article" -> "Classical music", "Match" -> "Romantic music", 
        "Position" -> {{3329, 3342}, {8087, 8100}}|>, <|
       "Article" -> "Classical music", "Match" -> "programmatic music", 
        "Position" -> {{3375, 3392}}|>, <|
       "Article" -> "Classical music", "Match" -> "older music", 
        "Position" -> {{4069, 4079}}|>, <|
       "Article" -> "Classical music", "Match" -> "such music", 
        "Position" -> {{6943, 6952}}|>, <|
       "Article" -> "Classical music", "Match" -> "Western music", 
        "Position" -> {{9227, 9239}}|>, <|
       "Article" -> "Classical music", "Match" -> "Hindustani music", 
        "Position" -> {{9461, 9476}}|>, <|
       "Article" -> "Classical music", "Match" -> "Gamelan music", 
        "Position" -> {{9480, 9492}}|>, <|
       "Article" -> "Classical music", "Match" -> "Early music", 
        "Position" -> {{10714, 10724}, {14139, 14149}}|>, <|
       "Article" -> "Classical music", "Match" -> "Modernist music", 
        "Position" -> {{11015, 11029}}|>, <|
       "Article" -> "Classical music", "Match" -> "Postmodern music", 
        "Position" -> {{11061, 11076}}|>, <|
       "Article" -> "Classical music", "Match" -> "predominant music", 
        "Position" -> {{11581, 11597}}|>, <|
       "Article" -> "Classical music", "Match" -> "ancient music", 
        "Position" -> {{11866, 11878}, {13995, 14007}}|>, <|
       "Article" -> "Classical music", "Match" -> "Roman music", 
        "Position" -> {{11955, 11965}}|>, <|
       "Article" -> "Classical music", "Match" -> "indisputable music", 
        "Position" -> {{13235, 13252}}|>, <|
       "Article" -> "Classical music", "Match" -> "vocal music", 
        "Position" -> {{14729, 14739}}|>, <|
       "Article" -> "Classical music", "Match" -> "earlier music", 
        "Position" -> {{20261, 20273}}|>, <|
       "Article" -> "Classical music", "Match" -> "Baroque music", 
        "Position" -> {{21893, 21905}}|>, <|
       "Article" -> "Classical music", "Match" -> "traditional music", 
        "Position" -> {{27928, 27944}}|>, <|
       "Article" -> "Classical music", "Match" -> "single music", 
        "Position" -> {{32246, 32257}}|>, <|
       "Article" -> "Classical music", "Match" -> "postmodern music", 
        "Position" -> {{34051, 34066}}|>, <|
       "Article" -> "Classical music", "Match" -> "pluralist music", 
        "Position" -> {{34689, 34703}}|>, <|
       "Article" -> "Classical music", "Match" -> "more music", 
        "Position" -> {{35973, 35982}}|>, <|
       "Article" -> "Classical music", "Match" -> "Classical music", 
        "Position" -> {{36393, 36407}, {36464, 36478}}|>, <|
       "Article" -> "Classical music", "Match" -> "other music", 
        "Position" -> {{40994, 41004}}|>, <|
       "Article" -> "Classical music", "Match" -> "occasional music", 
        "Position" -> {{41164, 41179}}|>, <|
       "Article" -> "Classical music", "Match" -> "instrumental music", 
        "Position" -> {{42057, 42074}}|>, <|
       "Article" -> "YouTube Music", "Match" -> "online music", 
        "Position" -> {{3295, 3306}}|>, <|
       "Article" -> "Music genre", "Match" -> "popular music", 
        "Position" -> {{326, 338}, {1817, 1829}, {2812, 2824}, {7791, 7803}, {
         8241, 8253}, {9102, 9114}, {9551, 9563}, {11041, 11053}, {11166, 
         11178}, {12586, 12598}, {18122, 18134}, {18684, 18696}}|>, <|
       "Article" -> "Music genre", "Match" -> "religious music", 
        "Position" -> {{358, 372}, {13700, 13714}}|>, <|
       "Article" -> "Music genre", "Match" -> "secular music", 
        "Position" -> {{378, 390}}|>, <|
       "Article" -> "Music genre", "Match" -> "electronic music", 
        "Position" -> {{4361, 4376}, {9700, 9715}, {9819, 9834}}|>, <|
       "Article" -> "Music genre", "Match" -> "written music", 
        "Position" -> {{6024, 6036}, {6937, 6949}}|>, <|
       "Article" -> "Music genre", "Match" -> "classical music", 
        "Position" -> {{6058, 6072}, {6671, 6685}, {7679, 7693}, {16844, 
         16858}}|>, <|
       "Article" -> "Music genre", "Match" -> "oral music", 
        "Position" -> {{6119, 6128}}|>, <|
       "Article" -> "Music genre", "Match" -> "folk music", 
        "Position" -> {{6136, 6145}, {13739, 13748}, {13771, 13780}, {13957, 
         13966}, {14163, 14172}, {14752, 14761}, {14786, 14795}, {14807, 
         14816}, {14931, 14940}, {15114, 15123}, {15372, 15381}, {15520, 
         15529}, {15760, 15769}, {16136, 16145}}|>, <|
       "Article" -> "Music genre", "Match" -> "ethnic music", 
        "Position" -> {{6150, 6161}}|>, <|
       "Article" -> "Music genre", "Match" -> "Audiotactile music", 
        "Position" -> {{6217, 6234}}|>, <|
       "Article" -> "Music genre", "Match" -> "Major music", 
        "Position" -> {{6534, 6544}}|>, <|
       "Article" -> "Music genre", "Match" -> "traditional music", 
        "Position" -> {{7085, 7101}, {13825, 13841}, {13927, 13943}, {14038, 
         14054}}|>, <|
       "Article" -> "Music genre", "Match" -> "commercial music", 
        "Position" -> {{8830, 8845}}|>, <|
       "Article" -> "Music genre", "Match" -> "minimalist music", 
        "Position" -> {{9169, 9184}}|>, <|
       "Article" -> "Music genre", "Match" -> "hillbilly music", 
        "Position" -> {{9520, 9534}}|>, <|
       "Article" -> "Music genre", "Match" -> "Electronic music", 
        "Position" -> {{9638, 9653}}|>, <|
       "Article" -> "Music genre", "Match" -> "rhythmic music", 
        "Position" -> {{10483, 10496}}|>, <|
       "Article" -> "Music genre", "Match" -> "Latin music", 
        "Position" -> {{10983, 10993}}|>, <|
       "Article" -> "Music genre", "Match" -> "modern music", 
        "Position" -> {{11549, 11560}}|>, <|
       "Article" -> "Music genre", "Match" -> "Reggae music", 
        "Position" -> {{11851, 11862}}|>, <|
       "Article" -> "Music genre", "Match" -> "reggae music", 
        "Position" -> {{12017, 12028}, {12446, 12457}}|>, <|
       "Article" -> "Music genre", "Match" -> "Religious music", 
        "Position" -> {{13507, 13521}}|>, <|
       "Article" -> "Music genre", "Match" -> "sacred music", 
        "Position" -> {{13550, 13561}}|>, <|
       "Article" -> "Music genre", "Match" -> "Christian music", 
        "Position" -> {{13668, 13682}}|>, <|
       "Article" -> "Music genre", "Match" -> "heavier music", 
        "Position" -> {{16666, 16678}}|>, <|
       "Article" -> "Music genre", "Match" -> "lighter music", 
        "Position" -> {{16810, 16822}}|>, <|
       "Article" -> "Music genre", "Match" -> "percussive music", 
        "Position" -> {{17175, 17190}}|>, <|
       "Article" -> "Music genre", "Match" -> "energetic music", 
        "Position" -> {{17326, 17340}}|>}, 
      TypeSystem`Vector[
       TypeSystem`Struct[{"Article", "Match", "Position"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "Classical music", "Music", "Music (disambiguation)", "Music genre",
            "YouTube Music"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength]}], 157], <||>],
     "Source" -> "Wikipedia", "TotalMatchCount" -> 362, "Structure" -> 
    TextElement[{
       TextElement[{"Adjective"}, <|"GrammaticalUnit" -> "TextType"|>], 
       TextElement[{"music"}, <|"GrammaticalUnit" -> "Text"|>]}, <|
      "GrammaticalUnit" -> "StringExpression"|>]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->1768640233,ExpressionUUID->"d8c1857d-5f5e-404f-91be-13a4e8ad0ef2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cgs", "=", 
  RowBox[{"cslp", "[", "\"\<CountGroups\>\"", "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->469941029,ExpressionUUID->"74c48725-4f75-4dd9-851b-54ba187534da"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"classical music"}, "CountGroup" -> 69|>, <|
       "Matches" -> {"popular music"}, "CountGroup" -> 40|>, <|
       "Matches" -> {"folk music"}, "CountGroup" -> 24|>, <|
       "Matches" -> {"traditional music"}, "CountGroup" -> 18|>, <|
       "Matches" -> {"other music"}, "CountGroup" -> 9|>, <|
       "Matches" -> {"medieval music"}, "CountGroup" -> 7|>, <|
       "Matches" -> {"European music"}, "CountGroup" -> 6|>, <|
       "Matches" -> {
         "sacred music", "professional music", "Greek music", 
          "Classical music"}, "CountGroup" -> 5|>, <|
       "Matches" -> {"religious music", "pop music", "instrumental music"}, 
        "CountGroup" -> 4|>, <|
       "Matches" -> {
         "vocal music", "Romantic music", "Professional music", 
          "online music", "live music", "formal music", "electronic music", 
          "contemporary music", "Baroque music", "amateur music"}, 
        "CountGroup" -> 3|>, <|
       "Matches" -> {
         "written music", "Western music", "secular music", "reggae music", 
          "recorded music", "particular music", "oldest music", 
          "notated music", "more music", "indigenous music", "Indian music", 
          "Gamelan music", "familiar music", "Egyptian music", "Early music", 
          "digital music", "commercial music", "ancient music"}, "CountGroup" -> 
        2|>, <|"Matches" -> {
         "vibrant music", "unfamiliar music", "undergraduate music", 
          "Traditional music", "tonal music", "systematic music", 
          "Symphonic music", "such music", "standard music", 
          "spontaneous music", "Speculative music", "specialised music", 
          "single music", "Roman music", "rhythmic music", "Religious music", 
          "regular music", "Reggae music", "record music", 
          "programmatic music", "private music", "prerecorded music", 
          "prehistoric music", "predominant music", "Postmodern music", 
          "postmodern music", "pluralist music", "percussive music", 
          "percussion music", "own music", "orchestral music", "oral music", 
          "old music", "older music", "occasional music", "numerous music", 
          "new music", "modern music", "Modernist music", "minimalist music", 
          "microtonal music", "many music", "Major music", "major music", 
          "lighter music", "Latin music", "Italian music", "intended music", 
          "indisputable music", "improvisational music", "historical music", 
          "Hindustani music", "hillbilly music", "heavier music", 
          "galant music", "first music", "few music", "extant music", 
          "Evolutionary music", "ethnic music", "energetic music", 
          "Electronic music", "earlier music", "Different music", 
          "different music", "deep music", "current music", 
          "contrapuntal music", "complete music", "comparative music", 
          "common music", "Cognitive music", "clear music", "Christian music",
           "Choral music", "Chinese music", "central music", "Carnatic music",
           "basic music", "ballet music", "Audiotactile music", 
          "atonal music", "appropriate music", "analytic music", 
          "American music", "Amateur music", "alternate music", 
          "aleatoric music", "actual music", "academic music", 
          "absolute music"}, "CountGroup" -> 1|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 12], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 12, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 12], "Path" -> {}, "DisplayedRowCount" -> 
     12, "DisplayedColumnCount" -> 2, "DataRowCount" -> 12, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"classical music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"classical music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"popular music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"popular music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"folk music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"folk music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"traditional music"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"traditional music"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"other music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"medieval music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"medieval music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"European music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"European music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"sacred music", "professional music", "Greek music", 
                    "Classical music"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"sacred music", "professional music", "Greek music",
                     "Classical music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"religious music", "pop music", 
                    "instrumental music"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"religious music", "pop music", 
                    "instrumental music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 10], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 10], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 18], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 18], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 91], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 91], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{464., {182.3544921875, 187.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{464., {182.3544921875, 187.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->221327478,ExpressionUUID->"98f728b8-e3d3-4509-9482-dbcc5b1a638b"]
}, Open  ]],

Cell["Lowercase the results", "ExampleText",
 CellID->1286674683,ExpressionUUID->"e2ff0f4d-9768-4d64-a029-4ded941ee32c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cgs", "//", "CountSummaryLowercase"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1449318360,ExpressionUUID->"4c4209e6-ccb8-4df4-b197-11d48622da6c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Matches" -> {"classical music"}, "CountGroup" -> 74|>, <|
       "Matches" -> {"popular music"}, "CountGroup" -> 40|>, <|
       "Matches" -> {"folk music"}, "CountGroup" -> 24|>, <|
       "Matches" -> {"traditional music"}, "CountGroup" -> 19|>, <|
       "Matches" -> {"other music"}, "CountGroup" -> 9|>, <|
       "Matches" -> {"professional music"}, "CountGroup" -> 8|>, <|
       "Matches" -> {"medieval music"}, "CountGroup" -> 7|>, <|
       "Matches" -> {"european music"}, "CountGroup" -> 6|>, <|
       "Matches" -> {"sacred music", "greek music", "religious music"}, 
        "CountGroup" -> 5|>, <|
       "Matches" -> {
         "pop music", "instrumental music", "electronic music", 
          "amateur music"}, "CountGroup" -> 4|>, <|
       "Matches" -> {
         "vocal music", "romantic music", "online music", "live music", 
          "formal music", "contemporary music", "baroque music", 
          "reggae music"}, "CountGroup" -> 3|>, <|
       "Matches" -> {
         "written music", "western music", "secular music", "recorded music", 
          "particular music", "oldest music", "notated music", "more music", 
          "indigenous music", "indian music", "gamelan music", 
          "familiar music", "egyptian music", "early music", "digital music", 
          "commercial music", "ancient music", "postmodern music", 
          "major music", "different music"}, "CountGroup" -> 2|>, <|
       "Matches" -> {
         "vibrant music", "unfamiliar music", "undergraduate music", 
          "tonal music", "systematic music", "symphonic music", "such music", 
          "standard music", "spontaneous music", "speculative music", 
          "specialised music", "single music", "roman music", 
          "rhythmic music", "regular music", "record music", 
          "programmatic music", "private music", "prerecorded music", 
          "prehistoric music", "predominant music", "pluralist music", 
          "percussive music", "percussion music", "own music", 
          "orchestral music", "oral music", "old music", "older music", 
          "occasional music", "numerous music", "new music", "modern music", 
          "modernist music", "minimalist music", "microtonal music", 
          "many music", "lighter music", "latin music", "italian music", 
          "intended music", "indisputable music", "improvisational music", 
          "historical music", "hindustani music", "hillbilly music", 
          "heavier music", "galant music", "first music", "few music", 
          "extant music", "evolutionary music", "ethnic music", 
          "energetic music", "earlier music", "deep music", "current music", 
          "contrapuntal music", "complete music", "comparative music", 
          "common music", "cognitive music", "clear music", "christian music",
           "choral music", "chinese music", "central music", "carnatic music",
           "basic music", "ballet music", "audiotactile music", 
          "atonal music", "appropriate music", "analytic music", 
          "american music", "alternate music", "aleatoric music", 
          "actual music", "academic music", "absolute music"}, "CountGroup" -> 
        1|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 13, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Matches"} -> 
        1, {All, "CountGroup"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Matches" -> TypeSystem`PackageScope`UnknownShape[False], 
            "CountGroup" -> TypeSystem`PackageScope`AtomShape[34]|>], 
          DirectedInfinity[1], 2, {All}]], 13, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Matches", "CountGroup"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Integer]}], 13], "Path" -> {}, "DisplayedRowCount" -> 
     13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 13, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matches", 
                  Style[
                  "Matches", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matches"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matches"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CountGroup", 
                  Style[
                  "CountGroup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CountGroup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CountGroup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"classical music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"classical music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"popular music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"popular music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"folk music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"folk music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"traditional music"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"traditional music"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"other music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"other music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"professional music"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"professional music"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"medieval music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"medieval music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"european music"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"european music"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"sacred music", "greek music", "religious music"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"sacred music", "greek music", "religious music"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pop music", "instrumental music", 
                    "electronic music", "amateur music"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"pop music", "instrumental music", 
                    "electronic music", "amateur music"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"vocal music", "romantic music", "online music", 
                    "live music", "formal music", "contemporary music", 
                    "baroque music", "reggae music"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"vocal music", "romantic music", "online music", 
                    "live music", "formal music", "contemporary music", 
                    "baroque music", "reggae music"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 20], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 80], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 80], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Matches"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matches"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["CountGroup"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{798., {195.8544921875, 201.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{798., {195.8544921875, 201.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->697511554,ExpressionUUID->"d0bcd6e3-52eb-4fd0-9d1d-e646ff269a96"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LexicalCases"]], "paclet:LexicalCases/ref/LexicalCases",
            "LexicalCases Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "10c93040-aed3-4df4-b8e5-a2f075e04c6a"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LexicalSummary"]], 
           "paclet:LexicalCases/ref/LexicalSummary", 
           "LexicalCases Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "602126df-70a5-43ba-af90-7b384f6e72e4"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["ToLowerCase"]], "paclet:ref/ToLowerCase"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "e75b14d2-a335-4d2f-ae90-f646658a6105"]
       }], "SeeAlso",ExpressionUUID->"d8cd584d-56ec-48a0-9e3e-faef0fa05933"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"f96ab4c4-bfd7-4453-8c09-\
1569837291cf"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTechNote.png"]],
     ImageSizeCache->{50., {28., 32.}}], GridBox[{
      {
       StyleBox["Tutorials", "TechNotesSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Lexical Cases Overview"]], 
           "paclet:LexicalCases/tutorial/LexicalCasesOverview"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "9af61c6c-74cc-4541-8599-d16a2927beee"]}]}
     }]}
  }]], "TechNotesSection",ExpressionUUID->"4e845a95-00f8-4ed6-8b4a-\
e56d24c46933"]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LexicalCases"]], 
           "paclet:LexicalCases/guide/LexicalCases"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "a6b389fc-f8aa-49f4-b5b2-ada505191e47"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"dea82828-786a-496f-887a-\
27002c26e0e9"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[Cell[BoxData[
        RowBox[{
         TemplateBox[{16},
          "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
          TemplateBox[{
            Cell[
             TextData[
              Cell[
               TextData[{
                 Cell[
                  BoxData[
                   TemplateBox[{2}, "Spacer1"]]], 
                 "LexicalCases GitHub Repository"}]]]], 
            "https://github.com/dishmint/LexicalCases"},
           "WebLink",
           BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
          "23ef9cca-725a-4106-b26a-7d1fc6de43e4"]}]],ExpressionUUID->
        "db0d831d-4108-47aa-af4f-bfcb8fb20135"]], "RelatedLinks",
        ExpressionUUID->"7be88763-6af1-4279-a7ab-031657af4aa6"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"acaa4829-d722-4a04-bb94-\
9dcbfa0d524b"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Lexical Cases Overview"]], 
   "paclet:LexicalCases/tutorial/LexicalCasesOverview"},
  "RefLinkPlain",
  BaseStyle->{"Tutorials"}]], "Tutorials",
 CellID->83658781,ExpressionUUID->"639f3994-117a-4f1c-b341-5a7fde7982d5"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"33efd30e-9bb8-4be6-81ce-ad67e792f3a6"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CountSummaryLowercase",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2022, 1, 19, 12, 55, 39.004344}", 
    "history" -> {"XX", "", "", ""}, "context" -> "LexicalCases`", 
    "keywords" -> {"lowercase to lowercase"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Lexical Cases Symbol", "language" -> "en", "paclet" -> "LexicalCases", 
    "status" -> "None", "summary" -> 
    "CountSummaryLowercase[ds] lowercase matches and merge rows with the same \
match", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "CountSummaryLowercase", "titlemodifier" -> "", "windowtitle" -> 
    "CountSummaryLowercase", "type" -> "Symbol", "uri" -> 
    "LexicalCases/ref/CountSummaryLowercase", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.0 for Mac OS X ARM (64-bit) (December 2, 2021)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"e9ddd211-070e-4581-8e07-533635b6ed64"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[11878, 310, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"03745cc5-4447-48d1-a3e0-fafda9672991",
   CellTags->"PrimaryExamplesSection",
   CellID->1221842913]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 177953, 3468}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[593, 21, 6778, 163, 57, "AnchorBarGrid",ExpressionUUID->"10b6340c-0ce4-4202-820e-0b46010e1354",
 CellID->1],
Cell[7374, 186, 95, 0, 23, "ContextNameCell",ExpressionUUID->"6d8bb9bf-cc3d-40c5-9299-53577aa2d1bd"],
Cell[CellGroupData[{
Cell[7494, 190, 564, 14, 60, "ObjectNameGrid",ExpressionUUID->"01ecb616-285d-49a8-ac65-3d8f51cdfadc"],
Cell[8061, 206, 800, 19, 114, "Usage",ExpressionUUID->"095270e3-28d0-4c9e-97c5-90bacce254ed",
 CellID->1835048001]
}, Open  ]],
Cell[CellGroupData[{
Cell[8898, 230, 1887, 47, 37, "NotesSection",ExpressionUUID->"e2038ec2-e936-42f6-9dcb-b1b7545eee57",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1081800345],
Cell[10788, 279, 963, 25, 70, "Notes",ExpressionUUID->"b656aa5e-8f56-4403-a545-47a778008048",
 CellID->1639098240]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[11878, 310, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"03745cc5-4447-48d1-a3e0-fafda9672991",
 CellTags->"PrimaryExamplesSection",
 CellID->1221842913],
Cell[CellGroupData[{
Cell[13293, 351, 1368, 36, 31, "ExampleSection",ExpressionUUID->"9cc8defd-94d6-49ee-b752-bdf94d9b2db3",
 CellID->1275206177],
Cell[14664, 389, 177, 3, 29, "Input",ExpressionUUID->"87b7a16f-d65d-4d2f-bef5-3fac67dcd852",
 CellID->1087657768],
Cell[CellGroupData[{
Cell[14866, 396, 467, 12, 48, "Input",ExpressionUUID->"8035ea70-4278-4a03-92b7-1909ef4782be",
 CellID->127674473],
Cell[15336, 410, 44273, 794, 79, "Output",ExpressionUUID->"d8c1857d-5f5e-404f-91be-13a4e8ad0ef2",
 CellID->1768640233]
}, Open  ]],
Cell[CellGroupData[{
Cell[59646, 1209, 198, 4, 29, "Input",ExpressionUUID->"74c48725-4f75-4dd9-851b-54ba187534da",
 CellID->469941029],
Cell[59847, 1215, 54278, 1000, 393, "Output",ExpressionUUID->"98f728b8-e3d3-4509-9482-dbcc5b1a638b",
 CellID->221327478]
}, Open  ]],
Cell[114140, 2218, 120, 1, 70, "ExampleText",ExpressionUUID->"e2ff0f4d-9768-4d64-a029-4ded941ee32c",
 CellID->1286674683],
Cell[CellGroupData[{
Cell[114285, 2223, 171, 3, 70, "Input",ExpressionUUID->"4c4209e6-ccb8-4df4-b197-11d48622da6c",
 CellID->1449318360],
Cell[114459, 2228, 56488, 1043, 70, "Output",ExpressionUUID->"d0bcd6e3-52eb-4fd0-9d1d-e646ff269a96",
 CellID->697511554]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[171211, 3282, 1868, 50, 70, "SeeAlsoSection",ExpressionUUID->"f96ab4c4-bfd7-4453-8c09-1569837291cf"],
Cell[173082, 3334, 724, 19, 70, "TechNotesSection",ExpressionUUID->"4e845a95-00f8-4ed6-8b4a-e56d24c46933"]
}, Open  ]],
Cell[173821, 3356, 724, 19, 70, "MoreAboutSection",ExpressionUUID->"dea82828-786a-496f-887a-27002c26e0e9"],
Cell[CellGroupData[{
Cell[174570, 3379, 1083, 31, 70, "RelatedLinksSection",ExpressionUUID->"acaa4829-d722-4a04-bb94-9dcbfa0d524b"],
Cell[175656, 3412, 271, 7, 70, "Tutorials",ExpressionUUID->"639f3994-117a-4f1c-b341-5a7fde7982d5",
 CellID->83658781]
}, Open  ]],
Cell[175942, 3422, 78, 0, 70, "FooterCell",ExpressionUUID->"33efd30e-9bb8-4be6-81ce-ad67e792f3a6"]
}
]
*)

(* End of internal cache information *)

